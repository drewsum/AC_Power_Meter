

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Nov 09 00:37:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1
   178                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   181                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   182  0000                     
   183                           ; Version 1.45 (B)
   184                           ; Generated 30/01/2018 GMT
   185                           ; 
   186                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   187                           ; All rights reserved.
   188                           ; 
   189                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   190                           ; 
   191                           ; Redistribution and use in source and binary forms, with or without modification, are
   192                           ; permitted provided that the following conditions are met:
   193                           ; 
   194                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   195                           ;        conditions and the following disclaimer.
   196                           ; 
   197                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   198                           ;        of conditions and the following disclaimer in the documentation and/or other
   199                           ;        materials provided with the distribution.
   200                           ; 
   201                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   202                           ;        software without specific prior written permission.
   203                           ; 
   204                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   205                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   206                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   207                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   208                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   209                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   210                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   211                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   212                           ; 
   213                           ; 
   214                           ; Code-generator required, PIC18LF67K40 Definitions
   215                           ; 
   216                           ; SFR Addresses
   217  0000                     
   218                           	psect	idataBANK0
   219  0199E2                     __pidataBANK0:
   220                           	opt stack 0
   221                           
   222                           ;initializer for _dimming_period
   223  0199E2  7FEE               	dw	32750
   224                           
   225                           ;initializer for _TRIAC_Firing_Angle
   226                           ;main.c: 72: volatile double FVR_ADC_Result;
   227                           ;main.c: 73: volatile double AVSS_ADC_Result;
   228                           ;main.c: 74: volatile double ADC_Result_Scaling;
   229                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   230                           ;main.c: 76: volatile double POS12_ADC_Result;
   231                           ;main.c: 77: volatile double Temp_ADC_Result;
   232                           ;main.c: 78: volatile double Temp_ADC_Offset = -267.409;
   233                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   234                           ;main.c: 80: volatile double Vpk;
   235                           ;main.c: 81: volatile double Ipk;
   236                           ;main.c: 82: volatile double Imeas;
   237                           ;main.c: 83: double Irms_offset = -0.113;
   238  0199E4  F5C3               	dw	62915
   239  0199E6  3FC8               	dw	16328
   240                           
   241                           	psect	idataBANK1
   242  019A16                     __pidataBANK1:
   243                           	opt stack 0
   244                           
   245                           ;initializer for _next_channel
   246  019A16  3C                 	db	60
   247                           
   248                           	psect	idataBANK2
   249  0196D4                     __pidataBANK2:
   250                           	opt stack 0
   251                           
   252                           ;initializer for getCauseOfResetString@strings
   253  0196D4  B9                 	db	low STR_166
   254  0196D5  FD                 	db	high STR_166
   255  0196D6  39                 	db	low STR_167
   256  0196D7  FE                 	db	high STR_167
   257  0196D8  C9                 	db	low STR_168
   258  0196D9  FD                 	db	high STR_168
   259  0196DA  0A                 	db	low STR_169
   260  0196DB  FD                 	db	high STR_169
   261  0196DC  1C                 	db	low (STR_171+9)
   262  0196DD  F9                 	db	high (STR_171+9)
   263  0196DE  13                 	db	low STR_171
   264  0196DF  F9                 	db	high STR_171
   265  0196E0  F7                 	db	low STR_172
   266  0196E1  FB                 	db	high STR_172
   267  0196E2  A2                 	db	low STR_173
   268  0196E3  FC                 	db	high STR_173
   269  0196E4  76                 	db	low STR_174
   270  0196E5  FC                 	db	high STR_174
   271                           
   272                           ;initializer for getDeviceIDString@F17550
   273  0196E6  25                 	db	low STR_163
   274  0196E7  FF                 	db	high STR_163
   275  0196E8  D7                 	db	low STR_164
   276  0196E9  FE                 	db	high STR_164
   277  0196EA  73                 	db	low STR_68
   278  0196EB  FF                 	db	high STR_68
   279                           
   280                           ;initializer for _Irms_offset
   281  0196EC  6C8B               	dw	27787
   282  0196EE  BDE7               	dw	48615
   283                           
   284                           ;initializer for _Vpk_const
   285                           ;main.c: 72: volatile double FVR_ADC_Result;
   286                           ;main.c: 73: volatile double AVSS_ADC_Result;
   287                           ;main.c: 74: volatile double ADC_Result_Scaling;
   288                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   289                           ;main.c: 76: volatile double POS12_ADC_Result;
   290                           ;main.c: 77: volatile double Temp_ADC_Result;
   291                           ;main.c: 78: volatile double Temp_ADC_Offset = -267.409;
   292  0196F0  B4A4               	dw	46244
   293  0196F2  4329               	dw	17193
   294                           
   295                           ;initializer for _Temp_ADC_Offset
   296  0196F4  B45A               	dw	46170
   297  0196F6  C385               	dw	50053
   298                           
   299                           	psect	mediumconst
   300  00D45E                     __pmediumconst:
   301                           	opt stack 0
   302  00D45E  00                 	db	0
   303  00D45F                     __powers_:
   304                           	opt stack 0
   305  00D45F  0000               	dw	0
   306  00D461  3F80               	dw	16256
   307  00D463  0000               	dw	0
   308  00D465  4120               	dw	16672
   309  00D467  0000               	dw	0
   310  00D469  42C8               	dw	17096
   311  00D46B  0000               	dw	0
   312  00D46D  447A               	dw	17530
   313  00D46F  4000               	dw	16384
   314  00D471  461C               	dw	17948
   315  00D473  5000               	dw	20480
   316  00D475  47C3               	dw	18371
   317  00D477  2400               	dw	9216
   318  00D479  4974               	dw	18804
   319  00D47B  9680               	dw	38528
   320  00D47D  4B18               	dw	19224
   321  00D47F  BC20               	dw	48160
   322  00D481  4CBE               	dw	19646
   323  00D483  6B28               	dw	27432
   324  00D485  4E6E               	dw	20078
   325  00D487  02F9               	dw	761
   326  00D489  5015               	dw	20501
   327  00D48B  78EC               	dw	30956
   328  00D48D  60AD               	dw	24749
   329  00D48F  F2CA               	dw	62154
   330  00D491  7149               	dw	29001
   331  00D493                     __end_of__powers_:
   332                           	opt stack 0
   333  00D493                     __npowers_:
   334                           	opt stack 0
   335  00D493  0000               	dw	0
   336  00D495  3F80               	dw	16256
   337  00D497  CCCD               	dw	52429
   338  00D499  3DCC               	dw	15820
   339  00D49B  D70A               	dw	55050
   340  00D49D  3C23               	dw	15395
   341  00D49F  126F               	dw	4719
   342  00D4A1  3A83               	dw	14979
   343  00D4A3  B717               	dw	46871
   344  00D4A5  38D1               	dw	14545
   345  00D4A7  C5AC               	dw	50604
   346  00D4A9  3727               	dw	14119
   347  00D4AB  37BD               	dw	14269
   348  00D4AD  3586               	dw	13702
   349  00D4AF  BF95               	dw	49045
   350  00D4B1  33D6               	dw	13270
   351  00D4B3  CC77               	dw	52343
   352  00D4B5  322B               	dw	12843
   353  00D4B7  705F               	dw	28767
   354  00D4B9  3089               	dw	12425
   355  00D4BB  E6FF               	dw	59135
   356  00D4BD  2EDB               	dw	11995
   357  00D4BF  E508               	dw	58632
   358  00D4C1  1E3C               	dw	7740
   359  00D4C3  4260               	dw	16992
   360  00D4C5  0DA2               	dw	3490
   361  00D4C7                     __end_of__npowers_:
   362                           	opt stack 0
   363  00D4C7                     _dpowers:
   364                           	opt stack 0
   365  00D4C7  0001               	dw	1
   366  00D4C9  0000               	dw	0
   367  00D4CB  000A               	dw	10
   368  00D4CD  0000               	dw	0
   369  00D4CF  0064               	dw	100
   370  00D4D1  0000               	dw	0
   371  00D4D3  03E8               	dw	1000
   372  00D4D5  0000               	dw	0
   373  00D4D7  2710               	dw	10000
   374  00D4D9  0000               	dw	0
   375  00D4DB  86A0               	dw	34464
   376  00D4DD  0001               	dw	1
   377  00D4DF  4240               	dw	16960
   378  00D4E1  000F               	dw	15
   379  00D4E3  9680               	dw	38528
   380  00D4E5  0098               	dw	152
   381  00D4E7  E100               	dw	57600
   382  00D4E9  05F5               	dw	1525
   383  00D4EB  CA00               	dw	51712
   384  00D4ED  3B9A               	dw	15258
   385  00D4EF                     __end_of_dpowers:
   386                           	opt stack 0
   387  00D4EF                     _hexpowers:
   388                           	opt stack 0
   389  00D4EF  0001               	dw	1
   390  00D4F1  0000               	dw	0
   391  00D4F3  0010               	dw	16
   392  00D4F5  0000               	dw	0
   393  00D4F7  0100               	dw	256
   394  00D4F9  0000               	dw	0
   395  00D4FB  1000               	dw	4096
   396  00D4FD  0000               	dw	0
   397  00D4FF  0000               	dw	0
   398  00D501  0001               	dw	1
   399  00D503  0000               	dw	0
   400  00D505  0010               	dw	16
   401  00D507  0000               	dw	0
   402  00D509  0100               	dw	256
   403  00D50B  0000               	dw	0
   404  00D50D  1000               	dw	4096
   405  00D50F                     __end_of_hexpowers:
   406                           	opt stack 0
   407  00D50F                     _max_FVR_ADC_Result_address:
   408                           	opt stack 0
   409  00D50F  0014               	dw	20
   410  00D511                     __end_of_max_FVR_ADC_Result_address:
   411                           	opt stack 0
   412  00D511                     _max_Temp_ADC_Result_address:
   413                           	opt stack 0
   414  00D511  0010               	dw	16
   415  00D513                     __end_of_max_Temp_ADC_Result_address:
   416                           	opt stack 0
   417  00D513                     _max_POS12_ADC_Result_address:
   418                           	opt stack 0
   419  00D513  000C               	dw	12
   420  00D515                     __end_of_max_POS12_ADC_Result_address:
   421                           	opt stack 0
   422  00D515                     _max_POS3P3_ADC_Result_address:
   423                           	opt stack 0
   424  00D515  0008               	dw	8
   425  00D517                     __end_of_max_POS3P3_ADC_Result_address:
   426                           	opt stack 0
   427  00D517                     _max_Power_address:
   428                           	opt stack 0
   429  00D517  0004               	dw	4
   430  00D519                     __end_of_max_Power_address:
   431                           	opt stack 0
   432  00D519                     _max_Irms_address:
   433                           	opt stack 0
   434  00D519  0000               	dw	0
   435  00D51B                     __end_of_max_Irms_address:
   436                           	opt stack 0
   437  00D51B                     _Total_Energy_address:
   438                           	opt stack 0
   439  00D51B  0018               	dw	24
   440  00D51D                     __end_of_Total_Energy_address:
   441                           	opt stack 0
   442  00D51D                     atan@coeff_a:
   443                           	opt stack 0
   444  00D51D  3C06               	dw	15366
   445  00D51F  4204               	dw	16900
   446  00D521  9F7D               	dw	40829
   447  00D523  426A               	dw	17002
   448  00D525  905C               	dw	36956
   449  00D527  4201               	dw	16897
   450  00D529  4D60               	dw	19808
   451  00D52B  40BB               	dw	16571
   452  00D52D  EC51               	dw	60497
   453  00D52F  3E47               	dw	15943
   454  00D531  8DDE               	dw	36318
   455  00D533  BB1F               	dw	47903
   456  00D535                     __end_ofatan@coeff_a:
   457                           	opt stack 0
   458  00D535                     sin@coeff_a:
   459                           	opt stack 0
   460  00D535  F3EC               	dw	62444
   461  00D537  484A               	dw	18506
   462  00D539  9535               	dw	38197
   463  00D53B  C795               	dw	51093
   464  00D53D  C117               	dw	49431
   465  00D53F  45DC               	dw	17884
   466  00D541  DBFD               	dw	56317
   467  00D543  C36D               	dw	50029
   468  00D545  B372               	dw	45938
   469  00D547  4033               	dw	16435
   470  00D549                     __end_ofsin@coeff_a:
   471                           	opt stack 0
   472  00D549                     atan@coeff_b:
   473                           	opt stack 0
   474  00D549  3C06               	dw	15366
   475  00D54B  4204               	dw	16900
   476  00D54D  59C0               	dw	22976
   477  00D54F  428B               	dw	17035
   478  00D551  0474               	dw	1140
   479  00D553  4244               	dw	16964
   480  00D555  9BF9               	dw	39929
   481  00D557  414F               	dw	16719
   482  00D559  0000               	dw	0
   483  00D55B  3F80               	dw	16256
   484  00D55D                     __end_ofatan@coeff_b:
   485                           	opt stack 0
   486  00D55D                     sin@coeff_b:
   487                           	opt stack 0
   488  00D55D  342B               	dw	13355
   489  00D55F  4801               	dw	18433
   490  00D561  9D7F               	dw	40319
   491  00D563  45B0               	dw	17840
   492  00D565  FFE7               	dw	65511
   493  00D567  42D9               	dw	17113
   494  00D569  0000               	dw	0
   495  00D56B  3F80               	dw	16256
   496  00D56D                     __end_ofsin@coeff_b:
   497                           	opt stack 0
   498  00D56D                     STR_149:
   499  00D56D  4C                 	db	76	;'L'
   500  00D56E  69                 	db	105	;'i'
   501  00D56F  73                 	db	115	;'s'
   502  00D570  74                 	db	116	;'t'
   503  00D571  20                 	db	32
   504  00D572  6F                 	db	111	;'o'
   505  00D573  66                 	db	102	;'f'
   506  00D574  20                 	db	32
   507  00D575  61                 	db	97	;'a'
   508  00D576  6C                 	db	108	;'l'
   509  00D577  6C                 	db	108	;'l'
   510  00D578  20                 	db	32
   511  00D579  73                 	db	115	;'s'
   512  00D57A  75                 	db	117	;'u'
   513  00D57B  70                 	db	112	;'p'
   514  00D57C  70                 	db	112	;'p'
   515  00D57D  6F                 	db	111	;'o'
   516  00D57E  72                 	db	114	;'r'
   517  00D57F  74                 	db	116	;'t'
   518  00D580  65                 	db	101	;'e'
   519  00D581  64                 	db	100	;'d'
   520  00D582  20                 	db	32
   521  00D583  63                 	db	99	;'c'
   522  00D584  6F                 	db	111	;'o'
   523  00D585  6D                 	db	109	;'m'
   524  00D586  6D                 	db	109	;'m'
   525  00D587  61                 	db	97	;'a'
   526  00D588  6E                 	db	110	;'n'
   527  00D589  64                 	db	100	;'d'
   528  00D58A  73                 	db	115	;'s'
   529  00D58B  3A                 	db	58	;':'
   530  00D58C  0A                 	db	10
   531  00D58D  0D                 	db	13
   532  00D58E  44                 	db	68	;'D'
   533  00D58F  65                 	db	101	;'e'
   534  00D590  76                 	db	118	;'v'
   535  00D591  69                 	db	105	;'i'
   536  00D592  63                 	db	99	;'c'
   537  00D593  65                 	db	101	;'e'
   538  00D594  20                 	db	32
   539  00D595  43                 	db	67	;'C'
   540  00D596  6F                 	db	111	;'o'
   541  00D597  6E                 	db	110	;'n'
   542  00D598  74                 	db	116	;'t'
   543  00D599  72                 	db	114	;'r'
   544  00D59A  6F                 	db	111	;'o'
   545  00D59B  6C                 	db	108	;'l'
   546  00D59C  20                 	db	32
   547  00D59D  43                 	db	67	;'C'
   548  00D59E  6F                 	db	111	;'o'
   549  00D59F  6D                 	db	109	;'m'
   550  00D5A0  6D                 	db	109	;'m'
   551  00D5A1  61                 	db	97	;'a'
   552  00D5A2  6E                 	db	110	;'n'
   553  00D5A3  64                 	db	100	;'d'
   554  00D5A4  73                 	db	115	;'s'
   555  00D5A5  3A                 	db	58	;':'
   556  00D5A6  20                 	db	32
   557  00D5A7  43                 	db	67	;'C'
   558  00D5A8  6F                 	db	111	;'o'
   559  00D5A9  6D                 	db	109	;'m'
   560  00D5AA  6D                 	db	109	;'m'
   561  00D5AB  61                 	db	97	;'a'
   562  00D5AC  6E                 	db	110	;'n'
   563  00D5AD  64                 	db	100	;'d'
   564  00D5AE  73                 	db	115	;'s'
   565  00D5AF  20                 	db	32
   566  00D5B0  74                 	db	116	;'t'
   567  00D5B1  6F                 	db	111	;'o'
   568  00D5B2  20                 	db	32
   569  00D5B3  76                 	db	118	;'v'
   570  00D5B4  69                 	db	105	;'i'
   571  00D5B5  65                 	db	101	;'e'
   572  00D5B6  77                 	db	119	;'w'
   573  00D5B7  20                 	db	32
   574  00D5B8  61                 	db	97	;'a'
   575  00D5B9  6E                 	db	110	;'n'
   576  00D5BA  64                 	db	100	;'d'
   577  00D5BB  20                 	db	32
   578  00D5BC  63                 	db	99	;'c'
   579  00D5BD  6F                 	db	111	;'o'
   580  00D5BE  6E                 	db	110	;'n'
   581  00D5BF  74                 	db	116	;'t'
   582  00D5C0  72                 	db	114	;'r'
   583  00D5C1  6F                 	db	111	;'o'
   584  00D5C2  6C                 	db	108	;'l'
   585  00D5C3  20                 	db	32
   586  00D5C4  6C                 	db	108	;'l'
   587  00D5C5  6F                 	db	111	;'o'
   588  00D5C6  77                 	db	119	;'w'
   589  00D5C7  20                 	db	32
   590  00D5C8  6C                 	db	108	;'l'
   591  00D5C9  65                 	db	101	;'e'
   592  00D5CA  76                 	db	118	;'v'
   593  00D5CB  65                 	db	101	;'e'
   594  00D5CC  6C                 	db	108	;'l'
   595  00D5CD  20                 	db	32
   596  00D5CE  73                 	db	115	;'s'
   597  00D5CF  79                 	db	121	;'y'
   598  00D5D0  73                 	db	115	;'s'
   599  00D5D1  74                 	db	116	;'t'
   600  00D5D2  65                 	db	101	;'e'
   601  00D5D3  6D                 	db	109	;'m'
   602  00D5D4  20                 	db	32
   603  00D5D5  66                 	db	102	;'f'
   604  00D5D6  75                 	db	117	;'u'
   605  00D5D7  6E                 	db	110	;'n'
   606  00D5D8  63                 	db	99	;'c'
   607  00D5D9  74                 	db	116	;'t'
   608  00D5DA  69                 	db	105	;'i'
   609  00D5DB  6F                 	db	111	;'o'
   610  00D5DC  6E                 	db	110	;'n'
   611  00D5DD  61                 	db	97	;'a'
   612  00D5DE  6C                 	db	108	;'l'
   613  00D5DF  69                 	db	105	;'i'
   614  00D5E0  74                 	db	116	;'t'
   615  00D5E1  79                 	db	121	;'y'
   616  00D5E2  0A                 	db	10
   617  00D5E3  0D                 	db	13
   618  00D5E4  20                 	db	32
   619  00D5E5  20                 	db	32
   620  00D5E6  20                 	db	32
   621  00D5E7  52                 	db	82	;'R'
   622  00D5E8  65                 	db	101	;'e'
   623  00D5E9  73                 	db	115	;'s'
   624  00D5EA  65                 	db	101	;'e'
   625  00D5EB  74                 	db	116	;'t'
   626  00D5EC  3A                 	db	58	;':'
   627  00D5ED  20                 	db	32
   628  00D5EE  43                 	db	67	;'C'
   629  00D5EF  6C                 	db	108	;'l'
   630  00D5F0  65                 	db	101	;'e'
   631  00D5F1  61                 	db	97	;'a'
   632  00D5F2  72                 	db	114	;'r'
   633  00D5F3  73                 	db	115	;'s'
   634  00D5F4  20                 	db	32
   635  00D5F5  74                 	db	116	;'t'
   636  00D5F6  68                 	db	104	;'h'
   637  00D5F7  65                 	db	101	;'e'
   638  00D5F8  20                 	db	32
   639  00D5F9  74                 	db	116	;'t'
   640  00D5FA  65                 	db	101	;'e'
   641  00D5FB  72                 	db	114	;'r'
   642  00D5FC  6D                 	db	109	;'m'
   643  00D5FD  69                 	db	105	;'i'
   644  00D5FE  6E                 	db	110	;'n'
   645  00D5FF  61                 	db	97	;'a'
   646  00D600  6C                 	db	108	;'l'
   647  00D601  20                 	db	32
   648  00D602  61                 	db	97	;'a'
   649  00D603  6E                 	db	110	;'n'
   650  00D604  64                 	db	100	;'d'
   651  00D605  20                 	db	32
   652  00D606  72                 	db	114	;'r'
   653  00D607  65                 	db	101	;'e'
   654  00D608  73                 	db	115	;'s'
   655  00D609  65                 	db	101	;'e'
   656  00D60A  74                 	db	116	;'t'
   657  00D60B  73                 	db	115	;'s'
   658  00D60C  20                 	db	32
   659  00D60D  74                 	db	116	;'t'
   660  00D60E  68                 	db	104	;'h'
   661  00D60F  65                 	db	101	;'e'
   662  00D610  20                 	db	32
   663  00D611  6D                 	db	109	;'m'
   664  00D612  69                 	db	105	;'i'
   665  00D613  63                 	db	99	;'c'
   666  00D614  72                 	db	114	;'r'
   667  00D615  6F                 	db	111	;'o'
   668  00D616  0A                 	db	10
   669  00D617  0D                 	db	13
   670  00D618  20                 	db	32
   671  00D619  20                 	db	32
   672  00D61A  20                 	db	32
   673  00D61B  43                 	db	67	;'C'
   674  00D61C  6C                 	db	108	;'l'
   675  00D61D  65                 	db	101	;'e'
   676  00D61E  61                 	db	97	;'a'
   677  00D61F  72                 	db	114	;'r'
   678  00D620  3A                 	db	58	;':'
   679  00D621  20                 	db	32
   680  00D622  43                 	db	67	;'C'
   681  00D623  6C                 	db	108	;'l'
   682  00D624  65                 	db	101	;'e'
   683  00D625  61                 	db	97	;'a'
   684  00D626  72                 	db	114	;'r'
   685  00D627  73                 	db	115	;'s'
   686  00D628  20                 	db	32
   687  00D629  74                 	db	116	;'t'
   688  00D62A  68                 	db	104	;'h'
   689  00D62B  65                 	db	101	;'e'
   690  00D62C  20                 	db	32
   691  00D62D  74                 	db	116	;'t'
   692  00D62E  65                 	db	101	;'e'
   693  00D62F  72                 	db	114	;'r'
   694  00D630  6D                 	db	109	;'m'
   695  00D631  69                 	db	105	;'i'
   696  00D632  6E                 	db	110	;'n'
   697  00D633  61                 	db	97	;'a'
   698  00D634  6C                 	db	108	;'l'
   699  00D635  20                 	db	32
   700  00D636  62                 	db	98	;'b'
   701  00D637  75                 	db	117	;'u'
   702  00D638  74                 	db	116	;'t'
   703  00D639  20                 	db	32
   704  00D63A  64                 	db	100	;'d'
   705  00D63B  6F                 	db	111	;'o'
   706  00D63C  65                 	db	101	;'e'
   707  00D63D  73                 	db	115	;'s'
   708  00D63E  6E                 	db	110	;'n'
   709  00D63F  27                 	db	39
   710  00D640  74                 	db	116	;'t'
   711  00D641  20                 	db	32
   712  00D642  72                 	db	114	;'r'
   713  00D643  65                 	db	101	;'e'
   714  00D644  73                 	db	115	;'s'
   715  00D645  65                 	db	101	;'e'
   716  00D646  74                 	db	116	;'t'
   717  00D647  20                 	db	32
   718  00D648  74                 	db	116	;'t'
   719  00D649  68                 	db	104	;'h'
   720  00D64A  65                 	db	101	;'e'
   721  00D64B  20                 	db	32
   722  00D64C  6D                 	db	109	;'m'
   723  00D64D  69                 	db	105	;'i'
   724  00D64E  63                 	db	99	;'c'
   725  00D64F  72                 	db	114	;'r'
   726  00D650  6F                 	db	111	;'o'
   727  00D651  0A                 	db	10
   728  00D652  0D                 	db	13
   729  00D653  20                 	db	32
   730  00D654  20                 	db	32
   731  00D655  20                 	db	32
   732  00D656  43                 	db	67	;'C'
   733  00D657  61                 	db	97	;'a'
   734  00D658  75                 	db	117	;'u'
   735  00D659  73                 	db	115	;'s'
   736  00D65A  65                 	db	101	;'e'
   737  00D65B  20                 	db	32
   738  00D65C  6F                 	db	111	;'o'
   739  00D65D  66                 	db	102	;'f'
   740  00D65E  20                 	db	32
   741  00D65F  52                 	db	82	;'R'
   742  00D660  65                 	db	101	;'e'
   743  00D661  73                 	db	115	;'s'
   744  00D662  65                 	db	101	;'e'
   745  00D663  74                 	db	116	;'t'
   746  00D664  3F                 	db	63	;'?'
   747  00D665  3A                 	db	58	;':'
   748  00D666  20                 	db	32
   749  00D667  52                 	db	82	;'R'
   750  00D668  65                 	db	101	;'e'
   751  00D669  74                 	db	116	;'t'
   752  00D66A  75                 	db	117	;'u'
   753  00D66B  72                 	db	114	;'r'
   754  00D66C  6E                 	db	110	;'n'
   755  00D66D  73                 	db	115	;'s'
   756  00D66E  20                 	db	32
   757  00D66F  74                 	db	116	;'t'
   758  00D670  68                 	db	104	;'h'
   759  00D671  65                 	db	101	;'e'
   760  00D672  20                 	db	32
   761  00D673  63                 	db	99	;'c'
   762  00D674  61                 	db	97	;'a'
   763  00D675  75                 	db	117	;'u'
   764  00D676  73                 	db	115	;'s'
   765  00D677  65                 	db	101	;'e'
   766  00D678  20                 	db	32
   767  00D679  6F                 	db	111	;'o'
   768  00D67A  66                 	db	102	;'f'
   769  00D67B  20                 	db	32
   770  00D67C  74                 	db	116	;'t'
   771  00D67D  68                 	db	104	;'h'
   772  00D67E  65                 	db	101	;'e'
   773  00D67F  20                 	db	32
   774  00D680  6D                 	db	109	;'m'
   775  00D681  6F                 	db	111	;'o'
   776  00D682  73                 	db	115	;'s'
   777  00D683  74                 	db	116	;'t'
   778  00D684  20                 	db	32
   779  00D685  72                 	db	114	;'r'
   780  00D686  65                 	db	101	;'e'
   781  00D687  63                 	db	99	;'c'
   782  00D688  65                 	db	101	;'e'
   783  00D689  6E                 	db	110	;'n'
   784  00D68A  74                 	db	116	;'t'
   785  00D68B  20                 	db	32
   786  00D68C  64                 	db	100	;'d'
   787  00D68D  65                 	db	101	;'e'
   788  00D68E  76                 	db	118	;'v'
   789  00D68F  69                 	db	105	;'i'
   790  00D690  63                 	db	99	;'c'
   791  00D691  65                 	db	101	;'e'
   792  00D692  20                 	db	32
   793  00D693  72                 	db	114	;'r'
   794  00D694  65                 	db	101	;'e'
   795  00D695  73                 	db	115	;'s'
   796  00D696  65                 	db	101	;'e'
   797  00D697  74                 	db	116	;'t'
   798  00D698  0A                 	db	10
   799  00D699  0D                 	db	13
   800  00D69A  20                 	db	32
   801  00D69B  20                 	db	32
   802  00D69C  20                 	db	32
   803  00D69D  2A                 	db	42
   804  00D69E  49                 	db	73	;'I'
   805  00D69F  44                 	db	68	;'D'
   806  00D6A0  4E                 	db	78	;'N'
   807  00D6A1  3F                 	db	63	;'?'
   808  00D6A2  3A                 	db	58	;':'
   809  00D6A3  20                 	db	32
   810  00D6A4  52                 	db	82	;'R'
   811  00D6A5  65                 	db	101	;'e'
   812  00D6A6  74                 	db	116	;'t'
   813  00D6A7  75                 	db	117	;'u'
   814  00D6A8  72                 	db	114	;'r'
   815  00D6A9  6E                 	db	110	;'n'
   816  00D6AA  73                 	db	115	;'s'
   817  00D6AB  20                 	db	32
   818  00D6AC  64                 	db	100	;'d'
   819  00D6AD  65                 	db	101	;'e'
   820  00D6AE  76                 	db	118	;'v'
   821  00D6AF  69                 	db	105	;'i'
   822  00D6B0  63                 	db	99	;'c'
   823  00D6B1  65                 	db	101	;'e'
   824  00D6B2  20                 	db	32
   825  00D6B3  69                 	db	105	;'i'
   826  00D6B4  64                 	db	100	;'d'
   827  00D6B5  65                 	db	101	;'e'
   828  00D6B6  6E                 	db	110	;'n'
   829  00D6B7  74                 	db	116	;'t'
   830  00D6B8  69                 	db	105	;'i'
   831  00D6B9  66                 	db	102	;'f'
   832  00D6BA  69                 	db	105	;'i'
   833  00D6BB  63                 	db	99	;'c'
   834  00D6BC  61                 	db	97	;'a'
   835  00D6BD  74                 	db	116	;'t'
   836  00D6BE  69                 	db	105	;'i'
   837  00D6BF  6F                 	db	111	;'o'
   838  00D6C0  6E                 	db	110	;'n'
   839  00D6C1  20                 	db	32
   840  00D6C2  73                 	db	115	;'s'
   841  00D6C3  74                 	db	116	;'t'
   842  00D6C4  72                 	db	114	;'r'
   843  00D6C5  69                 	db	105	;'i'
   844  00D6C6  6E                 	db	110	;'n'
   845  00D6C7  67                 	db	103	;'g'
   846  00D6C8  0A                 	db	10
   847  00D6C9  0D                 	db	13
   848  00D6CA  20                 	db	32
   849  00D6CB  20                 	db	32
   850  00D6CC  20                 	db	32
   851  00D6CD  44                 	db	68	;'D'
   852  00D6CE  65                 	db	101	;'e'
   853  00D6CF  76                 	db	118	;'v'
   854  00D6D0  69                 	db	105	;'i'
   855  00D6D1  63                 	db	99	;'c'
   856  00D6D2  65                 	db	101	;'e'
   857  00D6D3  20                 	db	32
   858  00D6D4  4F                 	db	79	;'O'
   859  00D6D5  6E                 	db	110	;'n'
   860  00D6D6  20                 	db	32
   861  00D6D7  54                 	db	84	;'T'
   862  00D6D8  69                 	db	105	;'i'
   863  00D6D9  6D                 	db	109	;'m'
   864  00D6DA  65                 	db	101	;'e'
   865  00D6DB  3F                 	db	63	;'?'
   866  00D6DC  3A                 	db	58	;':'
   867  00D6DD  20                 	db	32
   868  00D6DE  52                 	db	82	;'R'
   869  00D6DF  65                 	db	101	;'e'
   870  00D6E0  74                 	db	116	;'t'
   871  00D6E1  75                 	db	117	;'u'
   872  00D6E2  72                 	db	114	;'r'
   873  00D6E3  6E                 	db	110	;'n'
   874  00D6E4  73                 	db	115	;'s'
   875  00D6E5  20                 	db	32
   876  00D6E6  64                 	db	100	;'d'
   877  00D6E7  65                 	db	101	;'e'
   878  00D6E8  76                 	db	118	;'v'
   879  00D6E9  69                 	db	105	;'i'
   880  00D6EA  63                 	db	99	;'c'
   881  00D6EB  65                 	db	101	;'e'
   882  00D6EC  20                 	db	32
   883  00D6ED  6F                 	db	111	;'o'
   884  00D6EE  6E                 	db	110	;'n'
   885  00D6EF  20                 	db	32
   886  00D6F0  74                 	db	116	;'t'
   887  00D6F1  69                 	db	105	;'i'
   888  00D6F2  6D                 	db	109	;'m'
   889  00D6F3  65                 	db	101	;'e'
   890  00D6F4  20                 	db	32
   891  00D6F5  73                 	db	115	;'s'
   892  00D6F6  69                 	db	105	;'i'
   893  00D6F7  6E                 	db	110	;'n'
   894  00D6F8  63                 	db	99	;'c'
   895  00D6F9  65                 	db	101	;'e'
   896  00D6FA  20                 	db	32
   897  00D6FB  6C                 	db	108	;'l'
   898  00D6FC  61                 	db	97	;'a'
   899  00D6FD  73                 	db	115	;'s'
   900  00D6FE  74                 	db	116	;'t'
   901  00D6FF  20                 	db	32
   902  00D700  64                 	db	100	;'d'
   903  00D701  65                 	db	101	;'e'
   904  00D702  76                 	db	118	;'v'
   905  00D703  69                 	db	105	;'i'
   906  00D704  63                 	db	99	;'c'
   907  00D705  65                 	db	101	;'e'
   908  00D706  20                 	db	32
   909  00D707  72                 	db	114	;'r'
   910  00D708  65                 	db	101	;'e'
   911  00D709  73                 	db	115	;'s'
   912  00D70A  65                 	db	101	;'e'
   913  00D70B  74                 	db	116	;'t'
   914  00D70C  0A                 	db	10
   915  00D70D  0D                 	db	13
   916  00D70E  20                 	db	32
   917  00D70F  20                 	db	32
   918  00D710  20                 	db	32
   919  00D711  44                 	db	68	;'D'
   920  00D712  65                 	db	101	;'e'
   921  00D713  76                 	db	118	;'v'
   922  00D714  69                 	db	105	;'i'
   923  00D715  63                 	db	99	;'c'
   924  00D716  65                 	db	101	;'e'
   925  00D717  20                 	db	32
   926  00D718  49                 	db	73	;'I'
   927  00D719  44                 	db	68	;'D'
   928  00D71A  3F                 	db	63	;'?'
   929  00D71B  3A                 	db	58	;':'
   930  00D71C  20                 	db	32
   931  00D71D  52                 	db	82	;'R'
   932  00D71E  65                 	db	101	;'e'
   933  00D71F  74                 	db	116	;'t'
   934  00D720  75                 	db	117	;'u'
   935  00D721  72                 	db	114	;'r'
   936  00D722  6E                 	db	110	;'n'
   937  00D723  73                 	db	115	;'s'
   938  00D724  20                 	db	32
   939  00D725  64                 	db	100	;'d'
   940  00D726  65                 	db	101	;'e'
   941  00D727  76                 	db	118	;'v'
   942  00D728  69                 	db	105	;'i'
   943  00D729  63                 	db	99	;'c'
   944  00D72A  65                 	db	101	;'e'
   945  00D72B  20                 	db	32
   946  00D72C  49                 	db	73	;'I'
   947  00D72D  44                 	db	68	;'D'
   948  00D72E  20                 	db	32
   949  00D72F  61                 	db	97	;'a'
   950  00D730  73                 	db	115	;'s'
   951  00D731  20                 	db	32
   952  00D732  70                 	db	112	;'p'
   953  00D733  72                 	db	114	;'r'
   954  00D734  65                 	db	101	;'e'
   955  00D735  2D                 	db	45
   956  00D736  70                 	db	112	;'p'
   957  00D737  72                 	db	114	;'r'
   958  00D738  6F                 	db	111	;'o'
   959  00D739  67                 	db	103	;'g'
   960  00D73A  72                 	db	114	;'r'
   961  00D73B  61                 	db	97	;'a'
   962  00D73C  6D                 	db	109	;'m'
   963  00D73D  6D                 	db	109	;'m'
   964  00D73E  65                 	db	101	;'e'
   965  00D73F  64                 	db	100	;'d'
   966  00D740  20                 	db	32
   967  00D741  69                 	db	105	;'i'
   968  00D742  6E                 	db	110	;'n'
   969  00D743  20                 	db	32
   970  00D744  66                 	db	102	;'f'
   971  00D745  6C                 	db	108	;'l'
   972  00D746  61                 	db	97	;'a'
   973  00D747  73                 	db	115	;'s'
   974  00D748  68                 	db	104	;'h'
   975  00D749  20                 	db	32
   976  00D74A  6D                 	db	109	;'m'
   977  00D74B  65                 	db	101	;'e'
   978  00D74C  6D                 	db	109	;'m'
   979  00D74D  6F                 	db	111	;'o'
   980  00D74E  72                 	db	114	;'r'
   981  00D74F  79                 	db	121	;'y'
   982  00D750  0A                 	db	10
   983  00D751  0D                 	db	13
   984  00D752  20                 	db	32
   985  00D753  20                 	db	32
   986  00D754  20                 	db	32
   987  00D755  52                 	db	82	;'R'
   988  00D756  65                 	db	101	;'e'
   989  00D757  76                 	db	118	;'v'
   990  00D758  69                 	db	105	;'i'
   991  00D759  73                 	db	115	;'s'
   992  00D75A  69                 	db	105	;'i'
   993  00D75B  6F                 	db	111	;'o'
   994  00D75C  6E                 	db	110	;'n'
   995  00D75D  20                 	db	32
   996  00D75E  49                 	db	73	;'I'
   997  00D75F  44                 	db	68	;'D'
   998  00D760  3F                 	db	63	;'?'
   999  00D761  3A                 	db	58	;':'
  1000  00D762  20                 	db	32
  1001  00D763  52                 	db	82	;'R'
  1002  00D764  65                 	db	101	;'e'
  1003  00D765  74                 	db	116	;'t'
  1004  00D766  75                 	db	117	;'u'
  1005  00D767  72                 	db	114	;'r'
  1006  00D768  6E                 	db	110	;'n'
  1007  00D769  73                 	db	115	;'s'
  1008  00D76A  20                 	db	32
  1009  00D76B  64                 	db	100	;'d'
  1010  00D76C  65                 	db	101	;'e'
  1011  00D76D  76                 	db	118	;'v'
  1012  00D76E  69                 	db	105	;'i'
  1013  00D76F  63                 	db	99	;'c'
  1014  00D770  65                 	db	101	;'e'
  1015  00D771  20                 	db	32
  1016  00D772  73                 	db	115	;'s'
  1017  00D773  69                 	db	105	;'i'
  1018  00D774  6C                 	db	108	;'l'
  1019  00D775  69                 	db	105	;'i'
  1020  00D776  63                 	db	99	;'c'
  1021  00D777  6F                 	db	111	;'o'
  1022  00D778  6E                 	db	110	;'n'
  1023  00D779  20                 	db	32
  1024  00D77A  72                 	db	114	;'r'
  1025  00D77B  65                 	db	101	;'e'
  1026  00D77C  76                 	db	118	;'v'
  1027  00D77D  69                 	db	105	;'i'
  1028  00D77E  73                 	db	115	;'s'
  1029  00D77F  69                 	db	105	;'i'
  1030  00D780  6F                 	db	111	;'o'
  1031  00D781  6E                 	db	110	;'n'
  1032  00D782  20                 	db	32
  1033  00D783  49                 	db	73	;'I'
  1034  00D784  44                 	db	68	;'D'
  1035  00D785  20                 	db	32
  1036  00D786  61                 	db	97	;'a'
  1037  00D787  73                 	db	115	;'s'
  1038  00D788  20                 	db	32
  1039  00D789  70                 	db	112	;'p'
  1040  00D78A  72                 	db	114	;'r'
  1041  00D78B  65                 	db	101	;'e'
  1042  00D78C  2D                 	db	45
  1043  00D78D  70                 	db	112	;'p'
  1044  00D78E  72                 	db	114	;'r'
  1045  00D78F  6F                 	db	111	;'o'
  1046  00D790  67                 	db	103	;'g'
  1047  00D791  72                 	db	114	;'r'
  1048  00D792  61                 	db	97	;'a'
  1049  00D793  6D                 	db	109	;'m'
  1050  00D794  6D                 	db	109	;'m'
  1051  00D795  65                 	db	101	;'e'
  1052  00D796  64                 	db	100	;'d'
  1053  00D797  20                 	db	32
  1054  00D798  69                 	db	105	;'i'
  1055  00D799  6E                 	db	110	;'n'
  1056  00D79A  20                 	db	32
  1057  00D79B  66                 	db	102	;'f'
  1058  00D79C  6C                 	db	108	;'l'
  1059  00D79D  61                 	db	97	;'a'
  1060  00D79E  73                 	db	115	;'s'
  1061  00D79F  68                 	db	104	;'h'
  1062  00D7A0  20                 	db	32
  1063  00D7A1  6D                 	db	109	;'m'
  1064  00D7A2  65                 	db	101	;'e'
  1065  00D7A3  6D                 	db	109	;'m'
  1066  00D7A4  6F                 	db	111	;'o'
  1067  00D7A5  72                 	db	114	;'r'
  1068  00D7A6  79                 	db	121	;'y'
  1069  00D7A7  0A                 	db	10
  1070  00D7A8  0D                 	db	13
  1071  00D7A9  20                 	db	32
  1072  00D7AA  20                 	db	32
  1073  00D7AB  20                 	db	32
  1074  00D7AC  55                 	db	85	;'U'
  1075  00D7AD  73                 	db	115	;'s'
  1076  00D7AE  65                 	db	101	;'e'
  1077  00D7AF  72                 	db	114	;'r'
  1078  00D7B0  20                 	db	32
  1079  00D7B1  49                 	db	73	;'I'
  1080  00D7B2  44                 	db	68	;'D'
  1081  00D7B3  73                 	db	115	;'s'
  1082  00D7B4  3F                 	db	63	;'?'
  1083  00D7B5  3A                 	db	58	;':'
  1084  00D7B6  20                 	db	32
  1085  00D7B7  52                 	db	82	;'R'
  1086  00D7B8  65                 	db	101	;'e'
  1087  00D7B9  74                 	db	116	;'t'
  1088  00D7BA  75                 	db	117	;'u'
  1089  00D7BB  72                 	db	114	;'r'
  1090  00D7BC  6E                 	db	110	;'n'
  1091  00D7BD  73                 	db	115	;'s'
  1092  00D7BE  20                 	db	32
  1093  00D7BF  61                 	db	97	;'a'
  1094  00D7C0  20                 	db	32
  1095  00D7C1  6C                 	db	108	;'l'
  1096  00D7C2  69                 	db	105	;'i'
  1097  00D7C3  73                 	db	115	;'s'
  1098  00D7C4  74                 	db	116	;'t'
  1099  00D7C5  20                 	db	32
  1100  00D7C6  6F                 	db	111	;'o'
  1101  00D7C7  66                 	db	102	;'f'
  1102  00D7C8  20                 	db	32
  1103  00D7C9  75                 	db	117	;'u'
  1104  00D7CA  73                 	db	115	;'s'
  1105  00D7CB  65                 	db	101	;'e'
  1106  00D7CC  72                 	db	114	;'r'
  1107  00D7CD  20                 	db	32
  1108  00D7CE  49                 	db	73	;'I'
  1109  00D7CF  44                 	db	68	;'D'
  1110  00D7D0  73                 	db	115	;'s'
  1111  00D7D1  20                 	db	32
  1112  00D7D2  28                 	db	40
  1113  00D7D3  64                 	db	100	;'d'
  1114  00D7D4  69                 	db	105	;'i'
  1115  00D7D5  73                 	db	115	;'s'
  1116  00D7D6  70                 	db	112	;'p'
  1117  00D7D7  6C                 	db	108	;'l'
  1118  00D7D8  61                 	db	97	;'a'
  1119  00D7D9  79                 	db	121	;'y'
  1120  00D7DA  65                 	db	101	;'e'
  1121  00D7DB  64                 	db	100	;'d'
  1122  00D7DC  20                 	db	32
  1123  00D7DD  69                 	db	105	;'i'
  1124  00D7DE  6E                 	db	110	;'n'
  1125  00D7DF  20                 	db	32
  1126  00D7E0  68                 	db	104	;'h'
  1127  00D7E1  65                 	db	101	;'e'
  1128  00D7E2  78                 	db	120	;'x'
  1129  00D7E3  29                 	db	41
  1130  00D7E4  20                 	db	32
  1131  00D7E5  61                 	db	97	;'a'
  1132  00D7E6  73                 	db	115	;'s'
  1133  00D7E7  20                 	db	32
  1134  00D7E8  73                 	db	115	;'s'
  1135  00D7E9  74                 	db	116	;'t'
  1136  00D7EA  6F                 	db	111	;'o'
  1137  00D7EB  72                 	db	114	;'r'
  1138  00D7EC  65                 	db	101	;'e'
  1139  00D7ED  64                 	db	100	;'d'
  1140  00D7EE  20                 	db	32
  1141  00D7EF  69                 	db	105	;'i'
  1142  00D7F0  6E                 	db	110	;'n'
  1143  00D7F1  20                 	db	32
  1144  00D7F2  66                 	db	102	;'f'
  1145  00D7F3  6C                 	db	108	;'l'
  1146  00D7F4  61                 	db	97	;'a'
  1147  00D7F5  73                 	db	115	;'s'
  1148  00D7F6  68                 	db	104	;'h'
  1149  00D7F7  20                 	db	32
  1150  00D7F8  6D                 	db	109	;'m'
  1151  00D7F9  65                 	db	101	;'e'
  1152  00D7FA  6D                 	db	109	;'m'
  1153  00D7FB  6F                 	db	111	;'o'
  1154  00D7FC  72                 	db	114	;'r'
  1155  00D7FD  79                 	db	121	;'y'
  1156  00D7FE  0A                 	db	10
  1157  00D7FF  0D                 	db	13
  1158  00D800  20                 	db	32
  1159  00D801  20                 	db	32
  1160  00D802  20                 	db	32
  1161  00D803  41                 	db	65	;'A'
  1162  00D804  44                 	db	68	;'D'
  1163  00D805  43                 	db	67	;'C'
  1164  00D806  20                 	db	32
  1165  00D807  45                 	db	69	;'E'
  1166  00D808  72                 	db	114	;'r'
  1167  00D809  72                 	db	114	;'r'
  1168  00D80A  6F                 	db	111	;'o'
  1169  00D80B  72                 	db	114	;'r'
  1170  00D80C  3F                 	db	63	;'?'
  1171  00D80D  3A                 	db	58	;':'
  1172  00D80E  20                 	db	32
  1173  00D80F  52                 	db	82	;'R'
  1174  00D810  65                 	db	101	;'e'
  1175  00D811  74                 	db	116	;'t'
  1176  00D812  75                 	db	117	;'u'
  1177  00D813  72                 	db	114	;'r'
  1178  00D814  6E                 	db	110	;'n'
  1179  00D815  73                 	db	115	;'s'
  1180  00D816  20                 	db	32
  1181  00D817  74                 	db	116	;'t'
  1182  00D818  68                 	db	104	;'h'
  1183  00D819  65                 	db	101	;'e'
  1184  00D81A  20                 	db	32
  1185  00D81B  63                 	db	99	;'c'
  1186  00D81C  61                 	db	97	;'a'
  1187  00D81D  75                 	db	117	;'u'
  1188  00D81E  73                 	db	115	;'s'
  1189  00D81F  65                 	db	101	;'e'
  1190  00D820  20                 	db	32
  1191  00D821  6F                 	db	111	;'o'
  1192  00D822  66                 	db	102	;'f'
  1193  00D823  20                 	db	32
  1194  00D824  61                 	db	97	;'a'
  1195  00D825  6E                 	db	110	;'n'
  1196  00D826  20                 	db	32
  1197  00D827  41                 	db	65	;'A'
  1198  00D828  44                 	db	68	;'D'
  1199  00D829  43                 	db	67	;'C'
  1200  00D82A  20                 	db	32
  1201  00D82B  65                 	db	101	;'e'
  1202  00D82C  72                 	db	114	;'r'
  1203  00D82D  72                 	db	114	;'r'
  1204  00D82E  6F                 	db	111	;'o'
  1205  00D82F  72                 	db	114	;'r'
  1206  00D830  20                 	db	32
  1207  00D831  69                 	db	105	;'i'
  1208  00D832  66                 	db	102	;'f'
  1209  00D833  20                 	db	32
  1210  00D834  61                 	db	97	;'a'
  1211  00D835  6E                 	db	110	;'n'
  1212  00D836  20                 	db	32
  1213  00D837  65                 	db	101	;'e'
  1214  00D838  72                 	db	114	;'r'
  1215  00D839  72                 	db	114	;'r'
  1216  00D83A  6F                 	db	111	;'o'
  1217  00D83B  72                 	db	114	;'r'
  1218  00D83C  20                 	db	32
  1219  00D83D  6F                 	db	111	;'o'
  1220  00D83E  63                 	db	99	;'c'
  1221  00D83F  63                 	db	99	;'c'
  1222  00D840  75                 	db	117	;'u'
  1223  00D841  72                 	db	114	;'r'
  1224  00D842  72                 	db	114	;'r'
  1225  00D843  65                 	db	101	;'e'
  1226  00D844  64                 	db	100	;'d'
  1227  00D845  0A                 	db	10
  1228  00D846  0D                 	db	13
  1229  00D847  20                 	db	32
  1230  00D848  20                 	db	32
  1231  00D849  20                 	db	32
  1232  00D84A  43                 	db	67	;'C'
  1233  00D84B  6C                 	db	108	;'l'
  1234  00D84C  65                 	db	101	;'e'
  1235  00D84D  61                 	db	97	;'a'
  1236  00D84E  72                 	db	114	;'r'
  1237  00D84F  20                 	db	32
  1238  00D850  41                 	db	65	;'A'
  1239  00D851  44                 	db	68	;'D'
  1240  00D852  43                 	db	67	;'C'
  1241  00D853  20                 	db	32
  1242  00D854  45                 	db	69	;'E'
  1243  00D855  72                 	db	114	;'r'
  1244  00D856  72                 	db	114	;'r'
  1245  00D857  6F                 	db	111	;'o'
  1246  00D858  72                 	db	114	;'r'
  1247  00D859  3A                 	db	58	;':'
  1248  00D85A  20                 	db	32
  1249  00D85B  43                 	db	67	;'C'
  1250  00D85C  6C                 	db	108	;'l'
  1251  00D85D  65                 	db	101	;'e'
  1252  00D85E  61                 	db	97	;'a'
  1253  00D85F  72                 	db	114	;'r'
  1254  00D860  73                 	db	115	;'s'
  1255  00D861  20                 	db	32
  1256  00D862  74                 	db	116	;'t'
  1257  00D863  68                 	db	104	;'h'
  1258  00D864  65                 	db	101	;'e'
  1259  00D865  20                 	db	32
  1260  00D866  41                 	db	65	;'A'
  1261  00D867  44                 	db	68	;'D'
  1262  00D868  43                 	db	67	;'C'
  1263  00D869  20                 	db	32
  1264  00D86A  65                 	db	101	;'e'
  1265  00D86B  72                 	db	114	;'r'
  1266  00D86C  72                 	db	114	;'r'
  1267  00D86D  6F                 	db	111	;'o'
  1268  00D86E  72                 	db	114	;'r'
  1269  00D86F  20                 	db	32
  1270  00D870  61                 	db	97	;'a'
  1271  00D871  6E                 	db	110	;'n'
  1272  00D872  64                 	db	100	;'d'
  1273  00D873  20                 	db	32
  1274  00D874  72                 	db	114	;'r'
  1275  00D875  65                 	db	101	;'e'
  1276  00D876  73                 	db	115	;'s'
  1277  00D877  75                 	db	117	;'u'
  1278  00D878  6D                 	db	109	;'m'
  1279  00D879  65                 	db	101	;'e'
  1280  00D87A  73                 	db	115	;'s'
  1281  00D87B  20                 	db	32
  1282  00D87C  41                 	db	65	;'A'
  1283  00D87D  44                 	db	68	;'D'
  1284  00D87E  43                 	db	67	;'C'
  1285  00D87F  20                 	db	32
  1286  00D880  63                 	db	99	;'c'
  1287  00D881  6F                 	db	111	;'o'
  1288  00D882  6E                 	db	110	;'n'
  1289  00D883  76                 	db	118	;'v'
  1290  00D884  65                 	db	101	;'e'
  1291  00D885  72                 	db	114	;'r'
  1292  00D886  73                 	db	115	;'s'
  1293  00D887  69                 	db	105	;'i'
  1294  00D888  6F                 	db	111	;'o'
  1295  00D889  6E                 	db	110	;'n'
  1296  00D88A  73                 	db	115	;'s'
  1297  00D88B  0A                 	db	10
  1298  00D88C  0D                 	db	13
  1299  00D88D  20                 	db	32
  1300  00D88E  20                 	db	32
  1301  00D88F  20                 	db	32
  1302  00D890  43                 	db	67	;'C'
  1303  00D891  6C                 	db	108	;'l'
  1304  00D892  65                 	db	101	;'e'
  1305  00D893  61                 	db	97	;'a'
  1306  00D894  72                 	db	114	;'r'
  1307  00D895  20                 	db	32
  1308  00D896  4D                 	db	77	;'M'
  1309  00D897  61                 	db	97	;'a'
  1310  00D898  78                 	db	120	;'x'
  1311  00D899  20                 	db	32
  1312  00D89A  56                 	db	86	;'V'
  1313  00D89B  61                 	db	97	;'a'
  1314  00D89C  6C                 	db	108	;'l'
  1315  00D89D  75                 	db	117	;'u'
  1316  00D89E  65                 	db	101	;'e'
  1317  00D89F  73                 	db	115	;'s'
  1318  00D8A0  3A                 	db	58	;':'
  1319  00D8A1  20                 	db	32
  1320  00D8A2  45                 	db	69	;'E'
  1321  00D8A3  72                 	db	114	;'r'
  1322  00D8A4  61                 	db	97	;'a'
  1323  00D8A5  73                 	db	115	;'s'
  1324  00D8A6  65                 	db	101	;'e'
  1325  00D8A7  73                 	db	115	;'s'
  1326  00D8A8  20                 	db	32
  1327  00D8A9  6D                 	db	109	;'m'
  1328  00D8AA  61                 	db	97	;'a'
  1329  00D8AB  78                 	db	120	;'x'
  1330  00D8AC  69                 	db	105	;'i'
  1331  00D8AD  6D                 	db	109	;'m'
  1332  00D8AE  75                 	db	117	;'u'
  1333  00D8AF  6D                 	db	109	;'m'
  1334  00D8B0  20                 	db	32
  1335  00D8B1  72                 	db	114	;'r'
  1336  00D8B2  65                 	db	101	;'e'
  1337  00D8B3  63                 	db	99	;'c'
  1338  00D8B4  6F                 	db	111	;'o'
  1339  00D8B5  72                 	db	114	;'r'
  1340  00D8B6  64                 	db	100	;'d'
  1341  00D8B7  65                 	db	101	;'e'
  1342  00D8B8  64                 	db	100	;'d'
  1343  00D8B9  20                 	db	32
  1344  00D8BA  76                 	db	118	;'v'
  1345  00D8BB  61                 	db	97	;'a'
  1346  00D8BC  6C                 	db	108	;'l'
  1347  00D8BD  75                 	db	117	;'u'
  1348  00D8BE  65                 	db	101	;'e'
  1349  00D8BF  73                 	db	115	;'s'
  1350  00D8C0  20                 	db	32
  1351  00D8C1  66                 	db	102	;'f'
  1352  00D8C2  72                 	db	114	;'r'
  1353  00D8C3  6F                 	db	111	;'o'
  1354  00D8C4  6D                 	db	109	;'m'
  1355  00D8C5  20                 	db	32
  1356  00D8C6  45                 	db	69	;'E'
  1357  00D8C7  45                 	db	69	;'E'
  1358  00D8C8  50                 	db	80	;'P'
  1359  00D8C9  52                 	db	82	;'R'
  1360  00D8CA  4F                 	db	79	;'O'
  1361  00D8CB  4D                 	db	77	;'M'
  1362  00D8CC  0A                 	db	10
  1363  00D8CD  0D                 	db	13
  1364  00D8CE  20                 	db	32
  1365  00D8CF  20                 	db	32
  1366  00D8D0  20                 	db	32
  1367  00D8D1  48                 	db	72	;'H'
  1368  00D8D2  65                 	db	101	;'e'
  1369  00D8D3  6C                 	db	108	;'l'
  1370  00D8D4  70                 	db	112	;'p'
  1371  00D8D5  3A                 	db	58	;':'
  1372  00D8D6  20                 	db	32
  1373  00D8D7  54                 	db	84	;'T'
  1374  00D8D8  68                 	db	104	;'h'
  1375  00D8D9  69                 	db	105	;'i'
  1376  00D8DA  73                 	db	115	;'s'
  1377  00D8DB  20                 	db	32
  1378  00D8DC  6D                 	db	109	;'m'
  1379  00D8DD  65                 	db	101	;'e'
  1380  00D8DE  73                 	db	115	;'s'
  1381  00D8DF  73                 	db	115	;'s'
  1382  00D8E0  61                 	db	97	;'a'
  1383  00D8E1  67                 	db	103	;'g'
  1384  00D8E2  65                 	db	101	;'e'
  1385  00D8E3  2C                 	db	44
  1386  00D8E4  20                 	db	32
  1387  00D8E5  6C                 	db	108	;'l'
  1388  00D8E6  69                 	db	105	;'i'
  1389  00D8E7  73                 	db	115	;'s'
  1390  00D8E8  74                 	db	116	;'t'
  1391  00D8E9  73                 	db	115	;'s'
  1392  00D8EA  20                 	db	32
  1393  00D8EB  73                 	db	115	;'s'
  1394  00D8EC  75                 	db	117	;'u'
  1395  00D8ED  70                 	db	112	;'p'
  1396  00D8EE  70                 	db	112	;'p'
  1397  00D8EF  6F                 	db	111	;'o'
  1398  00D8F0  72                 	db	114	;'r'
  1399  00D8F1  74                 	db	116	;'t'
  1400  00D8F2  65                 	db	101	;'e'
  1401  00D8F3  64                 	db	100	;'d'
  1402  00D8F4  20                 	db	32
  1403  00D8F5  63                 	db	99	;'c'
  1404  00D8F6  6F                 	db	111	;'o'
  1405  00D8F7  6D                 	db	109	;'m'
  1406  00D8F8  6D                 	db	109	;'m'
  1407  00D8F9  61                 	db	97	;'a'
  1408  00D8FA  6E                 	db	110	;'n'
  1409  00D8FB  64                 	db	100	;'d'
  1410  00D8FC  73                 	db	115	;'s'
  1411  00D8FD  0A                 	db	10
  1412  00D8FE  0D                 	db	13
  1413  00D8FF  0A                 	db	10
  1414  00D900  0D                 	db	13
  1415  00D901  44                 	db	68	;'D'
  1416  00D902  65                 	db	101	;'e'
  1417  00D903  76                 	db	118	;'v'
  1418  00D904  69                 	db	105	;'i'
  1419  00D905  63                 	db	99	;'c'
  1420  00D906  65                 	db	101	;'e'
  1421  00D907  20                 	db	32
  1422  00D908  4D                 	db	77	;'M'
  1423  00D909  65                 	db	101	;'e'
  1424  00D90A  61                 	db	97	;'a'
  1425  00D90B  73                 	db	115	;'s'
  1426  00D90C  75                 	db	117	;'u'
  1427  00D90D  72                 	db	114	;'r'
  1428  00D90E  65                 	db	101	;'e'
  1429  00D90F  6D                 	db	109	;'m'
  1430  00D910  65                 	db	101	;'e'
  1431  00D911  6E                 	db	110	;'n'
  1432  00D912  74                 	db	116	;'t'
  1433  00D913  20                 	db	32
  1434  00D914  43                 	db	67	;'C'
  1435  00D915  6F                 	db	111	;'o'
  1436  00D916  6D                 	db	109	;'m'
  1437  00D917  6D                 	db	109	;'m'
  1438  00D918  61                 	db	97	;'a'
  1439  00D919  6E                 	db	110	;'n'
  1440  00D91A  64                 	db	100	;'d'
  1441  00D91B  73                 	db	115	;'s'
  1442  00D91C  3A                 	db	58	;':'
  1443  00D91D  20                 	db	32
  1444  00D91E  56                 	db	86	;'V'
  1445  00D91F  69                 	db	105	;'i'
  1446  00D920  65                 	db	101	;'e'
  1447  00D921  77                 	db	119	;'w'
  1448  00D922  20                 	db	32
  1449  00D923  6C                 	db	108	;'l'
  1450  00D924  6F                 	db	111	;'o'
  1451  00D925  77                 	db	119	;'w'
  1452  00D926  20                 	db	32
  1453  00D927  6C                 	db	108	;'l'
  1454  00D928  65                 	db	101	;'e'
  1455  00D929  76                 	db	118	;'v'
  1456  00D92A  65                 	db	101	;'e'
  1457  00D92B  6C                 	db	108	;'l'
  1458  00D92C  20                 	db	32
  1459  00D92D  73                 	db	115	;'s'
  1460  00D92E  79                 	db	121	;'y'
  1461  00D92F  73                 	db	115	;'s'
  1462  00D930  74                 	db	116	;'t'
  1463  00D931  65                 	db	101	;'e'
  1464  00D932  6D                 	db	109	;'m'
  1465  00D933  20                 	db	32
  1466  00D934  6D                 	db	109	;'m'
  1467  00D935  65                 	db	101	;'e'
  1468  00D936  61                 	db	97	;'a'
  1469  00D937  73                 	db	115	;'s'
  1470  00D938  75                 	db	117	;'u'
  1471  00D939  72                 	db	114	;'r'
  1472  00D93A  65                 	db	101	;'e'
  1473  00D93B  6D                 	db	109	;'m'
  1474  00D93C  65                 	db	101	;'e'
  1475  00D93D  6E                 	db	110	;'n'
  1476  00D93E  74                 	db	116	;'t'
  1477  00D93F  73                 	db	115	;'s'
  1478  00D940  0A                 	db	10
  1479  00D941  0D                 	db	13
  1480  00D942  20                 	db	32
  1481  00D943  20                 	db	32
  1482  00D944  20                 	db	32
  1483  00D945  4D                 	db	77	;'M'
  1484  00D946  65                 	db	101	;'e'
  1485  00D947  61                 	db	97	;'a'
  1486  00D948  73                 	db	115	;'s'
  1487  00D949  75                 	db	117	;'u'
  1488  00D94A  72                 	db	114	;'r'
  1489  00D94B  65                 	db	101	;'e'
  1490  00D94C  20                 	db	32
  1491  00D94D  50                 	db	80	;'P'
  1492  00D94E  4F                 	db	79	;'O'
  1493  00D94F  53                 	db	83	;'S'
  1494  00D950  33                 	db	51	;'3'
  1495  00D951  50                 	db	80	;'P'
  1496  00D952  33                 	db	51	;'3'
  1497  00D953  3F                 	db	63	;'?'
  1498  00D954  3A                 	db	58	;':'
  1499  00D955  20                 	db	32
  1500  00D956  52                 	db	82	;'R'
  1501  00D957  65                 	db	101	;'e'
  1502  00D958  74                 	db	116	;'t'
  1503  00D959  75                 	db	117	;'u'
  1504  00D95A  72                 	db	114	;'r'
  1505  00D95B  6E                 	db	110	;'n'
  1506  00D95C  73                 	db	115	;'s'
  1507  00D95D  20                 	db	32
  1508  00D95E  2B                 	db	43
  1509  00D95F  33                 	db	51	;'3'
  1510  00D960  2E                 	db	46
  1511  00D961  33                 	db	51	;'3'
  1512  00D962  56                 	db	86	;'V'
  1513  00D963  20                 	db	32
  1514  00D964  41                 	db	65	;'A'
  1515  00D965  44                 	db	68	;'D'
  1516  00D966  43                 	db	67	;'C'
  1517  00D967  20                 	db	32
  1518  00D968  43                 	db	67	;'C'
  1519  00D969  6F                 	db	111	;'o'
  1520  00D96A  6E                 	db	110	;'n'
  1521  00D96B  76                 	db	118	;'v'
  1522  00D96C  65                 	db	101	;'e'
  1523  00D96D  72                 	db	114	;'r'
  1524  00D96E  73                 	db	115	;'s'
  1525  00D96F  69                 	db	105	;'i'
  1526  00D970  6F                 	db	111	;'o'
  1527  00D971  6E                 	db	110	;'n'
  1528  00D972  20                 	db	32
  1529  00D973  69                 	db	105	;'i'
  1530  00D974  6E                 	db	110	;'n'
  1531  00D975  20                 	db	32
  1532  00D976  76                 	db	118	;'v'
  1533  00D977  6F                 	db	111	;'o'
  1534  00D978  6C                 	db	108	;'l'
  1535  00D979  74                 	db	116	;'t'
  1536  00D97A  73                 	db	115	;'s'
  1537  00D97B  0A                 	db	10
  1538  00D97C  0D                 	db	13
  1539  00D97D  20                 	db	32
  1540  00D97E  20                 	db	32
  1541  00D97F  20                 	db	32
  1542  00D980  4D                 	db	77	;'M'
  1543  00D981  65                 	db	101	;'e'
  1544  00D982  61                 	db	97	;'a'
  1545  00D983  73                 	db	115	;'s'
  1546  00D984  75                 	db	117	;'u'
  1547  00D985  72                 	db	114	;'r'
  1548  00D986  65                 	db	101	;'e'
  1549  00D987  20                 	db	32
  1550  00D988  50                 	db	80	;'P'
  1551  00D989  4F                 	db	79	;'O'
  1552  00D98A  53                 	db	83	;'S'
  1553  00D98B  31                 	db	49	;'1'
  1554  00D98C  32                 	db	50	;'2'
  1555  00D98D  3F                 	db	63	;'?'
  1556  00D98E  3A                 	db	58	;':'
  1557  00D98F  20                 	db	32
  1558  00D990  52                 	db	82	;'R'
  1559  00D991  65                 	db	101	;'e'
  1560  00D992  74                 	db	116	;'t'
  1561  00D993  75                 	db	117	;'u'
  1562  00D994  72                 	db	114	;'r'
  1563  00D995  6E                 	db	110	;'n'
  1564  00D996  73                 	db	115	;'s'
  1565  00D997  20                 	db	32
  1566  00D998  2B                 	db	43
  1567  00D999  31                 	db	49	;'1'
  1568  00D99A  32                 	db	50	;'2'
  1569  00D99B  56                 	db	86	;'V'
  1570  00D99C  20                 	db	32
  1571  00D99D  41                 	db	65	;'A'
  1572  00D99E  44                 	db	68	;'D'
  1573  00D99F  43                 	db	67	;'C'
  1574  00D9A0  20                 	db	32
  1575  00D9A1  43                 	db	67	;'C'
  1576  00D9A2  6F                 	db	111	;'o'
  1577  00D9A3  6E                 	db	110	;'n'
  1578  00D9A4  76                 	db	118	;'v'
  1579  00D9A5  65                 	db	101	;'e'
  1580  00D9A6  72                 	db	114	;'r'
  1581  00D9A7  73                 	db	115	;'s'
  1582  00D9A8  69                 	db	105	;'i'
  1583  00D9A9  6F                 	db	111	;'o'
  1584  00D9AA  6E                 	db	110	;'n'
  1585  00D9AB  20                 	db	32
  1586  00D9AC  69                 	db	105	;'i'
  1587  00D9AD  6E                 	db	110	;'n'
  1588  00D9AE  20                 	db	32
  1589  00D9AF  76                 	db	118	;'v'
  1590  00D9B0  6F                 	db	111	;'o'
  1591  00D9B1  6C                 	db	108	;'l'
  1592  00D9B2  74                 	db	116	;'t'
  1593  00D9B3  73                 	db	115	;'s'
  1594  00D9B4  0A                 	db	10
  1595  00D9B5  0D                 	db	13
  1596  00D9B6  20                 	db	32
  1597  00D9B7  20                 	db	32
  1598  00D9B8  20                 	db	32
  1599  00D9B9  4D                 	db	77	;'M'
  1600  00D9BA  65                 	db	101	;'e'
  1601  00D9BB  61                 	db	97	;'a'
  1602  00D9BC  73                 	db	115	;'s'
  1603  00D9BD  75                 	db	117	;'u'
  1604  00D9BE  72                 	db	114	;'r'
  1605  00D9BF  65                 	db	101	;'e'
  1606  00D9C0  20                 	db	32
  1607  00D9C1  44                 	db	68	;'D'
  1608  00D9C2  69                 	db	105	;'i'
  1609  00D9C3  65                 	db	101	;'e'
  1610  00D9C4  20                 	db	32
  1611  00D9C5  54                 	db	84	;'T'
  1612  00D9C6  65                 	db	101	;'e'
  1613  00D9C7  6D                 	db	109	;'m'
  1614  00D9C8  70                 	db	112	;'p'
  1615  00D9C9  3F                 	db	63	;'?'
  1616  00D9CA  3A                 	db	58	;':'
  1617  00D9CB  20                 	db	32
  1618  00D9CC  52                 	db	82	;'R'
  1619  00D9CD  65                 	db	101	;'e'
  1620  00D9CE  74                 	db	116	;'t'
  1621  00D9CF  75                 	db	117	;'u'
  1622  00D9D0  72                 	db	114	;'r'
  1623  00D9D1  6E                 	db	110	;'n'
  1624  00D9D2  73                 	db	115	;'s'
  1625  00D9D3  20                 	db	32
  1626  00D9D4  74                 	db	116	;'t'
  1627  00D9D5  68                 	db	104	;'h'
  1628  00D9D6  65                 	db	101	;'e'
  1629  00D9D7  20                 	db	32
  1630  00D9D8  6D                 	db	109	;'m'
  1631  00D9D9  69                 	db	105	;'i'
  1632  00D9DA  63                 	db	99	;'c'
  1633  00D9DB  72                 	db	114	;'r'
  1634  00D9DC  6F                 	db	111	;'o'
  1635  00D9DD  63                 	db	99	;'c'
  1636  00D9DE  6F                 	db	111	;'o'
  1637  00D9DF  6E                 	db	110	;'n'
  1638  00D9E0  74                 	db	116	;'t'
  1639  00D9E1  72                 	db	114	;'r'
  1640  00D9E2  6F                 	db	111	;'o'
  1641  00D9E3  6C                 	db	108	;'l'
  1642  00D9E4  6C                 	db	108	;'l'
  1643  00D9E5  65                 	db	101	;'e'
  1644  00D9E6  72                 	db	114	;'r'
  1645  00D9E7  20                 	db	32
  1646  00D9E8  64                 	db	100	;'d'
  1647  00D9E9  69                 	db	105	;'i'
  1648  00D9EA  65                 	db	101	;'e'
  1649  00D9EB  20                 	db	32
  1650  00D9EC  74                 	db	116	;'t'
  1651  00D9ED  65                 	db	101	;'e'
  1652  00D9EE  6D                 	db	109	;'m'
  1653  00D9EF  70                 	db	112	;'p'
  1654  00D9F0  65                 	db	101	;'e'
  1655  00D9F1  72                 	db	114	;'r'
  1656  00D9F2  61                 	db	97	;'a'
  1657  00D9F3  74                 	db	116	;'t'
  1658  00D9F4  75                 	db	117	;'u'
  1659  00D9F5  72                 	db	114	;'r'
  1660  00D9F6  65                 	db	101	;'e'
  1661  00D9F7  20                 	db	32
  1662  00D9F8  69                 	db	105	;'i'
  1663  00D9F9  6E                 	db	110	;'n'
  1664  00D9FA  20                 	db	32
  1665  00D9FB  64                 	db	100	;'d'
  1666  00D9FC  65                 	db	101	;'e'
  1667  00D9FD  67                 	db	103	;'g'
  1668  00D9FE  72                 	db	114	;'r'
  1669  00D9FF  65                 	db	101	;'e'
  1670  00DA00  65                 	db	101	;'e'
  1671  00DA01  73                 	db	115	;'s'
  1672  00DA02  20                 	db	32
  1673  00DA03  43                 	db	67	;'C'
  1674  00DA04  0A                 	db	10
  1675  00DA05  0D                 	db	13
  1676  00DA06  20                 	db	32
  1677  00DA07  20                 	db	32
  1678  00DA08  20                 	db	32
  1679  00DA09  4D                 	db	77	;'M'
  1680  00DA0A  65                 	db	101	;'e'
  1681  00DA0B  61                 	db	97	;'a'
  1682  00DA0C  73                 	db	115	;'s'
  1683  00DA0D  75                 	db	117	;'u'
  1684  00DA0E  72                 	db	114	;'r'
  1685  00DA0F  65                 	db	101	;'e'
  1686  00DA10  20                 	db	32
  1687  00DA11  46                 	db	70	;'F'
  1688  00DA12  56                 	db	86	;'V'
  1689  00DA13  52                 	db	82	;'R'
  1690  00DA14  3F                 	db	63	;'?'
  1691  00DA15  3A                 	db	58	;':'
  1692  00DA16  20                 	db	32
  1693  00DA17  52                 	db	82	;'R'
  1694  00DA18  65                 	db	101	;'e'
  1695  00DA19  74                 	db	116	;'t'
  1696  00DA1A  75                 	db	117	;'u'
  1697  00DA1B  72                 	db	114	;'r'
  1698  00DA1C  6E                 	db	110	;'n'
  1699  00DA1D  73                 	db	115	;'s'
  1700  00DA1E  20                 	db	32
  1701  00DA1F  74                 	db	116	;'t'
  1702  00DA20  68                 	db	104	;'h'
  1703  00DA21  65                 	db	101	;'e'
  1704  00DA22  20                 	db	32
  1705  00DA23  69                 	db	105	;'i'
  1706  00DA24  6E                 	db	110	;'n'
  1707  00DA25  74                 	db	116	;'t'
  1708  00DA26  65                 	db	101	;'e'
  1709  00DA27  72                 	db	114	;'r'
  1710  00DA28  6E                 	db	110	;'n'
  1711  00DA29  61                 	db	97	;'a'
  1712  00DA2A  6C                 	db	108	;'l'
  1713  00DA2B  20                 	db	32
  1714  00DA2C  66                 	db	102	;'f'
  1715  00DA2D  69                 	db	105	;'i'
  1716  00DA2E  78                 	db	120	;'x'
  1717  00DA2F  65                 	db	101	;'e'
  1718  00DA30  64                 	db	100	;'d'
  1719  00DA31  20                 	db	32
  1720  00DA32  76                 	db	118	;'v'
  1721  00DA33  6F                 	db	111	;'o'
  1722  00DA34  6C                 	db	108	;'l'
  1723  00DA35  74                 	db	116	;'t'
  1724  00DA36  61                 	db	97	;'a'
  1725  00DA37  67                 	db	103	;'g'
  1726  00DA38  65                 	db	101	;'e'
  1727  00DA39  20                 	db	32
  1728  00DA3A  72                 	db	114	;'r'
  1729  00DA3B  65                 	db	101	;'e'
  1730  00DA3C  66                 	db	102	;'f'
  1731  00DA3D  65                 	db	101	;'e'
  1732  00DA3E  72                 	db	114	;'r'
  1733  00DA3F  65                 	db	101	;'e'
  1734  00DA40  6E                 	db	110	;'n'
  1735  00DA41  63                 	db	99	;'c'
  1736  00DA42  65                 	db	101	;'e'
  1737  00DA43  20                 	db	32
  1738  00DA44  62                 	db	98	;'b'
  1739  00DA45  75                 	db	117	;'u'
  1740  00DA46  66                 	db	102	;'f'
  1741  00DA47  66                 	db	102	;'f'
  1742  00DA48  65                 	db	101	;'e'
  1743  00DA49  72                 	db	114	;'r'
  1744  00DA4A  20                 	db	32
  1745  00DA4B  31                 	db	49	;'1'
  1746  00DA4C  20                 	db	32
  1747  00DA4D  6F                 	db	111	;'o'
  1748  00DA4E  75                 	db	117	;'u'
  1749  00DA4F  74                 	db	116	;'t'
  1750  00DA50  70                 	db	112	;'p'
  1751  00DA51  75                 	db	117	;'u'
  1752  00DA52  74                 	db	116	;'t'
  1753  00DA53  20                 	db	32
  1754  00DA54  69                 	db	105	;'i'
  1755  00DA55  6E                 	db	110	;'n'
  1756  00DA56  20                 	db	32
  1757  00DA57  76                 	db	118	;'v'
  1758  00DA58  6F                 	db	111	;'o'
  1759  00DA59  6C                 	db	108	;'l'
  1760  00DA5A  74                 	db	116	;'t'
  1761  00DA5B  73                 	db	115	;'s'
  1762  00DA5C  0A                 	db	10
  1763  00DA5D  0D                 	db	13
  1764  00DA5E  20                 	db	32
  1765  00DA5F  20                 	db	32
  1766  00DA60  20                 	db	32
  1767  00DA61  4D                 	db	77	;'M'
  1768  00DA62  65                 	db	101	;'e'
  1769  00DA63  61                 	db	97	;'a'
  1770  00DA64  73                 	db	115	;'s'
  1771  00DA65  75                 	db	117	;'u'
  1772  00DA66  72                 	db	114	;'r'
  1773  00DA67  65                 	db	101	;'e'
  1774  00DA68  20                 	db	32
  1775  00DA69  41                 	db	65	;'A'
  1776  00DA6A  56                 	db	86	;'V'
  1777  00DA6B  53                 	db	83	;'S'
  1778  00DA6C  53                 	db	83	;'S'
  1779  00DA6D  3F                 	db	63	;'?'
  1780  00DA6E  3A                 	db	58	;':'
  1781  00DA6F  20                 	db	32
  1782  00DA70  52                 	db	82	;'R'
  1783  00DA71  65                 	db	101	;'e'
  1784  00DA72  74                 	db	116	;'t'
  1785  00DA73  75                 	db	117	;'u'
  1786  00DA74  72                 	db	114	;'r'
  1787  00DA75  6E                 	db	110	;'n'
  1788  00DA76  73                 	db	115	;'s'
  1789  00DA77  20                 	db	32
  1790  00DA78  74                 	db	116	;'t'
  1791  00DA79  68                 	db	104	;'h'
  1792  00DA7A  65                 	db	101	;'e'
  1793  00DA7B  20                 	db	32
  1794  00DA7C  6D                 	db	109	;'m'
  1795  00DA7D  65                 	db	101	;'e'
  1796  00DA7E  61                 	db	97	;'a'
  1797  00DA7F  73                 	db	115	;'s'
  1798  00DA80  75                 	db	117	;'u'
  1799  00DA81  72                 	db	114	;'r'
  1800  00DA82  65                 	db	101	;'e'
  1801  00DA83  64                 	db	100	;'d'
  1802  00DA84  20                 	db	32
  1803  00DA85  76                 	db	118	;'v'
  1804  00DA86  61                 	db	97	;'a'
  1805  00DA87  6C                 	db	108	;'l'
  1806  00DA88  75                 	db	117	;'u'
  1807  00DA89  65                 	db	101	;'e'
  1808  00DA8A  20                 	db	32
  1809  00DA8B  6F                 	db	111	;'o'
  1810  00DA8C  66                 	db	102	;'f'
  1811  00DA8D  20                 	db	32
  1812  00DA8E  41                 	db	65	;'A'
  1813  00DA8F  6E                 	db	110	;'n'
  1814  00DA90  61                 	db	97	;'a'
  1815  00DA91  6C                 	db	108	;'l'
  1816  00DA92  6F                 	db	111	;'o'
  1817  00DA93  67                 	db	103	;'g'
  1818  00DA94  20                 	db	32
  1819  00DA95  56                 	db	86	;'V'
  1820  00DA96  53                 	db	83	;'S'
  1821  00DA97  53                 	db	83	;'S'
  1822  00DA98  20                 	db	32
  1823  00DA99  69                 	db	105	;'i'
  1824  00DA9A  6E                 	db	110	;'n'
  1825  00DA9B  20                 	db	32
  1826  00DA9C  76                 	db	118	;'v'
  1827  00DA9D  6F                 	db	111	;'o'
  1828  00DA9E  6C                 	db	108	;'l'
  1829  00DA9F  74                 	db	116	;'t'
  1830  00DAA0  73                 	db	115	;'s'
  1831  00DAA1  0A                 	db	10
  1832  00DAA2  0D                 	db	13
  1833  00DAA3  20                 	db	32
  1834  00DAA4  20                 	db	32
  1835  00DAA5  20                 	db	32
  1836  00DAA6  4D                 	db	77	;'M'
  1837  00DAA7  61                 	db	97	;'a'
  1838  00DAA8  78                 	db	120	;'x'
  1839  00DAA9  20                 	db	32
  1840  00DAAA  50                 	db	80	;'P'
  1841  00DAAB  4F                 	db	79	;'O'
  1842  00DAAC  53                 	db	83	;'S'
  1843  00DAAD  33                 	db	51	;'3'
  1844  00DAAE  50                 	db	80	;'P'
  1845  00DAAF  33                 	db	51	;'3'
  1846  00DAB0  20                 	db	32
  1847  00DAB1  56                 	db	86	;'V'
  1848  00DAB2  6F                 	db	111	;'o'
  1849  00DAB3  6C                 	db	108	;'l'
  1850  00DAB4  74                 	db	116	;'t'
  1851  00DAB5  61                 	db	97	;'a'
  1852  00DAB6  67                 	db	103	;'g'
  1853  00DAB7  65                 	db	101	;'e'
  1854  00DAB8  3F                 	db	63	;'?'
  1855  00DAB9  3A                 	db	58	;':'
  1856  00DABA  20                 	db	32
  1857  00DABB  52                 	db	82	;'R'
  1858  00DABC  65                 	db	101	;'e'
  1859  00DABD  74                 	db	116	;'t'
  1860  00DABE  75                 	db	117	;'u'
  1861  00DABF  72                 	db	114	;'r'
  1862  00DAC0  6E                 	db	110	;'n'
  1863  00DAC1  73                 	db	115	;'s'
  1864  00DAC2  20                 	db	32
  1865  00DAC3  74                 	db	116	;'t'
  1866  00DAC4  68                 	db	104	;'h'
  1867  00DAC5  65                 	db	101	;'e'
  1868  00DAC6  20                 	db	32
  1869  00DAC7  6D                 	db	109	;'m'
  1870  00DAC8  61                 	db	97	;'a'
  1871  00DAC9  78                 	db	120	;'x'
  1872  00DACA  69                 	db	105	;'i'
  1873  00DACB  6D                 	db	109	;'m'
  1874  00DACC  75                 	db	117	;'u'
  1875  00DACD  6D                 	db	109	;'m'
  1876  00DACE  20                 	db	32
  1877  00DACF  72                 	db	114	;'r'
  1878  00DAD0  65                 	db	101	;'e'
  1879  00DAD1  63                 	db	99	;'c'
  1880  00DAD2  6F                 	db	111	;'o'
  1881  00DAD3  72                 	db	114	;'r'
  1882  00DAD4  64                 	db	100	;'d'
  1883  00DAD5  65                 	db	101	;'e'
  1884  00DAD6  64                 	db	100	;'d'
  1885  00DAD7  20                 	db	32
  1886  00DAD8  2B                 	db	43
  1887  00DAD9  33                 	db	51	;'3'
  1888  00DADA  2E                 	db	46
  1889  00DADB  33                 	db	51	;'3'
  1890  00DADC  56                 	db	86	;'V'
  1891  00DADD  20                 	db	32
  1892  00DADE  52                 	db	82	;'R'
  1893  00DADF  61                 	db	97	;'a'
  1894  00DAE0  69                 	db	105	;'i'
  1895  00DAE1  6C                 	db	108	;'l'
  1896  00DAE2  20                 	db	32
  1897  00DAE3  56                 	db	86	;'V'
  1898  00DAE4  6F                 	db	111	;'o'
  1899  00DAE5  6C                 	db	108	;'l'
  1900  00DAE6  74                 	db	116	;'t'
  1901  00DAE7  61                 	db	97	;'a'
  1902  00DAE8  67                 	db	103	;'g'
  1903  00DAE9  65                 	db	101	;'e'
  1904  00DAEA  20                 	db	32
  1905  00DAEB  6D                 	db	109	;'m'
  1906  00DAEC  65                 	db	101	;'e'
  1907  00DAED  61                 	db	97	;'a'
  1908  00DAEE  73                 	db	115	;'s'
  1909  00DAEF  75                 	db	117	;'u'
  1910  00DAF0  72                 	db	114	;'r'
  1911  00DAF1  65                 	db	101	;'e'
  1912  00DAF2  64                 	db	100	;'d'
  1913  00DAF3  0A                 	db	10
  1914  00DAF4  0D                 	db	13
  1915  00DAF5  20                 	db	32
  1916  00DAF6  20                 	db	32
  1917  00DAF7  20                 	db	32
  1918  00DAF8  4D                 	db	77	;'M'
  1919  00DAF9  61                 	db	97	;'a'
  1920  00DAFA  78                 	db	120	;'x'
  1921  00DAFB  20                 	db	32
  1922  00DAFC  50                 	db	80	;'P'
  1923  00DAFD  4F                 	db	79	;'O'
  1924  00DAFE  53                 	db	83	;'S'
  1925  00DAFF  31                 	db	49	;'1'
  1926  00DB00  32                 	db	50	;'2'
  1927  00DB01  20                 	db	32
  1928  00DB02  56                 	db	86	;'V'
  1929  00DB03  6F                 	db	111	;'o'
  1930  00DB04  6C                 	db	108	;'l'
  1931  00DB05  74                 	db	116	;'t'
  1932  00DB06  61                 	db	97	;'a'
  1933  00DB07  67                 	db	103	;'g'
  1934  00DB08  65                 	db	101	;'e'
  1935  00DB09  3F                 	db	63	;'?'
  1936  00DB0A  3A                 	db	58	;':'
  1937  00DB0B  20                 	db	32
  1938  00DB0C  52                 	db	82	;'R'
  1939  00DB0D  65                 	db	101	;'e'
  1940  00DB0E  74                 	db	116	;'t'
  1941  00DB0F  75                 	db	117	;'u'
  1942  00DB10  72                 	db	114	;'r'
  1943  00DB11  6E                 	db	110	;'n'
  1944  00DB12  73                 	db	115	;'s'
  1945  00DB13  20                 	db	32
  1946  00DB14  74                 	db	116	;'t'
  1947  00DB15  68                 	db	104	;'h'
  1948  00DB16  65                 	db	101	;'e'
  1949  00DB17  20                 	db	32
  1950  00DB18  6D                 	db	109	;'m'
  1951  00DB19  61                 	db	97	;'a'
  1952  00DB1A  78                 	db	120	;'x'
  1953  00DB1B  69                 	db	105	;'i'
  1954  00DB1C  6D                 	db	109	;'m'
  1955  00DB1D  75                 	db	117	;'u'
  1956  00DB1E  6D                 	db	109	;'m'
  1957  00DB1F  20                 	db	32
  1958  00DB20  72                 	db	114	;'r'
  1959  00DB21  65                 	db	101	;'e'
  1960  00DB22  63                 	db	99	;'c'
  1961  00DB23  6F                 	db	111	;'o'
  1962  00DB24  72                 	db	114	;'r'
  1963  00DB25  64                 	db	100	;'d'
  1964  00DB26  65                 	db	101	;'e'
  1965  00DB27  64                 	db	100	;'d'
  1966  00DB28  20                 	db	32
  1967  00DB29  2B                 	db	43
  1968  00DB2A  31                 	db	49	;'1'
  1969  00DB2B  32                 	db	50	;'2'
  1970  00DB2C  56                 	db	86	;'V'
  1971  00DB2D  20                 	db	32
  1972  00DB2E  52                 	db	82	;'R'
  1973  00DB2F  61                 	db	97	;'a'
  1974  00DB30  69                 	db	105	;'i'
  1975  00DB31  6C                 	db	108	;'l'
  1976  00DB32  20                 	db	32
  1977  00DB33  56                 	db	86	;'V'
  1978  00DB34  6F                 	db	111	;'o'
  1979  00DB35  6C                 	db	108	;'l'
  1980  00DB36  74                 	db	116	;'t'
  1981  00DB37  61                 	db	97	;'a'
  1982  00DB38  67                 	db	103	;'g'
  1983  00DB39  65                 	db	101	;'e'
  1984  00DB3A  20                 	db	32
  1985  00DB3B  6D                 	db	109	;'m'
  1986  00DB3C  65                 	db	101	;'e'
  1987  00DB3D  61                 	db	97	;'a'
  1988  00DB3E  73                 	db	115	;'s'
  1989  00DB3F  75                 	db	117	;'u'
  1990  00DB40  72                 	db	114	;'r'
  1991  00DB41  65                 	db	101	;'e'
  1992  00DB42  64                 	db	100	;'d'
  1993  00DB43  0A                 	db	10
  1994  00DB44  0D                 	db	13
  1995  00DB45  20                 	db	32
  1996  00DB46  20                 	db	32
  1997  00DB47  20                 	db	32
  1998  00DB48  4D                 	db	77	;'M'
  1999  00DB49  61                 	db	97	;'a'
  2000  00DB4A  78                 	db	120	;'x'
  2001  00DB4B  20                 	db	32
  2002  00DB4C  44                 	db	68	;'D'
  2003  00DB4D  69                 	db	105	;'i'
  2004  00DB4E  65                 	db	101	;'e'
  2005  00DB4F  20                 	db	32
  2006  00DB50  54                 	db	84	;'T'
  2007  00DB51  65                 	db	101	;'e'
  2008  00DB52  6D                 	db	109	;'m'
  2009  00DB53  70                 	db	112	;'p'
  2010  00DB54  3F                 	db	63	;'?'
  2011  00DB55  3A                 	db	58	;':'
  2012  00DB56  20                 	db	32
  2013  00DB57  52                 	db	82	;'R'
  2014  00DB58  65                 	db	101	;'e'
  2015  00DB59  74                 	db	116	;'t'
  2016  00DB5A  75                 	db	117	;'u'
  2017  00DB5B  72                 	db	114	;'r'
  2018  00DB5C  6E                 	db	110	;'n'
  2019  00DB5D  73                 	db	115	;'s'
  2020  00DB5E  20                 	db	32
  2021  00DB5F  74                 	db	116	;'t'
  2022  00DB60  68                 	db	104	;'h'
  2023  00DB61  65                 	db	101	;'e'
  2024  00DB62  20                 	db	32
  2025  00DB63  6D                 	db	109	;'m'
  2026  00DB64  61                 	db	97	;'a'
  2027  00DB65  78                 	db	120	;'x'
  2028  00DB66  69                 	db	105	;'i'
  2029  00DB67  6D                 	db	109	;'m'
  2030  00DB68  75                 	db	117	;'u'
  2031  00DB69  6D                 	db	109	;'m'
  2032  00DB6A  20                 	db	32
  2033  00DB6B  72                 	db	114	;'r'
  2034  00DB6C  65                 	db	101	;'e'
  2035  00DB6D  63                 	db	99	;'c'
  2036  00DB6E  6F                 	db	111	;'o'
  2037  00DB6F  72                 	db	114	;'r'
  2038  00DB70  64                 	db	100	;'d'
  2039  00DB71  65                 	db	101	;'e'
  2040  00DB72  64                 	db	100	;'d'
  2041  00DB73  20                 	db	32
  2042  00DB74  64                 	db	100	;'d'
  2043  00DB75  69                 	db	105	;'i'
  2044  00DB76  65                 	db	101	;'e'
  2045  00DB77  20                 	db	32
  2046  00DB78  74                 	db	116	;'t'
  2047  00DB79  65                 	db	101	;'e'
  2048  00DB7A  6D                 	db	109	;'m'
  2049  00DB7B  70                 	db	112	;'p'
  2050  00DB7C  65                 	db	101	;'e'
  2051  00DB7D  72                 	db	114	;'r'
  2052  00DB7E  61                 	db	97	;'a'
  2053  00DB7F  74                 	db	116	;'t'
  2054  00DB80  75                 	db	117	;'u'
  2055  00DB81  72                 	db	114	;'r'
  2056  00DB82  65                 	db	101	;'e'
  2057  00DB83  20                 	db	32
  2058  00DB84  6D                 	db	109	;'m'
  2059  00DB85  65                 	db	101	;'e'
  2060  00DB86  61                 	db	97	;'a'
  2061  00DB87  73                 	db	115	;'s'
  2062  00DB88  75                 	db	117	;'u'
  2063  00DB89  72                 	db	114	;'r'
  2064  00DB8A  65                 	db	101	;'e'
  2065  00DB8B  64                 	db	100	;'d'
  2066  00DB8C  0A                 	db	10
  2067  00DB8D  0D                 	db	13
  2068  00DB8E  20                 	db	32
  2069  00DB8F  20                 	db	32
  2070  00DB90  20                 	db	32
  2071  00DB91  4D                 	db	77	;'M'
  2072  00DB92  61                 	db	97	;'a'
  2073  00DB93  78                 	db	120	;'x'
  2074  00DB94  20                 	db	32
  2075  00DB95  46                 	db	70	;'F'
  2076  00DB96  56                 	db	86	;'V'
  2077  00DB97  52                 	db	82	;'R'
  2078  00DB98  20                 	db	32
  2079  00DB99  56                 	db	86	;'V'
  2080  00DB9A  6F                 	db	111	;'o'
  2081  00DB9B  6C                 	db	108	;'l'
  2082  00DB9C  74                 	db	116	;'t'
  2083  00DB9D  61                 	db	97	;'a'
  2084  00DB9E  67                 	db	103	;'g'
  2085  00DB9F  65                 	db	101	;'e'
  2086  00DBA0  3F                 	db	63	;'?'
  2087  00DBA1  3A                 	db	58	;':'
  2088  00DBA2  20                 	db	32
  2089  00DBA3  52                 	db	82	;'R'
  2090  00DBA4  65                 	db	101	;'e'
  2091  00DBA5  74                 	db	116	;'t'
  2092  00DBA6  75                 	db	117	;'u'
  2093  00DBA7  72                 	db	114	;'r'
  2094  00DBA8  6E                 	db	110	;'n'
  2095  00DBA9  73                 	db	115	;'s'
  2096  00DBAA  20                 	db	32
  2097  00DBAB  74                 	db	116	;'t'
  2098  00DBAC  68                 	db	104	;'h'
  2099  00DBAD  65                 	db	101	;'e'
  2100  00DBAE  20                 	db	32
  2101  00DBAF  6D                 	db	109	;'m'
  2102  00DBB0  61                 	db	97	;'a'
  2103  00DBB1  78                 	db	120	;'x'
  2104  00DBB2  69                 	db	105	;'i'
  2105  00DBB3  6D                 	db	109	;'m'
  2106  00DBB4  75                 	db	117	;'u'
  2107  00DBB5  6D                 	db	109	;'m'
  2108  00DBB6  20                 	db	32
  2109  00DBB7  72                 	db	114	;'r'
  2110  00DBB8  65                 	db	101	;'e'
  2111  00DBB9  63                 	db	99	;'c'
  2112  00DBBA  6F                 	db	111	;'o'
  2113  00DBBB  72                 	db	114	;'r'
  2114  00DBBC  64                 	db	100	;'d'
  2115  00DBBD  65                 	db	101	;'e'
  2116  00DBBE  64                 	db	100	;'d'
  2117  00DBBF  20                 	db	32
  2118  00DBC0  46                 	db	70	;'F'
  2119  00DBC1  56                 	db	86	;'V'
  2120  00DBC2  52                 	db	82	;'R'
  2121  00DBC3  20                 	db	32
  2122  00DBC4  42                 	db	66	;'B'
  2123  00DBC5  75                 	db	117	;'u'
  2124  00DBC6  66                 	db	102	;'f'
  2125  00DBC7  66                 	db	102	;'f'
  2126  00DBC8  65                 	db	101	;'e'
  2127  00DBC9  72                 	db	114	;'r'
  2128  00DBCA  20                 	db	32
  2129  00DBCB  31                 	db	49	;'1'
  2130  00DBCC  20                 	db	32
  2131  00DBCD  56                 	db	86	;'V'
  2132  00DBCE  6F                 	db	111	;'o'
  2133  00DBCF  6C                 	db	108	;'l'
  2134  00DBD0  74                 	db	116	;'t'
  2135  00DBD1  61                 	db	97	;'a'
  2136  00DBD2  67                 	db	103	;'g'
  2137  00DBD3  65                 	db	101	;'e'
  2138  00DBD4  20                 	db	32
  2139  00DBD5  6D                 	db	109	;'m'
  2140  00DBD6  65                 	db	101	;'e'
  2141  00DBD7  61                 	db	97	;'a'
  2142  00DBD8  73                 	db	115	;'s'
  2143  00DBD9  75                 	db	117	;'u'
  2144  00DBDA  72                 	db	114	;'r'
  2145  00DBDB  65                 	db	101	;'e'
  2146  00DBDC  64                 	db	100	;'d'
  2147  00DBDD  0A                 	db	10
  2148  00DBDE  0D                 	db	13
  2149  00DBDF  0A                 	db	10
  2150  00DBE0  0D                 	db	13
  2151  00DBE1  50                 	db	80	;'P'
  2152  00DBE2  72                 	db	114	;'r'
  2153  00DBE3  69                 	db	105	;'i'
  2154  00DBE4  6D                 	db	109	;'m'
  2155  00DBE5  61                 	db	97	;'a'
  2156  00DBE6  72                 	db	114	;'r'
  2157  00DBE7  79                 	db	121	;'y'
  2158  00DBE8  20                 	db	32
  2159  00DBE9  4D                 	db	77	;'M'
  2160  00DBEA  65                 	db	101	;'e'
  2161  00DBEB  61                 	db	97	;'a'
  2162  00DBEC  73                 	db	115	;'s'
  2163  00DBED  75                 	db	117	;'u'
  2164  00DBEE  72                 	db	114	;'r'
  2165  00DBEF  65                 	db	101	;'e'
  2166  00DBF0  6D                 	db	109	;'m'
  2167  00DBF1  65                 	db	101	;'e'
  2168  00DBF2  6E                 	db	110	;'n'
  2169  00DBF3  74                 	db	116	;'t'
  2170  00DBF4  20                 	db	32
  2171  00DBF5  43                 	db	67	;'C'
  2172  00DBF6  6F                 	db	111	;'o'
  2173  00DBF7  6D                 	db	109	;'m'
  2174  00DBF8  6D                 	db	109	;'m'
  2175  00DBF9  61                 	db	97	;'a'
  2176  00DBFA  6E                 	db	110	;'n'
  2177  00DBFB  64                 	db	100	;'d'
  2178  00DBFC  73                 	db	115	;'s'
  2179  00DBFD  3A                 	db	58	;':'
  2180  00DBFE  20                 	db	32
  2181  00DBFF  56                 	db	86	;'V'
  2182  00DC00  69                 	db	105	;'i'
  2183  00DC01  65                 	db	101	;'e'
  2184  00DC02  77                 	db	119	;'w'
  2185  00DC03  20                 	db	32
  2186  00DC04  68                 	db	104	;'h'
  2187  00DC05  69                 	db	105	;'i'
  2188  00DC06  67                 	db	103	;'g'
  2189  00DC07  68                 	db	104	;'h'
  2190  00DC08  20                 	db	32
  2191  00DC09  6C                 	db	108	;'l'
  2192  00DC0A  65                 	db	101	;'e'
  2193  00DC0B  76                 	db	118	;'v'
  2194  00DC0C  65                 	db	101	;'e'
  2195  00DC0D  6C                 	db	108	;'l'
  2196  00DC0E  20                 	db	32
  2197  00DC0F  6F                 	db	111	;'o'
  2198  00DC10  75                 	db	117	;'u'
  2199  00DC11  74                 	db	116	;'t'
  2200  00DC12  70                 	db	112	;'p'
  2201  00DC13  75                 	db	117	;'u'
  2202  00DC14  74                 	db	116	;'t'
  2203  00DC15  20                 	db	32
  2204  00DC16  6D                 	db	109	;'m'
  2205  00DC17  65                 	db	101	;'e'
  2206  00DC18  61                 	db	97	;'a'
  2207  00DC19  73                 	db	115	;'s'
  2208  00DC1A  75                 	db	117	;'u'
  2209  00DC1B  72                 	db	114	;'r'
  2210  00DC1C  65                 	db	101	;'e'
  2211  00DC1D  6D                 	db	109	;'m'
  2212  00DC1E  65                 	db	101	;'e'
  2213  00DC1F  6E                 	db	110	;'n'
  2214  00DC20  74                 	db	116	;'t'
  2215  00DC21  73                 	db	115	;'s'
  2216  00DC22  20                 	db	32
  2217  00DC23  61                 	db	97	;'a'
  2218  00DC24  6E                 	db	110	;'n'
  2219  00DC25  64                 	db	100	;'d'
  2220  00DC26  20                 	db	32
  2221  00DC27  63                 	db	99	;'c'
  2222  00DC28  61                 	db	97	;'a'
  2223  00DC29  6C                 	db	108	;'l'
  2224  00DC2A  63                 	db	99	;'c'
  2225  00DC2B  75                 	db	117	;'u'
  2226  00DC2C  6C                 	db	108	;'l'
  2227  00DC2D  61                 	db	97	;'a'
  2228  00DC2E  74                 	db	116	;'t'
  2229  00DC2F  69                 	db	105	;'i'
  2230  00DC30  6F                 	db	111	;'o'
  2231  00DC31  6E                 	db	110	;'n'
  2232  00DC32  73                 	db	115	;'s'
  2233  00DC33  0A                 	db	10
  2234  00DC34  0D                 	db	13
  2235  00DC35  20                 	db	32
  2236  00DC36  20                 	db	32
  2237  00DC37  20                 	db	32
  2238  00DC38  4D                 	db	77	;'M'
  2239  00DC39  65                 	db	101	;'e'
  2240  00DC3A  61                 	db	97	;'a'
  2241  00DC3B  73                 	db	115	;'s'
  2242  00DC3C  75                 	db	117	;'u'
  2243  00DC3D  72                 	db	114	;'r'
  2244  00DC3E  65                 	db	101	;'e'
  2245  00DC3F  20                 	db	32
  2246  00DC40  44                 	db	68	;'D'
  2247  00DC41  65                 	db	101	;'e'
  2248  00DC42  74                 	db	116	;'t'
  2249  00DC43  65                 	db	101	;'e'
  2250  00DC44  63                 	db	99	;'c'
  2251  00DC45  74                 	db	116	;'t'
  2252  00DC46  65                 	db	101	;'e'
  2253  00DC47  64                 	db	100	;'d'
  2254  00DC48  20                 	db	32
  2255  00DC49  43                 	db	67	;'C'
  2256  00DC4A  75                 	db	117	;'u'
  2257  00DC4B  72                 	db	114	;'r'
  2258  00DC4C  72                 	db	114	;'r'
  2259  00DC4D  65                 	db	101	;'e'
  2260  00DC4E  6E                 	db	110	;'n'
  2261  00DC4F  74                 	db	116	;'t'
  2262  00DC50  3F                 	db	63	;'?'
  2263  00DC51  3A                 	db	58	;':'
  2264  00DC52  20                 	db	32
  2265  00DC53  52                 	db	82	;'R'
  2266  00DC54  65                 	db	101	;'e'
  2267  00DC55  74                 	db	116	;'t'
  2268  00DC56  75                 	db	117	;'u'
  2269  00DC57  72                 	db	114	;'r'
  2270  00DC58  6E                 	db	110	;'n'
  2271  00DC59  73                 	db	115	;'s'
  2272  00DC5A  20                 	db	32
  2273  00DC5B  6D                 	db	109	;'m'
  2274  00DC5C  65                 	db	101	;'e'
  2275  00DC5D  61                 	db	97	;'a'
  2276  00DC5E  73                 	db	115	;'s'
  2277  00DC5F  75                 	db	117	;'u'
  2278  00DC60  72                 	db	114	;'r'
  2279  00DC61  65                 	db	101	;'e'
  2280  00DC62  64                 	db	100	;'d'
  2281  00DC63  20                 	db	32
  2282  00DC64  6F                 	db	111	;'o'
  2283  00DC65  75                 	db	117	;'u'
  2284  00DC66  74                 	db	116	;'t'
  2285  00DC67  70                 	db	112	;'p'
  2286  00DC68  75                 	db	117	;'u'
  2287  00DC69  74                 	db	116	;'t'
  2288  00DC6A  20                 	db	32
  2289  00DC6B  63                 	db	99	;'c'
  2290  00DC6C  75                 	db	117	;'u'
  2291  00DC6D  72                 	db	114	;'r'
  2292  00DC6E  72                 	db	114	;'r'
  2293  00DC6F  65                 	db	101	;'e'
  2294  00DC70  6E                 	db	110	;'n'
  2295  00DC71  74                 	db	116	;'t'
  2296  00DC72  20                 	db	32
  2297  00DC73  69                 	db	105	;'i'
  2298  00DC74  6E                 	db	110	;'n'
  2299  00DC75  20                 	db	32
  2300  00DC76  61                 	db	97	;'a'
  2301  00DC77  6D                 	db	109	;'m'
  2302  00DC78  70                 	db	112	;'p'
  2303  00DC79  73                 	db	115	;'s'
  2304  00DC7A  20                 	db	32
  2305  00DC7B  61                 	db	97	;'a'
  2306  00DC7C  73                 	db	115	;'s'
  2307  00DC7D  20                 	db	32
  2308  00DC7E  73                 	db	115	;'s'
  2309  00DC7F  65                 	db	101	;'e'
  2310  00DC80  65                 	db	101	;'e'
  2311  00DC81  6E                 	db	110	;'n'
  2312  00DC82  20                 	db	32
  2313  00DC83  62                 	db	98	;'b'
  2314  00DC84  79                 	db	121	;'y'
  2315  00DC85  20                 	db	32
  2316  00DC86  41                 	db	65	;'A'
  2317  00DC87  44                 	db	68	;'D'
  2318  00DC88  43                 	db	67	;'C'
  2319  00DC89  0A                 	db	10
  2320  00DC8A  0D                 	db	13
  2321  00DC8B  20                 	db	32
  2322  00DC8C  20                 	db	32
  2323  00DC8D  20                 	db	32
  2324  00DC8E  4D                 	db	77	;'M'
  2325  00DC8F  65                 	db	101	;'e'
  2326  00DC90  61                 	db	97	;'a'
  2327  00DC91  73                 	db	115	;'s'
  2328  00DC92  75                 	db	117	;'u'
  2329  00DC93  72                 	db	114	;'r'
  2330  00DC94  65                 	db	101	;'e'
  2331  00DC95  20                 	db	32
  2332  00DC96  52                 	db	82	;'R'
  2333  00DC97  4D                 	db	77	;'M'
  2334  00DC98  53                 	db	83	;'S'
  2335  00DC99  20                 	db	32
  2336  00DC9A  43                 	db	67	;'C'
  2337  00DC9B  75                 	db	117	;'u'
  2338  00DC9C  72                 	db	114	;'r'
  2339  00DC9D  72                 	db	114	;'r'
  2340  00DC9E  65                 	db	101	;'e'
  2341  00DC9F  6E                 	db	110	;'n'
  2342  00DCA0  74                 	db	116	;'t'
  2343  00DCA1  3F                 	db	63	;'?'
  2344  00DCA2  3A                 	db	58	;':'
  2345  00DCA3  20                 	db	32
  2346  00DCA4  52                 	db	82	;'R'
  2347  00DCA5  65                 	db	101	;'e'
  2348  00DCA6  74                 	db	116	;'t'
  2349  00DCA7  75                 	db	117	;'u'
  2350  00DCA8  72                 	db	114	;'r'
  2351  00DCA9  6E                 	db	110	;'n'
  2352  00DCAA  73                 	db	115	;'s'
  2353  00DCAB  20                 	db	32
  2354  00DCAC  74                 	db	116	;'t'
  2355  00DCAD  68                 	db	104	;'h'
  2356  00DCAE  65                 	db	101	;'e'
  2357  00DCAF  20                 	db	32
  2358  00DCB0  63                 	db	99	;'c'
  2359  00DCB1  61                 	db	97	;'a'
  2360  00DCB2  6C                 	db	108	;'l'
  2361  00DCB3  63                 	db	99	;'c'
  2362  00DCB4  75                 	db	117	;'u'
  2363  00DCB5  6C                 	db	108	;'l'
  2364  00DCB6  61                 	db	97	;'a'
  2365  00DCB7  74                 	db	116	;'t'
  2366  00DCB8  65                 	db	101	;'e'
  2367  00DCB9  64                 	db	100	;'d'
  2368  00DCBA  20                 	db	32
  2369  00DCBB  52                 	db	82	;'R'
  2370  00DCBC  4D                 	db	77	;'M'
  2371  00DCBD  53                 	db	83	;'S'
  2372  00DCBE  20                 	db	32
  2373  00DCBF  6F                 	db	111	;'o'
  2374  00DCC0  75                 	db	117	;'u'
  2375  00DCC1  74                 	db	116	;'t'
  2376  00DCC2  70                 	db	112	;'p'
  2377  00DCC3  75                 	db	117	;'u'
  2378  00DCC4  74                 	db	116	;'t'
  2379  00DCC5  20                 	db	32
  2380  00DCC6  63                 	db	99	;'c'
  2381  00DCC7  75                 	db	117	;'u'
  2382  00DCC8  72                 	db	114	;'r'
  2383  00DCC9  72                 	db	114	;'r'
  2384  00DCCA  65                 	db	101	;'e'
  2385  00DCCB  6E                 	db	110	;'n'
  2386  00DCCC  74                 	db	116	;'t'
  2387  00DCCD  20                 	db	32
  2388  00DCCE  66                 	db	102	;'f'
  2389  00DCCF  72                 	db	114	;'r'
  2390  00DCD0  6F                 	db	111	;'o'
  2391  00DCD1  6D                 	db	109	;'m'
  2392  00DCD2  20                 	db	32
  2393  00DCD3  6D                 	db	109	;'m'
  2394  00DCD4  65                 	db	101	;'e'
  2395  00DCD5  61                 	db	97	;'a'
  2396  00DCD6  73                 	db	115	;'s'
  2397  00DCD7  75                 	db	117	;'u'
  2398  00DCD8  72                 	db	114	;'r'
  2399  00DCD9  65                 	db	101	;'e'
  2400  00DCDA  6D                 	db	109	;'m'
  2401  00DCDB  65                 	db	101	;'e'
  2402  00DCDC  6E                 	db	110	;'n'
  2403  00DCDD  74                 	db	116	;'t'
  2404  00DCDE  73                 	db	115	;'s'
  2405  00DCDF  20                 	db	32
  2406  00DCE0  61                 	db	97	;'a'
  2407  00DCE1  6E                 	db	110	;'n'
  2408  00DCE2  64                 	db	100	;'d'
  2409  00DCE3  20                 	db	32
  2410  00DCE4  54                 	db	84	;'T'
  2411  00DCE5  52                 	db	82	;'R'
  2412  00DCE6  49                 	db	73	;'I'
  2413  00DCE7  41                 	db	65	;'A'
  2414  00DCE8  43                 	db	67	;'C'
  2415  00DCE9  20                 	db	32
  2416  00DCEA  66                 	db	102	;'f'
  2417  00DCEB  69                 	db	105	;'i'
  2418  00DCEC  72                 	db	114	;'r'
  2419  00DCED  69                 	db	105	;'i'
  2420  00DCEE  6E                 	db	110	;'n'
  2421  00DCEF  67                 	db	103	;'g'
  2422  00DCF0  20                 	db	32
  2423  00DCF1  61                 	db	97	;'a'
  2424  00DCF2  6E                 	db	110	;'n'
  2425  00DCF3  67                 	db	103	;'g'
  2426  00DCF4  6C                 	db	108	;'l'
  2427  00DCF5  65                 	db	101	;'e'
  2428  00DCF6  0A                 	db	10
  2429  00DCF7  0D                 	db	13
  2430  00DCF8  20                 	db	32
  2431  00DCF9  20                 	db	32
  2432  00DCFA  20                 	db	32
  2433  00DCFB  4D                 	db	77	;'M'
  2434  00DCFC  65                 	db	101	;'e'
  2435  00DCFD  61                 	db	97	;'a'
  2436  00DCFE  73                 	db	115	;'s'
  2437  00DCFF  75                 	db	117	;'u'
  2438  00DD00  72                 	db	114	;'r'
  2439  00DD01  65                 	db	101	;'e'
  2440  00DD02  20                 	db	32
  2441  00DD03  52                 	db	82	;'R'
  2442  00DD04  4D                 	db	77	;'M'
  2443  00DD05  53                 	db	83	;'S'
  2444  00DD06  20                 	db	32
  2445  00DD07  56                 	db	86	;'V'
  2446  00DD08  6F                 	db	111	;'o'
  2447  00DD09  6C                 	db	108	;'l'
  2448  00DD0A  74                 	db	116	;'t'
  2449  00DD0B  61                 	db	97	;'a'
  2450  00DD0C  67                 	db	103	;'g'
  2451  00DD0D  65                 	db	101	;'e'
  2452  00DD0E  3F                 	db	63	;'?'
  2453  00DD0F  3A                 	db	58	;':'
  2454  00DD10  20                 	db	32
  2455  00DD11  52                 	db	82	;'R'
  2456  00DD12  65                 	db	101	;'e'
  2457  00DD13  74                 	db	116	;'t'
  2458  00DD14  75                 	db	117	;'u'
  2459  00DD15  72                 	db	114	;'r'
  2460  00DD16  6E                 	db	110	;'n'
  2461  00DD17  73                 	db	115	;'s'
  2462  00DD18  20                 	db	32
  2463  00DD19  74                 	db	116	;'t'
  2464  00DD1A  68                 	db	104	;'h'
  2465  00DD1B  65                 	db	101	;'e'
  2466  00DD1C  20                 	db	32
  2467  00DD1D  63                 	db	99	;'c'
  2468  00DD1E  61                 	db	97	;'a'
  2469  00DD1F  6C                 	db	108	;'l'
  2470  00DD20  63                 	db	99	;'c'
  2471  00DD21  75                 	db	117	;'u'
  2472  00DD22  6C                 	db	108	;'l'
  2473  00DD23  61                 	db	97	;'a'
  2474  00DD24  74                 	db	116	;'t'
  2475  00DD25  65                 	db	101	;'e'
  2476  00DD26  64                 	db	100	;'d'
  2477  00DD27  20                 	db	32
  2478  00DD28  52                 	db	82	;'R'
  2479  00DD29  4D                 	db	77	;'M'
  2480  00DD2A  53                 	db	83	;'S'
  2481  00DD2B  20                 	db	32
  2482  00DD2C  6F                 	db	111	;'o'
  2483  00DD2D  75                 	db	117	;'u'
  2484  00DD2E  74                 	db	116	;'t'
  2485  00DD2F  70                 	db	112	;'p'
  2486  00DD30  75                 	db	117	;'u'
  2487  00DD31  74                 	db	116	;'t'
  2488  00DD32  20                 	db	32
  2489  00DD33  76                 	db	118	;'v'
  2490  00DD34  6F                 	db	111	;'o'
  2491  00DD35  6C                 	db	108	;'l'
  2492  00DD36  74                 	db	116	;'t'
  2493  00DD37  61                 	db	97	;'a'
  2494  00DD38  67                 	db	103	;'g'
  2495  00DD39  65                 	db	101	;'e'
  2496  00DD3A  20                 	db	32
  2497  00DD3B  66                 	db	102	;'f'
  2498  00DD3C  72                 	db	114	;'r'
  2499  00DD3D  6F                 	db	111	;'o'
  2500  00DD3E  6D                 	db	109	;'m'
  2501  00DD3F  20                 	db	32
  2502  00DD40  54                 	db	84	;'T'
  2503  00DD41  52                 	db	82	;'R'
  2504  00DD42  49                 	db	73	;'I'
  2505  00DD43  41                 	db	65	;'A'
  2506  00DD44  43                 	db	67	;'C'
  2507  00DD45  20                 	db	32
  2508  00DD46  66                 	db	102	;'f'
  2509  00DD47  69                 	db	105	;'i'
  2510  00DD48  72                 	db	114	;'r'
  2511  00DD49  69                 	db	105	;'i'
  2512  00DD4A  6E                 	db	110	;'n'
  2513  00DD4B  67                 	db	103	;'g'
  2514  00DD4C  20                 	db	32
  2515  00DD4D  61                 	db	97	;'a'
  2516  00DD4E  6E                 	db	110	;'n'
  2517  00DD4F  67                 	db	103	;'g'
  2518  00DD50  6C                 	db	108	;'l'
  2519  00DD51  65                 	db	101	;'e'
  2520  00DD52  0A                 	db	10
  2521  00DD53  0D                 	db	13
  2522  00DD54  20                 	db	32
  2523  00DD55  20                 	db	32
  2524  00DD56  20                 	db	32
  2525  00DD57  4D                 	db	77	;'M'
  2526  00DD58  65                 	db	101	;'e'
  2527  00DD59  61                 	db	97	;'a'
  2528  00DD5A  73                 	db	115	;'s'
  2529  00DD5B  75                 	db	117	;'u'
  2530  00DD5C  72                 	db	114	;'r'
  2531  00DD5D  65                 	db	101	;'e'
  2532  00DD5E  20                 	db	32
  2533  00DD5F  50                 	db	80	;'P'
  2534  00DD60  6F                 	db	111	;'o'
  2535  00DD61  77                 	db	119	;'w'
  2536  00DD62  65                 	db	101	;'e'
  2537  00DD63  72                 	db	114	;'r'
  2538  00DD64  3F                 	db	63	;'?'
  2539  00DD65  3A                 	db	58	;':'
  2540  00DD66  20                 	db	32
  2541  00DD67  52                 	db	82	;'R'
  2542  00DD68  65                 	db	101	;'e'
  2543  00DD69  74                 	db	116	;'t'
  2544  00DD6A  75                 	db	117	;'u'
  2545  00DD6B  72                 	db	114	;'r'
  2546  00DD6C  6E                 	db	110	;'n'
  2547  00DD6D  73                 	db	115	;'s'
  2548  00DD6E  20                 	db	32
  2549  00DD6F  74                 	db	116	;'t'
  2550  00DD70  68                 	db	104	;'h'
  2551  00DD71  65                 	db	101	;'e'
  2552  00DD72  20                 	db	32
  2553  00DD73  63                 	db	99	;'c'
  2554  00DD74  61                 	db	97	;'a'
  2555  00DD75  6C                 	db	108	;'l'
  2556  00DD76  63                 	db	99	;'c'
  2557  00DD77  75                 	db	117	;'u'
  2558  00DD78  6C                 	db	108	;'l'
  2559  00DD79  61                 	db	97	;'a'
  2560  00DD7A  74                 	db	116	;'t'
  2561  00DD7B  65                 	db	101	;'e'
  2562  00DD7C  64                 	db	100	;'d'
  2563  00DD7D  20                 	db	32
  2564  00DD7E  6F                 	db	111	;'o'
  2565  00DD7F  75                 	db	117	;'u'
  2566  00DD80  74                 	db	116	;'t'
  2567  00DD81  70                 	db	112	;'p'
  2568  00DD82  75                 	db	117	;'u'
  2569  00DD83  74                 	db	116	;'t'
  2570  00DD84  20                 	db	32
  2571  00DD85  70                 	db	112	;'p'
  2572  00DD86  6F                 	db	111	;'o'
  2573  00DD87  77                 	db	119	;'w'
  2574  00DD88  65                 	db	101	;'e'
  2575  00DD89  72                 	db	114	;'r'
  2576  00DD8A  20                 	db	32
  2577  00DD8B  69                 	db	105	;'i'
  2578  00DD8C  6E                 	db	110	;'n'
  2579  00DD8D  20                 	db	32
  2580  00DD8E  57                 	db	87	;'W'
  2581  00DD8F  61                 	db	97	;'a'
  2582  00DD90  74                 	db	116	;'t'
  2583  00DD91  74                 	db	116	;'t'
  2584  00DD92  73                 	db	115	;'s'
  2585  00DD93  0A                 	db	10
  2586  00DD94  0D                 	db	13
  2587  00DD95  20                 	db	32
  2588  00DD96  20                 	db	32
  2589  00DD97  20                 	db	32
  2590  00DD98  4D                 	db	77	;'M'
  2591  00DD99  65                 	db	101	;'e'
  2592  00DD9A  61                 	db	97	;'a'
  2593  00DD9B  73                 	db	115	;'s'
  2594  00DD9C  75                 	db	117	;'u'
  2595  00DD9D  72                 	db	114	;'r'
  2596  00DD9E  65                 	db	101	;'e'
  2597  00DD9F  20                 	db	32
  2598  00DDA0  45                 	db	69	;'E'
  2599  00DDA1  6E                 	db	110	;'n'
  2600  00DDA2  65                 	db	101	;'e'
  2601  00DDA3  72                 	db	114	;'r'
  2602  00DDA4  67                 	db	103	;'g'
  2603  00DDA5  79                 	db	121	;'y'
  2604  00DDA6  3F                 	db	63	;'?'
  2605  00DDA7  3A                 	db	58	;':'
  2606  00DDA8  20                 	db	32
  2607  00DDA9  52                 	db	82	;'R'
  2608  00DDAA  65                 	db	101	;'e'
  2609  00DDAB  74                 	db	116	;'t'
  2610  00DDAC  75                 	db	117	;'u'
  2611  00DDAD  72                 	db	114	;'r'
  2612  00DDAE  6E                 	db	110	;'n'
  2613  00DDAF  73                 	db	115	;'s'
  2614  00DDB0  20                 	db	32
  2615  00DDB1  6D                 	db	109	;'m'
  2616  00DDB2  65                 	db	101	;'e'
  2617  00DDB3  61                 	db	97	;'a'
  2618  00DDB4  73                 	db	115	;'s'
  2619  00DDB5  75                 	db	117	;'u'
  2620  00DDB6  72                 	db	114	;'r'
  2621  00DDB7  65                 	db	101	;'e'
  2622  00DDB8  64                 	db	100	;'d'
  2623  00DDB9  20                 	db	32
  2624  00DDBA  65                 	db	101	;'e'
  2625  00DDBB  6E                 	db	110	;'n'
  2626  00DDBC  65                 	db	101	;'e'
  2627  00DDBD  72                 	db	114	;'r'
  2628  00DDBE  67                 	db	103	;'g'
  2629  00DDBF  79                 	db	121	;'y'
  2630  00DDC0  20                 	db	32
  2631  00DDC1  73                 	db	115	;'s'
  2632  00DDC2  69                 	db	105	;'i'
  2633  00DDC3  6E                 	db	110	;'n'
  2634  00DDC4  63                 	db	99	;'c'
  2635  00DDC5  65                 	db	101	;'e'
  2636  00DDC6  20                 	db	32
  2637  00DDC7  6D                 	db	109	;'m'
  2638  00DDC8  65                 	db	101	;'e'
  2639  00DDC9  61                 	db	97	;'a'
  2640  00DDCA  73                 	db	115	;'s'
  2641  00DDCB  75                 	db	117	;'u'
  2642  00DDCC  72                 	db	114	;'r'
  2643  00DDCD  65                 	db	101	;'e'
  2644  00DDCE  6D                 	db	109	;'m'
  2645  00DDCF  65                 	db	101	;'e'
  2646  00DDD0  6E                 	db	110	;'n'
  2647  00DDD1  74                 	db	116	;'t'
  2648  00DDD2  20                 	db	32
  2649  00DDD3  72                 	db	114	;'r'
  2650  00DDD4  65                 	db	101	;'e'
  2651  00DDD5  73                 	db	115	;'s'
  2652  00DDD6  65                 	db	101	;'e'
  2653  00DDD7  74                 	db	116	;'t'
  2654  00DDD8  20                 	db	32
  2655  00DDD9  69                 	db	105	;'i'
  2656  00DDDA  6E                 	db	110	;'n'
  2657  00DDDB  20                 	db	32
  2658  00DDDC  57                 	db	87	;'W'
  2659  00DDDD  61                 	db	97	;'a'
  2660  00DDDE  74                 	db	116	;'t'
  2661  00DDDF  74                 	db	116	;'t'
  2662  00DDE0  20                 	db	32
  2663  00DDE1  48                 	db	72	;'H'
  2664  00DDE2  6F                 	db	111	;'o'
  2665  00DDE3  75                 	db	117	;'u'
  2666  00DDE4  72                 	db	114	;'r'
  2667  00DDE5  73                 	db	115	;'s'
  2668  00DDE6  0A                 	db	10
  2669  00DDE7  0D                 	db	13
  2670  00DDE8  20                 	db	32
  2671  00DDE9  20                 	db	32
  2672  00DDEA  20                 	db	32
  2673  00DDEB  43                 	db	67	;'C'
  2674  00DDEC  6C                 	db	108	;'l'
  2675  00DDED  65                 	db	101	;'e'
  2676  00DDEE  61                 	db	97	;'a'
  2677  00DDEF  72                 	db	114	;'r'
  2678  00DDF0  20                 	db	32
  2679  00DDF1  45                 	db	69	;'E'
  2680  00DDF2  6E                 	db	110	;'n'
  2681  00DDF3  65                 	db	101	;'e'
  2682  00DDF4  72                 	db	114	;'r'
  2683  00DDF5  67                 	db	103	;'g'
  2684  00DDF6  79                 	db	121	;'y'
  2685  00DDF7  3A                 	db	58	;':'
  2686  00DDF8  20                 	db	32
  2687  00DDF9  52                 	db	82	;'R'
  2688  00DDFA  65                 	db	101	;'e'
  2689  00DDFB  73                 	db	115	;'s'
  2690  00DDFC  65                 	db	101	;'e'
  2691  00DDFD  74                 	db	116	;'t'
  2692  00DDFE  73                 	db	115	;'s'
  2693  00DDFF  20                 	db	32
  2694  00DE00  74                 	db	116	;'t'
  2695  00DE01  68                 	db	104	;'h'
  2696  00DE02  65                 	db	101	;'e'
  2697  00DE03  20                 	db	32
  2698  00DE04  6D                 	db	109	;'m'
  2699  00DE05  65                 	db	101	;'e'
  2700  00DE06  61                 	db	97	;'a'
  2701  00DE07  73                 	db	115	;'s'
  2702  00DE08  75                 	db	117	;'u'
  2703  00DE09  72                 	db	114	;'r'
  2704  00DE0A  65                 	db	101	;'e'
  2705  00DE0B  64                 	db	100	;'d'
  2706  00DE0C  20                 	db	32
  2707  00DE0D  6F                 	db	111	;'o'
  2708  00DE0E  75                 	db	117	;'u'
  2709  00DE0F  74                 	db	116	;'t'
  2710  00DE10  70                 	db	112	;'p'
  2711  00DE11  75                 	db	117	;'u'
  2712  00DE12  74                 	db	116	;'t'
  2713  00DE13  20                 	db	32
  2714  00DE14  65                 	db	101	;'e'
  2715  00DE15  6E                 	db	110	;'n'
  2716  00DE16  65                 	db	101	;'e'
  2717  00DE17  72                 	db	114	;'r'
  2718  00DE18  67                 	db	103	;'g'
  2719  00DE19  79                 	db	121	;'y'
  2720  00DE1A  20                 	db	32
  2721  00DE1B  74                 	db	116	;'t'
  2722  00DE1C  6F                 	db	111	;'o'
  2723  00DE1D  20                 	db	32
  2724  00DE1E  7A                 	db	122	;'z'
  2725  00DE1F  65                 	db	101	;'e'
  2726  00DE20  72                 	db	114	;'r'
  2727  00DE21  6F                 	db	111	;'o'
  2728  00DE22  0A                 	db	10
  2729  00DE23  0D                 	db	13
  2730  00DE24  20                 	db	32
  2731  00DE25  20                 	db	32
  2732  00DE26  20                 	db	32
  2733  00DE27  4C                 	db	76	;'L'
  2734  00DE28  6F                 	db	111	;'o'
  2735  00DE29  61                 	db	97	;'a'
  2736  00DE2A  64                 	db	100	;'d'
  2737  00DE2B  20                 	db	32
  2738  00DE2C  4F                 	db	79	;'O'
  2739  00DE2D  6E                 	db	110	;'n'
  2740  00DE2E  20                 	db	32
  2741  00DE2F  54                 	db	84	;'T'
  2742  00DE30  69                 	db	105	;'i'
  2743  00DE31  6D                 	db	109	;'m'
  2744  00DE32  65                 	db	101	;'e'
  2745  00DE33  3F                 	db	63	;'?'
  2746  00DE34  3A                 	db	58	;':'
  2747  00DE35  20                 	db	32
  2748  00DE36  52                 	db	82	;'R'
  2749  00DE37  65                 	db	101	;'e'
  2750  00DE38  74                 	db	116	;'t'
  2751  00DE39  75                 	db	117	;'u'
  2752  00DE3A  72                 	db	114	;'r'
  2753  00DE3B  6E                 	db	110	;'n'
  2754  00DE3C  73                 	db	115	;'s'
  2755  00DE3D  20                 	db	32
  2756  00DE3E  6C                 	db	108	;'l'
  2757  00DE3F  6F                 	db	111	;'o'
  2758  00DE40  61                 	db	97	;'a'
  2759  00DE41  64                 	db	100	;'d'
  2760  00DE42  20                 	db	32
  2761  00DE43  6F                 	db	111	;'o'
  2762  00DE44  6E                 	db	110	;'n'
  2763  00DE45  20                 	db	32
  2764  00DE46  74                 	db	116	;'t'
  2765  00DE47  69                 	db	105	;'i'
  2766  00DE48  6D                 	db	109	;'m'
  2767  00DE49  65                 	db	101	;'e'
  2768  00DE4A  20                 	db	32
  2769  00DE4B  73                 	db	115	;'s'
  2770  00DE4C  69                 	db	105	;'i'
  2771  00DE4D  6E                 	db	110	;'n'
  2772  00DE4E  63                 	db	99	;'c'
  2773  00DE4F  65                 	db	101	;'e'
  2774  00DE50  20                 	db	32
  2775  00DE51  6C                 	db	108	;'l'
  2776  00DE52  61                 	db	97	;'a'
  2777  00DE53  73                 	db	115	;'s'
  2778  00DE54  74                 	db	116	;'t'
  2779  00DE55  20                 	db	32
  2780  00DE56  64                 	db	100	;'d'
  2781  00DE57  65                 	db	101	;'e'
  2782  00DE58  76                 	db	118	;'v'
  2783  00DE59  69                 	db	105	;'i'
  2784  00DE5A  63                 	db	99	;'c'
  2785  00DE5B  65                 	db	101	;'e'
  2786  00DE5C  20                 	db	32
  2787  00DE5D  72                 	db	114	;'r'
  2788  00DE5E  65                 	db	101	;'e'
  2789  00DE5F  73                 	db	115	;'s'
  2790  00DE60  65                 	db	101	;'e'
  2791  00DE61  74                 	db	116	;'t'
  2792  00DE62  20                 	db	32
  2793  00DE63  69                 	db	105	;'i'
  2794  00DE64  6E                 	db	110	;'n'
  2795  00DE65  20                 	db	32
  2796  00DE66  73                 	db	115	;'s'
  2797  00DE67  65                 	db	101	;'e'
  2798  00DE68  63                 	db	99	;'c'
  2799  00DE69  6F                 	db	111	;'o'
  2800  00DE6A  6E                 	db	110	;'n'
  2801  00DE6B  64                 	db	100	;'d'
  2802  00DE6C  73                 	db	115	;'s'
  2803  00DE6D  0A                 	db	10
  2804  00DE6E  0D                 	db	13
  2805  00DE6F  20                 	db	32
  2806  00DE70  20                 	db	32
  2807  00DE71  20                 	db	32
  2808  00DE72  4D                 	db	77	;'M'
  2809  00DE73  61                 	db	97	;'a'
  2810  00DE74  78                 	db	120	;'x'
  2811  00DE75  20                 	db	32
  2812  00DE76  52                 	db	82	;'R'
  2813  00DE77  4D                 	db	77	;'M'
  2814  00DE78  53                 	db	83	;'S'
  2815  00DE79  20                 	db	32
  2816  00DE7A  43                 	db	67	;'C'
  2817  00DE7B  75                 	db	117	;'u'
  2818  00DE7C  72                 	db	114	;'r'
  2819  00DE7D  72                 	db	114	;'r'
  2820  00DE7E  65                 	db	101	;'e'
  2821  00DE7F  6E                 	db	110	;'n'
  2822  00DE80  74                 	db	116	;'t'
  2823  00DE81  3F                 	db	63	;'?'
  2824  00DE82  3A                 	db	58	;':'
  2825  00DE83  20                 	db	32
  2826  00DE84  50                 	db	80	;'P'
  2827  00DE85  72                 	db	114	;'r'
  2828  00DE86  69                 	db	105	;'i'
  2829  00DE87  6E                 	db	110	;'n'
  2830  00DE88  74                 	db	116	;'t'
  2831  00DE89  73                 	db	115	;'s'
  2832  00DE8A  20                 	db	32
  2833  00DE8B  74                 	db	116	;'t'
  2834  00DE8C  68                 	db	104	;'h'
  2835  00DE8D  65                 	db	101	;'e'
  2836  00DE8E  20                 	db	32
  2837  00DE8F  6D                 	db	109	;'m'
  2838  00DE90  61                 	db	97	;'a'
  2839  00DE91  78                 	db	120	;'x'
  2840  00DE92  69                 	db	105	;'i'
  2841  00DE93  6D                 	db	109	;'m'
  2842  00DE94  75                 	db	117	;'u'
  2843  00DE95  6D                 	db	109	;'m'
  2844  00DE96  20                 	db	32
  2845  00DE97  72                 	db	114	;'r'
  2846  00DE98  65                 	db	101	;'e'
  2847  00DE99  63                 	db	99	;'c'
  2848  00DE9A  6F                 	db	111	;'o'
  2849  00DE9B  72                 	db	114	;'r'
  2850  00DE9C  64                 	db	100	;'d'
  2851  00DE9D  65                 	db	101	;'e'
  2852  00DE9E  64                 	db	100	;'d'
  2853  00DE9F  20                 	db	32
  2854  00DEA0  52                 	db	82	;'R'
  2855  00DEA1  4D                 	db	77	;'M'
  2856  00DEA2  53                 	db	83	;'S'
  2857  00DEA3  20                 	db	32
  2858  00DEA4  6F                 	db	111	;'o'
  2859  00DEA5  75                 	db	117	;'u'
  2860  00DEA6  74                 	db	116	;'t'
  2861  00DEA7  70                 	db	112	;'p'
  2862  00DEA8  75                 	db	117	;'u'
  2863  00DEA9  74                 	db	116	;'t'
  2864  00DEAA  20                 	db	32
  2865  00DEAB  63                 	db	99	;'c'
  2866  00DEAC  75                 	db	117	;'u'
  2867  00DEAD  72                 	db	114	;'r'
  2868  00DEAE  72                 	db	114	;'r'
  2869  00DEAF  65                 	db	101	;'e'
  2870  00DEB0  6E                 	db	110	;'n'
  2871  00DEB1  74                 	db	116	;'t'
  2872  00DEB2  0A                 	db	10
  2873  00DEB3  0D                 	db	13
  2874  00DEB4  20                 	db	32
  2875  00DEB5  20                 	db	32
  2876  00DEB6  20                 	db	32
  2877  00DEB7  4D                 	db	77	;'M'
  2878  00DEB8  61                 	db	97	;'a'
  2879  00DEB9  78                 	db	120	;'x'
  2880  00DEBA  20                 	db	32
  2881  00DEBB  50                 	db	80	;'P'
  2882  00DEBC  6F                 	db	111	;'o'
  2883  00DEBD  77                 	db	119	;'w'
  2884  00DEBE  65                 	db	101	;'e'
  2885  00DEBF  72                 	db	114	;'r'
  2886  00DEC0  3F                 	db	63	;'?'
  2887  00DEC1  3A                 	db	58	;':'
  2888  00DEC2  20                 	db	32
  2889  00DEC3  50                 	db	80	;'P'
  2890  00DEC4  72                 	db	114	;'r'
  2891  00DEC5  69                 	db	105	;'i'
  2892  00DEC6  6E                 	db	110	;'n'
  2893  00DEC7  74                 	db	116	;'t'
  2894  00DEC8  73                 	db	115	;'s'
  2895  00DEC9  20                 	db	32
  2896  00DECA  74                 	db	116	;'t'
  2897  00DECB  68                 	db	104	;'h'
  2898  00DECC  65                 	db	101	;'e'
  2899  00DECD  20                 	db	32
  2900  00DECE  6D                 	db	109	;'m'
  2901  00DECF  61                 	db	97	;'a'
  2902  00DED0  78                 	db	120	;'x'
  2903  00DED1  69                 	db	105	;'i'
  2904  00DED2  6D                 	db	109	;'m'
  2905  00DED3  75                 	db	117	;'u'
  2906  00DED4  6D                 	db	109	;'m'
  2907  00DED5  20                 	db	32
  2908  00DED6  72                 	db	114	;'r'
  2909  00DED7  65                 	db	101	;'e'
  2910  00DED8  63                 	db	99	;'c'
  2911  00DED9  6F                 	db	111	;'o'
  2912  00DEDA  72                 	db	114	;'r'
  2913  00DEDB  64                 	db	100	;'d'
  2914  00DEDC  65                 	db	101	;'e'
  2915  00DEDD  64                 	db	100	;'d'
  2916  00DEDE  20                 	db	32
  2917  00DEDF  6F                 	db	111	;'o'
  2918  00DEE0  75                 	db	117	;'u'
  2919  00DEE1  74                 	db	116	;'t'
  2920  00DEE2  70                 	db	112	;'p'
  2921  00DEE3  75                 	db	117	;'u'
  2922  00DEE4  74                 	db	116	;'t'
  2923  00DEE5  20                 	db	32
  2924  00DEE6  70                 	db	112	;'p'
  2925  00DEE7  6F                 	db	111	;'o'
  2926  00DEE8  77                 	db	119	;'w'
  2927  00DEE9  65                 	db	101	;'e'
  2928  00DEEA  72                 	db	114	;'r'
  2929  00DEEB  0A                 	db	10
  2930  00DEEC  0D                 	db	13
  2931  00DEED  0A                 	db	10
  2932  00DEEE  0D                 	db	13
  2933  00DEEF  4F                 	db	79	;'O'
  2934  00DEF0  75                 	db	117	;'u'
  2935  00DEF1  74                 	db	116	;'t'
  2936  00DEF2  70                 	db	112	;'p'
  2937  00DEF3  75                 	db	117	;'u'
  2938  00DEF4  74                 	db	116	;'t'
  2939  00DEF5  20                 	db	32
  2940  00DEF6  43                 	db	67	;'C'
  2941  00DEF7  6F                 	db	111	;'o'
  2942  00DEF8  6E                 	db	110	;'n'
  2943  00DEF9  74                 	db	116	;'t'
  2944  00DEFA  72                 	db	114	;'r'
  2945  00DEFB  6F                 	db	111	;'o'
  2946  00DEFC  6C                 	db	108	;'l'
  2947  00DEFD  20                 	db	32
  2948  00DEFE  43                 	db	67	;'C'
  2949  00DEFF  6F                 	db	111	;'o'
  2950  00DF00  6D                 	db	109	;'m'
  2951  00DF01  6D                 	db	109	;'m'
  2952  00DF02  61                 	db	97	;'a'
  2953  00DF03  6E                 	db	110	;'n'
  2954  00DF04  64                 	db	100	;'d'
  2955  00DF05  73                 	db	115	;'s'
  2956  00DF06  3A                 	db	58	;':'
  2957  00DF07  20                 	db	32
  2958  00DF08  43                 	db	67	;'C'
  2959  00DF09  6F                 	db	111	;'o'
  2960  00DF0A  6E                 	db	110	;'n'
  2961  00DF0B  74                 	db	116	;'t'
  2962  00DF0C  72                 	db	114	;'r'
  2963  00DF0D  6F                 	db	111	;'o'
  2964  00DF0E  6C                 	db	108	;'l'
  2965  00DF0F  20                 	db	32
  2966  00DF10  74                 	db	116	;'t'
  2967  00DF11  68                 	db	104	;'h'
  2968  00DF12  65                 	db	101	;'e'
  2969  00DF13  20                 	db	32
  2970  00DF14  6F                 	db	111	;'o'
  2971  00DF15  75                 	db	117	;'u'
  2972  00DF16  74                 	db	116	;'t'
  2973  00DF17  70                 	db	112	;'p'
  2974  00DF18  75                 	db	117	;'u'
  2975  00DF19  74                 	db	116	;'t'
  2976  00DF1A  20                 	db	32
  2977  00DF1B  73                 	db	115	;'s'
  2978  00DF1C  74                 	db	116	;'t'
  2979  00DF1D  61                 	db	97	;'a'
  2980  00DF1E  74                 	db	116	;'t'
  2981  00DF1F  65                 	db	101	;'e'
  2982  00DF20  20                 	db	32
  2983  00DF21  61                 	db	97	;'a'
  2984  00DF22  6E                 	db	110	;'n'
  2985  00DF23  64                 	db	100	;'d'
  2986  00DF24  20                 	db	32
  2987  00DF25  64                 	db	100	;'d'
  2988  00DF26  69                 	db	105	;'i'
  2989  00DF27  6D                 	db	109	;'m'
  2990  00DF28  6D                 	db	109	;'m'
  2991  00DF29  69                 	db	105	;'i'
  2992  00DF2A  6E                 	db	110	;'n'
  2993  00DF2B  67                 	db	103	;'g'
  2994  00DF2C  20                 	db	32
  2995  00DF2D  66                 	db	102	;'f'
  2996  00DF2E  65                 	db	101	;'e'
  2997  00DF2F  61                 	db	97	;'a'
  2998  00DF30  74                 	db	116	;'t'
  2999  00DF31  75                 	db	117	;'u'
  3000  00DF32  72                 	db	114	;'r'
  3001  00DF33  65                 	db	101	;'e'
  3002  00DF34  73                 	db	115	;'s'
  3003  00DF35  0A                 	db	10
  3004  00DF36  0D                 	db	13
  3005  00DF37  20                 	db	32
  3006  00DF38  20                 	db	32
  3007  00DF39  20                 	db	32
  3008  00DF3A  45                 	db	69	;'E'
  3009  00DF3B  6E                 	db	110	;'n'
  3010  00DF3C  61                 	db	97	;'a'
  3011  00DF3D  62                 	db	98	;'b'
  3012  00DF3E  6C                 	db	108	;'l'
  3013  00DF3F  65                 	db	101	;'e'
  3014  00DF40  20                 	db	32
  3015  00DF41  44                 	db	68	;'D'
  3016  00DF42  69                 	db	105	;'i'
  3017  00DF43  6D                 	db	109	;'m'
  3018  00DF44  6D                 	db	109	;'m'
  3019  00DF45  69                 	db	105	;'i'
  3020  00DF46  6E                 	db	110	;'n'
  3021  00DF47  67                 	db	103	;'g'
  3022  00DF48  3A                 	db	58	;':'
  3023  00DF49  20                 	db	32
  3024  00DF4A  45                 	db	69	;'E'
  3025  00DF4B  6E                 	db	110	;'n'
  3026  00DF4C  61                 	db	97	;'a'
  3027  00DF4D  62                 	db	98	;'b'
  3028  00DF4E  6C                 	db	108	;'l'
  3029  00DF4F  65                 	db	101	;'e'
  3030  00DF50  20                 	db	32
  3031  00DF51  54                 	db	84	;'T'
  3032  00DF52  52                 	db	82	;'R'
  3033  00DF53  49                 	db	73	;'I'
  3034  00DF54  41                 	db	65	;'A'
  3035  00DF55  43                 	db	67	;'C'
  3036  00DF56  20                 	db	32
  3037  00DF57  6F                 	db	111	;'o'
  3038  00DF58  75                 	db	117	;'u'
  3039  00DF59  74                 	db	116	;'t'
  3040  00DF5A  70                 	db	112	;'p'
  3041  00DF5B  75                 	db	117	;'u'
  3042  00DF5C  74                 	db	116	;'t'
  3043  00DF5D  20                 	db	32
  3044  00DF5E  64                 	db	100	;'d'
  3045  00DF5F  69                 	db	105	;'i'
  3046  00DF60  6D                 	db	109	;'m'
  3047  00DF61  6D                 	db	109	;'m'
  3048  00DF62  69                 	db	105	;'i'
  3049  00DF63  6E                 	db	110	;'n'
  3050  00DF64  67                 	db	103	;'g'
  3051  00DF65  0A                 	db	10
  3052  00DF66  0D                 	db	13
  3053  00DF67  20                 	db	32
  3054  00DF68  20                 	db	32
  3055  00DF69  20                 	db	32
  3056  00DF6A  44                 	db	68	;'D'
  3057  00DF6B  69                 	db	105	;'i'
  3058  00DF6C  73                 	db	115	;'s'
  3059  00DF6D  61                 	db	97	;'a'
  3060  00DF6E  62                 	db	98	;'b'
  3061  00DF6F  6C                 	db	108	;'l'
  3062  00DF70  65                 	db	101	;'e'
  3063  00DF71  20                 	db	32
  3064  00DF72  44                 	db	68	;'D'
  3065  00DF73  69                 	db	105	;'i'
  3066  00DF74  6D                 	db	109	;'m'
  3067  00DF75  6D                 	db	109	;'m'
  3068  00DF76  69                 	db	105	;'i'
  3069  00DF77  6E                 	db	110	;'n'
  3070  00DF78  67                 	db	103	;'g'
  3071  00DF79  3A                 	db	58	;':'
  3072  00DF7A  20                 	db	32
  3073  00DF7B  44                 	db	68	;'D'
  3074  00DF7C  69                 	db	105	;'i'
  3075  00DF7D  73                 	db	115	;'s'
  3076  00DF7E  61                 	db	97	;'a'
  3077  00DF7F  62                 	db	98	;'b'
  3078  00DF80  6C                 	db	108	;'l'
  3079  00DF81  65                 	db	101	;'e'
  3080  00DF82  20                 	db	32
  3081  00DF83  54                 	db	84	;'T'
  3082  00DF84  52                 	db	82	;'R'
  3083  00DF85  49                 	db	73	;'I'
  3084  00DF86  41                 	db	65	;'A'
  3085  00DF87  43                 	db	67	;'C'
  3086  00DF88  20                 	db	32
  3087  00DF89  6F                 	db	111	;'o'
  3088  00DF8A  75                 	db	117	;'u'
  3089  00DF8B  74                 	db	116	;'t'
  3090  00DF8C  70                 	db	112	;'p'
  3091  00DF8D  75                 	db	117	;'u'
  3092  00DF8E  74                 	db	116	;'t'
  3093  00DF8F  20                 	db	32
  3094  00DF90  64                 	db	100	;'d'
  3095  00DF91  69                 	db	105	;'i'
  3096  00DF92  6D                 	db	109	;'m'
  3097  00DF93  6D                 	db	109	;'m'
  3098  00DF94  69                 	db	105	;'i'
  3099  00DF95  6E                 	db	110	;'n'
  3100  00DF96  67                 	db	103	;'g'
  3101  00DF97  0A                 	db	10
  3102  00DF98  0D                 	db	13
  3103  00DF99  20                 	db	32
  3104  00DF9A  20                 	db	32
  3105  00DF9B  20                 	db	32
  3106  00DF9C  45                 	db	69	;'E'
  3107  00DF9D  6E                 	db	110	;'n'
  3108  00DF9E  61                 	db	97	;'a'
  3109  00DF9F  62                 	db	98	;'b'
  3110  00DFA0  6C                 	db	108	;'l'
  3111  00DFA1  65                 	db	101	;'e'
  3112  00DFA2  20                 	db	32
  3113  00DFA3  4C                 	db	76	;'L'
  3114  00DFA4  6F                 	db	111	;'o'
  3115  00DFA5  61                 	db	97	;'a'
  3116  00DFA6  64                 	db	100	;'d'
  3117  00DFA7  3A                 	db	58	;':'
  3118  00DFA8  20                 	db	32
  3119  00DFA9  45                 	db	69	;'E'
  3120  00DFAA  6E                 	db	110	;'n'
  3121  00DFAB  61                 	db	97	;'a'
  3122  00DFAC  62                 	db	98	;'b'
  3123  00DFAD  6C                 	db	108	;'l'
  3124  00DFAE  65                 	db	101	;'e'
  3125  00DFAF  73                 	db	115	;'s'
  3126  00DFB0  20                 	db	32
  3127  00DFB1  74                 	db	116	;'t'
  3128  00DFB2  68                 	db	104	;'h'
  3129  00DFB3  65                 	db	101	;'e'
  3130  00DFB4  20                 	db	32
  3131  00DFB5  6F                 	db	111	;'o'
  3132  00DFB6  75                 	db	117	;'u'
  3133  00DFB7  74                 	db	116	;'t'
  3134  00DFB8  70                 	db	112	;'p'
  3135  00DFB9  75                 	db	117	;'u'
  3136  00DFBA  74                 	db	116	;'t'
  3137  00DFBB  20                 	db	32
  3138  00DFBC  54                 	db	84	;'T'
  3139  00DFBD  52                 	db	82	;'R'
  3140  00DFBE  49                 	db	73	;'I'
  3141  00DFBF  41                 	db	65	;'A'
  3142  00DFC0  43                 	db	67	;'C'
  3143  00DFC1  20                 	db	32
  3144  00DFC2  77                 	db	119	;'w'
  3145  00DFC3  69                 	db	105	;'i'
  3146  00DFC4  74                 	db	116	;'t'
  3147  00DFC5  68                 	db	104	;'h'
  3148  00DFC6  20                 	db	32
  3149  00DFC7  64                 	db	100	;'d'
  3150  00DFC8  69                 	db	105	;'i'
  3151  00DFC9  6D                 	db	109	;'m'
  3152  00DFCA  6D                 	db	109	;'m'
  3153  00DFCB  69                 	db	105	;'i'
  3154  00DFCC  6E                 	db	110	;'n'
  3155  00DFCD  67                 	db	103	;'g'
  3156  00DFCE  20                 	db	32
  3157  00DFCF  64                 	db	100	;'d'
  3158  00DFD0  69                 	db	105	;'i'
  3159  00DFD1  73                 	db	115	;'s'
  3160  00DFD2  61                 	db	97	;'a'
  3161  00DFD3  62                 	db	98	;'b'
  3162  00DFD4  6C                 	db	108	;'l'
  3163  00DFD5  65                 	db	101	;'e'
  3164  00DFD6  64                 	db	100	;'d'
  3165  00DFD7  0A                 	db	10
  3166  00DFD8  0D                 	db	13
  3167  00DFD9  20                 	db	32
  3168  00DFDA  20                 	db	32
  3169  00DFDB  20                 	db	32
  3170  00DFDC  44                 	db	68	;'D'
  3171  00DFDD  69                 	db	105	;'i'
  3172  00DFDE  73                 	db	115	;'s'
  3173  00DFDF  61                 	db	97	;'a'
  3174  00DFE0  62                 	db	98	;'b'
  3175  00DFE1  6C                 	db	108	;'l'
  3176  00DFE2  65                 	db	101	;'e'
  3177  00DFE3  20                 	db	32
  3178  00DFE4  4C                 	db	76	;'L'
  3179  00DFE5  6F                 	db	111	;'o'
  3180  00DFE6  61                 	db	97	;'a'
  3181  00DFE7  64                 	db	100	;'d'
  3182  00DFE8  3A                 	db	58	;':'
  3183  00DFE9  20                 	db	32
  3184  00DFEA  44                 	db	68	;'D'
  3185  00DFEB  69                 	db	105	;'i'
  3186  00DFEC  73                 	db	115	;'s'
  3187  00DFED  61                 	db	97	;'a'
  3188  00DFEE  62                 	db	98	;'b'
  3189  00DFEF  6C                 	db	108	;'l'
  3190  00DFF0  65                 	db	101	;'e'
  3191  00DFF1  73                 	db	115	;'s'
  3192  00DFF2  20                 	db	32
  3193  00DFF3  74                 	db	116	;'t'
  3194  00DFF4  68                 	db	104	;'h'
  3195  00DFF5  65                 	db	101	;'e'
  3196  00DFF6  20                 	db	32
  3197  00DFF7  6F                 	db	111	;'o'
  3198  00DFF8  75                 	db	117	;'u'
  3199  00DFF9  74                 	db	116	;'t'
  3200  00DFFA  70                 	db	112	;'p'
  3201  00DFFB  75                 	db	117	;'u'
  3202  00DFFC  74                 	db	116	;'t'
  3203  00DFFD  20                 	db	32
  3204  00DFFE  54                 	db	84	;'T'
  3205  00DFFF  52                 	db	82	;'R'
  3206  00E000  49                 	db	73	;'I'
  3207  00E001  41                 	db	65	;'A'
  3208  00E002  43                 	db	67	;'C'
  3209  00E003  20                 	db	32
  3210  00E004  63                 	db	99	;'c'
  3211  00E005  6F                 	db	111	;'o'
  3212  00E006  6D                 	db	109	;'m'
  3213  00E007  70                 	db	112	;'p'
  3214  00E008  6C                 	db	108	;'l'
  3215  00E009  65                 	db	101	;'e'
  3216  00E00A  74                 	db	116	;'t'
  3217  00E00B  65                 	db	101	;'e'
  3218  00E00C  6C                 	db	108	;'l'
  3219  00E00D  79                 	db	121	;'y'
  3220  00E00E  0A                 	db	10
  3221  00E00F  0D                 	db	13
  3222  00E010  20                 	db	32
  3223  00E011  20                 	db	32
  3224  00E012  20                 	db	32
  3225  00E013  4C                 	db	76	;'L'
  3226  00E014  6F                 	db	111	;'o'
  3227  00E015  61                 	db	97	;'a'
  3228  00E016  64                 	db	100	;'d'
  3229  00E017  20                 	db	32
  3230  00E018  45                 	db	69	;'E'
  3231  00E019  6E                 	db	110	;'n'
  3232  00E01A  61                 	db	97	;'a'
  3233  00E01B  62                 	db	98	;'b'
  3234  00E01C  6C                 	db	108	;'l'
  3235  00E01D  65                 	db	101	;'e'
  3236  00E01E  64                 	db	100	;'d'
  3237  00E01F  3F                 	db	63	;'?'
  3238  00E020  3A                 	db	58	;':'
  3239  00E021  20                 	db	32
  3240  00E022  52                 	db	82	;'R'
  3241  00E023  65                 	db	101	;'e'
  3242  00E024  74                 	db	116	;'t'
  3243  00E025  75                 	db	117	;'u'
  3244  00E026  72                 	db	114	;'r'
  3245  00E027  6E                 	db	110	;'n'
  3246  00E028  73                 	db	115	;'s'
  3247  00E029  20                 	db	32
  3248  00E02A  69                 	db	105	;'i'
  3249  00E02B  66                 	db	102	;'f'
  3250  00E02C  20                 	db	32
  3251  00E02D  74                 	db	116	;'t'
  3252  00E02E  68                 	db	104	;'h'
  3253  00E02F  65                 	db	101	;'e'
  3254  00E030  20                 	db	32
  3255  00E031  6F                 	db	111	;'o'
  3256  00E032  75                 	db	117	;'u'
  3257  00E033  74                 	db	116	;'t'
  3258  00E034  70                 	db	112	;'p'
  3259  00E035  75                 	db	117	;'u'
  3260  00E036  74                 	db	116	;'t'
  3261  00E037  20                 	db	32
  3262  00E038  6C                 	db	108	;'l'
  3263  00E039  6F                 	db	111	;'o'
  3264  00E03A  61                 	db	97	;'a'
  3265  00E03B  64                 	db	100	;'d'
  3266  00E03C  20                 	db	32
  3267  00E03D  69                 	db	105	;'i'
  3268  00E03E  73                 	db	115	;'s'
  3269  00E03F  20                 	db	32
  3270  00E040  65                 	db	101	;'e'
  3271  00E041  6E                 	db	110	;'n'
  3272  00E042  61                 	db	97	;'a'
  3273  00E043  62                 	db	98	;'b'
  3274  00E044  6C                 	db	108	;'l'
  3275  00E045  65                 	db	101	;'e'
  3276  00E046  64                 	db	100	;'d'
  3277  00E047  20                 	db	32
  3278  00E048  6F                 	db	111	;'o'
  3279  00E049  72                 	db	114	;'r'
  3280  00E04A  20                 	db	32
  3281  00E04B  64                 	db	100	;'d'
  3282  00E04C  69                 	db	105	;'i'
  3283  00E04D  73                 	db	115	;'s'
  3284  00E04E  61                 	db	97	;'a'
  3285  00E04F  62                 	db	98	;'b'
  3286  00E050  6C                 	db	108	;'l'
  3287  00E051  65                 	db	101	;'e'
  3288  00E052  64                 	db	100	;'d'
  3289  00E053  0A                 	db	10
  3290  00E054  0D                 	db	13
  3291  00E055  20                 	db	32
  3292  00E056  20                 	db	32
  3293  00E057  20                 	db	32
  3294  00E058  44                 	db	68	;'D'
  3295  00E059  69                 	db	105	;'i'
  3296  00E05A  6D                 	db	109	;'m'
  3297  00E05B  6D                 	db	109	;'m'
  3298  00E05C  69                 	db	105	;'i'
  3299  00E05D  6E                 	db	110	;'n'
  3300  00E05E  67                 	db	103	;'g'
  3301  00E05F  20                 	db	32
  3302  00E060  45                 	db	69	;'E'
  3303  00E061  6E                 	db	110	;'n'
  3304  00E062  61                 	db	97	;'a'
  3305  00E063  62                 	db	98	;'b'
  3306  00E064  6C                 	db	108	;'l'
  3307  00E065  65                 	db	101	;'e'
  3308  00E066  64                 	db	100	;'d'
  3309  00E067  3F                 	db	63	;'?'
  3310  00E068  3A                 	db	58	;':'
  3311  00E069  20                 	db	32
  3312  00E06A  52                 	db	82	;'R'
  3313  00E06B  65                 	db	101	;'e'
  3314  00E06C  74                 	db	116	;'t'
  3315  00E06D  75                 	db	117	;'u'
  3316  00E06E  72                 	db	114	;'r'
  3317  00E06F  6E                 	db	110	;'n'
  3318  00E070  73                 	db	115	;'s'
  3319  00E071  20                 	db	32
  3320  00E072  69                 	db	105	;'i'
  3321  00E073  66                 	db	102	;'f'
  3322  00E074  20                 	db	32
  3323  00E075  64                 	db	100	;'d'
  3324  00E076  69                 	db	105	;'i'
  3325  00E077  6D                 	db	109	;'m'
  3326  00E078  6D                 	db	109	;'m'
  3327  00E079  69                 	db	105	;'i'
  3328  00E07A  6E                 	db	110	;'n'
  3329  00E07B  67                 	db	103	;'g'
  3330  00E07C  20                 	db	32
  3331  00E07D  6F                 	db	111	;'o'
  3332  00E07E  66                 	db	102	;'f'
  3333  00E07F  20                 	db	32
  3334  00E080  74                 	db	116	;'t'
  3335  00E081  68                 	db	104	;'h'
  3336  00E082  65                 	db	101	;'e'
  3337  00E083  20                 	db	32
  3338  00E084  6F                 	db	111	;'o'
  3339  00E085  75                 	db	117	;'u'
  3340  00E086  74                 	db	116	;'t'
  3341  00E087  70                 	db	112	;'p'
  3342  00E088  75                 	db	117	;'u'
  3343  00E089  74                 	db	116	;'t'
  3344  00E08A  20                 	db	32
  3345  00E08B  6C                 	db	108	;'l'
  3346  00E08C  6F                 	db	111	;'o'
  3347  00E08D  61                 	db	97	;'a'
  3348  00E08E  64                 	db	100	;'d'
  3349  00E08F  20                 	db	32
  3350  00E090  69                 	db	105	;'i'
  3351  00E091  73                 	db	115	;'s'
  3352  00E092  20                 	db	32
  3353  00E093  65                 	db	101	;'e'
  3354  00E094  6E                 	db	110	;'n'
  3355  00E095  61                 	db	97	;'a'
  3356  00E096  62                 	db	98	;'b'
  3357  00E097  6C                 	db	108	;'l'
  3358  00E098  65                 	db	101	;'e'
  3359  00E099  64                 	db	100	;'d'
  3360  00E09A  20                 	db	32
  3361  00E09B  6F                 	db	111	;'o'
  3362  00E09C  72                 	db	114	;'r'
  3363  00E09D  20                 	db	32
  3364  00E09E  6E                 	db	110	;'n'
  3365  00E09F  6F                 	db	111	;'o'
  3366  00E0A0  74                 	db	116	;'t'
  3367  00E0A1  0A                 	db	10
  3368  00E0A2  0D                 	db	13
  3369  00E0A3  20                 	db	32
  3370  00E0A4  20                 	db	32
  3371  00E0A5  20                 	db	32
  3372  00E0A6  53                 	db	83	;'S'
  3373  00E0A7  65                 	db	101	;'e'
  3374  00E0A8  74                 	db	116	;'t'
  3375  00E0A9  20                 	db	32
  3376  00E0AA  44                 	db	68	;'D'
  3377  00E0AB  69                 	db	105	;'i'
  3378  00E0AC  6D                 	db	109	;'m'
  3379  00E0AD  6D                 	db	109	;'m'
  3380  00E0AE  69                 	db	105	;'i'
  3381  00E0AF  6E                 	db	110	;'n'
  3382  00E0B0  67                 	db	103	;'g'
  3383  00E0B1  20                 	db	32
  3384  00E0B2  50                 	db	80	;'P'
  3385  00E0B3  65                 	db	101	;'e'
  3386  00E0B4  72                 	db	114	;'r'
  3387  00E0B5  63                 	db	99	;'c'
  3388  00E0B6  65                 	db	101	;'e'
  3389  00E0B7  6E                 	db	110	;'n'
  3390  00E0B8  74                 	db	116	;'t'
  3391  00E0B9  61                 	db	97	;'a'
  3392  00E0BA  67                 	db	103	;'g'
  3393  00E0BB  65                 	db	101	;'e'
  3394  00E0BC  3A                 	db	58	;':'
  3395  00E0BD  20                 	db	32
  3396  00E0BE  3C                 	db	60	;'<'
  3397  00E0BF  78                 	db	120	;'x'
  3398  00E0C0  3E                 	db	62	;'>'
  3399  00E0C1  3A                 	db	58	;':'
  3400  00E0C2  20                 	db	32
  3401  00E0C3  53                 	db	83	;'S'
  3402  00E0C4  65                 	db	101	;'e'
  3403  00E0C5  74                 	db	116	;'t'
  3404  00E0C6  73                 	db	115	;'s'
  3405  00E0C7  20                 	db	32
  3406  00E0C8  74                 	db	116	;'t'
  3407  00E0C9  68                 	db	104	;'h'
  3408  00E0CA  65                 	db	101	;'e'
  3409  00E0CB  20                 	db	32
  3410  00E0CC  6F                 	db	111	;'o'
  3411  00E0CD  75                 	db	117	;'u'
  3412  00E0CE  74                 	db	116	;'t'
  3413  00E0CF  70                 	db	112	;'p'
  3414  00E0D0  75                 	db	117	;'u'
  3415  00E0D1  74                 	db	116	;'t'
  3416  00E0D2  20                 	db	32
  3417  00E0D3  64                 	db	100	;'d'
  3418  00E0D4  69                 	db	105	;'i'
  3419  00E0D5  6D                 	db	109	;'m'
  3420  00E0D6  6D                 	db	109	;'m'
  3421  00E0D7  69                 	db	105	;'i'
  3422  00E0D8  6E                 	db	110	;'n'
  3423  00E0D9  67                 	db	103	;'g'
  3424  00E0DA  20                 	db	32
  3425  00E0DB  70                 	db	112	;'p'
  3426  00E0DC  65                 	db	101	;'e'
  3427  00E0DD  72                 	db	114	;'r'
  3428  00E0DE  63                 	db	99	;'c'
  3429  00E0DF  65                 	db	101	;'e'
  3430  00E0E0  6E                 	db	110	;'n'
  3431  00E0E1  74                 	db	116	;'t'
  3432  00E0E2  61                 	db	97	;'a'
  3433  00E0E3  67                 	db	103	;'g'
  3434  00E0E4  65                 	db	101	;'e'
  3435  00E0E5  20                 	db	32
  3436  00E0E6  61                 	db	97	;'a'
  3437  00E0E7  73                 	db	115	;'s'
  3438  00E0E8  20                 	db	32
  3439  00E0E9  78                 	db	120	;'x'
  3440  00E0EA  20                 	db	32
  3441  00E0EB  70                 	db	112	;'p'
  3442  00E0EC  65                 	db	101	;'e'
  3443  00E0ED  72                 	db	114	;'r'
  3444  00E0EE  63                 	db	99	;'c'
  3445  00E0EF  65                 	db	101	;'e'
  3446  00E0F0  6E                 	db	110	;'n'
  3447  00E0F1  74                 	db	116	;'t'
  3448  00E0F2  0A                 	db	10
  3449  00E0F3  0D                 	db	13
  3450  00E0F4  0A                 	db	10
  3451  00E0F5  0D                 	db	13
  3452  00E0F6  00                 	db	0
  3453  00E0F7                     STR_141:
  3454  00E0F7  4C                 	db	76	;'L'
  3455  00E0F8  69                 	db	105	;'i'
  3456  00E0F9  73                 	db	115	;'s'
  3457  00E0FA  74                 	db	116	;'t'
  3458  00E0FB  20                 	db	32
  3459  00E0FC  6F                 	db	111	;'o'
  3460  00E0FD  66                 	db	102	;'f'
  3461  00E0FE  20                 	db	32
  3462  00E0FF  73                 	db	115	;'s'
  3463  00E100  75                 	db	117	;'u'
  3464  00E101  70                 	db	112	;'p'
  3465  00E102  70                 	db	112	;'p'
  3466  00E103  6F                 	db	111	;'o'
  3467  00E104  72                 	db	114	;'r'
  3468  00E105  74                 	db	116	;'t'
  3469  00E106  65                 	db	101	;'e'
  3470  00E107  64                 	db	100	;'d'
  3471  00E108  20                 	db	32
  3472  00E109  44                 	db	68	;'D'
  3473  00E10A  65                 	db	101	;'e'
  3474  00E10B  76                 	db	118	;'v'
  3475  00E10C  69                 	db	105	;'i'
  3476  00E10D  63                 	db	99	;'c'
  3477  00E10E  65                 	db	101	;'e'
  3478  00E10F  20                 	db	32
  3479  00E110  43                 	db	67	;'C'
  3480  00E111  6F                 	db	111	;'o'
  3481  00E112  6E                 	db	110	;'n'
  3482  00E113  74                 	db	116	;'t'
  3483  00E114  72                 	db	114	;'r'
  3484  00E115  6F                 	db	111	;'o'
  3485  00E116  6C                 	db	108	;'l'
  3486  00E117  20                 	db	32
  3487  00E118  43                 	db	67	;'C'
  3488  00E119  6F                 	db	111	;'o'
  3489  00E11A  6D                 	db	109	;'m'
  3490  00E11B  6D                 	db	109	;'m'
  3491  00E11C  61                 	db	97	;'a'
  3492  00E11D  6E                 	db	110	;'n'
  3493  00E11E  64                 	db	100	;'d'
  3494  00E11F  73                 	db	115	;'s'
  3495  00E120  3A                 	db	58	;':'
  3496  00E121  0A                 	db	10
  3497  00E122  0D                 	db	13
  3498  00E123  20                 	db	32
  3499  00E124  20                 	db	32
  3500  00E125  20                 	db	32
  3501  00E126  52                 	db	82	;'R'
  3502  00E127  65                 	db	101	;'e'
  3503  00E128  73                 	db	115	;'s'
  3504  00E129  65                 	db	101	;'e'
  3505  00E12A  74                 	db	116	;'t'
  3506  00E12B  3A                 	db	58	;':'
  3507  00E12C  20                 	db	32
  3508  00E12D  43                 	db	67	;'C'
  3509  00E12E  6C                 	db	108	;'l'
  3510  00E12F  65                 	db	101	;'e'
  3511  00E130  61                 	db	97	;'a'
  3512  00E131  72                 	db	114	;'r'
  3513  00E132  73                 	db	115	;'s'
  3514  00E133  20                 	db	32
  3515  00E134  74                 	db	116	;'t'
  3516  00E135  68                 	db	104	;'h'
  3517  00E136  65                 	db	101	;'e'
  3518  00E137  20                 	db	32
  3519  00E138  74                 	db	116	;'t'
  3520  00E139  65                 	db	101	;'e'
  3521  00E13A  72                 	db	114	;'r'
  3522  00E13B  6D                 	db	109	;'m'
  3523  00E13C  69                 	db	105	;'i'
  3524  00E13D  6E                 	db	110	;'n'
  3525  00E13E  61                 	db	97	;'a'
  3526  00E13F  6C                 	db	108	;'l'
  3527  00E140  20                 	db	32
  3528  00E141  61                 	db	97	;'a'
  3529  00E142  6E                 	db	110	;'n'
  3530  00E143  64                 	db	100	;'d'
  3531  00E144  20                 	db	32
  3532  00E145  72                 	db	114	;'r'
  3533  00E146  65                 	db	101	;'e'
  3534  00E147  73                 	db	115	;'s'
  3535  00E148  65                 	db	101	;'e'
  3536  00E149  74                 	db	116	;'t'
  3537  00E14A  73                 	db	115	;'s'
  3538  00E14B  20                 	db	32
  3539  00E14C  74                 	db	116	;'t'
  3540  00E14D  68                 	db	104	;'h'
  3541  00E14E  65                 	db	101	;'e'
  3542  00E14F  20                 	db	32
  3543  00E150  6D                 	db	109	;'m'
  3544  00E151  69                 	db	105	;'i'
  3545  00E152  63                 	db	99	;'c'
  3546  00E153  72                 	db	114	;'r'
  3547  00E154  6F                 	db	111	;'o'
  3548  00E155  0A                 	db	10
  3549  00E156  0D                 	db	13
  3550  00E157  20                 	db	32
  3551  00E158  20                 	db	32
  3552  00E159  20                 	db	32
  3553  00E15A  43                 	db	67	;'C'
  3554  00E15B  6C                 	db	108	;'l'
  3555  00E15C  65                 	db	101	;'e'
  3556  00E15D  61                 	db	97	;'a'
  3557  00E15E  72                 	db	114	;'r'
  3558  00E15F  3A                 	db	58	;':'
  3559  00E160  20                 	db	32
  3560  00E161  43                 	db	67	;'C'
  3561  00E162  6C                 	db	108	;'l'
  3562  00E163  65                 	db	101	;'e'
  3563  00E164  61                 	db	97	;'a'
  3564  00E165  72                 	db	114	;'r'
  3565  00E166  73                 	db	115	;'s'
  3566  00E167  20                 	db	32
  3567  00E168  74                 	db	116	;'t'
  3568  00E169  68                 	db	104	;'h'
  3569  00E16A  65                 	db	101	;'e'
  3570  00E16B  20                 	db	32
  3571  00E16C  74                 	db	116	;'t'
  3572  00E16D  65                 	db	101	;'e'
  3573  00E16E  72                 	db	114	;'r'
  3574  00E16F  6D                 	db	109	;'m'
  3575  00E170  69                 	db	105	;'i'
  3576  00E171  6E                 	db	110	;'n'
  3577  00E172  61                 	db	97	;'a'
  3578  00E173  6C                 	db	108	;'l'
  3579  00E174  20                 	db	32
  3580  00E175  62                 	db	98	;'b'
  3581  00E176  75                 	db	117	;'u'
  3582  00E177  74                 	db	116	;'t'
  3583  00E178  20                 	db	32
  3584  00E179  64                 	db	100	;'d'
  3585  00E17A  6F                 	db	111	;'o'
  3586  00E17B  65                 	db	101	;'e'
  3587  00E17C  73                 	db	115	;'s'
  3588  00E17D  6E                 	db	110	;'n'
  3589  00E17E  27                 	db	39
  3590  00E17F  74                 	db	116	;'t'
  3591  00E180  20                 	db	32
  3592  00E181  72                 	db	114	;'r'
  3593  00E182  65                 	db	101	;'e'
  3594  00E183  73                 	db	115	;'s'
  3595  00E184  65                 	db	101	;'e'
  3596  00E185  74                 	db	116	;'t'
  3597  00E186  20                 	db	32
  3598  00E187  74                 	db	116	;'t'
  3599  00E188  68                 	db	104	;'h'
  3600  00E189  65                 	db	101	;'e'
  3601  00E18A  20                 	db	32
  3602  00E18B  6D                 	db	109	;'m'
  3603  00E18C  69                 	db	105	;'i'
  3604  00E18D  63                 	db	99	;'c'
  3605  00E18E  72                 	db	114	;'r'
  3606  00E18F  6F                 	db	111	;'o'
  3607  00E190  0A                 	db	10
  3608  00E191  0D                 	db	13
  3609  00E192  20                 	db	32
  3610  00E193  20                 	db	32
  3611  00E194  20                 	db	32
  3612  00E195  43                 	db	67	;'C'
  3613  00E196  61                 	db	97	;'a'
  3614  00E197  75                 	db	117	;'u'
  3615  00E198  73                 	db	115	;'s'
  3616  00E199  65                 	db	101	;'e'
  3617  00E19A  20                 	db	32
  3618  00E19B  6F                 	db	111	;'o'
  3619  00E19C  66                 	db	102	;'f'
  3620  00E19D  20                 	db	32
  3621  00E19E  52                 	db	82	;'R'
  3622  00E19F  65                 	db	101	;'e'
  3623  00E1A0  73                 	db	115	;'s'
  3624  00E1A1  65                 	db	101	;'e'
  3625  00E1A2  74                 	db	116	;'t'
  3626  00E1A3  3F                 	db	63	;'?'
  3627  00E1A4  3A                 	db	58	;':'
  3628  00E1A5  20                 	db	32
  3629  00E1A6  52                 	db	82	;'R'
  3630  00E1A7  65                 	db	101	;'e'
  3631  00E1A8  74                 	db	116	;'t'
  3632  00E1A9  75                 	db	117	;'u'
  3633  00E1AA  72                 	db	114	;'r'
  3634  00E1AB  6E                 	db	110	;'n'
  3635  00E1AC  73                 	db	115	;'s'
  3636  00E1AD  20                 	db	32
  3637  00E1AE  74                 	db	116	;'t'
  3638  00E1AF  68                 	db	104	;'h'
  3639  00E1B0  65                 	db	101	;'e'
  3640  00E1B1  20                 	db	32
  3641  00E1B2  63                 	db	99	;'c'
  3642  00E1B3  61                 	db	97	;'a'
  3643  00E1B4  75                 	db	117	;'u'
  3644  00E1B5  73                 	db	115	;'s'
  3645  00E1B6  65                 	db	101	;'e'
  3646  00E1B7  20                 	db	32
  3647  00E1B8  6F                 	db	111	;'o'
  3648  00E1B9  66                 	db	102	;'f'
  3649  00E1BA  20                 	db	32
  3650  00E1BB  74                 	db	116	;'t'
  3651  00E1BC  68                 	db	104	;'h'
  3652  00E1BD  65                 	db	101	;'e'
  3653  00E1BE  20                 	db	32
  3654  00E1BF  6D                 	db	109	;'m'
  3655  00E1C0  6F                 	db	111	;'o'
  3656  00E1C1  73                 	db	115	;'s'
  3657  00E1C2  74                 	db	116	;'t'
  3658  00E1C3  20                 	db	32
  3659  00E1C4  72                 	db	114	;'r'
  3660  00E1C5  65                 	db	101	;'e'
  3661  00E1C6  63                 	db	99	;'c'
  3662  00E1C7  65                 	db	101	;'e'
  3663  00E1C8  6E                 	db	110	;'n'
  3664  00E1C9  74                 	db	116	;'t'
  3665  00E1CA  20                 	db	32
  3666  00E1CB  64                 	db	100	;'d'
  3667  00E1CC  65                 	db	101	;'e'
  3668  00E1CD  76                 	db	118	;'v'
  3669  00E1CE  69                 	db	105	;'i'
  3670  00E1CF  63                 	db	99	;'c'
  3671  00E1D0  65                 	db	101	;'e'
  3672  00E1D1  20                 	db	32
  3673  00E1D2  72                 	db	114	;'r'
  3674  00E1D3  65                 	db	101	;'e'
  3675  00E1D4  73                 	db	115	;'s'
  3676  00E1D5  65                 	db	101	;'e'
  3677  00E1D6  74                 	db	116	;'t'
  3678  00E1D7  0A                 	db	10
  3679  00E1D8  0D                 	db	13
  3680  00E1D9  20                 	db	32
  3681  00E1DA  20                 	db	32
  3682  00E1DB  20                 	db	32
  3683  00E1DC  2A                 	db	42
  3684  00E1DD  49                 	db	73	;'I'
  3685  00E1DE  44                 	db	68	;'D'
  3686  00E1DF  4E                 	db	78	;'N'
  3687  00E1E0  3F                 	db	63	;'?'
  3688  00E1E1  3A                 	db	58	;':'
  3689  00E1E2  20                 	db	32
  3690  00E1E3  52                 	db	82	;'R'
  3691  00E1E4  65                 	db	101	;'e'
  3692  00E1E5  74                 	db	116	;'t'
  3693  00E1E6  75                 	db	117	;'u'
  3694  00E1E7  72                 	db	114	;'r'
  3695  00E1E8  6E                 	db	110	;'n'
  3696  00E1E9  73                 	db	115	;'s'
  3697  00E1EA  20                 	db	32
  3698  00E1EB  64                 	db	100	;'d'
  3699  00E1EC  65                 	db	101	;'e'
  3700  00E1ED  76                 	db	118	;'v'
  3701  00E1EE  69                 	db	105	;'i'
  3702  00E1EF  63                 	db	99	;'c'
  3703  00E1F0  65                 	db	101	;'e'
  3704  00E1F1  20                 	db	32
  3705  00E1F2  69                 	db	105	;'i'
  3706  00E1F3  64                 	db	100	;'d'
  3707  00E1F4  65                 	db	101	;'e'
  3708  00E1F5  6E                 	db	110	;'n'
  3709  00E1F6  74                 	db	116	;'t'
  3710  00E1F7  69                 	db	105	;'i'
  3711  00E1F8  66                 	db	102	;'f'
  3712  00E1F9  69                 	db	105	;'i'
  3713  00E1FA  63                 	db	99	;'c'
  3714  00E1FB  61                 	db	97	;'a'
  3715  00E1FC  74                 	db	116	;'t'
  3716  00E1FD  69                 	db	105	;'i'
  3717  00E1FE  6F                 	db	111	;'o'
  3718  00E1FF  6E                 	db	110	;'n'
  3719  00E200  20                 	db	32
  3720  00E201  73                 	db	115	;'s'
  3721  00E202  74                 	db	116	;'t'
  3722  00E203  72                 	db	114	;'r'
  3723  00E204  69                 	db	105	;'i'
  3724  00E205  6E                 	db	110	;'n'
  3725  00E206  67                 	db	103	;'g'
  3726  00E207  0A                 	db	10
  3727  00E208  0D                 	db	13
  3728  00E209  20                 	db	32
  3729  00E20A  20                 	db	32
  3730  00E20B  20                 	db	32
  3731  00E20C  44                 	db	68	;'D'
  3732  00E20D  65                 	db	101	;'e'
  3733  00E20E  76                 	db	118	;'v'
  3734  00E20F  69                 	db	105	;'i'
  3735  00E210  63                 	db	99	;'c'
  3736  00E211  65                 	db	101	;'e'
  3737  00E212  20                 	db	32
  3738  00E213  4F                 	db	79	;'O'
  3739  00E214  6E                 	db	110	;'n'
  3740  00E215  20                 	db	32
  3741  00E216  54                 	db	84	;'T'
  3742  00E217  69                 	db	105	;'i'
  3743  00E218  6D                 	db	109	;'m'
  3744  00E219  65                 	db	101	;'e'
  3745  00E21A  3F                 	db	63	;'?'
  3746  00E21B  3A                 	db	58	;':'
  3747  00E21C  20                 	db	32
  3748  00E21D  52                 	db	82	;'R'
  3749  00E21E  65                 	db	101	;'e'
  3750  00E21F  74                 	db	116	;'t'
  3751  00E220  75                 	db	117	;'u'
  3752  00E221  72                 	db	114	;'r'
  3753  00E222  6E                 	db	110	;'n'
  3754  00E223  73                 	db	115	;'s'
  3755  00E224  20                 	db	32
  3756  00E225  64                 	db	100	;'d'
  3757  00E226  65                 	db	101	;'e'
  3758  00E227  76                 	db	118	;'v'
  3759  00E228  69                 	db	105	;'i'
  3760  00E229  63                 	db	99	;'c'
  3761  00E22A  65                 	db	101	;'e'
  3762  00E22B  20                 	db	32
  3763  00E22C  6F                 	db	111	;'o'
  3764  00E22D  6E                 	db	110	;'n'
  3765  00E22E  20                 	db	32
  3766  00E22F  74                 	db	116	;'t'
  3767  00E230  69                 	db	105	;'i'
  3768  00E231  6D                 	db	109	;'m'
  3769  00E232  65                 	db	101	;'e'
  3770  00E233  20                 	db	32
  3771  00E234  73                 	db	115	;'s'
  3772  00E235  69                 	db	105	;'i'
  3773  00E236  6E                 	db	110	;'n'
  3774  00E237  63                 	db	99	;'c'
  3775  00E238  65                 	db	101	;'e'
  3776  00E239  20                 	db	32
  3777  00E23A  6C                 	db	108	;'l'
  3778  00E23B  61                 	db	97	;'a'
  3779  00E23C  73                 	db	115	;'s'
  3780  00E23D  74                 	db	116	;'t'
  3781  00E23E  20                 	db	32
  3782  00E23F  64                 	db	100	;'d'
  3783  00E240  65                 	db	101	;'e'
  3784  00E241  76                 	db	118	;'v'
  3785  00E242  69                 	db	105	;'i'
  3786  00E243  63                 	db	99	;'c'
  3787  00E244  65                 	db	101	;'e'
  3788  00E245  20                 	db	32
  3789  00E246  72                 	db	114	;'r'
  3790  00E247  65                 	db	101	;'e'
  3791  00E248  73                 	db	115	;'s'
  3792  00E249  65                 	db	101	;'e'
  3793  00E24A  74                 	db	116	;'t'
  3794  00E24B  0A                 	db	10
  3795  00E24C  0D                 	db	13
  3796  00E24D  20                 	db	32
  3797  00E24E  20                 	db	32
  3798  00E24F  20                 	db	32
  3799  00E250  44                 	db	68	;'D'
  3800  00E251  65                 	db	101	;'e'
  3801  00E252  76                 	db	118	;'v'
  3802  00E253  69                 	db	105	;'i'
  3803  00E254  63                 	db	99	;'c'
  3804  00E255  65                 	db	101	;'e'
  3805  00E256  20                 	db	32
  3806  00E257  49                 	db	73	;'I'
  3807  00E258  44                 	db	68	;'D'
  3808  00E259  3F                 	db	63	;'?'
  3809  00E25A  3A                 	db	58	;':'
  3810  00E25B  20                 	db	32
  3811  00E25C  52                 	db	82	;'R'
  3812  00E25D  65                 	db	101	;'e'
  3813  00E25E  74                 	db	116	;'t'
  3814  00E25F  75                 	db	117	;'u'
  3815  00E260  72                 	db	114	;'r'
  3816  00E261  6E                 	db	110	;'n'
  3817  00E262  73                 	db	115	;'s'
  3818  00E263  20                 	db	32
  3819  00E264  64                 	db	100	;'d'
  3820  00E265  65                 	db	101	;'e'
  3821  00E266  76                 	db	118	;'v'
  3822  00E267  69                 	db	105	;'i'
  3823  00E268  63                 	db	99	;'c'
  3824  00E269  65                 	db	101	;'e'
  3825  00E26A  20                 	db	32
  3826  00E26B  49                 	db	73	;'I'
  3827  00E26C  44                 	db	68	;'D'
  3828  00E26D  20                 	db	32
  3829  00E26E  61                 	db	97	;'a'
  3830  00E26F  73                 	db	115	;'s'
  3831  00E270  20                 	db	32
  3832  00E271  70                 	db	112	;'p'
  3833  00E272  72                 	db	114	;'r'
  3834  00E273  65                 	db	101	;'e'
  3835  00E274  2D                 	db	45
  3836  00E275  70                 	db	112	;'p'
  3837  00E276  72                 	db	114	;'r'
  3838  00E277  6F                 	db	111	;'o'
  3839  00E278  67                 	db	103	;'g'
  3840  00E279  72                 	db	114	;'r'
  3841  00E27A  61                 	db	97	;'a'
  3842  00E27B  6D                 	db	109	;'m'
  3843  00E27C  6D                 	db	109	;'m'
  3844  00E27D  65                 	db	101	;'e'
  3845  00E27E  64                 	db	100	;'d'
  3846  00E27F  20                 	db	32
  3847  00E280  69                 	db	105	;'i'
  3848  00E281  6E                 	db	110	;'n'
  3849  00E282  20                 	db	32
  3850  00E283  66                 	db	102	;'f'
  3851  00E284  6C                 	db	108	;'l'
  3852  00E285  61                 	db	97	;'a'
  3853  00E286  73                 	db	115	;'s'
  3854  00E287  68                 	db	104	;'h'
  3855  00E288  20                 	db	32
  3856  00E289  6D                 	db	109	;'m'
  3857  00E28A  65                 	db	101	;'e'
  3858  00E28B  6D                 	db	109	;'m'
  3859  00E28C  6F                 	db	111	;'o'
  3860  00E28D  72                 	db	114	;'r'
  3861  00E28E  79                 	db	121	;'y'
  3862  00E28F  0A                 	db	10
  3863  00E290  0D                 	db	13
  3864  00E291  20                 	db	32
  3865  00E292  20                 	db	32
  3866  00E293  20                 	db	32
  3867  00E294  52                 	db	82	;'R'
  3868  00E295  65                 	db	101	;'e'
  3869  00E296  76                 	db	118	;'v'
  3870  00E297  69                 	db	105	;'i'
  3871  00E298  73                 	db	115	;'s'
  3872  00E299  69                 	db	105	;'i'
  3873  00E29A  6F                 	db	111	;'o'
  3874  00E29B  6E                 	db	110	;'n'
  3875  00E29C  20                 	db	32
  3876  00E29D  49                 	db	73	;'I'
  3877  00E29E  44                 	db	68	;'D'
  3878  00E29F  3F                 	db	63	;'?'
  3879  00E2A0  3A                 	db	58	;':'
  3880  00E2A1  20                 	db	32
  3881  00E2A2  52                 	db	82	;'R'
  3882  00E2A3  65                 	db	101	;'e'
  3883  00E2A4  74                 	db	116	;'t'
  3884  00E2A5  75                 	db	117	;'u'
  3885  00E2A6  72                 	db	114	;'r'
  3886  00E2A7  6E                 	db	110	;'n'
  3887  00E2A8  73                 	db	115	;'s'
  3888  00E2A9  20                 	db	32
  3889  00E2AA  64                 	db	100	;'d'
  3890  00E2AB  65                 	db	101	;'e'
  3891  00E2AC  76                 	db	118	;'v'
  3892  00E2AD  69                 	db	105	;'i'
  3893  00E2AE  63                 	db	99	;'c'
  3894  00E2AF  65                 	db	101	;'e'
  3895  00E2B0  20                 	db	32
  3896  00E2B1  73                 	db	115	;'s'
  3897  00E2B2  69                 	db	105	;'i'
  3898  00E2B3  6C                 	db	108	;'l'
  3899  00E2B4  69                 	db	105	;'i'
  3900  00E2B5  63                 	db	99	;'c'
  3901  00E2B6  6F                 	db	111	;'o'
  3902  00E2B7  6E                 	db	110	;'n'
  3903  00E2B8  20                 	db	32
  3904  00E2B9  72                 	db	114	;'r'
  3905  00E2BA  65                 	db	101	;'e'
  3906  00E2BB  76                 	db	118	;'v'
  3907  00E2BC  69                 	db	105	;'i'
  3908  00E2BD  73                 	db	115	;'s'
  3909  00E2BE  69                 	db	105	;'i'
  3910  00E2BF  6F                 	db	111	;'o'
  3911  00E2C0  6E                 	db	110	;'n'
  3912  00E2C1  20                 	db	32
  3913  00E2C2  49                 	db	73	;'I'
  3914  00E2C3  44                 	db	68	;'D'
  3915  00E2C4  20                 	db	32
  3916  00E2C5  61                 	db	97	;'a'
  3917  00E2C6  73                 	db	115	;'s'
  3918  00E2C7  20                 	db	32
  3919  00E2C8  70                 	db	112	;'p'
  3920  00E2C9  72                 	db	114	;'r'
  3921  00E2CA  65                 	db	101	;'e'
  3922  00E2CB  2D                 	db	45
  3923  00E2CC  70                 	db	112	;'p'
  3924  00E2CD  72                 	db	114	;'r'
  3925  00E2CE  6F                 	db	111	;'o'
  3926  00E2CF  67                 	db	103	;'g'
  3927  00E2D0  72                 	db	114	;'r'
  3928  00E2D1  61                 	db	97	;'a'
  3929  00E2D2  6D                 	db	109	;'m'
  3930  00E2D3  6D                 	db	109	;'m'
  3931  00E2D4  65                 	db	101	;'e'
  3932  00E2D5  64                 	db	100	;'d'
  3933  00E2D6  20                 	db	32
  3934  00E2D7  69                 	db	105	;'i'
  3935  00E2D8  6E                 	db	110	;'n'
  3936  00E2D9  20                 	db	32
  3937  00E2DA  66                 	db	102	;'f'
  3938  00E2DB  6C                 	db	108	;'l'
  3939  00E2DC  61                 	db	97	;'a'
  3940  00E2DD  73                 	db	115	;'s'
  3941  00E2DE  68                 	db	104	;'h'
  3942  00E2DF  20                 	db	32
  3943  00E2E0  6D                 	db	109	;'m'
  3944  00E2E1  65                 	db	101	;'e'
  3945  00E2E2  6D                 	db	109	;'m'
  3946  00E2E3  6F                 	db	111	;'o'
  3947  00E2E4  72                 	db	114	;'r'
  3948  00E2E5  79                 	db	121	;'y'
  3949  00E2E6  0A                 	db	10
  3950  00E2E7  0D                 	db	13
  3951  00E2E8  20                 	db	32
  3952  00E2E9  20                 	db	32
  3953  00E2EA  20                 	db	32
  3954  00E2EB  55                 	db	85	;'U'
  3955  00E2EC  73                 	db	115	;'s'
  3956  00E2ED  65                 	db	101	;'e'
  3957  00E2EE  72                 	db	114	;'r'
  3958  00E2EF  20                 	db	32
  3959  00E2F0  49                 	db	73	;'I'
  3960  00E2F1  44                 	db	68	;'D'
  3961  00E2F2  73                 	db	115	;'s'
  3962  00E2F3  3F                 	db	63	;'?'
  3963  00E2F4  3A                 	db	58	;':'
  3964  00E2F5  20                 	db	32
  3965  00E2F6  52                 	db	82	;'R'
  3966  00E2F7  65                 	db	101	;'e'
  3967  00E2F8  74                 	db	116	;'t'
  3968  00E2F9  75                 	db	117	;'u'
  3969  00E2FA  72                 	db	114	;'r'
  3970  00E2FB  6E                 	db	110	;'n'
  3971  00E2FC  73                 	db	115	;'s'
  3972  00E2FD  20                 	db	32
  3973  00E2FE  61                 	db	97	;'a'
  3974  00E2FF  20                 	db	32
  3975  00E300  6C                 	db	108	;'l'
  3976  00E301  69                 	db	105	;'i'
  3977  00E302  73                 	db	115	;'s'
  3978  00E303  74                 	db	116	;'t'
  3979  00E304  20                 	db	32
  3980  00E305  6F                 	db	111	;'o'
  3981  00E306  66                 	db	102	;'f'
  3982  00E307  20                 	db	32
  3983  00E308  75                 	db	117	;'u'
  3984  00E309  73                 	db	115	;'s'
  3985  00E30A  65                 	db	101	;'e'
  3986  00E30B  72                 	db	114	;'r'
  3987  00E30C  20                 	db	32
  3988  00E30D  49                 	db	73	;'I'
  3989  00E30E  44                 	db	68	;'D'
  3990  00E30F  73                 	db	115	;'s'
  3991  00E310  20                 	db	32
  3992  00E311  28                 	db	40
  3993  00E312  64                 	db	100	;'d'
  3994  00E313  69                 	db	105	;'i'
  3995  00E314  73                 	db	115	;'s'
  3996  00E315  70                 	db	112	;'p'
  3997  00E316  6C                 	db	108	;'l'
  3998  00E317  61                 	db	97	;'a'
  3999  00E318  79                 	db	121	;'y'
  4000  00E319  65                 	db	101	;'e'
  4001  00E31A  64                 	db	100	;'d'
  4002  00E31B  20                 	db	32
  4003  00E31C  69                 	db	105	;'i'
  4004  00E31D  6E                 	db	110	;'n'
  4005  00E31E  20                 	db	32
  4006  00E31F  68                 	db	104	;'h'
  4007  00E320  65                 	db	101	;'e'
  4008  00E321  78                 	db	120	;'x'
  4009  00E322  29                 	db	41
  4010  00E323  20                 	db	32
  4011  00E324  61                 	db	97	;'a'
  4012  00E325  73                 	db	115	;'s'
  4013  00E326  20                 	db	32
  4014  00E327  73                 	db	115	;'s'
  4015  00E328  74                 	db	116	;'t'
  4016  00E329  6F                 	db	111	;'o'
  4017  00E32A  72                 	db	114	;'r'
  4018  00E32B  65                 	db	101	;'e'
  4019  00E32C  64                 	db	100	;'d'
  4020  00E32D  20                 	db	32
  4021  00E32E  69                 	db	105	;'i'
  4022  00E32F  6E                 	db	110	;'n'
  4023  00E330  20                 	db	32
  4024  00E331  66                 	db	102	;'f'
  4025  00E332  6C                 	db	108	;'l'
  4026  00E333  61                 	db	97	;'a'
  4027  00E334  73                 	db	115	;'s'
  4028  00E335  68                 	db	104	;'h'
  4029  00E336  20                 	db	32
  4030  00E337  6D                 	db	109	;'m'
  4031  00E338  65                 	db	101	;'e'
  4032  00E339  6D                 	db	109	;'m'
  4033  00E33A  6F                 	db	111	;'o'
  4034  00E33B  72                 	db	114	;'r'
  4035  00E33C  79                 	db	121	;'y'
  4036  00E33D  0A                 	db	10
  4037  00E33E  0D                 	db	13
  4038  00E33F  20                 	db	32
  4039  00E340  20                 	db	32
  4040  00E341  20                 	db	32
  4041  00E342  41                 	db	65	;'A'
  4042  00E343  44                 	db	68	;'D'
  4043  00E344  43                 	db	67	;'C'
  4044  00E345  20                 	db	32
  4045  00E346  45                 	db	69	;'E'
  4046  00E347  72                 	db	114	;'r'
  4047  00E348  72                 	db	114	;'r'
  4048  00E349  6F                 	db	111	;'o'
  4049  00E34A  72                 	db	114	;'r'
  4050  00E34B  3F                 	db	63	;'?'
  4051  00E34C  3A                 	db	58	;':'
  4052  00E34D  20                 	db	32
  4053  00E34E  52                 	db	82	;'R'
  4054  00E34F  65                 	db	101	;'e'
  4055  00E350  74                 	db	116	;'t'
  4056  00E351  75                 	db	117	;'u'
  4057  00E352  72                 	db	114	;'r'
  4058  00E353  6E                 	db	110	;'n'
  4059  00E354  73                 	db	115	;'s'
  4060  00E355  20                 	db	32
  4061  00E356  74                 	db	116	;'t'
  4062  00E357  68                 	db	104	;'h'
  4063  00E358  65                 	db	101	;'e'
  4064  00E359  20                 	db	32
  4065  00E35A  63                 	db	99	;'c'
  4066  00E35B  61                 	db	97	;'a'
  4067  00E35C  75                 	db	117	;'u'
  4068  00E35D  73                 	db	115	;'s'
  4069  00E35E  65                 	db	101	;'e'
  4070  00E35F  20                 	db	32
  4071  00E360  6F                 	db	111	;'o'
  4072  00E361  66                 	db	102	;'f'
  4073  00E362  20                 	db	32
  4074  00E363  61                 	db	97	;'a'
  4075  00E364  6E                 	db	110	;'n'
  4076  00E365  20                 	db	32
  4077  00E366  41                 	db	65	;'A'
  4078  00E367  44                 	db	68	;'D'
  4079  00E368  43                 	db	67	;'C'
  4080  00E369  20                 	db	32
  4081  00E36A  65                 	db	101	;'e'
  4082  00E36B  72                 	db	114	;'r'
  4083  00E36C  72                 	db	114	;'r'
  4084  00E36D  6F                 	db	111	;'o'
  4085  00E36E  72                 	db	114	;'r'
  4086  00E36F  20                 	db	32
  4087  00E370  69                 	db	105	;'i'
  4088  00E371  66                 	db	102	;'f'
  4089  00E372  20                 	db	32
  4090  00E373  61                 	db	97	;'a'
  4091  00E374  6E                 	db	110	;'n'
  4092  00E375  20                 	db	32
  4093  00E376  65                 	db	101	;'e'
  4094  00E377  72                 	db	114	;'r'
  4095  00E378  72                 	db	114	;'r'
  4096  00E379  6F                 	db	111	;'o'
  4097  00E37A  72                 	db	114	;'r'
  4098  00E37B  20                 	db	32
  4099  00E37C  6F                 	db	111	;'o'
  4100  00E37D  63                 	db	99	;'c'
  4101  00E37E  63                 	db	99	;'c'
  4102  00E37F  75                 	db	117	;'u'
  4103  00E380  72                 	db	114	;'r'
  4104  00E381  72                 	db	114	;'r'
  4105  00E382  65                 	db	101	;'e'
  4106  00E383  64                 	db	100	;'d'
  4107  00E384  0A                 	db	10
  4108  00E385  0D                 	db	13
  4109  00E386  20                 	db	32
  4110  00E387  20                 	db	32
  4111  00E388  20                 	db	32
  4112  00E389  43                 	db	67	;'C'
  4113  00E38A  6C                 	db	108	;'l'
  4114  00E38B  65                 	db	101	;'e'
  4115  00E38C  61                 	db	97	;'a'
  4116  00E38D  72                 	db	114	;'r'
  4117  00E38E  20                 	db	32
  4118  00E38F  41                 	db	65	;'A'
  4119  00E390  44                 	db	68	;'D'
  4120  00E391  43                 	db	67	;'C'
  4121  00E392  20                 	db	32
  4122  00E393  45                 	db	69	;'E'
  4123  00E394  72                 	db	114	;'r'
  4124  00E395  72                 	db	114	;'r'
  4125  00E396  6F                 	db	111	;'o'
  4126  00E397  72                 	db	114	;'r'
  4127  00E398  3A                 	db	58	;':'
  4128  00E399  20                 	db	32
  4129  00E39A  43                 	db	67	;'C'
  4130  00E39B  6C                 	db	108	;'l'
  4131  00E39C  65                 	db	101	;'e'
  4132  00E39D  61                 	db	97	;'a'
  4133  00E39E  72                 	db	114	;'r'
  4134  00E39F  73                 	db	115	;'s'
  4135  00E3A0  20                 	db	32
  4136  00E3A1  74                 	db	116	;'t'
  4137  00E3A2  68                 	db	104	;'h'
  4138  00E3A3  65                 	db	101	;'e'
  4139  00E3A4  20                 	db	32
  4140  00E3A5  41                 	db	65	;'A'
  4141  00E3A6  44                 	db	68	;'D'
  4142  00E3A7  43                 	db	67	;'C'
  4143  00E3A8  20                 	db	32
  4144  00E3A9  65                 	db	101	;'e'
  4145  00E3AA  72                 	db	114	;'r'
  4146  00E3AB  72                 	db	114	;'r'
  4147  00E3AC  6F                 	db	111	;'o'
  4148  00E3AD  72                 	db	114	;'r'
  4149  00E3AE  20                 	db	32
  4150  00E3AF  61                 	db	97	;'a'
  4151  00E3B0  6E                 	db	110	;'n'
  4152  00E3B1  64                 	db	100	;'d'
  4153  00E3B2  20                 	db	32
  4154  00E3B3  72                 	db	114	;'r'
  4155  00E3B4  65                 	db	101	;'e'
  4156  00E3B5  73                 	db	115	;'s'
  4157  00E3B6  75                 	db	117	;'u'
  4158  00E3B7  6D                 	db	109	;'m'
  4159  00E3B8  65                 	db	101	;'e'
  4160  00E3B9  73                 	db	115	;'s'
  4161  00E3BA  20                 	db	32
  4162  00E3BB  41                 	db	65	;'A'
  4163  00E3BC  44                 	db	68	;'D'
  4164  00E3BD  43                 	db	67	;'C'
  4165  00E3BE  20                 	db	32
  4166  00E3BF  63                 	db	99	;'c'
  4167  00E3C0  6F                 	db	111	;'o'
  4168  00E3C1  6E                 	db	110	;'n'
  4169  00E3C2  76                 	db	118	;'v'
  4170  00E3C3  65                 	db	101	;'e'
  4171  00E3C4  72                 	db	114	;'r'
  4172  00E3C5  73                 	db	115	;'s'
  4173  00E3C6  69                 	db	105	;'i'
  4174  00E3C7  6F                 	db	111	;'o'
  4175  00E3C8  6E                 	db	110	;'n'
  4176  00E3C9  73                 	db	115	;'s'
  4177  00E3CA  0A                 	db	10
  4178  00E3CB  0D                 	db	13
  4179  00E3CC  20                 	db	32
  4180  00E3CD  20                 	db	32
  4181  00E3CE  20                 	db	32
  4182  00E3CF  43                 	db	67	;'C'
  4183  00E3D0  6C                 	db	108	;'l'
  4184  00E3D1  65                 	db	101	;'e'
  4185  00E3D2  61                 	db	97	;'a'
  4186  00E3D3  72                 	db	114	;'r'
  4187  00E3D4  20                 	db	32
  4188  00E3D5  4D                 	db	77	;'M'
  4189  00E3D6  61                 	db	97	;'a'
  4190  00E3D7  78                 	db	120	;'x'
  4191  00E3D8  20                 	db	32
  4192  00E3D9  56                 	db	86	;'V'
  4193  00E3DA  61                 	db	97	;'a'
  4194  00E3DB  6C                 	db	108	;'l'
  4195  00E3DC  75                 	db	117	;'u'
  4196  00E3DD  65                 	db	101	;'e'
  4197  00E3DE  73                 	db	115	;'s'
  4198  00E3DF  3A                 	db	58	;':'
  4199  00E3E0  20                 	db	32
  4200  00E3E1  45                 	db	69	;'E'
  4201  00E3E2  72                 	db	114	;'r'
  4202  00E3E3  61                 	db	97	;'a'
  4203  00E3E4  73                 	db	115	;'s'
  4204  00E3E5  65                 	db	101	;'e'
  4205  00E3E6  73                 	db	115	;'s'
  4206  00E3E7  20                 	db	32
  4207  00E3E8  6D                 	db	109	;'m'
  4208  00E3E9  61                 	db	97	;'a'
  4209  00E3EA  78                 	db	120	;'x'
  4210  00E3EB  69                 	db	105	;'i'
  4211  00E3EC  6D                 	db	109	;'m'
  4212  00E3ED  75                 	db	117	;'u'
  4213  00E3EE  6D                 	db	109	;'m'
  4214  00E3EF  20                 	db	32
  4215  00E3F0  72                 	db	114	;'r'
  4216  00E3F1  65                 	db	101	;'e'
  4217  00E3F2  63                 	db	99	;'c'
  4218  00E3F3  6F                 	db	111	;'o'
  4219  00E3F4  72                 	db	114	;'r'
  4220  00E3F5  64                 	db	100	;'d'
  4221  00E3F6  65                 	db	101	;'e'
  4222  00E3F7  64                 	db	100	;'d'
  4223  00E3F8  20                 	db	32
  4224  00E3F9  76                 	db	118	;'v'
  4225  00E3FA  61                 	db	97	;'a'
  4226  00E3FB  6C                 	db	108	;'l'
  4227  00E3FC  75                 	db	117	;'u'
  4228  00E3FD  65                 	db	101	;'e'
  4229  00E3FE  73                 	db	115	;'s'
  4230  00E3FF  20                 	db	32
  4231  00E400  66                 	db	102	;'f'
  4232  00E401  72                 	db	114	;'r'
  4233  00E402  6F                 	db	111	;'o'
  4234  00E403  6D                 	db	109	;'m'
  4235  00E404  20                 	db	32
  4236  00E405  45                 	db	69	;'E'
  4237  00E406  45                 	db	69	;'E'
  4238  00E407  50                 	db	80	;'P'
  4239  00E408  52                 	db	82	;'R'
  4240  00E409  4F                 	db	79	;'O'
  4241  00E40A  4D                 	db	77	;'M'
  4242  00E40B  0A                 	db	10
  4243  00E40C  0D                 	db	13
  4244  00E40D  20                 	db	32
  4245  00E40E  20                 	db	32
  4246  00E40F  20                 	db	32
  4247  00E410  48                 	db	72	;'H'
  4248  00E411  65                 	db	101	;'e'
  4249  00E412  6C                 	db	108	;'l'
  4250  00E413  70                 	db	112	;'p'
  4251  00E414  3A                 	db	58	;':'
  4252  00E415  20                 	db	32
  4253  00E416  54                 	db	84	;'T'
  4254  00E417  68                 	db	104	;'h'
  4255  00E418  69                 	db	105	;'i'
  4256  00E419  73                 	db	115	;'s'
  4257  00E41A  20                 	db	32
  4258  00E41B  6D                 	db	109	;'m'
  4259  00E41C  65                 	db	101	;'e'
  4260  00E41D  73                 	db	115	;'s'
  4261  00E41E  73                 	db	115	;'s'
  4262  00E41F  61                 	db	97	;'a'
  4263  00E420  67                 	db	103	;'g'
  4264  00E421  65                 	db	101	;'e'
  4265  00E422  2C                 	db	44
  4266  00E423  20                 	db	32
  4267  00E424  6C                 	db	108	;'l'
  4268  00E425  69                 	db	105	;'i'
  4269  00E426  73                 	db	115	;'s'
  4270  00E427  74                 	db	116	;'t'
  4271  00E428  73                 	db	115	;'s'
  4272  00E429  20                 	db	32
  4273  00E42A  73                 	db	115	;'s'
  4274  00E42B  75                 	db	117	;'u'
  4275  00E42C  70                 	db	112	;'p'
  4276  00E42D  70                 	db	112	;'p'
  4277  00E42E  6F                 	db	111	;'o'
  4278  00E42F  72                 	db	114	;'r'
  4279  00E430  74                 	db	116	;'t'
  4280  00E431  65                 	db	101	;'e'
  4281  00E432  64                 	db	100	;'d'
  4282  00E433  20                 	db	32
  4283  00E434  63                 	db	99	;'c'
  4284  00E435  6F                 	db	111	;'o'
  4285  00E436  6D                 	db	109	;'m'
  4286  00E437  6D                 	db	109	;'m'
  4287  00E438  61                 	db	97	;'a'
  4288  00E439  6E                 	db	110	;'n'
  4289  00E43A  64                 	db	100	;'d'
  4290  00E43B  73                 	db	115	;'s'
  4291  00E43C  0A                 	db	10
  4292  00E43D  0D                 	db	13
  4293  00E43E  0A                 	db	10
  4294  00E43F  0D                 	db	13
  4295  00E440  00                 	db	0
  4296  00E441                     STR_145:
  4297  00E441  4C                 	db	76	;'L'
  4298  00E442  69                 	db	105	;'i'
  4299  00E443  73                 	db	115	;'s'
  4300  00E444  74                 	db	116	;'t'
  4301  00E445  20                 	db	32
  4302  00E446  6F                 	db	111	;'o'
  4303  00E447  66                 	db	102	;'f'
  4304  00E448  20                 	db	32
  4305  00E449  73                 	db	115	;'s'
  4306  00E44A  75                 	db	117	;'u'
  4307  00E44B  70                 	db	112	;'p'
  4308  00E44C  70                 	db	112	;'p'
  4309  00E44D  6F                 	db	111	;'o'
  4310  00E44E  72                 	db	114	;'r'
  4311  00E44F  74                 	db	116	;'t'
  4312  00E450  65                 	db	101	;'e'
  4313  00E451  64                 	db	100	;'d'
  4314  00E452  20                 	db	32
  4315  00E453  50                 	db	80	;'P'
  4316  00E454  72                 	db	114	;'r'
  4317  00E455  69                 	db	105	;'i'
  4318  00E456  6D                 	db	109	;'m'
  4319  00E457  61                 	db	97	;'a'
  4320  00E458  72                 	db	114	;'r'
  4321  00E459  79                 	db	121	;'y'
  4322  00E45A  20                 	db	32
  4323  00E45B  4D                 	db	77	;'M'
  4324  00E45C  65                 	db	101	;'e'
  4325  00E45D  61                 	db	97	;'a'
  4326  00E45E  73                 	db	115	;'s'
  4327  00E45F  75                 	db	117	;'u'
  4328  00E460  72                 	db	114	;'r'
  4329  00E461  65                 	db	101	;'e'
  4330  00E462  6D                 	db	109	;'m'
  4331  00E463  65                 	db	101	;'e'
  4332  00E464  6E                 	db	110	;'n'
  4333  00E465  74                 	db	116	;'t'
  4334  00E466  20                 	db	32
  4335  00E467  43                 	db	67	;'C'
  4336  00E468  6F                 	db	111	;'o'
  4337  00E469  6D                 	db	109	;'m'
  4338  00E46A  6D                 	db	109	;'m'
  4339  00E46B  61                 	db	97	;'a'
  4340  00E46C  6E                 	db	110	;'n'
  4341  00E46D  64                 	db	100	;'d'
  4342  00E46E  73                 	db	115	;'s'
  4343  00E46F  3A                 	db	58	;':'
  4344  00E470  0A                 	db	10
  4345  00E471  0D                 	db	13
  4346  00E472  20                 	db	32
  4347  00E473  20                 	db	32
  4348  00E474  20                 	db	32
  4349  00E475  4D                 	db	77	;'M'
  4350  00E476  65                 	db	101	;'e'
  4351  00E477  61                 	db	97	;'a'
  4352  00E478  73                 	db	115	;'s'
  4353  00E479  75                 	db	117	;'u'
  4354  00E47A  72                 	db	114	;'r'
  4355  00E47B  65                 	db	101	;'e'
  4356  00E47C  20                 	db	32
  4357  00E47D  44                 	db	68	;'D'
  4358  00E47E  65                 	db	101	;'e'
  4359  00E47F  74                 	db	116	;'t'
  4360  00E480  65                 	db	101	;'e'
  4361  00E481  63                 	db	99	;'c'
  4362  00E482  74                 	db	116	;'t'
  4363  00E483  65                 	db	101	;'e'
  4364  00E484  64                 	db	100	;'d'
  4365  00E485  20                 	db	32
  4366  00E486  43                 	db	67	;'C'
  4367  00E487  75                 	db	117	;'u'
  4368  00E488  72                 	db	114	;'r'
  4369  00E489  72                 	db	114	;'r'
  4370  00E48A  65                 	db	101	;'e'
  4371  00E48B  6E                 	db	110	;'n'
  4372  00E48C  74                 	db	116	;'t'
  4373  00E48D  3F                 	db	63	;'?'
  4374  00E48E  3A                 	db	58	;':'
  4375  00E48F  20                 	db	32
  4376  00E490  52                 	db	82	;'R'
  4377  00E491  65                 	db	101	;'e'
  4378  00E492  74                 	db	116	;'t'
  4379  00E493  75                 	db	117	;'u'
  4380  00E494  72                 	db	114	;'r'
  4381  00E495  6E                 	db	110	;'n'
  4382  00E496  73                 	db	115	;'s'
  4383  00E497  20                 	db	32
  4384  00E498  6D                 	db	109	;'m'
  4385  00E499  65                 	db	101	;'e'
  4386  00E49A  61                 	db	97	;'a'
  4387  00E49B  73                 	db	115	;'s'
  4388  00E49C  75                 	db	117	;'u'
  4389  00E49D  72                 	db	114	;'r'
  4390  00E49E  65                 	db	101	;'e'
  4391  00E49F  64                 	db	100	;'d'
  4392  00E4A0  20                 	db	32
  4393  00E4A1  6F                 	db	111	;'o'
  4394  00E4A2  75                 	db	117	;'u'
  4395  00E4A3  74                 	db	116	;'t'
  4396  00E4A4  70                 	db	112	;'p'
  4397  00E4A5  75                 	db	117	;'u'
  4398  00E4A6  74                 	db	116	;'t'
  4399  00E4A7  20                 	db	32
  4400  00E4A8  63                 	db	99	;'c'
  4401  00E4A9  75                 	db	117	;'u'
  4402  00E4AA  72                 	db	114	;'r'
  4403  00E4AB  72                 	db	114	;'r'
  4404  00E4AC  65                 	db	101	;'e'
  4405  00E4AD  6E                 	db	110	;'n'
  4406  00E4AE  74                 	db	116	;'t'
  4407  00E4AF  20                 	db	32
  4408  00E4B0  69                 	db	105	;'i'
  4409  00E4B1  6E                 	db	110	;'n'
  4410  00E4B2  20                 	db	32
  4411  00E4B3  61                 	db	97	;'a'
  4412  00E4B4  6D                 	db	109	;'m'
  4413  00E4B5  70                 	db	112	;'p'
  4414  00E4B6  73                 	db	115	;'s'
  4415  00E4B7  20                 	db	32
  4416  00E4B8  61                 	db	97	;'a'
  4417  00E4B9  73                 	db	115	;'s'
  4418  00E4BA  20                 	db	32
  4419  00E4BB  73                 	db	115	;'s'
  4420  00E4BC  65                 	db	101	;'e'
  4421  00E4BD  65                 	db	101	;'e'
  4422  00E4BE  6E                 	db	110	;'n'
  4423  00E4BF  20                 	db	32
  4424  00E4C0  62                 	db	98	;'b'
  4425  00E4C1  79                 	db	121	;'y'
  4426  00E4C2  20                 	db	32
  4427  00E4C3  41                 	db	65	;'A'
  4428  00E4C4  44                 	db	68	;'D'
  4429  00E4C5  43                 	db	67	;'C'
  4430  00E4C6  0A                 	db	10
  4431  00E4C7  0D                 	db	13
  4432  00E4C8  20                 	db	32
  4433  00E4C9  20                 	db	32
  4434  00E4CA  20                 	db	32
  4435  00E4CB  4D                 	db	77	;'M'
  4436  00E4CC  65                 	db	101	;'e'
  4437  00E4CD  61                 	db	97	;'a'
  4438  00E4CE  73                 	db	115	;'s'
  4439  00E4CF  75                 	db	117	;'u'
  4440  00E4D0  72                 	db	114	;'r'
  4441  00E4D1  65                 	db	101	;'e'
  4442  00E4D2  20                 	db	32
  4443  00E4D3  52                 	db	82	;'R'
  4444  00E4D4  4D                 	db	77	;'M'
  4445  00E4D5  53                 	db	83	;'S'
  4446  00E4D6  20                 	db	32
  4447  00E4D7  43                 	db	67	;'C'
  4448  00E4D8  75                 	db	117	;'u'
  4449  00E4D9  72                 	db	114	;'r'
  4450  00E4DA  72                 	db	114	;'r'
  4451  00E4DB  65                 	db	101	;'e'
  4452  00E4DC  6E                 	db	110	;'n'
  4453  00E4DD  74                 	db	116	;'t'
  4454  00E4DE  3F                 	db	63	;'?'
  4455  00E4DF  3A                 	db	58	;':'
  4456  00E4E0  20                 	db	32
  4457  00E4E1  52                 	db	82	;'R'
  4458  00E4E2  65                 	db	101	;'e'
  4459  00E4E3  74                 	db	116	;'t'
  4460  00E4E4  75                 	db	117	;'u'
  4461  00E4E5  72                 	db	114	;'r'
  4462  00E4E6  6E                 	db	110	;'n'
  4463  00E4E7  73                 	db	115	;'s'
  4464  00E4E8  20                 	db	32
  4465  00E4E9  74                 	db	116	;'t'
  4466  00E4EA  68                 	db	104	;'h'
  4467  00E4EB  65                 	db	101	;'e'
  4468  00E4EC  20                 	db	32
  4469  00E4ED  63                 	db	99	;'c'
  4470  00E4EE  61                 	db	97	;'a'
  4471  00E4EF  6C                 	db	108	;'l'
  4472  00E4F0  63                 	db	99	;'c'
  4473  00E4F1  75                 	db	117	;'u'
  4474  00E4F2  6C                 	db	108	;'l'
  4475  00E4F3  61                 	db	97	;'a'
  4476  00E4F4  74                 	db	116	;'t'
  4477  00E4F5  65                 	db	101	;'e'
  4478  00E4F6  64                 	db	100	;'d'
  4479  00E4F7  20                 	db	32
  4480  00E4F8  52                 	db	82	;'R'
  4481  00E4F9  4D                 	db	77	;'M'
  4482  00E4FA  53                 	db	83	;'S'
  4483  00E4FB  20                 	db	32
  4484  00E4FC  6F                 	db	111	;'o'
  4485  00E4FD  75                 	db	117	;'u'
  4486  00E4FE  74                 	db	116	;'t'
  4487  00E4FF  70                 	db	112	;'p'
  4488  00E500  75                 	db	117	;'u'
  4489  00E501  74                 	db	116	;'t'
  4490  00E502  20                 	db	32
  4491  00E503  63                 	db	99	;'c'
  4492  00E504  75                 	db	117	;'u'
  4493  00E505  72                 	db	114	;'r'
  4494  00E506  72                 	db	114	;'r'
  4495  00E507  65                 	db	101	;'e'
  4496  00E508  6E                 	db	110	;'n'
  4497  00E509  74                 	db	116	;'t'
  4498  00E50A  20                 	db	32
  4499  00E50B  66                 	db	102	;'f'
  4500  00E50C  72                 	db	114	;'r'
  4501  00E50D  6F                 	db	111	;'o'
  4502  00E50E  6D                 	db	109	;'m'
  4503  00E50F  20                 	db	32
  4504  00E510  6D                 	db	109	;'m'
  4505  00E511  65                 	db	101	;'e'
  4506  00E512  61                 	db	97	;'a'
  4507  00E513  73                 	db	115	;'s'
  4508  00E514  75                 	db	117	;'u'
  4509  00E515  72                 	db	114	;'r'
  4510  00E516  65                 	db	101	;'e'
  4511  00E517  6D                 	db	109	;'m'
  4512  00E518  65                 	db	101	;'e'
  4513  00E519  6E                 	db	110	;'n'
  4514  00E51A  74                 	db	116	;'t'
  4515  00E51B  73                 	db	115	;'s'
  4516  00E51C  20                 	db	32
  4517  00E51D  61                 	db	97	;'a'
  4518  00E51E  6E                 	db	110	;'n'
  4519  00E51F  64                 	db	100	;'d'
  4520  00E520  20                 	db	32
  4521  00E521  54                 	db	84	;'T'
  4522  00E522  52                 	db	82	;'R'
  4523  00E523  49                 	db	73	;'I'
  4524  00E524  41                 	db	65	;'A'
  4525  00E525  43                 	db	67	;'C'
  4526  00E526  20                 	db	32
  4527  00E527  66                 	db	102	;'f'
  4528  00E528  69                 	db	105	;'i'
  4529  00E529  72                 	db	114	;'r'
  4530  00E52A  69                 	db	105	;'i'
  4531  00E52B  6E                 	db	110	;'n'
  4532  00E52C  67                 	db	103	;'g'
  4533  00E52D  20                 	db	32
  4534  00E52E  61                 	db	97	;'a'
  4535  00E52F  6E                 	db	110	;'n'
  4536  00E530  67                 	db	103	;'g'
  4537  00E531  6C                 	db	108	;'l'
  4538  00E532  65                 	db	101	;'e'
  4539  00E533  0A                 	db	10
  4540  00E534  0D                 	db	13
  4541  00E535  20                 	db	32
  4542  00E536  20                 	db	32
  4543  00E537  20                 	db	32
  4544  00E538  4D                 	db	77	;'M'
  4545  00E539  65                 	db	101	;'e'
  4546  00E53A  61                 	db	97	;'a'
  4547  00E53B  73                 	db	115	;'s'
  4548  00E53C  75                 	db	117	;'u'
  4549  00E53D  72                 	db	114	;'r'
  4550  00E53E  65                 	db	101	;'e'
  4551  00E53F  20                 	db	32
  4552  00E540  52                 	db	82	;'R'
  4553  00E541  4D                 	db	77	;'M'
  4554  00E542  53                 	db	83	;'S'
  4555  00E543  20                 	db	32
  4556  00E544  56                 	db	86	;'V'
  4557  00E545  6F                 	db	111	;'o'
  4558  00E546  6C                 	db	108	;'l'
  4559  00E547  74                 	db	116	;'t'
  4560  00E548  61                 	db	97	;'a'
  4561  00E549  67                 	db	103	;'g'
  4562  00E54A  65                 	db	101	;'e'
  4563  00E54B  3F                 	db	63	;'?'
  4564  00E54C  3A                 	db	58	;':'
  4565  00E54D  20                 	db	32
  4566  00E54E  52                 	db	82	;'R'
  4567  00E54F  65                 	db	101	;'e'
  4568  00E550  74                 	db	116	;'t'
  4569  00E551  75                 	db	117	;'u'
  4570  00E552  72                 	db	114	;'r'
  4571  00E553  6E                 	db	110	;'n'
  4572  00E554  73                 	db	115	;'s'
  4573  00E555  20                 	db	32
  4574  00E556  74                 	db	116	;'t'
  4575  00E557  68                 	db	104	;'h'
  4576  00E558  65                 	db	101	;'e'
  4577  00E559  20                 	db	32
  4578  00E55A  63                 	db	99	;'c'
  4579  00E55B  61                 	db	97	;'a'
  4580  00E55C  6C                 	db	108	;'l'
  4581  00E55D  63                 	db	99	;'c'
  4582  00E55E  75                 	db	117	;'u'
  4583  00E55F  6C                 	db	108	;'l'
  4584  00E560  61                 	db	97	;'a'
  4585  00E561  74                 	db	116	;'t'
  4586  00E562  65                 	db	101	;'e'
  4587  00E563  64                 	db	100	;'d'
  4588  00E564  20                 	db	32
  4589  00E565  52                 	db	82	;'R'
  4590  00E566  4D                 	db	77	;'M'
  4591  00E567  53                 	db	83	;'S'
  4592  00E568  20                 	db	32
  4593  00E569  6F                 	db	111	;'o'
  4594  00E56A  75                 	db	117	;'u'
  4595  00E56B  74                 	db	116	;'t'
  4596  00E56C  70                 	db	112	;'p'
  4597  00E56D  75                 	db	117	;'u'
  4598  00E56E  74                 	db	116	;'t'
  4599  00E56F  20                 	db	32
  4600  00E570  76                 	db	118	;'v'
  4601  00E571  6F                 	db	111	;'o'
  4602  00E572  6C                 	db	108	;'l'
  4603  00E573  74                 	db	116	;'t'
  4604  00E574  61                 	db	97	;'a'
  4605  00E575  67                 	db	103	;'g'
  4606  00E576  65                 	db	101	;'e'
  4607  00E577  20                 	db	32
  4608  00E578  66                 	db	102	;'f'
  4609  00E579  72                 	db	114	;'r'
  4610  00E57A  6F                 	db	111	;'o'
  4611  00E57B  6D                 	db	109	;'m'
  4612  00E57C  20                 	db	32
  4613  00E57D  54                 	db	84	;'T'
  4614  00E57E  52                 	db	82	;'R'
  4615  00E57F  49                 	db	73	;'I'
  4616  00E580  41                 	db	65	;'A'
  4617  00E581  43                 	db	67	;'C'
  4618  00E582  20                 	db	32
  4619  00E583  66                 	db	102	;'f'
  4620  00E584  69                 	db	105	;'i'
  4621  00E585  72                 	db	114	;'r'
  4622  00E586  69                 	db	105	;'i'
  4623  00E587  6E                 	db	110	;'n'
  4624  00E588  67                 	db	103	;'g'
  4625  00E589  20                 	db	32
  4626  00E58A  61                 	db	97	;'a'
  4627  00E58B  6E                 	db	110	;'n'
  4628  00E58C  67                 	db	103	;'g'
  4629  00E58D  6C                 	db	108	;'l'
  4630  00E58E  65                 	db	101	;'e'
  4631  00E58F  0A                 	db	10
  4632  00E590  0D                 	db	13
  4633  00E591  20                 	db	32
  4634  00E592  20                 	db	32
  4635  00E593  20                 	db	32
  4636  00E594  4D                 	db	77	;'M'
  4637  00E595  65                 	db	101	;'e'
  4638  00E596  61                 	db	97	;'a'
  4639  00E597  73                 	db	115	;'s'
  4640  00E598  75                 	db	117	;'u'
  4641  00E599  72                 	db	114	;'r'
  4642  00E59A  65                 	db	101	;'e'
  4643  00E59B  20                 	db	32
  4644  00E59C  50                 	db	80	;'P'
  4645  00E59D  6F                 	db	111	;'o'
  4646  00E59E  77                 	db	119	;'w'
  4647  00E59F  65                 	db	101	;'e'
  4648  00E5A0  72                 	db	114	;'r'
  4649  00E5A1  3F                 	db	63	;'?'
  4650  00E5A2  3A                 	db	58	;':'
  4651  00E5A3  20                 	db	32
  4652  00E5A4  52                 	db	82	;'R'
  4653  00E5A5  65                 	db	101	;'e'
  4654  00E5A6  74                 	db	116	;'t'
  4655  00E5A7  75                 	db	117	;'u'
  4656  00E5A8  72                 	db	114	;'r'
  4657  00E5A9  6E                 	db	110	;'n'
  4658  00E5AA  73                 	db	115	;'s'
  4659  00E5AB  20                 	db	32
  4660  00E5AC  74                 	db	116	;'t'
  4661  00E5AD  68                 	db	104	;'h'
  4662  00E5AE  65                 	db	101	;'e'
  4663  00E5AF  20                 	db	32
  4664  00E5B0  63                 	db	99	;'c'
  4665  00E5B1  61                 	db	97	;'a'
  4666  00E5B2  6C                 	db	108	;'l'
  4667  00E5B3  63                 	db	99	;'c'
  4668  00E5B4  75                 	db	117	;'u'
  4669  00E5B5  6C                 	db	108	;'l'
  4670  00E5B6  61                 	db	97	;'a'
  4671  00E5B7  74                 	db	116	;'t'
  4672  00E5B8  65                 	db	101	;'e'
  4673  00E5B9  64                 	db	100	;'d'
  4674  00E5BA  20                 	db	32
  4675  00E5BB  6F                 	db	111	;'o'
  4676  00E5BC  75                 	db	117	;'u'
  4677  00E5BD  74                 	db	116	;'t'
  4678  00E5BE  70                 	db	112	;'p'
  4679  00E5BF  75                 	db	117	;'u'
  4680  00E5C0  74                 	db	116	;'t'
  4681  00E5C1  20                 	db	32
  4682  00E5C2  70                 	db	112	;'p'
  4683  00E5C3  6F                 	db	111	;'o'
  4684  00E5C4  77                 	db	119	;'w'
  4685  00E5C5  65                 	db	101	;'e'
  4686  00E5C6  72                 	db	114	;'r'
  4687  00E5C7  20                 	db	32
  4688  00E5C8  69                 	db	105	;'i'
  4689  00E5C9  6E                 	db	110	;'n'
  4690  00E5CA  20                 	db	32
  4691  00E5CB  57                 	db	87	;'W'
  4692  00E5CC  61                 	db	97	;'a'
  4693  00E5CD  74                 	db	116	;'t'
  4694  00E5CE  74                 	db	116	;'t'
  4695  00E5CF  73                 	db	115	;'s'
  4696  00E5D0  0A                 	db	10
  4697  00E5D1  0D                 	db	13
  4698  00E5D2  20                 	db	32
  4699  00E5D3  20                 	db	32
  4700  00E5D4  20                 	db	32
  4701  00E5D5  4D                 	db	77	;'M'
  4702  00E5D6  65                 	db	101	;'e'
  4703  00E5D7  61                 	db	97	;'a'
  4704  00E5D8  73                 	db	115	;'s'
  4705  00E5D9  75                 	db	117	;'u'
  4706  00E5DA  72                 	db	114	;'r'
  4707  00E5DB  65                 	db	101	;'e'
  4708  00E5DC  20                 	db	32
  4709  00E5DD  45                 	db	69	;'E'
  4710  00E5DE  6E                 	db	110	;'n'
  4711  00E5DF  65                 	db	101	;'e'
  4712  00E5E0  72                 	db	114	;'r'
  4713  00E5E1  67                 	db	103	;'g'
  4714  00E5E2  79                 	db	121	;'y'
  4715  00E5E3  3F                 	db	63	;'?'
  4716  00E5E4  3A                 	db	58	;':'
  4717  00E5E5  20                 	db	32
  4718  00E5E6  52                 	db	82	;'R'
  4719  00E5E7  65                 	db	101	;'e'
  4720  00E5E8  74                 	db	116	;'t'
  4721  00E5E9  75                 	db	117	;'u'
  4722  00E5EA  72                 	db	114	;'r'
  4723  00E5EB  6E                 	db	110	;'n'
  4724  00E5EC  73                 	db	115	;'s'
  4725  00E5ED  20                 	db	32
  4726  00E5EE  6D                 	db	109	;'m'
  4727  00E5EF  65                 	db	101	;'e'
  4728  00E5F0  61                 	db	97	;'a'
  4729  00E5F1  73                 	db	115	;'s'
  4730  00E5F2  75                 	db	117	;'u'
  4731  00E5F3  72                 	db	114	;'r'
  4732  00E5F4  65                 	db	101	;'e'
  4733  00E5F5  64                 	db	100	;'d'
  4734  00E5F6  20                 	db	32
  4735  00E5F7  65                 	db	101	;'e'
  4736  00E5F8  6E                 	db	110	;'n'
  4737  00E5F9  65                 	db	101	;'e'
  4738  00E5FA  72                 	db	114	;'r'
  4739  00E5FB  67                 	db	103	;'g'
  4740  00E5FC  79                 	db	121	;'y'
  4741  00E5FD  20                 	db	32
  4742  00E5FE  73                 	db	115	;'s'
  4743  00E5FF  69                 	db	105	;'i'
  4744  00E600  6E                 	db	110	;'n'
  4745  00E601  63                 	db	99	;'c'
  4746  00E602  65                 	db	101	;'e'
  4747  00E603  20                 	db	32
  4748  00E604  6D                 	db	109	;'m'
  4749  00E605  65                 	db	101	;'e'
  4750  00E606  61                 	db	97	;'a'
  4751  00E607  73                 	db	115	;'s'
  4752  00E608  75                 	db	117	;'u'
  4753  00E609  72                 	db	114	;'r'
  4754  00E60A  65                 	db	101	;'e'
  4755  00E60B  6D                 	db	109	;'m'
  4756  00E60C  65                 	db	101	;'e'
  4757  00E60D  6E                 	db	110	;'n'
  4758  00E60E  74                 	db	116	;'t'
  4759  00E60F  20                 	db	32
  4760  00E610  72                 	db	114	;'r'
  4761  00E611  65                 	db	101	;'e'
  4762  00E612  73                 	db	115	;'s'
  4763  00E613  65                 	db	101	;'e'
  4764  00E614  74                 	db	116	;'t'
  4765  00E615  20                 	db	32
  4766  00E616  69                 	db	105	;'i'
  4767  00E617  6E                 	db	110	;'n'
  4768  00E618  20                 	db	32
  4769  00E619  57                 	db	87	;'W'
  4770  00E61A  61                 	db	97	;'a'
  4771  00E61B  74                 	db	116	;'t'
  4772  00E61C  74                 	db	116	;'t'
  4773  00E61D  20                 	db	32
  4774  00E61E  48                 	db	72	;'H'
  4775  00E61F  6F                 	db	111	;'o'
  4776  00E620  75                 	db	117	;'u'
  4777  00E621  72                 	db	114	;'r'
  4778  00E622  73                 	db	115	;'s'
  4779  00E623  0A                 	db	10
  4780  00E624  0D                 	db	13
  4781  00E625  20                 	db	32
  4782  00E626  20                 	db	32
  4783  00E627  20                 	db	32
  4784  00E628  43                 	db	67	;'C'
  4785  00E629  6C                 	db	108	;'l'
  4786  00E62A  65                 	db	101	;'e'
  4787  00E62B  61                 	db	97	;'a'
  4788  00E62C  72                 	db	114	;'r'
  4789  00E62D  20                 	db	32
  4790  00E62E  45                 	db	69	;'E'
  4791  00E62F  6E                 	db	110	;'n'
  4792  00E630  65                 	db	101	;'e'
  4793  00E631  72                 	db	114	;'r'
  4794  00E632  67                 	db	103	;'g'
  4795  00E633  79                 	db	121	;'y'
  4796  00E634  3A                 	db	58	;':'
  4797  00E635  20                 	db	32
  4798  00E636  52                 	db	82	;'R'
  4799  00E637  65                 	db	101	;'e'
  4800  00E638  73                 	db	115	;'s'
  4801  00E639  65                 	db	101	;'e'
  4802  00E63A  74                 	db	116	;'t'
  4803  00E63B  73                 	db	115	;'s'
  4804  00E63C  20                 	db	32
  4805  00E63D  74                 	db	116	;'t'
  4806  00E63E  68                 	db	104	;'h'
  4807  00E63F  65                 	db	101	;'e'
  4808  00E640  20                 	db	32
  4809  00E641  6D                 	db	109	;'m'
  4810  00E642  65                 	db	101	;'e'
  4811  00E643  61                 	db	97	;'a'
  4812  00E644  73                 	db	115	;'s'
  4813  00E645  75                 	db	117	;'u'
  4814  00E646  72                 	db	114	;'r'
  4815  00E647  65                 	db	101	;'e'
  4816  00E648  64                 	db	100	;'d'
  4817  00E649  20                 	db	32
  4818  00E64A  6F                 	db	111	;'o'
  4819  00E64B  75                 	db	117	;'u'
  4820  00E64C  74                 	db	116	;'t'
  4821  00E64D  70                 	db	112	;'p'
  4822  00E64E  75                 	db	117	;'u'
  4823  00E64F  74                 	db	116	;'t'
  4824  00E650  20                 	db	32
  4825  00E651  65                 	db	101	;'e'
  4826  00E652  6E                 	db	110	;'n'
  4827  00E653  65                 	db	101	;'e'
  4828  00E654  72                 	db	114	;'r'
  4829  00E655  67                 	db	103	;'g'
  4830  00E656  79                 	db	121	;'y'
  4831  00E657  20                 	db	32
  4832  00E658  74                 	db	116	;'t'
  4833  00E659  6F                 	db	111	;'o'
  4834  00E65A  20                 	db	32
  4835  00E65B  7A                 	db	122	;'z'
  4836  00E65C  65                 	db	101	;'e'
  4837  00E65D  72                 	db	114	;'r'
  4838  00E65E  6F                 	db	111	;'o'
  4839  00E65F  0A                 	db	10
  4840  00E660  0D                 	db	13
  4841  00E661  20                 	db	32
  4842  00E662  20                 	db	32
  4843  00E663  20                 	db	32
  4844  00E664  4C                 	db	76	;'L'
  4845  00E665  6F                 	db	111	;'o'
  4846  00E666  61                 	db	97	;'a'
  4847  00E667  64                 	db	100	;'d'
  4848  00E668  20                 	db	32
  4849  00E669  4F                 	db	79	;'O'
  4850  00E66A  6E                 	db	110	;'n'
  4851  00E66B  20                 	db	32
  4852  00E66C  54                 	db	84	;'T'
  4853  00E66D  69                 	db	105	;'i'
  4854  00E66E  6D                 	db	109	;'m'
  4855  00E66F  65                 	db	101	;'e'
  4856  00E670  3F                 	db	63	;'?'
  4857  00E671  3A                 	db	58	;':'
  4858  00E672  20                 	db	32
  4859  00E673  52                 	db	82	;'R'
  4860  00E674  65                 	db	101	;'e'
  4861  00E675  74                 	db	116	;'t'
  4862  00E676  75                 	db	117	;'u'
  4863  00E677  72                 	db	114	;'r'
  4864  00E678  6E                 	db	110	;'n'
  4865  00E679  73                 	db	115	;'s'
  4866  00E67A  20                 	db	32
  4867  00E67B  6C                 	db	108	;'l'
  4868  00E67C  6F                 	db	111	;'o'
  4869  00E67D  61                 	db	97	;'a'
  4870  00E67E  64                 	db	100	;'d'
  4871  00E67F  20                 	db	32
  4872  00E680  6F                 	db	111	;'o'
  4873  00E681  6E                 	db	110	;'n'
  4874  00E682  20                 	db	32
  4875  00E683  74                 	db	116	;'t'
  4876  00E684  69                 	db	105	;'i'
  4877  00E685  6D                 	db	109	;'m'
  4878  00E686  65                 	db	101	;'e'
  4879  00E687  20                 	db	32
  4880  00E688  73                 	db	115	;'s'
  4881  00E689  69                 	db	105	;'i'
  4882  00E68A  6E                 	db	110	;'n'
  4883  00E68B  63                 	db	99	;'c'
  4884  00E68C  65                 	db	101	;'e'
  4885  00E68D  20                 	db	32
  4886  00E68E  6C                 	db	108	;'l'
  4887  00E68F  61                 	db	97	;'a'
  4888  00E690  73                 	db	115	;'s'
  4889  00E691  74                 	db	116	;'t'
  4890  00E692  20                 	db	32
  4891  00E693  64                 	db	100	;'d'
  4892  00E694  65                 	db	101	;'e'
  4893  00E695  76                 	db	118	;'v'
  4894  00E696  69                 	db	105	;'i'
  4895  00E697  63                 	db	99	;'c'
  4896  00E698  65                 	db	101	;'e'
  4897  00E699  20                 	db	32
  4898  00E69A  72                 	db	114	;'r'
  4899  00E69B  65                 	db	101	;'e'
  4900  00E69C  73                 	db	115	;'s'
  4901  00E69D  65                 	db	101	;'e'
  4902  00E69E  74                 	db	116	;'t'
  4903  00E69F  20                 	db	32
  4904  00E6A0  69                 	db	105	;'i'
  4905  00E6A1  6E                 	db	110	;'n'
  4906  00E6A2  20                 	db	32
  4907  00E6A3  73                 	db	115	;'s'
  4908  00E6A4  65                 	db	101	;'e'
  4909  00E6A5  63                 	db	99	;'c'
  4910  00E6A6  6F                 	db	111	;'o'
  4911  00E6A7  6E                 	db	110	;'n'
  4912  00E6A8  64                 	db	100	;'d'
  4913  00E6A9  73                 	db	115	;'s'
  4914  00E6AA  0A                 	db	10
  4915  00E6AB  0D                 	db	13
  4916  00E6AC  20                 	db	32
  4917  00E6AD  20                 	db	32
  4918  00E6AE  20                 	db	32
  4919  00E6AF  4D                 	db	77	;'M'
  4920  00E6B0  61                 	db	97	;'a'
  4921  00E6B1  78                 	db	120	;'x'
  4922  00E6B2  20                 	db	32
  4923  00E6B3  52                 	db	82	;'R'
  4924  00E6B4  4D                 	db	77	;'M'
  4925  00E6B5  53                 	db	83	;'S'
  4926  00E6B6  20                 	db	32
  4927  00E6B7  43                 	db	67	;'C'
  4928  00E6B8  75                 	db	117	;'u'
  4929  00E6B9  72                 	db	114	;'r'
  4930  00E6BA  72                 	db	114	;'r'
  4931  00E6BB  65                 	db	101	;'e'
  4932  00E6BC  6E                 	db	110	;'n'
  4933  00E6BD  74                 	db	116	;'t'
  4934  00E6BE  3F                 	db	63	;'?'
  4935  00E6BF  3A                 	db	58	;':'
  4936  00E6C0  20                 	db	32
  4937  00E6C1  50                 	db	80	;'P'
  4938  00E6C2  72                 	db	114	;'r'
  4939  00E6C3  69                 	db	105	;'i'
  4940  00E6C4  6E                 	db	110	;'n'
  4941  00E6C5  74                 	db	116	;'t'
  4942  00E6C6  73                 	db	115	;'s'
  4943  00E6C7  20                 	db	32
  4944  00E6C8  74                 	db	116	;'t'
  4945  00E6C9  68                 	db	104	;'h'
  4946  00E6CA  65                 	db	101	;'e'
  4947  00E6CB  20                 	db	32
  4948  00E6CC  6D                 	db	109	;'m'
  4949  00E6CD  61                 	db	97	;'a'
  4950  00E6CE  78                 	db	120	;'x'
  4951  00E6CF  69                 	db	105	;'i'
  4952  00E6D0  6D                 	db	109	;'m'
  4953  00E6D1  75                 	db	117	;'u'
  4954  00E6D2  6D                 	db	109	;'m'
  4955  00E6D3  20                 	db	32
  4956  00E6D4  72                 	db	114	;'r'
  4957  00E6D5  65                 	db	101	;'e'
  4958  00E6D6  63                 	db	99	;'c'
  4959  00E6D7  6F                 	db	111	;'o'
  4960  00E6D8  72                 	db	114	;'r'
  4961  00E6D9  64                 	db	100	;'d'
  4962  00E6DA  65                 	db	101	;'e'
  4963  00E6DB  64                 	db	100	;'d'
  4964  00E6DC  20                 	db	32
  4965  00E6DD  52                 	db	82	;'R'
  4966  00E6DE  4D                 	db	77	;'M'
  4967  00E6DF  53                 	db	83	;'S'
  4968  00E6E0  20                 	db	32
  4969  00E6E1  6F                 	db	111	;'o'
  4970  00E6E2  75                 	db	117	;'u'
  4971  00E6E3  74                 	db	116	;'t'
  4972  00E6E4  70                 	db	112	;'p'
  4973  00E6E5  75                 	db	117	;'u'
  4974  00E6E6  74                 	db	116	;'t'
  4975  00E6E7  20                 	db	32
  4976  00E6E8  63                 	db	99	;'c'
  4977  00E6E9  75                 	db	117	;'u'
  4978  00E6EA  72                 	db	114	;'r'
  4979  00E6EB  72                 	db	114	;'r'
  4980  00E6EC  65                 	db	101	;'e'
  4981  00E6ED  6E                 	db	110	;'n'
  4982  00E6EE  74                 	db	116	;'t'
  4983  00E6EF  0A                 	db	10
  4984  00E6F0  0D                 	db	13
  4985  00E6F1  20                 	db	32
  4986  00E6F2  20                 	db	32
  4987  00E6F3  20                 	db	32
  4988  00E6F4  4D                 	db	77	;'M'
  4989  00E6F5  61                 	db	97	;'a'
  4990  00E6F6  78                 	db	120	;'x'
  4991  00E6F7  20                 	db	32
  4992  00E6F8  50                 	db	80	;'P'
  4993  00E6F9  6F                 	db	111	;'o'
  4994  00E6FA  77                 	db	119	;'w'
  4995  00E6FB  65                 	db	101	;'e'
  4996  00E6FC  72                 	db	114	;'r'
  4997  00E6FD  3F                 	db	63	;'?'
  4998  00E6FE  3A                 	db	58	;':'
  4999  00E6FF  20                 	db	32
  5000  00E700  50                 	db	80	;'P'
  5001  00E701  72                 	db	114	;'r'
  5002  00E702  69                 	db	105	;'i'
  5003  00E703  6E                 	db	110	;'n'
  5004  00E704  74                 	db	116	;'t'
  5005  00E705  73                 	db	115	;'s'
  5006  00E706  20                 	db	32
  5007  00E707  74                 	db	116	;'t'
  5008  00E708  68                 	db	104	;'h'
  5009  00E709  65                 	db	101	;'e'
  5010  00E70A  20                 	db	32
  5011  00E70B  6D                 	db	109	;'m'
  5012  00E70C  61                 	db	97	;'a'
  5013  00E70D  78                 	db	120	;'x'
  5014  00E70E  69                 	db	105	;'i'
  5015  00E70F  6D                 	db	109	;'m'
  5016  00E710  75                 	db	117	;'u'
  5017  00E711  6D                 	db	109	;'m'
  5018  00E712  20                 	db	32
  5019  00E713  72                 	db	114	;'r'
  5020  00E714  65                 	db	101	;'e'
  5021  00E715  63                 	db	99	;'c'
  5022  00E716  6F                 	db	111	;'o'
  5023  00E717  72                 	db	114	;'r'
  5024  00E718  64                 	db	100	;'d'
  5025  00E719  65                 	db	101	;'e'
  5026  00E71A  64                 	db	100	;'d'
  5027  00E71B  20                 	db	32
  5028  00E71C  6F                 	db	111	;'o'
  5029  00E71D  75                 	db	117	;'u'
  5030  00E71E  74                 	db	116	;'t'
  5031  00E71F  70                 	db	112	;'p'
  5032  00E720  75                 	db	117	;'u'
  5033  00E721  74                 	db	116	;'t'
  5034  00E722  20                 	db	32
  5035  00E723  70                 	db	112	;'p'
  5036  00E724  6F                 	db	111	;'o'
  5037  00E725  77                 	db	119	;'w'
  5038  00E726  65                 	db	101	;'e'
  5039  00E727  72                 	db	114	;'r'
  5040  00E728  0A                 	db	10
  5041  00E729  0D                 	db	13
  5042  00E72A  0A                 	db	10
  5043  00E72B  0D                 	db	13
  5044  00E72C  00                 	db	0
  5045  00E72D                     STR_143:
  5046  00E72D  4C                 	db	76	;'L'
  5047  00E72E  69                 	db	105	;'i'
  5048  00E72F  73                 	db	115	;'s'
  5049  00E730  74                 	db	116	;'t'
  5050  00E731  20                 	db	32
  5051  00E732  6F                 	db	111	;'o'
  5052  00E733  66                 	db	102	;'f'
  5053  00E734  20                 	db	32
  5054  00E735  73                 	db	115	;'s'
  5055  00E736  75                 	db	117	;'u'
  5056  00E737  70                 	db	112	;'p'
  5057  00E738  70                 	db	112	;'p'
  5058  00E739  6F                 	db	111	;'o'
  5059  00E73A  72                 	db	114	;'r'
  5060  00E73B  74                 	db	116	;'t'
  5061  00E73C  65                 	db	101	;'e'
  5062  00E73D  64                 	db	100	;'d'
  5063  00E73E  20                 	db	32
  5064  00E73F  44                 	db	68	;'D'
  5065  00E740  65                 	db	101	;'e'
  5066  00E741  76                 	db	118	;'v'
  5067  00E742  69                 	db	105	;'i'
  5068  00E743  63                 	db	99	;'c'
  5069  00E744  65                 	db	101	;'e'
  5070  00E745  20                 	db	32
  5071  00E746  4D                 	db	77	;'M'
  5072  00E747  65                 	db	101	;'e'
  5073  00E748  61                 	db	97	;'a'
  5074  00E749  73                 	db	115	;'s'
  5075  00E74A  75                 	db	117	;'u'
  5076  00E74B  72                 	db	114	;'r'
  5077  00E74C  65                 	db	101	;'e'
  5078  00E74D  6D                 	db	109	;'m'
  5079  00E74E  65                 	db	101	;'e'
  5080  00E74F  6E                 	db	110	;'n'
  5081  00E750  74                 	db	116	;'t'
  5082  00E751  20                 	db	32
  5083  00E752  43                 	db	67	;'C'
  5084  00E753  6F                 	db	111	;'o'
  5085  00E754  6D                 	db	109	;'m'
  5086  00E755  6D                 	db	109	;'m'
  5087  00E756  61                 	db	97	;'a'
  5088  00E757  6E                 	db	110	;'n'
  5089  00E758  64                 	db	100	;'d'
  5090  00E759  73                 	db	115	;'s'
  5091  00E75A  3A                 	db	58	;':'
  5092  00E75B  0A                 	db	10
  5093  00E75C  0D                 	db	13
  5094  00E75D  20                 	db	32
  5095  00E75E  20                 	db	32
  5096  00E75F  20                 	db	32
  5097  00E760  4D                 	db	77	;'M'
  5098  00E761  65                 	db	101	;'e'
  5099  00E762  61                 	db	97	;'a'
  5100  00E763  73                 	db	115	;'s'
  5101  00E764  75                 	db	117	;'u'
  5102  00E765  72                 	db	114	;'r'
  5103  00E766  65                 	db	101	;'e'
  5104  00E767  20                 	db	32
  5105  00E768  50                 	db	80	;'P'
  5106  00E769  4F                 	db	79	;'O'
  5107  00E76A  53                 	db	83	;'S'
  5108  00E76B  33                 	db	51	;'3'
  5109  00E76C  50                 	db	80	;'P'
  5110  00E76D  33                 	db	51	;'3'
  5111  00E76E  3F                 	db	63	;'?'
  5112  00E76F  3A                 	db	58	;':'
  5113  00E770  20                 	db	32
  5114  00E771  52                 	db	82	;'R'
  5115  00E772  65                 	db	101	;'e'
  5116  00E773  74                 	db	116	;'t'
  5117  00E774  75                 	db	117	;'u'
  5118  00E775  72                 	db	114	;'r'
  5119  00E776  6E                 	db	110	;'n'
  5120  00E777  73                 	db	115	;'s'
  5121  00E778  20                 	db	32
  5122  00E779  2B                 	db	43
  5123  00E77A  33                 	db	51	;'3'
  5124  00E77B  2E                 	db	46
  5125  00E77C  33                 	db	51	;'3'
  5126  00E77D  56                 	db	86	;'V'
  5127  00E77E  20                 	db	32
  5128  00E77F  41                 	db	65	;'A'
  5129  00E780  44                 	db	68	;'D'
  5130  00E781  43                 	db	67	;'C'
  5131  00E782  20                 	db	32
  5132  00E783  43                 	db	67	;'C'
  5133  00E784  6F                 	db	111	;'o'
  5134  00E785  6E                 	db	110	;'n'
  5135  00E786  76                 	db	118	;'v'
  5136  00E787  65                 	db	101	;'e'
  5137  00E788  72                 	db	114	;'r'
  5138  00E789  73                 	db	115	;'s'
  5139  00E78A  69                 	db	105	;'i'
  5140  00E78B  6F                 	db	111	;'o'
  5141  00E78C  6E                 	db	110	;'n'
  5142  00E78D  20                 	db	32
  5143  00E78E  69                 	db	105	;'i'
  5144  00E78F  6E                 	db	110	;'n'
  5145  00E790  20                 	db	32
  5146  00E791  76                 	db	118	;'v'
  5147  00E792  6F                 	db	111	;'o'
  5148  00E793  6C                 	db	108	;'l'
  5149  00E794  74                 	db	116	;'t'
  5150  00E795  73                 	db	115	;'s'
  5151  00E796  0A                 	db	10
  5152  00E797  0D                 	db	13
  5153  00E798  20                 	db	32
  5154  00E799  20                 	db	32
  5155  00E79A  20                 	db	32
  5156  00E79B  4D                 	db	77	;'M'
  5157  00E79C  65                 	db	101	;'e'
  5158  00E79D  61                 	db	97	;'a'
  5159  00E79E  73                 	db	115	;'s'
  5160  00E79F  75                 	db	117	;'u'
  5161  00E7A0  72                 	db	114	;'r'
  5162  00E7A1  65                 	db	101	;'e'
  5163  00E7A2  20                 	db	32
  5164  00E7A3  50                 	db	80	;'P'
  5165  00E7A4  4F                 	db	79	;'O'
  5166  00E7A5  53                 	db	83	;'S'
  5167  00E7A6  31                 	db	49	;'1'
  5168  00E7A7  32                 	db	50	;'2'
  5169  00E7A8  3F                 	db	63	;'?'
  5170  00E7A9  3A                 	db	58	;':'
  5171  00E7AA  20                 	db	32
  5172  00E7AB  52                 	db	82	;'R'
  5173  00E7AC  65                 	db	101	;'e'
  5174  00E7AD  74                 	db	116	;'t'
  5175  00E7AE  75                 	db	117	;'u'
  5176  00E7AF  72                 	db	114	;'r'
  5177  00E7B0  6E                 	db	110	;'n'
  5178  00E7B1  73                 	db	115	;'s'
  5179  00E7B2  20                 	db	32
  5180  00E7B3  2B                 	db	43
  5181  00E7B4  31                 	db	49	;'1'
  5182  00E7B5  32                 	db	50	;'2'
  5183  00E7B6  56                 	db	86	;'V'
  5184  00E7B7  20                 	db	32
  5185  00E7B8  41                 	db	65	;'A'
  5186  00E7B9  44                 	db	68	;'D'
  5187  00E7BA  43                 	db	67	;'C'
  5188  00E7BB  20                 	db	32
  5189  00E7BC  43                 	db	67	;'C'
  5190  00E7BD  6F                 	db	111	;'o'
  5191  00E7BE  6E                 	db	110	;'n'
  5192  00E7BF  76                 	db	118	;'v'
  5193  00E7C0  65                 	db	101	;'e'
  5194  00E7C1  72                 	db	114	;'r'
  5195  00E7C2  73                 	db	115	;'s'
  5196  00E7C3  69                 	db	105	;'i'
  5197  00E7C4  6F                 	db	111	;'o'
  5198  00E7C5  6E                 	db	110	;'n'
  5199  00E7C6  20                 	db	32
  5200  00E7C7  69                 	db	105	;'i'
  5201  00E7C8  6E                 	db	110	;'n'
  5202  00E7C9  20                 	db	32
  5203  00E7CA  76                 	db	118	;'v'
  5204  00E7CB  6F                 	db	111	;'o'
  5205  00E7CC  6C                 	db	108	;'l'
  5206  00E7CD  74                 	db	116	;'t'
  5207  00E7CE  73                 	db	115	;'s'
  5208  00E7CF  0A                 	db	10
  5209  00E7D0  0D                 	db	13
  5210  00E7D1  20                 	db	32
  5211  00E7D2  20                 	db	32
  5212  00E7D3  20                 	db	32
  5213  00E7D4  4D                 	db	77	;'M'
  5214  00E7D5  65                 	db	101	;'e'
  5215  00E7D6  61                 	db	97	;'a'
  5216  00E7D7  73                 	db	115	;'s'
  5217  00E7D8  75                 	db	117	;'u'
  5218  00E7D9  72                 	db	114	;'r'
  5219  00E7DA  65                 	db	101	;'e'
  5220  00E7DB  20                 	db	32
  5221  00E7DC  44                 	db	68	;'D'
  5222  00E7DD  69                 	db	105	;'i'
  5223  00E7DE  65                 	db	101	;'e'
  5224  00E7DF  20                 	db	32
  5225  00E7E0  54                 	db	84	;'T'
  5226  00E7E1  65                 	db	101	;'e'
  5227  00E7E2  6D                 	db	109	;'m'
  5228  00E7E3  70                 	db	112	;'p'
  5229  00E7E4  3F                 	db	63	;'?'
  5230  00E7E5  3A                 	db	58	;':'
  5231  00E7E6  20                 	db	32
  5232  00E7E7  52                 	db	82	;'R'
  5233  00E7E8  65                 	db	101	;'e'
  5234  00E7E9  74                 	db	116	;'t'
  5235  00E7EA  75                 	db	117	;'u'
  5236  00E7EB  72                 	db	114	;'r'
  5237  00E7EC  6E                 	db	110	;'n'
  5238  00E7ED  73                 	db	115	;'s'
  5239  00E7EE  20                 	db	32
  5240  00E7EF  74                 	db	116	;'t'
  5241  00E7F0  68                 	db	104	;'h'
  5242  00E7F1  65                 	db	101	;'e'
  5243  00E7F2  20                 	db	32
  5244  00E7F3  6D                 	db	109	;'m'
  5245  00E7F4  69                 	db	105	;'i'
  5246  00E7F5  63                 	db	99	;'c'
  5247  00E7F6  72                 	db	114	;'r'
  5248  00E7F7  6F                 	db	111	;'o'
  5249  00E7F8  63                 	db	99	;'c'
  5250  00E7F9  6F                 	db	111	;'o'
  5251  00E7FA  6E                 	db	110	;'n'
  5252  00E7FB  74                 	db	116	;'t'
  5253  00E7FC  72                 	db	114	;'r'
  5254  00E7FD  6F                 	db	111	;'o'
  5255  00E7FE  6C                 	db	108	;'l'
  5256  00E7FF  6C                 	db	108	;'l'
  5257  00E800  65                 	db	101	;'e'
  5258  00E801  72                 	db	114	;'r'
  5259  00E802  20                 	db	32
  5260  00E803  64                 	db	100	;'d'
  5261  00E804  69                 	db	105	;'i'
  5262  00E805  65                 	db	101	;'e'
  5263  00E806  20                 	db	32
  5264  00E807  74                 	db	116	;'t'
  5265  00E808  65                 	db	101	;'e'
  5266  00E809  6D                 	db	109	;'m'
  5267  00E80A  70                 	db	112	;'p'
  5268  00E80B  65                 	db	101	;'e'
  5269  00E80C  72                 	db	114	;'r'
  5270  00E80D  61                 	db	97	;'a'
  5271  00E80E  74                 	db	116	;'t'
  5272  00E80F  75                 	db	117	;'u'
  5273  00E810  72                 	db	114	;'r'
  5274  00E811  65                 	db	101	;'e'
  5275  00E812  20                 	db	32
  5276  00E813  69                 	db	105	;'i'
  5277  00E814  6E                 	db	110	;'n'
  5278  00E815  20                 	db	32
  5279  00E816  64                 	db	100	;'d'
  5280  00E817  65                 	db	101	;'e'
  5281  00E818  67                 	db	103	;'g'
  5282  00E819  72                 	db	114	;'r'
  5283  00E81A  65                 	db	101	;'e'
  5284  00E81B  65                 	db	101	;'e'
  5285  00E81C  73                 	db	115	;'s'
  5286  00E81D  20                 	db	32
  5287  00E81E  43                 	db	67	;'C'
  5288  00E81F  0A                 	db	10
  5289  00E820  0D                 	db	13
  5290  00E821  20                 	db	32
  5291  00E822  20                 	db	32
  5292  00E823  20                 	db	32
  5293  00E824  4D                 	db	77	;'M'
  5294  00E825  65                 	db	101	;'e'
  5295  00E826  61                 	db	97	;'a'
  5296  00E827  73                 	db	115	;'s'
  5297  00E828  75                 	db	117	;'u'
  5298  00E829  72                 	db	114	;'r'
  5299  00E82A  65                 	db	101	;'e'
  5300  00E82B  20                 	db	32
  5301  00E82C  46                 	db	70	;'F'
  5302  00E82D  56                 	db	86	;'V'
  5303  00E82E  52                 	db	82	;'R'
  5304  00E82F  3F                 	db	63	;'?'
  5305  00E830  3A                 	db	58	;':'
  5306  00E831  20                 	db	32
  5307  00E832  52                 	db	82	;'R'
  5308  00E833  65                 	db	101	;'e'
  5309  00E834  74                 	db	116	;'t'
  5310  00E835  75                 	db	117	;'u'
  5311  00E836  72                 	db	114	;'r'
  5312  00E837  6E                 	db	110	;'n'
  5313  00E838  73                 	db	115	;'s'
  5314  00E839  20                 	db	32
  5315  00E83A  74                 	db	116	;'t'
  5316  00E83B  68                 	db	104	;'h'
  5317  00E83C  65                 	db	101	;'e'
  5318  00E83D  20                 	db	32
  5319  00E83E  69                 	db	105	;'i'
  5320  00E83F  6E                 	db	110	;'n'
  5321  00E840  74                 	db	116	;'t'
  5322  00E841  65                 	db	101	;'e'
  5323  00E842  72                 	db	114	;'r'
  5324  00E843  6E                 	db	110	;'n'
  5325  00E844  61                 	db	97	;'a'
  5326  00E845  6C                 	db	108	;'l'
  5327  00E846  20                 	db	32
  5328  00E847  66                 	db	102	;'f'
  5329  00E848  69                 	db	105	;'i'
  5330  00E849  78                 	db	120	;'x'
  5331  00E84A  65                 	db	101	;'e'
  5332  00E84B  64                 	db	100	;'d'
  5333  00E84C  20                 	db	32
  5334  00E84D  76                 	db	118	;'v'
  5335  00E84E  6F                 	db	111	;'o'
  5336  00E84F  6C                 	db	108	;'l'
  5337  00E850  74                 	db	116	;'t'
  5338  00E851  61                 	db	97	;'a'
  5339  00E852  67                 	db	103	;'g'
  5340  00E853  65                 	db	101	;'e'
  5341  00E854  20                 	db	32
  5342  00E855  72                 	db	114	;'r'
  5343  00E856  65                 	db	101	;'e'
  5344  00E857  66                 	db	102	;'f'
  5345  00E858  65                 	db	101	;'e'
  5346  00E859  72                 	db	114	;'r'
  5347  00E85A  65                 	db	101	;'e'
  5348  00E85B  6E                 	db	110	;'n'
  5349  00E85C  63                 	db	99	;'c'
  5350  00E85D  65                 	db	101	;'e'
  5351  00E85E  20                 	db	32
  5352  00E85F  62                 	db	98	;'b'
  5353  00E860  75                 	db	117	;'u'
  5354  00E861  66                 	db	102	;'f'
  5355  00E862  66                 	db	102	;'f'
  5356  00E863  65                 	db	101	;'e'
  5357  00E864  72                 	db	114	;'r'
  5358  00E865  20                 	db	32
  5359  00E866  31                 	db	49	;'1'
  5360  00E867  20                 	db	32
  5361  00E868  6F                 	db	111	;'o'
  5362  00E869  75                 	db	117	;'u'
  5363  00E86A  74                 	db	116	;'t'
  5364  00E86B  70                 	db	112	;'p'
  5365  00E86C  75                 	db	117	;'u'
  5366  00E86D  74                 	db	116	;'t'
  5367  00E86E  20                 	db	32
  5368  00E86F  69                 	db	105	;'i'
  5369  00E870  6E                 	db	110	;'n'
  5370  00E871  20                 	db	32
  5371  00E872  76                 	db	118	;'v'
  5372  00E873  6F                 	db	111	;'o'
  5373  00E874  6C                 	db	108	;'l'
  5374  00E875  74                 	db	116	;'t'
  5375  00E876  73                 	db	115	;'s'
  5376  00E877  0A                 	db	10
  5377  00E878  0D                 	db	13
  5378  00E879  20                 	db	32
  5379  00E87A  20                 	db	32
  5380  00E87B  20                 	db	32
  5381  00E87C  4D                 	db	77	;'M'
  5382  00E87D  65                 	db	101	;'e'
  5383  00E87E  61                 	db	97	;'a'
  5384  00E87F  73                 	db	115	;'s'
  5385  00E880  75                 	db	117	;'u'
  5386  00E881  72                 	db	114	;'r'
  5387  00E882  65                 	db	101	;'e'
  5388  00E883  20                 	db	32
  5389  00E884  41                 	db	65	;'A'
  5390  00E885  56                 	db	86	;'V'
  5391  00E886  53                 	db	83	;'S'
  5392  00E887  53                 	db	83	;'S'
  5393  00E888  3F                 	db	63	;'?'
  5394  00E889  3A                 	db	58	;':'
  5395  00E88A  20                 	db	32
  5396  00E88B  52                 	db	82	;'R'
  5397  00E88C  65                 	db	101	;'e'
  5398  00E88D  74                 	db	116	;'t'
  5399  00E88E  75                 	db	117	;'u'
  5400  00E88F  72                 	db	114	;'r'
  5401  00E890  6E                 	db	110	;'n'
  5402  00E891  73                 	db	115	;'s'
  5403  00E892  20                 	db	32
  5404  00E893  74                 	db	116	;'t'
  5405  00E894  68                 	db	104	;'h'
  5406  00E895  65                 	db	101	;'e'
  5407  00E896  20                 	db	32
  5408  00E897  6D                 	db	109	;'m'
  5409  00E898  65                 	db	101	;'e'
  5410  00E899  61                 	db	97	;'a'
  5411  00E89A  73                 	db	115	;'s'
  5412  00E89B  75                 	db	117	;'u'
  5413  00E89C  72                 	db	114	;'r'
  5414  00E89D  65                 	db	101	;'e'
  5415  00E89E  64                 	db	100	;'d'
  5416  00E89F  20                 	db	32
  5417  00E8A0  76                 	db	118	;'v'
  5418  00E8A1  61                 	db	97	;'a'
  5419  00E8A2  6C                 	db	108	;'l'
  5420  00E8A3  75                 	db	117	;'u'
  5421  00E8A4  65                 	db	101	;'e'
  5422  00E8A5  20                 	db	32
  5423  00E8A6  6F                 	db	111	;'o'
  5424  00E8A7  66                 	db	102	;'f'
  5425  00E8A8  20                 	db	32
  5426  00E8A9  41                 	db	65	;'A'
  5427  00E8AA  6E                 	db	110	;'n'
  5428  00E8AB  61                 	db	97	;'a'
  5429  00E8AC  6C                 	db	108	;'l'
  5430  00E8AD  6F                 	db	111	;'o'
  5431  00E8AE  67                 	db	103	;'g'
  5432  00E8AF  20                 	db	32
  5433  00E8B0  56                 	db	86	;'V'
  5434  00E8B1  53                 	db	83	;'S'
  5435  00E8B2  53                 	db	83	;'S'
  5436  00E8B3  20                 	db	32
  5437  00E8B4  69                 	db	105	;'i'
  5438  00E8B5  6E                 	db	110	;'n'
  5439  00E8B6  20                 	db	32
  5440  00E8B7  76                 	db	118	;'v'
  5441  00E8B8  6F                 	db	111	;'o'
  5442  00E8B9  6C                 	db	108	;'l'
  5443  00E8BA  74                 	db	116	;'t'
  5444  00E8BB  73                 	db	115	;'s'
  5445  00E8BC  0A                 	db	10
  5446  00E8BD  0D                 	db	13
  5447  00E8BE  20                 	db	32
  5448  00E8BF  20                 	db	32
  5449  00E8C0  20                 	db	32
  5450  00E8C1  4D                 	db	77	;'M'
  5451  00E8C2  61                 	db	97	;'a'
  5452  00E8C3  78                 	db	120	;'x'
  5453  00E8C4  20                 	db	32
  5454  00E8C5  50                 	db	80	;'P'
  5455  00E8C6  4F                 	db	79	;'O'
  5456  00E8C7  53                 	db	83	;'S'
  5457  00E8C8  33                 	db	51	;'3'
  5458  00E8C9  50                 	db	80	;'P'
  5459  00E8CA  33                 	db	51	;'3'
  5460  00E8CB  20                 	db	32
  5461  00E8CC  56                 	db	86	;'V'
  5462  00E8CD  6F                 	db	111	;'o'
  5463  00E8CE  6C                 	db	108	;'l'
  5464  00E8CF  74                 	db	116	;'t'
  5465  00E8D0  61                 	db	97	;'a'
  5466  00E8D1  67                 	db	103	;'g'
  5467  00E8D2  65                 	db	101	;'e'
  5468  00E8D3  3F                 	db	63	;'?'
  5469  00E8D4  3A                 	db	58	;':'
  5470  00E8D5  20                 	db	32
  5471  00E8D6  52                 	db	82	;'R'
  5472  00E8D7  65                 	db	101	;'e'
  5473  00E8D8  74                 	db	116	;'t'
  5474  00E8D9  75                 	db	117	;'u'
  5475  00E8DA  72                 	db	114	;'r'
  5476  00E8DB  6E                 	db	110	;'n'
  5477  00E8DC  73                 	db	115	;'s'
  5478  00E8DD  20                 	db	32
  5479  00E8DE  74                 	db	116	;'t'
  5480  00E8DF  68                 	db	104	;'h'
  5481  00E8E0  65                 	db	101	;'e'
  5482  00E8E1  20                 	db	32
  5483  00E8E2  6D                 	db	109	;'m'
  5484  00E8E3  61                 	db	97	;'a'
  5485  00E8E4  78                 	db	120	;'x'
  5486  00E8E5  69                 	db	105	;'i'
  5487  00E8E6  6D                 	db	109	;'m'
  5488  00E8E7  75                 	db	117	;'u'
  5489  00E8E8  6D                 	db	109	;'m'
  5490  00E8E9  20                 	db	32
  5491  00E8EA  72                 	db	114	;'r'
  5492  00E8EB  65                 	db	101	;'e'
  5493  00E8EC  63                 	db	99	;'c'
  5494  00E8ED  6F                 	db	111	;'o'
  5495  00E8EE  72                 	db	114	;'r'
  5496  00E8EF  64                 	db	100	;'d'
  5497  00E8F0  65                 	db	101	;'e'
  5498  00E8F1  64                 	db	100	;'d'
  5499  00E8F2  20                 	db	32
  5500  00E8F3  2B                 	db	43
  5501  00E8F4  33                 	db	51	;'3'
  5502  00E8F5  2E                 	db	46
  5503  00E8F6  33                 	db	51	;'3'
  5504  00E8F7  56                 	db	86	;'V'
  5505  00E8F8  20                 	db	32
  5506  00E8F9  52                 	db	82	;'R'
  5507  00E8FA  61                 	db	97	;'a'
  5508  00E8FB  69                 	db	105	;'i'
  5509  00E8FC  6C                 	db	108	;'l'
  5510  00E8FD  20                 	db	32
  5511  00E8FE  56                 	db	86	;'V'
  5512  00E8FF  6F                 	db	111	;'o'
  5513  00E900  6C                 	db	108	;'l'
  5514  00E901  74                 	db	116	;'t'
  5515  00E902  61                 	db	97	;'a'
  5516  00E903  67                 	db	103	;'g'
  5517  00E904  65                 	db	101	;'e'
  5518  00E905  20                 	db	32
  5519  00E906  6D                 	db	109	;'m'
  5520  00E907  65                 	db	101	;'e'
  5521  00E908  61                 	db	97	;'a'
  5522  00E909  73                 	db	115	;'s'
  5523  00E90A  75                 	db	117	;'u'
  5524  00E90B  72                 	db	114	;'r'
  5525  00E90C  65                 	db	101	;'e'
  5526  00E90D  64                 	db	100	;'d'
  5527  00E90E  0A                 	db	10
  5528  00E90F  0D                 	db	13
  5529  00E910  20                 	db	32
  5530  00E911  20                 	db	32
  5531  00E912  20                 	db	32
  5532  00E913  4D                 	db	77	;'M'
  5533  00E914  61                 	db	97	;'a'
  5534  00E915  78                 	db	120	;'x'
  5535  00E916  20                 	db	32
  5536  00E917  50                 	db	80	;'P'
  5537  00E918  4F                 	db	79	;'O'
  5538  00E919  53                 	db	83	;'S'
  5539  00E91A  31                 	db	49	;'1'
  5540  00E91B  32                 	db	50	;'2'
  5541  00E91C  20                 	db	32
  5542  00E91D  56                 	db	86	;'V'
  5543  00E91E  6F                 	db	111	;'o'
  5544  00E91F  6C                 	db	108	;'l'
  5545  00E920  74                 	db	116	;'t'
  5546  00E921  61                 	db	97	;'a'
  5547  00E922  67                 	db	103	;'g'
  5548  00E923  65                 	db	101	;'e'
  5549  00E924  3F                 	db	63	;'?'
  5550  00E925  3A                 	db	58	;':'
  5551  00E926  20                 	db	32
  5552  00E927  52                 	db	82	;'R'
  5553  00E928  65                 	db	101	;'e'
  5554  00E929  74                 	db	116	;'t'
  5555  00E92A  75                 	db	117	;'u'
  5556  00E92B  72                 	db	114	;'r'
  5557  00E92C  6E                 	db	110	;'n'
  5558  00E92D  73                 	db	115	;'s'
  5559  00E92E  20                 	db	32
  5560  00E92F  74                 	db	116	;'t'
  5561  00E930  68                 	db	104	;'h'
  5562  00E931  65                 	db	101	;'e'
  5563  00E932  20                 	db	32
  5564  00E933  6D                 	db	109	;'m'
  5565  00E934  61                 	db	97	;'a'
  5566  00E935  78                 	db	120	;'x'
  5567  00E936  69                 	db	105	;'i'
  5568  00E937  6D                 	db	109	;'m'
  5569  00E938  75                 	db	117	;'u'
  5570  00E939  6D                 	db	109	;'m'
  5571  00E93A  20                 	db	32
  5572  00E93B  72                 	db	114	;'r'
  5573  00E93C  65                 	db	101	;'e'
  5574  00E93D  63                 	db	99	;'c'
  5575  00E93E  6F                 	db	111	;'o'
  5576  00E93F  72                 	db	114	;'r'
  5577  00E940  64                 	db	100	;'d'
  5578  00E941  65                 	db	101	;'e'
  5579  00E942  64                 	db	100	;'d'
  5580  00E943  20                 	db	32
  5581  00E944  2B                 	db	43
  5582  00E945  31                 	db	49	;'1'
  5583  00E946  32                 	db	50	;'2'
  5584  00E947  56                 	db	86	;'V'
  5585  00E948  20                 	db	32
  5586  00E949  52                 	db	82	;'R'
  5587  00E94A  61                 	db	97	;'a'
  5588  00E94B  69                 	db	105	;'i'
  5589  00E94C  6C                 	db	108	;'l'
  5590  00E94D  20                 	db	32
  5591  00E94E  56                 	db	86	;'V'
  5592  00E94F  6F                 	db	111	;'o'
  5593  00E950  6C                 	db	108	;'l'
  5594  00E951  74                 	db	116	;'t'
  5595  00E952  61                 	db	97	;'a'
  5596  00E953  67                 	db	103	;'g'
  5597  00E954  65                 	db	101	;'e'
  5598  00E955  20                 	db	32
  5599  00E956  6D                 	db	109	;'m'
  5600  00E957  65                 	db	101	;'e'
  5601  00E958  61                 	db	97	;'a'
  5602  00E959  73                 	db	115	;'s'
  5603  00E95A  75                 	db	117	;'u'
  5604  00E95B  72                 	db	114	;'r'
  5605  00E95C  65                 	db	101	;'e'
  5606  00E95D  64                 	db	100	;'d'
  5607  00E95E  0A                 	db	10
  5608  00E95F  0D                 	db	13
  5609  00E960  20                 	db	32
  5610  00E961  20                 	db	32
  5611  00E962  20                 	db	32
  5612  00E963  4D                 	db	77	;'M'
  5613  00E964  61                 	db	97	;'a'
  5614  00E965  78                 	db	120	;'x'
  5615  00E966  20                 	db	32
  5616  00E967  44                 	db	68	;'D'
  5617  00E968  69                 	db	105	;'i'
  5618  00E969  65                 	db	101	;'e'
  5619  00E96A  20                 	db	32
  5620  00E96B  54                 	db	84	;'T'
  5621  00E96C  65                 	db	101	;'e'
  5622  00E96D  6D                 	db	109	;'m'
  5623  00E96E  70                 	db	112	;'p'
  5624  00E96F  3F                 	db	63	;'?'
  5625  00E970  3A                 	db	58	;':'
  5626  00E971  20                 	db	32
  5627  00E972  52                 	db	82	;'R'
  5628  00E973  65                 	db	101	;'e'
  5629  00E974  74                 	db	116	;'t'
  5630  00E975  75                 	db	117	;'u'
  5631  00E976  72                 	db	114	;'r'
  5632  00E977  6E                 	db	110	;'n'
  5633  00E978  73                 	db	115	;'s'
  5634  00E979  20                 	db	32
  5635  00E97A  74                 	db	116	;'t'
  5636  00E97B  68                 	db	104	;'h'
  5637  00E97C  65                 	db	101	;'e'
  5638  00E97D  20                 	db	32
  5639  00E97E  6D                 	db	109	;'m'
  5640  00E97F  61                 	db	97	;'a'
  5641  00E980  78                 	db	120	;'x'
  5642  00E981  69                 	db	105	;'i'
  5643  00E982  6D                 	db	109	;'m'
  5644  00E983  75                 	db	117	;'u'
  5645  00E984  6D                 	db	109	;'m'
  5646  00E985  20                 	db	32
  5647  00E986  72                 	db	114	;'r'
  5648  00E987  65                 	db	101	;'e'
  5649  00E988  63                 	db	99	;'c'
  5650  00E989  6F                 	db	111	;'o'
  5651  00E98A  72                 	db	114	;'r'
  5652  00E98B  64                 	db	100	;'d'
  5653  00E98C  65                 	db	101	;'e'
  5654  00E98D  64                 	db	100	;'d'
  5655  00E98E  20                 	db	32
  5656  00E98F  64                 	db	100	;'d'
  5657  00E990  69                 	db	105	;'i'
  5658  00E991  65                 	db	101	;'e'
  5659  00E992  20                 	db	32
  5660  00E993  74                 	db	116	;'t'
  5661  00E994  65                 	db	101	;'e'
  5662  00E995  6D                 	db	109	;'m'
  5663  00E996  70                 	db	112	;'p'
  5664  00E997  65                 	db	101	;'e'
  5665  00E998  72                 	db	114	;'r'
  5666  00E999  61                 	db	97	;'a'
  5667  00E99A  74                 	db	116	;'t'
  5668  00E99B  75                 	db	117	;'u'
  5669  00E99C  72                 	db	114	;'r'
  5670  00E99D  65                 	db	101	;'e'
  5671  00E99E  20                 	db	32
  5672  00E99F  6D                 	db	109	;'m'
  5673  00E9A0  65                 	db	101	;'e'
  5674  00E9A1  61                 	db	97	;'a'
  5675  00E9A2  73                 	db	115	;'s'
  5676  00E9A3  75                 	db	117	;'u'
  5677  00E9A4  72                 	db	114	;'r'
  5678  00E9A5  65                 	db	101	;'e'
  5679  00E9A6  64                 	db	100	;'d'
  5680  00E9A7  0A                 	db	10
  5681  00E9A8  0D                 	db	13
  5682  00E9A9  20                 	db	32
  5683  00E9AA  20                 	db	32
  5684  00E9AB  20                 	db	32
  5685  00E9AC  4D                 	db	77	;'M'
  5686  00E9AD  61                 	db	97	;'a'
  5687  00E9AE  78                 	db	120	;'x'
  5688  00E9AF  20                 	db	32
  5689  00E9B0  46                 	db	70	;'F'
  5690  00E9B1  56                 	db	86	;'V'
  5691  00E9B2  52                 	db	82	;'R'
  5692  00E9B3  20                 	db	32
  5693  00E9B4  56                 	db	86	;'V'
  5694  00E9B5  6F                 	db	111	;'o'
  5695  00E9B6  6C                 	db	108	;'l'
  5696  00E9B7  74                 	db	116	;'t'
  5697  00E9B8  61                 	db	97	;'a'
  5698  00E9B9  67                 	db	103	;'g'
  5699  00E9BA  65                 	db	101	;'e'
  5700  00E9BB  3F                 	db	63	;'?'
  5701  00E9BC  3A                 	db	58	;':'
  5702  00E9BD  20                 	db	32
  5703  00E9BE  52                 	db	82	;'R'
  5704  00E9BF  65                 	db	101	;'e'
  5705  00E9C0  74                 	db	116	;'t'
  5706  00E9C1  75                 	db	117	;'u'
  5707  00E9C2  72                 	db	114	;'r'
  5708  00E9C3  6E                 	db	110	;'n'
  5709  00E9C4  73                 	db	115	;'s'
  5710  00E9C5  20                 	db	32
  5711  00E9C6  74                 	db	116	;'t'
  5712  00E9C7  68                 	db	104	;'h'
  5713  00E9C8  65                 	db	101	;'e'
  5714  00E9C9  20                 	db	32
  5715  00E9CA  6D                 	db	109	;'m'
  5716  00E9CB  61                 	db	97	;'a'
  5717  00E9CC  78                 	db	120	;'x'
  5718  00E9CD  69                 	db	105	;'i'
  5719  00E9CE  6D                 	db	109	;'m'
  5720  00E9CF  75                 	db	117	;'u'
  5721  00E9D0  6D                 	db	109	;'m'
  5722  00E9D1  20                 	db	32
  5723  00E9D2  72                 	db	114	;'r'
  5724  00E9D3  65                 	db	101	;'e'
  5725  00E9D4  63                 	db	99	;'c'
  5726  00E9D5  6F                 	db	111	;'o'
  5727  00E9D6  72                 	db	114	;'r'
  5728  00E9D7  64                 	db	100	;'d'
  5729  00E9D8  65                 	db	101	;'e'
  5730  00E9D9  64                 	db	100	;'d'
  5731  00E9DA  20                 	db	32
  5732  00E9DB  46                 	db	70	;'F'
  5733  00E9DC  56                 	db	86	;'V'
  5734  00E9DD  52                 	db	82	;'R'
  5735  00E9DE  20                 	db	32
  5736  00E9DF  42                 	db	66	;'B'
  5737  00E9E0  75                 	db	117	;'u'
  5738  00E9E1  66                 	db	102	;'f'
  5739  00E9E2  66                 	db	102	;'f'
  5740  00E9E3  65                 	db	101	;'e'
  5741  00E9E4  72                 	db	114	;'r'
  5742  00E9E5  20                 	db	32
  5743  00E9E6  31                 	db	49	;'1'
  5744  00E9E7  20                 	db	32
  5745  00E9E8  56                 	db	86	;'V'
  5746  00E9E9  6F                 	db	111	;'o'
  5747  00E9EA  6C                 	db	108	;'l'
  5748  00E9EB  74                 	db	116	;'t'
  5749  00E9EC  61                 	db	97	;'a'
  5750  00E9ED  67                 	db	103	;'g'
  5751  00E9EE  65                 	db	101	;'e'
  5752  00E9EF  20                 	db	32
  5753  00E9F0  6D                 	db	109	;'m'
  5754  00E9F1  65                 	db	101	;'e'
  5755  00E9F2  61                 	db	97	;'a'
  5756  00E9F3  73                 	db	115	;'s'
  5757  00E9F4  75                 	db	117	;'u'
  5758  00E9F5  72                 	db	114	;'r'
  5759  00E9F6  65                 	db	101	;'e'
  5760  00E9F7  64                 	db	100	;'d'
  5761  00E9F8  0A                 	db	10
  5762  00E9F9  0D                 	db	13
  5763  00E9FA  0A                 	db	10
  5764  00E9FB  0D                 	db	13
  5765  00E9FC  00                 	db	0
  5766  00E9FD                     STR_147:
  5767  00E9FD  4C                 	db	76	;'L'
  5768  00E9FE  69                 	db	105	;'i'
  5769  00E9FF  73                 	db	115	;'s'
  5770  00EA00  74                 	db	116	;'t'
  5771  00EA01  20                 	db	32
  5772  00EA02  6F                 	db	111	;'o'
  5773  00EA03  66                 	db	102	;'f'
  5774  00EA04  20                 	db	32
  5775  00EA05  73                 	db	115	;'s'
  5776  00EA06  75                 	db	117	;'u'
  5777  00EA07  70                 	db	112	;'p'
  5778  00EA08  70                 	db	112	;'p'
  5779  00EA09  6F                 	db	111	;'o'
  5780  00EA0A  72                 	db	114	;'r'
  5781  00EA0B  74                 	db	116	;'t'
  5782  00EA0C  65                 	db	101	;'e'
  5783  00EA0D  64                 	db	100	;'d'
  5784  00EA0E  20                 	db	32
  5785  00EA0F  4F                 	db	79	;'O'
  5786  00EA10  75                 	db	117	;'u'
  5787  00EA11  74                 	db	116	;'t'
  5788  00EA12  70                 	db	112	;'p'
  5789  00EA13  75                 	db	117	;'u'
  5790  00EA14  74                 	db	116	;'t'
  5791  00EA15  20                 	db	32
  5792  00EA16  43                 	db	67	;'C'
  5793  00EA17  6F                 	db	111	;'o'
  5794  00EA18  6E                 	db	110	;'n'
  5795  00EA19  74                 	db	116	;'t'
  5796  00EA1A  72                 	db	114	;'r'
  5797  00EA1B  6F                 	db	111	;'o'
  5798  00EA1C  6C                 	db	108	;'l'
  5799  00EA1D  20                 	db	32
  5800  00EA1E  43                 	db	67	;'C'
  5801  00EA1F  6F                 	db	111	;'o'
  5802  00EA20  6D                 	db	109	;'m'
  5803  00EA21  6D                 	db	109	;'m'
  5804  00EA22  61                 	db	97	;'a'
  5805  00EA23  6E                 	db	110	;'n'
  5806  00EA24  64                 	db	100	;'d'
  5807  00EA25  73                 	db	115	;'s'
  5808  00EA26  3A                 	db	58	;':'
  5809  00EA27  0A                 	db	10
  5810  00EA28  0D                 	db	13
  5811  00EA29  20                 	db	32
  5812  00EA2A  20                 	db	32
  5813  00EA2B  20                 	db	32
  5814  00EA2C  45                 	db	69	;'E'
  5815  00EA2D  6E                 	db	110	;'n'
  5816  00EA2E  61                 	db	97	;'a'
  5817  00EA2F  62                 	db	98	;'b'
  5818  00EA30  6C                 	db	108	;'l'
  5819  00EA31  65                 	db	101	;'e'
  5820  00EA32  20                 	db	32
  5821  00EA33  44                 	db	68	;'D'
  5822  00EA34  69                 	db	105	;'i'
  5823  00EA35  6D                 	db	109	;'m'
  5824  00EA36  6D                 	db	109	;'m'
  5825  00EA37  69                 	db	105	;'i'
  5826  00EA38  6E                 	db	110	;'n'
  5827  00EA39  67                 	db	103	;'g'
  5828  00EA3A  3A                 	db	58	;':'
  5829  00EA3B  20                 	db	32
  5830  00EA3C  45                 	db	69	;'E'
  5831  00EA3D  6E                 	db	110	;'n'
  5832  00EA3E  61                 	db	97	;'a'
  5833  00EA3F  62                 	db	98	;'b'
  5834  00EA40  6C                 	db	108	;'l'
  5835  00EA41  65                 	db	101	;'e'
  5836  00EA42  20                 	db	32
  5837  00EA43  54                 	db	84	;'T'
  5838  00EA44  52                 	db	82	;'R'
  5839  00EA45  49                 	db	73	;'I'
  5840  00EA46  41                 	db	65	;'A'
  5841  00EA47  43                 	db	67	;'C'
  5842  00EA48  20                 	db	32
  5843  00EA49  6F                 	db	111	;'o'
  5844  00EA4A  75                 	db	117	;'u'
  5845  00EA4B  74                 	db	116	;'t'
  5846  00EA4C  70                 	db	112	;'p'
  5847  00EA4D  75                 	db	117	;'u'
  5848  00EA4E  74                 	db	116	;'t'
  5849  00EA4F  20                 	db	32
  5850  00EA50  64                 	db	100	;'d'
  5851  00EA51  69                 	db	105	;'i'
  5852  00EA52  6D                 	db	109	;'m'
  5853  00EA53  6D                 	db	109	;'m'
  5854  00EA54  69                 	db	105	;'i'
  5855  00EA55  6E                 	db	110	;'n'
  5856  00EA56  67                 	db	103	;'g'
  5857  00EA57  0A                 	db	10
  5858  00EA58  0D                 	db	13
  5859  00EA59  20                 	db	32
  5860  00EA5A  20                 	db	32
  5861  00EA5B  20                 	db	32
  5862  00EA5C  44                 	db	68	;'D'
  5863  00EA5D  69                 	db	105	;'i'
  5864  00EA5E  73                 	db	115	;'s'
  5865  00EA5F  61                 	db	97	;'a'
  5866  00EA60  62                 	db	98	;'b'
  5867  00EA61  6C                 	db	108	;'l'
  5868  00EA62  65                 	db	101	;'e'
  5869  00EA63  20                 	db	32
  5870  00EA64  44                 	db	68	;'D'
  5871  00EA65  69                 	db	105	;'i'
  5872  00EA66  6D                 	db	109	;'m'
  5873  00EA67  6D                 	db	109	;'m'
  5874  00EA68  69                 	db	105	;'i'
  5875  00EA69  6E                 	db	110	;'n'
  5876  00EA6A  67                 	db	103	;'g'
  5877  00EA6B  3A                 	db	58	;':'
  5878  00EA6C  20                 	db	32
  5879  00EA6D  44                 	db	68	;'D'
  5880  00EA6E  69                 	db	105	;'i'
  5881  00EA6F  73                 	db	115	;'s'
  5882  00EA70  61                 	db	97	;'a'
  5883  00EA71  62                 	db	98	;'b'
  5884  00EA72  6C                 	db	108	;'l'
  5885  00EA73  65                 	db	101	;'e'
  5886  00EA74  20                 	db	32
  5887  00EA75  54                 	db	84	;'T'
  5888  00EA76  52                 	db	82	;'R'
  5889  00EA77  49                 	db	73	;'I'
  5890  00EA78  41                 	db	65	;'A'
  5891  00EA79  43                 	db	67	;'C'
  5892  00EA7A  20                 	db	32
  5893  00EA7B  6F                 	db	111	;'o'
  5894  00EA7C  75                 	db	117	;'u'
  5895  00EA7D  74                 	db	116	;'t'
  5896  00EA7E  70                 	db	112	;'p'
  5897  00EA7F  75                 	db	117	;'u'
  5898  00EA80  74                 	db	116	;'t'
  5899  00EA81  20                 	db	32
  5900  00EA82  64                 	db	100	;'d'
  5901  00EA83  69                 	db	105	;'i'
  5902  00EA84  6D                 	db	109	;'m'
  5903  00EA85  6D                 	db	109	;'m'
  5904  00EA86  69                 	db	105	;'i'
  5905  00EA87  6E                 	db	110	;'n'
  5906  00EA88  67                 	db	103	;'g'
  5907  00EA89  0A                 	db	10
  5908  00EA8A  0D                 	db	13
  5909  00EA8B  20                 	db	32
  5910  00EA8C  20                 	db	32
  5911  00EA8D  20                 	db	32
  5912  00EA8E  45                 	db	69	;'E'
  5913  00EA8F  6E                 	db	110	;'n'
  5914  00EA90  61                 	db	97	;'a'
  5915  00EA91  62                 	db	98	;'b'
  5916  00EA92  6C                 	db	108	;'l'
  5917  00EA93  65                 	db	101	;'e'
  5918  00EA94  20                 	db	32
  5919  00EA95  4C                 	db	76	;'L'
  5920  00EA96  6F                 	db	111	;'o'
  5921  00EA97  61                 	db	97	;'a'
  5922  00EA98  64                 	db	100	;'d'
  5923  00EA99  3A                 	db	58	;':'
  5924  00EA9A  20                 	db	32
  5925  00EA9B  45                 	db	69	;'E'
  5926  00EA9C  6E                 	db	110	;'n'
  5927  00EA9D  61                 	db	97	;'a'
  5928  00EA9E  62                 	db	98	;'b'
  5929  00EA9F  6C                 	db	108	;'l'
  5930  00EAA0  65                 	db	101	;'e'
  5931  00EAA1  73                 	db	115	;'s'
  5932  00EAA2  20                 	db	32
  5933  00EAA3  74                 	db	116	;'t'
  5934  00EAA4  68                 	db	104	;'h'
  5935  00EAA5  65                 	db	101	;'e'
  5936  00EAA6  20                 	db	32
  5937  00EAA7  6F                 	db	111	;'o'
  5938  00EAA8  75                 	db	117	;'u'
  5939  00EAA9  74                 	db	116	;'t'
  5940  00EAAA  70                 	db	112	;'p'
  5941  00EAAB  75                 	db	117	;'u'
  5942  00EAAC  74                 	db	116	;'t'
  5943  00EAAD  20                 	db	32
  5944  00EAAE  54                 	db	84	;'T'
  5945  00EAAF  52                 	db	82	;'R'
  5946  00EAB0  49                 	db	73	;'I'
  5947  00EAB1  41                 	db	65	;'A'
  5948  00EAB2  43                 	db	67	;'C'
  5949  00EAB3  20                 	db	32
  5950  00EAB4  77                 	db	119	;'w'
  5951  00EAB5  69                 	db	105	;'i'
  5952  00EAB6  74                 	db	116	;'t'
  5953  00EAB7  68                 	db	104	;'h'
  5954  00EAB8  20                 	db	32
  5955  00EAB9  64                 	db	100	;'d'
  5956  00EABA  69                 	db	105	;'i'
  5957  00EABB  6D                 	db	109	;'m'
  5958  00EABC  6D                 	db	109	;'m'
  5959  00EABD  69                 	db	105	;'i'
  5960  00EABE  6E                 	db	110	;'n'
  5961  00EABF  67                 	db	103	;'g'
  5962  00EAC0  20                 	db	32
  5963  00EAC1  64                 	db	100	;'d'
  5964  00EAC2  69                 	db	105	;'i'
  5965  00EAC3  73                 	db	115	;'s'
  5966  00EAC4  61                 	db	97	;'a'
  5967  00EAC5  62                 	db	98	;'b'
  5968  00EAC6  6C                 	db	108	;'l'
  5969  00EAC7  65                 	db	101	;'e'
  5970  00EAC8  64                 	db	100	;'d'
  5971  00EAC9  0A                 	db	10
  5972  00EACA  0D                 	db	13
  5973  00EACB  20                 	db	32
  5974  00EACC  20                 	db	32
  5975  00EACD  20                 	db	32
  5976  00EACE  44                 	db	68	;'D'
  5977  00EACF  69                 	db	105	;'i'
  5978  00EAD0  73                 	db	115	;'s'
  5979  00EAD1  61                 	db	97	;'a'
  5980  00EAD2  62                 	db	98	;'b'
  5981  00EAD3  6C                 	db	108	;'l'
  5982  00EAD4  65                 	db	101	;'e'
  5983  00EAD5  20                 	db	32
  5984  00EAD6  4C                 	db	76	;'L'
  5985  00EAD7  6F                 	db	111	;'o'
  5986  00EAD8  61                 	db	97	;'a'
  5987  00EAD9  64                 	db	100	;'d'
  5988  00EADA  3A                 	db	58	;':'
  5989  00EADB  20                 	db	32
  5990  00EADC  44                 	db	68	;'D'
  5991  00EADD  69                 	db	105	;'i'
  5992  00EADE  73                 	db	115	;'s'
  5993  00EADF  61                 	db	97	;'a'
  5994  00EAE0  62                 	db	98	;'b'
  5995  00EAE1  6C                 	db	108	;'l'
  5996  00EAE2  65                 	db	101	;'e'
  5997  00EAE3  73                 	db	115	;'s'
  5998  00EAE4  20                 	db	32
  5999  00EAE5  74                 	db	116	;'t'
  6000  00EAE6  68                 	db	104	;'h'
  6001  00EAE7  65                 	db	101	;'e'
  6002  00EAE8  20                 	db	32
  6003  00EAE9  6F                 	db	111	;'o'
  6004  00EAEA  75                 	db	117	;'u'
  6005  00EAEB  74                 	db	116	;'t'
  6006  00EAEC  70                 	db	112	;'p'
  6007  00EAED  75                 	db	117	;'u'
  6008  00EAEE  74                 	db	116	;'t'
  6009  00EAEF  20                 	db	32
  6010  00EAF0  54                 	db	84	;'T'
  6011  00EAF1  52                 	db	82	;'R'
  6012  00EAF2  49                 	db	73	;'I'
  6013  00EAF3  41                 	db	65	;'A'
  6014  00EAF4  43                 	db	67	;'C'
  6015  00EAF5  20                 	db	32
  6016  00EAF6  63                 	db	99	;'c'
  6017  00EAF7  6F                 	db	111	;'o'
  6018  00EAF8  6D                 	db	109	;'m'
  6019  00EAF9  70                 	db	112	;'p'
  6020  00EAFA  6C                 	db	108	;'l'
  6021  00EAFB  65                 	db	101	;'e'
  6022  00EAFC  74                 	db	116	;'t'
  6023  00EAFD  65                 	db	101	;'e'
  6024  00EAFE  6C                 	db	108	;'l'
  6025  00EAFF  79                 	db	121	;'y'
  6026  00EB00  0A                 	db	10
  6027  00EB01  0D                 	db	13
  6028  00EB02  20                 	db	32
  6029  00EB03  20                 	db	32
  6030  00EB04  20                 	db	32
  6031  00EB05  4C                 	db	76	;'L'
  6032  00EB06  6F                 	db	111	;'o'
  6033  00EB07  61                 	db	97	;'a'
  6034  00EB08  64                 	db	100	;'d'
  6035  00EB09  20                 	db	32
  6036  00EB0A  45                 	db	69	;'E'
  6037  00EB0B  6E                 	db	110	;'n'
  6038  00EB0C  61                 	db	97	;'a'
  6039  00EB0D  62                 	db	98	;'b'
  6040  00EB0E  6C                 	db	108	;'l'
  6041  00EB0F  65                 	db	101	;'e'
  6042  00EB10  64                 	db	100	;'d'
  6043  00EB11  3F                 	db	63	;'?'
  6044  00EB12  3A                 	db	58	;':'
  6045  00EB13  20                 	db	32
  6046  00EB14  52                 	db	82	;'R'
  6047  00EB15  65                 	db	101	;'e'
  6048  00EB16  74                 	db	116	;'t'
  6049  00EB17  75                 	db	117	;'u'
  6050  00EB18  72                 	db	114	;'r'
  6051  00EB19  6E                 	db	110	;'n'
  6052  00EB1A  73                 	db	115	;'s'
  6053  00EB1B  20                 	db	32
  6054  00EB1C  69                 	db	105	;'i'
  6055  00EB1D  66                 	db	102	;'f'
  6056  00EB1E  20                 	db	32
  6057  00EB1F  74                 	db	116	;'t'
  6058  00EB20  68                 	db	104	;'h'
  6059  00EB21  65                 	db	101	;'e'
  6060  00EB22  20                 	db	32
  6061  00EB23  6F                 	db	111	;'o'
  6062  00EB24  75                 	db	117	;'u'
  6063  00EB25  74                 	db	116	;'t'
  6064  00EB26  70                 	db	112	;'p'
  6065  00EB27  75                 	db	117	;'u'
  6066  00EB28  74                 	db	116	;'t'
  6067  00EB29  20                 	db	32
  6068  00EB2A  6C                 	db	108	;'l'
  6069  00EB2B  6F                 	db	111	;'o'
  6070  00EB2C  61                 	db	97	;'a'
  6071  00EB2D  64                 	db	100	;'d'
  6072  00EB2E  20                 	db	32
  6073  00EB2F  69                 	db	105	;'i'
  6074  00EB30  73                 	db	115	;'s'
  6075  00EB31  20                 	db	32
  6076  00EB32  65                 	db	101	;'e'
  6077  00EB33  6E                 	db	110	;'n'
  6078  00EB34  61                 	db	97	;'a'
  6079  00EB35  62                 	db	98	;'b'
  6080  00EB36  6C                 	db	108	;'l'
  6081  00EB37  65                 	db	101	;'e'
  6082  00EB38  64                 	db	100	;'d'
  6083  00EB39  20                 	db	32
  6084  00EB3A  6F                 	db	111	;'o'
  6085  00EB3B  72                 	db	114	;'r'
  6086  00EB3C  20                 	db	32
  6087  00EB3D  64                 	db	100	;'d'
  6088  00EB3E  69                 	db	105	;'i'
  6089  00EB3F  73                 	db	115	;'s'
  6090  00EB40  61                 	db	97	;'a'
  6091  00EB41  62                 	db	98	;'b'
  6092  00EB42  6C                 	db	108	;'l'
  6093  00EB43  65                 	db	101	;'e'
  6094  00EB44  64                 	db	100	;'d'
  6095  00EB45  0A                 	db	10
  6096  00EB46  0D                 	db	13
  6097  00EB47  20                 	db	32
  6098  00EB48  20                 	db	32
  6099  00EB49  20                 	db	32
  6100  00EB4A  44                 	db	68	;'D'
  6101  00EB4B  69                 	db	105	;'i'
  6102  00EB4C  6D                 	db	109	;'m'
  6103  00EB4D  6D                 	db	109	;'m'
  6104  00EB4E  69                 	db	105	;'i'
  6105  00EB4F  6E                 	db	110	;'n'
  6106  00EB50  67                 	db	103	;'g'
  6107  00EB51  20                 	db	32
  6108  00EB52  45                 	db	69	;'E'
  6109  00EB53  6E                 	db	110	;'n'
  6110  00EB54  61                 	db	97	;'a'
  6111  00EB55  62                 	db	98	;'b'
  6112  00EB56  6C                 	db	108	;'l'
  6113  00EB57  65                 	db	101	;'e'
  6114  00EB58  64                 	db	100	;'d'
  6115  00EB59  3F                 	db	63	;'?'
  6116  00EB5A  3A                 	db	58	;':'
  6117  00EB5B  20                 	db	32
  6118  00EB5C  52                 	db	82	;'R'
  6119  00EB5D  65                 	db	101	;'e'
  6120  00EB5E  74                 	db	116	;'t'
  6121  00EB5F  75                 	db	117	;'u'
  6122  00EB60  72                 	db	114	;'r'
  6123  00EB61  6E                 	db	110	;'n'
  6124  00EB62  73                 	db	115	;'s'
  6125  00EB63  20                 	db	32
  6126  00EB64  69                 	db	105	;'i'
  6127  00EB65  66                 	db	102	;'f'
  6128  00EB66  20                 	db	32
  6129  00EB67  64                 	db	100	;'d'
  6130  00EB68  69                 	db	105	;'i'
  6131  00EB69  6D                 	db	109	;'m'
  6132  00EB6A  6D                 	db	109	;'m'
  6133  00EB6B  69                 	db	105	;'i'
  6134  00EB6C  6E                 	db	110	;'n'
  6135  00EB6D  67                 	db	103	;'g'
  6136  00EB6E  20                 	db	32
  6137  00EB6F  6F                 	db	111	;'o'
  6138  00EB70  66                 	db	102	;'f'
  6139  00EB71  20                 	db	32
  6140  00EB72  74                 	db	116	;'t'
  6141  00EB73  68                 	db	104	;'h'
  6142  00EB74  65                 	db	101	;'e'
  6143  00EB75  20                 	db	32
  6144  00EB76  6F                 	db	111	;'o'
  6145  00EB77  75                 	db	117	;'u'
  6146  00EB78  74                 	db	116	;'t'
  6147  00EB79  70                 	db	112	;'p'
  6148  00EB7A  75                 	db	117	;'u'
  6149  00EB7B  74                 	db	116	;'t'
  6150  00EB7C  20                 	db	32
  6151  00EB7D  6C                 	db	108	;'l'
  6152  00EB7E  6F                 	db	111	;'o'
  6153  00EB7F  61                 	db	97	;'a'
  6154  00EB80  64                 	db	100	;'d'
  6155  00EB81  20                 	db	32
  6156  00EB82  69                 	db	105	;'i'
  6157  00EB83  73                 	db	115	;'s'
  6158  00EB84  20                 	db	32
  6159  00EB85  65                 	db	101	;'e'
  6160  00EB86  6E                 	db	110	;'n'
  6161  00EB87  61                 	db	97	;'a'
  6162  00EB88  62                 	db	98	;'b'
  6163  00EB89  6C                 	db	108	;'l'
  6164  00EB8A  65                 	db	101	;'e'
  6165  00EB8B  64                 	db	100	;'d'
  6166  00EB8C  20                 	db	32
  6167  00EB8D  6F                 	db	111	;'o'
  6168  00EB8E  72                 	db	114	;'r'
  6169  00EB8F  20                 	db	32
  6170  00EB90  6E                 	db	110	;'n'
  6171  00EB91  6F                 	db	111	;'o'
  6172  00EB92  74                 	db	116	;'t'
  6173  00EB93  0A                 	db	10
  6174  00EB94  0D                 	db	13
  6175  00EB95  20                 	db	32
  6176  00EB96  20                 	db	32
  6177  00EB97  20                 	db	32
  6178  00EB98  53                 	db	83	;'S'
  6179  00EB99  65                 	db	101	;'e'
  6180  00EB9A  74                 	db	116	;'t'
  6181  00EB9B  20                 	db	32
  6182  00EB9C  44                 	db	68	;'D'
  6183  00EB9D  69                 	db	105	;'i'
  6184  00EB9E  6D                 	db	109	;'m'
  6185  00EB9F  6D                 	db	109	;'m'
  6186  00EBA0  69                 	db	105	;'i'
  6187  00EBA1  6E                 	db	110	;'n'
  6188  00EBA2  67                 	db	103	;'g'
  6189  00EBA3  20                 	db	32
  6190  00EBA4  50                 	db	80	;'P'
  6191  00EBA5  65                 	db	101	;'e'
  6192  00EBA6  72                 	db	114	;'r'
  6193  00EBA7  63                 	db	99	;'c'
  6194  00EBA8  65                 	db	101	;'e'
  6195  00EBA9  6E                 	db	110	;'n'
  6196  00EBAA  74                 	db	116	;'t'
  6197  00EBAB  61                 	db	97	;'a'
  6198  00EBAC  67                 	db	103	;'g'
  6199  00EBAD  65                 	db	101	;'e'
  6200  00EBAE  3A                 	db	58	;':'
  6201  00EBAF  20                 	db	32
  6202  00EBB0  3C                 	db	60	;'<'
  6203  00EBB1  78                 	db	120	;'x'
  6204  00EBB2  3E                 	db	62	;'>'
  6205  00EBB3  3A                 	db	58	;':'
  6206  00EBB4  20                 	db	32
  6207  00EBB5  53                 	db	83	;'S'
  6208  00EBB6  65                 	db	101	;'e'
  6209  00EBB7  74                 	db	116	;'t'
  6210  00EBB8  73                 	db	115	;'s'
  6211  00EBB9  20                 	db	32
  6212  00EBBA  74                 	db	116	;'t'
  6213  00EBBB  68                 	db	104	;'h'
  6214  00EBBC  65                 	db	101	;'e'
  6215  00EBBD  20                 	db	32
  6216  00EBBE  6F                 	db	111	;'o'
  6217  00EBBF  75                 	db	117	;'u'
  6218  00EBC0  74                 	db	116	;'t'
  6219  00EBC1  70                 	db	112	;'p'
  6220  00EBC2  75                 	db	117	;'u'
  6221  00EBC3  74                 	db	116	;'t'
  6222  00EBC4  20                 	db	32
  6223  00EBC5  64                 	db	100	;'d'
  6224  00EBC6  69                 	db	105	;'i'
  6225  00EBC7  6D                 	db	109	;'m'
  6226  00EBC8  6D                 	db	109	;'m'
  6227  00EBC9  69                 	db	105	;'i'
  6228  00EBCA  6E                 	db	110	;'n'
  6229  00EBCB  67                 	db	103	;'g'
  6230  00EBCC  20                 	db	32
  6231  00EBCD  70                 	db	112	;'p'
  6232  00EBCE  65                 	db	101	;'e'
  6233  00EBCF  72                 	db	114	;'r'
  6234  00EBD0  63                 	db	99	;'c'
  6235  00EBD1  65                 	db	101	;'e'
  6236  00EBD2  6E                 	db	110	;'n'
  6237  00EBD3  74                 	db	116	;'t'
  6238  00EBD4  61                 	db	97	;'a'
  6239  00EBD5  67                 	db	103	;'g'
  6240  00EBD6  65                 	db	101	;'e'
  6241  00EBD7  20                 	db	32
  6242  00EBD8  61                 	db	97	;'a'
  6243  00EBD9  73                 	db	115	;'s'
  6244  00EBDA  20                 	db	32
  6245  00EBDB  78                 	db	120	;'x'
  6246  00EBDC  20                 	db	32
  6247  00EBDD  70                 	db	112	;'p'
  6248  00EBDE  65                 	db	101	;'e'
  6249  00EBDF  72                 	db	114	;'r'
  6250  00EBE0  63                 	db	99	;'c'
  6251  00EBE1  65                 	db	101	;'e'
  6252  00EBE2  6E                 	db	110	;'n'
  6253  00EBE3  74                 	db	116	;'t'
  6254  00EBE4  0A                 	db	10
  6255  00EBE5  0D                 	db	13
  6256  00EBE6  0A                 	db	10
  6257  00EBE7  0D                 	db	13
  6258  00EBE8  00                 	db	0
  6259  00EBE9                     STR_151:
  6260  00EBE9  50                 	db	80	;'P'
  6261  00EBEA  6C                 	db	108	;'l'
  6262  00EBEB  65                 	db	101	;'e'
  6263  00EBEC  61                 	db	97	;'a'
  6264  00EBED  73                 	db	115	;'s'
  6265  00EBEE  65                 	db	101	;'e'
  6266  00EBEF  20                 	db	32
  6267  00EBF0  73                 	db	115	;'s'
  6268  00EBF1  70                 	db	112	;'p'
  6269  00EBF2  65                 	db	101	;'e'
  6270  00EBF3  63                 	db	99	;'c'
  6271  00EBF4  69                 	db	105	;'i'
  6272  00EBF5  66                 	db	102	;'f'
  6273  00EBF6  79                 	db	121	;'y'
  6274  00EBF7  20                 	db	32
  6275  00EBF8  77                 	db	119	;'w'
  6276  00EBF9  68                 	db	104	;'h'
  6277  00EBFA  61                 	db	97	;'a'
  6278  00EBFB  74                 	db	116	;'t'
  6279  00EBFC  20                 	db	32
  6280  00EBFD  74                 	db	116	;'t'
  6281  00EBFE  79                 	db	121	;'y'
  6282  00EBFF  70                 	db	112	;'p'
  6283  00EC00  65                 	db	101	;'e'
  6284  00EC01  20                 	db	32
  6285  00EC02  6F                 	db	111	;'o'
  6286  00EC03  66                 	db	102	;'f'
  6287  00EC04  20                 	db	32
  6288  00EC05  63                 	db	99	;'c'
  6289  00EC06  6F                 	db	111	;'o'
  6290  00EC07  6D                 	db	109	;'m'
  6291  00EC08  6D                 	db	109	;'m'
  6292  00EC09  61                 	db	97	;'a'
  6293  00EC0A  6E                 	db	110	;'n'
  6294  00EC0B  64                 	db	100	;'d'
  6295  00EC0C  73                 	db	115	;'s'
  6296  00EC0D  20                 	db	32
  6297  00EC0E  79                 	db	121	;'y'
  6298  00EC0F  6F                 	db	111	;'o'
  6299  00EC10  75                 	db	117	;'u'
  6300  00EC11  27                 	db	39
  6301  00EC12  64                 	db	100	;'d'
  6302  00EC13  20                 	db	32
  6303  00EC14  6C                 	db	108	;'l'
  6304  00EC15  69                 	db	105	;'i'
  6305  00EC16  6B                 	db	107	;'k'
  6306  00EC17  65                 	db	101	;'e'
  6307  00EC18  20                 	db	32
  6308  00EC19  68                 	db	104	;'h'
  6309  00EC1A  65                 	db	101	;'e'
  6310  00EC1B  6C                 	db	108	;'l'
  6311  00EC1C  70                 	db	112	;'p'
  6312  00EC1D  20                 	db	32
  6313  00EC1E  77                 	db	119	;'w'
  6314  00EC1F  69                 	db	105	;'i'
  6315  00EC20  74                 	db	116	;'t'
  6316  00EC21  68                 	db	104	;'h'
  6317  00EC22  3A                 	db	58	;':'
  6318  00EC23  0A                 	db	10
  6319  00EC24  0D                 	db	13
  6320  00EC25  54                 	db	84	;'T'
  6321  00EC26  72                 	db	114	;'r'
  6322  00EC27  79                 	db	121	;'y'
  6323  00EC28  20                 	db	32
  6324  00EC29  27                 	db	39
  6325  00EC2A  48                 	db	72	;'H'
  6326  00EC2B  65                 	db	101	;'e'
  6327  00EC2C  6C                 	db	108	;'l'
  6328  00EC2D  70                 	db	112	;'p'
  6329  00EC2E  20                 	db	32
  6330  00EC2F  3C                 	db	60	;'<'
  6331  00EC30  63                 	db	99	;'c'
  6332  00EC31  6F                 	db	111	;'o'
  6333  00EC32  6D                 	db	109	;'m'
  6334  00EC33  6D                 	db	109	;'m'
  6335  00EC34  61                 	db	97	;'a'
  6336  00EC35  6E                 	db	110	;'n'
  6337  00EC36  64                 	db	100	;'d'
  6338  00EC37  20                 	db	32
  6339  00EC38  73                 	db	115	;'s'
  6340  00EC39  65                 	db	101	;'e'
  6341  00EC3A  74                 	db	116	;'t'
  6342  00EC3B  3E                 	db	62	;'>'
  6343  00EC3C  27                 	db	39
  6344  00EC3D  0A                 	db	10
  6345  00EC3E  0D                 	db	13
  6346  00EC3F  0A                 	db	10
  6347  00EC40  0D                 	db	13
  6348  00EC41  53                 	db	83	;'S'
  6349  00EC42  75                 	db	117	;'u'
  6350  00EC43  70                 	db	112	;'p'
  6351  00EC44  70                 	db	112	;'p'
  6352  00EC45  6F                 	db	111	;'o'
  6353  00EC46  72                 	db	114	;'r'
  6354  00EC47  74                 	db	116	;'t'
  6355  00EC48  65                 	db	101	;'e'
  6356  00EC49  64                 	db	100	;'d'
  6357  00EC4A  20                 	db	32
  6358  00EC4B  43                 	db	67	;'C'
  6359  00EC4C  6F                 	db	111	;'o'
  6360  00EC4D  6D                 	db	109	;'m'
  6361  00EC4E  6D                 	db	109	;'m'
  6362  00EC4F  61                 	db	97	;'a'
  6363  00EC50  6E                 	db	110	;'n'
  6364  00EC51  64                 	db	100	;'d'
  6365  00EC52  20                 	db	32
  6366  00EC53  53                 	db	83	;'S'
  6367  00EC54  65                 	db	101	;'e'
  6368  00EC55  74                 	db	116	;'t'
  6369  00EC56  73                 	db	115	;'s'
  6370  00EC57  3A                 	db	58	;':'
  6371  00EC58  0A                 	db	10
  6372  00EC59  0D                 	db	13
  6373  00EC5A  20                 	db	32
  6374  00EC5B  20                 	db	32
  6375  00EC5C  20                 	db	32
  6376  00EC5D  44                 	db	68	;'D'
  6377  00EC5E  65                 	db	101	;'e'
  6378  00EC5F  76                 	db	118	;'v'
  6379  00EC60  69                 	db	105	;'i'
  6380  00EC61  63                 	db	99	;'c'
  6381  00EC62  65                 	db	101	;'e'
  6382  00EC63  20                 	db	32
  6383  00EC64  43                 	db	67	;'C'
  6384  00EC65  6F                 	db	111	;'o'
  6385  00EC66  6E                 	db	110	;'n'
  6386  00EC67  74                 	db	116	;'t'
  6387  00EC68  72                 	db	114	;'r'
  6388  00EC69  6F                 	db	111	;'o'
  6389  00EC6A  6C                 	db	108	;'l'
  6390  00EC6B  20                 	db	32
  6391  00EC6C  43                 	db	67	;'C'
  6392  00EC6D  6F                 	db	111	;'o'
  6393  00EC6E  6D                 	db	109	;'m'
  6394  00EC6F  6D                 	db	109	;'m'
  6395  00EC70  61                 	db	97	;'a'
  6396  00EC71  6E                 	db	110	;'n'
  6397  00EC72  64                 	db	100	;'d'
  6398  00EC73  73                 	db	115	;'s'
  6399  00EC74  3A                 	db	58	;':'
  6400  00EC75  20                 	db	32
  6401  00EC76  43                 	db	67	;'C'
  6402  00EC77  6F                 	db	111	;'o'
  6403  00EC78  6D                 	db	109	;'m'
  6404  00EC79  6D                 	db	109	;'m'
  6405  00EC7A  61                 	db	97	;'a'
  6406  00EC7B  6E                 	db	110	;'n'
  6407  00EC7C  64                 	db	100	;'d'
  6408  00EC7D  73                 	db	115	;'s'
  6409  00EC7E  20                 	db	32
  6410  00EC7F  74                 	db	116	;'t'
  6411  00EC80  6F                 	db	111	;'o'
  6412  00EC81  20                 	db	32
  6413  00EC82  76                 	db	118	;'v'
  6414  00EC83  69                 	db	105	;'i'
  6415  00EC84  65                 	db	101	;'e'
  6416  00EC85  77                 	db	119	;'w'
  6417  00EC86  20                 	db	32
  6418  00EC87  61                 	db	97	;'a'
  6419  00EC88  6E                 	db	110	;'n'
  6420  00EC89  64                 	db	100	;'d'
  6421  00EC8A  20                 	db	32
  6422  00EC8B  63                 	db	99	;'c'
  6423  00EC8C  6F                 	db	111	;'o'
  6424  00EC8D  6E                 	db	110	;'n'
  6425  00EC8E  74                 	db	116	;'t'
  6426  00EC8F  72                 	db	114	;'r'
  6427  00EC90  6F                 	db	111	;'o'
  6428  00EC91  6C                 	db	108	;'l'
  6429  00EC92  20                 	db	32
  6430  00EC93  6C                 	db	108	;'l'
  6431  00EC94  6F                 	db	111	;'o'
  6432  00EC95  77                 	db	119	;'w'
  6433  00EC96  20                 	db	32
  6434  00EC97  6C                 	db	108	;'l'
  6435  00EC98  65                 	db	101	;'e'
  6436  00EC99  76                 	db	118	;'v'
  6437  00EC9A  65                 	db	101	;'e'
  6438  00EC9B  6C                 	db	108	;'l'
  6439  00EC9C  20                 	db	32
  6440  00EC9D  73                 	db	115	;'s'
  6441  00EC9E  79                 	db	121	;'y'
  6442  00EC9F  73                 	db	115	;'s'
  6443  00ECA0  74                 	db	116	;'t'
  6444  00ECA1  65                 	db	101	;'e'
  6445  00ECA2  6D                 	db	109	;'m'
  6446  00ECA3  20                 	db	32
  6447  00ECA4  66                 	db	102	;'f'
  6448  00ECA5  75                 	db	117	;'u'
  6449  00ECA6  6E                 	db	110	;'n'
  6450  00ECA7  63                 	db	99	;'c'
  6451  00ECA8  74                 	db	116	;'t'
  6452  00ECA9  69                 	db	105	;'i'
  6453  00ECAA  6F                 	db	111	;'o'
  6454  00ECAB  6E                 	db	110	;'n'
  6455  00ECAC  61                 	db	97	;'a'
  6456  00ECAD  6C                 	db	108	;'l'
  6457  00ECAE  69                 	db	105	;'i'
  6458  00ECAF  74                 	db	116	;'t'
  6459  00ECB0  79                 	db	121	;'y'
  6460  00ECB1  0A                 	db	10
  6461  00ECB2  0D                 	db	13
  6462  00ECB3  20                 	db	32
  6463  00ECB4  20                 	db	32
  6464  00ECB5  20                 	db	32
  6465  00ECB6  44                 	db	68	;'D'
  6466  00ECB7  65                 	db	101	;'e'
  6467  00ECB8  76                 	db	118	;'v'
  6468  00ECB9  69                 	db	105	;'i'
  6469  00ECBA  63                 	db	99	;'c'
  6470  00ECBB  65                 	db	101	;'e'
  6471  00ECBC  20                 	db	32
  6472  00ECBD  4D                 	db	77	;'M'
  6473  00ECBE  65                 	db	101	;'e'
  6474  00ECBF  61                 	db	97	;'a'
  6475  00ECC0  73                 	db	115	;'s'
  6476  00ECC1  75                 	db	117	;'u'
  6477  00ECC2  72                 	db	114	;'r'
  6478  00ECC3  65                 	db	101	;'e'
  6479  00ECC4  6D                 	db	109	;'m'
  6480  00ECC5  65                 	db	101	;'e'
  6481  00ECC6  6E                 	db	110	;'n'
  6482  00ECC7  74                 	db	116	;'t'
  6483  00ECC8  20                 	db	32
  6484  00ECC9  43                 	db	67	;'C'
  6485  00ECCA  6F                 	db	111	;'o'
  6486  00ECCB  6D                 	db	109	;'m'
  6487  00ECCC  6D                 	db	109	;'m'
  6488  00ECCD  61                 	db	97	;'a'
  6489  00ECCE  6E                 	db	110	;'n'
  6490  00ECCF  64                 	db	100	;'d'
  6491  00ECD0  73                 	db	115	;'s'
  6492  00ECD1  3A                 	db	58	;':'
  6493  00ECD2  20                 	db	32
  6494  00ECD3  56                 	db	86	;'V'
  6495  00ECD4  69                 	db	105	;'i'
  6496  00ECD5  65                 	db	101	;'e'
  6497  00ECD6  77                 	db	119	;'w'
  6498  00ECD7  20                 	db	32
  6499  00ECD8  6C                 	db	108	;'l'
  6500  00ECD9  6F                 	db	111	;'o'
  6501  00ECDA  77                 	db	119	;'w'
  6502  00ECDB  20                 	db	32
  6503  00ECDC  6C                 	db	108	;'l'
  6504  00ECDD  65                 	db	101	;'e'
  6505  00ECDE  76                 	db	118	;'v'
  6506  00ECDF  65                 	db	101	;'e'
  6507  00ECE0  6C                 	db	108	;'l'
  6508  00ECE1  20                 	db	32
  6509  00ECE2  73                 	db	115	;'s'
  6510  00ECE3  79                 	db	121	;'y'
  6511  00ECE4  73                 	db	115	;'s'
  6512  00ECE5  74                 	db	116	;'t'
  6513  00ECE6  65                 	db	101	;'e'
  6514  00ECE7  6D                 	db	109	;'m'
  6515  00ECE8  20                 	db	32
  6516  00ECE9  6D                 	db	109	;'m'
  6517  00ECEA  65                 	db	101	;'e'
  6518  00ECEB  61                 	db	97	;'a'
  6519  00ECEC  73                 	db	115	;'s'
  6520  00ECED  75                 	db	117	;'u'
  6521  00ECEE  72                 	db	114	;'r'
  6522  00ECEF  65                 	db	101	;'e'
  6523  00ECF0  6D                 	db	109	;'m'
  6524  00ECF1  65                 	db	101	;'e'
  6525  00ECF2  6E                 	db	110	;'n'
  6526  00ECF3  74                 	db	116	;'t'
  6527  00ECF4  73                 	db	115	;'s'
  6528  00ECF5  0A                 	db	10
  6529  00ECF6  0D                 	db	13
  6530  00ECF7  20                 	db	32
  6531  00ECF8  20                 	db	32
  6532  00ECF9  20                 	db	32
  6533  00ECFA  50                 	db	80	;'P'
  6534  00ECFB  72                 	db	114	;'r'
  6535  00ECFC  69                 	db	105	;'i'
  6536  00ECFD  6D                 	db	109	;'m'
  6537  00ECFE  61                 	db	97	;'a'
  6538  00ECFF  72                 	db	114	;'r'
  6539  00ED00  79                 	db	121	;'y'
  6540  00ED01  20                 	db	32
  6541  00ED02  4D                 	db	77	;'M'
  6542  00ED03  65                 	db	101	;'e'
  6543  00ED04  61                 	db	97	;'a'
  6544  00ED05  73                 	db	115	;'s'
  6545  00ED06  75                 	db	117	;'u'
  6546  00ED07  72                 	db	114	;'r'
  6547  00ED08  65                 	db	101	;'e'
  6548  00ED09  6D                 	db	109	;'m'
  6549  00ED0A  65                 	db	101	;'e'
  6550  00ED0B  6E                 	db	110	;'n'
  6551  00ED0C  74                 	db	116	;'t'
  6552  00ED0D  20                 	db	32
  6553  00ED0E  43                 	db	67	;'C'
  6554  00ED0F  6F                 	db	111	;'o'
  6555  00ED10  6D                 	db	109	;'m'
  6556  00ED11  6D                 	db	109	;'m'
  6557  00ED12  61                 	db	97	;'a'
  6558  00ED13  6E                 	db	110	;'n'
  6559  00ED14  64                 	db	100	;'d'
  6560  00ED15  73                 	db	115	;'s'
  6561  00ED16  3A                 	db	58	;':'
  6562  00ED17  20                 	db	32
  6563  00ED18  56                 	db	86	;'V'
  6564  00ED19  69                 	db	105	;'i'
  6565  00ED1A  65                 	db	101	;'e'
  6566  00ED1B  77                 	db	119	;'w'
  6567  00ED1C  20                 	db	32
  6568  00ED1D  68                 	db	104	;'h'
  6569  00ED1E  69                 	db	105	;'i'
  6570  00ED1F  67                 	db	103	;'g'
  6571  00ED20  68                 	db	104	;'h'
  6572  00ED21  20                 	db	32
  6573  00ED22  6C                 	db	108	;'l'
  6574  00ED23  65                 	db	101	;'e'
  6575  00ED24  76                 	db	118	;'v'
  6576  00ED25  65                 	db	101	;'e'
  6577  00ED26  6C                 	db	108	;'l'
  6578  00ED27  20                 	db	32
  6579  00ED28  6F                 	db	111	;'o'
  6580  00ED29  75                 	db	117	;'u'
  6581  00ED2A  74                 	db	116	;'t'
  6582  00ED2B  70                 	db	112	;'p'
  6583  00ED2C  75                 	db	117	;'u'
  6584  00ED2D  74                 	db	116	;'t'
  6585  00ED2E  20                 	db	32
  6586  00ED2F  6D                 	db	109	;'m'
  6587  00ED30  65                 	db	101	;'e'
  6588  00ED31  61                 	db	97	;'a'
  6589  00ED32  73                 	db	115	;'s'
  6590  00ED33  75                 	db	117	;'u'
  6591  00ED34  72                 	db	114	;'r'
  6592  00ED35  65                 	db	101	;'e'
  6593  00ED36  6D                 	db	109	;'m'
  6594  00ED37  65                 	db	101	;'e'
  6595  00ED38  6E                 	db	110	;'n'
  6596  00ED39  74                 	db	116	;'t'
  6597  00ED3A  73                 	db	115	;'s'
  6598  00ED3B  20                 	db	32
  6599  00ED3C  61                 	db	97	;'a'
  6600  00ED3D  6E                 	db	110	;'n'
  6601  00ED3E  64                 	db	100	;'d'
  6602  00ED3F  20                 	db	32
  6603  00ED40  63                 	db	99	;'c'
  6604  00ED41  61                 	db	97	;'a'
  6605  00ED42  6C                 	db	108	;'l'
  6606  00ED43  63                 	db	99	;'c'
  6607  00ED44  75                 	db	117	;'u'
  6608  00ED45  6C                 	db	108	;'l'
  6609  00ED46  61                 	db	97	;'a'
  6610  00ED47  74                 	db	116	;'t'
  6611  00ED48  69                 	db	105	;'i'
  6612  00ED49  6F                 	db	111	;'o'
  6613  00ED4A  6E                 	db	110	;'n'
  6614  00ED4B  73                 	db	115	;'s'
  6615  00ED4C  0A                 	db	10
  6616  00ED4D  0D                 	db	13
  6617  00ED4E  20                 	db	32
  6618  00ED4F  20                 	db	32
  6619  00ED50  20                 	db	32
  6620  00ED51  4F                 	db	79	;'O'
  6621  00ED52  75                 	db	117	;'u'
  6622  00ED53  74                 	db	116	;'t'
  6623  00ED54  70                 	db	112	;'p'
  6624  00ED55  75                 	db	117	;'u'
  6625  00ED56  74                 	db	116	;'t'
  6626  00ED57  20                 	db	32
  6627  00ED58  43                 	db	67	;'C'
  6628  00ED59  6F                 	db	111	;'o'
  6629  00ED5A  6E                 	db	110	;'n'
  6630  00ED5B  74                 	db	116	;'t'
  6631  00ED5C  72                 	db	114	;'r'
  6632  00ED5D  6F                 	db	111	;'o'
  6633  00ED5E  6C                 	db	108	;'l'
  6634  00ED5F  20                 	db	32
  6635  00ED60  43                 	db	67	;'C'
  6636  00ED61  6F                 	db	111	;'o'
  6637  00ED62  6D                 	db	109	;'m'
  6638  00ED63  6D                 	db	109	;'m'
  6639  00ED64  61                 	db	97	;'a'
  6640  00ED65  6E                 	db	110	;'n'
  6641  00ED66  64                 	db	100	;'d'
  6642  00ED67  73                 	db	115	;'s'
  6643  00ED68  3A                 	db	58	;':'
  6644  00ED69  20                 	db	32
  6645  00ED6A  43                 	db	67	;'C'
  6646  00ED6B  6F                 	db	111	;'o'
  6647  00ED6C  6E                 	db	110	;'n'
  6648  00ED6D  74                 	db	116	;'t'
  6649  00ED6E  72                 	db	114	;'r'
  6650  00ED6F  6F                 	db	111	;'o'
  6651  00ED70  6C                 	db	108	;'l'
  6652  00ED71  20                 	db	32
  6653  00ED72  74                 	db	116	;'t'
  6654  00ED73  68                 	db	104	;'h'
  6655  00ED74  65                 	db	101	;'e'
  6656  00ED75  20                 	db	32
  6657  00ED76  6F                 	db	111	;'o'
  6658  00ED77  75                 	db	117	;'u'
  6659  00ED78  74                 	db	116	;'t'
  6660  00ED79  70                 	db	112	;'p'
  6661  00ED7A  75                 	db	117	;'u'
  6662  00ED7B  74                 	db	116	;'t'
  6663  00ED7C  20                 	db	32
  6664  00ED7D  73                 	db	115	;'s'
  6665  00ED7E  74                 	db	116	;'t'
  6666  00ED7F  61                 	db	97	;'a'
  6667  00ED80  74                 	db	116	;'t'
  6668  00ED81  65                 	db	101	;'e'
  6669  00ED82  20                 	db	32
  6670  00ED83  61                 	db	97	;'a'
  6671  00ED84  6E                 	db	110	;'n'
  6672  00ED85  64                 	db	100	;'d'
  6673  00ED86  20                 	db	32
  6674  00ED87  64                 	db	100	;'d'
  6675  00ED88  69                 	db	105	;'i'
  6676  00ED89  6D                 	db	109	;'m'
  6677  00ED8A  6D                 	db	109	;'m'
  6678  00ED8B  69                 	db	105	;'i'
  6679  00ED8C  6E                 	db	110	;'n'
  6680  00ED8D  67                 	db	103	;'g'
  6681  00ED8E  20                 	db	32
  6682  00ED8F  66                 	db	102	;'f'
  6683  00ED90  65                 	db	101	;'e'
  6684  00ED91  61                 	db	97	;'a'
  6685  00ED92  74                 	db	116	;'t'
  6686  00ED93  75                 	db	117	;'u'
  6687  00ED94  72                 	db	114	;'r'
  6688  00ED95  65                 	db	101	;'e'
  6689  00ED96  73                 	db	115	;'s'
  6690  00ED97  0A                 	db	10
  6691  00ED98  0D                 	db	13
  6692  00ED99  0A                 	db	10
  6693  00ED9A  0D                 	db	13
  6694  00ED9B  27                 	db	39
  6695  00ED9C  48                 	db	72	;'H'
  6696  00ED9D  65                 	db	101	;'e'
  6697  00ED9E  6C                 	db	108	;'l'
  6698  00ED9F  70                 	db	112	;'p'
  6699  00EDA0  20                 	db	32
  6700  00EDA1  41                 	db	65	;'A'
  6701  00EDA2  6C                 	db	108	;'l'
  6702  00EDA3  6C                 	db	108	;'l'
  6703  00EDA4  27                 	db	39
  6704  00EDA5  20                 	db	32
  6705  00EDA6  77                 	db	119	;'w'
  6706  00EDA7  69                 	db	105	;'i'
  6707  00EDA8  6C                 	db	108	;'l'
  6708  00EDA9  6C                 	db	108	;'l'
  6709  00EDAA  20                 	db	32
  6710  00EDAB  6C                 	db	108	;'l'
  6711  00EDAC  69                 	db	105	;'i'
  6712  00EDAD  73                 	db	115	;'s'
  6713  00EDAE  74                 	db	116	;'t'
  6714  00EDAF  20                 	db	32
  6715  00EDB0  61                 	db	97	;'a'
  6716  00EDB1  6C                 	db	108	;'l'
  6717  00EDB2  6C                 	db	108	;'l'
  6718  00EDB3  20                 	db	32
  6719  00EDB4  63                 	db	99	;'c'
  6720  00EDB5  6F                 	db	111	;'o'
  6721  00EDB6  6D                 	db	109	;'m'
  6722  00EDB7  6D                 	db	109	;'m'
  6723  00EDB8  61                 	db	97	;'a'
  6724  00EDB9  6E                 	db	110	;'n'
  6725  00EDBA  64                 	db	100	;'d'
  6726  00EDBB  73                 	db	115	;'s'
  6727  00EDBC  0A                 	db	10
  6728  00EDBD  0D                 	db	13
  6729  00EDBE  00                 	db	0
  6730  00EDBF                     STR_158:
  6731  00EDBF  20                 	db	32
  6732  00EDC0  20                 	db	32
  6733  00EDC1  20                 	db	32
  6734  00EDC2  20                 	db	32
  6735  00EDC3  5F                 	db	95	;'_'
  6736  00EDC4  20                 	db	32
  6737  00EDC5  20                 	db	32
  6738  00EDC6  20                 	db	32
  6739  00EDC7  5F                 	db	95	;'_'
  6740  00EDC8  5F                 	db	95	;'_'
  6741  00EDC9  5F                 	db	95	;'_'
  6742  00EDCA  20                 	db	32
  6743  00EDCB  20                 	db	32
  6744  00EDCC  20                 	db	32
  6745  00EDCD  5F                 	db	95	;'_'
  6746  00EDCE  5F                 	db	95	;'_'
  6747  00EDCF  5F                 	db	95	;'_'
  6748  00EDD0  20                 	db	32
  6749  00EDD1  20                 	db	32
  6750  00EDD2  20                 	db	32
  6751  00EDD3  20                 	db	32
  6752  00EDD4  20                 	db	32
  6753  00EDD5  20                 	db	32
  6754  00EDD6  20                 	db	32
  6755  00EDD7  20                 	db	32
  6756  00EDD8  20                 	db	32
  6757  00EDD9  20                 	db	32
  6758  00EDDA  20                 	db	32
  6759  00EDDB  20                 	db	32
  6760  00EDDC  20                 	db	32
  6761  00EDDD  20                 	db	32
  6762  00EDDE  20                 	db	32
  6763  00EDDF  20                 	db	32
  6764  00EDE0  20                 	db	32
  6765  00EDE1  20                 	db	32
  6766  00EDE2  20                 	db	32
  6767  00EDE3  20                 	db	32
  6768  00EDE4  20                 	db	32
  6769  00EDE5  20                 	db	32
  6770  00EDE6  5F                 	db	95	;'_'
  6771  00EDE7  5F                 	db	95	;'_'
  6772  00EDE8  20                 	db	32
  6773  00EDE9  20                 	db	32
  6774  00EDEA  5F                 	db	95	;'_'
  6775  00EDEB  5F                 	db	95	;'_'
  6776  00EDEC  20                 	db	32
  6777  00EDED  20                 	db	32
  6778  00EDEE  20                 	db	32
  6779  00EDEF  20                 	db	32
  6780  00EDF0  20                 	db	32
  6781  00EDF1  5F                 	db	95	;'_'
  6782  00EDF2  20                 	db	32
  6783  00EDF3  20                 	db	32
  6784  00EDF4  20                 	db	32
  6785  00EDF5  20                 	db	32
  6786  00EDF6  20                 	db	32
  6787  00EDF7  20                 	db	32
  6788  00EDF8  20                 	db	32
  6789  00EDF9  20                 	db	32
  6790  00EDFA  20                 	db	32
  6791  00EDFB  20                 	db	32
  6792  00EDFC  20                 	db	32
  6793  00EDFD  20                 	db	32
  6794  00EDFE  20                 	db	32
  6795  00EDFF  20                 	db	32
  6796  00EE00  20                 	db	32
  6797  00EE01  20                 	db	32
  6798  00EE02  20                 	db	32
  6799  00EE03  20                 	db	32
  6800  00EE04  20                 	db	32
  6801  00EE05  20                 	db	32
  6802  00EE06  20                 	db	32
  6803  00EE07  20                 	db	32
  6804  00EE08  20                 	db	32
  6805  00EE09  20                 	db	32
  6806  00EE0A  20                 	db	32
  6807  00EE0B  20                 	db	32
  6808  00EE0C  5F                 	db	95	;'_'
  6809  00EE0D  20                 	db	32
  6810  00EE0E  20                 	db	32
  6811  00EE0F  20                 	db	32
  6812  00EE10  5F                 	db	95	;'_'
  6813  00EE11  5F                 	db	95	;'_'
  6814  00EE12  5F                 	db	95	;'_'
  6815  00EE13  20                 	db	32
  6816  00EE14  20                 	db	32
  6817  00EE15  5F                 	db	95	;'_'
  6818  00EE16  20                 	db	32
  6819  00EE17  20                 	db	32
  6820  00EE18  20                 	db	32
  6821  00EE19  20                 	db	32
  6822  00EE1A  20                 	db	32
  6823  00EE1B  20                 	db	32
  6824  00EE1C  0A                 	db	10
  6825  00EE1D  0D                 	db	13
  6826  00EE1E  20                 	db	32
  6827  00EE1F  20                 	db	32
  6828  00EE20  20                 	db	32
  6829  00EE21  2F                 	db	47
  6830  00EE22  5F                 	db	95	;'_'
  6831  00EE23  5C                 	db	92	;'\'
  6832  00EE24  20                 	db	32
  6833  00EE25  2F                 	db	47
  6834  00EE26  20                 	db	32
  6835  00EE27  5F                 	db	95	;'_'
  6836  00EE28  5F                 	db	95	;'_'
  6837  00EE29  7C                 	db	124
  6838  00EE2A  20                 	db	32
  6839  00EE2B  7C                 	db	124
  6840  00EE2C  20                 	db	32
  6841  00EE2D  5F                 	db	95	;'_'
  6842  00EE2E  20                 	db	32
  6843  00EE2F  5C                 	db	92	;'\'
  6844  00EE30  5F                 	db	95	;'_'
  6845  00EE31  5F                 	db	95	;'_'
  6846  00EE32  5F                 	db	95	;'_'
  6847  00EE33  5F                 	db	95	;'_'
  6848  00EE34  5F                 	db	95	;'_'
  6849  00EE35  20                 	db	32
  6850  00EE36  5F                 	db	95	;'_'
  6851  00EE37  5F                 	db	95	;'_'
  6852  00EE38  20                 	db	32
  6853  00EE39  5F                 	db	95	;'_'
  6854  00EE3A  5F                 	db	95	;'_'
  6855  00EE3B  5F                 	db	95	;'_'
  6856  00EE3C  5F                 	db	95	;'_'
  6857  00EE3D  5F                 	db	95	;'_'
  6858  00EE3E  20                 	db	32
  6859  00EE3F  5F                 	db	95	;'_'
  6860  00EE40  20                 	db	32
  6861  00EE41  5F                 	db	95	;'_'
  6862  00EE42  20                 	db	32
  6863  00EE43  20                 	db	32
  6864  00EE44  7C                 	db	124
  6865  00EE45  20                 	db	32
  6866  00EE46  20                 	db	32
  6867  00EE47  5C                 	db	92	;'\'
  6868  00EE48  2F                 	db	47
  6869  00EE49  20                 	db	32
  6870  00EE4A  20                 	db	32
  6871  00EE4B  7C                 	db	124
  6872  00EE4C  5F                 	db	95	;'_'
  6873  00EE4D  5F                 	db	95	;'_'
  6874  00EE4E  5F                 	db	95	;'_'
  6875  00EE4F  7C                 	db	124
  6876  00EE50  20                 	db	32
  6877  00EE51  7C                 	db	124
  6878  00EE52  5F                 	db	95	;'_'
  6879  00EE53  20                 	db	32
  6880  00EE54  5F                 	db	95	;'_'
  6881  00EE55  5F                 	db	95	;'_'
  6882  00EE56  5F                 	db	95	;'_'
  6883  00EE57  20                 	db	32
  6884  00EE58  5F                 	db	95	;'_'
  6885  00EE59  20                 	db	32
  6886  00EE5A  5F                 	db	95	;'_'
  6887  00EE5B  20                 	db	32
  6888  00EE5C  20                 	db	32
  6889  00EE5D  20                 	db	32
  6890  00EE5E  5F                 	db	95	;'_'
  6891  00EE5F  5F                 	db	95	;'_'
  6892  00EE60  20                 	db	32
  6893  00EE61  5F                 	db	95	;'_'
  6894  00EE62  20                 	db	32
  6895  00EE63  5F                 	db	95	;'_'
  6896  00EE64  20                 	db	32
  6897  00EE65  5F                 	db	95	;'_'
  6898  00EE66  20                 	db	32
  6899  00EE67  20                 	db	32
  6900  00EE68  5F                 	db	95	;'_'
  6901  00EE69  5F                 	db	95	;'_'
  6902  00EE6A  7C                 	db	124
  6903  00EE6B  20                 	db	32
  6904  00EE6C  7C                 	db	124
  6905  00EE6D  20                 	db	32
  6906  00EE6E  7C                 	db	124
  6907  00EE6F  20                 	db	32
  6908  00EE70  20                 	db	32
  6909  00EE71  20                 	db	32
  6910  00EE72  5C                 	db	92	;'\'
  6911  00EE73  28                 	db	40
  6912  00EE74  5F                 	db	95	;'_'
  6913  00EE75  29                 	db	41
  6914  00EE76  5F                 	db	95	;'_'
  6915  00EE77  20                 	db	32
  6916  00EE78  5F                 	db	95	;'_'
  6917  00EE79  5F                 	db	95	;'_'
  6918  00EE7A  20                 	db	32
  6919  00EE7B  20                 	db	32
  6920  00EE7C  5F                 	db	95	;'_'
  6921  00EE7D  20                 	db	32
  6922  00EE7E  5F                 	db	95	;'_'
  6923  00EE7F  5F                 	db	95	;'_'
  6924  00EE80  20                 	db	32
  6925  00EE81  20                 	db	32
  6926  00EE82  5F                 	db	95	;'_'
  6927  00EE83  5F                 	db	95	;'_'
  6928  00EE84  5F                 	db	95	;'_'
  6929  00EE85  20                 	db	32
  6930  00EE86  5F                 	db	95	;'_'
  6931  00EE87  20                 	db	32
  6932  00EE88  5F                 	db	95	;'_'
  6933  00EE89  20                 	db	32
  6934  00EE8A  0A                 	db	10
  6935  00EE8B  0D                 	db	13
  6936  00EE8C  20                 	db	32
  6937  00EE8D  20                 	db	32
  6938  00EE8E  2F                 	db	47
  6939  00EE8F  20                 	db	32
  6940  00EE90  5F                 	db	95	;'_'
  6941  00EE91  20                 	db	32
  6942  00EE92  5C                 	db	92	;'\'
  6943  00EE93  20                 	db	32
  6944  00EE94  28                 	db	40
  6945  00EE95  5F                 	db	95	;'_'
  6946  00EE96  5F                 	db	95	;'_'
  6947  00EE97  20                 	db	32
  6948  00EE98  20                 	db	32
  6949  00EE99  7C                 	db	124
  6950  00EE9A  20                 	db	32
  6951  00EE9B  20                 	db	32
  6952  00EE9C  5F                 	db	95	;'_'
  6953  00EE9D  2F                 	db	47
  6954  00EE9E  20                 	db	32
  6955  00EE9F  5F                 	db	95	;'_'
  6956  00EEA0  20                 	db	32
  6957  00EEA1  5C                 	db	92	;'\'
  6958  00EEA2  20                 	db	32
  6959  00EEA3  56                 	db	86	;'V'
  6960  00EEA4  20                 	db	32
  6961  00EEA5  20                 	db	32
  6962  00EEA6  56                 	db	86	;'V'
  6963  00EEA7  20                 	db	32
  6964  00EEA8  2F                 	db	47
  6965  00EEA9  20                 	db	32
  6966  00EEAA  2D                 	db	45
  6967  00EEAB  5F                 	db	95	;'_'
  6968  00EEAC  29                 	db	41
  6969  00EEAD  20                 	db	32
  6970  00EEAE  27                 	db	39
  6971  00EEAF  5F                 	db	95	;'_'
  6972  00EEB0  7C                 	db	124
  6973  00EEB1  20                 	db	32
  6974  00EEB2  7C                 	db	124
  6975  00EEB3  20                 	db	32
  6976  00EEB4  7C                 	db	124
  6977  00EEB5  5C                 	db	92	;'\'
  6978  00EEB6  2F                 	db	47
  6979  00EEB7  7C                 	db	124
  6980  00EEB8  20                 	db	32
  6981  00EEB9  2F                 	db	47
  6982  00EEBA  20                 	db	32
  6983  00EEBB  2D                 	db	45
  6984  00EEBC  5F                 	db	95	;'_'
  6985  00EEBD  29                 	db	41
  6986  00EEBE  20                 	db	32
  6987  00EEBF  20                 	db	32
  6988  00EEC0  5F                 	db	95	;'_'
  6989  00EEC1  2F                 	db	47
  6990  00EEC2  20                 	db	32
  6991  00EEC3  2D                 	db	45
  6992  00EEC4  5F                 	db	95	;'_'
  6993  00EEC5  29                 	db	41
  6994  00EEC6  20                 	db	32
  6995  00EEC7  27                 	db	39
  6996  00EEC8  5F                 	db	95	;'_'
  6997  00EEC9  7C                 	db	124
  6998  00EECA  20                 	db	32
  6999  00EECB  2F                 	db	47
  7000  00EECC  20                 	db	32
  7001  00EECD  5F                 	db	95	;'_'
  7002  00EECE  60                 	db	96	;'`'
  7003  00EECF  20                 	db	32
  7004  00EED0  7C                 	db	124
  7005  00EED1  20                 	db	32
  7006  00EED2  27                 	db	39
  7007  00EED3  20                 	db	32
  7008  00EED4  5C                 	db	92	;'\'
  7009  00EED5  2F                 	db	47
  7010  00EED6  20                 	db	32
  7011  00EED7  5F                 	db	95	;'_'
  7012  00EED8  60                 	db	96	;'`'
  7013  00EED9  20                 	db	32
  7014  00EEDA  7C                 	db	124
  7015  00EEDB  20                 	db	32
  7016  00EEDC  7C                 	db	124
  7017  00EEDD  20                 	db	32
  7018  00EEDE  7C                 	db	124
  7019  00EEDF  29                 	db	41
  7020  00EEE0  20                 	db	32
  7021  00EEE1  7C                 	db	124
  7022  00EEE2  20                 	db	32
  7023  00EEE3  7C                 	db	124
  7024  00EEE4  20                 	db	32
  7025  00EEE5  27                 	db	39
  7026  00EEE6  20                 	db	32
  7027  00EEE7  20                 	db	32
  7028  00EEE8  5C                 	db	92	;'\'
  7029  00EEE9  7C                 	db	124
  7030  00EEEA  20                 	db	32
  7031  00EEEB  27                 	db	39
  7032  00EEEC  20                 	db	32
  7033  00EEED  20                 	db	32
  7034  00EEEE  5C                 	db	92	;'\'
  7035  00EEEF  2F                 	db	47
  7036  00EEF0  20                 	db	32
  7037  00EEF1  2D                 	db	45
  7038  00EEF2  5F                 	db	95	;'_'
  7039  00EEF3  29                 	db	41
  7040  00EEF4  20                 	db	32
  7041  00EEF5  27                 	db	39
  7042  00EEF6  5F                 	db	95	;'_'
  7043  00EEF7  7C                 	db	124
  7044  00EEF8  0A                 	db	10
  7045  00EEF9  0D                 	db	13
  7046  00EEFA  20                 	db	32
  7047  00EEFB  2F                 	db	47
  7048  00EEFC  5F                 	db	95	;'_'
  7049  00EEFD  2F                 	db	47
  7050  00EEFE  20                 	db	32
  7051  00EEFF  5C                 	db	92	;'\'
  7052  00EF00  5F                 	db	95	;'_'
  7053  00EF01  5C                 	db	92	;'\'
  7054  00EF02  5F                 	db	95	;'_'
  7055  00EF03  5F                 	db	95	;'_'
  7056  00EF04  5F                 	db	95	;'_'
  7057  00EF05  7C                 	db	124
  7058  00EF06  20                 	db	32
  7059  00EF07  7C                 	db	124
  7060  00EF08  5F                 	db	95	;'_'
  7061  00EF09  7C                 	db	124
  7062  00EF0A  20                 	db	32
  7063  00EF0B  5C                 	db	92	;'\'
  7064  00EF0C  5F                 	db	95	;'_'
  7065  00EF0D  5F                 	db	95	;'_'
  7066  00EF0E  5F                 	db	95	;'_'
  7067  00EF0F  2F                 	db	47
  7068  00EF10  5C                 	db	92	;'\'
  7069  00EF11  5F                 	db	95	;'_'
  7070  00EF12  2F                 	db	47
  7071  00EF13  5C                 	db	92	;'\'
  7072  00EF14  5F                 	db	95	;'_'
  7073  00EF15  2F                 	db	47
  7074  00EF16  5C                 	db	92	;'\'
  7075  00EF17  5F                 	db	95	;'_'
  7076  00EF18  5F                 	db	95	;'_'
  7077  00EF19  5F                 	db	95	;'_'
  7078  00EF1A  7C                 	db	124
  7079  00EF1B  5F                 	db	95	;'_'
  7080  00EF1C  7C                 	db	124
  7081  00EF1D  20                 	db	32
  7082  00EF1E  20                 	db	32
  7083  00EF1F  20                 	db	32
  7084  00EF20  7C                 	db	124
  7085  00EF21  5F                 	db	95	;'_'
  7086  00EF22  7C                 	db	124
  7087  00EF23  20                 	db	32
  7088  00EF24  20                 	db	32
  7089  00EF25  7C                 	db	124
  7090  00EF26  5F                 	db	95	;'_'
  7091  00EF27  5C                 	db	92	;'\'
  7092  00EF28  5F                 	db	95	;'_'
  7093  00EF29  5F                 	db	95	;'_'
  7094  00EF2A  5F                 	db	95	;'_'
  7095  00EF2B  7C                 	db	124
  7096  00EF2C  5C                 	db	92	;'\'
  7097  00EF2D  5F                 	db	95	;'_'
  7098  00EF2E  5F                 	db	95	;'_'
  7099  00EF2F  5C                 	db	92	;'\'
  7100  00EF30  5F                 	db	95	;'_'
  7101  00EF31  5F                 	db	95	;'_'
  7102  00EF32  5F                 	db	95	;'_'
  7103  00EF33  7C                 	db	124
  7104  00EF34  5F                 	db	95	;'_'
  7105  00EF35  7C                 	db	124
  7106  00EF36  20                 	db	32
  7107  00EF37  20                 	db	32
  7108  00EF38  20                 	db	32
  7109  00EF39  5C                 	db	92	;'\'
  7110  00EF3A  5F                 	db	95	;'_'
  7111  00EF3B  5F                 	db	95	;'_'
  7112  00EF3C  2C                 	db	44
  7113  00EF3D  5F                 	db	95	;'_'
  7114  00EF3E  7C                 	db	124
  7115  00EF3F  5F                 	db	95	;'_'
  7116  00EF40  7C                 	db	124
  7117  00EF41  7C                 	db	124
  7118  00EF42  5F                 	db	95	;'_'
  7119  00EF43  5C                 	db	92	;'\'
  7120  00EF44  5F                 	db	95	;'_'
  7121  00EF45  5F                 	db	95	;'_'
  7122  00EF46  2C                 	db	44
  7123  00EF47  5F                 	db	95	;'_'
  7124  00EF48  7C                 	db	124
  7125  00EF49  20                 	db	32
  7126  00EF4A  7C                 	db	124
  7127  00EF4B  5F                 	db	95	;'_'
  7128  00EF4C  5F                 	db	95	;'_'
  7129  00EF4D  5F                 	db	95	;'_'
  7130  00EF4E  2F                 	db	47
  7131  00EF4F  7C                 	db	124
  7132  00EF50  5F                 	db	95	;'_'
  7133  00EF51  7C                 	db	124
  7134  00EF52  5F                 	db	95	;'_'
  7135  00EF53  7C                 	db	124
  7136  00EF54  5F                 	db	95	;'_'
  7137  00EF55  7C                 	db	124
  7138  00EF56  5F                 	db	95	;'_'
  7139  00EF57  7C                 	db	124
  7140  00EF58  5F                 	db	95	;'_'
  7141  00EF59  7C                 	db	124
  7142  00EF5A  5F                 	db	95	;'_'
  7143  00EF5B  7C                 	db	124
  7144  00EF5C  5F                 	db	95	;'_'
  7145  00EF5D  5C                 	db	92	;'\'
  7146  00EF5E  5F                 	db	95	;'_'
  7147  00EF5F  5F                 	db	95	;'_'
  7148  00EF60  5F                 	db	95	;'_'
  7149  00EF61  7C                 	db	124
  7150  00EF62  5F                 	db	95	;'_'
  7151  00EF63  7C                 	db	124
  7152  00EF64  20                 	db	32
  7153  00EF65  20                 	db	32
  7154  00EF66  0A                 	db	10
  7155  00EF67  0D                 	db	13
  7156  00EF68  00                 	db	0
  7157  00EF69  20                 	db	32
  7158  00EF6A  20                 	db	32
  7159  00EF6B  20                 	db	32
  7160  00EF6C  20                 	db	32
  7161  00EF6D  42                 	db	66	;'B'
  7162  00EF6E  6F                 	db	111	;'o'
  7163  00EF6F  6F                 	db	111	;'o'
  7164  00EF70  74                 	db	116	;'t'
  7165  00EF71  20                 	db	32
  7166  00EF72  63                 	db	99	;'c'
  7167  00EF73  6F                 	db	111	;'o'
  7168  00EF74  6D                 	db	109	;'m'
  7169  00EF75  70                 	db	112	;'p'
  7170  00EF76  6C                 	db	108	;'l'
  7171  00EF77  65                 	db	101	;'e'
  7172  00EF78  74                 	db	116	;'t'
  7173  00EF79  65                 	db	101	;'e'
  7174  00EF7A  0A                 	db	10
  7175  00EF7B  0D                 	db	13
  7176  00EF7C  20                 	db	32
  7177  00EF7D  20                 	db	32
  7178  00EF7E  20                 	db	32
  7179  00EF7F  20                 	db	32
  7180  00EF80  50                 	db	80	;'P'
  7181  00EF81  49                 	db	73	;'I'
  7182  00EF82  43                 	db	67	;'C'
  7183  00EF83  31                 	db	49	;'1'
  7184  00EF84  38                 	db	56	;'8'
  7185  00EF85  46                 	db	70	;'F'
  7186  00EF86  36                 	db	54	;'6'
  7187  00EF87  37                 	db	55	;'7'
  7188  00EF88  4B                 	db	75	;'K'
  7189  00EF89  34                 	db	52	;'4'
  7190  00EF8A  30                 	db	48	;'0'
  7191  00EF8B  20                 	db	32
  7192  00EF8C  6D                 	db	109	;'m'
  7193  00EF8D  54                 	db	84	;'T'
  7194  00EF8E  6F                 	db	111	;'o'
  7195  00EF8F  75                 	db	117	;'u'
  7196  00EF90  63                 	db	99	;'c'
  7197  00EF91  68                 	db	104	;'h'
  7198  00EF92  20                 	db	32
  7199  00EF93  54                 	db	84	;'T'
  7200  00EF94  65                 	db	101	;'e'
  7201  00EF95  73                 	db	115	;'s'
  7202  00EF96  74                 	db	116	;'t'
  7203  00EF97  20                 	db	32
  7204  00EF98  42                 	db	66	;'B'
  7205  00EF99  6F                 	db	111	;'o'
  7206  00EF9A  61                 	db	97	;'a'
  7207  00EF9B  72                 	db	114	;'r'
  7208  00EF9C  64                 	db	100	;'d'
  7209  00EF9D  0A                 	db	10
  7210  00EF9E  0D                 	db	13
  7211  00EF9F  20                 	db	32
  7212  00EFA0  20                 	db	32
  7213  00EFA1  20                 	db	32
  7214  00EFA2  20                 	db	32
  7215  00EFA3  45                 	db	69	;'E'
  7216  00EFA4  76                 	db	118	;'v'
  7217  00EFA5  61                 	db	97	;'a'
  7218  00EFA6  6C                 	db	108	;'l'
  7219  00EFA7  75                 	db	117	;'u'
  7220  00EFA8  61                 	db	97	;'a'
  7221  00EFA9  74                 	db	116	;'t'
  7222  00EFAA  65                 	db	101	;'e'
  7223  00EFAB  73                 	db	115	;'s'
  7224  00EFAC  20                 	db	32
  7225  00EFAD  74                 	db	116	;'t'
  7226  00EFAE  68                 	db	104	;'h'
  7227  00EFAF  65                 	db	101	;'e'
  7228  00EFB0  20                 	db	32
  7229  00EFB1  6D                 	db	109	;'m'
  7230  00EFB2  54                 	db	84	;'T'
  7231  00EFB3  6F                 	db	111	;'o'
  7232  00EFB4  75                 	db	117	;'u'
  7233  00EFB5  63                 	db	99	;'c'
  7234  00EFB6  68                 	db	104	;'h'
  7235  00EFB7  20                 	db	32
  7236  00EFB8  63                 	db	99	;'c'
  7237  00EFB9  61                 	db	97	;'a'
  7238  00EFBA  70                 	db	112	;'p'
  7239  00EFBB  61                 	db	97	;'a'
  7240  00EFBC  63                 	db	99	;'c'
  7241  00EFBD  69                 	db	105	;'i'
  7242  00EFBE  74                 	db	116	;'t'
  7243  00EFBF  69                 	db	105	;'i'
  7244  00EFC0  76                 	db	118	;'v'
  7245  00EFC1  65                 	db	101	;'e'
  7246  00EFC2  20                 	db	32
  7247  00EFC3  74                 	db	116	;'t'
  7248  00EFC4  6F                 	db	111	;'o'
  7249  00EFC5  75                 	db	117	;'u'
  7250  00EFC6  63                 	db	99	;'c'
  7251  00EFC7  68                 	db	104	;'h'
  7252  00EFC8  20                 	db	32
  7253  00EFC9  6C                 	db	108	;'l'
  7254  00EFCA  69                 	db	105	;'i'
  7255  00EFCB  62                 	db	98	;'b'
  7256  00EFCC  72                 	db	114	;'r'
  7257  00EFCD  61                 	db	97	;'a'
  7258  00EFCE  72                 	db	114	;'r'
  7259  00EFCF  79                 	db	121	;'y'
  7260  00EFD0  20                 	db	32
  7261  00EFD1  64                 	db	100	;'d'
  7262  00EFD2  69                 	db	105	;'i'
  7263  00EFD3  73                 	db	115	;'s'
  7264  00EFD4  74                 	db	116	;'t'
  7265  00EFD5  72                 	db	114	;'r'
  7266  00EFD6  69                 	db	105	;'i'
  7267  00EFD7  62                 	db	98	;'b'
  7268  00EFD8  75                 	db	117	;'u'
  7269  00EFD9  74                 	db	116	;'t'
  7270  00EFDA  65                 	db	101	;'e'
  7271  00EFDB  64                 	db	100	;'d'
  7272  00EFDC  20                 	db	32
  7273  00EFDD  62                 	db	98	;'b'
  7274  00EFDE  79                 	db	121	;'y'
  7275  00EFDF  20                 	db	32
  7276  00EFE0  4D                 	db	77	;'M'
  7277  00EFE1  69                 	db	105	;'i'
  7278  00EFE2  63                 	db	99	;'c'
  7279  00EFE3  72                 	db	114	;'r'
  7280  00EFE4  6F                 	db	111	;'o'
  7281  00EFE5  63                 	db	99	;'c'
  7282  00EFE6  68                 	db	104	;'h'
  7283  00EFE7  69                 	db	105	;'i'
  7284  00EFE8  70                 	db	112	;'p'
  7285  00EFE9  0A                 	db	10
  7286  00EFEA  0D                 	db	13
  7287  00EFEB  20                 	db	32
  7288  00EFEC  20                 	db	32
  7289  00EFED  20                 	db	32
  7290  00EFEE  20                 	db	32
  7291  00EFEF  53                 	db	83	;'S'
  7292  00EFF0  65                 	db	101	;'e'
  7293  00EFF1  74                 	db	116	;'t'
  7294  00EFF2  73                 	db	115	;'s'
  7295  00EFF3  20                 	db	32
  7296  00EFF4  74                 	db	116	;'t'
  7297  00EFF5  68                 	db	104	;'h'
  7298  00EFF6  65                 	db	101	;'e'
  7299  00EFF7  20                 	db	32
  7300  00EFF8  73                 	db	115	;'s'
  7301  00EFF9  74                 	db	116	;'t'
  7302  00EFFA  61                 	db	97	;'a'
  7303  00EFFB  74                 	db	116	;'t'
  7304  00EFFC  65                 	db	101	;'e'
  7305  00EFFD  20                 	db	32
  7306  00EFFE  6F                 	db	111	;'o'
  7307  00EFFF  66                 	db	102	;'f'
  7308  00F000  20                 	db	32
  7309  00F001  66                 	db	102	;'f'
  7310  00F002  69                 	db	105	;'i'
  7311  00F003  76                 	db	118	;'v'
  7312  00F004  65                 	db	101	;'e'
  7313  00F005  20                 	db	32
  7314  00F006  4C                 	db	76	;'L'
  7315  00F007  45                 	db	69	;'E'
  7316  00F008  44                 	db	68	;'D'
  7317  00F009  73                 	db	115	;'s'
  7318  00F00A  20                 	db	32
  7319  00F00B  62                 	db	98	;'b'
  7320  00F00C  61                 	db	97	;'a'
  7321  00F00D  73                 	db	115	;'s'
  7322  00F00E  65                 	db	101	;'e'
  7323  00F00F  64                 	db	100	;'d'
  7324  00F010  20                 	db	32
  7325  00F011  6F                 	db	111	;'o'
  7326  00F012  6E                 	db	110	;'n'
  7327  00F013  20                 	db	32
  7328  00F014  6D                 	db	109	;'m'
  7329  00F015  54                 	db	84	;'T'
  7330  00F016  6F                 	db	111	;'o'
  7331  00F017  75                 	db	117	;'u'
  7332  00F018  63                 	db	99	;'c'
  7333  00F019  68                 	db	104	;'h'
  7334  00F01A  20                 	db	32
  7335  00F01B  63                 	db	99	;'c'
  7336  00F01C  61                 	db	97	;'a'
  7337  00F01D  70                 	db	112	;'p'
  7338  00F01E  61                 	db	97	;'a'
  7339  00F01F  63                 	db	99	;'c'
  7340  00F020  69                 	db	105	;'i'
  7341  00F021  74                 	db	116	;'t'
  7342  00F022  69                 	db	105	;'i'
  7343  00F023  76                 	db	118	;'v'
  7344  00F024  65                 	db	101	;'e'
  7345  00F025  20                 	db	32
  7346  00F026  70                 	db	112	;'p'
  7347  00F027  75                 	db	117	;'u'
  7348  00F028  73                 	db	115	;'s'
  7349  00F029  68                 	db	104	;'h'
  7350  00F02A  62                 	db	98	;'b'
  7351  00F02B  75                 	db	117	;'u'
  7352  00F02C  74                 	db	116	;'t'
  7353  00F02D  74                 	db	116	;'t'
  7354  00F02E  6F                 	db	111	;'o'
  7355  00F02F  6E                 	db	110	;'n'
  7356  00F030  73                 	db	115	;'s'
  7357  00F031  0A                 	db	10
  7358  00F032  0D                 	db	13
  7359  00F033  20                 	db	32
  7360  00F034  20                 	db	32
  7361  00F035  20                 	db	32
  7362  00F036  20                 	db	32
  7363  00F037  42                 	db	66	;'B'
  7364  00F038  61                 	db	97	;'a'
  7365  00F039  75                 	db	117	;'u'
  7366  00F03A  64                 	db	100	;'d'
  7367  00F03B  20                 	db	32
  7368  00F03C  72                 	db	114	;'r'
  7369  00F03D  61                 	db	97	;'a'
  7370  00F03E  74                 	db	116	;'t'
  7371  00F03F  65                 	db	101	;'e'
  7372  00F040  3A                 	db	58	;':'
  7373  00F041  20                 	db	32
  7374  00F042  31                 	db	49	;'1'
  7375  00F043  31                 	db	49	;'1'
  7376  00F044  35                 	db	53	;'5'
  7377  00F045  32                 	db	50	;'2'
  7378  00F046  30                 	db	48	;'0'
  7379  00F047  30                 	db	48	;'0'
  7380  00F048  20                 	db	32
  7381  00F049  62                 	db	98	;'b'
  7382  00F04A  70                 	db	112	;'p'
  7383  00F04B  73                 	db	115	;'s'
  7384  00F04C  0A                 	db	10
  7385  00F04D  0D                 	db	13
  7386  00F04E  20                 	db	32
  7387  00F04F  20                 	db	32
  7388  00F050  20                 	db	32
  7389  00F051  20                 	db	32
  7390  00F052  4E                 	db	78	;'N'
  7391  00F053  6F                 	db	111	;'o'
  7392  00F054  20                 	db	32
  7393  00F055  70                 	db	112	;'p'
  7394  00F056  61                 	db	97	;'a'
  7395  00F057  72                 	db	114	;'r'
  7396  00F058  69                 	db	105	;'i'
  7397  00F059  74                 	db	116	;'t'
  7398  00F05A  79                 	db	121	;'y'
  7399  00F05B  2C                 	db	44
  7400  00F05C  20                 	db	32
  7401  00F05D  38                 	db	56	;'8'
  7402  00F05E  20                 	db	32
  7403  00F05F  62                 	db	98	;'b'
  7404  00F060  69                 	db	105	;'i'
  7405  00F061  74                 	db	116	;'t'
  7406  00F062  73                 	db	115	;'s'
  7407  00F063  2C                 	db	44
  7408  00F064  20                 	db	32
  7409  00F065  6E                 	db	110	;'n'
  7410  00F066  6F                 	db	111	;'o'
  7411  00F067  20                 	db	32
  7412  00F068  66                 	db	102	;'f'
  7413  00F069  6C                 	db	108	;'l'
  7414  00F06A  6F                 	db	111	;'o'
  7415  00F06B  77                 	db	119	;'w'
  7416  00F06C  20                 	db	32
  7417  00F06D  63                 	db	99	;'c'
  7418  00F06E  6F                 	db	111	;'o'
  7419  00F06F  6E                 	db	110	;'n'
  7420  00F070  74                 	db	116	;'t'
  7421  00F071  72                 	db	114	;'r'
  7422  00F072  6F                 	db	111	;'o'
  7423  00F073  6C                 	db	108	;'l'
  7424  00F074  2C                 	db	44
  7425  00F075  20                 	db	32
  7426  00F076  31                 	db	49	;'1'
  7427  00F077  20                 	db	32
  7428  00F078  73                 	db	115	;'s'
  7429  00F079  74                 	db	116	;'t'
  7430  00F07A  6F                 	db	111	;'o'
  7431  00F07B  70                 	db	112	;'p'
  7432  00F07C  20                 	db	32
  7433  00F07D  62                 	db	98	;'b'
  7434  00F07E  69                 	db	105	;'i'
  7435  00F07F  74                 	db	116	;'t'
  7436  00F080  0A                 	db	10
  7437  00F081  0D                 	db	13
  7438  00F082  20                 	db	32
  7439  00F083  20                 	db	32
  7440  00F084  20                 	db	32
  7441  00F085  20                 	db	32
  7442  00F086  43                 	db	67	;'C'
  7443  00F087  6F                 	db	111	;'o'
  7444  00F088  6D                 	db	109	;'m'
  7445  00F089  6D                 	db	109	;'m'
  7446  00F08A  61                 	db	97	;'a'
  7447  00F08B  6E                 	db	110	;'n'
  7448  00F08C  64                 	db	100	;'d'
  7449  00F08D  73                 	db	115	;'s'
  7450  00F08E  20                 	db	32
  7451  00F08F  61                 	db	97	;'a'
  7452  00F090  72                 	db	114	;'r'
  7453  00F091  65                 	db	101	;'e'
  7454  00F092  20                 	db	32
  7455  00F093  63                 	db	99	;'c'
  7456  00F094  61                 	db	97	;'a'
  7457  00F095  73                 	db	115	;'s'
  7458  00F096  65                 	db	101	;'e'
  7459  00F097  20                 	db	32
  7460  00F098  73                 	db	115	;'s'
  7461  00F099  65                 	db	101	;'e'
  7462  00F09A  6E                 	db	110	;'n'
  7463  00F09B  73                 	db	115	;'s'
  7464  00F09C  69                 	db	105	;'i'
  7465  00F09D  74                 	db	116	;'t'
  7466  00F09E  69                 	db	105	;'i'
  7467  00F09F  76                 	db	118	;'v'
  7468  00F0A0  65                 	db	101	;'e'
  7469  00F0A1  0A                 	db	10
  7470  00F0A2  0D                 	db	13
  7471  00F0A3  20                 	db	32
  7472  00F0A4  20                 	db	32
  7473  00F0A5  20                 	db	32
  7474  00F0A6  20                 	db	32
  7475  00F0A7  45                 	db	69	;'E'
  7476  00F0A8  6E                 	db	110	;'n'
  7477  00F0A9  74                 	db	116	;'t'
  7478  00F0AA  65                 	db	101	;'e'
  7479  00F0AB  72                 	db	114	;'r'
  7480  00F0AC  20                 	db	32
  7481  00F0AD  61                 	db	97	;'a'
  7482  00F0AE  20                 	db	32
  7483  00F0AF  63                 	db	99	;'c'
  7484  00F0B0  6F                 	db	111	;'o'
  7485  00F0B1  6D                 	db	109	;'m'
  7486  00F0B2  6D                 	db	109	;'m'
  7487  00F0B3  61                 	db	97	;'a'
  7488  00F0B4  6E                 	db	110	;'n'
  7489  00F0B5  64                 	db	100	;'d'
  7490  00F0B6  2C                 	db	44
  7491  00F0B7  20                 	db	32
  7492  00F0B8  6F                 	db	111	;'o'
  7493  00F0B9  72                 	db	114	;'r'
  7494  00F0BA  20                 	db	32
  7495  00F0BB  65                 	db	101	;'e'
  7496  00F0BC  6E                 	db	110	;'n'
  7497  00F0BD  74                 	db	116	;'t'
  7498  00F0BE  65                 	db	101	;'e'
  7499  00F0BF  72                 	db	114	;'r'
  7500  00F0C0  20                 	db	32
  7501  00F0C1  48                 	db	72	;'H'
  7502  00F0C2  65                 	db	101	;'e'
  7503  00F0C3  6C                 	db	108	;'l'
  7504  00F0C4  70                 	db	112	;'p'
  7505  00F0C5  20                 	db	32
  7506  00F0C6  66                 	db	102	;'f'
  7507  00F0C7  6F                 	db	111	;'o'
  7508  00F0C8  72                 	db	114	;'r'
  7509  00F0C9  20                 	db	32
  7510  00F0CA  6C                 	db	108	;'l'
  7511  00F0CB  69                 	db	105	;'i'
  7512  00F0CC  73                 	db	115	;'s'
  7513  00F0CD  74                 	db	116	;'t'
  7514  00F0CE  20                 	db	32
  7515  00F0CF  6F                 	db	111	;'o'
  7516  00F0D0  66                 	db	102	;'f'
  7517  00F0D1  20                 	db	32
  7518  00F0D2  63                 	db	99	;'c'
  7519  00F0D3  6F                 	db	111	;'o'
  7520  00F0D4  6D                 	db	109	;'m'
  7521  00F0D5  6D                 	db	109	;'m'
  7522  00F0D6  61                 	db	97	;'a'
  7523  00F0D7  6E                 	db	110	;'n'
  7524  00F0D8  64                 	db	100	;'d'
  7525  00F0D9  73                 	db	115	;'s'
  7526  00F0DA  0A                 	db	10
  7527  00F0DB  0D                 	db	13
  7528  00F0DC  00                 	db	0
  7529  00F0DD                     STR_96:
  7530  00F0DD  57                 	db	87	;'W'
  7531  00F0DE  41                 	db	65	;'A'
  7532  00F0DF  52                 	db	82	;'R'
  7533  00F0E0  4E                 	db	78	;'N'
  7534  00F0E1  49                 	db	73	;'I'
  7535  00F0E2  4E                 	db	78	;'N'
  7536  00F0E3  47                 	db	71	;'G'
  7537  00F0E4  3A                 	db	58	;':'
  7538  00F0E5  20                 	db	32
  7539  00F0E6  55                 	db	85	;'U'
  7540  00F0E7  73                 	db	115	;'s'
  7541  00F0E8  69                 	db	105	;'i'
  7542  00F0E9  6E                 	db	110	;'n'
  7543  00F0EA  67                 	db	103	;'g'
  7544  00F0EB  20                 	db	32
  7545  00F0EC  74                 	db	116	;'t'
  7546  00F0ED  68                 	db	104	;'h'
  7547  00F0EE  65                 	db	101	;'e'
  7548  00F0EF  20                 	db	32
  7549  00F0F0  64                 	db	100	;'d'
  7550  00F0F1  69                 	db	105	;'i'
  7551  00F0F2  6D                 	db	109	;'m'
  7552  00F0F3  6D                 	db	109	;'m'
  7553  00F0F4  69                 	db	105	;'i'
  7554  00F0F5  6E                 	db	110	;'n'
  7555  00F0F6  67                 	db	103	;'g'
  7556  00F0F7  20                 	db	32
  7557  00F0F8  66                 	db	102	;'f'
  7558  00F0F9  65                 	db	101	;'e'
  7559  00F0FA  61                 	db	97	;'a'
  7560  00F0FB  74                 	db	116	;'t'
  7561  00F0FC  75                 	db	117	;'u'
  7562  00F0FD  72                 	db	114	;'r'
  7563  00F0FE  65                 	db	101	;'e'
  7564  00F0FF  20                 	db	32
  7565  00F100  77                 	db	119	;'w'
  7566  00F101  69                 	db	105	;'i'
  7567  00F102  74                 	db	116	;'t'
  7568  00F103  68                 	db	104	;'h'
  7569  00F104  20                 	db	32
  7570  00F105  6C                 	db	108	;'l'
  7571  00F106  6F                 	db	111	;'o'
  7572  00F107  61                 	db	97	;'a'
  7573  00F108  64                 	db	100	;'d'
  7574  00F109  20                 	db	32
  7575  00F10A  64                 	db	100	;'d'
  7576  00F10B  65                 	db	101	;'e'
  7577  00F10C  76                 	db	118	;'v'
  7578  00F10D  69                 	db	105	;'i'
  7579  00F10E  63                 	db	99	;'c'
  7580  00F10F  65                 	db	101	;'e'
  7581  00F110  73                 	db	115	;'s'
  7582  00F111  20                 	db	32
  7583  00F112  6F                 	db	111	;'o'
  7584  00F113  74                 	db	116	;'t'
  7585  00F114  68                 	db	104	;'h'
  7586  00F115  65                 	db	101	;'e'
  7587  00F116  72                 	db	114	;'r'
  7588  00F117  20                 	db	32
  7589  00F118  74                 	db	116	;'t'
  7590  00F119  68                 	db	104	;'h'
  7591  00F11A  61                 	db	97	;'a'
  7592  00F11B  6E                 	db	110	;'n'
  7593  00F11C  20                 	db	32
  7594  00F11D  61                 	db	97	;'a'
  7595  00F11E  20                 	db	32
  7596  00F11F  6C                 	db	108	;'l'
  7597  00F120  69                 	db	105	;'i'
  7598  00F121  67                 	db	103	;'g'
  7599  00F122  68                 	db	104	;'h'
  7600  00F123  74                 	db	116	;'t'
  7601  00F124  20                 	db	32
  7602  00F125  62                 	db	98	;'b'
  7603  00F126  75                 	db	117	;'u'
  7604  00F127  6C                 	db	108	;'l'
  7605  00F128  62                 	db	98	;'b'
  7606  00F129  20                 	db	32
  7607  00F12A  63                 	db	99	;'c'
  7608  00F12B  61                 	db	97	;'a'
  7609  00F12C  6E                 	db	110	;'n'
  7610  00F12D  20                 	db	32
  7611  00F12E  72                 	db	114	;'r'
  7612  00F12F  65                 	db	101	;'e'
  7613  00F130  73                 	db	115	;'s'
  7614  00F131  75                 	db	117	;'u'
  7615  00F132  6C                 	db	108	;'l'
  7616  00F133  74                 	db	116	;'t'
  7617  00F134  20                 	db	32
  7618  00F135  69                 	db	105	;'i'
  7619  00F136  6E                 	db	110	;'n'
  7620  00F137  20                 	db	32
  7621  00F138  64                 	db	100	;'d'
  7622  00F139  65                 	db	101	;'e'
  7623  00F13A  76                 	db	118	;'v'
  7624  00F13B  69                 	db	105	;'i'
  7625  00F13C  63                 	db	99	;'c'
  7626  00F13D  65                 	db	101	;'e'
  7627  00F13E  20                 	db	32
  7628  00F13F  64                 	db	100	;'d'
  7629  00F140  61                 	db	97	;'a'
  7630  00F141  6D                 	db	109	;'m'
  7631  00F142  61                 	db	97	;'a'
  7632  00F143  67                 	db	103	;'g'
  7633  00F144  65                 	db	101	;'e'
  7634  00F145  00                 	db	0
  7635  00F146                     STR_97:
  7636  00F146  4F                 	db	79	;'O'
  7637  00F147  6E                 	db	110	;'n'
  7638  00F148  6C                 	db	108	;'l'
  7639  00F149  79                 	db	121	;'y'
  7640  00F14A  20                 	db	32
  7641  00F14B  65                 	db	101	;'e'
  7642  00F14C  6E                 	db	110	;'n'
  7643  00F14D  61                 	db	97	;'a'
  7644  00F14E  62                 	db	98	;'b'
  7645  00F14F  6C                 	db	108	;'l'
  7646  00F150  65                 	db	101	;'e'
  7647  00F151  20                 	db	32
  7648  00F152  64                 	db	100	;'d'
  7649  00F153  69                 	db	105	;'i'
  7650  00F154  6D                 	db	109	;'m'
  7651  00F155  6D                 	db	109	;'m'
  7652  00F156  69                 	db	105	;'i'
  7653  00F157  6E                 	db	110	;'n'
  7654  00F158  67                 	db	103	;'g'
  7655  00F159  20                 	db	32
  7656  00F15A  69                 	db	105	;'i'
  7657  00F15B  66                 	db	102	;'f'
  7658  00F15C  20                 	db	32
  7659  00F15D  79                 	db	121	;'y'
  7660  00F15E  6F                 	db	111	;'o'
  7661  00F15F  75                 	db	117	;'u'
  7662  00F160  20                 	db	32
  7663  00F161  61                 	db	97	;'a'
  7664  00F162  72                 	db	114	;'r'
  7665  00F163  65                 	db	101	;'e'
  7666  00F164  20                 	db	32
  7667  00F165  63                 	db	99	;'c'
  7668  00F166  6F                 	db	111	;'o'
  7669  00F167  6D                 	db	109	;'m'
  7670  00F168  70                 	db	112	;'p'
  7671  00F169  6C                 	db	108	;'l'
  7672  00F16A  65                 	db	101	;'e'
  7673  00F16B  74                 	db	116	;'t'
  7674  00F16C  65                 	db	101	;'e'
  7675  00F16D  6C                 	db	108	;'l'
  7676  00F16E  79                 	db	121	;'y'
  7677  00F16F  20                 	db	32
  7678  00F170  73                 	db	115	;'s'
  7679  00F171  75                 	db	117	;'u'
  7680  00F172  72                 	db	114	;'r'
  7681  00F173  65                 	db	101	;'e'
  7682  00F174  20                 	db	32
  7683  00F175  74                 	db	116	;'t'
  7684  00F176  68                 	db	104	;'h'
  7685  00F177  65                 	db	101	;'e'
  7686  00F178  20                 	db	32
  7687  00F179  6C                 	db	108	;'l'
  7688  00F17A  6F                 	db	111	;'o'
  7689  00F17B  61                 	db	97	;'a'
  7690  00F17C  64                 	db	100	;'d'
  7691  00F17D  20                 	db	32
  7692  00F17E  69                 	db	105	;'i'
  7693  00F17F  73                 	db	115	;'s'
  7694  00F180  20                 	db	32
  7695  00F181  63                 	db	99	;'c'
  7696  00F182  6F                 	db	111	;'o'
  7697  00F183  6D                 	db	109	;'m'
  7698  00F184  70                 	db	112	;'p'
  7699  00F185  61                 	db	97	;'a'
  7700  00F186  74                 	db	116	;'t'
  7701  00F187  69                 	db	105	;'i'
  7702  00F188  62                 	db	98	;'b'
  7703  00F189  6C                 	db	108	;'l'
  7704  00F18A  65                 	db	101	;'e'
  7705  00F18B  20                 	db	32
  7706  00F18C  77                 	db	119	;'w'
  7707  00F18D  69                 	db	105	;'i'
  7708  00F18E  74                 	db	116	;'t'
  7709  00F18F  68                 	db	104	;'h'
  7710  00F190  20                 	db	32
  7711  00F191  61                 	db	97	;'a'
  7712  00F192  20                 	db	32
  7713  00F193  73                 	db	115	;'s'
  7714  00F194  6F                 	db	111	;'o'
  7715  00F195  6C                 	db	108	;'l'
  7716  00F196  69                 	db	105	;'i'
  7717  00F197  64                 	db	100	;'d'
  7718  00F198  20                 	db	32
  7719  00F199  73                 	db	115	;'s'
  7720  00F19A  74                 	db	116	;'t'
  7721  00F19B  61                 	db	97	;'a'
  7722  00F19C  74                 	db	116	;'t'
  7723  00F19D  65                 	db	101	;'e'
  7724  00F19E  20                 	db	32
  7725  00F19F  64                 	db	100	;'d'
  7726  00F1A0  69                 	db	105	;'i'
  7727  00F1A1  6D                 	db	109	;'m'
  7728  00F1A2  6D                 	db	109	;'m'
  7729  00F1A3  69                 	db	105	;'i'
  7730  00F1A4  6E                 	db	110	;'n'
  7731  00F1A5  67                 	db	103	;'g'
  7732  00F1A6  20                 	db	32
  7733  00F1A7  63                 	db	99	;'c'
  7734  00F1A8  69                 	db	105	;'i'
  7735  00F1A9  72                 	db	114	;'r'
  7736  00F1AA  63                 	db	99	;'c'
  7737  00F1AB  75                 	db	117	;'u'
  7738  00F1AC  69                 	db	105	;'i'
  7739  00F1AD  74                 	db	116	;'t'
  7740  00F1AE  00                 	db	0
  7741  00F1AF                     STR_117:
  7742  00F1AF  49                 	db	73	;'I'
  7743  00F1B0  66                 	db	102	;'f'
  7744  00F1B1  20                 	db	32
  7745  00F1B2  79                 	db	121	;'y'
  7746  00F1B3  6F                 	db	111	;'o'
  7747  00F1B4  75                 	db	117	;'u'
  7748  00F1B5  27                 	db	39
  7749  00F1B6  64                 	db	100	;'d'
  7750  00F1B7  20                 	db	32
  7751  00F1B8  6C                 	db	108	;'l'
  7752  00F1B9  69                 	db	105	;'i'
  7753  00F1BA  6B                 	db	107	;'k'
  7754  00F1BB  65                 	db	101	;'e'
  7755  00F1BC  20                 	db	32
  7756  00F1BD  74                 	db	116	;'t'
  7757  00F1BE  6F                 	db	111	;'o'
  7758  00F1BF  20                 	db	32
  7759  00F1C0  63                 	db	99	;'c'
  7760  00F1C1  6F                 	db	111	;'o'
  7761  00F1C2  6D                 	db	109	;'m'
  7762  00F1C3  70                 	db	112	;'p'
  7763  00F1C4  6C                 	db	108	;'l'
  7764  00F1C5  65                 	db	101	;'e'
  7765  00F1C6  74                 	db	116	;'t'
  7766  00F1C7  65                 	db	101	;'e'
  7767  00F1C8  6C                 	db	108	;'l'
  7768  00F1C9  79                 	db	121	;'y'
  7769  00F1CA  20                 	db	32
  7770  00F1CB  65                 	db	101	;'e'
  7771  00F1CC  6E                 	db	110	;'n'
  7772  00F1CD  61                 	db	97	;'a'
  7773  00F1CE  62                 	db	98	;'b'
  7774  00F1CF  6C                 	db	108	;'l'
  7775  00F1D0  65                 	db	101	;'e'
  7776  00F1D1  20                 	db	32
  7777  00F1D2  6F                 	db	111	;'o'
  7778  00F1D3  72                 	db	114	;'r'
  7779  00F1D4  20                 	db	32
  7780  00F1D5  64                 	db	100	;'d'
  7781  00F1D6  69                 	db	105	;'i'
  7782  00F1D7  73                 	db	115	;'s'
  7783  00F1D8  61                 	db	97	;'a'
  7784  00F1D9  62                 	db	98	;'b'
  7785  00F1DA  6C                 	db	108	;'l'
  7786  00F1DB  65                 	db	101	;'e'
  7787  00F1DC  20                 	db	32
  7788  00F1DD  74                 	db	116	;'t'
  7789  00F1DE  68                 	db	104	;'h'
  7790  00F1DF  65                 	db	101	;'e'
  7791  00F1E0  20                 	db	32
  7792  00F1E1  6C                 	db	108	;'l'
  7793  00F1E2  6F                 	db	111	;'o'
  7794  00F1E3  61                 	db	97	;'a'
  7795  00F1E4  64                 	db	100	;'d'
  7796  00F1E5  2C                 	db	44
  7797  00F1E6  20                 	db	32
  7798  00F1E7  64                 	db	100	;'d'
  7799  00F1E8  69                 	db	105	;'i'
  7800  00F1E9  73                 	db	115	;'s'
  7801  00F1EA  61                 	db	97	;'a'
  7802  00F1EB  62                 	db	98	;'b'
  7803  00F1EC  6C                 	db	108	;'l'
  7804  00F1ED  65                 	db	101	;'e'
  7805  00F1EE  20                 	db	32
  7806  00F1EF  64                 	db	100	;'d'
  7807  00F1F0  69                 	db	105	;'i'
  7808  00F1F1  6D                 	db	109	;'m'
  7809  00F1F2  6D                 	db	109	;'m'
  7810  00F1F3  69                 	db	105	;'i'
  7811  00F1F4  6E                 	db	110	;'n'
  7812  00F1F5  67                 	db	103	;'g'
  7813  00F1F6  20                 	db	32
  7814  00F1F7  61                 	db	97	;'a'
  7815  00F1F8  6E                 	db	110	;'n'
  7816  00F1F9  64                 	db	100	;'d'
  7817  00F1FA  20                 	db	32
  7818  00F1FB  75                 	db	117	;'u'
  7819  00F1FC  73                 	db	115	;'s'
  7820  00F1FD  65                 	db	101	;'e'
  7821  00F1FE  20                 	db	32
  7822  00F1FF  72                 	db	114	;'r'
  7823  00F200  65                 	db	101	;'e'
  7824  00F201  73                 	db	115	;'s'
  7825  00F202  70                 	db	112	;'p'
  7826  00F203  65                 	db	101	;'e'
  7827  00F204  63                 	db	99	;'c'
  7828  00F205  74                 	db	116	;'t'
  7829  00F206  69                 	db	105	;'i'
  7830  00F207  76                 	db	118	;'v'
  7831  00F208  65                 	db	101	;'e'
  7832  00F209  20                 	db	32
  7833  00F20A  63                 	db	99	;'c'
  7834  00F20B  6F                 	db	111	;'o'
  7835  00F20C  6D                 	db	109	;'m'
  7836  00F20D  6D                 	db	109	;'m'
  7837  00F20E  61                 	db	97	;'a'
  7838  00F20F  6E                 	db	110	;'n'
  7839  00F210  64                 	db	100	;'d'
  7840  00F211  73                 	db	115	;'s'
  7841  00F212  0A                 	db	10
  7842  00F213  0D                 	db	13
  7843  00F214  00                 	db	0
  7844  00F215                     STR_116:
  7845  00F215  45                 	db	69	;'E'
  7846  00F216  52                 	db	82	;'R'
  7847  00F217  52                 	db	82	;'R'
  7848  00F218  4F                 	db	79	;'O'
  7849  00F219  52                 	db	82	;'R'
  7850  00F21A  3A                 	db	58	;':'
  7851  00F21B  20                 	db	32
  7852  00F21C  50                 	db	80	;'P'
  7853  00F21D  6C                 	db	108	;'l'
  7854  00F21E  65                 	db	101	;'e'
  7855  00F21F  61                 	db	97	;'a'
  7856  00F220  73                 	db	115	;'s'
  7857  00F221  65                 	db	101	;'e'
  7858  00F222  20                 	db	32
  7859  00F223  73                 	db	115	;'s'
  7860  00F224  65                 	db	101	;'e'
  7861  00F225  74                 	db	116	;'t'
  7862  00F226  20                 	db	32
  7863  00F227  64                 	db	100	;'d'
  7864  00F228  69                 	db	105	;'i'
  7865  00F229  6D                 	db	109	;'m'
  7866  00F22A  6D                 	db	109	;'m'
  7867  00F22B  69                 	db	105	;'i'
  7868  00F22C  6E                 	db	110	;'n'
  7869  00F22D  67                 	db	103	;'g'
  7870  00F22E  20                 	db	32
  7871  00F22F  70                 	db	112	;'p'
  7872  00F230  65                 	db	101	;'e'
  7873  00F231  72                 	db	114	;'r'
  7874  00F232  63                 	db	99	;'c'
  7875  00F233  65                 	db	101	;'e'
  7876  00F234  6E                 	db	110	;'n'
  7877  00F235  74                 	db	116	;'t'
  7878  00F236  61                 	db	97	;'a'
  7879  00F237  67                 	db	103	;'g'
  7880  00F238  65                 	db	101	;'e'
  7881  00F239  20                 	db	32
  7882  00F23A  74                 	db	116	;'t'
  7883  00F23B  6F                 	db	111	;'o'
  7884  00F23C  20                 	db	32
  7885  00F23D  61                 	db	97	;'a'
  7886  00F23E  6E                 	db	110	;'n'
  7887  00F23F  20                 	db	32
  7888  00F240  69                 	db	105	;'i'
  7889  00F241  6E                 	db	110	;'n'
  7890  00F242  74                 	db	116	;'t'
  7891  00F243  65                 	db	101	;'e'
  7892  00F244  67                 	db	103	;'g'
  7893  00F245  65                 	db	101	;'e'
  7894  00F246  72                 	db	114	;'r'
  7895  00F247  20                 	db	32
  7896  00F248  67                 	db	103	;'g'
  7897  00F249  72                 	db	114	;'r'
  7898  00F24A  65                 	db	101	;'e'
  7899  00F24B  61                 	db	97	;'a'
  7900  00F24C  74                 	db	116	;'t'
  7901  00F24D  65                 	db	101	;'e'
  7902  00F24E  72                 	db	114	;'r'
  7903  00F24F  20                 	db	32
  7904  00F250  74                 	db	116	;'t'
  7905  00F251  68                 	db	104	;'h'
  7906  00F252  61                 	db	97	;'a'
  7907  00F253  6E                 	db	110	;'n'
  7908  00F254  20                 	db	32
  7909  00F255  30                 	db	48	;'0'
  7910  00F256  20                 	db	32
  7911  00F257  61                 	db	97	;'a'
  7912  00F258  6E                 	db	110	;'n'
  7913  00F259  64                 	db	100	;'d'
  7914  00F25A  20                 	db	32
  7915  00F25B  6C                 	db	108	;'l'
  7916  00F25C  65                 	db	101	;'e'
  7917  00F25D  73                 	db	115	;'s'
  7918  00F25E  73                 	db	115	;'s'
  7919  00F25F  20                 	db	32
  7920  00F260  74                 	db	116	;'t'
  7921  00F261  68                 	db	104	;'h'
  7922  00F262  61                 	db	97	;'a'
  7923  00F263  6E                 	db	110	;'n'
  7924  00F264  20                 	db	32
  7925  00F265  31                 	db	49	;'1'
  7926  00F266  30                 	db	48	;'0'
  7927  00F267  30                 	db	48	;'0'
  7928  00F268  0A                 	db	10
  7929  00F269  0D                 	db	13
  7930  00F26A  00                 	db	0
  7931  00F26B                     STR_54:
  7932  00F26B  44                 	db	68	;'D'
  7933  00F26C  65                 	db	101	;'e'
  7934  00F26D  76                 	db	118	;'v'
  7935  00F26E  69                 	db	105	;'i'
  7936  00F26F  63                 	db	99	;'c'
  7937  00F270  65                 	db	101	;'e'
  7938  00F271  20                 	db	32
  7939  00F272  49                 	db	73	;'I'
  7940  00F273  44                 	db	68	;'D'
  7941  00F274  20                 	db	32
  7942  00F275  73                 	db	115	;'s'
  7943  00F276  74                 	db	116	;'t'
  7944  00F277  6F                 	db	111	;'o'
  7945  00F278  72                 	db	114	;'r'
  7946  00F279  65                 	db	101	;'e'
  7947  00F27A  64                 	db	100	;'d'
  7948  00F27B  20                 	db	32
  7949  00F27C  69                 	db	105	;'i'
  7950  00F27D  6E                 	db	110	;'n'
  7951  00F27E  20                 	db	32
  7952  00F27F  46                 	db	70	;'F'
  7953  00F280  6C                 	db	108	;'l'
  7954  00F281  61                 	db	97	;'a'
  7955  00F282  73                 	db	115	;'s'
  7956  00F283  68                 	db	104	;'h'
  7957  00F284  20                 	db	32
  7958  00F285  69                 	db	105	;'i'
  7959  00F286  73                 	db	115	;'s'
  7960  00F287  3A                 	db	58	;':'
  7961  00F288  20                 	db	32
  7962  00F289  30                 	db	48	;'0'
  7963  00F28A  78                 	db	120	;'x'
  7964  00F28B  25                 	db	37
  7965  00F28C  58                 	db	88	;'X'
  7966  00F28D  2E                 	db	46
  7967  00F28E  20                 	db	32
  7968  00F28F  54                 	db	84	;'T'
  7969  00F290  68                 	db	104	;'h'
  7970  00F291  69                 	db	105	;'i'
  7971  00F292  73                 	db	115	;'s'
  7972  00F293  20                 	db	32
  7973  00F294  63                 	db	99	;'c'
  7974  00F295  6F                 	db	111	;'o'
  7975  00F296  72                 	db	114	;'r'
  7976  00F297  72                 	db	114	;'r'
  7977  00F298  65                 	db	101	;'e'
  7978  00F299  73                 	db	115	;'s'
  7979  00F29A  70                 	db	112	;'p'
  7980  00F29B  6F                 	db	111	;'o'
  7981  00F29C  6E                 	db	110	;'n'
  7982  00F29D  64                 	db	100	;'d'
  7983  00F29E  73                 	db	115	;'s'
  7984  00F29F  20                 	db	32
  7985  00F2A0  74                 	db	116	;'t'
  7986  00F2A1  6F                 	db	111	;'o'
  7987  00F2A2  20                 	db	32
  7988  00F2A3  61                 	db	97	;'a'
  7989  00F2A4  20                 	db	32
  7990  00F2A5  64                 	db	100	;'d'
  7991  00F2A6  65                 	db	101	;'e'
  7992  00F2A7  76                 	db	118	;'v'
  7993  00F2A8  69                 	db	105	;'i'
  7994  00F2A9  63                 	db	99	;'c'
  7995  00F2AA  65                 	db	101	;'e'
  7996  00F2AB  20                 	db	32
  7997  00F2AC  70                 	db	112	;'p'
  7998  00F2AD  61                 	db	97	;'a'
  7999  00F2AE  72                 	db	114	;'r'
  8000  00F2AF  74                 	db	116	;'t'
  8001  00F2B0  20                 	db	32
  8002  00F2B1  6E                 	db	110	;'n'
  8003  00F2B2  75                 	db	117	;'u'
  8004  00F2B3  6D                 	db	109	;'m'
  8005  00F2B4  62                 	db	98	;'b'
  8006  00F2B5  65                 	db	101	;'e'
  8007  00F2B6  72                 	db	114	;'r'
  8008  00F2B7  20                 	db	32
  8009  00F2B8  6F                 	db	111	;'o'
  8010  00F2B9  66                 	db	102	;'f'
  8011  00F2BA  20                 	db	32
  8012  00F2BB  25                 	db	37
  8013  00F2BC  73                 	db	115	;'s'
  8014  00F2BD  0A                 	db	10
  8015  00F2BE  0D                 	db	13
  8016  00F2BF  00                 	db	0
  8017  00F2C0                     STR_92:
  8018  00F2C0  4D                 	db	77	;'M'
  8019  00F2C1  65                 	db	101	;'e'
  8020  00F2C2  61                 	db	97	;'a'
  8021  00F2C3  73                 	db	115	;'s'
  8022  00F2C4  75                 	db	117	;'u'
  8023  00F2C5  72                 	db	114	;'r'
  8024  00F2C6  65                 	db	101	;'e'
  8025  00F2C7  64                 	db	100	;'d'
  8026  00F2C8  20                 	db	32
  8027  00F2C9  6F                 	db	111	;'o'
  8028  00F2CA  75                 	db	117	;'u'
  8029  00F2CB  74                 	db	116	;'t'
  8030  00F2CC  70                 	db	112	;'p'
  8031  00F2CD  75                 	db	117	;'u'
  8032  00F2CE  74                 	db	116	;'t'
  8033  00F2CF  20                 	db	32
  8034  00F2D0  65                 	db	101	;'e'
  8035  00F2D1  6E                 	db	110	;'n'
  8036  00F2D2  65                 	db	101	;'e'
  8037  00F2D3  72                 	db	114	;'r'
  8038  00F2D4  67                 	db	103	;'g'
  8039  00F2D5  79                 	db	121	;'y'
  8040  00F2D6  20                 	db	32
  8041  00F2D7  73                 	db	115	;'s'
  8042  00F2D8  69                 	db	105	;'i'
  8043  00F2D9  6E                 	db	110	;'n'
  8044  00F2DA  63                 	db	99	;'c'
  8045  00F2DB  65                 	db	101	;'e'
  8046  00F2DC  20                 	db	32
  8047  00F2DD  6C                 	db	108	;'l'
  8048  00F2DE  61                 	db	97	;'a'
  8049  00F2DF  73                 	db	115	;'s'
  8050  00F2E0  74                 	db	116	;'t'
  8051  00F2E1  20                 	db	32
  8052  00F2E2  6D                 	db	109	;'m'
  8053  00F2E3  65                 	db	101	;'e'
  8054  00F2E4  61                 	db	97	;'a'
  8055  00F2E5  73                 	db	115	;'s'
  8056  00F2E6  75                 	db	117	;'u'
  8057  00F2E7  72                 	db	114	;'r'
  8058  00F2E8  65                 	db	101	;'e'
  8059  00F2E9  6D                 	db	109	;'m'
  8060  00F2EA  65                 	db	101	;'e'
  8061  00F2EB  6E                 	db	110	;'n'
  8062  00F2EC  74                 	db	116	;'t'
  8063  00F2ED  20                 	db	32
  8064  00F2EE  72                 	db	114	;'r'
  8065  00F2EF  65                 	db	101	;'e'
  8066  00F2F0  73                 	db	115	;'s'
  8067  00F2F1  65                 	db	101	;'e'
  8068  00F2F2  74                 	db	116	;'t'
  8069  00F2F3  20                 	db	32
  8070  00F2F4  69                 	db	105	;'i'
  8071  00F2F5  73                 	db	115	;'s'
  8072  00F2F6  20                 	db	32
  8073  00F2F7  25                 	db	37
  8074  00F2F8  2E                 	db	46
  8075  00F2F9  33                 	db	51	;'3'
  8076  00F2FA  66                 	db	102	;'f'
  8077  00F2FB  20                 	db	32
  8078  00F2FC  57                 	db	87	;'W'
  8079  00F2FD  61                 	db	97	;'a'
  8080  00F2FE  74                 	db	116	;'t'
  8081  00F2FF  74                 	db	116	;'t'
  8082  00F300  20                 	db	32
  8083  00F301  48                 	db	72	;'H'
  8084  00F302  6F                 	db	111	;'o'
  8085  00F303  75                 	db	117	;'u'
  8086  00F304  72                 	db	114	;'r'
  8087  00F305  73                 	db	115	;'s'
  8088  00F306  0A                 	db	10
  8089  00F307  0D                 	db	13
  8090  00F308  00                 	db	0
  8091  00F309                     STR_121:
  8092  00F309  54                 	db	84	;'T'
  8093  00F30A  68                 	db	104	;'h'
  8094  00F30B  69                 	db	105	;'i'
  8095  00F30C  73                 	db	115	;'s'
  8096  00F30D  20                 	db	32
  8097  00F30E  63                 	db	99	;'c'
  8098  00F30F  6F                 	db	111	;'o'
  8099  00F310  72                 	db	114	;'r'
  8100  00F311  72                 	db	114	;'r'
  8101  00F312  65                 	db	101	;'e'
  8102  00F313  73                 	db	115	;'s'
  8103  00F314  70                 	db	112	;'p'
  8104  00F315  6F                 	db	111	;'o'
  8105  00F316  6E                 	db	110	;'n'
  8106  00F317  64                 	db	100	;'d'
  8107  00F318  73                 	db	115	;'s'
  8108  00F319  20                 	db	32
  8109  00F31A  74                 	db	116	;'t'
  8110  00F31B  6F                 	db	111	;'o'
  8111  00F31C  20                 	db	32
  8112  00F31D  61                 	db	97	;'a'
  8113  00F31E  20                 	db	32
  8114  00F31F  31                 	db	49	;'1'
  8115  00F320  36                 	db	54	;'6'
  8116  00F321  20                 	db	32
  8117  00F322  62                 	db	98	;'b'
  8118  00F323  69                 	db	105	;'i'
  8119  00F324  74                 	db	116	;'t'
  8120  00F325  20                 	db	32
  8121  00F326  74                 	db	116	;'t'
  8122  00F327  69                 	db	105	;'i'
  8123  00F328  6D                 	db	109	;'m'
  8124  00F329  65                 	db	101	;'e'
  8125  00F32A  72                 	db	114	;'r'
  8126  00F32B  20                 	db	32
  8127  00F32C  70                 	db	112	;'p'
  8128  00F32D  72                 	db	114	;'r'
  8129  00F32E  65                 	db	101	;'e'
  8130  00F32F  2D                 	db	45
  8131  00F330  6C                 	db	108	;'l'
  8132  00F331  6F                 	db	111	;'o'
  8133  00F332  61                 	db	97	;'a'
  8134  00F333  64                 	db	100	;'d'
  8135  00F334  20                 	db	32
  8136  00F335  76                 	db	118	;'v'
  8137  00F336  61                 	db	97	;'a'
  8138  00F337  6C                 	db	108	;'l'
  8139  00F338  75                 	db	117	;'u'
  8140  00F339  65                 	db	101	;'e'
  8141  00F33A  20                 	db	32
  8142  00F33B  6F                 	db	111	;'o'
  8143  00F33C  66                 	db	102	;'f'
  8144  00F33D  20                 	db	32
  8145  00F33E  30                 	db	48	;'0'
  8146  00F33F  78                 	db	120	;'x'
  8147  00F340  25                 	db	37
  8148  00F341  58                 	db	88	;'X'
  8149  00F342  20                 	db	32
  8150  00F343  28                 	db	40
  8151  00F344  25                 	db	37
  8152  00F345  75                 	db	117	;'u'
  8153  00F346  20                 	db	32
  8154  00F347  4C                 	db	76	;'L'
  8155  00F348  53                 	db	83	;'S'
  8156  00F349  42                 	db	66	;'B'
  8157  00F34A  73                 	db	115	;'s'
  8158  00F34B  29                 	db	41
  8159  00F34C  20                 	db	32
  8160  00F34D  0A                 	db	10
  8161  00F34E  0D                 	db	13
  8162  00F34F  00                 	db	0
  8163  00F350                     STR_58:
  8164  00F350  54                 	db	84	;'T'
  8165  00F351  68                 	db	104	;'h'
  8166  00F352  65                 	db	101	;'e'
  8167  00F353  20                 	db	32
  8168  00F354  66                 	db	102	;'f'
  8169  00F355  6F                 	db	111	;'o'
  8170  00F356  6C                 	db	108	;'l'
  8171  00F357  6C                 	db	108	;'l'
  8172  00F358  6F                 	db	111	;'o'
  8173  00F359  77                 	db	119	;'w'
  8174  00F35A  69                 	db	105	;'i'
  8175  00F35B  6E                 	db	110	;'n'
  8176  00F35C  67                 	db	103	;'g'
  8177  00F35D  20                 	db	32
  8178  00F35E  55                 	db	85	;'U'
  8179  00F35F  73                 	db	115	;'s'
  8180  00F360  65                 	db	101	;'e'
  8181  00F361  72                 	db	114	;'r'
  8182  00F362  20                 	db	32
  8183  00F363  49                 	db	73	;'I'
  8184  00F364  44                 	db	68	;'D'
  8185  00F365  73                 	db	115	;'s'
  8186  00F366  20                 	db	32
  8187  00F367  68                 	db	104	;'h'
  8188  00F368  61                 	db	97	;'a'
  8189  00F369  76                 	db	118	;'v'
  8190  00F36A  65                 	db	101	;'e'
  8191  00F36B  20                 	db	32
  8192  00F36C  62                 	db	98	;'b'
  8193  00F36D  65                 	db	101	;'e'
  8194  00F36E  65                 	db	101	;'e'
  8195  00F36F  6E                 	db	110	;'n'
  8196  00F370  20                 	db	32
  8197  00F371  72                 	db	114	;'r'
  8198  00F372  65                 	db	101	;'e'
  8199  00F373  74                 	db	116	;'t'
  8200  00F374  72                 	db	114	;'r'
  8201  00F375  69                 	db	105	;'i'
  8202  00F376  65                 	db	101	;'e'
  8203  00F377  76                 	db	118	;'v'
  8204  00F378  65                 	db	101	;'e'
  8205  00F379  64                 	db	100	;'d'
  8206  00F37A  20                 	db	32
  8207  00F37B  66                 	db	102	;'f'
  8208  00F37C  72                 	db	114	;'r'
  8209  00F37D  6F                 	db	111	;'o'
  8210  00F37E  6D                 	db	109	;'m'
  8211  00F37F  20                 	db	32
  8212  00F380  66                 	db	102	;'f'
  8213  00F381  6C                 	db	108	;'l'
  8214  00F382  61                 	db	97	;'a'
  8215  00F383  73                 	db	115	;'s'
  8216  00F384  68                 	db	104	;'h'
  8217  00F385  20                 	db	32
  8218  00F386  6D                 	db	109	;'m'
  8219  00F387  65                 	db	101	;'e'
  8220  00F388  6D                 	db	109	;'m'
  8221  00F389  6F                 	db	111	;'o'
  8222  00F38A  72                 	db	114	;'r'
  8223  00F38B  79                 	db	121	;'y'
  8224  00F38C  3A                 	db	58	;':'
  8225  00F38D  0A                 	db	10
  8226  00F38E  0D                 	db	13
  8227  00F38F  00                 	db	0
  8228  00F390                     STR_120:
  8229  00F390  43                 	db	67	;'C'
  8230  00F391  61                 	db	97	;'a'
  8231  00F392  6C                 	db	108	;'l'
  8232  00F393  63                 	db	99	;'c'
  8233  00F394  75                 	db	117	;'u'
  8234  00F395  6C                 	db	108	;'l'
  8235  00F396  61                 	db	97	;'a'
  8236  00F397  74                 	db	116	;'t'
  8237  00F398  65                 	db	101	;'e'
  8238  00F399  64                 	db	100	;'d'
  8239  00F39A  20                 	db	32
  8240  00F39B  54                 	db	84	;'T'
  8241  00F39C  52                 	db	82	;'R'
  8242  00F39D  49                 	db	73	;'I'
  8243  00F39E  41                 	db	65	;'A'
  8244  00F39F  43                 	db	67	;'C'
  8245  00F3A0  20                 	db	32
  8246  00F3A1  66                 	db	102	;'f'
  8247  00F3A2  69                 	db	105	;'i'
  8248  00F3A3  72                 	db	114	;'r'
  8249  00F3A4  69                 	db	105	;'i'
  8250  00F3A5  6E                 	db	110	;'n'
  8251  00F3A6  67                 	db	103	;'g'
  8252  00F3A7  20                 	db	32
  8253  00F3A8  61                 	db	97	;'a'
  8254  00F3A9  6E                 	db	110	;'n'
  8255  00F3AA  67                 	db	103	;'g'
  8256  00F3AB  6C                 	db	108	;'l'
  8257  00F3AC  65                 	db	101	;'e'
  8258  00F3AD  20                 	db	32
  8259  00F3AE  69                 	db	105	;'i'
  8260  00F3AF  73                 	db	115	;'s'
  8261  00F3B0  20                 	db	32
  8262  00F3B1  25                 	db	37
  8263  00F3B2  2E                 	db	46
  8264  00F3B3  33                 	db	51	;'3'
  8265  00F3B4  66                 	db	102	;'f'
  8266  00F3B5  20                 	db	32
  8267  00F3B6  72                 	db	114	;'r'
  8268  00F3B7  61                 	db	97	;'a'
  8269  00F3B8  64                 	db	100	;'d'
  8270  00F3B9  69                 	db	105	;'i'
  8271  00F3BA  61                 	db	97	;'a'
  8272  00F3BB  6E                 	db	110	;'n'
  8273  00F3BC  73                 	db	115	;'s'
  8274  00F3BD  20                 	db	32
  8275  00F3BE  28                 	db	40
  8276  00F3BF  25                 	db	37
  8277  00F3C0  2E                 	db	46
  8278  00F3C1  33                 	db	51	;'3'
  8279  00F3C2  66                 	db	102	;'f'
  8280  00F3C3  20                 	db	32
  8281  00F3C4  64                 	db	100	;'d'
  8282  00F3C5  65                 	db	101	;'e'
  8283  00F3C6  67                 	db	103	;'g'
  8284  00F3C7  72                 	db	114	;'r'
  8285  00F3C8  65                 	db	101	;'e'
  8286  00F3C9  65                 	db	101	;'e'
  8287  00F3CA  73                 	db	115	;'s'
  8288  00F3CB  29                 	db	41
  8289  00F3CC  0A                 	db	10
  8290  00F3CD  0D                 	db	13
  8291  00F3CE  00                 	db	0
  8292  00F3CF                     STR_153:
  8293  00F3CF  53                 	db	83	;'S'
  8294  00F3D0  79                 	db	121	;'y'
  8295  00F3D1  73                 	db	115	;'s'
  8296  00F3D2  74                 	db	116	;'t'
  8297  00F3D3  65                 	db	101	;'e'
  8298  00F3D4  6D                 	db	109	;'m'
  8299  00F3D5  20                 	db	32
  8300  00F3D6  70                 	db	112	;'p'
  8301  00F3D7  61                 	db	97	;'a'
  8302  00F3D8  72                 	db	114	;'r'
  8303  00F3D9  61                 	db	97	;'a'
  8304  00F3DA  6D                 	db	109	;'m'
  8305  00F3DB  65                 	db	101	;'e'
  8306  00F3DC  74                 	db	116	;'t'
  8307  00F3DD  65                 	db	101	;'e'
  8308  00F3DE  72                 	db	114	;'r'
  8309  00F3DF  73                 	db	115	;'s'
  8310  00F3E0  20                 	db	32
  8311  00F3E1  61                 	db	97	;'a'
  8312  00F3E2  6E                 	db	110	;'n'
  8313  00F3E3  64                 	db	100	;'d'
  8314  00F3E4  20                 	db	32
  8315  00F3E5  61                 	db	97	;'a'
  8316  00F3E6  66                 	db	102	;'f'
  8317  00F3E7  66                 	db	102	;'f'
  8318  00F3E8  69                 	db	105	;'i'
  8319  00F3E9  72                 	db	114	;'r'
  8320  00F3EA  6D                 	db	109	;'m'
  8321  00F3EB  61                 	db	97	;'a'
  8322  00F3EC  74                 	db	116	;'t'
  8323  00F3ED  69                 	db	105	;'i'
  8324  00F3EE  76                 	db	118	;'v'
  8325  00F3EF  65                 	db	101	;'e'
  8326  00F3F0  20                 	db	32
  8327  00F3F1  72                 	db	114	;'r'
  8328  00F3F2  65                 	db	101	;'e'
  8329  00F3F3  73                 	db	115	;'s'
  8330  00F3F4  70                 	db	112	;'p'
  8331  00F3F5  6F                 	db	111	;'o'
  8332  00F3F6  6E                 	db	110	;'n'
  8333  00F3F7  73                 	db	115	;'s'
  8334  00F3F8  65                 	db	101	;'e'
  8335  00F3F9  73                 	db	115	;'s'
  8336  00F3FA  20                 	db	32
  8337  00F3FB  61                 	db	97	;'a'
  8338  00F3FC  70                 	db	112	;'p'
  8339  00F3FD  70                 	db	112	;'p'
  8340  00F3FE  65                 	db	101	;'e'
  8341  00F3FF  61                 	db	97	;'a'
  8342  00F400  72                 	db	114	;'r'
  8343  00F401  20                 	db	32
  8344  00F402  69                 	db	105	;'i'
  8345  00F403  6E                 	db	110	;'n'
  8346  00F404  20                 	db	32
  8347  00F405  67                 	db	103	;'g'
  8348  00F406  72                 	db	114	;'r'
  8349  00F407  65                 	db	101	;'e'
  8350  00F408  65                 	db	101	;'e'
  8351  00F409  6E                 	db	110	;'n'
  8352  00F40A  0A                 	db	10
  8353  00F40B  0D                 	db	13
  8354  00F40C  00                 	db	0
  8355  00F40D                     STR_56:
  8356  00F40D  44                 	db	68	;'D'
  8357  00F40E  65                 	db	101	;'e'
  8358  00F40F  76                 	db	118	;'v'
  8359  00F410  69                 	db	105	;'i'
  8360  00F411  63                 	db	99	;'c'
  8361  00F412  65                 	db	101	;'e'
  8362  00F413  20                 	db	32
  8363  00F414  73                 	db	115	;'s'
  8364  00F415  69                 	db	105	;'i'
  8365  00F416  6C                 	db	108	;'l'
  8366  00F417  69                 	db	105	;'i'
  8367  00F418  63                 	db	99	;'c'
  8368  00F419  6F                 	db	111	;'o'
  8369  00F41A  6E                 	db	110	;'n'
  8370  00F41B  20                 	db	32
  8371  00F41C  72                 	db	114	;'r'
  8372  00F41D  65                 	db	101	;'e'
  8373  00F41E  76                 	db	118	;'v'
  8374  00F41F  69                 	db	105	;'i'
  8375  00F420  73                 	db	115	;'s'
  8376  00F421  69                 	db	105	;'i'
  8377  00F422  6F                 	db	111	;'o'
  8378  00F423  6E                 	db	110	;'n'
  8379  00F424  20                 	db	32
  8380  00F425  49                 	db	73	;'I'
  8381  00F426  44                 	db	68	;'D'
  8382  00F427  20                 	db	32
  8383  00F428  61                 	db	97	;'a'
  8384  00F429  73                 	db	115	;'s'
  8385  00F42A  20                 	db	32
  8386  00F42B  73                 	db	115	;'s'
  8387  00F42C  74                 	db	116	;'t'
  8388  00F42D  6F                 	db	111	;'o'
  8389  00F42E  72                 	db	114	;'r'
  8390  00F42F  65                 	db	101	;'e'
  8391  00F430  64                 	db	100	;'d'
  8392  00F431  20                 	db	32
  8393  00F432  69                 	db	105	;'i'
  8394  00F433  6E                 	db	110	;'n'
  8395  00F434  20                 	db	32
  8396  00F435  46                 	db	70	;'F'
  8397  00F436  6C                 	db	108	;'l'
  8398  00F437  61                 	db	97	;'a'
  8399  00F438  73                 	db	115	;'s'
  8400  00F439  68                 	db	104	;'h'
  8401  00F43A  20                 	db	32
  8402  00F43B  69                 	db	105	;'i'
  8403  00F43C  73                 	db	115	;'s'
  8404  00F43D  3A                 	db	58	;':'
  8405  00F43E  20                 	db	32
  8406  00F43F  25                 	db	37
  8407  00F440  63                 	db	99	;'c'
  8408  00F441  25                 	db	37
  8409  00F442  30                 	db	48	;'0'
  8410  00F443  33                 	db	51	;'3'
  8411  00F444  64                 	db	100	;'d'
  8412  00F445  0A                 	db	10
  8413  00F446  0D                 	db	13
  8414  00F447  00                 	db	0
  8415  00F448                     STR_94:
  8416  00F448  4D                 	db	77	;'M'
  8417  00F449  65                 	db	101	;'e'
  8418  00F44A  61                 	db	97	;'a'
  8419  00F44B  73                 	db	115	;'s'
  8420  00F44C  75                 	db	117	;'u'
  8421  00F44D  72                 	db	114	;'r'
  8422  00F44E  65                 	db	101	;'e'
  8423  00F44F  64                 	db	100	;'d'
  8424  00F450  20                 	db	32
  8425  00F451  6F                 	db	111	;'o'
  8426  00F452  75                 	db	117	;'u'
  8427  00F453  74                 	db	116	;'t'
  8428  00F454  70                 	db	112	;'p'
  8429  00F455  75                 	db	117	;'u'
  8430  00F456  74                 	db	116	;'t'
  8431  00F457  20                 	db	32
  8432  00F458  65                 	db	101	;'e'
  8433  00F459  6E                 	db	110	;'n'
  8434  00F45A  65                 	db	101	;'e'
  8435  00F45B  72                 	db	114	;'r'
  8436  00F45C  67                 	db	103	;'g'
  8437  00F45D  79                 	db	121	;'y'
  8438  00F45E  20                 	db	32
  8439  00F45F  68                 	db	104	;'h'
  8440  00F460  61                 	db	97	;'a'
  8441  00F461  73                 	db	115	;'s'
  8442  00F462  20                 	db	32
  8443  00F463  62                 	db	98	;'b'
  8444  00F464  65                 	db	101	;'e'
  8445  00F465  65                 	db	101	;'e'
  8446  00F466  6E                 	db	110	;'n'
  8447  00F467  20                 	db	32
  8448  00F468  72                 	db	114	;'r'
  8449  00F469  65                 	db	101	;'e'
  8450  00F46A  73                 	db	115	;'s'
  8451  00F46B  65                 	db	101	;'e'
  8452  00F46C  74                 	db	116	;'t'
  8453  00F46D  20                 	db	32
  8454  00F46E  74                 	db	116	;'t'
  8455  00F46F  6F                 	db	111	;'o'
  8456  00F470  20                 	db	32
  8457  00F471  7A                 	db	122	;'z'
  8458  00F472  65                 	db	101	;'e'
  8459  00F473  72                 	db	114	;'r'
  8460  00F474  6F                 	db	111	;'o'
  8461  00F475  20                 	db	32
  8462  00F476  57                 	db	87	;'W'
  8463  00F477  61                 	db	97	;'a'
  8464  00F478  74                 	db	116	;'t'
  8465  00F479  74                 	db	116	;'t'
  8466  00F47A  20                 	db	32
  8467  00F47B  48                 	db	72	;'H'
  8468  00F47C  6F                 	db	111	;'o'
  8469  00F47D  75                 	db	117	;'u'
  8470  00F47E  72                 	db	114	;'r'
  8471  00F47F  73                 	db	115	;'s'
  8472  00F480  0A                 	db	10
  8473  00F481  0D                 	db	13
  8474  00F482  00                 	db	0
  8475  00F483                     STR_123:
  8476  00F483  44                 	db	68	;'D'
  8477  00F484  65                 	db	101	;'e'
  8478  00F485  76                 	db	118	;'v'
  8479  00F486  69                 	db	105	;'i'
  8480  00F487  63                 	db	99	;'c'
  8481  00F488  65                 	db	101	;'e'
  8482  00F489  20                 	db	32
  8483  00F48A  6F                 	db	111	;'o'
  8484  00F48B  6E                 	db	110	;'n'
  8485  00F48C  20                 	db	32
  8486  00F48D  74                 	db	116	;'t'
  8487  00F48E  69                 	db	105	;'i'
  8488  00F48F  6D                 	db	109	;'m'
  8489  00F490  65                 	db	101	;'e'
  8490  00F491  20                 	db	32
  8491  00F492  73                 	db	115	;'s'
  8492  00F493  69                 	db	105	;'i'
  8493  00F494  6E                 	db	110	;'n'
  8494  00F495  63                 	db	99	;'c'
  8495  00F496  65                 	db	101	;'e'
  8496  00F497  20                 	db	32
  8497  00F498  6C                 	db	108	;'l'
  8498  00F499  61                 	db	97	;'a'
  8499  00F49A  73                 	db	115	;'s'
  8500  00F49B  74                 	db	116	;'t'
  8501  00F49C  20                 	db	32
  8502  00F49D  72                 	db	114	;'r'
  8503  00F49E  65                 	db	101	;'e'
  8504  00F49F  73                 	db	115	;'s'
  8505  00F4A0  65                 	db	101	;'e'
  8506  00F4A1  74                 	db	116	;'t'
  8507  00F4A2  20                 	db	32
  8508  00F4A3  63                 	db	99	;'c'
  8509  00F4A4  6F                 	db	111	;'o'
  8510  00F4A5  6E                 	db	110	;'n'
  8511  00F4A6  64                 	db	100	;'d'
  8512  00F4A7  69                 	db	105	;'i'
  8513  00F4A8  74                 	db	116	;'t'
  8514  00F4A9  69                 	db	105	;'i'
  8515  00F4AA  6F                 	db	111	;'o'
  8516  00F4AB  6E                 	db	110	;'n'
  8517  00F4AC  20                 	db	32
  8518  00F4AD  69                 	db	105	;'i'
  8519  00F4AE  73                 	db	115	;'s'
  8520  00F4AF  20                 	db	32
  8521  00F4B0  25                 	db	37
  8522  00F4B1  64                 	db	100	;'d'
  8523  00F4B2  20                 	db	32
  8524  00F4B3  73                 	db	115	;'s'
  8525  00F4B4  65                 	db	101	;'e'
  8526  00F4B5  63                 	db	99	;'c'
  8527  00F4B6  6F                 	db	111	;'o'
  8528  00F4B7  6E                 	db	110	;'n'
  8529  00F4B8  64                 	db	100	;'d'
  8530  00F4B9  73                 	db	115	;'s'
  8531  00F4BA  0A                 	db	10
  8532  00F4BB  0D                 	db	13
  8533  00F4BC  00                 	db	0
  8534  00F4BD                     STR_80:
  8535  00F4BD  46                 	db	70	;'F'
  8536  00F4BE  69                 	db	105	;'i'
  8537  00F4BF  78                 	db	120	;'x'
  8538  00F4C0  65                 	db	101	;'e'
  8539  00F4C1  64                 	db	100	;'d'
  8540  00F4C2  20                 	db	32
  8541  00F4C3  56                 	db	86	;'V'
  8542  00F4C4  6F                 	db	111	;'o'
  8543  00F4C5  6C                 	db	108	;'l'
  8544  00F4C6  74                 	db	116	;'t'
  8545  00F4C7  61                 	db	97	;'a'
  8546  00F4C8  67                 	db	103	;'g'
  8547  00F4C9  65                 	db	101	;'e'
  8548  00F4CA  20                 	db	32
  8549  00F4CB  52                 	db	82	;'R'
  8550  00F4CC  65                 	db	101	;'e'
  8551  00F4CD  66                 	db	102	;'f'
  8552  00F4CE  65                 	db	101	;'e'
  8553  00F4CF  72                 	db	114	;'r'
  8554  00F4D0  65                 	db	101	;'e'
  8555  00F4D1  6E                 	db	110	;'n'
  8556  00F4D2  63                 	db	99	;'c'
  8557  00F4D3  65                 	db	101	;'e'
  8558  00F4D4  20                 	db	32
  8559  00F4D5  42                 	db	66	;'B'
  8560  00F4D6  75                 	db	117	;'u'
  8561  00F4D7  66                 	db	102	;'f'
  8562  00F4D8  66                 	db	102	;'f'
  8563  00F4D9  65                 	db	101	;'e'
  8564  00F4DA  72                 	db	114	;'r'
  8565  00F4DB  20                 	db	32
  8566  00F4DC  31                 	db	49	;'1'
  8567  00F4DD  20                 	db	32
  8568  00F4DE  6D                 	db	109	;'m'
  8569  00F4DF  65                 	db	101	;'e'
  8570  00F4E0  61                 	db	97	;'a'
  8571  00F4E1  73                 	db	115	;'s'
  8572  00F4E2  75                 	db	117	;'u'
  8573  00F4E3  72                 	db	114	;'r'
  8574  00F4E4  65                 	db	101	;'e'
  8575  00F4E5  64                 	db	100	;'d'
  8576  00F4E6  20                 	db	32
  8577  00F4E7  61                 	db	97	;'a'
  8578  00F4E8  73                 	db	115	;'s'
  8579  00F4E9  20                 	db	32
  8580  00F4EA  25                 	db	37
  8581  00F4EB  2E                 	db	46
  8582  00F4EC  33                 	db	51	;'3'
  8583  00F4ED  66                 	db	102	;'f'
  8584  00F4EE  20                 	db	32
  8585  00F4EF  56                 	db	86	;'V'
  8586  00F4F0  6F                 	db	111	;'o'
  8587  00F4F1  6C                 	db	108	;'l'
  8588  00F4F2  74                 	db	116	;'t'
  8589  00F4F3  73                 	db	115	;'s'
  8590  00F4F4  0A                 	db	10
  8591  00F4F5  0D                 	db	13
  8592  00F4F6  00                 	db	0
  8593  00F4F7                     STR_90:
  8594  00F4F7  4F                 	db	79	;'O'
  8595  00F4F8  75                 	db	117	;'u'
  8596  00F4F9  74                 	db	116	;'t'
  8597  00F4FA  70                 	db	112	;'p'
  8598  00F4FB  75                 	db	117	;'u'
  8599  00F4FC  74                 	db	116	;'t'
  8600  00F4FD  20                 	db	32
  8601  00F4FE  70                 	db	112	;'p'
  8602  00F4FF  6F                 	db	111	;'o'
  8603  00F500  77                 	db	119	;'w'
  8604  00F501  65                 	db	101	;'e'
  8605  00F502  72                 	db	114	;'r'
  8606  00F503  20                 	db	32
  8607  00F504  63                 	db	99	;'c'
  8608  00F505  61                 	db	97	;'a'
  8609  00F506  6C                 	db	108	;'l'
  8610  00F507  63                 	db	99	;'c'
  8611  00F508  75                 	db	117	;'u'
  8612  00F509  6C                 	db	108	;'l'
  8613  00F50A  61                 	db	97	;'a'
  8614  00F50B  74                 	db	116	;'t'
  8615  00F50C  65                 	db	101	;'e'
  8616  00F50D  64                 	db	100	;'d'
  8617  00F50E  20                 	db	32
  8618  00F50F  61                 	db	97	;'a'
  8619  00F510  73                 	db	115	;'s'
  8620  00F511  20                 	db	32
  8621  00F512  25                 	db	37
  8622  00F513  2E                 	db	46
  8623  00F514  33                 	db	51	;'3'
  8624  00F515  66                 	db	102	;'f'
  8625  00F516  20                 	db	32
  8626  00F517  57                 	db	87	;'W'
  8627  00F518  61                 	db	97	;'a'
  8628  00F519  74                 	db	116	;'t'
  8629  00F51A  74                 	db	116	;'t'
  8630  00F51B  73                 	db	115	;'s'
  8631  00F51C  20                 	db	32
  8632  00F51D  66                 	db	102	;'f'
  8633  00F51E  72                 	db	114	;'r'
  8634  00F51F  6F                 	db	111	;'o'
  8635  00F520  6D                 	db	109	;'m'
  8636  00F521  20                 	db	32
  8637  00F522  52                 	db	82	;'R'
  8638  00F523  4D                 	db	77	;'M'
  8639  00F524  53                 	db	83	;'S'
  8640  00F525  20                 	db	32
  8641  00F526  76                 	db	118	;'v'
  8642  00F527  61                 	db	97	;'a'
  8643  00F528  6C                 	db	108	;'l'
  8644  00F529  75                 	db	117	;'u'
  8645  00F52A  65                 	db	101	;'e'
  8646  00F52B  73                 	db	115	;'s'
  8647  00F52C  0A                 	db	10
  8648  00F52D  0D                 	db	13
  8649  00F52E  00                 	db	0
  8650  00F52F                     STR_152:
  8651  00F52F  48                 	db	72	;'H'
  8652  00F530  65                 	db	101	;'e'
  8653  00F531  6C                 	db	108	;'l'
  8654  00F532  70                 	db	112	;'p'
  8655  00F533  20                 	db	32
  8656  00F534  6D                 	db	109	;'m'
  8657  00F535  65                 	db	101	;'e'
  8658  00F536  73                 	db	115	;'s'
  8659  00F537  73                 	db	115	;'s'
  8660  00F538  61                 	db	97	;'a'
  8661  00F539  67                 	db	103	;'g'
  8662  00F53A  65                 	db	101	;'e'
  8663  00F53B  73                 	db	115	;'s'
  8664  00F53C  20                 	db	32
  8665  00F53D  61                 	db	97	;'a'
  8666  00F53E  6E                 	db	110	;'n'
  8667  00F53F  64                 	db	100	;'d'
  8668  00F540  20                 	db	32
  8669  00F541  6E                 	db	110	;'n'
  8670  00F542  65                 	db	101	;'e'
  8671  00F543  75                 	db	117	;'u'
  8672  00F544  74                 	db	116	;'t'
  8673  00F545  72                 	db	114	;'r'
  8674  00F546  61                 	db	97	;'a'
  8675  00F547  6C                 	db	108	;'l'
  8676  00F548  20                 	db	32
  8677  00F549  72                 	db	114	;'r'
  8678  00F54A  65                 	db	101	;'e'
  8679  00F54B  73                 	db	115	;'s'
  8680  00F54C  70                 	db	112	;'p'
  8681  00F54D  6F                 	db	111	;'o'
  8682  00F54E  6E                 	db	110	;'n'
  8683  00F54F  73                 	db	115	;'s'
  8684  00F550  65                 	db	101	;'e'
  8685  00F551  73                 	db	115	;'s'
  8686  00F552  20                 	db	32
  8687  00F553  61                 	db	97	;'a'
  8688  00F554  70                 	db	112	;'p'
  8689  00F555  70                 	db	112	;'p'
  8690  00F556  65                 	db	101	;'e'
  8691  00F557  61                 	db	97	;'a'
  8692  00F558  72                 	db	114	;'r'
  8693  00F559  20                 	db	32
  8694  00F55A  69                 	db	105	;'i'
  8695  00F55B  6E                 	db	110	;'n'
  8696  00F55C  20                 	db	32
  8697  00F55D  79                 	db	121	;'y'
  8698  00F55E  65                 	db	101	;'e'
  8699  00F55F  6C                 	db	108	;'l'
  8700  00F560  6C                 	db	108	;'l'
  8701  00F561  6F                 	db	111	;'o'
  8702  00F562  77                 	db	119	;'w'
  8703  00F563  0A                 	db	10
  8704  00F564  0D                 	db	13
  8705  00F565  00                 	db	0
  8706  00F566                     STR_139:
  8707  00F566  4D                 	db	77	;'M'
  8708  00F567  61                 	db	97	;'a'
  8709  00F568  78                 	db	120	;'x'
  8710  00F569  69                 	db	105	;'i'
  8711  00F56A  6D                 	db	109	;'m'
  8712  00F56B  75                 	db	117	;'u'
  8713  00F56C  6D                 	db	109	;'m'
  8714  00F56D  20                 	db	32
  8715  00F56E  72                 	db	114	;'r'
  8716  00F56F  65                 	db	101	;'e'
  8717  00F570  63                 	db	99	;'c'
  8718  00F571  6F                 	db	111	;'o'
  8719  00F572  72                 	db	114	;'r'
  8720  00F573  64                 	db	100	;'d'
  8721  00F574  65                 	db	101	;'e'
  8722  00F575  64                 	db	100	;'d'
  8723  00F576  20                 	db	32
  8724  00F577  76                 	db	118	;'v'
  8725  00F578  61                 	db	97	;'a'
  8726  00F579  6C                 	db	108	;'l'
  8727  00F57A  75                 	db	117	;'u'
  8728  00F57B  65                 	db	101	;'e'
  8729  00F57C  73                 	db	115	;'s'
  8730  00F57D  20                 	db	32
  8731  00F57E  65                 	db	101	;'e'
  8732  00F57F  72                 	db	114	;'r'
  8733  00F580  61                 	db	97	;'a'
  8734  00F581  73                 	db	115	;'s'
  8735  00F582  65                 	db	101	;'e'
  8736  00F583  64                 	db	100	;'d'
  8737  00F584  20                 	db	32
  8738  00F585  66                 	db	102	;'f'
  8739  00F586  72                 	db	114	;'r'
  8740  00F587  6F                 	db	111	;'o'
  8741  00F588  6D                 	db	109	;'m'
  8742  00F589  20                 	db	32
  8743  00F58A  53                 	db	83	;'S'
  8744  00F58B  52                 	db	82	;'R'
  8745  00F58C  41                 	db	65	;'A'
  8746  00F58D  4D                 	db	77	;'M'
  8747  00F58E  20                 	db	32
  8748  00F58F  61                 	db	97	;'a'
  8749  00F590  6E                 	db	110	;'n'
  8750  00F591  64                 	db	100	;'d'
  8751  00F592  20                 	db	32
  8752  00F593  45                 	db	69	;'E'
  8753  00F594  45                 	db	69	;'E'
  8754  00F595  50                 	db	80	;'P'
  8755  00F596  52                 	db	82	;'R'
  8756  00F597  4F                 	db	79	;'O'
  8757  00F598  4D                 	db	77	;'M'
  8758  00F599  0A                 	db	10
  8759  00F59A  0D                 	db	13
  8760  00F59B  00                 	db	0
  8761  00F59C                     STR_59:
  8762  00F59C  20                 	db	32
  8763  00F59D  20                 	db	32
  8764  00F59E  20                 	db	32
  8765  00F59F  20                 	db	32
  8766  00F5A0  55                 	db	85	;'U'
  8767  00F5A1  73                 	db	115	;'s'
  8768  00F5A2  65                 	db	101	;'e'
  8769  00F5A3  72                 	db	114	;'r'
  8770  00F5A4  20                 	db	32
  8771  00F5A5  49                 	db	73	;'I'
  8772  00F5A6  44                 	db	68	;'D'
  8773  00F5A7  20                 	db	32
  8774  00F5A8  57                 	db	87	;'W'
  8775  00F5A9  6F                 	db	111	;'o'
  8776  00F5AA  72                 	db	114	;'r'
  8777  00F5AB  64                 	db	100	;'d'
  8778  00F5AC  20                 	db	32
  8779  00F5AD  25                 	db	37
  8780  00F5AE  64                 	db	100	;'d'
  8781  00F5AF  20                 	db	32
  8782  00F5B0  28                 	db	40
  8783  00F5B1  46                 	db	70	;'F'
  8784  00F5B2  6C                 	db	108	;'l'
  8785  00F5B3  61                 	db	97	;'a'
  8786  00F5B4  73                 	db	115	;'s'
  8787  00F5B5  68                 	db	104	;'h'
  8788  00F5B6  20                 	db	32
  8789  00F5B7  61                 	db	97	;'a'
  8790  00F5B8  64                 	db	100	;'d'
  8791  00F5B9  64                 	db	100	;'d'
  8792  00F5BA  72                 	db	114	;'r'
  8793  00F5BB  65                 	db	101	;'e'
  8794  00F5BC  73                 	db	115	;'s'
  8795  00F5BD  73                 	db	115	;'s'
  8796  00F5BE  20                 	db	32
  8797  00F5BF  30                 	db	48	;'0'
  8798  00F5C0  78                 	db	120	;'x'
  8799  00F5C1  32                 	db	50	;'2'
  8800  00F5C2  30                 	db	48	;'0'
  8801  00F5C3  30                 	db	48	;'0'
  8802  00F5C4  30                 	db	48	;'0'
  8803  00F5C5  30                 	db	48	;'0'
  8804  00F5C6  25                 	db	37
  8805  00F5C7  58                 	db	88	;'X'
  8806  00F5C8  29                 	db	41
  8807  00F5C9  3A                 	db	58	;':'
  8808  00F5CA  20                 	db	32
  8809  00F5CB  30                 	db	48	;'0'
  8810  00F5CC  78                 	db	120	;'x'
  8811  00F5CD  25                 	db	37
  8812  00F5CE  58                 	db	88	;'X'
  8813  00F5CF  0A                 	db	10
  8814  00F5D0  0D                 	db	13
  8815  00F5D1  00                 	db	0
  8816  00F5D2                     STR_137:
  8817  00F5D2  4D                 	db	77	;'M'
  8818  00F5D3  61                 	db	97	;'a'
  8819  00F5D4  78                 	db	120	;'x'
  8820  00F5D5  69                 	db	105	;'i'
  8821  00F5D6  6D                 	db	109	;'m'
  8822  00F5D7  75                 	db	117	;'u'
  8823  00F5D8  6D                 	db	109	;'m'
  8824  00F5D9  20                 	db	32
  8825  00F5DA  72                 	db	114	;'r'
  8826  00F5DB  65                 	db	101	;'e'
  8827  00F5DC  63                 	db	99	;'c'
  8828  00F5DD  6F                 	db	111	;'o'
  8829  00F5DE  72                 	db	114	;'r'
  8830  00F5DF  64                 	db	100	;'d'
  8831  00F5E0  65                 	db	101	;'e'
  8832  00F5E1  64                 	db	100	;'d'
  8833  00F5E2  20                 	db	32
  8834  00F5E3  46                 	db	70	;'F'
  8835  00F5E4  56                 	db	86	;'V'
  8836  00F5E5  52                 	db	82	;'R'
  8837  00F5E6  20                 	db	32
  8838  00F5E7  62                 	db	98	;'b'
  8839  00F5E8  75                 	db	117	;'u'
  8840  00F5E9  66                 	db	102	;'f'
  8841  00F5EA  66                 	db	102	;'f'
  8842  00F5EB  65                 	db	101	;'e'
  8843  00F5EC  72                 	db	114	;'r'
  8844  00F5ED  20                 	db	32
  8845  00F5EE  31                 	db	49	;'1'
  8846  00F5EF  20                 	db	32
  8847  00F5F0  76                 	db	118	;'v'
  8848  00F5F1  6F                 	db	111	;'o'
  8849  00F5F2  6C                 	db	108	;'l'
  8850  00F5F3  74                 	db	116	;'t'
  8851  00F5F4  61                 	db	97	;'a'
  8852  00F5F5  67                 	db	103	;'g'
  8853  00F5F6  65                 	db	101	;'e'
  8854  00F5F7  20                 	db	32
  8855  00F5F8  69                 	db	105	;'i'
  8856  00F5F9  73                 	db	115	;'s'
  8857  00F5FA  20                 	db	32
  8858  00F5FB  25                 	db	37
  8859  00F5FC  2E                 	db	46
  8860  00F5FD  33                 	db	51	;'3'
  8861  00F5FE  66                 	db	102	;'f'
  8862  00F5FF  20                 	db	32
  8863  00F600  56                 	db	86	;'V'
  8864  00F601  6F                 	db	111	;'o'
  8865  00F602  6C                 	db	108	;'l'
  8866  00F603  74                 	db	116	;'t'
  8867  00F604  73                 	db	115	;'s'
  8868  00F605  0A                 	db	10
  8869  00F606  0D                 	db	13
  8870  00F607  00                 	db	0
  8871  00F608                     STR_99:
  8872  00F608  49                 	db	73	;'I'
  8873  00F609  66                 	db	102	;'f'
  8874  00F60A  20                 	db	32
  8875  00F60B  79                 	db	121	;'y'
  8876  00F60C  65                 	db	101	;'e'
  8877  00F60D  73                 	db	115	;'s'
  8878  00F60E  2C                 	db	44
  8879  00F60F  20                 	db	32
  8880  00F610  72                 	db	114	;'r'
  8881  00F611  65                 	db	101	;'e'
  8882  00F612  70                 	db	112	;'p'
  8883  00F613  6C                 	db	108	;'l'
  8884  00F614  79                 	db	121	;'y'
  8885  00F615  20                 	db	32
  8886  00F616  27                 	db	39
  8887  00F617  45                 	db	69	;'E'
  8888  00F618  6E                 	db	110	;'n'
  8889  00F619  61                 	db	97	;'a'
  8890  00F61A  62                 	db	98	;'b'
  8891  00F61B  6C                 	db	108	;'l'
  8892  00F61C  65                 	db	101	;'e'
  8893  00F61D  20                 	db	32
  8894  00F61E  44                 	db	68	;'D'
  8895  00F61F  69                 	db	105	;'i'
  8896  00F620  6D                 	db	109	;'m'
  8897  00F621  6D                 	db	109	;'m'
  8898  00F622  69                 	db	105	;'i'
  8899  00F623  6E                 	db	110	;'n'
  8900  00F624  67                 	db	103	;'g'
  8901  00F625  20                 	db	32
  8902  00F626  59                 	db	89	;'Y'
  8903  00F627  27                 	db	39
  8904  00F628  20                 	db	32
  8905  00F629  6F                 	db	111	;'o'
  8906  00F62A  6E                 	db	110	;'n'
  8907  00F62B  20                 	db	32
  8908  00F62C  74                 	db	116	;'t'
  8909  00F62D  68                 	db	104	;'h'
  8910  00F62E  65                 	db	101	;'e'
  8911  00F62F  20                 	db	32
  8912  00F630  6E                 	db	110	;'n'
  8913  00F631  65                 	db	101	;'e'
  8914  00F632  78                 	db	120	;'x'
  8915  00F633  74                 	db	116	;'t'
  8916  00F634  20                 	db	32
  8917  00F635  6C                 	db	108	;'l'
  8918  00F636  69                 	db	105	;'i'
  8919  00F637  6E                 	db	110	;'n'
  8920  00F638  65                 	db	101	;'e'
  8921  00F639  3A                 	db	58	;':'
  8922  00F63A  0A                 	db	10
  8923  00F63B  0D                 	db	13
  8924  00F63C  00                 	db	0
  8925  00F63D                     STR_111:
  8926  00F63D  4C                 	db	76	;'L'
  8927  00F63E  6F                 	db	111	;'o'
  8928  00F63F  61                 	db	97	;'a'
  8929  00F640  64                 	db	100	;'d'
  8930  00F641  20                 	db	32
  8931  00F642  69                 	db	105	;'i'
  8932  00F643  73                 	db	115	;'s'
  8933  00F644  20                 	db	32
  8934  00F645  63                 	db	99	;'c'
  8935  00F646  75                 	db	117	;'u'
  8936  00F647  72                 	db	114	;'r'
  8937  00F648  72                 	db	114	;'r'
  8938  00F649  65                 	db	101	;'e'
  8939  00F64A  6E                 	db	110	;'n'
  8940  00F64B  74                 	db	116	;'t'
  8941  00F64C  6C                 	db	108	;'l'
  8942  00F64D  79                 	db	121	;'y'
  8943  00F64E  20                 	db	32
  8944  00F64F  65                 	db	101	;'e'
  8945  00F650  6E                 	db	110	;'n'
  8946  00F651  61                 	db	97	;'a'
  8947  00F652  62                 	db	98	;'b'
  8948  00F653  6C                 	db	108	;'l'
  8949  00F654  65                 	db	101	;'e'
  8950  00F655  64                 	db	100	;'d'
  8951  00F656  2C                 	db	44
  8952  00F657  20                 	db	32
  8953  00F658  62                 	db	98	;'b'
  8954  00F659  75                 	db	117	;'u'
  8955  00F65A  74                 	db	116	;'t'
  8956  00F65B  20                 	db	32
  8957  00F65C  64                 	db	100	;'d'
  8958  00F65D  69                 	db	105	;'i'
  8959  00F65E  6D                 	db	109	;'m'
  8960  00F65F  6D                 	db	109	;'m'
  8961  00F660  69                 	db	105	;'i'
  8962  00F661  6E                 	db	110	;'n'
  8963  00F662  67                 	db	103	;'g'
  8964  00F663  20                 	db	32
  8965  00F664  69                 	db	105	;'i'
  8966  00F665  73                 	db	115	;'s'
  8967  00F666  20                 	db	32
  8968  00F667  64                 	db	100	;'d'
  8969  00F668  69                 	db	105	;'i'
  8970  00F669  73                 	db	115	;'s'
  8971  00F66A  61                 	db	97	;'a'
  8972  00F66B  62                 	db	98	;'b'
  8973  00F66C  6C                 	db	108	;'l'
  8974  00F66D  65                 	db	101	;'e'
  8975  00F66E  64                 	db	100	;'d'
  8976  00F66F  0A                 	db	10
  8977  00F670  0D                 	db	13
  8978  00F671  00                 	db	0
  8979  00F672                     STR_125:
  8980  00F672  4C                 	db	76	;'L'
  8981  00F673  6F                 	db	111	;'o'
  8982  00F674  61                 	db	97	;'a'
  8983  00F675  64                 	db	100	;'d'
  8984  00F676  20                 	db	32
  8985  00F677  6F                 	db	111	;'o'
  8986  00F678  6E                 	db	110	;'n'
  8987  00F679  20                 	db	32
  8988  00F67A  74                 	db	116	;'t'
  8989  00F67B  69                 	db	105	;'i'
  8990  00F67C  6D                 	db	109	;'m'
  8991  00F67D  65                 	db	101	;'e'
  8992  00F67E  20                 	db	32
  8993  00F67F  73                 	db	115	;'s'
  8994  00F680  69                 	db	105	;'i'
  8995  00F681  6E                 	db	110	;'n'
  8996  00F682  63                 	db	99	;'c'
  8997  00F683  65                 	db	101	;'e'
  8998  00F684  20                 	db	32
  8999  00F685  6C                 	db	108	;'l'
  9000  00F686  61                 	db	97	;'a'
  9001  00F687  73                 	db	115	;'s'
  9002  00F688  74                 	db	116	;'t'
  9003  00F689  20                 	db	32
  9004  00F68A  64                 	db	100	;'d'
  9005  00F68B  65                 	db	101	;'e'
  9006  00F68C  76                 	db	118	;'v'
  9007  00F68D  69                 	db	105	;'i'
  9008  00F68E  63                 	db	99	;'c'
  9009  00F68F  65                 	db	101	;'e'
  9010  00F690  20                 	db	32
  9011  00F691  72                 	db	114	;'r'
  9012  00F692  65                 	db	101	;'e'
  9013  00F693  73                 	db	115	;'s'
  9014  00F694  65                 	db	101	;'e'
  9015  00F695  74                 	db	116	;'t'
  9016  00F696  20                 	db	32
  9017  00F697  69                 	db	105	;'i'
  9018  00F698  73                 	db	115	;'s'
  9019  00F699  20                 	db	32
  9020  00F69A  25                 	db	37
  9021  00F69B  64                 	db	100	;'d'
  9022  00F69C  20                 	db	32
  9023  00F69D  73                 	db	115	;'s'
  9024  00F69E  65                 	db	101	;'e'
  9025  00F69F  63                 	db	99	;'c'
  9026  00F6A0  6F                 	db	111	;'o'
  9027  00F6A1  6E                 	db	110	;'n'
  9028  00F6A2  64                 	db	100	;'d'
  9029  00F6A3  73                 	db	115	;'s'
  9030  00F6A4  0A                 	db	10
  9031  00F6A5  0D                 	db	13
  9032  00F6A6  00                 	db	0
  9033  00F6A7                     STR_98:
  9034  00F6A7  41                 	db	65	;'A'
  9035  00F6A8  72                 	db	114	;'r'
  9036  00F6A9  65                 	db	101	;'e'
  9037  00F6AA  20                 	db	32
  9038  00F6AB  79                 	db	121	;'y'
  9039  00F6AC  6F                 	db	111	;'o'
  9040  00F6AD  75                 	db	117	;'u'
  9041  00F6AE  20                 	db	32
  9042  00F6AF  73                 	db	115	;'s'
  9043  00F6B0  75                 	db	117	;'u'
  9044  00F6B1  72                 	db	114	;'r'
  9045  00F6B2  65                 	db	101	;'e'
  9046  00F6B3  20                 	db	32
  9047  00F6B4  79                 	db	121	;'y'
  9048  00F6B5  6F                 	db	111	;'o'
  9049  00F6B6  75                 	db	117	;'u'
  9050  00F6B7  27                 	db	39
  9051  00F6B8  64                 	db	100	;'d'
  9052  00F6B9  20                 	db	32
  9053  00F6BA  6C                 	db	108	;'l'
  9054  00F6BB  69                 	db	105	;'i'
  9055  00F6BC  6B                 	db	107	;'k'
  9056  00F6BD  65                 	db	101	;'e'
  9057  00F6BE  20                 	db	32
  9058  00F6BF  74                 	db	116	;'t'
  9059  00F6C0  6F                 	db	111	;'o'
  9060  00F6C1  20                 	db	32
  9061  00F6C2  65                 	db	101	;'e'
  9062  00F6C3  6E                 	db	110	;'n'
  9063  00F6C4  61                 	db	97	;'a'
  9064  00F6C5  62                 	db	98	;'b'
  9065  00F6C6  6C                 	db	108	;'l'
  9066  00F6C7  65                 	db	101	;'e'
  9067  00F6C8  20                 	db	32
  9068  00F6C9  6F                 	db	111	;'o'
  9069  00F6CA  75                 	db	117	;'u'
  9070  00F6CB  74                 	db	116	;'t'
  9071  00F6CC  70                 	db	112	;'p'
  9072  00F6CD  75                 	db	117	;'u'
  9073  00F6CE  74                 	db	116	;'t'
  9074  00F6CF  20                 	db	32
  9075  00F6D0  64                 	db	100	;'d'
  9076  00F6D1  69                 	db	105	;'i'
  9077  00F6D2  6D                 	db	109	;'m'
  9078  00F6D3  6D                 	db	109	;'m'
  9079  00F6D4  69                 	db	105	;'i'
  9080  00F6D5  6E                 	db	110	;'n'
  9081  00F6D6  67                 	db	103	;'g'
  9082  00F6D7  3F                 	db	63	;'?'
  9083  00F6D8  0A                 	db	10
  9084  00F6D9  0D                 	db	13
  9085  00F6DA  00                 	db	0
  9086  00F6DB                     STR_48:
  9087  00F6DB  54                 	db	84	;'T'
  9088  00F6DC  68                 	db	104	;'h'
  9089  00F6DD  65                 	db	101	;'e'
  9090  00F6DE  20                 	db	32
  9091  00F6DF  63                 	db	99	;'c'
  9092  00F6E0  61                 	db	97	;'a'
  9093  00F6E1  75                 	db	117	;'u'
  9094  00F6E2  73                 	db	115	;'s'
  9095  00F6E3  65                 	db	101	;'e'
  9096  00F6E4  20                 	db	32
  9097  00F6E5  6F                 	db	111	;'o'
  9098  00F6E6  66                 	db	102	;'f'
  9099  00F6E7  20                 	db	32
  9100  00F6E8  74                 	db	116	;'t'
  9101  00F6E9  68                 	db	104	;'h'
  9102  00F6EA  65                 	db	101	;'e'
  9103  00F6EB  20                 	db	32
  9104  00F6EC  6D                 	db	109	;'m'
  9105  00F6ED  6F                 	db	111	;'o'
  9106  00F6EE  73                 	db	115	;'s'
  9107  00F6EF  74                 	db	116	;'t'
  9108  00F6F0  20                 	db	32
  9109  00F6F1  72                 	db	114	;'r'
  9110  00F6F2  65                 	db	101	;'e'
  9111  00F6F3  63                 	db	99	;'c'
  9112  00F6F4  65                 	db	101	;'e'
  9113  00F6F5  6E                 	db	110	;'n'
  9114  00F6F6  74                 	db	116	;'t'
  9115  00F6F7  20                 	db	32
  9116  00F6F8  64                 	db	100	;'d'
  9117  00F6F9  65                 	db	101	;'e'
  9118  00F6FA  76                 	db	118	;'v'
  9119  00F6FB  69                 	db	105	;'i'
  9120  00F6FC  63                 	db	99	;'c'
  9121  00F6FD  65                 	db	101	;'e'
  9122  00F6FE  20                 	db	32
  9123  00F6FF  72                 	db	114	;'r'
  9124  00F700  65                 	db	101	;'e'
  9125  00F701  73                 	db	115	;'s'
  9126  00F702  65                 	db	101	;'e'
  9127  00F703  74                 	db	116	;'t'
  9128  00F704  20                 	db	32
  9129  00F705  77                 	db	119	;'w'
  9130  00F706  61                 	db	97	;'a'
  9131  00F707  73                 	db	115	;'s'
  9132  00F708  3A                 	db	58	;':'
  9133  00F709  20                 	db	32
  9134  00F70A  25                 	db	37
  9135  00F70B  73                 	db	115	;'s'
  9136  00F70C  0A                 	db	10
  9137  00F70D  0D                 	db	13
  9138  00F70E  00                 	db	0
  9139  00F70F                     STR_131:
  9140  00F70F  4D                 	db	77	;'M'
  9141  00F710  61                 	db	97	;'a'
  9142  00F711  78                 	db	120	;'x'
  9143  00F712  69                 	db	105	;'i'
  9144  00F713  6D                 	db	109	;'m'
  9145  00F714  75                 	db	117	;'u'
  9146  00F715  6D                 	db	109	;'m'
  9147  00F716  20                 	db	32
  9148  00F717  72                 	db	114	;'r'
  9149  00F718  65                 	db	101	;'e'
  9150  00F719  63                 	db	99	;'c'
  9151  00F71A  6F                 	db	111	;'o'
  9152  00F71B  72                 	db	114	;'r'
  9153  00F71C  64                 	db	100	;'d'
  9154  00F71D  65                 	db	101	;'e'
  9155  00F71E  64                 	db	100	;'d'
  9156  00F71F  20                 	db	32
  9157  00F720  2B                 	db	43
  9158  00F721  33                 	db	51	;'3'
  9159  00F722  2E                 	db	46
  9160  00F723  33                 	db	51	;'3'
  9161  00F724  56                 	db	86	;'V'
  9162  00F725  20                 	db	32
  9163  00F726  72                 	db	114	;'r'
  9164  00F727  61                 	db	97	;'a'
  9165  00F728  69                 	db	105	;'i'
  9166  00F729  6C                 	db	108	;'l'
  9167  00F72A  20                 	db	32
  9168  00F72B  76                 	db	118	;'v'
  9169  00F72C  6F                 	db	111	;'o'
  9170  00F72D  6C                 	db	108	;'l'
  9171  00F72E  74                 	db	116	;'t'
  9172  00F72F  61                 	db	97	;'a'
  9173  00F730  67                 	db	103	;'g'
  9174  00F731  65                 	db	101	;'e'
  9175  00F732  20                 	db	32
  9176  00F733  69                 	db	105	;'i'
  9177  00F734  73                 	db	115	;'s'
  9178  00F735  20                 	db	32
  9179  00F736  25                 	db	37
  9180  00F737  2E                 	db	46
  9181  00F738  33                 	db	51	;'3'
  9182  00F739  66                 	db	102	;'f'
  9183  00F73A  20                 	db	32
  9184  00F73B  56                 	db	86	;'V'
  9185  00F73C  6F                 	db	111	;'o'
  9186  00F73D  6C                 	db	108	;'l'
  9187  00F73E  74                 	db	116	;'t'
  9188  00F73F  73                 	db	115	;'s'
  9189  00F740  0A                 	db	10
  9190  00F741  0D                 	db	13
  9191  00F742  00                 	db	0
  9192  00F743                     STR_127:
  9193  00F743  4D                 	db	77	;'M'
  9194  00F744  61                 	db	97	;'a'
  9195  00F745  78                 	db	120	;'x'
  9196  00F746  69                 	db	105	;'i'
  9197  00F747  6D                 	db	109	;'m'
  9198  00F748  75                 	db	117	;'u'
  9199  00F749  6D                 	db	109	;'m'
  9200  00F74A  20                 	db	32
  9201  00F74B  72                 	db	114	;'r'
  9202  00F74C  65                 	db	101	;'e'
  9203  00F74D  63                 	db	99	;'c'
  9204  00F74E  6F                 	db	111	;'o'
  9205  00F74F  72                 	db	114	;'r'
  9206  00F750  64                 	db	100	;'d'
  9207  00F751  65                 	db	101	;'e'
  9208  00F752  64                 	db	100	;'d'
  9209  00F753  20                 	db	32
  9210  00F754  52                 	db	82	;'R'
  9211  00F755  4D                 	db	77	;'M'
  9212  00F756  53                 	db	83	;'S'
  9213  00F757  20                 	db	32
  9214  00F758  6F                 	db	111	;'o'
  9215  00F759  75                 	db	117	;'u'
  9216  00F75A  74                 	db	116	;'t'
  9217  00F75B  70                 	db	112	;'p'
  9218  00F75C  75                 	db	117	;'u'
  9219  00F75D  74                 	db	116	;'t'
  9220  00F75E  20                 	db	32
  9221  00F75F  63                 	db	99	;'c'
  9222  00F760  75                 	db	117	;'u'
  9223  00F761  72                 	db	114	;'r'
  9224  00F762  72                 	db	114	;'r'
  9225  00F763  65                 	db	101	;'e'
  9226  00F764  6E                 	db	110	;'n'
  9227  00F765  74                 	db	116	;'t'
  9228  00F766  20                 	db	32
  9229  00F767  69                 	db	105	;'i'
  9230  00F768  73                 	db	115	;'s'
  9231  00F769  20                 	db	32
  9232  00F76A  25                 	db	37
  9233  00F76B  2E                 	db	46
  9234  00F76C  33                 	db	51	;'3'
  9235  00F76D  66                 	db	102	;'f'
  9236  00F76E  20                 	db	32
  9237  00F76F  41                 	db	65	;'A'
  9238  00F770  72                 	db	114	;'r'
  9239  00F771  6D                 	db	109	;'m'
  9240  00F772  73                 	db	115	;'s'
  9241  00F773  0A                 	db	10
  9242  00F774  0D                 	db	13
  9243  00F775  00                 	db	0
  9244  00F776                     STR_133:
  9245  00F776  4D                 	db	77	;'M'
  9246  00F777  61                 	db	97	;'a'
  9247  00F778  78                 	db	120	;'x'
  9248  00F779  69                 	db	105	;'i'
  9249  00F77A  6D                 	db	109	;'m'
  9250  00F77B  75                 	db	117	;'u'
  9251  00F77C  6D                 	db	109	;'m'
  9252  00F77D  20                 	db	32
  9253  00F77E  72                 	db	114	;'r'
  9254  00F77F  65                 	db	101	;'e'
  9255  00F780  63                 	db	99	;'c'
  9256  00F781  6F                 	db	111	;'o'
  9257  00F782  72                 	db	114	;'r'
  9258  00F783  64                 	db	100	;'d'
  9259  00F784  65                 	db	101	;'e'
  9260  00F785  64                 	db	100	;'d'
  9261  00F786  20                 	db	32
  9262  00F787  2B                 	db	43
  9263  00F788  31                 	db	49	;'1'
  9264  00F789  32                 	db	50	;'2'
  9265  00F78A  56                 	db	86	;'V'
  9266  00F78B  20                 	db	32
  9267  00F78C  72                 	db	114	;'r'
  9268  00F78D  61                 	db	97	;'a'
  9269  00F78E  69                 	db	105	;'i'
  9270  00F78F  6C                 	db	108	;'l'
  9271  00F790  20                 	db	32
  9272  00F791  76                 	db	118	;'v'
  9273  00F792  6F                 	db	111	;'o'
  9274  00F793  6C                 	db	108	;'l'
  9275  00F794  74                 	db	116	;'t'
  9276  00F795  61                 	db	97	;'a'
  9277  00F796  67                 	db	103	;'g'
  9278  00F797  65                 	db	101	;'e'
  9279  00F798  20                 	db	32
  9280  00F799  69                 	db	105	;'i'
  9281  00F79A  73                 	db	115	;'s'
  9282  00F79B  20                 	db	32
  9283  00F79C  25                 	db	37
  9284  00F79D  2E                 	db	46
  9285  00F79E  33                 	db	51	;'3'
  9286  00F79F  66                 	db	102	;'f'
  9287  00F7A0  20                 	db	32
  9288  00F7A1  56                 	db	86	;'V'
  9289  00F7A2  6F                 	db	111	;'o'
  9290  00F7A3  6C                 	db	108	;'l'
  9291  00F7A4  74                 	db	116	;'t'
  9292  00F7A5  73                 	db	115	;'s'
  9293  00F7A6  0A                 	db	10
  9294  00F7A7  0D                 	db	13
  9295  00F7A8  00                 	db	0
  9296  00F7A9                     STR_69:
  9297  00F7A9  54                 	db	84	;'T'
  9298  00F7AA  68                 	db	104	;'h'
  9299  00F7AB  65                 	db	101	;'e'
  9300  00F7AC  20                 	db	32
  9301  00F7AD  66                 	db	102	;'f'
  9302  00F7AE  6F                 	db	111	;'o'
  9303  00F7AF  6C                 	db	108	;'l'
  9304  00F7B0  6C                 	db	108	;'l'
  9305  00F7B1  6F                 	db	111	;'o'
  9306  00F7B2  77                 	db	119	;'w'
  9307  00F7B3  69                 	db	105	;'i'
  9308  00F7B4  6E                 	db	110	;'n'
  9309  00F7B5  67                 	db	103	;'g'
  9310  00F7B6  20                 	db	32
  9311  00F7B7  63                 	db	99	;'c'
  9312  00F7B8  68                 	db	104	;'h'
  9313  00F7B9  61                 	db	97	;'a'
  9314  00F7BA  6E                 	db	110	;'n'
  9315  00F7BB  6E                 	db	110	;'n'
  9316  00F7BC  65                 	db	101	;'e'
  9317  00F7BD  6C                 	db	108	;'l'
  9318  00F7BE  20                 	db	32
  9319  00F7BF  63                 	db	99	;'c'
  9320  00F7C0  61                 	db	97	;'a'
  9321  00F7C1  75                 	db	117	;'u'
  9322  00F7C2  73                 	db	115	;'s'
  9323  00F7C3  65                 	db	101	;'e'
  9324  00F7C4  64                 	db	100	;'d'
  9325  00F7C5  20                 	db	32
  9326  00F7C6  61                 	db	97	;'a'
  9327  00F7C7  6E                 	db	110	;'n'
  9328  00F7C8  20                 	db	32
  9329  00F7C9  41                 	db	65	;'A'
  9330  00F7CA  44                 	db	68	;'D'
  9331  00F7CB  43                 	db	67	;'C'
  9332  00F7CC  20                 	db	32
  9333  00F7CD  65                 	db	101	;'e'
  9334  00F7CE  72                 	db	114	;'r'
  9335  00F7CF  72                 	db	114	;'r'
  9336  00F7D0  6F                 	db	111	;'o'
  9337  00F7D1  72                 	db	114	;'r'
  9338  00F7D2  3A                 	db	58	;':'
  9339  00F7D3  20                 	db	32
  9340  00F7D4  25                 	db	37
  9341  00F7D5  73                 	db	115	;'s'
  9342  00F7D6  0A                 	db	10
  9343  00F7D7  0D                 	db	13
  9344  00F7D8  00                 	db	0
  9345  00F7D9                     STR_52:
  9346  00F7D9  4D                 	db	77	;'M'
  9347  00F7DA  61                 	db	97	;'a'
  9348  00F7DB  72                 	db	114	;'r'
  9349  00F7DC  71                 	db	113	;'q'
  9350  00F7DD  75                 	db	117	;'u'
  9351  00F7DE  65                 	db	101	;'e'
  9352  00F7DF  74                 	db	116	;'t'
  9353  00F7E0  74                 	db	116	;'t'
  9354  00F7E1  65                 	db	101	;'e'
  9355  00F7E2  20                 	db	32
  9356  00F7E3  55                 	db	85	;'U'
  9357  00F7E4  6E                 	db	110	;'n'
  9358  00F7E5  69                 	db	105	;'i'
  9359  00F7E6  76                 	db	118	;'v'
  9360  00F7E7  65                 	db	101	;'e'
  9361  00F7E8  72                 	db	114	;'r'
  9362  00F7E9  73                 	db	115	;'s'
  9363  00F7EA  69                 	db	105	;'i'
  9364  00F7EB  74                 	db	116	;'t'
  9365  00F7EC  79                 	db	121	;'y'
  9366  00F7ED  20                 	db	32
  9367  00F7EE  45                 	db	69	;'E'
  9368  00F7EF  4C                 	db	76	;'L'
  9369  00F7F0  45                 	db	69	;'E'
  9370  00F7F1  4E                 	db	78	;'N'
  9371  00F7F2  20                 	db	32
  9372  00F7F3  33                 	db	51	;'3'
  9373  00F7F4  30                 	db	48	;'0'
  9374  00F7F5  33                 	db	51	;'3'
  9375  00F7F6  35                 	db	53	;'5'
  9376  00F7F7  20                 	db	32
  9377  00F7F8  46                 	db	70	;'F'
  9378  00F7F9  69                 	db	105	;'i'
  9379  00F7FA  6E                 	db	110	;'n'
  9380  00F7FB  61                 	db	97	;'a'
  9381  00F7FC  6C                 	db	108	;'l'
  9382  00F7FD  20                 	db	32
  9383  00F7FE  50                 	db	80	;'P'
  9384  00F7FF  72                 	db	114	;'r'
  9385  00F800  6F                 	db	111	;'o'
  9386  00F801  6A                 	db	106	;'j'
  9387  00F802  65                 	db	101	;'e'
  9388  00F803  63                 	db	99	;'c'
  9389  00F804  74                 	db	116	;'t'
  9390  00F805  0A                 	db	10
  9391  00F806  0D                 	db	13
  9392  00F807  00                 	db	0
  9393  00F808                     STR_155:
  9394  00F808  45                 	db	69	;'E'
  9395  00F809  72                 	db	114	;'r'
  9396  00F80A  72                 	db	114	;'r'
  9397  00F80B  6F                 	db	111	;'o'
  9398  00F80C  72                 	db	114	;'r'
  9399  00F80D  73                 	db	115	;'s'
  9400  00F80E  20                 	db	32
  9401  00F80F  61                 	db	97	;'a'
  9402  00F810  6E                 	db	110	;'n'
  9403  00F811  64                 	db	100	;'d'
  9404  00F812  20                 	db	32
  9405  00F813  6E                 	db	110	;'n'
  9406  00F814  65                 	db	101	;'e'
  9407  00F815  67                 	db	103	;'g'
  9408  00F816  61                 	db	97	;'a'
  9409  00F817  74                 	db	116	;'t'
  9410  00F818  69                 	db	105	;'i'
  9411  00F819  76                 	db	118	;'v'
  9412  00F81A  65                 	db	101	;'e'
  9413  00F81B  20                 	db	32
  9414  00F81C  72                 	db	114	;'r'
  9415  00F81D  65                 	db	101	;'e'
  9416  00F81E  73                 	db	115	;'s'
  9417  00F81F  70                 	db	112	;'p'
  9418  00F820  6F                 	db	111	;'o'
  9419  00F821  6E                 	db	110	;'n'
  9420  00F822  73                 	db	115	;'s'
  9421  00F823  65                 	db	101	;'e'
  9422  00F824  73                 	db	115	;'s'
  9423  00F825  20                 	db	32
  9424  00F826  61                 	db	97	;'a'
  9425  00F827  70                 	db	112	;'p'
  9426  00F828  70                 	db	112	;'p'
  9427  00F829  65                 	db	101	;'e'
  9428  00F82A  61                 	db	97	;'a'
  9429  00F82B  72                 	db	114	;'r'
  9430  00F82C  20                 	db	32
  9431  00F82D  69                 	db	105	;'i'
  9432  00F82E  6E                 	db	110	;'n'
  9433  00F82F  20                 	db	32
  9434  00F830  72                 	db	114	;'r'
  9435  00F831  65                 	db	101	;'e'
  9436  00F832  64                 	db	100	;'d'
  9437  00F833  0A                 	db	10
  9438  00F834  0D                 	db	13
  9439  00F835  00                 	db	0
  9440  00F836                     STR_118:
  9441  00F836  45                 	db	69	;'E'
  9442  00F837  6E                 	db	110	;'n'
  9443  00F838  74                 	db	116	;'t'
  9444  00F839  65                 	db	101	;'e'
  9445  00F83A  72                 	db	114	;'r'
  9446  00F83B  20                 	db	32
  9447  00F83C  27                 	db	39
  9448  00F83D  48                 	db	72	;'H'
  9449  00F83E  65                 	db	101	;'e'
  9450  00F83F  6C                 	db	108	;'l'
  9451  00F840  70                 	db	112	;'p'
  9452  00F841  27                 	db	39
  9453  00F842  20                 	db	32
  9454  00F843  66                 	db	102	;'f'
  9455  00F844  6F                 	db	111	;'o'
  9456  00F845  72                 	db	114	;'r'
  9457  00F846  20                 	db	32
  9458  00F847  6C                 	db	108	;'l'
  9459  00F848  69                 	db	105	;'i'
  9460  00F849  73                 	db	115	;'s'
  9461  00F84A  74                 	db	116	;'t'
  9462  00F84B  20                 	db	32
  9463  00F84C  6F                 	db	111	;'o'
  9464  00F84D  66                 	db	102	;'f'
  9465  00F84E  20                 	db	32
  9466  00F84F  61                 	db	97	;'a'
  9467  00F850  76                 	db	118	;'v'
  9468  00F851  61                 	db	97	;'a'
  9469  00F852  69                 	db	105	;'i'
  9470  00F853  6C                 	db	108	;'l'
  9471  00F854  61                 	db	97	;'a'
  9472  00F855  62                 	db	98	;'b'
  9473  00F856  6C                 	db	108	;'l'
  9474  00F857  65                 	db	101	;'e'
  9475  00F858  20                 	db	32
  9476  00F859  63                 	db	99	;'c'
  9477  00F85A  6F                 	db	111	;'o'
  9478  00F85B  6D                 	db	109	;'m'
  9479  00F85C  6D                 	db	109	;'m'
  9480  00F85D  61                 	db	97	;'a'
  9481  00F85E  6E                 	db	110	;'n'
  9482  00F85F  64                 	db	100	;'d'
  9483  00F860  73                 	db	115	;'s'
  9484  00F861  0A                 	db	10
  9485  00F862  0D                 	db	13
  9486  00F863  00                 	db	0
  9487  00F864                     STR_129:
  9488  00F864  4D                 	db	77	;'M'
  9489  00F865  61                 	db	97	;'a'
  9490  00F866  78                 	db	120	;'x'
  9491  00F867  69                 	db	105	;'i'
  9492  00F868  6D                 	db	109	;'m'
  9493  00F869  75                 	db	117	;'u'
  9494  00F86A  6D                 	db	109	;'m'
  9495  00F86B  20                 	db	32
  9496  00F86C  72                 	db	114	;'r'
  9497  00F86D  65                 	db	101	;'e'
  9498  00F86E  63                 	db	99	;'c'
  9499  00F86F  6F                 	db	111	;'o'
  9500  00F870  72                 	db	114	;'r'
  9501  00F871  64                 	db	100	;'d'
  9502  00F872  65                 	db	101	;'e'
  9503  00F873  64                 	db	100	;'d'
  9504  00F874  20                 	db	32
  9505  00F875  6F                 	db	111	;'o'
  9506  00F876  75                 	db	117	;'u'
  9507  00F877  74                 	db	116	;'t'
  9508  00F878  70                 	db	112	;'p'
  9509  00F879  75                 	db	117	;'u'
  9510  00F87A  74                 	db	116	;'t'
  9511  00F87B  20                 	db	32
  9512  00F87C  70                 	db	112	;'p'
  9513  00F87D  6F                 	db	111	;'o'
  9514  00F87E  77                 	db	119	;'w'
  9515  00F87F  65                 	db	101	;'e'
  9516  00F880  72                 	db	114	;'r'
  9517  00F881  20                 	db	32
  9518  00F882  69                 	db	105	;'i'
  9519  00F883  73                 	db	115	;'s'
  9520  00F884  20                 	db	32
  9521  00F885  25                 	db	37
  9522  00F886  2E                 	db	46
  9523  00F887  33                 	db	51	;'3'
  9524  00F888  66                 	db	102	;'f'
  9525  00F889  20                 	db	32
  9526  00F88A  57                 	db	87	;'W'
  9527  00F88B  61                 	db	97	;'a'
  9528  00F88C  74                 	db	116	;'t'
  9529  00F88D  74                 	db	116	;'t'
  9530  00F88E  73                 	db	115	;'s'
  9531  00F88F  0A                 	db	10
  9532  00F890  0D                 	db	13
  9533  00F891  00                 	db	0
  9534  00F892                     STR_135:
  9535  00F892  4D                 	db	77	;'M'
  9536  00F893  61                 	db	97	;'a'
  9537  00F894  78                 	db	120	;'x'
  9538  00F895  69                 	db	105	;'i'
  9539  00F896  6D                 	db	109	;'m'
  9540  00F897  75                 	db	117	;'u'
  9541  00F898  6D                 	db	109	;'m'
  9542  00F899  20                 	db	32
  9543  00F89A  72                 	db	114	;'r'
  9544  00F89B  65                 	db	101	;'e'
  9545  00F89C  63                 	db	99	;'c'
  9546  00F89D  6F                 	db	111	;'o'
  9547  00F89E  72                 	db	114	;'r'
  9548  00F89F  64                 	db	100	;'d'
  9549  00F8A0  65                 	db	101	;'e'
  9550  00F8A1  64                 	db	100	;'d'
  9551  00F8A2  20                 	db	32
  9552  00F8A3  64                 	db	100	;'d'
  9553  00F8A4  69                 	db	105	;'i'
  9554  00F8A5  65                 	db	101	;'e'
  9555  00F8A6  20                 	db	32
  9556  00F8A7  74                 	db	116	;'t'
  9557  00F8A8  65                 	db	101	;'e'
  9558  00F8A9  6D                 	db	109	;'m'
  9559  00F8AA  70                 	db	112	;'p'
  9560  00F8AB  65                 	db	101	;'e'
  9561  00F8AC  72                 	db	114	;'r'
  9562  00F8AD  61                 	db	97	;'a'
  9563  00F8AE  74                 	db	116	;'t'
  9564  00F8AF  75                 	db	117	;'u'
  9565  00F8B0  72                 	db	114	;'r'
  9566  00F8B1  65                 	db	101	;'e'
  9567  00F8B2  20                 	db	32
  9568  00F8B3  69                 	db	105	;'i'
  9569  00F8B4  73                 	db	115	;'s'
  9570  00F8B5  20                 	db	32
  9571  00F8B6  25                 	db	37
  9572  00F8B7  2E                 	db	46
  9573  00F8B8  33                 	db	51	;'3'
  9574  00F8B9  66                 	db	102	;'f'
  9575  00F8BA  20                 	db	32
  9576  00F8BB  43                 	db	67	;'C'
  9577  00F8BC  0A                 	db	10
  9578  00F8BD  0D                 	db	13
  9579  00F8BE  00                 	db	0
  9580  00F8BF                     STR_105:
  9581  00F8BF  4C                 	db	76	;'L'
  9582  00F8C0  6F                 	db	111	;'o'
  9583  00F8C1  61                 	db	97	;'a'
  9584  00F8C2  64                 	db	100	;'d'
  9585  00F8C3  20                 	db	32
  9586  00F8C4  68                 	db	104	;'h'
  9587  00F8C5  61                 	db	97	;'a'
  9588  00F8C6  73                 	db	115	;'s'
  9589  00F8C7  20                 	db	32
  9590  00F8C8  62                 	db	98	;'b'
  9591  00F8C9  65                 	db	101	;'e'
  9592  00F8CA  65                 	db	101	;'e'
  9593  00F8CB  6E                 	db	110	;'n'
  9594  00F8CC  20                 	db	32
  9595  00F8CD  65                 	db	101	;'e'
  9596  00F8CE  6E                 	db	110	;'n'
  9597  00F8CF  61                 	db	97	;'a'
  9598  00F8D0  62                 	db	98	;'b'
  9599  00F8D1  6C                 	db	108	;'l'
  9600  00F8D2  65                 	db	101	;'e'
  9601  00F8D3  64                 	db	100	;'d'
  9602  00F8D4  2C                 	db	44
  9603  00F8D5  20                 	db	32
  9604  00F8D6  64                 	db	100	;'d'
  9605  00F8D7  69                 	db	105	;'i'
  9606  00F8D8  6D                 	db	109	;'m'
  9607  00F8D9  6D                 	db	109	;'m'
  9608  00F8DA  69                 	db	105	;'i'
  9609  00F8DB  6E                 	db	110	;'n'
  9610  00F8DC  67                 	db	103	;'g'
  9611  00F8DD  20                 	db	32
  9612  00F8DE  64                 	db	100	;'d'
  9613  00F8DF  69                 	db	105	;'i'
  9614  00F8E0  73                 	db	115	;'s'
  9615  00F8E1  61                 	db	97	;'a'
  9616  00F8E2  62                 	db	98	;'b'
  9617  00F8E3  6C                 	db	108	;'l'
  9618  00F8E4  65                 	db	101	;'e'
  9619  00F8E5  64                 	db	100	;'d'
  9620  00F8E6  0A                 	db	10
  9621  00F8E7  0D                 	db	13
  9622  00F8E8  00                 	db	0
  9623  00F8E9                     STR_112:
  9624  00F8E9  4C                 	db	76	;'L'
  9625  00F8EA  6F                 	db	111	;'o'
  9626  00F8EB  61                 	db	97	;'a'
  9627  00F8EC  64                 	db	100	;'d'
  9628  00F8ED  20                 	db	32
  9629  00F8EE  61                 	db	97	;'a'
  9630  00F8EF  6E                 	db	110	;'n'
  9631  00F8F0  64                 	db	100	;'d'
  9632  00F8F1  20                 	db	32
  9633  00F8F2  64                 	db	100	;'d'
  9634  00F8F3  69                 	db	105	;'i'
  9635  00F8F4  6D                 	db	109	;'m'
  9636  00F8F5  6D                 	db	109	;'m'
  9637  00F8F6  69                 	db	105	;'i'
  9638  00F8F7  6E                 	db	110	;'n'
  9639  00F8F8  67                 	db	103	;'g'
  9640  00F8F9  20                 	db	32
  9641  00F8FA  61                 	db	97	;'a'
  9642  00F8FB  72                 	db	114	;'r'
  9643  00F8FC  65                 	db	101	;'e'
  9644  00F8FD  20                 	db	32
  9645  00F8FE  63                 	db	99	;'c'
  9646  00F8FF  75                 	db	117	;'u'
  9647  00F900  72                 	db	114	;'r'
  9648  00F901  72                 	db	114	;'r'
  9649  00F902  65                 	db	101	;'e'
  9650  00F903  6E                 	db	110	;'n'
  9651  00F904  74                 	db	116	;'t'
  9652  00F905  6C                 	db	108	;'l'
  9653  00F906  79                 	db	121	;'y'
  9654  00F907  20                 	db	32
  9655  00F908  64                 	db	100	;'d'
  9656  00F909  69                 	db	105	;'i'
  9657  00F90A  73                 	db	115	;'s'
  9658  00F90B  61                 	db	97	;'a'
  9659  00F90C  62                 	db	98	;'b'
  9660  00F90D  6C                 	db	108	;'l'
  9661  00F90E  65                 	db	101	;'e'
  9662  00F90F  64                 	db	100	;'d'
  9663  00F910  0A                 	db	10
  9664  00F911  0D                 	db	13
  9665  00F912  00                 	db	0
  9666  00F913                     STR_171:
  9667  00F913  57                 	db	87	;'W'
  9668  00F914  69                 	db	105	;'i'
  9669  00F915  6E                 	db	110	;'n'
  9670  00F916  64                 	db	100	;'d'
  9671  00F917  6F                 	db	111	;'o'
  9672  00F918  77                 	db	119	;'w'
  9673  00F919  65                 	db	101	;'e'
  9674  00F91A  64                 	db	100	;'d'
  9675  00F91B  20                 	db	32
  9676  00F91C  57                 	db	87	;'W'
  9677  00F91D  61                 	db	97	;'a'
  9678  00F91E  74                 	db	116	;'t'
  9679  00F91F  63                 	db	99	;'c'
  9680  00F920  68                 	db	104	;'h'
  9681  00F921  20                 	db	32
  9682  00F922  44                 	db	68	;'D'
  9683  00F923  6F                 	db	111	;'o'
  9684  00F924  67                 	db	103	;'g'
  9685  00F925  20                 	db	32
  9686  00F926  54                 	db	84	;'T'
  9687  00F927  69                 	db	105	;'i'
  9688  00F928  6D                 	db	109	;'m'
  9689  00F929  65                 	db	101	;'e'
  9690  00F92A  72                 	db	114	;'r'
  9691  00F92B  20                 	db	32
  9692  00F92C  56                 	db	86	;'V'
  9693  00F92D  69                 	db	105	;'i'
  9694  00F92E  6F                 	db	111	;'o'
  9695  00F92F  6C                 	db	108	;'l'
  9696  00F930  61                 	db	97	;'a'
  9697  00F931  74                 	db	116	;'t'
  9698  00F932  69                 	db	105	;'i'
  9699  00F933  6F                 	db	111	;'o'
  9700  00F934  6E                 	db	110	;'n'
  9701  00F935  20                 	db	32
  9702  00F936  52                 	db	82	;'R'
  9703  00F937  65                 	db	101	;'e'
  9704  00F938  73                 	db	115	;'s'
  9705  00F939  65                 	db	101	;'e'
  9706  00F93A  74                 	db	116	;'t'
  9707  00F93B  00                 	db	0
  9708  00F93C                     STR_103:
  9709  00F93C  54                 	db	84	;'T'
  9710  00F93D  52                 	db	82	;'R'
  9711  00F93E  49                 	db	73	;'I'
  9712  00F93F  41                 	db	65	;'A'
  9713  00F940  43                 	db	67	;'C'
  9714  00F941  20                 	db	32
  9715  00F942  6F                 	db	111	;'o'
  9716  00F943  75                 	db	117	;'u'
  9717  00F944  74                 	db	116	;'t'
  9718  00F945  70                 	db	112	;'p'
  9719  00F946  75                 	db	117	;'u'
  9720  00F947  74                 	db	116	;'t'
  9721  00F948  20                 	db	32
  9722  00F949  64                 	db	100	;'d'
  9723  00F94A  69                 	db	105	;'i'
  9724  00F94B  6D                 	db	109	;'m'
  9725  00F94C  6D                 	db	109	;'m'
  9726  00F94D  69                 	db	105	;'i'
  9727  00F94E  6E                 	db	110	;'n'
  9728  00F94F  67                 	db	103	;'g'
  9729  00F950  20                 	db	32
  9730  00F951  68                 	db	104	;'h'
  9731  00F952  61                 	db	97	;'a'
  9732  00F953  73                 	db	115	;'s'
  9733  00F954  20                 	db	32
  9734  00F955  62                 	db	98	;'b'
  9735  00F956  65                 	db	101	;'e'
  9736  00F957  65                 	db	101	;'e'
  9737  00F958  6E                 	db	110	;'n'
  9738  00F959  20                 	db	32
  9739  00F95A  64                 	db	100	;'d'
  9740  00F95B  69                 	db	105	;'i'
  9741  00F95C  73                 	db	115	;'s'
  9742  00F95D  61                 	db	97	;'a'
  9743  00F95E  62                 	db	98	;'b'
  9744  00F95F  6C                 	db	108	;'l'
  9745  00F960  65                 	db	101	;'e'
  9746  00F961  64                 	db	100	;'d'
  9747  00F962  0A                 	db	10
  9748  00F963  0D                 	db	13
  9749  00F964  00                 	db	0
  9750  00F965                     STR_154:
  9751  00F965  4D                 	db	77	;'M'
  9752  00F966  65                 	db	101	;'e'
  9753  00F967  61                 	db	97	;'a'
  9754  00F968  73                 	db	115	;'s'
  9755  00F969  75                 	db	117	;'u'
  9756  00F96A  72                 	db	114	;'r'
  9757  00F96B  65                 	db	101	;'e'
  9758  00F96C  6D                 	db	109	;'m'
  9759  00F96D  65                 	db	101	;'e'
  9760  00F96E  6E                 	db	110	;'n'
  9761  00F96F  74                 	db	116	;'t'
  9762  00F970  20                 	db	32
  9763  00F971  72                 	db	114	;'r'
  9764  00F972  65                 	db	101	;'e'
  9765  00F973  73                 	db	115	;'s'
  9766  00F974  70                 	db	112	;'p'
  9767  00F975  6F                 	db	111	;'o'
  9768  00F976  6E                 	db	110	;'n'
  9769  00F977  73                 	db	115	;'s'
  9770  00F978  65                 	db	101	;'e'
  9771  00F979  73                 	db	115	;'s'
  9772  00F97A  20                 	db	32
  9773  00F97B  61                 	db	97	;'a'
  9774  00F97C  70                 	db	112	;'p'
  9775  00F97D  70                 	db	112	;'p'
  9776  00F97E  65                 	db	101	;'e'
  9777  00F97F  61                 	db	97	;'a'
  9778  00F980  72                 	db	114	;'r'
  9779  00F981  20                 	db	32
  9780  00F982  69                 	db	105	;'i'
  9781  00F983  6E                 	db	110	;'n'
  9782  00F984  20                 	db	32
  9783  00F985  63                 	db	99	;'c'
  9784  00F986  79                 	db	121	;'y'
  9785  00F987  61                 	db	97	;'a'
  9786  00F988  6E                 	db	110	;'n'
  9787  00F989  0A                 	db	10
  9788  00F98A  0D                 	db	13
  9789  00F98B  00                 	db	0
  9790  00F98C                     STR_82:
  9791  00F98C  41                 	db	65	;'A'
  9792  00F98D  56                 	db	86	;'V'
  9793  00F98E  53                 	db	83	;'S'
  9794  00F98F  53                 	db	83	;'S'
  9795  00F990  20                 	db	32
  9796  00F991  6D                 	db	109	;'m'
  9797  00F992  65                 	db	101	;'e'
  9798  00F993  61                 	db	97	;'a'
  9799  00F994  73                 	db	115	;'s'
  9800  00F995  75                 	db	117	;'u'
  9801  00F996  72                 	db	114	;'r'
  9802  00F997  65                 	db	101	;'e'
  9803  00F998  64                 	db	100	;'d'
  9804  00F999  20                 	db	32
  9805  00F99A  61                 	db	97	;'a'
  9806  00F99B  73                 	db	115	;'s'
  9807  00F99C  20                 	db	32
  9808  00F99D  25                 	db	37
  9809  00F99E  2E                 	db	46
  9810  00F99F  33                 	db	51	;'3'
  9811  00F9A0  66                 	db	102	;'f'
  9812  00F9A1  20                 	db	32
  9813  00F9A2  56                 	db	86	;'V'
  9814  00F9A3  6F                 	db	111	;'o'
  9815  00F9A4  6C                 	db	108	;'l'
  9816  00F9A5  74                 	db	116	;'t'
  9817  00F9A6  73                 	db	115	;'s'
  9818  00F9A7  20                 	db	32
  9819  00F9A8  62                 	db	98	;'b'
  9820  00F9A9  79                 	db	121	;'y'
  9821  00F9AA  20                 	db	32
  9822  00F9AB  41                 	db	65	;'A'
  9823  00F9AC  44                 	db	68	;'D'
  9824  00F9AD  43                 	db	67	;'C'
  9825  00F9AE  0A                 	db	10
  9826  00F9AF  0D                 	db	13
  9827  00F9B0  00                 	db	0
  9828  00F9B1                     STR_74:
  9829  00F9B1  2B                 	db	43
  9830  00F9B2  33                 	db	51	;'3'
  9831  00F9B3  2E                 	db	46
  9832  00F9B4  33                 	db	51	;'3'
  9833  00F9B5  56                 	db	86	;'V'
  9834  00F9B6  20                 	db	32
  9835  00F9B7  72                 	db	114	;'r'
  9836  00F9B8  61                 	db	97	;'a'
  9837  00F9B9  69                 	db	105	;'i'
  9838  00F9BA  6C                 	db	108	;'l'
  9839  00F9BB  20                 	db	32
  9840  00F9BC  6D                 	db	109	;'m'
  9841  00F9BD  65                 	db	101	;'e'
  9842  00F9BE  61                 	db	97	;'a'
  9843  00F9BF  73                 	db	115	;'s'
  9844  00F9C0  75                 	db	117	;'u'
  9845  00F9C1  72                 	db	114	;'r'
  9846  00F9C2  65                 	db	101	;'e'
  9847  00F9C3  64                 	db	100	;'d'
  9848  00F9C4  20                 	db	32
  9849  00F9C5  61                 	db	97	;'a'
  9850  00F9C6  73                 	db	115	;'s'
  9851  00F9C7  20                 	db	32
  9852  00F9C8  2B                 	db	43
  9853  00F9C9  25                 	db	37
  9854  00F9CA  2E                 	db	46
  9855  00F9CB  33                 	db	51	;'3'
  9856  00F9CC  66                 	db	102	;'f'
  9857  00F9CD  20                 	db	32
  9858  00F9CE  56                 	db	86	;'V'
  9859  00F9CF  6F                 	db	111	;'o'
  9860  00F9D0  6C                 	db	108	;'l'
  9861  00F9D1  74                 	db	116	;'t'
  9862  00F9D2  73                 	db	115	;'s'
  9863  00F9D3  0A                 	db	10
  9864  00F9D4  0D                 	db	13
  9865  00F9D5  00                 	db	0
  9866  00F9D6                     STR_119:
  9867  00F9D6  44                 	db	68	;'D'
  9868  00F9D7  69                 	db	105	;'i'
  9869  00F9D8  6D                 	db	109	;'m'
  9870  00F9D9  6D                 	db	109	;'m'
  9871  00F9DA  69                 	db	105	;'i'
  9872  00F9DB  6E                 	db	110	;'n'
  9873  00F9DC  67                 	db	103	;'g'
  9874  00F9DD  20                 	db	32
  9875  00F9DE  68                 	db	104	;'h'
  9876  00F9DF  61                 	db	97	;'a'
  9877  00F9E0  73                 	db	115	;'s'
  9878  00F9E1  20                 	db	32
  9879  00F9E2  62                 	db	98	;'b'
  9880  00F9E3  65                 	db	101	;'e'
  9881  00F9E4  65                 	db	101	;'e'
  9882  00F9E5  6E                 	db	110	;'n'
  9883  00F9E6  20                 	db	32
  9884  00F9E7  73                 	db	115	;'s'
  9885  00F9E8  65                 	db	101	;'e'
  9886  00F9E9  74                 	db	116	;'t'
  9887  00F9EA  20                 	db	32
  9888  00F9EB  74                 	db	116	;'t'
  9889  00F9EC  6F                 	db	111	;'o'
  9890  00F9ED  20                 	db	32
  9891  00F9EE  25                 	db	37
  9892  00F9EF  64                 	db	100	;'d'
  9893  00F9F0  20                 	db	32
  9894  00F9F1  70                 	db	112	;'p'
  9895  00F9F2  65                 	db	101	;'e'
  9896  00F9F3  72                 	db	114	;'r'
  9897  00F9F4  63                 	db	99	;'c'
  9898  00F9F5  65                 	db	101	;'e'
  9899  00F9F6  6E                 	db	110	;'n'
  9900  00F9F7  74                 	db	116	;'t'
  9901  00F9F8  0A                 	db	10
  9902  00F9F9  0D                 	db	13
  9903  00F9FA  00                 	db	0
  9904  00F9FB                     STR_78:
  9905  00F9FB  44                 	db	68	;'D'
  9906  00F9FC  69                 	db	105	;'i'
  9907  00F9FD  65                 	db	101	;'e'
  9908  00F9FE  20                 	db	32
  9909  00F9FF  54                 	db	84	;'T'
  9910  00FA00  65                 	db	101	;'e'
  9911  00FA01  6D                 	db	109	;'m'
  9912  00FA02  70                 	db	112	;'p'
  9913  00FA03  65                 	db	101	;'e'
  9914  00FA04  72                 	db	114	;'r'
  9915  00FA05  61                 	db	97	;'a'
  9916  00FA06  74                 	db	116	;'t'
  9917  00FA07  75                 	db	117	;'u'
  9918  00FA08  72                 	db	114	;'r'
  9919  00FA09  65                 	db	101	;'e'
  9920  00FA0A  20                 	db	32
  9921  00FA0B  6D                 	db	109	;'m'
  9922  00FA0C  65                 	db	101	;'e'
  9923  00FA0D  61                 	db	97	;'a'
  9924  00FA0E  73                 	db	115	;'s'
  9925  00FA0F  75                 	db	117	;'u'
  9926  00FA10  72                 	db	114	;'r'
  9927  00FA11  65                 	db	101	;'e'
  9928  00FA12  64                 	db	100	;'d'
  9929  00FA13  20                 	db	32
  9930  00FA14  61                 	db	97	;'a'
  9931  00FA15  73                 	db	115	;'s'
  9932  00FA16  20                 	db	32
  9933  00FA17  25                 	db	37
  9934  00FA18  2E                 	db	46
  9935  00FA19  33                 	db	51	;'3'
  9936  00FA1A  66                 	db	102	;'f'
  9937  00FA1B  43                 	db	67	;'C'
  9938  00FA1C  0A                 	db	10
  9939  00FA1D  0D                 	db	13
  9940  00FA1E  00                 	db	0
  9941  00FA1F                     STR_76:
  9942  00FA1F  2B                 	db	43
  9943  00FA20  31                 	db	49	;'1'
  9944  00FA21  32                 	db	50	;'2'
  9945  00FA22  56                 	db	86	;'V'
  9946  00FA23  20                 	db	32
  9947  00FA24  72                 	db	114	;'r'
  9948  00FA25  61                 	db	97	;'a'
  9949  00FA26  69                 	db	105	;'i'
  9950  00FA27  6C                 	db	108	;'l'
  9951  00FA28  20                 	db	32
  9952  00FA29  6D                 	db	109	;'m'
  9953  00FA2A  65                 	db	101	;'e'
  9954  00FA2B  61                 	db	97	;'a'
  9955  00FA2C  73                 	db	115	;'s'
  9956  00FA2D  75                 	db	117	;'u'
  9957  00FA2E  72                 	db	114	;'r'
  9958  00FA2F  65                 	db	101	;'e'
  9959  00FA30  64                 	db	100	;'d'
  9960  00FA31  20                 	db	32
  9961  00FA32  61                 	db	97	;'a'
  9962  00FA33  73                 	db	115	;'s'
  9963  00FA34  20                 	db	32
  9964  00FA35  2B                 	db	43
  9965  00FA36  25                 	db	37
  9966  00FA37  2E                 	db	46
  9967  00FA38  33                 	db	51	;'3'
  9968  00FA39  66                 	db	102	;'f'
  9969  00FA3A  20                 	db	32
  9970  00FA3B  56                 	db	86	;'V'
  9971  00FA3C  6F                 	db	111	;'o'
  9972  00FA3D  6C                 	db	108	;'l'
  9973  00FA3E  74                 	db	116	;'t'
  9974  00FA3F  73                 	db	115	;'s'
  9975  00FA40  0A                 	db	10
  9976  00FA41  0D                 	db	13
  9977  00FA42  00                 	db	0
  9978  00FA43                     STR_101:
  9979  00FA43  4F                 	db	79	;'O'
  9980  00FA44  75                 	db	117	;'u'
  9981  00FA45  74                 	db	116	;'t'
  9982  00FA46  70                 	db	112	;'p'
  9983  00FA47  75                 	db	117	;'u'
  9984  00FA48  74                 	db	116	;'t'
  9985  00FA49  20                 	db	32
  9986  00FA4A  64                 	db	100	;'d'
  9987  00FA4B  69                 	db	105	;'i'
  9988  00FA4C  6D                 	db	109	;'m'
  9989  00FA4D  6D                 	db	109	;'m'
  9990  00FA4E  69                 	db	105	;'i'
  9991  00FA4F  6E                 	db	110	;'n'
  9992  00FA50  67                 	db	103	;'g'
  9993  00FA51  20                 	db	32
  9994  00FA52  68                 	db	104	;'h'
  9995  00FA53  61                 	db	97	;'a'
  9996  00FA54  73                 	db	115	;'s'
  9997  00FA55  20                 	db	32
  9998  00FA56  62                 	db	98	;'b'
  9999  00FA57  65                 	db	101	;'e'
 10000  00FA58  65                 	db	101	;'e'
 10001  00FA59  6E                 	db	110	;'n'
 10002  00FA5A  20                 	db	32
 10003  00FA5B  65                 	db	101	;'e'
 10004  00FA5C  6E                 	db	110	;'n'
 10005  00FA5D  61                 	db	97	;'a'
 10006  00FA5E  62                 	db	98	;'b'
 10007  00FA5F  6C                 	db	108	;'l'
 10008  00FA60  65                 	db	101	;'e'
 10009  00FA61  64                 	db	100	;'d'
 10010  00FA62  0A                 	db	10
 10011  00FA63  0D                 	db	13
 10012  00FA64  00                 	db	0
 10013  00FA65                     STR_86:
 10014  00FA65  52                 	db	82	;'R'
 10015  00FA66  4D                 	db	77	;'M'
 10016  00FA67  53                 	db	83	;'S'
 10017  00FA68  20                 	db	32
 10018  00FA69  4F                 	db	79	;'O'
 10019  00FA6A  75                 	db	117	;'u'
 10020  00FA6B  74                 	db	116	;'t'
 10021  00FA6C  70                 	db	112	;'p'
 10022  00FA6D  75                 	db	117	;'u'
 10023  00FA6E  74                 	db	116	;'t'
 10024  00FA6F  20                 	db	32
 10025  00FA70  43                 	db	67	;'C'
 10026  00FA71  75                 	db	117	;'u'
 10027  00FA72  72                 	db	114	;'r'
 10028  00FA73  72                 	db	114	;'r'
 10029  00FA74  65                 	db	101	;'e'
 10030  00FA75  6E                 	db	110	;'n'
 10031  00FA76  74                 	db	116	;'t'
 10032  00FA77  20                 	db	32
 10033  00FA78  69                 	db	105	;'i'
 10034  00FA79  73                 	db	115	;'s'
 10035  00FA7A  20                 	db	32
 10036  00FA7B  25                 	db	37
 10037  00FA7C  2E                 	db	46
 10038  00FA7D  33                 	db	51	;'3'
 10039  00FA7E  66                 	db	102	;'f'
 10040  00FA7F  20                 	db	32
 10041  00FA80  41                 	db	65	;'A'
 10042  00FA81  72                 	db	114	;'r'
 10043  00FA82  6D                 	db	109	;'m'
 10044  00FA83  73                 	db	115	;'s'
 10045  00FA84  0A                 	db	10
 10046  00FA85  0D                 	db	13
 10047  00FA86  00                 	db	0
 10048  00FA87                     STR_88:
 10049  00FA87  52                 	db	82	;'R'
 10050  00FA88  4D                 	db	77	;'M'
 10051  00FA89  53                 	db	83	;'S'
 10052  00FA8A  20                 	db	32
 10053  00FA8B  4F                 	db	79	;'O'
 10054  00FA8C  75                 	db	117	;'u'
 10055  00FA8D  74                 	db	116	;'t'
 10056  00FA8E  70                 	db	112	;'p'
 10057  00FA8F  75                 	db	117	;'u'
 10058  00FA90  74                 	db	116	;'t'
 10059  00FA91  20                 	db	32
 10060  00FA92  56                 	db	86	;'V'
 10061  00FA93  6F                 	db	111	;'o'
 10062  00FA94  6C                 	db	108	;'l'
 10063  00FA95  74                 	db	116	;'t'
 10064  00FA96  61                 	db	97	;'a'
 10065  00FA97  67                 	db	103	;'g'
 10066  00FA98  65                 	db	101	;'e'
 10067  00FA99  20                 	db	32
 10068  00FA9A  69                 	db	105	;'i'
 10069  00FA9B  73                 	db	115	;'s'
 10070  00FA9C  20                 	db	32
 10071  00FA9D  25                 	db	37
 10072  00FA9E  2E                 	db	46
 10073  00FA9F  33                 	db	51	;'3'
 10074  00FAA0  66                 	db	102	;'f'
 10075  00FAA1  20                 	db	32
 10076  00FAA2  56                 	db	86	;'V'
 10077  00FAA3  72                 	db	114	;'r'
 10078  00FAA4  6D                 	db	109	;'m'
 10079  00FAA5  73                 	db	115	;'s'
 10080  00FAA6  0A                 	db	10
 10081  00FAA7  0D                 	db	13
 10082  00FAA8  00                 	db	0
 10083  00FAA9                     STR_144:
 10084  00FAA9  48                 	db	72	;'H'
 10085  00FAAA  65                 	db	101	;'e'
 10086  00FAAB  6C                 	db	108	;'l'
 10087  00FAAC  70                 	db	112	;'p'
 10088  00FAAD  20                 	db	32
 10089  00FAAE  50                 	db	80	;'P'
 10090  00FAAF  72                 	db	114	;'r'
 10091  00FAB0  69                 	db	105	;'i'
 10092  00FAB1  6D                 	db	109	;'m'
 10093  00FAB2  61                 	db	97	;'a'
 10094  00FAB3  72                 	db	114	;'r'
 10095  00FAB4  79                 	db	121	;'y'
 10096  00FAB5  20                 	db	32
 10097  00FAB6  4D                 	db	77	;'M'
 10098  00FAB7  65                 	db	101	;'e'
 10099  00FAB8  61                 	db	97	;'a'
 10100  00FAB9  73                 	db	115	;'s'
 10101  00FABA  75                 	db	117	;'u'
 10102  00FABB  72                 	db	114	;'r'
 10103  00FABC  65                 	db	101	;'e'
 10104  00FABD  6D                 	db	109	;'m'
 10105  00FABE  65                 	db	101	;'e'
 10106  00FABF  6E                 	db	110	;'n'
 10107  00FAC0  74                 	db	116	;'t'
 10108  00FAC1  20                 	db	32
 10109  00FAC2  43                 	db	67	;'C'
 10110  00FAC3  6F                 	db	111	;'o'
 10111  00FAC4  6D                 	db	109	;'m'
 10112  00FAC5  6D                 	db	109	;'m'
 10113  00FAC6  61                 	db	97	;'a'
 10114  00FAC7  6E                 	db	110	;'n'
 10115  00FAC8  64                 	db	100	;'d'
 10116  00FAC9  73                 	db	115	;'s'
 10117  00FACA  00                 	db	0
 10118  00FACB                     STR_142:
 10119  00FACB  48                 	db	72	;'H'
 10120  00FACC  65                 	db	101	;'e'
 10121  00FACD  6C                 	db	108	;'l'
 10122  00FACE  70                 	db	112	;'p'
 10123  00FACF  20                 	db	32
 10124  00FAD0  44                 	db	68	;'D'
 10125  00FAD1  65                 	db	101	;'e'
 10126  00FAD2  76                 	db	118	;'v'
 10127  00FAD3  69                 	db	105	;'i'
 10128  00FAD4  63                 	db	99	;'c'
 10129  00FAD5  65                 	db	101	;'e'
 10130  00FAD6  20                 	db	32
 10131  00FAD7  4D                 	db	77	;'M'
 10132  00FAD8  65                 	db	101	;'e'
 10133  00FAD9  61                 	db	97	;'a'
 10134  00FADA  73                 	db	115	;'s'
 10135  00FADB  75                 	db	117	;'u'
 10136  00FADC  72                 	db	114	;'r'
 10137  00FADD  65                 	db	101	;'e'
 10138  00FADE  6D                 	db	109	;'m'
 10139  00FADF  65                 	db	101	;'e'
 10140  00FAE0  6E                 	db	110	;'n'
 10141  00FAE1  74                 	db	116	;'t'
 10142  00FAE2  20                 	db	32
 10143  00FAE3  43                 	db	67	;'C'
 10144  00FAE4  6F                 	db	111	;'o'
 10145  00FAE5  6D                 	db	109	;'m'
 10146  00FAE6  6D                 	db	109	;'m'
 10147  00FAE7  61                 	db	97	;'a'
 10148  00FAE8  6E                 	db	110	;'n'
 10149  00FAE9  64                 	db	100	;'d'
 10150  00FAEA  73                 	db	115	;'s'
 10151  00FAEB  00                 	db	0
 10152  00FAEC                     STR_84:
 10153  00FAEC  4D                 	db	77	;'M'
 10154  00FAED  65                 	db	101	;'e'
 10155  00FAEE  61                 	db	97	;'a'
 10156  00FAEF  73                 	db	115	;'s'
 10157  00FAF0  75                 	db	117	;'u'
 10158  00FAF1  72                 	db	114	;'r'
 10159  00FAF2  65                 	db	101	;'e'
 10160  00FAF3  64                 	db	100	;'d'
 10161  00FAF4  20                 	db	32
 10162  00FAF5  43                 	db	67	;'C'
 10163  00FAF6  75                 	db	117	;'u'
 10164  00FAF7  72                 	db	114	;'r'
 10165  00FAF8  72                 	db	114	;'r'
 10166  00FAF9  65                 	db	101	;'e'
 10167  00FAFA  6E                 	db	110	;'n'
 10168  00FAFB  74                 	db	116	;'t'
 10169  00FAFC  20                 	db	32
 10170  00FAFD  69                 	db	105	;'i'
 10171  00FAFE  73                 	db	115	;'s'
 10172  00FAFF  20                 	db	32
 10173  00FB00  25                 	db	37
 10174  00FB01  2E                 	db	46
 10175  00FB02  33                 	db	51	;'3'
 10176  00FB03  66                 	db	102	;'f'
 10177  00FB04  20                 	db	32
 10178  00FB05  41                 	db	65	;'A'
 10179  00FB06  6D                 	db	109	;'m'
 10180  00FB07  70                 	db	112	;'p'
 10181  00FB08  73                 	db	115	;'s'
 10182  00FB09  0A                 	db	10
 10183  00FB0A  0D                 	db	13
 10184  00FB0B  00                 	db	0
 10185  00FB0C                     STR_110:
 10186  00FB0C  44                 	db	68	;'D'
 10187  00FB0D  69                 	db	105	;'i'
 10188  00FB0E  6D                 	db	109	;'m'
 10189  00FB0F  6D                 	db	109	;'m'
 10190  00FB10  69                 	db	105	;'i'
 10191  00FB11  6E                 	db	110	;'n'
 10192  00FB12  67                 	db	103	;'g'
 10193  00FB13  20                 	db	32
 10194  00FB14  69                 	db	105	;'i'
 10195  00FB15  73                 	db	115	;'s'
 10196  00FB16  20                 	db	32
 10197  00FB17  63                 	db	99	;'c'
 10198  00FB18  75                 	db	117	;'u'
 10199  00FB19  72                 	db	114	;'r'
 10200  00FB1A  72                 	db	114	;'r'
 10201  00FB1B  65                 	db	101	;'e'
 10202  00FB1C  6E                 	db	110	;'n'
 10203  00FB1D  74                 	db	116	;'t'
 10204  00FB1E  6C                 	db	108	;'l'
 10205  00FB1F  79                 	db	121	;'y'
 10206  00FB20  20                 	db	32
 10207  00FB21  65                 	db	101	;'e'
 10208  00FB22  6E                 	db	110	;'n'
 10209  00FB23  61                 	db	97	;'a'
 10210  00FB24  62                 	db	98	;'b'
 10211  00FB25  6C                 	db	108	;'l'
 10212  00FB26  65                 	db	101	;'e'
 10213  00FB27  64                 	db	100	;'d'
 10214  00FB28  0A                 	db	10
 10215  00FB29  0D                 	db	13
 10216  00FB2A  00                 	db	0
 10217  00FB2B                     STR_161:
 10218  00FB2B  44                 	db	68	;'D'
 10219  00FB2C  72                 	db	114	;'r'
 10220  00FB2D  65                 	db	101	;'e'
 10221  00FB2E  77                 	db	119	;'w'
 10222  00FB2F  20                 	db	32
 10223  00FB30  4D                 	db	77	;'M'
 10224  00FB31  61                 	db	97	;'a'
 10225  00FB32  61                 	db	97	;'a'
 10226  00FB33  74                 	db	116	;'t'
 10227  00FB34  6D                 	db	109	;'m'
 10228  00FB35  61                 	db	97	;'a'
 10229  00FB36  6E                 	db	110	;'n'
 10230  00FB37  20                 	db	32
 10231  00FB38  61                 	db	97	;'a'
 10232  00FB39  6E                 	db	110	;'n'
 10233  00FB3A  64                 	db	100	;'d'
 10234  00FB3B  20                 	db	32
 10235  00FB3C  47                 	db	71	;'G'
 10236  00FB3D  61                 	db	97	;'a'
 10237  00FB3E  62                 	db	98	;'b'
 10238  00FB3F  65                 	db	101	;'e'
 10239  00FB40  20                 	db	32
 10240  00FB41  54                 	db	84	;'T'
 10241  00FB42  68                 	db	104	;'h'
 10242  00FB43  61                 	db	97	;'a'
 10243  00FB44  6C                 	db	108	;'l'
 10244  00FB45  6A                 	db	106	;'j'
 10245  00FB46  69                 	db	105	;'i'
 10246  00FB47  0A                 	db	10
 10247  00FB48  0D                 	db	13
 10248  00FB49  00                 	db	0
 10249  00FB4A                     STR_156:
 10250  00FB4A  55                 	db	85	;'U'
 10251  00FB4B  73                 	db	115	;'s'
 10252  00FB4C  65                 	db	101	;'e'
 10253  00FB4D  72                 	db	114	;'r'
 10254  00FB4E  20                 	db	32
 10255  00FB4F  69                 	db	105	;'i'
 10256  00FB50  6E                 	db	110	;'n'
 10257  00FB51  70                 	db	112	;'p'
 10258  00FB52  75                 	db	117	;'u'
 10259  00FB53  74                 	db	116	;'t'
 10260  00FB54  20                 	db	32
 10261  00FB55  61                 	db	97	;'a'
 10262  00FB56  70                 	db	112	;'p'
 10263  00FB57  70                 	db	112	;'p'
 10264  00FB58  65                 	db	101	;'e'
 10265  00FB59  61                 	db	97	;'a'
 10266  00FB5A  72                 	db	114	;'r'
 10267  00FB5B  73                 	db	115	;'s'
 10268  00FB5C  20                 	db	32
 10269  00FB5D  69                 	db	105	;'i'
 10270  00FB5E  6E                 	db	110	;'n'
 10271  00FB5F  20                 	db	32
 10272  00FB60  77                 	db	119	;'w'
 10273  00FB61  68                 	db	104	;'h'
 10274  00FB62  69                 	db	105	;'i'
 10275  00FB63  74                 	db	116	;'t'
 10276  00FB64  65                 	db	101	;'e'
 10277  00FB65  0A                 	db	10
 10278  00FB66  0D                 	db	13
 10279  00FB67  00                 	db	0
 10280  00FB68                     STR_108:
 10281  00FB68  4C                 	db	76	;'L'
 10282  00FB69  6F                 	db	111	;'o'
 10283  00FB6A  61                 	db	97	;'a'
 10284  00FB6B  64                 	db	100	;'d'
 10285  00FB6C  20                 	db	32
 10286  00FB6D  69                 	db	105	;'i'
 10287  00FB6E  73                 	db	115	;'s'
 10288  00FB6F  20                 	db	32
 10289  00FB70  63                 	db	99	;'c'
 10290  00FB71  75                 	db	117	;'u'
 10291  00FB72  72                 	db	114	;'r'
 10292  00FB73  72                 	db	114	;'r'
 10293  00FB74  65                 	db	101	;'e'
 10294  00FB75  6E                 	db	110	;'n'
 10295  00FB76  74                 	db	116	;'t'
 10296  00FB77  6C                 	db	108	;'l'
 10297  00FB78  79                 	db	121	;'y'
 10298  00FB79  20                 	db	32
 10299  00FB7A  64                 	db	100	;'d'
 10300  00FB7B  69                 	db	105	;'i'
 10301  00FB7C  73                 	db	115	;'s'
 10302  00FB7D  61                 	db	97	;'a'
 10303  00FB7E  62                 	db	98	;'b'
 10304  00FB7F  6C                 	db	108	;'l'
 10305  00FB80  65                 	db	101	;'e'
 10306  00FB81  64                 	db	100	;'d'
 10307  00FB82  0A                 	db	10
 10308  00FB83  0D                 	db	13
 10309  00FB84  00                 	db	0
 10310  00FB85                     STR_140:
 10311  00FB85  48                 	db	72	;'H'
 10312  00FB86  65                 	db	101	;'e'
 10313  00FB87  6C                 	db	108	;'l'
 10314  00FB88  70                 	db	112	;'p'
 10315  00FB89  20                 	db	32
 10316  00FB8A  44                 	db	68	;'D'
 10317  00FB8B  65                 	db	101	;'e'
 10318  00FB8C  76                 	db	118	;'v'
 10319  00FB8D  69                 	db	105	;'i'
 10320  00FB8E  63                 	db	99	;'c'
 10321  00FB8F  65                 	db	101	;'e'
 10322  00FB90  20                 	db	32
 10323  00FB91  43                 	db	67	;'C'
 10324  00FB92  6F                 	db	111	;'o'
 10325  00FB93  6E                 	db	110	;'n'
 10326  00FB94  74                 	db	116	;'t'
 10327  00FB95  72                 	db	114	;'r'
 10328  00FB96  6F                 	db	111	;'o'
 10329  00FB97  6C                 	db	108	;'l'
 10330  00FB98  20                 	db	32
 10331  00FB99  43                 	db	67	;'C'
 10332  00FB9A  6F                 	db	111	;'o'
 10333  00FB9B  6D                 	db	109	;'m'
 10334  00FB9C  6D                 	db	109	;'m'
 10335  00FB9D  61                 	db	97	;'a'
 10336  00FB9E  6E                 	db	110	;'n'
 10337  00FB9F  64                 	db	100	;'d'
 10338  00FBA0  73                 	db	115	;'s'
 10339  00FBA1  00                 	db	0
 10340  00FBA2                     STR_146:
 10341  00FBA2  48                 	db	72	;'H'
 10342  00FBA3  65                 	db	101	;'e'
 10343  00FBA4  6C                 	db	108	;'l'
 10344  00FBA5  70                 	db	112	;'p'
 10345  00FBA6  20                 	db	32
 10346  00FBA7  4F                 	db	79	;'O'
 10347  00FBA8  75                 	db	117	;'u'
 10348  00FBA9  74                 	db	116	;'t'
 10349  00FBAA  70                 	db	112	;'p'
 10350  00FBAB  75                 	db	117	;'u'
 10351  00FBAC  74                 	db	116	;'t'
 10352  00FBAD  20                 	db	32
 10353  00FBAE  43                 	db	67	;'C'
 10354  00FBAF  6F                 	db	111	;'o'
 10355  00FBB0  6E                 	db	110	;'n'
 10356  00FBB1  74                 	db	116	;'t'
 10357  00FBB2  72                 	db	114	;'r'
 10358  00FBB3  6F                 	db	111	;'o'
 10359  00FBB4  6C                 	db	108	;'l'
 10360  00FBB5  20                 	db	32
 10361  00FBB6  43                 	db	67	;'C'
 10362  00FBB7  6F                 	db	111	;'o'
 10363  00FBB8  6D                 	db	109	;'m'
 10364  00FBB9  6D                 	db	109	;'m'
 10365  00FBBA  61                 	db	97	;'a'
 10366  00FBBB  6E                 	db	110	;'n'
 10367  00FBBC  64                 	db	100	;'d'
 10368  00FBBD  73                 	db	115	;'s'
 10369  00FBBE  00                 	db	0
 10370  00FBBF                     STR_159:
 10371  00FBBF  4D                 	db	77	;'M'
 10372  00FBC0  61                 	db	97	;'a'
 10373  00FBC1  72                 	db	114	;'r'
 10374  00FBC2  71                 	db	113	;'q'
 10375  00FBC3  75                 	db	117	;'u'
 10376  00FBC4  65                 	db	101	;'e'
 10377  00FBC5  74                 	db	116	;'t'
 10378  00FBC6  74                 	db	116	;'t'
 10379  00FBC7  65                 	db	101	;'e'
 10380  00FBC8  20                 	db	32
 10381  00FBC9  55                 	db	85	;'U'
 10382  00FBCA  6E                 	db	110	;'n'
 10383  00FBCB  69                 	db	105	;'i'
 10384  00FBCC  76                 	db	118	;'v'
 10385  00FBCD  65                 	db	101	;'e'
 10386  00FBCE  72                 	db	114	;'r'
 10387  00FBCF  73                 	db	115	;'s'
 10388  00FBD0  69                 	db	105	;'i'
 10389  00FBD1  74                 	db	116	;'t'
 10390  00FBD2  79                 	db	121	;'y'
 10391  00FBD3  20                 	db	32
 10392  00FBD4  45                 	db	69	;'E'
 10393  00FBD5  45                 	db	69	;'E'
 10394  00FBD6  43                 	db	67	;'C'
 10395  00FBD7  45                 	db	69	;'E'
 10396  00FBD8  0A                 	db	10
 10397  00FBD9  0D                 	db	13
 10398  00FBDA  00                 	db	0
 10399  00FBDB                     STR_107:
 10400  00FBDB  4C                 	db	76	;'L'
 10401  00FBDC  6F                 	db	111	;'o'
 10402  00FBDD  61                 	db	97	;'a'
 10403  00FBDE  64                 	db	100	;'d'
 10404  00FBDF  20                 	db	32
 10405  00FBE0  69                 	db	105	;'i'
 10406  00FBE1  73                 	db	115	;'s'
 10407  00FBE2  20                 	db	32
 10408  00FBE3  63                 	db	99	;'c'
 10409  00FBE4  75                 	db	117	;'u'
 10410  00FBE5  72                 	db	114	;'r'
 10411  00FBE6  72                 	db	114	;'r'
 10412  00FBE7  65                 	db	101	;'e'
 10413  00FBE8  6E                 	db	110	;'n'
 10414  00FBE9  74                 	db	116	;'t'
 10415  00FBEA  6C                 	db	108	;'l'
 10416  00FBEB  79                 	db	121	;'y'
 10417  00FBEC  20                 	db	32
 10418  00FBED  65                 	db	101	;'e'
 10419  00FBEE  6E                 	db	110	;'n'
 10420  00FBEF  61                 	db	97	;'a'
 10421  00FBF0  62                 	db	98	;'b'
 10422  00FBF1  6C                 	db	108	;'l'
 10423  00FBF2  65                 	db	101	;'e'
 10424  00FBF3  64                 	db	100	;'d'
 10425  00FBF4  0A                 	db	10
 10426  00FBF5  0D                 	db	13
 10427  00FBF6  00                 	db	0
 10428  00FBF7                     STR_172:
 10429  00FBF7  52                 	db	82	;'R'
 10430  00FBF8  45                 	db	69	;'E'
 10431  00FBF9  53                 	db	83	;'S'
 10432  00FBFA  45                 	db	69	;'E'
 10433  00FBFB  54                 	db	84	;'T'
 10434  00FBFC  20                 	db	32
 10435  00FBFD  49                 	db	73	;'I'
 10436  00FBFE  6E                 	db	110	;'n'
 10437  00FBFF  73                 	db	115	;'s'
 10438  00FC00  74                 	db	116	;'t'
 10439  00FC01  72                 	db	114	;'r'
 10440  00FC02  75                 	db	117	;'u'
 10441  00FC03  63                 	db	99	;'c'
 10442  00FC04  74                 	db	116	;'t'
 10443  00FC05  69                 	db	105	;'i'
 10444  00FC06  6F                 	db	111	;'o'
 10445  00FC07  6E                 	db	110	;'n'
 10446  00FC08  20                 	db	32
 10447  00FC09  45                 	db	69	;'E'
 10448  00FC0A  78                 	db	120	;'x'
 10449  00FC0B  65                 	db	101	;'e'
 10450  00FC0C  63                 	db	99	;'c'
 10451  00FC0D  75                 	db	117	;'u'
 10452  00FC0E  74                 	db	116	;'t'
 10453  00FC0F  65                 	db	101	;'e'
 10454  00FC10  64                 	db	100	;'d'
 10455  00FC11  00                 	db	0
 10456  00FC12                     STR_83:
 10457  00FC12  4D                 	db	77	;'M'
 10458  00FC13  65                 	db	101	;'e'
 10459  00FC14  61                 	db	97	;'a'
 10460  00FC15  73                 	db	115	;'s'
 10461  00FC16  75                 	db	117	;'u'
 10462  00FC17  72                 	db	114	;'r'
 10463  00FC18  65                 	db	101	;'e'
 10464  00FC19  20                 	db	32
 10465  00FC1A  44                 	db	68	;'D'
 10466  00FC1B  65                 	db	101	;'e'
 10467  00FC1C  74                 	db	116	;'t'
 10468  00FC1D  65                 	db	101	;'e'
 10469  00FC1E  63                 	db	99	;'c'
 10470  00FC1F  74                 	db	116	;'t'
 10471  00FC20  65                 	db	101	;'e'
 10472  00FC21  64                 	db	100	;'d'
 10473  00FC22  20                 	db	32
 10474  00FC23  43                 	db	67	;'C'
 10475  00FC24  75                 	db	117	;'u'
 10476  00FC25  72                 	db	114	;'r'
 10477  00FC26  72                 	db	114	;'r'
 10478  00FC27  65                 	db	101	;'e'
 10479  00FC28  6E                 	db	110	;'n'
 10480  00FC29  74                 	db	116	;'t'
 10481  00FC2A  3F                 	db	63	;'?'
 10482  00FC2B  00                 	db	0
 10483  00FC2C                     STR_114:
 10484  00FC2C  4C                 	db	76	;'L'
 10485  00FC2D  6F                 	db	111	;'o'
 10486  00FC2E  61                 	db	97	;'a'
 10487  00FC2F  64                 	db	100	;'d'
 10488  00FC30  20                 	db	32
 10489  00FC31  68                 	db	104	;'h'
 10490  00FC32  61                 	db	97	;'a'
 10491  00FC33  73                 	db	115	;'s'
 10492  00FC34  20                 	db	32
 10493  00FC35  62                 	db	98	;'b'
 10494  00FC36  65                 	db	101	;'e'
 10495  00FC37  65                 	db	101	;'e'
 10496  00FC38  6E                 	db	110	;'n'
 10497  00FC39  20                 	db	32
 10498  00FC3A  64                 	db	100	;'d'
 10499  00FC3B  69                 	db	105	;'i'
 10500  00FC3C  73                 	db	115	;'s'
 10501  00FC3D  61                 	db	97	;'a'
 10502  00FC3E  62                 	db	98	;'b'
 10503  00FC3F  6C                 	db	108	;'l'
 10504  00FC40  65                 	db	101	;'e'
 10505  00FC41  64                 	db	100	;'d'
 10506  00FC42  0A                 	db	10
 10507  00FC43  0D                 	db	13
 10508  00FC44  00                 	db	0
 10509  00FC45                     STR_115:
 10510  00FC45  53                 	db	83	;'S'
 10511  00FC46  65                 	db	101	;'e'
 10512  00FC47  74                 	db	116	;'t'
 10513  00FC48  20                 	db	32
 10514  00FC49  44                 	db	68	;'D'
 10515  00FC4A  69                 	db	105	;'i'
 10516  00FC4B  6D                 	db	109	;'m'
 10517  00FC4C  6D                 	db	109	;'m'
 10518  00FC4D  69                 	db	105	;'i'
 10519  00FC4E  6E                 	db	110	;'n'
 10520  00FC4F  67                 	db	103	;'g'
 10521  00FC50  20                 	db	32
 10522  00FC51  50                 	db	80	;'P'
 10523  00FC52  65                 	db	101	;'e'
 10524  00FC53  72                 	db	114	;'r'
 10525  00FC54  63                 	db	99	;'c'
 10526  00FC55  65                 	db	101	;'e'
 10527  00FC56  6E                 	db	110	;'n'
 10528  00FC57  74                 	db	116	;'t'
 10529  00FC58  61                 	db	97	;'a'
 10530  00FC59  67                 	db	103	;'g'
 10531  00FC5A  65                 	db	101	;'e'
 10532  00FC5B  3A                 	db	58	;':'
 10533  00FC5C  20                 	db	32
 10534  00FC5D  00                 	db	0
 10535  00FC5E                     STR_70:
 10536  00FC5E  4E                 	db	78	;'N'
 10537  00FC5F  6F                 	db	111	;'o'
 10538  00FC60  20                 	db	32
 10539  00FC61  41                 	db	65	;'A'
 10540  00FC62  44                 	db	68	;'D'
 10541  00FC63  43                 	db	67	;'C'
 10542  00FC64  20                 	db	32
 10543  00FC65  45                 	db	69	;'E'
 10544  00FC66  72                 	db	114	;'r'
 10545  00FC67  72                 	db	114	;'r'
 10546  00FC68  6F                 	db	111	;'o'
 10547  00FC69  72                 	db	114	;'r'
 10548  00FC6A  20                 	db	32
 10549  00FC6B  64                 	db	100	;'d'
 10550  00FC6C  65                 	db	101	;'e'
 10551  00FC6D  74                 	db	116	;'t'
 10552  00FC6E  65                 	db	101	;'e'
 10553  00FC6F  63                 	db	99	;'c'
 10554  00FC70  74                 	db	116	;'t'
 10555  00FC71  65                 	db	101	;'e'
 10556  00FC72  64                 	db	100	;'d'
 10557  00FC73  0A                 	db	10
 10558  00FC74  0D                 	db	13
 10559  00FC75  00                 	db	0
 10560  00FC76                     STR_174:
 10561  00FC76  53                 	db	83	;'S'
 10562  00FC77  74                 	db	116	;'t'
 10563  00FC78  61                 	db	97	;'a'
 10564  00FC79  63                 	db	99	;'c'
 10565  00FC7A  6B                 	db	107	;'k'
 10566  00FC7B  20                 	db	32
 10567  00FC7C  55                 	db	85	;'U'
 10568  00FC7D  6E                 	db	110	;'n'
 10569  00FC7E  64                 	db	100	;'d'
 10570  00FC7F  65                 	db	101	;'e'
 10571  00FC80  72                 	db	114	;'r'
 10572  00FC81  66                 	db	102	;'f'
 10573  00FC82  6C                 	db	108	;'l'
 10574  00FC83  6F                 	db	111	;'o'
 10575  00FC84  77                 	db	119	;'w'
 10576  00FC85  20                 	db	32
 10577  00FC86  52                 	db	82	;'R'
 10578  00FC87  65                 	db	101	;'e'
 10579  00FC88  73                 	db	115	;'s'
 10580  00FC89  65                 	db	101	;'e'
 10581  00FC8A  74                 	db	116	;'t'
 10582  00FC8B  00                 	db	0
 10583  00FC8C                     STR_67:
 10584  00FC8C  49                 	db	73	;'I'
 10585  00FC8D  6E                 	db	110	;'n'
 10586  00FC8E  74                 	db	116	;'t'
 10587  00FC8F  65                 	db	101	;'e'
 10588  00FC90  72                 	db	114	;'r'
 10589  00FC91  6E                 	db	110	;'n'
 10590  00FC92  61                 	db	97	;'a'
 10591  00FC93  6C                 	db	108	;'l'
 10592  00FC94  20                 	db	32
 10593  00FC95  46                 	db	70	;'F'
 10594  00FC96  56                 	db	86	;'V'
 10595  00FC97  52                 	db	82	;'R'
 10596  00FC98  20                 	db	32
 10597  00FC99  42                 	db	66	;'B'
 10598  00FC9A  75                 	db	117	;'u'
 10599  00FC9B  66                 	db	102	;'f'
 10600  00FC9C  66                 	db	102	;'f'
 10601  00FC9D  65                 	db	101	;'e'
 10602  00FC9E  72                 	db	114	;'r'
 10603  00FC9F  20                 	db	32
 10604  00FCA0  31                 	db	49	;'1'
 10605  00FCA1  00                 	db	0
 10606  00FCA2                     STR_173:
 10607  00FCA2  53                 	db	83	;'S'
 10608  00FCA3  74                 	db	116	;'t'
 10609  00FCA4  61                 	db	97	;'a'
 10610  00FCA5  63                 	db	99	;'c'
 10611  00FCA6  6B                 	db	107	;'k'
 10612  00FCA7  20                 	db	32
 10613  00FCA8  4F                 	db	79	;'O'
 10614  00FCA9  76                 	db	118	;'v'
 10615  00FCAA  65                 	db	101	;'e'
 10616  00FCAB  72                 	db	114	;'r'
 10617  00FCAC  66                 	db	102	;'f'
 10618  00FCAD  6C                 	db	108	;'l'
 10619  00FCAE  6F                 	db	111	;'o'
 10620  00FCAF  77                 	db	119	;'w'
 10621  00FCB0  20                 	db	32
 10622  00FCB1  52                 	db	82	;'R'
 10623  00FCB2  65                 	db	101	;'e'
 10624  00FCB3  73                 	db	115	;'s'
 10625  00FCB4  65                 	db	101	;'e'
 10626  00FCB5  74                 	db	116	;'t'
 10627  00FCB6  00                 	db	0
 10628  00FCB7                     STR_72:
 10629  00FCB7  43                 	db	67	;'C'
 10630  00FCB8  6C                 	db	108	;'l'
 10631  00FCB9  65                 	db	101	;'e'
 10632  00FCBA  61                 	db	97	;'a'
 10633  00FCBB  72                 	db	114	;'r'
 10634  00FCBC  69                 	db	105	;'i'
 10635  00FCBD  6E                 	db	110	;'n'
 10636  00FCBE  67                 	db	103	;'g'
 10637  00FCBF  20                 	db	32
 10638  00FCC0  41                 	db	65	;'A'
 10639  00FCC1  44                 	db	68	;'D'
 10640  00FCC2  43                 	db	67	;'C'
 10641  00FCC3  20                 	db	32
 10642  00FCC4  45                 	db	69	;'E'
 10643  00FCC5  72                 	db	114	;'r'
 10644  00FCC6  72                 	db	114	;'r'
 10645  00FCC7  6F                 	db	111	;'o'
 10646  00FCC8  72                 	db	114	;'r'
 10647  00FCC9  0A                 	db	10
 10648  00FCCA  0D                 	db	13
 10649  00FCCB  00                 	db	0
 10650  00FCCC                     STR_87:
 10651  00FCCC  4D                 	db	77	;'M'
 10652  00FCCD  65                 	db	101	;'e'
 10653  00FCCE  61                 	db	97	;'a'
 10654  00FCCF  73                 	db	115	;'s'
 10655  00FCD0  75                 	db	117	;'u'
 10656  00FCD1  72                 	db	114	;'r'
 10657  00FCD2  65                 	db	101	;'e'
 10658  00FCD3  20                 	db	32
 10659  00FCD4  52                 	db	82	;'R'
 10660  00FCD5  4D                 	db	77	;'M'
 10661  00FCD6  53                 	db	83	;'S'
 10662  00FCD7  20                 	db	32
 10663  00FCD8  56                 	db	86	;'V'
 10664  00FCD9  6F                 	db	111	;'o'
 10665  00FCDA  6C                 	db	108	;'l'
 10666  00FCDB  74                 	db	116	;'t'
 10667  00FCDC  61                 	db	97	;'a'
 10668  00FCDD  67                 	db	103	;'g'
 10669  00FCDE  65                 	db	101	;'e'
 10670  00FCDF  3F                 	db	63	;'?'
 10671  00FCE0  00                 	db	0
 10672  00FCE1                     STR_85:
 10673  00FCE1  4D                 	db	77	;'M'
 10674  00FCE2  65                 	db	101	;'e'
 10675  00FCE3  61                 	db	97	;'a'
 10676  00FCE4  73                 	db	115	;'s'
 10677  00FCE5  75                 	db	117	;'u'
 10678  00FCE6  72                 	db	114	;'r'
 10679  00FCE7  65                 	db	101	;'e'
 10680  00FCE8  20                 	db	32
 10681  00FCE9  52                 	db	82	;'R'
 10682  00FCEA  4D                 	db	77	;'M'
 10683  00FCEB  53                 	db	83	;'S'
 10684  00FCEC  20                 	db	32
 10685  00FCED  43                 	db	67	;'C'
 10686  00FCEE  75                 	db	117	;'u'
 10687  00FCEF  72                 	db	114	;'r'
 10688  00FCF0  72                 	db	114	;'r'
 10689  00FCF1  65                 	db	101	;'e'
 10690  00FCF2  6E                 	db	110	;'n'
 10691  00FCF3  74                 	db	116	;'t'
 10692  00FCF4  3F                 	db	63	;'?'
 10693  00FCF5  00                 	db	0
 10694  00FCF6                     STR_130:
 10695  00FCF6  4D                 	db	77	;'M'
 10696  00FCF7  61                 	db	97	;'a'
 10697  00FCF8  78                 	db	120	;'x'
 10698  00FCF9  20                 	db	32
 10699  00FCFA  50                 	db	80	;'P'
 10700  00FCFB  4F                 	db	79	;'O'
 10701  00FCFC  53                 	db	83	;'S'
 10702  00FCFD  33                 	db	51	;'3'
 10703  00FCFE  50                 	db	80	;'P'
 10704  00FCFF  33                 	db	51	;'3'
 10705  00FD00  20                 	db	32
 10706  00FD01  56                 	db	86	;'V'
 10707  00FD02  6F                 	db	111	;'o'
 10708  00FD03  6C                 	db	108	;'l'
 10709  00FD04  74                 	db	116	;'t'
 10710  00FD05  61                 	db	97	;'a'
 10711  00FD06  67                 	db	103	;'g'
 10712  00FD07  65                 	db	101	;'e'
 10713  00FD08  3F                 	db	63	;'?'
 10714  00FD09  00                 	db	0
 10715  00FD0A                     STR_169:
 10716  00FD0A  4D                 	db	77	;'M'
 10717  00FD0B  61                 	db	97	;'a'
 10718  00FD0C  73                 	db	115	;'s'
 10719  00FD0D  74                 	db	116	;'t'
 10720  00FD0E  65                 	db	101	;'e'
 10721  00FD0F  72                 	db	114	;'r'
 10722  00FD10  20                 	db	32
 10723  00FD11  43                 	db	67	;'C'
 10724  00FD12  6C                 	db	108	;'l'
 10725  00FD13  65                 	db	101	;'e'
 10726  00FD14  61                 	db	97	;'a'
 10727  00FD15  72                 	db	114	;'r'
 10728  00FD16  20                 	db	32
 10729  00FD17  52                 	db	82	;'R'
 10730  00FD18  65                 	db	101	;'e'
 10731  00FD19  73                 	db	115	;'s'
 10732  00FD1A  65                 	db	101	;'e'
 10733  00FD1B  74                 	db	116	;'t'
 10734  00FD1C  00                 	db	0
 10735  00FD1D                     STR_132:
 10736  00FD1D  4D                 	db	77	;'M'
 10737  00FD1E  61                 	db	97	;'a'
 10738  00FD1F  78                 	db	120	;'x'
 10739  00FD20  20                 	db	32
 10740  00FD21  50                 	db	80	;'P'
 10741  00FD22  4F                 	db	79	;'O'
 10742  00FD23  53                 	db	83	;'S'
 10743  00FD24  31                 	db	49	;'1'
 10744  00FD25  32                 	db	50	;'2'
 10745  00FD26  20                 	db	32
 10746  00FD27  56                 	db	86	;'V'
 10747  00FD28  6F                 	db	111	;'o'
 10748  00FD29  6C                 	db	108	;'l'
 10749  00FD2A  74                 	db	116	;'t'
 10750  00FD2B  61                 	db	97	;'a'
 10751  00FD2C  67                 	db	103	;'g'
 10752  00FD2D  65                 	db	101	;'e'
 10753  00FD2E  3F                 	db	63	;'?'
 10754  00FD2F  00                 	db	0
 10755  00FD30                     STR_77:
 10756  00FD30  4D                 	db	77	;'M'
 10757  00FD31  65                 	db	101	;'e'
 10758  00FD32  61                 	db	97	;'a'
 10759  00FD33  73                 	db	115	;'s'
 10760  00FD34  75                 	db	117	;'u'
 10761  00FD35  72                 	db	114	;'r'
 10762  00FD36  65                 	db	101	;'e'
 10763  00FD37  20                 	db	32
 10764  00FD38  44                 	db	68	;'D'
 10765  00FD39  69                 	db	105	;'i'
 10766  00FD3A  65                 	db	101	;'e'
 10767  00FD3B  20                 	db	32
 10768  00FD3C  54                 	db	84	;'T'
 10769  00FD3D  65                 	db	101	;'e'
 10770  00FD3E  6D                 	db	109	;'m'
 10771  00FD3F  70                 	db	112	;'p'
 10772  00FD40  3F                 	db	63	;'?'
 10773  00FD41  00                 	db	0
 10774  00FD42                     STR_177:
 10775  00FD42  30                 	db	48	;'0'
 10776  00FD43  31                 	db	49	;'1'
 10777  00FD44  32                 	db	50	;'2'
 10778  00FD45  33                 	db	51	;'3'
 10779  00FD46  34                 	db	52	;'4'
 10780  00FD47  35                 	db	53	;'5'
 10781  00FD48  36                 	db	54	;'6'
 10782  00FD49  37                 	db	55	;'7'
 10783  00FD4A  38                 	db	56	;'8'
 10784  00FD4B  39                 	db	57	;'9'
 10785  00FD4C  41                 	db	65	;'A'
 10786  00FD4D  42                 	db	66	;'B'
 10787  00FD4E  43                 	db	67	;'C'
 10788  00FD4F  44                 	db	68	;'D'
 10789  00FD50  45                 	db	69	;'E'
 10790  00FD51  46                 	db	70	;'F'
 10791  00FD52  00                 	db	0
 10792  00FD53                     STR_51:
 10793  00FD53  41                 	db	65	;'A'
 10794  00FD54  43                 	db	67	;'C'
 10795  00FD55  20                 	db	32
 10796  00FD56  50                 	db	80	;'P'
 10797  00FD57  6F                 	db	111	;'o'
 10798  00FD58  77                 	db	119	;'w'
 10799  00FD59  65                 	db	101	;'e'
 10800  00FD5A  72                 	db	114	;'r'
 10801  00FD5B  20                 	db	32
 10802  00FD5C  4D                 	db	77	;'M'
 10803  00FD5D  65                 	db	101	;'e'
 10804  00FD5E  74                 	db	116	;'t'
 10805  00FD5F  65                 	db	101	;'e'
 10806  00FD60  72                 	db	114	;'r'
 10807  00FD61  0A                 	db	10
 10808  00FD62  0D                 	db	13
 10809  00FD63  00                 	db	0
 10810  00FD64                     STR_109:
 10811  00FD64  44                 	db	68	;'D'
 10812  00FD65  69                 	db	105	;'i'
 10813  00FD66  6D                 	db	109	;'m'
 10814  00FD67  6D                 	db	109	;'m'
 10815  00FD68  69                 	db	105	;'i'
 10816  00FD69  6E                 	db	110	;'n'
 10817  00FD6A  67                 	db	103	;'g'
 10818  00FD6B  20                 	db	32
 10819  00FD6C  45                 	db	69	;'E'
 10820  00FD6D  6E                 	db	110	;'n'
 10821  00FD6E  61                 	db	97	;'a'
 10822  00FD6F  62                 	db	98	;'b'
 10823  00FD70  6C                 	db	108	;'l'
 10824  00FD71  65                 	db	101	;'e'
 10825  00FD72  64                 	db	100	;'d'
 10826  00FD73  3F                 	db	63	;'?'
 10827  00FD74  00                 	db	0
 10828  00FD75                     STR_136:
 10829  00FD75  4D                 	db	77	;'M'
 10830  00FD76  61                 	db	97	;'a'
 10831  00FD77  78                 	db	120	;'x'
 10832  00FD78  20                 	db	32
 10833  00FD79  46                 	db	70	;'F'
 10834  00FD7A  56                 	db	86	;'V'
 10835  00FD7B  52                 	db	82	;'R'
 10836  00FD7C  20                 	db	32
 10837  00FD7D  56                 	db	86	;'V'
 10838  00FD7E  6F                 	db	111	;'o'
 10839  00FD7F  6C                 	db	108	;'l'
 10840  00FD80  74                 	db	116	;'t'
 10841  00FD81  61                 	db	97	;'a'
 10842  00FD82  67                 	db	103	;'g'
 10843  00FD83  65                 	db	101	;'e'
 10844  00FD84  3F                 	db	63	;'?'
 10845  00FD85  00                 	db	0
 10846  00FD86                     STR_126:
 10847  00FD86  4D                 	db	77	;'M'
 10848  00FD87  61                 	db	97	;'a'
 10849  00FD88  78                 	db	120	;'x'
 10850  00FD89  20                 	db	32
 10851  00FD8A  52                 	db	82	;'R'
 10852  00FD8B  4D                 	db	77	;'M'
 10853  00FD8C  53                 	db	83	;'S'
 10854  00FD8D  20                 	db	32
 10855  00FD8E  43                 	db	67	;'C'
 10856  00FD8F  75                 	db	117	;'u'
 10857  00FD90  72                 	db	114	;'r'
 10858  00FD91  72                 	db	114	;'r'
 10859  00FD92  65                 	db	101	;'e'
 10860  00FD93  6E                 	db	110	;'n'
 10861  00FD94  74                 	db	116	;'t'
 10862  00FD95  3F                 	db	63	;'?'
 10863  00FD96  00                 	db	0
 10864  00FD97                     STR_100:
 10865  00FD97  45                 	db	69	;'E'
 10866  00FD98  6E                 	db	110	;'n'
 10867  00FD99  61                 	db	97	;'a'
 10868  00FD9A  62                 	db	98	;'b'
 10869  00FD9B  6C                 	db	108	;'l'
 10870  00FD9C  65                 	db	101	;'e'
 10871  00FD9D  20                 	db	32
 10872  00FD9E  44                 	db	68	;'D'
 10873  00FD9F  69                 	db	105	;'i'
 10874  00FDA0  6D                 	db	109	;'m'
 10875  00FDA1  6D                 	db	109	;'m'
 10876  00FDA2  69                 	db	105	;'i'
 10877  00FDA3  6E                 	db	110	;'n'
 10878  00FDA4  67                 	db	103	;'g'
 10879  00FDA5  20                 	db	32
 10880  00FDA6  59                 	db	89	;'Y'
 10881  00FDA7  00                 	db	0
 10882  00FDA8                     STR_138:
 10883  00FDA8  43                 	db	67	;'C'
 10884  00FDA9  6C                 	db	108	;'l'
 10885  00FDAA  65                 	db	101	;'e'
 10886  00FDAB  61                 	db	97	;'a'
 10887  00FDAC  72                 	db	114	;'r'
 10888  00FDAD  20                 	db	32
 10889  00FDAE  4D                 	db	77	;'M'
 10890  00FDAF  61                 	db	97	;'a'
 10891  00FDB0  78                 	db	120	;'x'
 10892  00FDB1  20                 	db	32
 10893  00FDB2  56                 	db	86	;'V'
 10894  00FDB3  61                 	db	97	;'a'
 10895  00FDB4  6C                 	db	108	;'l'
 10896  00FDB5  75                 	db	117	;'u'
 10897  00FDB6  65                 	db	101	;'e'
 10898  00FDB7  73                 	db	115	;'s'
 10899  00FDB8  00                 	db	0
 10900  00FDB9                     STR_166:
 10901  00FDB9  55                 	db	85	;'U'
 10902  00FDBA  6E                 	db	110	;'n'
 10903  00FDBB  64                 	db	100	;'d'
 10904  00FDBC  65                 	db	101	;'e'
 10905  00FDBD  66                 	db	102	;'f'
 10906  00FDBE  69                 	db	105	;'i'
 10907  00FDBF  6E                 	db	110	;'n'
 10908  00FDC0  65                 	db	101	;'e'
 10909  00FDC1  64                 	db	100	;'d'
 10910  00FDC2  20                 	db	32
 10911  00FDC3  52                 	db	82	;'R'
 10912  00FDC4  65                 	db	101	;'e'
 10913  00FDC5  73                 	db	115	;'s'
 10914  00FDC6  65                 	db	101	;'e'
 10915  00FDC7  74                 	db	116	;'t'
 10916  00FDC8  00                 	db	0
 10917  00FDC9                     STR_168:
 10918  00FDC9  42                 	db	66	;'B'
 10919  00FDCA  72                 	db	114	;'r'
 10920  00FDCB  6F                 	db	111	;'o'
 10921  00FDCC  77                 	db	119	;'w'
 10922  00FDCD  6E                 	db	110	;'n'
 10923  00FDCE  20                 	db	32
 10924  00FDCF  4F                 	db	79	;'O'
 10925  00FDD0  75                 	db	117	;'u'
 10926  00FDD1  74                 	db	116	;'t'
 10927  00FDD2  20                 	db	32
 10928  00FDD3  52                 	db	82	;'R'
 10929  00FDD4  65                 	db	101	;'e'
 10930  00FDD5  73                 	db	115	;'s'
 10931  00FDD6  65                 	db	101	;'e'
 10932  00FDD7  74                 	db	116	;'t'
 10933  00FDD8  00                 	db	0
 10934  00FDD9                     STR_73:
 10935  00FDD9  4D                 	db	77	;'M'
 10936  00FDDA  65                 	db	101	;'e'
 10937  00FDDB  61                 	db	97	;'a'
 10938  00FDDC  73                 	db	115	;'s'
 10939  00FDDD  75                 	db	117	;'u'
 10940  00FDDE  72                 	db	114	;'r'
 10941  00FDDF  65                 	db	101	;'e'
 10942  00FDE0  20                 	db	32
 10943  00FDE1  50                 	db	80	;'P'
 10944  00FDE2  4F                 	db	79	;'O'
 10945  00FDE3  53                 	db	83	;'S'
 10946  00FDE4  33                 	db	51	;'3'
 10947  00FDE5  50                 	db	80	;'P'
 10948  00FDE6  33                 	db	51	;'3'
 10949  00FDE7  3F                 	db	63	;'?'
 10950  00FDE8  00                 	db	0
 10951  00FDE9                     STR_122:
 10952  00FDE9  44                 	db	68	;'D'
 10953  00FDEA  65                 	db	101	;'e'
 10954  00FDEB  76                 	db	118	;'v'
 10955  00FDEC  69                 	db	105	;'i'
 10956  00FDED  63                 	db	99	;'c'
 10957  00FDEE  65                 	db	101	;'e'
 10958  00FDEF  20                 	db	32
 10959  00FDF0  4F                 	db	79	;'O'
 10960  00FDF1  6E                 	db	110	;'n'
 10961  00FDF2  20                 	db	32
 10962  00FDF3  54                 	db	84	;'T'
 10963  00FDF4  69                 	db	105	;'i'
 10964  00FDF5  6D                 	db	109	;'m'
 10965  00FDF6  65                 	db	101	;'e'
 10966  00FDF7  3F                 	db	63	;'?'
 10967  00FDF8  00                 	db	0
 10968  00FDF9                     STR_47:
 10969  00FDF9  43                 	db	67	;'C'
 10970  00FDFA  61                 	db	97	;'a'
 10971  00FDFB  75                 	db	117	;'u'
 10972  00FDFC  73                 	db	115	;'s'
 10973  00FDFD  65                 	db	101	;'e'
 10974  00FDFE  20                 	db	32
 10975  00FDFF  6F                 	db	111	;'o'
 10976  00FE00  66                 	db	102	;'f'
 10977  00FE01  20                 	db	32
 10978  00FE02  52                 	db	82	;'R'
 10979  00FE03  65                 	db	101	;'e'
 10980  00FE04  73                 	db	115	;'s'
 10981  00FE05  65                 	db	101	;'e'
 10982  00FE06  74                 	db	116	;'t'
 10983  00FE07  3F                 	db	63	;'?'
 10984  00FE08  00                 	db	0
 10985  00FE09                     STR_91:
 10986  00FE09  4D                 	db	77	;'M'
 10987  00FE0A  65                 	db	101	;'e'
 10988  00FE0B  61                 	db	97	;'a'
 10989  00FE0C  73                 	db	115	;'s'
 10990  00FE0D  75                 	db	117	;'u'
 10991  00FE0E  72                 	db	114	;'r'
 10992  00FE0F  65                 	db	101	;'e'
 10993  00FE10  20                 	db	32
 10994  00FE11  45                 	db	69	;'E'
 10995  00FE12  6E                 	db	110	;'n'
 10996  00FE13  65                 	db	101	;'e'
 10997  00FE14  72                 	db	114	;'r'
 10998  00FE15  67                 	db	103	;'g'
 10999  00FE16  79                 	db	121	;'y'
 11000  00FE17  3F                 	db	63	;'?'
 11001  00FE18  00                 	db	0
 11002  00FE19                     STR_102:
 11003  00FE19  44                 	db	68	;'D'
 11004  00FE1A  69                 	db	105	;'i'
 11005  00FE1B  73                 	db	115	;'s'
 11006  00FE1C  61                 	db	97	;'a'
 11007  00FE1D  62                 	db	98	;'b'
 11008  00FE1E  6C                 	db	108	;'l'
 11009  00FE1F  65                 	db	101	;'e'
 11010  00FE20  20                 	db	32
 11011  00FE21  44                 	db	68	;'D'
 11012  00FE22  69                 	db	105	;'i'
 11013  00FE23  6D                 	db	109	;'m'
 11014  00FE24  6D                 	db	109	;'m'
 11015  00FE25  69                 	db	105	;'i'
 11016  00FE26  6E                 	db	110	;'n'
 11017  00FE27  67                 	db	103	;'g'
 11018  00FE28  00                 	db	0
 11019  00FE29                     STR_71:
 11020  00FE29  43                 	db	67	;'C'
 11021  00FE2A  6C                 	db	108	;'l'
 11022  00FE2B  65                 	db	101	;'e'
 11023  00FE2C  61                 	db	97	;'a'
 11024  00FE2D  72                 	db	114	;'r'
 11025  00FE2E  20                 	db	32
 11026  00FE2F  41                 	db	65	;'A'
 11027  00FE30  44                 	db	68	;'D'
 11028  00FE31  43                 	db	67	;'C'
 11029  00FE32  20                 	db	32
 11030  00FE33  45                 	db	69	;'E'
 11031  00FE34  72                 	db	114	;'r'
 11032  00FE35  72                 	db	114	;'r'
 11033  00FE36  6F                 	db	111	;'o'
 11034  00FE37  72                 	db	114	;'r'
 11035  00FE38  00                 	db	0
 11036  00FE39                     STR_167:
 11037  00FE39  50                 	db	80	;'P'
 11038  00FE3A  6F                 	db	111	;'o'
 11039  00FE3B  77                 	db	119	;'w'
 11040  00FE3C  65                 	db	101	;'e'
 11041  00FE3D  72                 	db	114	;'r'
 11042  00FE3E  20                 	db	32
 11043  00FE3F  4F                 	db	79	;'O'
 11044  00FE40  6E                 	db	110	;'n'
 11045  00FE41  20                 	db	32
 11046  00FE42  52                 	db	82	;'R'
 11047  00FE43  65                 	db	101	;'e'
 11048  00FE44  73                 	db	115	;'s'
 11049  00FE45  65                 	db	101	;'e'
 11050  00FE46  74                 	db	116	;'t'
 11051  00FE47  00                 	db	0
 11052  00FE48                     STR_75:
 11053  00FE48  4D                 	db	77	;'M'
 11054  00FE49  65                 	db	101	;'e'
 11055  00FE4A  61                 	db	97	;'a'
 11056  00FE4B  73                 	db	115	;'s'
 11057  00FE4C  75                 	db	117	;'u'
 11058  00FE4D  72                 	db	114	;'r'
 11059  00FE4E  65                 	db	101	;'e'
 11060  00FE4F  20                 	db	32
 11061  00FE50  50                 	db	80	;'P'
 11062  00FE51  4F                 	db	79	;'O'
 11063  00FE52  53                 	db	83	;'S'
 11064  00FE53  31                 	db	49	;'1'
 11065  00FE54  32                 	db	50	;'2'
 11066  00FE55  3F                 	db	63	;'?'
 11067  00FE56  00                 	db	0
 11068  00FE57                     STR_89:
 11069  00FE57  4D                 	db	77	;'M'
 11070  00FE58  65                 	db	101	;'e'
 11071  00FE59  61                 	db	97	;'a'
 11072  00FE5A  73                 	db	115	;'s'
 11073  00FE5B  75                 	db	117	;'u'
 11074  00FE5C  72                 	db	114	;'r'
 11075  00FE5D  65                 	db	101	;'e'
 11076  00FE5E  20                 	db	32
 11077  00FE5F  50                 	db	80	;'P'
 11078  00FE60  6F                 	db	111	;'o'
 11079  00FE61  77                 	db	119	;'w'
 11080  00FE62  65                 	db	101	;'e'
 11081  00FE63  72                 	db	114	;'r'
 11082  00FE64  3F                 	db	63	;'?'
 11083  00FE65  00                 	db	0
 11084  00FE66                     STR_95:
 11085  00FE66  45                 	db	69	;'E'
 11086  00FE67  6E                 	db	110	;'n'
 11087  00FE68  61                 	db	97	;'a'
 11088  00FE69  62                 	db	98	;'b'
 11089  00FE6A  6C                 	db	108	;'l'
 11090  00FE6B  65                 	db	101	;'e'
 11091  00FE6C  20                 	db	32
 11092  00FE6D  44                 	db	68	;'D'
 11093  00FE6E  69                 	db	105	;'i'
 11094  00FE6F  6D                 	db	109	;'m'
 11095  00FE70  6D                 	db	109	;'m'
 11096  00FE71  69                 	db	105	;'i'
 11097  00FE72  6E                 	db	110	;'n'
 11098  00FE73  67                 	db	103	;'g'
 11099  00FE74  00                 	db	0
 11100  00FE75                     STR_66:
 11101  00FE75  49                 	db	73	;'I'
 11102  00FE76  6E                 	db	110	;'n'
 11103  00FE77  74                 	db	116	;'t'
 11104  00FE78  65                 	db	101	;'e'
 11105  00FE79  72                 	db	114	;'r'
 11106  00FE7A  6E                 	db	110	;'n'
 11107  00FE7B  61                 	db	97	;'a'
 11108  00FE7C  6C                 	db	108	;'l'
 11109  00FE7D  20                 	db	32
 11110  00FE7E  44                 	db	68	;'D'
 11111  00FE7F  41                 	db	65	;'A'
 11112  00FE80  43                 	db	67	;'C'
 11113  00FE81  31                 	db	49	;'1'
 11114  00FE82  00                 	db	0
 11115  00FE83                     STR_81:
 11116  00FE83  4D                 	db	77	;'M'
 11117  00FE84  65                 	db	101	;'e'
 11118  00FE85  61                 	db	97	;'a'
 11119  00FE86  73                 	db	115	;'s'
 11120  00FE87  75                 	db	117	;'u'
 11121  00FE88  72                 	db	114	;'r'
 11122  00FE89  65                 	db	101	;'e'
 11123  00FE8A  20                 	db	32
 11124  00FE8B  41                 	db	65	;'A'
 11125  00FE8C  56                 	db	86	;'V'
 11126  00FE8D  53                 	db	83	;'S'
 11127  00FE8E  53                 	db	83	;'S'
 11128  00FE8F  3F                 	db	63	;'?'
 11129  00FE90  00                 	db	0
 11130  00FE91                     STR_106:
 11131  00FE91  4C                 	db	76	;'L'
 11132  00FE92  6F                 	db	111	;'o'
 11133  00FE93  61                 	db	97	;'a'
 11134  00FE94  64                 	db	100	;'d'
 11135  00FE95  20                 	db	32
 11136  00FE96  45                 	db	69	;'E'
 11137  00FE97  6E                 	db	110	;'n'
 11138  00FE98  61                 	db	97	;'a'
 11139  00FE99  62                 	db	98	;'b'
 11140  00FE9A  6C                 	db	108	;'l'
 11141  00FE9B  65                 	db	101	;'e'
 11142  00FE9C  64                 	db	100	;'d'
 11143  00FE9D  3F                 	db	63	;'?'
 11144  00FE9E  00                 	db	0
 11145  00FE9F                     STR_124:
 11146  00FE9F  4C                 	db	76	;'L'
 11147  00FEA0  6F                 	db	111	;'o'
 11148  00FEA1  61                 	db	97	;'a'
 11149  00FEA2  64                 	db	100	;'d'
 11150  00FEA3  20                 	db	32
 11151  00FEA4  4F                 	db	79	;'O'
 11152  00FEA5  6E                 	db	110	;'n'
 11153  00FEA6  20                 	db	32
 11154  00FEA7  54                 	db	84	;'T'
 11155  00FEA8  69                 	db	105	;'i'
 11156  00FEA9  6D                 	db	109	;'m'
 11157  00FEAA  65                 	db	101	;'e'
 11158  00FEAB  3F                 	db	63	;'?'
 11159  00FEAC  00                 	db	0
 11160  00FEAD                     STR_134:
 11161  00FEAD  4D                 	db	77	;'M'
 11162  00FEAE  61                 	db	97	;'a'
 11163  00FEAF  78                 	db	120	;'x'
 11164  00FEB0  20                 	db	32
 11165  00FEB1  44                 	db	68	;'D'
 11166  00FEB2  69                 	db	105	;'i'
 11167  00FEB3  65                 	db	101	;'e'
 11168  00FEB4  20                 	db	32
 11169  00FEB5  54                 	db	84	;'T'
 11170  00FEB6  65                 	db	101	;'e'
 11171  00FEB7  6D                 	db	109	;'m'
 11172  00FEB8  70                 	db	112	;'p'
 11173  00FEB9  3F                 	db	63	;'?'
 11174  00FEBA  00                 	db	0
 11175  00FEBB                     STR_64:
 11176  00FEBB  49                 	db	73	;'I'
 11177  00FEBC  6E                 	db	110	;'n'
 11178  00FEBD  74                 	db	116	;'t'
 11179  00FEBE  65                 	db	101	;'e'
 11180  00FEBF  72                 	db	114	;'r'
 11181  00FEC0  6E                 	db	110	;'n'
 11182  00FEC1  61                 	db	97	;'a'
 11183  00FEC2  6C                 	db	108	;'l'
 11184  00FEC3  20                 	db	32
 11185  00FEC4  41                 	db	65	;'A'
 11186  00FEC5  56                 	db	86	;'V'
 11187  00FEC6  53                 	db	83	;'S'
 11188  00FEC7  53                 	db	83	;'S'
 11189  00FEC8  00                 	db	0
 11190  00FEC9                     STR_65:
 11191  00FEC9  49                 	db	73	;'I'
 11192  00FECA  6E                 	db	110	;'n'
 11193  00FECB  74                 	db	116	;'t'
 11194  00FECC  65                 	db	101	;'e'
 11195  00FECD  72                 	db	114	;'r'
 11196  00FECE  6E                 	db	110	;'n'
 11197  00FECF  61                 	db	97	;'a'
 11198  00FED0  6C                 	db	108	;'l'
 11199  00FED1  20                 	db	32
 11200  00FED2  54                 	db	84	;'T'
 11201  00FED3  65                 	db	101	;'e'
 11202  00FED4  6D                 	db	109	;'m'
 11203  00FED5  70                 	db	112	;'p'
 11204  00FED6  00                 	db	0
 11205  00FED7                     STR_164:
 11206  00FED7  50                 	db	80	;'P'
 11207  00FED8  49                 	db	73	;'I'
 11208  00FED9  43                 	db	67	;'C'
 11209  00FEDA  31                 	db	49	;'1'
 11210  00FEDB  38                 	db	56	;'8'
 11211  00FEDC  4C                 	db	76	;'L'
 11212  00FEDD  46                 	db	70	;'F'
 11213  00FEDE  36                 	db	54	;'6'
 11214  00FEDF  37                 	db	55	;'7'
 11215  00FEE0  4B                 	db	75	;'K'
 11216  00FEE1  34                 	db	52	;'4'
 11217  00FEE2  30                 	db	48	;'0'
 11218  00FEE3  00                 	db	0
 11219  00FEE4                     STR_162:
 11220  00FEE4  50                 	db	80	;'P'
 11221  00FEE5  53                 	db	83	;'S'
 11222  00FEE6  4F                 	db	79	;'O'
 11223  00FEE7  43                 	db	67	;'C'
 11224  00FEE8  73                 	db	115	;'s'
 11225  00FEE9  20                 	db	32
 11226  00FEEA  53                 	db	83	;'S'
 11227  00FEEB  55                 	db	85	;'U'
 11228  00FEEC  43                 	db	67	;'C'
 11229  00FEED  4B                 	db	75	;'K'
 11230  00FEEE  0A                 	db	10
 11231  00FEEF  0D                 	db	13
 11232  00FEF0  00                 	db	0
 11233  00FEF1                     STR_55:
 11234  00FEF1  52                 	db	82	;'R'
 11235  00FEF2  65                 	db	101	;'e'
 11236  00FEF3  76                 	db	118	;'v'
 11237  00FEF4  69                 	db	105	;'i'
 11238  00FEF5  73                 	db	115	;'s'
 11239  00FEF6  69                 	db	105	;'i'
 11240  00FEF7  6F                 	db	111	;'o'
 11241  00FEF8  6E                 	db	110	;'n'
 11242  00FEF9  20                 	db	32
 11243  00FEFA  49                 	db	73	;'I'
 11244  00FEFB  44                 	db	68	;'D'
 11245  00FEFC  3F                 	db	63	;'?'
 11246  00FEFD  00                 	db	0
 11247  00FEFE                     STR_79:
 11248  00FEFE  4D                 	db	77	;'M'
 11249  00FEFF  65                 	db	101	;'e'
 11250  00FF00  61                 	db	97	;'a'
 11251  00FF01  73                 	db	115	;'s'
 11252  00FF02  75                 	db	117	;'u'
 11253  00FF03  72                 	db	114	;'r'
 11254  00FF04  65                 	db	101	;'e'
 11255  00FF05  20                 	db	32
 11256  00FF06  46                 	db	70	;'F'
 11257  00FF07  56                 	db	86	;'V'
 11258  00FF08  52                 	db	82	;'R'
 11259  00FF09  3F                 	db	63	;'?'
 11260  00FF0A  00                 	db	0
 11261  00FF0B                     STR_113:
 11262  00FF0B  44                 	db	68	;'D'
 11263  00FF0C  69                 	db	105	;'i'
 11264  00FF0D  73                 	db	115	;'s'
 11265  00FF0E  61                 	db	97	;'a'
 11266  00FF0F  62                 	db	98	;'b'
 11267  00FF10  6C                 	db	108	;'l'
 11268  00FF11  65                 	db	101	;'e'
 11269  00FF12  20                 	db	32
 11270  00FF13  4C                 	db	76	;'L'
 11271  00FF14  6F                 	db	111	;'o'
 11272  00FF15  61                 	db	97	;'a'
 11273  00FF16  64                 	db	100	;'d'
 11274  00FF17  00                 	db	0
 11275  00FF18                     STR_93:
 11276  00FF18  43                 	db	67	;'C'
 11277  00FF19  6C                 	db	108	;'l'
 11278  00FF1A  65                 	db	101	;'e'
 11279  00FF1B  61                 	db	97	;'a'
 11280  00FF1C  72                 	db	114	;'r'
 11281  00FF1D  20                 	db	32
 11282  00FF1E  45                 	db	69	;'E'
 11283  00FF1F  6E                 	db	110	;'n'
 11284  00FF20  65                 	db	101	;'e'
 11285  00FF21  72                 	db	114	;'r'
 11286  00FF22  67                 	db	103	;'g'
 11287  00FF23  79                 	db	121	;'y'
 11288  00FF24  00                 	db	0
 11289  00FF25                     STR_163:
 11290  00FF25  50                 	db	80	;'P'
 11291  00FF26  49                 	db	73	;'I'
 11292  00FF27  43                 	db	67	;'C'
 11293  00FF28  31                 	db	49	;'1'
 11294  00FF29  38                 	db	56	;'8'
 11295  00FF2A  46                 	db	70	;'F'
 11296  00FF2B  36                 	db	54	;'6'
 11297  00FF2C  37                 	db	55	;'7'
 11298  00FF2D  4B                 	db	75	;'K'
 11299  00FF2E  34                 	db	52	;'4'
 11300  00FF2F  30                 	db	48	;'0'
 11301  00FF30  00                 	db	0
 11302  00FF31                     STR_104:
 11303  00FF31  45                 	db	69	;'E'
 11304  00FF32  6E                 	db	110	;'n'
 11305  00FF33  61                 	db	97	;'a'
 11306  00FF34  62                 	db	98	;'b'
 11307  00FF35  6C                 	db	108	;'l'
 11308  00FF36  65                 	db	101	;'e'
 11309  00FF37  20                 	db	32
 11310  00FF38  4C                 	db	76	;'L'
 11311  00FF39  6F                 	db	111	;'o'
 11312  00FF3A  61                 	db	97	;'a'
 11313  00FF3B  64                 	db	100	;'d'
 11314  00FF3C  00                 	db	0
 11315  00FF3D                     STR_53:
 11316  00FF3D  44                 	db	68	;'D'
 11317  00FF3E  65                 	db	101	;'e'
 11318  00FF3F  76                 	db	118	;'v'
 11319  00FF40  69                 	db	105	;'i'
 11320  00FF41  63                 	db	99	;'c'
 11321  00FF42  65                 	db	101	;'e'
 11322  00FF43  20                 	db	32
 11323  00FF44  49                 	db	73	;'I'
 11324  00FF45  44                 	db	68	;'D'
 11325  00FF46  3F                 	db	63	;'?'
 11326  00FF47  00                 	db	0
 11327  00FF48                     STR_128:
 11328  00FF48  4D                 	db	77	;'M'
 11329  00FF49  61                 	db	97	;'a'
 11330  00FF4A  78                 	db	120	;'x'
 11331  00FF4B  20                 	db	32
 11332  00FF4C  50                 	db	80	;'P'
 11333  00FF4D  6F                 	db	111	;'o'
 11334  00FF4E  77                 	db	119	;'w'
 11335  00FF4F  65                 	db	101	;'e'
 11336  00FF50  72                 	db	114	;'r'
 11337  00FF51  3F                 	db	63	;'?'
 11338  00FF52  00                 	db	0
 11339  00FF53                     STR_60:
 11340  00FF53  41                 	db	65	;'A'
 11341  00FF54  44                 	db	68	;'D'
 11342  00FF55  43                 	db	67	;'C'
 11343  00FF56  20                 	db	32
 11344  00FF57  45                 	db	69	;'E'
 11345  00FF58  72                 	db	114	;'r'
 11346  00FF59  72                 	db	114	;'r'
 11347  00FF5A  6F                 	db	111	;'o'
 11348  00FF5B  72                 	db	114	;'r'
 11349  00FF5C  3F                 	db	63	;'?'
 11350  00FF5D  00                 	db	0
 11351  00FF5E                     STR_157:
 11352  00FF5E  45                 	db	69	;'E'
 11353  00FF5F  61                 	db	97	;'a'
 11354  00FF60  73                 	db	115	;'s'
 11355  00FF61  74                 	db	116	;'t'
 11356  00FF62  65                 	db	101	;'e'
 11357  00FF63  72                 	db	114	;'r'
 11358  00FF64  20                 	db	32
 11359  00FF65  45                 	db	69	;'E'
 11360  00FF66  67                 	db	103	;'g'
 11361  00FF67  67                 	db	103	;'g'
 11362  00FF68  00                 	db	0
 11363  00FF69                     STR_57:
 11364  00FF69  55                 	db	85	;'U'
 11365  00FF6A  73                 	db	115	;'s'
 11366  00FF6B  65                 	db	101	;'e'
 11367  00FF6C  72                 	db	114	;'r'
 11368  00FF6D  20                 	db	32
 11369  00FF6E  49                 	db	73	;'I'
 11370  00FF6F  44                 	db	68	;'D'
 11371  00FF70  73                 	db	115	;'s'
 11372  00FF71  3F                 	db	63	;'?'
 11373  00FF72  00                 	db	0
 11374  00FF73                     STR_68:
 11375  00FF73  55                 	db	85	;'U'
 11376  00FF74  6E                 	db	110	;'n'
 11377  00FF75  64                 	db	100	;'d'
 11378  00FF76  65                 	db	101	;'e'
 11379  00FF77  66                 	db	102	;'f'
 11380  00FF78  69                 	db	105	;'i'
 11381  00FF79  6E                 	db	110	;'n'
 11382  00FF7A  65                 	db	101	;'e'
 11383  00FF7B  64                 	db	100	;'d'
 11384  00FF7C  00                 	db	0
 11385  00FF7D                     STR_148:
 11386  00FF7D  48                 	db	72	;'H'
 11387  00FF7E  65                 	db	101	;'e'
 11388  00FF7F  6C                 	db	108	;'l'
 11389  00FF80  70                 	db	112	;'p'
 11390  00FF81  20                 	db	32
 11391  00FF82  41                 	db	65	;'A'
 11392  00FF83  6C                 	db	108	;'l'
 11393  00FF84  6C                 	db	108	;'l'
 11394  00FF85  00                 	db	0
 11395  00FF86                     STR_176:
 11396  00FF86  28                 	db	40
 11397  00FF87  6E                 	db	110	;'n'
 11398  00FF88  75                 	db	117	;'u'
 11399  00FF89  6C                 	db	108	;'l'
 11400  00FF8A  6C                 	db	108	;'l'
 11401  00FF8B  29                 	db	41
 11402  00FF8C  00                 	db	0
 11403  00FF8D                     STR_63:
 11404  00FF8D  50                 	db	80	;'P'
 11405  00FF8E  4F                 	db	79	;'O'
 11406  00FF8F  53                 	db	83	;'S'
 11407  00FF90  33                 	db	51	;'3'
 11408  00FF91  50                 	db	80	;'P'
 11409  00FF92  33                 	db	51	;'3'
 11410  00FF93  00                 	db	0
 11411  00FF94                     STR_62:
 11412  00FF94  50                 	db	80	;'P'
 11413  00FF95  4F                 	db	79	;'O'
 11414  00FF96  53                 	db	83	;'S'
 11415  00FF97  31                 	db	49	;'1'
 11416  00FF98  32                 	db	50	;'2'
 11417  00FF99  00                 	db	0
 11418  00FF9A                     STR_49:
 11419  00FF9A  2A                 	db	42
 11420  00FF9B  49                 	db	73	;'I'
 11421  00FF9C  44                 	db	68	;'D'
 11422  00FF9D  4E                 	db	78	;'N'
 11423  00FF9E  3F                 	db	63	;'?'
 11424  00FF9F  00                 	db	0
 11425  00FFA0                     STR_44:
 11426  00FFA0  43                 	db	67	;'C'
 11427  00FFA1  6C                 	db	108	;'l'
 11428  00FFA2  65                 	db	101	;'e'
 11429  00FFA3  61                 	db	97	;'a'
 11430  00FFA4  72                 	db	114	;'r'
 11431  00FFA5  00                 	db	0
 11432  00FFA6                     STR_61:
 11433  00FFA6  49                 	db	73	;'I'
 11434  00FFA7  53                 	db	83	;'S'
 11435  00FFA8  4E                 	db	78	;'N'
 11436  00FFA9  53                 	db	83	;'S'
 11437  00FFAA  00                 	db	0
 11438  00FFAB                     STR_150:
 11439  00FFAB  48                 	db	72	;'H'
 11440  00FFAC  65                 	db	101	;'e'
 11441  00FFAD  6C                 	db	108	;'l'
 11442  00FFAE  70                 	db	112	;'p'
 11443  00FFAF  00                 	db	0
 11444  00FFB0                     STR_2:
 11445  00FFB0  1B                 	db	27
 11446  00FFB1  5B                 	db	91	;'['
 11447  00FFB2  32                 	db	50	;'2'
 11448  00FFB3  4A                 	db	74	;'J'
 11449  00FFB4  00                 	db	0
 11450  00FFB5                     STR_50:
 11451  00FFB5  49                 	db	73	;'I'
 11452  00FFB6  44                 	db	68	;'D'
 11453  00FFB7  4E                 	db	78	;'N'
 11454  00FFB8  00                 	db	0
 11455  00FFB9                     STR_3:
 11456  00FFB9  1B                 	db	27
 11457  00FFBA  5B                 	db	91	;'['
 11458  00FFBB  48                 	db	72	;'H'
 11459  00FFBC  00                 	db	0
 11460  00FFBD  1B                 	db	27
 11461  00FFBE  5B                 	db	91	;'['
 11462  00FFBF  73                 	db	115	;'s'
 11463  00FFC0  00                 	db	0
 11464  00FFC1  1B                 	db	27
 11465  00FFC2  5B                 	db	91	;'['
 11466  00FFC3  75                 	db	117	;'u'
 11467  00FFC4  00                 	db	0
 11468  00FFC5                     STR_1:
 11469  00FFC5  1B                 	db	27
 11470  00FFC6  5B                 	db	91	;'['
 11471  00FFC7  4B                 	db	75	;'K'
 11472  00FFC8  00                 	db	0
 11473  00FFC9                     STR_20:
 11474  00FFC9  33                 	db	51	;'3'
 11475  00FFCA  30                 	db	48	;'0'
 11476  00FFCB  00                 	db	0
 11477  00FFCC                     STR_21:
 11478  00FFCC  33                 	db	51	;'3'
 11479  00FFCD  31                 	db	49	;'1'
 11480  00FFCE  00                 	db	0
 11481  00FFCF                     STR_31:
 11482  00FFCF  34                 	db	52	;'4'
 11483  00FFD0  31                 	db	49	;'1'
 11484  00FFD1  00                 	db	0
 11485  00FFD2                     STR_22:
 11486  00FFD2  33                 	db	51	;'3'
 11487  00FFD3  32                 	db	50	;'2'
 11488  00FFD4  00                 	db	0
 11489  00FFD5                     STR_32:
 11490  00FFD5  34                 	db	52	;'4'
 11491  00FFD6  32                 	db	50	;'2'
 11492  00FFD7  00                 	db	0
 11493  00FFD8                     STR_23:
 11494  00FFD8  33                 	db	51	;'3'
 11495  00FFD9  33                 	db	51	;'3'
 11496  00FFDA  00                 	db	0
 11497  00FFDB                     STR_33:
 11498  00FFDB  34                 	db	52	;'4'
 11499  00FFDC  33                 	db	51	;'3'
 11500  00FFDD  00                 	db	0
 11501  00FFDE                     STR_24:
 11502  00FFDE  33                 	db	51	;'3'
 11503  00FFDF  34                 	db	52	;'4'
 11504  00FFE0  00                 	db	0
 11505  00FFE1                     STR_34:
 11506  00FFE1  34                 	db	52	;'4'
 11507  00FFE2  34                 	db	52	;'4'
 11508  00FFE3  00                 	db	0
 11509  00FFE4                     STR_25:
 11510  00FFE4  33                 	db	51	;'3'
 11511  00FFE5  35                 	db	53	;'5'
 11512  00FFE6  00                 	db	0
 11513  00FFE7                     STR_35:
 11514  00FFE7  34                 	db	52	;'4'
 11515  00FFE8  35                 	db	53	;'5'
 11516  00FFE9  00                 	db	0
 11517  00FFEA                     STR_26:
 11518  00FFEA  33                 	db	51	;'3'
 11519  00FFEB  36                 	db	54	;'6'
 11520  00FFEC  00                 	db	0
 11521  00FFED                     STR_36:
 11522  00FFED  34                 	db	52	;'4'
 11523  00FFEE  36                 	db	54	;'6'
 11524  00FFEF  00                 	db	0
 11525  00FFF0                     STR_27:
 11526  00FFF0  33                 	db	51	;'3'
 11527  00FFF1  37                 	db	55	;'7'
 11528  00FFF2  00                 	db	0
 11529  00FFF3                     STR_37:
 11530  00FFF3  34                 	db	52	;'4'
 11531  00FFF4  37                 	db	55	;'7'
 11532  00FFF5  00                 	db	0
 11533  00FFF6                     STR_11:
 11534  00FFF6  1B                 	db	27
 11535  00FFF7  5B                 	db	91	;'['
 11536  00FFF8  00                 	db	0
 11537  00FFF9                     STR_17:
 11538  00FFF9  38                 	db	56	;'8'
 11539  00FFFA  00                 	db	0
 11540  00FFFB                     STR_19:
 11541  00FFFB  3B                 	db	59	;';'
 11542  00FFFC  00                 	db	0
 11543  00FFFD                     STR_39:
 11544  00FFFD  6D                 	db	109	;'m'
 11545  00FFFE  00                 	db	0
 11546  0000                     
 11547                           ; #config settings
 11548  00FFFF  00                 	db	0	; dummy byte at the end
 11549  0000                     
 11550                           	psect	nvBANK2
 11551  0002FD                     __pnvBANK2:
 11552                           	opt stack 0
 11553  0002FD                     _reset_cause:
 11554                           	opt stack 0
 11555  0002FD                     	ds	1
 11556  0000                     _INT0PPS	set	3568
 11557  0000                     _HLVDCON0bits	set	3778
 11558  0000                     _HLVDCON0	set	3778
 11559  0000                     _HLVDCON1	set	3779
 11560  0000                     _PIR8bits	set	3643
 11561  0000                     _FVRCONbits	set	3780
 11562  0000                     _FVRCON	set	3780
 11563  0000                     _RC2REG	set	3825
 11564  0000                     _RC2STAbits	set	3829
 11565  0000                     _TX2REG	set	3826
 11566  0000                     _TX2STAbits	set	3830
 11567  0000                     _SP2BRGH	set	3828
 11568  0000                     _SP2BRGL	set	3827
 11569  0000                     _TX2STA	set	3830
 11570  0000                     _RC2STA	set	3829
 11571  0000                     _BAUD2CON	set	3831
 11572  0000                     _PIR1bits	set	3636
 11573  0000                     _PIE1bits	set	3626
 11574  0000                     _PIR3bits	set	3638
 11575  0000                     _PIE3bits	set	3628
 11576  0000                     _PIR0bits	set	3635
 11577  0000                     _PIE0bits	set	3625
 11578  0000                     _PIR2bits	set	3637
 11579  0000                     _PIE2bits	set	3627
 11580  0000                     _PIR5bits	set	3640
 11581  0000                     _PIE5bits	set	3630
 11582  0000                     _IPR1bits	set	3616
 11583  0000                     _IPR3bits	set	3618
 11584  0000                     _IPR0bits	set	3615
 11585  0000                     _IPR2bits	set	3617
 11586  0000                     _IPR5bits	set	3620
 11587  0000                     _RX2PPS	set	3601
 11588  0000                     _RG7PPS	set	3721
 11589  0000                     _SLRCONH	set	3774
 11590  0000                     _SLRCONG	set	3769
 11591  0000                     _SLRCONF	set	3761
 11592  0000                     _SLRCONE	set	3756
 11593  0000                     _SLRCOND	set	3748
 11594  0000                     _SLRCONC	set	3743
 11595  0000                     _SLRCONB	set	3735
 11596  0000                     _SLRCONA	set	3727
 11597  0000                     _ODCOND	set	3749
 11598  0000                     _ODCONC	set	3744
 11599  0000                     _ODCONH	set	3775
 11600  0000                     _ODCONB	set	3736
 11601  0000                     _ODCONG	set	3770
 11602  0000                     _ODCONA	set	3728
 11603  0000                     _ODCONF	set	3762
 11604  0000                     _ODCONE	set	3757
 11605  0000                     _WPUH	set	3776
 11606  0000                     _WPUC	set	3745
 11607  0000                     _WPUA	set	3729
 11608  0000                     _WPUG	set	3771
 11609  0000                     _WPUB	set	3737
 11610  0000                     _WPUE	set	3758
 11611  0000                     _WPUF	set	3763
 11612  0000                     _WPUD	set	3750
 11613  0000                     _ANSELA	set	3730
 11614  0000                     _ANSELF	set	3764
 11615  0000                     _ANSELG	set	3772
 11616  0000                     _ANSELE	set	3759
 11617  0000                     _ANSELB	set	3738
 11618  0000                     _ANSELD	set	3751
 11619  0000                     _PMD5	set	3665
 11620  0000                     _PMD4	set	3664
 11621  0000                     _PMD3	set	3663
 11622  0000                     _PMD2	set	3662
 11623  0000                     _PMD1	set	3661
 11624  0000                     _PMD0	set	3660
 11625  0000                     _OSCTUNE	set	3656
 11626  0000                     _OSCFRQ	set	3657
 11627  0000                     _OSCEN	set	3655
 11628  0000                     _OSCCON3	set	3653
 11629  0000                     _OSCCON1	set	3651
 11630  0000                     _SBOREN	set	29279
 11631  0000                     _PLLR	set	29232
 11632  0000                     _T7GCONbits	set	3889
 11633  0000                     _T7CONbits	set	3888
 11634  0000                     _T7CON	set	3888
 11635  0000                     _TMR7L	set	3886
 11636  0000                     _TMR7H	set	3887
 11637  0000                     _T7CLK	set	3891
 11638  0000                     _T7GATE	set	3890
 11639  0000                     _T7GCON	set	3889
 11640  0000                     _ADCON1bits	set	3929
 11641  0000                     _ADCON2bits	set	3930
 11642  0000                     _ADPRE	set	3934
 11643  0000                     _ADCON3bits	set	3931
 11644  0000                     _ADACQ	set	3932
 11645  0000                     _ADCLK	set	3927
 11646  0000                     _ADACT	set	3926
 11647  0000                     _ADREF	set	3928
 11648  0000                     _ADCON3	set	3931
 11649  0000                     _ADCON2	set	3930
 11650  0000                     _ADCON1	set	3929
 11651  0000                     _ADCAP	set	3933
 11652  0000                     _ADPCH	set	3935
 11653  0000                     _PCON0bits	set	4055
 11654  0000                     _LATGbits	set	3967
 11655  0000                     _PR4	set	4022
 11656  0000                     _TMR4	set	4021
 11657  0000                     _T4CONbits	set	4023
 11658  0000                     _T4RSTbits	set	4026
 11659  0000                     _T4HLTbits	set	4024
 11660  0000                     _T4CON	set	4023
 11661  0000                     _T4TMR	set	4021
 11662  0000                     _T4PR	set	4022
 11663  0000                     _T4RST	set	4026
 11664  0000                     _T4HLT	set	4024
 11665  0000                     _T4CLKCON	set	4025
 11666  0000                     _NVMDAT	set	3958
 11667  0000                     _NVMADRL	set	3956
 11668  0000                     _NVMADRH	set	3957
 11669  0000                     _NVMCON2	set	3960
 11670  0000                     _TABLAT	set	4085
 11671  0000                     _TBLPTRL	set	4086
 11672  0000                     _TBLPTRH	set	4087
 11673  0000                     _TBLPTRU	set	4088
 11674  0000                     _NVMCON1bits	set	3959
 11675  0000                     _T5GCONbits	set	4036
 11676  0000                     _T5CONbits	set	4035
 11677  0000                     _T5CON	set	4035
 11678  0000                     _TMR5L	set	4033
 11679  0000                     _TMR5H	set	4034
 11680  0000                     _T5CLK	set	4038
 11681  0000                     _T5GATE	set	4037
 11682  0000                     _T5GCON	set	4036
 11683  0000                     _ADERRL	set	3950
 11684  0000                     _ADERRH	set	3951
 11685  0000                     _ADPREVL	set	3937
 11686  0000                     _ADPREVH	set	3938
 11687  0000                     _ADFLTRL	set	3954
 11688  0000                     _ADFLTRH	set	3955
 11689  0000                     _ADSTATbits	set	3941
 11690  0000                     _ADACCL	set	3952
 11691  0000                     _ADACCH	set	3953
 11692  0000                     _ADCNT	set	3943
 11693  0000                     _ADRESL	set	3939
 11694  0000                     _ADRESH	set	3940
 11695  0000                     _ADCON0bits	set	3936
 11696  0000                     _ADCON0	set	3936
 11697  0000                     _ADSTAT	set	3941
 11698  0000                     _ADRPT	set	3942
 11699  0000                     _ADSTPTH	set	3945
 11700  0000                     _ADSTPTL	set	3944
 11701  0000                     _ADUTHH	set	3949
 11702  0000                     _ADUTHL	set	3948
 11703  0000                     _ADLTHH	set	3947
 11704  0000                     _ADLTHL	set	3946
 11705  0000                     _LATFbits	set	3966
 11706  0000                     _PR6	set	4016
 11707  0000                     _TMR6	set	4015
 11708  0000                     _T6CONbits	set	4017
 11709  0000                     _T6RSTbits	set	4020
 11710  0000                     _T6HLTbits	set	4018
 11711  0000                     _T6CON	set	4017
 11712  0000                     _T6TMR	set	4015
 11713  0000                     _T6PR	set	4016
 11714  0000                     _T6RST	set	4020
 11715  0000                     _T6HLT	set	4018
 11716  0000                     _T6CLKCON	set	4019
 11717  0000                     _INTCONbits	set	4082
 11718  0000                     _TRISD	set	3972
 11719  0000                     _TRISC	set	3971
 11720  0000                     _TRISH	set	3976
 11721  0000                     _TRISB	set	3970
 11722  0000                     _TRISG	set	3975
 11723  0000                     _TRISA	set	3969
 11724  0000                     _TRISF	set	3974
 11725  0000                     _TRISE	set	3973
 11726  0000                     _LATH	set	3968
 11727  0000                     _LATC	set	3963
 11728  0000                     _LATG	set	3967
 11729  0000                     _LATB	set	3962
 11730  0000                     _LATF	set	3966
 11731  0000                     _LATA	set	3961
 11732  0000                     _LATD	set	3964
 11733  0000                     _LATE	set	3965
 11734                           
 11735                           	psect	cinit
 11736  018400                     __pcinit:
 11737                           	opt stack 0
 11738  018400                     start_initialization:
 11739                           	opt stack 0
 11740  018400                     __initialization:
 11741                           	opt stack 0
 11742                           
 11743                           ; Initialize objects allocated to BANK2 (36 bytes)
 11744                           ; load TBLPTR registers with __pidataBANK2
 11745  018400  0ED4               	movlw	low __pidataBANK2
 11746  018402  6EF6               	movwf	tblptrl,c
 11747  018404  0E96               	movlw	high __pidataBANK2
 11748  018406  6EF7               	movwf	tblptrh,c
 11749  018408  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 11750  01840A  6EF8               	movwf	tblptru,c
 11751  01840C  EE02  F0D9         	lfsr	0,__pdataBANK2
 11752  018410  EE10 F024          	lfsr	1,36
 11753  018414                     copy_data0:
 11754  018414  0009               	tblrd		*+
 11755  018416  CFF5 FFEE          	movff	tablat,postinc0
 11756  01841A  50E5               	movf	postdec1,w,c
 11757  01841C  50E1               	movf	fsr1l,w,c
 11758  01841E  E1FA               	bnz	copy_data0
 11759                           
 11760                           ; Initialize objects allocated to BANK1 (1 bytes)
 11761                           ; load TBLPTR registers with __pidataBANK1
 11762  018420  0E16               	movlw	low __pidataBANK1
 11763  018422  6EF6               	movwf	tblptrl,c
 11764  018424  0E9A               	movlw	high __pidataBANK1
 11765  018426  6EF7               	movwf	tblptrh,c
 11766  018428  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 11767  01842A  6EF8               	movwf	tblptru,c
 11768  01842C  0009               	tblrd		*+	;fetch initializer
 11769  01842E  CFF5 F1E8          	movff	tablat,__pdataBANK1
 11770                           
 11771                           ; Initialize objects allocated to BANK0 (6 bytes)
 11772                           ; load TBLPTR registers with __pidataBANK0
 11773  018432  0EE2               	movlw	low __pidataBANK0
 11774  018434  6EF6               	movwf	tblptrl,c
 11775  018436  0E99               	movlw	high __pidataBANK0
 11776  018438  6EF7               	movwf	tblptrh,c
 11777  01843A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 11778  01843C  6EF8               	movwf	tblptru,c
 11779  01843E  EE00  F0F0         	lfsr	0,__pdataBANK0
 11780  018442  EE10 F006          	lfsr	1,6
 11781  018446                     copy_data1:
 11782  018446  0009               	tblrd		*+
 11783  018448  CFF5 FFEE          	movff	tablat,postinc0
 11784  01844C  50E5               	movf	postdec1,w,c
 11785  01844E  50E1               	movf	fsr1l,w,c
 11786  018450  E1FA               	bnz	copy_data1
 11787                           
 11788                           ; Clear objects allocated to BANK3 (192 bytes)
 11789  018452  EE03  F000         	lfsr	0,__pbssBANK3
 11790  018456  0EC0               	movlw	192
 11791  018458                     clear_0:
 11792  018458  6AEE               	clrf	postinc0,c
 11793  01845A  06E8               	decf	wreg,f,c
 11794  01845C  E1FD               	bnz	clear_0
 11795                           
 11796                           ; Clear objects allocated to BANK2 (140 bytes)
 11797  01845E  EE02  F000         	lfsr	0,__pbssBANK2
 11798  018462  0E8C               	movlw	140
 11799  018464                     clear_1:
 11800  018464  6AEE               	clrf	postinc0,c
 11801  018466  06E8               	decf	wreg,f,c
 11802  018468  E1FD               	bnz	clear_1
 11803                           
 11804                           ; Clear objects allocated to BANK1 (45 bytes)
 11805  01846A  EE01  F0BB         	lfsr	0,__pbssBANK1
 11806  01846E  0E2D               	movlw	45
 11807  018470                     clear_2:
 11808  018470  6AEE               	clrf	postinc0,c
 11809  018472  06E8               	decf	wreg,f,c
 11810  018474  E1FD               	bnz	clear_2
 11811                           
 11812                           ; Clear objects allocated to BITBANK0 (1 bytes)
 11813  018476  0100               	movlb	0
 11814  018478  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 11815                           
 11816                           ; Clear objects allocated to BANK0 (5 bytes)
 11817  01847A  0100               	movlb	0
 11818  01847C  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 11819  01847E  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 11820  018480  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 11821  018482  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 11822  018484  6BF6               	clrf	__pbssBANK0& (0+255),b
 11823                           
 11824                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 11825  018486  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 11826  018488                     end_of_initialization:
 11827                           	opt stack 0
 11828  018488                     __end_of__initialization:
 11829                           	opt stack 0
 11830  018488  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 11831  01848A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11832  01848C  0100               	movlb	0
 11833  01848E  EFE4  F0C0         	goto	_main	;jump to C main() function
 11834                           tblptru	equ	0xFF8
 11835                           tblptrh	equ	0xFF7
 11836                           tblptrl	equ	0xFF6
 11837                           tablat	equ	0xFF5
 11838                           postinc0	equ	0xFEE
 11839                           wreg	equ	0xFE8
 11840                           postdec1	equ	0xFE5
 11841                           fsr1l	equ	0xFE1
 11842                           
 11843                           	psect	bitbssCOMRAM
 11844  0002F0                     __pbitbssCOMRAM:
 11845                           	opt stack 0
 11846  0002F0                     _adc_error_flag:
 11847                           	opt stack 0
 11848  0002F0                     	ds	1
 11849  0002F1                     _load_enable:
 11850                           	opt stack 0
 11851  0002F1                     	ds	1
 11852                           tblptru	equ	0xFF8
 11853                           tblptrh	equ	0xFF7
 11854                           tblptrl	equ	0xFF6
 11855                           tablat	equ	0xFF5
 11856                           postinc0	equ	0xFEE
 11857                           wreg	equ	0xFE8
 11858                           postdec1	equ	0xFE5
 11859                           fsr1l	equ	0xFE1
 11860                           
 11861                           	psect	bitbssBANK0
 11862  0007D8                     __pbitbssBANK0:
 11863                           	opt stack 0
 11864  0007D8                     _eusart2RxStringReady:
 11865                           	opt stack 0
 11866  0007D8                     	ds	1
 11867                           tblptru	equ	0xFF8
 11868                           tblptrh	equ	0xFF7
 11869                           tblptrl	equ	0xFF6
 11870                           tablat	equ	0xFF5
 11871                           postinc0	equ	0xFEE
 11872                           wreg	equ	0xFE8
 11873                           postdec1	equ	0xFE5
 11874                           fsr1l	equ	0xFE1
 11875                           
 11876                           	psect	bssBANK0
 11877  0000F6                     __pbssBANK0:
 11878                           	opt stack 0
 11879  0000F6                     _Total_Energy:
 11880                           	opt stack 0
 11881  0000F6                     	ds	4
 11882  0000FA                     _eusart2RxHead:
 11883                           	opt stack 0
 11884  0000FA                     	ds	1
 11885                           tblptru	equ	0xFF8
 11886                           tblptrh	equ	0xFF7
 11887                           tblptrl	equ	0xFF6
 11888                           tablat	equ	0xFF5
 11889                           postinc0	equ	0xFEE
 11890                           wreg	equ	0xFE8
 11891                           postdec1	equ	0xFE5
 11892                           fsr1l	equ	0xFE1
 11893                           
 11894                           	psect	dataBANK0
 11895  0000F0                     __pdataBANK0:
 11896                           	opt stack 0
 11897  0000F0                     _dimming_period:
 11898                           	opt stack 0
 11899  0000F0                     	ds	2
 11900  0000F2                     _TRIAC_Firing_Angle:
 11901                           	opt stack 0
 11902  0000F2                     	ds	4
 11903                           tblptru	equ	0xFF8
 11904                           tblptrh	equ	0xFF7
 11905                           tblptrl	equ	0xFF6
 11906                           tablat	equ	0xFF5
 11907                           postinc0	equ	0xFEE
 11908                           wreg	equ	0xFE8
 11909                           postdec1	equ	0xFE5
 11910                           fsr1l	equ	0xFE1
 11911                           
 11912                           	psect	bssBANK1
 11913  0001BB                     __pbssBANK1:
 11914                           	opt stack 0
 11915  0001BB                     _Avg_Power:
 11916                           	opt stack 0
 11917  0001BB                     	ds	4
 11918  0001BF                     _Vrms:
 11919                           	opt stack 0
 11920  0001BF                     	ds	4
 11921  0001C3                     _Irms:
 11922                           	opt stack 0
 11923  0001C3                     	ds	4
 11924  0001C7                     _Imeas:
 11925                           	opt stack 0
 11926  0001C7                     	ds	4
 11927  0001CB                     _Ipk:
 11928                           	opt stack 0
 11929  0001CB                     	ds	4
 11930  0001CF                     _Temp_ADC_Result:
 11931                           	opt stack 0
 11932  0001CF                     	ds	4
 11933  0001D3                     _POS12_ADC_Result:
 11934                           	opt stack 0
 11935  0001D3                     	ds	4
 11936  0001D7                     _POS3P3_ADC_Result:
 11937                           	opt stack 0
 11938  0001D7                     	ds	4
 11939  0001DB                     _AVSS_ADC_Result:
 11940                           	opt stack 0
 11941  0001DB                     	ds	4
 11942  0001DF                     _eusart2RxCount:
 11943                           	opt stack 0
 11944  0001DF                     	ds	1
 11945  0001E0                     _eusart2RxTail:
 11946                           	opt stack 0
 11947  0001E0                     	ds	1
 11948  0001E1                     _eusart2TxBufferRemaining:
 11949                           	opt stack 0
 11950  0001E1                     	ds	1
 11951  0001E2                     _eusart2TxTail:
 11952                           	opt stack 0
 11953  0001E2                     	ds	1
 11954  0001E3                     _eusart2TxHead:
 11955                           	opt stack 0
 11956  0001E3                     	ds	1
 11957  0001E4                     _FVR_ADC_Result:
 11958                           	opt stack 0
 11959  0001E4                     	ds	4
 11960                           tblptru	equ	0xFF8
 11961                           tblptrh	equ	0xFF7
 11962                           tblptrl	equ	0xFF6
 11963                           tablat	equ	0xFF5
 11964                           postinc0	equ	0xFEE
 11965                           wreg	equ	0xFE8
 11966                           postdec1	equ	0xFE5
 11967                           fsr1l	equ	0xFE1
 11968                           
 11969                           	psect	dataBANK1
 11970  0001E8                     __pdataBANK1:
 11971                           	opt stack 0
 11972  0001E8                     _next_channel:
 11973                           	opt stack 0
 11974  0001E8                     	ds	1
 11975                           tblptru	equ	0xFF8
 11976                           tblptrh	equ	0xFF7
 11977                           tblptrl	equ	0xFF6
 11978                           tablat	equ	0xFF5
 11979                           postinc0	equ	0xFEE
 11980                           wreg	equ	0xFE8
 11981                           postdec1	equ	0xFE5
 11982                           fsr1l	equ	0xFE1
 11983                           
 11984                           	psect	bssBANK2
 11985  000200                     __pbssBANK2:
 11986                           	opt stack 0
 11987  000200                     _max_FVR_ADC_Result:
 11988                           	opt stack 0
 11989  000200                     	ds	4
 11990  000204                     _max_Temp_ADC_Result:
 11991                           	opt stack 0
 11992  000204                     	ds	4
 11993  000208                     _max_POS12_ADC_Result:
 11994                           	opt stack 0
 11995  000208                     	ds	4
 11996  00020C                     _max_POS3P3_ADC_Result:
 11997                           	opt stack 0
 11998  00020C                     	ds	4
 11999  000210                     _max_Power:
 12000                           	opt stack 0
 12001  000210                     	ds	4
 12002  000214                     _max_Irms:
 12003                           	opt stack 0
 12004  000214                     	ds	4
 12005  000218                     _load_on_time:
 12006                           	opt stack 0
 12007  000218                     	ds	4
 12008  00021C                     _dev_on_time:
 12009                           	opt stack 0
 12010  00021C                     	ds	4
 12011  000220                     _Vpk:
 12012                           	opt stack 0
 12013  000220                     	ds	4
 12014  000224                     _ADC_Result_Scaling:
 12015                           	opt stack 0
 12016  000224                     	ds	4
 12017  000228                     _TMR4_InterruptHandler:
 12018                           	opt stack 0
 12019  000228                     	ds	3
 12020  00022B                     _INT0_InterruptHandler:
 12021                           	opt stack 0
 12022  00022B                     	ds	3
 12023  00022E                     _TMR5_InterruptHandler:
 12024                           	opt stack 0
 12025  00022E                     	ds	3
 12026  000231                     _TMR7_InterruptHandler:
 12027                           	opt stack 0
 12028  000231                     	ds	3
 12029  000234                     _ADCC_ADTI_InterruptHandler:
 12030                           	opt stack 0
 12031  000234                     	ds	3
 12032  000237                     _TMR6_InterruptHandler:
 12033                           	opt stack 0
 12034  000237                     	ds	3
 12035  00023A                     _EUSART2_RxDefaultInterruptHandler:
 12036                           	opt stack 0
 12037  00023A                     	ds	3
 12038  00023D                     _EUSART2_TxDefaultInterruptHandler:
 12039                           	opt stack 0
 12040  00023D                     	ds	3
 12041  000240                     _errno:
 12042                           	opt stack 0
 12043  000240                     	ds	2
 12044  000242                     TMR4_ISR@CountCallBack:
 12045                           	opt stack 0
 12046  000242                     	ds	2
 12047  000244                     _timer5ReloadVal:
 12048                           	opt stack 0
 12049  000244                     	ds	2
 12050  000246                     _timer7ReloadVal:
 12051                           	opt stack 0
 12052  000246                     	ds	2
 12053  000248                     _current_adc_channel:
 12054                           	opt stack 0
 12055  000248                     	ds	1
 12056  000249                     _background_color:
 12057                           	opt stack 0
 12058  000249                     	ds	1
 12059  00024A                     _foreground_color:
 12060                           	opt stack 0
 12061  00024A                     	ds	1
 12062  00024B                     _attribute:
 12063                           	opt stack 0
 12064  00024B                     	ds	1
 12065  00024C                     _line:
 12066                           	opt stack 0
 12067  00024C                     	ds	64
 12068                           tblptru	equ	0xFF8
 12069                           tblptrh	equ	0xFF7
 12070                           tblptrl	equ	0xFF6
 12071                           tablat	equ	0xFF5
 12072                           postinc0	equ	0xFEE
 12073                           wreg	equ	0xFE8
 12074                           postdec1	equ	0xFE5
 12075                           fsr1l	equ	0xFE1
 12076                           
 12077                           	psect	dataBANK2
 12078  0002D9                     __pdataBANK2:
 12079                           	opt stack 0
 12080  0002D9                     getCauseOfResetString@strings:
 12081                           	opt stack 0
 12082  0002D9                     	ds	18
 12083  0002EB                     getDeviceIDString@F17550:
 12084                           	opt stack 0
 12085  0002EB                     	ds	6
 12086  0002F1                     _Irms_offset:
 12087                           	opt stack 0
 12088  0002F1                     	ds	4
 12089  0002F5                     _Vpk_const:
 12090                           	opt stack 0
 12091  0002F5                     	ds	4
 12092  0002F9                     _Temp_ADC_Offset:
 12093                           	opt stack 0
 12094  0002F9                     	ds	4
 12095                           tblptru	equ	0xFF8
 12096                           tblptrh	equ	0xFF7
 12097                           tblptrl	equ	0xFF6
 12098                           tablat	equ	0xFF5
 12099                           postinc0	equ	0xFEE
 12100                           wreg	equ	0xFE8
 12101                           postdec1	equ	0xFE5
 12102                           fsr1l	equ	0xFE1
 12103                           
 12104                           	psect	bssBANK3
 12105  000300                     __pbssBANK3:
 12106                           	opt stack 0
 12107  000300                     _eusart2TxBuffer:
 12108                           	opt stack 0
 12109  000300                     	ds	128
 12110  000380                     _eusart2RxBuffer:
 12111                           	opt stack 0
 12112  000380                     	ds	64
 12113                           tblptru	equ	0xFF8
 12114                           tblptrh	equ	0xFF7
 12115                           tblptrl	equ	0xFF6
 12116                           tablat	equ	0xFF5
 12117                           postinc0	equ	0xFEE
 12118                           wreg	equ	0xFE8
 12119                           postdec1	equ	0xFE5
 12120                           fsr1l	equ	0xFE1
 12121                           
 12122                           	psect	cstackBANK3
 12123  0003C0                     __pcstackBANK3:
 12124                           	opt stack 0
 12125  0003C0                     terminal_ringBufferPull@charNumber:
 12126                           	opt stack 0
 12127                           
 12128                           ; 2 bytes @ 0x0
 12129  0003C0                     	ds	2
 12130  0003C2                     terminal_ringBufferPull@index_2870:
 12131                           	opt stack 0
 12132                           
 12133                           ; 2 bytes @ 0x2
 12134  0003C2                     	ds	2
 12135  0003C4                     terminal_ringBufferPull@index:
 12136                           	opt stack 0
 12137                           
 12138                           ; 2 bytes @ 0x4
 12139  0003C4                     	ds	2
 12140                           tblptru	equ	0xFF8
 12141                           tblptrh	equ	0xFF7
 12142                           tblptrl	equ	0xFF6
 12143                           tablat	equ	0xFF5
 12144                           postinc0	equ	0xFEE
 12145                           wreg	equ	0xFE8
 12146                           postdec1	equ	0xFE5
 12147                           fsr1l	equ	0xFE1
 12148                           
 12149                           	psect	cstackBANK2
 12150  00028C                     __pcstackBANK2:
 12151                           	opt stack 0
 12152  00028C                     terminal_textAttributes@foreground_color:
 12153                           	opt stack 0
 12154                           
 12155                           ; 1 bytes @ 0x0
 12156  00028C                     	ds	1
 12157  00028D                     terminal_textAttributes@output_buff:
 12158                           	opt stack 0
 12159                           
 12160                           ; 15 bytes @ 0x1
 12161  00028D                     	ds	15
 12162  00029C                     ringBufferLUT@channel_name:
 12163                           	opt stack 0
 12164                           
 12165                           ; 22 bytes @ 0x10
 12166  00029C                     	ds	22
 12167  0002B2                     ringBufferLUT@angle_degrees:
 12168                           	opt stack 0
 12169                           
 12170                           ; 4 bytes @ 0x26
 12171  0002B2                     	ds	4
 12172  0002B6                     ringBufferLUT@max_current_print:
 12173                           	opt stack 0
 12174                           
 12175                           ; 4 bytes @ 0x2A
 12176  0002B6                     	ds	4
 12177  0002BA                     ringBufferLUT@max_Power_print:
 12178                           	opt stack 0
 12179                           
 12180                           ; 4 bytes @ 0x2E
 12181  0002BA                     	ds	4
 12182  0002BE                     ringBufferLUT@max_voltage_print:
 12183                           	opt stack 0
 12184                           
 12185                           ; 4 bytes @ 0x32
 12186  0002BE                     	ds	4
 12187  0002C2                     ringBufferLUT@max_voltage_print_3221:
 12188                           	opt stack 0
 12189                           
 12190                           ; 4 bytes @ 0x36
 12191  0002C2                     	ds	4
 12192  0002C6                     ringBufferLUT@max_temp_print:
 12193                           	opt stack 0
 12194                           
 12195                           ; 4 bytes @ 0x3A
 12196  0002C6                     	ds	4
 12197  0002CA                     ringBufferLUT@max_voltage_print_3227:
 12198                           	opt stack 0
 12199                           
 12200                           ; 4 bytes @ 0x3E
 12201  0002CA                     	ds	4
 12202  0002CE                     ringBufferLUT@arg_buff:
 12203                           	opt stack 0
 12204                           
 12205                           ; 3 bytes @ 0x42
 12206  0002CE                     	ds	3
 12207  0002D1                     ringBufferLUT@index:
 12208                           	opt stack 0
 12209                           
 12210                           ; 2 bytes @ 0x45
 12211  0002D1                     	ds	2
 12212  0002D3                     ringBufferLUT@percentage:
 12213                           	opt stack 0
 12214                           
 12215                           ; 2 bytes @ 0x47
 12216  0002D3                     	ds	2
 12217  0002D5                     ringBufferLUT@userID:
 12218                           	opt stack 0
 12219                           
 12220                           ; 2 bytes @ 0x49
 12221  0002D5                     	ds	2
 12222  0002D7                     ??_main:
 12223                           
 12224                           ; 1 bytes @ 0x4B
 12225  0002D7                     	ds	2
 12226                           tblptru	equ	0xFF8
 12227                           tblptrh	equ	0xFF7
 12228                           tblptrl	equ	0xFF6
 12229                           tablat	equ	0xFF5
 12230                           postinc0	equ	0xFEE
 12231                           wreg	equ	0xFE8
 12232                           postdec1	equ	0xFE5
 12233                           fsr1l	equ	0xFE1
 12234                           
 12235                           	psect	cstackBANK1
 12236  000100                     __pcstackBANK1:
 12237                           	opt stack 0
 12238  000100                     ??_heartbeatTimerCallback:
 12239  000100                     ADCC_StartConversion@channel:
 12240                           	opt stack 0
 12241  000100                     TMR7_WriteTimer@timerVal:
 12242                           	opt stack 0
 12243                           
 12244                           ; 2 bytes @ 0x0
 12245  000100                     	ds	1
 12246  000101                     
 12247                           ; 1 bytes @ 0x1
 12248  000101                     	ds	1
 12249  000102                     ??_INTERRUPT_InterruptManagerLow:
 12250  000102                     
 12251                           ; 1 bytes @ 0x2
 12252  000102                     	ds	21
 12253  000117                     ??_isdigit:
 12254  000117                     ?_strlen:
 12255                           	opt stack 0
 12256  000117                     ?_strcmp:
 12257                           	opt stack 0
 12258  000117                     ?_getCauseOfResetString:
 12259                           	opt stack 0
 12260  000117                     ?_strchr:
 12261                           	opt stack 0
 12262  000117                     ?___wmul:
 12263                           	opt stack 0
 12264  000117                     ?___awmod:
 12265                           	opt stack 0
 12266  000117                     ?__tdiv_to_l_:
 12267                           	opt stack 0
 12268  000117                     ?__div_to_l_:
 12269                           	opt stack 0
 12270  000117                     ?___lldiv:
 12271                           	opt stack 0
 12272  000117                     ?___xxtofl:
 12273                           	opt stack 0
 12274  000117                     EUSART2_Read@readValue:
 12275                           	opt stack 0
 12276  000117                     EUSART2_Write@txData:
 12277                           	opt stack 0
 12278  000117                     getCauseOfReset@return_reset_cause:
 12279                           	opt stack 0
 12280  000117                     DATAEE_WriteByte@bAdd:
 12281                           	opt stack 0
 12282  000117                     DATAEE_ReadByte@bAdd:
 12283                           	opt stack 0
 12284  000117                     ___wmul@multiplier:
 12285                           	opt stack 0
 12286  000117                     ___awmod@dividend:
 12287                           	opt stack 0
 12288  000117                     strcat@to:
 12289                           	opt stack 0
 12290  000117                     strcmp@s1:
 12291                           	opt stack 0
 12292  000117                     strcpy@to:
 12293                           	opt stack 0
 12294  000117                     strlen@s:
 12295                           	opt stack 0
 12296  000117                     strncpy@to:
 12297                           	opt stack 0
 12298  000117                     strchr@ptr:
 12299                           	opt stack 0
 12300  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 12301                           	opt stack 0
 12302  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 12303                           	opt stack 0
 12304  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 12305                           	opt stack 0
 12306  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 12307                           	opt stack 0
 12308  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 12309                           	opt stack 0
 12310  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 12311                           	opt stack 0
 12312  000117                     INT0_SetInterruptHandler@InterruptHandler:
 12313                           	opt stack 0
 12314  000117                     TMR4_SetInterruptHandler@InterruptHandler:
 12315                           	opt stack 0
 12316  000117                     __tdiv_to_l_@f1:
 12317                           	opt stack 0
 12318  000117                     FLASH_ReadByte@flashAddr:
 12319                           	opt stack 0
 12320  000117                     __div_to_l_@f1:
 12321                           	opt stack 0
 12322  000117                     ___flge@ff1:
 12323                           	opt stack 0
 12324  000117                     ___lldiv@dividend:
 12325                           	opt stack 0
 12326  000117                     ___xxtofl@val:
 12327                           	opt stack 0
 12328                           
 12329                           ; 4 bytes @ 0x17
 12330  000117                     	ds	1
 12331  000118                     putch@txData:
 12332                           	opt stack 0
 12333  000118                     _isdigit$3742:
 12334                           	opt stack 0
 12335                           
 12336                           ; 1 bytes @ 0x18
 12337  000118                     	ds	1
 12338  000119                     ??_strlen:
 12339  000119                     ?_readDoubleFromEEPROM:
 12340                           	opt stack 0
 12341  000119                     DATAEE_WriteByte@bData:
 12342                           	opt stack 0
 12343  000119                     getCauseOfResetString@r:
 12344                           	opt stack 0
 12345  000119                     isdigit@c:
 12346                           	opt stack 0
 12347  000119                     readDoubleFromEEPROM@starting_address:
 12348                           	opt stack 0
 12349  000119                     ___wmul@multiplicand:
 12350                           	opt stack 0
 12351  000119                     ___awmod@divisor:
 12352                           	opt stack 0
 12353  000119                     strcat@from:
 12354                           	opt stack 0
 12355  000119                     strcmp@s2:
 12356                           	opt stack 0
 12357  000119                     strcpy@from:
 12358                           	opt stack 0
 12359  000119                     strncpy@from:
 12360                           	opt stack 0
 12361  000119                     strchr@chr:
 12362                           	opt stack 0
 12363                           
 12364                           ; 2 bytes @ 0x19
 12365  000119                     	ds	1
 12366  00011A                     ??_TMR7_Initialize:
 12367  00011A                     ??_TMR5_Initialize:
 12368  00011A                     DATAEE_WriteByte@GIEBitValue:
 12369                           	opt stack 0
 12370  00011A                     __tdiv_to_l_@f2:
 12371                           	opt stack 0
 12372                           
 12373                           ; 3 bytes @ 0x1A
 12374  00011A                     	ds	1
 12375  00011B                     ??_strcmp:
 12376  00011B                     ??___xxtofl:
 12377  00011B                     ?_FLASH_ReadWord:
 12378                           	opt stack 0
 12379  00011B                     ___awmod@counter:
 12380                           	opt stack 0
 12381  00011B                     ___wmul@product:
 12382                           	opt stack 0
 12383  00011B                     strcat@cp:
 12384                           	opt stack 0
 12385  00011B                     strcpy@cp:
 12386                           	opt stack 0
 12387  00011B                     strlen@cp:
 12388                           	opt stack 0
 12389  00011B                     strncpy@size:
 12390                           	opt stack 0
 12391  00011B                     FLASH_ReadWord@flashAddr:
 12392                           	opt stack 0
 12393  00011B                     writeDoubleToEEPROM@input_double:
 12394                           	opt stack 0
 12395  00011B                     __div_to_l_@f2:
 12396                           	opt stack 0
 12397  00011B                     ___flge@ff2:
 12398                           	opt stack 0
 12399  00011B                     ___lldiv@divisor:
 12400                           	opt stack 0
 12401                           
 12402                           ; 4 bytes @ 0x1B
 12403  00011B                     	ds	1
 12404  00011C                     ___awmod@sign:
 12405                           	opt stack 0
 12406  00011C                     strcmp@r:
 12407                           	opt stack 0
 12408                           
 12409                           ; 1 bytes @ 0x1C
 12410  00011C                     	ds	1
 12411  00011D                     ??__tdiv_to_l_:
 12412  00011D                     ?_atoi:
 12413                           	opt stack 0
 12414  00011D                     ?_strncmp:
 12415                           	opt stack 0
 12416  00011D                     ?___awdiv:
 12417                           	opt stack 0
 12418  00011D                     atoi@s:
 12419                           	opt stack 0
 12420  00011D                     ___awdiv@dividend:
 12421                           	opt stack 0
 12422  00011D                     strncpy@cp:
 12423                           	opt stack 0
 12424  00011D                     strncmp@s1:
 12425                           	opt stack 0
 12426  00011D                     readDoubleFromEEPROM@output_data:
 12427                           	opt stack 0
 12428                           
 12429                           ; 4 bytes @ 0x1D
 12430  00011D                     	ds	2
 12431  00011F                     ??_atoi:
 12432  00011F                     ??_FLASH_ReadWord:
 12433  00011F                     ??___flge:
 12434  00011F                     ___lldiv@counter:
 12435                           	opt stack 0
 12436  00011F                     ___xxtofl@sign:
 12437                           	opt stack 0
 12438  00011F                     writeDoubleToEEPROM@starting_address:
 12439                           	opt stack 0
 12440  00011F                     ___awdiv@divisor:
 12441                           	opt stack 0
 12442  00011F                     strncmp@s2:
 12443                           	opt stack 0
 12444  00011F                     __div_to_l_@quot:
 12445                           	opt stack 0
 12446                           
 12447                           ; 4 bytes @ 0x1F
 12448  00011F                     	ds	1
 12449  000120                     ___xxtofl@exp:
 12450                           	opt stack 0
 12451  000120                     __tdiv_to_l_@quot:
 12452                           	opt stack 0
 12453  000120                     ___lldiv@quotient:
 12454                           	opt stack 0
 12455                           
 12456                           ; 4 bytes @ 0x20
 12457  000120                     	ds	1
 12458  000121                     atoi@sign:
 12459                           	opt stack 0
 12460  000121                     ___awdiv@counter:
 12461                           	opt stack 0
 12462  000121                     readDoubleFromEEPROM@byte_index:
 12463                           	opt stack 0
 12464  000121                     strncmp@len:
 12465                           	opt stack 0
 12466  000121                     writeDoubleToEEPROM@input_data:
 12467                           	opt stack 0
 12468  000121                     ___xxtofl@arg:
 12469                           	opt stack 0
 12470                           
 12471                           ; 4 bytes @ 0x21
 12472  000121                     	ds	1
 12473  000122                     ??_getMajorRevisionID:
 12474  000122                     ?_getDeviceID:
 12475                           	opt stack 0
 12476  000122                     ?_getUserID:
 12477                           	opt stack 0
 12478  000122                     ___awdiv@sign:
 12479                           	opt stack 0
 12480  000122                     getMinorRevisionID@REVID_RAW:
 12481                           	opt stack 0
 12482  000122                     atoi@a:
 12483                           	opt stack 0
 12484                           
 12485                           ; 2 bytes @ 0x22
 12486  000122                     	ds	1
 12487  000123                     ??_strncmp:
 12488  000123                     __div_to_l_@cntr:
 12489                           	opt stack 0
 12490  000123                     ___awdiv@quotient:
 12491                           	opt stack 0
 12492                           
 12493                           ; 2 bytes @ 0x23
 12494  000123                     	ds	1
 12495  000124                     ?_getDeviceIDString:
 12496                           	opt stack 0
 12497  000124                     ?___llmod:
 12498                           	opt stack 0
 12499  000124                     getUserID@inputUserID:
 12500                           	opt stack 0
 12501  000124                     __div_to_l_@exp1:
 12502                           	opt stack 0
 12503  000124                     __tdiv_to_l_@cntr:
 12504                           	opt stack 0
 12505  000124                     getDeviceIDString@inputDevID:
 12506                           	opt stack 0
 12507  000124                     ___llmod@dividend:
 12508                           	opt stack 0
 12509                           
 12510                           ; 4 bytes @ 0x24
 12511  000124                     	ds	1
 12512  000125                     ?___flneg:
 12513                           	opt stack 0
 12514  000125                     __tdiv_to_l_@exp1:
 12515                           	opt stack 0
 12516  000125                     getMajorRevisionID@REVID_RAW:
 12517                           	opt stack 0
 12518  000125                     writeDoubleToEEPROM@byte_index:
 12519                           	opt stack 0
 12520  000125                     getUserID@initialOffset:
 12521                           	opt stack 0
 12522  000125                     ___flneg@f1:
 12523                           	opt stack 0
 12524                           
 12525                           ; 4 bytes @ 0x25
 12526  000125                     	ds	1
 12527  000126                     ??_getDeviceIDString:
 12528  000126                     ?_strstr:
 12529                           	opt stack 0
 12530  000126                     strstr@s1:
 12531                           	opt stack 0
 12532                           
 12533                           ; 2 bytes @ 0x26
 12534  000126                     	ds	1
 12535  000127                     
 12536                           ; 1 bytes @ 0x27
 12537  000127                     	ds	1
 12538  000128                     strstr@s2:
 12539                           	opt stack 0
 12540  000128                     ___llmod@divisor:
 12541                           	opt stack 0
 12542  000128                     getDeviceIDString@strings:
 12543                           	opt stack 0
 12544                           
 12545                           ; 6 bytes @ 0x28
 12546  000128                     	ds	1
 12547  000129                     ?___fladd:
 12548                           	opt stack 0
 12549  000129                     getUserID@IDOffset:
 12550                           	opt stack 0
 12551  000129                     ___fladd@b:
 12552                           	opt stack 0
 12553                           
 12554                           ; 4 bytes @ 0x29
 12555  000129                     	ds	1
 12556  00012A                     
 12557                           ; 1 bytes @ 0x2A
 12558  00012A                     	ds	2
 12559  00012C                     ___llmod@counter:
 12560                           	opt stack 0
 12561                           
 12562                           ; 1 bytes @ 0x2C
 12563  00012C                     	ds	1
 12564  00012D                     ___fladd@a:
 12565                           	opt stack 0
 12566                           
 12567                           ; 4 bytes @ 0x2D
 12568  00012D                     	ds	4
 12569  000131                     ??___fladd:
 12570                           
 12571                           ; 1 bytes @ 0x31
 12572  000131                     	ds	8
 12573  000139                     ___fladd@signs:
 12574                           	opt stack 0
 12575                           
 12576                           ; 1 bytes @ 0x39
 12577  000139                     	ds	1
 12578  00013A                     ___fladd@aexp:
 12579                           	opt stack 0
 12580                           
 12581                           ; 1 bytes @ 0x3A
 12582  00013A                     	ds	1
 12583  00013B                     ___fladd@bexp:
 12584                           	opt stack 0
 12585                           
 12586                           ; 1 bytes @ 0x3B
 12587  00013B                     	ds	1
 12588  00013C                     ___fladd@grs:
 12589                           	opt stack 0
 12590                           
 12591                           ; 1 bytes @ 0x3C
 12592  00013C                     	ds	1
 12593  00013D                     ?___fldiv:
 12594                           	opt stack 0
 12595  00013D                     ?___flsub:
 12596                           	opt stack 0
 12597  00013D                     ___flsub@b:
 12598                           	opt stack 0
 12599  00013D                     ___fldiv@b:
 12600                           	opt stack 0
 12601                           
 12602                           ; 4 bytes @ 0x3D
 12603  00013D                     	ds	4
 12604  000141                     ___flsub@a:
 12605                           	opt stack 0
 12606  000141                     ___fldiv@a:
 12607                           	opt stack 0
 12608                           
 12609                           ; 4 bytes @ 0x41
 12610  000141                     	ds	4
 12611  000145                     ??___fldiv:
 12612  000145                     
 12613                           ; 1 bytes @ 0x45
 12614  000145                     	ds	4
 12615  000149                     ___fldiv@sign:
 12616                           	opt stack 0
 12617                           
 12618                           ; 1 bytes @ 0x49
 12619  000149                     	ds	1
 12620  00014A                     ___fldiv@rem:
 12621                           	opt stack 0
 12622                           
 12623                           ; 4 bytes @ 0x4A
 12624  00014A                     	ds	4
 12625  00014E                     ___fldiv@new_exp:
 12626                           	opt stack 0
 12627                           
 12628                           ; 2 bytes @ 0x4E
 12629  00014E                     	ds	2
 12630  000150                     ___fldiv@grs:
 12631                           	opt stack 0
 12632                           
 12633                           ; 4 bytes @ 0x50
 12634  000150                     	ds	4
 12635  000154                     ___fldiv@bexp:
 12636                           	opt stack 0
 12637                           
 12638                           ; 1 bytes @ 0x54
 12639  000154                     	ds	1
 12640  000155                     ___fldiv@aexp:
 12641                           	opt stack 0
 12642                           
 12643                           ; 1 bytes @ 0x55
 12644  000155                     	ds	1
 12645  000156                     ?___flmul:
 12646                           	opt stack 0
 12647  000156                     ___flmul@b:
 12648                           	opt stack 0
 12649                           
 12650                           ; 4 bytes @ 0x56
 12651  000156                     	ds	4
 12652  00015A                     ___flmul@a:
 12653                           	opt stack 0
 12654                           
 12655                           ; 4 bytes @ 0x5A
 12656  00015A                     	ds	4
 12657  00015E                     ??___flmul:
 12658                           
 12659                           ; 1 bytes @ 0x5E
 12660  00015E                     	ds	4
 12661  000162                     ___flmul@sign:
 12662                           	opt stack 0
 12663                           
 12664                           ; 1 bytes @ 0x62
 12665  000162                     	ds	1
 12666  000163                     ___flmul@aexp:
 12667                           	opt stack 0
 12668                           
 12669                           ; 1 bytes @ 0x63
 12670  000163                     	ds	1
 12671  000164                     ___flmul@bexp:
 12672                           	opt stack 0
 12673                           
 12674                           ; 1 bytes @ 0x64
 12675  000164                     	ds	1
 12676  000165                     ___flmul@grs:
 12677                           	opt stack 0
 12678                           
 12679                           ; 4 bytes @ 0x65
 12680  000165                     	ds	4
 12681  000169                     ___flmul@prod:
 12682                           	opt stack 0
 12683                           
 12684                           ; 4 bytes @ 0x69
 12685  000169                     	ds	4
 12686  00016D                     ___flmul@temp:
 12687                           	opt stack 0
 12688                           
 12689                           ; 2 bytes @ 0x6D
 12690  00016D                     	ds	2
 12691  00016F                     ?_fround:
 12692                           	opt stack 0
 12693  00016F                     ?_scale:
 12694                           	opt stack 0
 12695                           
 12696                           ; 4 bytes @ 0x6F
 12697  00016F                     	ds	4
 12698  000173                     _fround$4502:
 12699                           	opt stack 0
 12700  000173                     _scale$4503:
 12701                           	opt stack 0
 12702                           
 12703                           ; 4 bytes @ 0x73
 12704  000173                     	ds	4
 12705  000177                     scale@scl:
 12706                           	opt stack 0
 12707  000177                     _fround$4501:
 12708                           	opt stack 0
 12709                           
 12710                           ; 4 bytes @ 0x77
 12711  000177                     	ds	1
 12712  000178                     ?___fltol:
 12713                           	opt stack 0
 12714  000178                     ___fltol@f1:
 12715                           	opt stack 0
 12716                           
 12717                           ; 4 bytes @ 0x78
 12718  000178                     	ds	3
 12719  00017B                     fround@prec:
 12720                           	opt stack 0
 12721                           
 12722                           ; 1 bytes @ 0x7B
 12723  00017B                     	ds	1
 12724  00017C                     ??___fltol:
 12725                           
 12726                           ; 1 bytes @ 0x7C
 12727  00017C                     	ds	4
 12728  000180                     ___fltol@sign1:
 12729                           	opt stack 0
 12730                           
 12731                           ; 1 bytes @ 0x80
 12732  000180                     	ds	1
 12733  000181                     ___fltol@exp1:
 12734                           	opt stack 0
 12735                           
 12736                           ; 1 bytes @ 0x81
 12737  000181                     	ds	1
 12738  000182                     ?_printf:
 12739                           	opt stack 0
 12740  000182                     printf@f:
 12741                           	opt stack 0
 12742                           
 12743                           ; 2 bytes @ 0x82
 12744  000182                     	ds	10
 12745  00018C                     ??_printf:
 12746                           
 12747                           ; 1 bytes @ 0x8C
 12748  00018C                     	ds	6
 12749  000192                     _printf$4504:
 12750                           	opt stack 0
 12751                           
 12752                           ; 4 bytes @ 0x92
 12753  000192                     	ds	4
 12754  000196                     printf@idx:
 12755                           	opt stack 0
 12756                           
 12757                           ; 1 bytes @ 0x96
 12758  000196                     	ds	1
 12759  000197                     printf@cp:
 12760                           	opt stack 0
 12761                           
 12762                           ; 2 bytes @ 0x97
 12763  000197                     	ds	2
 12764  000199                     printf@len:
 12765                           	opt stack 0
 12766                           
 12767                           ; 2 bytes @ 0x99
 12768  000199                     	ds	2
 12769  00019B                     printf@ap:
 12770                           	opt stack 0
 12771                           
 12772                           ; 2 bytes @ 0x9B
 12773  00019B                     	ds	2
 12774  00019D                     printf@tmpval:
 12775                           	opt stack 0
 12776                           
 12777                           ; 4 bytes @ 0x9D
 12778  00019D                     	ds	4
 12779  0001A1                     printf@exp:
 12780                           	opt stack 0
 12781                           
 12782                           ; 2 bytes @ 0xA1
 12783  0001A1                     	ds	2
 12784  0001A3                     printf@fval:
 12785                           	opt stack 0
 12786                           
 12787                           ; 4 bytes @ 0xA3
 12788  0001A3                     	ds	4
 12789  0001A7                     printf@val:
 12790                           	opt stack 0
 12791                           
 12792                           ; 4 bytes @ 0xA7
 12793  0001A7                     	ds	4
 12794  0001AB                     printf@flag:
 12795                           	opt stack 0
 12796                           
 12797                           ; 2 bytes @ 0xAB
 12798  0001AB                     	ds	2
 12799  0001AD                     printf@width:
 12800                           	opt stack 0
 12801                           
 12802                           ; 2 bytes @ 0xAD
 12803  0001AD                     	ds	2
 12804  0001AF                     printf@prec:
 12805                           	opt stack 0
 12806                           
 12807                           ; 2 bytes @ 0xAF
 12808  0001AF                     	ds	2
 12809  0001B1                     printf@c:
 12810                           	opt stack 0
 12811                           
 12812                           ; 1 bytes @ 0xB1
 12813  0001B1                     	ds	1
 12814  0001B2                     terminal_textAttributes@background_color:
 12815                           	opt stack 0
 12816                           
 12817                           ; 1 bytes @ 0xB2
 12818  0001B2                     	ds	1
 12819  0001B3                     terminal_textAttributes@input_attribute:
 12820                           	opt stack 0
 12821                           
 12822                           ; 1 bytes @ 0xB3
 12823  0001B3                     	ds	1
 12824  0001B4                     ringBufferLUT@line:
 12825                           	opt stack 0
 12826                           
 12827                           ; 2 bytes @ 0xB4
 12828  0001B4                     	ds	2
 12829  0001B6                     ??_ringBufferLUT:
 12830                           
 12831                           ; 1 bytes @ 0xB6
 12832  0001B6                     	ds	2
 12833  0001B8                     ??_terminal_ringBufferPull:
 12834                           
 12835                           ; 1 bytes @ 0xB8
 12836  0001B8                     	ds	3
 12837                           tblptru	equ	0xFF8
 12838                           tblptrh	equ	0xFF7
 12839                           tblptrl	equ	0xFF6
 12840                           tablat	equ	0xFF5
 12841                           postinc0	equ	0xFEE
 12842                           wreg	equ	0xFE8
 12843                           postdec1	equ	0xFE5
 12844                           fsr1l	equ	0xFE1
 12845                           
 12846                           	psect	cstackBANK0
 12847  000060                     __pcstackBANK0:
 12848                           	opt stack 0
 12849  000060                     ??i2___fladd:
 12850                           
 12851                           ; 1 bytes @ 0x0
 12852  000060                     	ds	8
 12853  000068                     i2___fladd@signs:
 12854                           	opt stack 0
 12855                           
 12856                           ; 1 bytes @ 0x8
 12857  000068                     	ds	1
 12858  000069                     i2___fladd@aexp:
 12859                           	opt stack 0
 12860                           
 12861                           ; 1 bytes @ 0x9
 12862  000069                     	ds	1
 12863  00006A                     i2___fladd@bexp:
 12864                           	opt stack 0
 12865                           
 12866                           ; 1 bytes @ 0xA
 12867  00006A                     	ds	1
 12868  00006B                     i2___fladd@grs:
 12869                           	opt stack 0
 12870                           
 12871                           ; 1 bytes @ 0xB
 12872  00006B                     	ds	1
 12873  00006C                     ?_sqrt:
 12874                           	opt stack 0
 12875  00006C                     ?_eval_poly:
 12876                           	opt stack 0
 12877  00006C                     ?i2___fltol:
 12878                           	opt stack 0
 12879  00006C                     eval_poly@x:
 12880                           	opt stack 0
 12881  00006C                     sqrt@a:
 12882                           	opt stack 0
 12883  00006C                     i2___fltol@f1:
 12884                           	opt stack 0
 12885                           
 12886                           ; 4 bytes @ 0xC
 12887  00006C                     	ds	4
 12888  000070                     ??_sqrt:
 12889  000070                     ??i2___fltol:
 12890  000070                     eval_poly@d:
 12891                           	opt stack 0
 12892                           
 12893                           ; 2 bytes @ 0x10
 12894  000070                     	ds	2
 12895  000072                     eval_poly@n:
 12896                           	opt stack 0
 12897                           
 12898                           ; 2 bytes @ 0x12
 12899  000072                     	ds	2
 12900  000074                     ??_eval_poly:
 12901  000074                     sqrt@sign:
 12902                           	opt stack 0
 12903  000074                     i2___fltol@sign1:
 12904                           	opt stack 0
 12905                           
 12906                           ; 1 bytes @ 0x14
 12907  000074                     	ds	1
 12908  000075                     sqrt@i:
 12909                           	opt stack 0
 12910  000075                     i2___fltol@exp1:
 12911                           	opt stack 0
 12912                           
 12913                           ; 1 bytes @ 0x15
 12914  000075                     	ds	1
 12915  000076                     ?_abs:
 12916                           	opt stack 0
 12917  000076                     ?_floor:
 12918                           	opt stack 0
 12919  000076                     abs@a:
 12920                           	opt stack 0
 12921  000076                     sqrt@tfrac:
 12922                           	opt stack 0
 12923  000076                     floor@x:
 12924                           	opt stack 0
 12925                           
 12926                           ; 4 bytes @ 0x16
 12927  000076                     	ds	2
 12928  000078                     ??_abs:
 12929  000078                     eval_poly@res:
 12930                           	opt stack 0
 12931                           
 12932                           ; 4 bytes @ 0x18
 12933  000078                     	ds	2
 12934  00007A                     sqrt@p:
 12935                           	opt stack 0
 12936  00007A                     floor@i:
 12937                           	opt stack 0
 12938                           
 12939                           ; 4 bytes @ 0x1A
 12940  00007A                     	ds	1
 12941  00007B                     sqrt@grs:
 12942                           	opt stack 0
 12943                           
 12944                           ; 4 bytes @ 0x1B
 12945  00007B                     	ds	1
 12946  00007C                     ?_atan:
 12947                           	opt stack 0
 12948  00007C                     atan@f:
 12949                           	opt stack 0
 12950                           
 12951                           ; 4 bytes @ 0x1C
 12952  00007C                     	ds	2
 12953  00007E                     floor@expon:
 12954                           	opt stack 0
 12955                           
 12956                           ; 2 bytes @ 0x1E
 12957  00007E                     	ds	1
 12958  00007F                     sqrt@exp:
 12959                           	opt stack 0
 12960                           
 12961                           ; 2 bytes @ 0x1F
 12962  00007F                     	ds	1
 12963  000080                     ?i2___flsub:
 12964                           	opt stack 0
 12965  000080                     atan@y:
 12966                           	opt stack 0
 12967  000080                     i2___flsub@b:
 12968                           	opt stack 0
 12969                           
 12970                           ; 4 bytes @ 0x20
 12971  000080                     	ds	1
 12972  000081                     sqrt@root:
 12973                           	opt stack 0
 12974                           
 12975                           ; 4 bytes @ 0x21
 12976  000081                     	ds	3
 12977  000084                     atan@x:
 12978                           	opt stack 0
 12979  000084                     i2___flsub@a:
 12980                           	opt stack 0
 12981                           
 12982                           ; 4 bytes @ 0x24
 12983  000084                     	ds	1
 12984  000085                     sqrt@frac:
 12985                           	opt stack 0
 12986                           
 12987                           ; 4 bytes @ 0x25
 12988  000085                     	ds	3
 12989  000088                     ?i2_printf:
 12990                           	opt stack 0
 12991  000088                     ?_sin:
 12992                           	opt stack 0
 12993  000088                     atan@recip:
 12994                           	opt stack 0
 12995  000088                     i2printf@f:
 12996                           	opt stack 0
 12997  000088                     sin@f:
 12998                           	opt stack 0
 12999                           
 13000                           ; 4 bytes @ 0x28
 13001  000088                     	ds	1
 13002  000089                     atan@val_squared:
 13003                           	opt stack 0
 13004                           
 13005                           ; 4 bytes @ 0x29
 13006  000089                     	ds	1
 13007  00008A                     ??i2_printf:
 13008                           
 13009                           ; 1 bytes @ 0x2A
 13010  00008A                     	ds	2
 13011  00008C                     sin@y:
 13012                           	opt stack 0
 13013                           
 13014                           ; 4 bytes @ 0x2C
 13015  00008C                     	ds	1
 13016  00008D                     atan@val:
 13017                           	opt stack 0
 13018                           
 13019                           ; 4 bytes @ 0x2D
 13020  00008D                     	ds	3
 13021  000090                     _sin$4734:
 13022                           	opt stack 0
 13023  000090                     i2_printf$4738:
 13024                           	opt stack 0
 13025                           
 13026                           ; 4 bytes @ 0x30
 13027  000090                     	ds	1
 13028  000091                     ?_asin:
 13029                           	opt stack 0
 13030  000091                     asin@x:
 13031                           	opt stack 0
 13032                           
 13033                           ; 4 bytes @ 0x31
 13034  000091                     	ds	3
 13035  000094                     i2printf@idx:
 13036                           	opt stack 0
 13037  000094                     sin@x2:
 13038                           	opt stack 0
 13039                           
 13040                           ; 4 bytes @ 0x34
 13041  000094                     	ds	1
 13042  000095                     i2printf@cp:
 13043                           	opt stack 0
 13044  000095                     asin@sgn:
 13045                           	opt stack 0
 13046                           
 13047                           ; 4 bytes @ 0x35
 13048  000095                     	ds	2
 13049  000097                     i2printf@len:
 13050                           	opt stack 0
 13051                           
 13052                           ; 2 bytes @ 0x37
 13053  000097                     	ds	1
 13054  000098                     sin@sgn:
 13055                           	opt stack 0
 13056                           
 13057                           ; 1 bytes @ 0x38
 13058  000098                     	ds	1
 13059  000099                     ?_currentMeasuredToPeak:
 13060                           	opt stack 0
 13061  000099                     i2printf@ap:
 13062                           	opt stack 0
 13063  000099                     currentMeasuredToPeak@Measured:
 13064                           	opt stack 0
 13065  000099                     _asin$4733:
 13066                           	opt stack 0
 13067                           
 13068                           ; 4 bytes @ 0x39
 13069  000099                     	ds	2
 13070  00009B                     i2printf@tmpval:
 13071                           	opt stack 0
 13072                           
 13073                           ; 4 bytes @ 0x3B
 13074  00009B                     	ds	2
 13075  00009D                     currentMeasuredToPeak@Angle:
 13076                           	opt stack 0
 13077  00009D                     _asin$4732:
 13078                           	opt stack 0
 13079                           
 13080                           ; 4 bytes @ 0x3D
 13081  00009D                     	ds	2
 13082  00009F                     i2printf@exp:
 13083                           	opt stack 0
 13084                           
 13085                           ; 2 bytes @ 0x3F
 13086  00009F                     	ds	2
 13087  0000A1                     currentMeasuredToPeak@Peak:
 13088                           	opt stack 0
 13089  0000A1                     asin@y:
 13090                           	opt stack 0
 13091  0000A1                     i2printf@val:
 13092                           	opt stack 0
 13093                           
 13094                           ; 4 bytes @ 0x41
 13095  0000A1                     	ds	4
 13096  0000A5                     i2printf@fval:
 13097                           	opt stack 0
 13098  0000A5                     _asin$4731:
 13099                           	opt stack 0
 13100                           
 13101                           ; 4 bytes @ 0x45
 13102  0000A5                     	ds	4
 13103  0000A9                     ?_acos:
 13104                           	opt stack 0
 13105  0000A9                     i2printf@flag:
 13106                           	opt stack 0
 13107  0000A9                     acos@x:
 13108                           	opt stack 0
 13109                           
 13110                           ; 4 bytes @ 0x49
 13111  0000A9                     	ds	2
 13112  0000AB                     i2printf@width:
 13113                           	opt stack 0
 13114                           
 13115                           ; 2 bytes @ 0x4B
 13116  0000AB                     	ds	2
 13117  0000AD                     i2printf@prec:
 13118                           	opt stack 0
 13119  0000AD                     _acos$4730:
 13120                           	opt stack 0
 13121                           
 13122                           ; 4 bytes @ 0x4D
 13123  0000AD                     	ds	2
 13124  0000AF                     i2printf@c:
 13125                           	opt stack 0
 13126                           
 13127                           ; 1 bytes @ 0x4F
 13128  0000AF                     	ds	2
 13129  0000B1                     ?_peakToRMS:
 13130                           	opt stack 0
 13131  0000B1                     peakToRMS@Peak:
 13132                           	opt stack 0
 13133                           
 13134                           ; 4 bytes @ 0x51
 13135  0000B1                     	ds	4
 13136  0000B5                     peakToRMS@Angle:
 13137                           	opt stack 0
 13138                           
 13139                           ; 4 bytes @ 0x55
 13140  0000B5                     	ds	4
 13141  0000B9                     _peakToRMS$4723:
 13142                           	opt stack 0
 13143                           
 13144                           ; 4 bytes @ 0x59
 13145  0000B9                     	ds	4
 13146  0000BD                     _peakToRMS$4724:
 13147                           	opt stack 0
 13148                           
 13149                           ; 4 bytes @ 0x5D
 13150  0000BD                     	ds	4
 13151  0000C1                     _peakToRMS$4722:
 13152                           	opt stack 0
 13153                           
 13154                           ; 4 bytes @ 0x61
 13155  0000C1                     	ds	4
 13156  0000C5                     peakToRMS@RMS:
 13157                           	opt stack 0
 13158                           
 13159                           ; 4 bytes @ 0x65
 13160  0000C5                     	ds	4
 13161  0000C9                     _ADCPostProcessingCallback$4727:
 13162                           	opt stack 0
 13163                           
 13164                           ; 4 bytes @ 0x69
 13165  0000C9                     	ds	4
 13166  0000CD                     _ADCPostProcessingCallback$4728:
 13167                           	opt stack 0
 13168                           
 13169                           ; 4 bytes @ 0x6D
 13170  0000CD                     	ds	4
 13171  0000D1                     _ADCPostProcessingCallback$4729:
 13172                           	opt stack 0
 13173                           
 13174                           ; 4 bytes @ 0x71
 13175  0000D1                     	ds	4
 13176  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 13177                           	opt stack 0
 13178                           
 13179                           ; 1 bytes @ 0x75
 13180  0000D5                     	ds	1
 13181  0000D6                     _ADCPostProcessingCallback$4725:
 13182                           	opt stack 0
 13183                           
 13184                           ; 4 bytes @ 0x76
 13185  0000D6                     	ds	4
 13186  0000DA                     _ADCPostProcessingCallback$4726:
 13187                           	opt stack 0
 13188                           
 13189                           ; 4 bytes @ 0x7A
 13190  0000DA                     	ds	4
 13191  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 13192                           
 13193                           ; 1 bytes @ 0x7E
 13194  0000DE                     	ds	18
 13195                           tblptru	equ	0xFF8
 13196                           tblptrh	equ	0xFF7
 13197                           tblptrl	equ	0xFF6
 13198                           tablat	equ	0xFF5
 13199                           postinc0	equ	0xFEE
 13200                           wreg	equ	0xFE8
 13201                           postdec1	equ	0xFE5
 13202                           fsr1l	equ	0xFE1
 13203                           
 13204                           	psect	cstackCOMRAM
 13205  000001                     __pcstackCOMRAM:
 13206                           	opt stack 0
 13207  000001                     ??i2_isdigit:
 13208  000001                     ?_ADCC_GetConversionResult:
 13209                           	opt stack 0
 13210  000001                     ?_ADCC_GetFilterValue:
 13211                           	opt stack 0
 13212  000001                     ?i2___wmul:
 13213                           	opt stack 0
 13214  000001                     ?i2___awmod:
 13215                           	opt stack 0
 13216  000001                     ?i2__div_to_l_:
 13217                           	opt stack 0
 13218  000001                     ?i2__tdiv_to_l_:
 13219                           	opt stack 0
 13220  000001                     ?i2___lldiv:
 13221                           	opt stack 0
 13222  000001                     i2EUSART2_Write@txData:
 13223                           	opt stack 0
 13224  000001                     TMR5_WriteTimer@timerVal:
 13225                           	opt stack 0
 13226  000001                     i2DATAEE_WriteByte@bAdd:
 13227                           	opt stack 0
 13228  000001                     i2DATAEE_ReadByte@bAdd:
 13229                           	opt stack 0
 13230  000001                     i2___wmul@multiplier:
 13231                           	opt stack 0
 13232  000001                     i2___awmod@dividend:
 13233                           	opt stack 0
 13234  000001                     i2__tdiv_to_l_@f1:
 13235                           	opt stack 0
 13236  000001                     frexp@value:
 13237                           	opt stack 0
 13238  000001                     i2__div_to_l_@f1:
 13239                           	opt stack 0
 13240  000001                     i2___lldiv@dividend:
 13241                           	opt stack 0
 13242                           
 13243                           ; 4 bytes @ 0x0
 13244  000001                     	ds	1
 13245  000002                     i2putch@txData:
 13246                           	opt stack 0
 13247  000002                     i2_isdigit$3742:
 13248                           	opt stack 0
 13249                           
 13250                           ; 1 bytes @ 0x1
 13251  000002                     	ds	1
 13252  000003                     ??_ADCC_GetConversionResult:
 13253  000003                     ??_ADCC_GetFilterValue:
 13254  000003                     ?i2_readDoubleFromEEPROM:
 13255                           	opt stack 0
 13256  000003                     i2DATAEE_WriteByte@bData:
 13257                           	opt stack 0
 13258  000003                     i2isdigit@c:
 13259                           	opt stack 0
 13260  000003                     i2readDoubleFromEEPROM@starting_address:
 13261                           	opt stack 0
 13262  000003                     i2___wmul@multiplicand:
 13263                           	opt stack 0
 13264  000003                     i2___awmod@divisor:
 13265                           	opt stack 0
 13266                           
 13267                           ; 2 bytes @ 0x2
 13268  000003                     	ds	1
 13269  000004                     i2DATAEE_WriteByte@GIEBitValue:
 13270                           	opt stack 0
 13271  000004                     i2__tdiv_to_l_@f2:
 13272                           	opt stack 0
 13273                           
 13274                           ; 3 bytes @ 0x3
 13275  000004                     	ds	1
 13276  000005                     ?i2___xxtofl:
 13277                           	opt stack 0
 13278  000005                     i2___awmod@counter:
 13279                           	opt stack 0
 13280  000005                     frexp@eptr:
 13281                           	opt stack 0
 13282  000005                     i2___wmul@product:
 13283                           	opt stack 0
 13284  000005                     i2writeDoubleToEEPROM@input_double:
 13285                           	opt stack 0
 13286  000005                     i2__div_to_l_@f2:
 13287                           	opt stack 0
 13288  000005                     i2___lldiv@divisor:
 13289                           	opt stack 0
 13290  000005                     i2___xxtofl@val:
 13291                           	opt stack 0
 13292                           
 13293                           ; 4 bytes @ 0x4
 13294  000005                     	ds	1
 13295  000006                     i2___awmod@sign:
 13296                           	opt stack 0
 13297                           
 13298                           ; 1 bytes @ 0x5
 13299  000006                     	ds	1
 13300  000007                     ??_frexp:
 13301  000007                     ??i2__tdiv_to_l_:
 13302  000007                     ?i2___awdiv:
 13303                           	opt stack 0
 13304  000007                     i2___awdiv@dividend:
 13305                           	opt stack 0
 13306  000007                     i2readDoubleFromEEPROM@output_data:
 13307                           	opt stack 0
 13308                           
 13309                           ; 4 bytes @ 0x6
 13310  000007                     	ds	2
 13311  000009                     ??i2___xxtofl:
 13312  000009                     i2writeDoubleToEEPROM@starting_address:
 13313                           	opt stack 0
 13314  000009                     i2___awdiv@divisor:
 13315                           	opt stack 0
 13316  000009                     i2__div_to_l_@quot:
 13317                           	opt stack 0
 13318  000009                     i2___lldiv@quotient:
 13319                           	opt stack 0
 13320                           
 13321                           ; 4 bytes @ 0x8
 13322  000009                     	ds	1
 13323  00000A                     i2__tdiv_to_l_@quot:
 13324                           	opt stack 0
 13325                           
 13326                           ; 4 bytes @ 0x9
 13327  00000A                     	ds	1
 13328  00000B                     i2___awdiv@counter:
 13329                           	opt stack 0
 13330  00000B                     i2readDoubleFromEEPROM@byte_index:
 13331                           	opt stack 0
 13332  00000B                     i2writeDoubleToEEPROM@input_data:
 13333                           	opt stack 0
 13334                           
 13335                           ; 4 bytes @ 0xA
 13336  00000B                     	ds	1
 13337  00000C                     i2___awdiv@sign:
 13338                           	opt stack 0
 13339                           
 13340                           ; 1 bytes @ 0xB
 13341  00000C                     	ds	1
 13342  00000D                     i2__div_to_l_@cntr:
 13343                           	opt stack 0
 13344  00000D                     i2___lldiv@counter:
 13345                           	opt stack 0
 13346  00000D                     i2___xxtofl@sign:
 13347                           	opt stack 0
 13348  00000D                     i2___awdiv@quotient:
 13349                           	opt stack 0
 13350                           
 13351                           ; 2 bytes @ 0xC
 13352  00000D                     	ds	1
 13353  00000E                     ?i2___llmod:
 13354                           	opt stack 0
 13355  00000E                     i2__div_to_l_@exp1:
 13356                           	opt stack 0
 13357  00000E                     i2__tdiv_to_l_@cntr:
 13358                           	opt stack 0
 13359  00000E                     i2___xxtofl@exp:
 13360                           	opt stack 0
 13361  00000E                     i2___llmod@dividend:
 13362                           	opt stack 0
 13363                           
 13364                           ; 4 bytes @ 0xD
 13365  00000E                     	ds	1
 13366  00000F                     i2__tdiv_to_l_@exp1:
 13367                           	opt stack 0
 13368  00000F                     i2writeDoubleToEEPROM@byte_index:
 13369                           	opt stack 0
 13370  00000F                     i2___xxtofl@arg:
 13371                           	opt stack 0
 13372                           
 13373                           ; 4 bytes @ 0xE
 13374  00000F                     	ds	2
 13375  000011                     
 13376                           ; 1 bytes @ 0x10
 13377  000011                     	ds	1
 13378  000012                     i2___llmod@divisor:
 13379                           	opt stack 0
 13380                           
 13381                           ; 4 bytes @ 0x11
 13382  000012                     	ds	1
 13383  000013                     ?i2___fldiv:
 13384                           	opt stack 0
 13385  000013                     i2___fldiv@b:
 13386                           	opt stack 0
 13387                           
 13388                           ; 4 bytes @ 0x12
 13389  000013                     	ds	3
 13390  000016                     i2___llmod@counter:
 13391                           	opt stack 0
 13392                           
 13393                           ; 1 bytes @ 0x15
 13394  000016                     	ds	1
 13395  000017                     i2___fldiv@a:
 13396                           	opt stack 0
 13397                           
 13398                           ; 4 bytes @ 0x16
 13399  000017                     	ds	4
 13400  00001B                     ??i2___fldiv:
 13401                           
 13402                           ; 1 bytes @ 0x1A
 13403  00001B                     	ds	4
 13404  00001F                     i2___fldiv@sign:
 13405                           	opt stack 0
 13406                           
 13407                           ; 1 bytes @ 0x1E
 13408  00001F                     	ds	1
 13409  000020                     i2___fldiv@rem:
 13410                           	opt stack 0
 13411                           
 13412                           ; 4 bytes @ 0x1F
 13413  000020                     	ds	4
 13414  000024                     i2___fldiv@new_exp:
 13415                           	opt stack 0
 13416                           
 13417                           ; 2 bytes @ 0x23
 13418  000024                     	ds	2
 13419  000026                     i2___fldiv@grs:
 13420                           	opt stack 0
 13421                           
 13422                           ; 4 bytes @ 0x25
 13423  000026                     	ds	4
 13424  00002A                     i2___fldiv@bexp:
 13425                           	opt stack 0
 13426                           
 13427                           ; 1 bytes @ 0x29
 13428  00002A                     	ds	1
 13429  00002B                     i2___fldiv@aexp:
 13430                           	opt stack 0
 13431                           
 13432                           ; 1 bytes @ 0x2A
 13433  00002B                     	ds	1
 13434  00002C                     ?i2___flneg:
 13435                           	opt stack 0
 13436  00002C                     i2___flneg@f1:
 13437                           	opt stack 0
 13438                           
 13439                           ; 4 bytes @ 0x2B
 13440  00002C                     	ds	4
 13441  000030                     ?_fabs:
 13442                           	opt stack 0
 13443  000030                     ?i2___flmul:
 13444                           	opt stack 0
 13445  000030                     fabs@d:
 13446                           	opt stack 0
 13447  000030                     i2___flmul@b:
 13448                           	opt stack 0
 13449                           
 13450                           ; 4 bytes @ 0x2F
 13451  000030                     	ds	4
 13452  000034                     i2___flge@ff1:
 13453                           	opt stack 0
 13454  000034                     i2___flmul@a:
 13455                           	opt stack 0
 13456                           
 13457                           ; 4 bytes @ 0x33
 13458  000034                     	ds	4
 13459  000038                     ??i2___flmul:
 13460  000038                     i2___flge@ff2:
 13461                           	opt stack 0
 13462                           
 13463                           ; 4 bytes @ 0x37
 13464  000038                     	ds	4
 13465  00003C                     ??i2___flge:
 13466  00003C                     i2___flmul@sign:
 13467                           	opt stack 0
 13468                           
 13469                           ; 1 bytes @ 0x3B
 13470  00003C                     	ds	1
 13471  00003D                     i2___flmul@aexp:
 13472                           	opt stack 0
 13473                           
 13474                           ; 1 bytes @ 0x3C
 13475  00003D                     	ds	1
 13476  00003E                     i2___flmul@grs:
 13477                           	opt stack 0
 13478                           
 13479                           ; 4 bytes @ 0x3D
 13480  00003E                     	ds	2
 13481  000040                     writeEnergyToEEPROMCallback@current_value:
 13482                           	opt stack 0
 13483                           
 13484                           ; 4 bytes @ 0x3F
 13485  000040                     	ds	2
 13486  000042                     i2___flmul@bexp:
 13487                           	opt stack 0
 13488                           
 13489                           ; 1 bytes @ 0x41
 13490  000042                     	ds	1
 13491  000043                     i2___flmul@prod:
 13492                           	opt stack 0
 13493                           
 13494                           ; 4 bytes @ 0x42
 13495  000043                     	ds	1
 13496  000044                     
 13497                           ; 1 bytes @ 0x43
 13498  000044                     	ds	3
 13499  000047                     i2___flmul@temp:
 13500                           	opt stack 0
 13501                           
 13502                           ; 2 bytes @ 0x46
 13503  000047                     	ds	2
 13504  000049                     ?i2_fround:
 13505                           	opt stack 0
 13506  000049                     ?i2_scale:
 13507                           	opt stack 0
 13508                           
 13509                           ; 4 bytes @ 0x48
 13510  000049                     	ds	4
 13511  00004D                     i2_fround$4736:
 13512                           	opt stack 0
 13513  00004D                     i2_scale$4737:
 13514                           	opt stack 0
 13515                           
 13516                           ; 4 bytes @ 0x4C
 13517  00004D                     	ds	4
 13518  000051                     i2scale@scl:
 13519                           	opt stack 0
 13520  000051                     i2_fround$4735:
 13521                           	opt stack 0
 13522                           
 13523                           ; 4 bytes @ 0x50
 13524  000051                     	ds	4
 13525  000055                     i2fround@prec:
 13526                           	opt stack 0
 13527                           
 13528                           ; 1 bytes @ 0x54
 13529  000055                     	ds	1
 13530  000056                     ?i2___fladd:
 13531                           	opt stack 0
 13532  000056                     i2___fladd@b:
 13533                           	opt stack 0
 13534                           
 13535                           ; 4 bytes @ 0x55
 13536  000056                     	ds	4
 13537  00005A                     i2___fladd@a:
 13538                           	opt stack 0
 13539                           
 13540                           ; 4 bytes @ 0x59
 13541  00005A                     	ds	4
 13542  00005E                     tblptru	equ	0xFF8
 13543                           tblptrh	equ	0xFF7
 13544                           tblptrl	equ	0xFF6
 13545                           tablat	equ	0xFF5
 13546                           postinc0	equ	0xFEE
 13547                           wreg	equ	0xFE8
 13548                           postdec1	equ	0xFE5
 13549                           fsr1l	equ	0xFE1
 13550                           
 13551                           ; 1 bytes @ 0x5D
 13552 ;;
 13553 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 13554 ;;
 13555 ;; *************** function _main *****************
 13556 ;; Defined at:
 13557 ;;		line 493 in file "main.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;		None
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      void 
 13564 ;; Registers used:
 13565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13573 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 13574 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 13575 ;;Total ram usage:        2 bytes
 13576 ;; Hardware stack levels required when called:   20
 13577 ;; This function calls:
 13578 ;;		_ADCC_SetADTIInterruptHandler
 13579 ;;		_INT0_SetInterruptHandler
 13580 ;;		_SYSTEM_Initialize
 13581 ;;		_TMR4_SetInterruptHandler
 13582 ;;		_TMR5_SetInterruptHandler
 13583 ;;		_TMR5_StopTimer
 13584 ;;		_TMR6_SetInterruptHandler
 13585 ;;		_TMR7_SetInterruptHandler
 13586 ;;		_getCauseOfReset
 13587 ;;		_recoverSRAMMaxFromEEPROM
 13588 ;;		_saveSRAMMaxToEEPROM
 13589 ;;		_terminal_clearTerminal
 13590 ;;		_terminal_ringBufferPull
 13591 ;;		_terminal_setCursorHome
 13592 ;;		_terminal_textAttributesReset
 13593 ;; This function is called by:
 13594 ;;		Startup code after reset
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text0
 13599  0181C8                     __ptext0:
 13600                           	opt stack 0
 13601  0181C8                     _main:
 13602                           	opt stack 11
 13603                           
 13604                           ;main.c: 497: reset_cause = getCauseOfReset();
 13605                           
 13606                           ;incstack = 0
 13607  0181C8  ECF2  F0C6         	call	_getCauseOfReset	;wreg free
 13608  0181CC  0102               	movlb	2	; () banked
 13609  0181CE  6FFD               	movwf	_reset_cause& (0+255),b
 13610                           
 13611                           ; BSR set to: 2
 13612                           ;main.c: 501: _delay((unsigned long)((250)*(64000000/4000.0)));
 13613  0181D0  0E15               	movlw	21
 13614  0181D2  0102               	movlb	2	; () banked
 13615  0181D4  6FD8               	movwf	(??_main+1)& (0+255),b
 13616  0181D6  0E4B               	movlw	75
 13617  0181D8  6FD7               	movwf	??_main& (0+255),b
 13618  0181DA  0EBE               	movlw	190
 13619  0181DC                     u27847:
 13620  0181DC  2EE8               	decfsz	wreg,f,c
 13621  0181DE  D7FE               	bra	u27847
 13622  0181E0  2FD7               	decfsz	??_main& (0+255),f,b
 13623  0181E2  D7FC               	bra	u27847
 13624  0181E4  2FD8               	decfsz	(??_main+1)& (0+255),f,b
 13625  0181E6  D7FA               	bra	u27847
 13626  0181E8  F000               	nop	
 13627                           
 13628                           ;main.c: 504: SYSTEM_Initialize();
 13629  0181EA  ECEB  F0C9         	call	_SYSTEM_Initialize	;wreg free
 13630                           
 13631                           ;main.c: 507: LATGbits.LATG0 = 0;
 13632  0181EE  907F               	bcf	3967,0,c	;volatile
 13633                           
 13634                           ;main.c: 508: LATGbits.LATG1 = 0;
 13635  0181F0  927F               	bcf	3967,1,c	;volatile
 13636                           
 13637                           ;main.c: 509: load_enable = 0;
 13638  0181F2  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 13639                           
 13640                           ;main.c: 512: ADCON2bits.ADCRS = 7;
 13641  0181F4  010F               	movlb	15	; () banked
 13642  0181F6  895A               	bsf	90,4,b	;volatile
 13643  0181F8  8B5A               	bsf	90,5,b	;volatile
 13644  0181FA  8D5A               	bsf	90,6,b	;volatile
 13645                           
 13646                           ; BSR set to: 15
 13647                           ;main.c: 513: ADCAP = 20;
 13648  0181FC  0E14               	movlw	20
 13649  0181FE  6F5D               	movwf	93,b	;volatile
 13650                           
 13651                           ; BSR set to: 15
 13652                           ;main.c: 516: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 13653  018200  0E00               	movlw	low _heartbeatTimerCallback
 13654  018202  0101               	movlb	1	; () banked
 13655  018204  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 13656  018206  0E92               	movlw	high _heartbeatTimerCallback
 13657  018208  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13658  01820A  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 13659  01820C  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 13660  01820E  EC9B  F0CC         	call	_TMR6_SetInterruptHandler	;wreg free
 13661                           
 13662                           ;main.c: 519: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 13663  018212  0E2C               	movlw	low _ADCPostProcessingCallback
 13664  018214  0101               	movlb	1	; () banked
 13665  018216  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 13666  018218  0E31               	movlw	high _ADCPostProcessingCallback
 13667  01821A  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 13668  01821C  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 13669  01821E  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 13670  018220  ECC5  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 13671                           
 13672                           ;main.c: 522: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 13673  018224  0EC8               	movlw	low _acquisitionTimerCallback
 13674  018226  0101               	movlb	1	; () banked
 13675  018228  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 13676  01822A  0E98               	movlw	high _acquisitionTimerCallback
 13677  01822C  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13678  01822E  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 13679  018230  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 13680  018232  EC94  F0CC         	call	_TMR7_SetInterruptHandler	;wreg free
 13681                           
 13682                           ;main.c: 525: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 13683  018236  0E76               	movlw	low _dimmingOffTimeCallback
 13684  018238  0101               	movlb	1	; () banked
 13685  01823A  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 13686  01823C  0E98               	movlw	high _dimmingOffTimeCallback
 13687  01823E  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13688  018240  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 13689  018242  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 13690  018244  ECB0  F0CC         	call	_INT0_SetInterruptHandler	;wreg free
 13691                           
 13692                           ;main.c: 528: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 13693  018248  0EA6               	movlw	low _dimmingOnTimeCallback
 13694  01824A  0101               	movlb	1	; () banked
 13695  01824C  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 13696  01824E  0E99               	movlw	high _dimmingOnTimeCallback
 13697  018250  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13698  018252  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 13699  018254  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 13700  018256  ECA2  F0CC         	call	_TMR5_SetInterruptHandler	;wreg free
 13701                           
 13702                           ;main.c: 531: TMR4_SetInterruptHandler(writeEnergyToEEPROMCallback);
 13703  01825A  0E3C               	movlw	low _writeEnergyToEEPROMCallback
 13704  01825C  0101               	movlb	1	; () banked
 13705  01825E  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 13706  018260  0E87               	movlw	high _writeEnergyToEEPROMCallback
 13707  018262  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13708  018264  0E01               	movlw	low (_writeEnergyToEEPROMCallback shr (0+16))
 13709  018266  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 13710  018268  ECA9  F0CC         	call	_TMR4_SetInterruptHandler	;wreg free
 13711                           
 13712                           ;main.c: 534: TMR5_StopTimer();
 13713  01826C  ECFD  F0CC         	call	_TMR5_StopTimer	;wreg free
 13714                           
 13715                           ;main.c: 535: PIE0bits.INT0IE = 0;
 13716  018270  010E               	movlb	14	; () banked
 13717  018272  9129               	bcf	41,0,b	;volatile
 13718                           
 13719                           ; BSR set to: 14
 13720                           ;main.c: 538: recoverSRAMMaxFromEEPROM();
 13721  018274  EC6F  F0B9         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 13722                           
 13723                           ;main.c: 541: (INTCONbits.GIEH = 1);
 13724  018278  8EF2               	bsf	intcon,7,c	;volatile
 13725                           
 13726                           ;main.c: 544: (INTCONbits.GIEL = 1);
 13727  01827A  8CF2               	bsf	intcon,6,c	;volatile
 13728                           
 13729                           ;main.c: 547: terminal_clearTerminal();
 13730  01827C  EC7D  F0CC         	call	_terminal_clearTerminal	;wreg free
 13731                           
 13732                           ;main.c: 548: terminal_setCursorHome();
 13733  018280  EC6D  F0CC         	call	_terminal_setCursorHome	;wreg free
 13734                           
 13735                           ;main.c: 549: terminal_textAttributesReset();
 13736  018284  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 13737  018288                     
 13738                           ;main.c: 553: {
 13739                           ;main.c: 556: if (eusart2RxStringReady) {
 13740  018288  0100               	movlb	0	; () banked
 13741  01828A  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;main.c: 558: terminal_ringBufferPull();
 13745  01828C  EC66  F0BC         	call	_terminal_ringBufferPull	;wreg free
 13746                           
 13747                           ;main.c: 560: }
 13748                           ;main.c: 563: saveSRAMMaxToEEPROM();
 13749  018290  ECAA  F0B4         	call	_saveSRAMMaxToEEPROM	;wreg free
 13750  018294  D7F9               	goto	l1205
 13751  018296                     __end_of_main:
 13752                           	opt stack 0
 13753                           tblptru	equ	0xFF8
 13754                           tblptrh	equ	0xFF7
 13755                           tblptrl	equ	0xFF6
 13756                           tablat	equ	0xFF5
 13757                           intcon	equ	0xFF2
 13758                           postinc0	equ	0xFEE
 13759                           wreg	equ	0xFE8
 13760                           postdec1	equ	0xFE5
 13761                           fsr1l	equ	0xFE1
 13762                           
 13763 ;; *************** function _terminal_setCursorHome *****************
 13764 ;; Defined at:
 13765 ;;		line 85 in file "ring_buffer_interface.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;		None
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;		None
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  1    wreg      void 
 13772 ;; Registers used:
 13773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13783 ;;Total ram usage:        0 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:   16
 13786 ;; This function calls:
 13787 ;;		_printf
 13788 ;; This function is called by:
 13789 ;;		_main
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text1
 13794  0198DA                     __ptext1:
 13795                           	opt stack 0
 13796  0198DA                     _terminal_setCursorHome:
 13797                           	opt stack 14
 13798                           
 13799                           ;ring_buffer_interface.c: 86: printf("\033[H");
 13800                           
 13801                           ;incstack = 0
 13802  0198DA  0EB9               	movlw	low STR_3
 13803  0198DC  0101               	movlb	1	; () banked
 13804  0198DE  6F82               	movwf	printf@f& (0+255),b
 13805  0198E0  0EFF               	movlw	high STR_3
 13806  0198E2  6F83               	movwf	(printf@f+1)& (0+255),b
 13807  0198E4  ECCD  F08A         	call	_printf	;wreg free
 13808  0198E8  0012               	return		;funcret
 13809  0198EA                     __end_of_terminal_setCursorHome:
 13810                           	opt stack 0
 13811                           tblptru	equ	0xFF8
 13812                           tblptrh	equ	0xFF7
 13813                           tblptrl	equ	0xFF6
 13814                           tablat	equ	0xFF5
 13815                           intcon	equ	0xFF2
 13816                           postinc0	equ	0xFEE
 13817                           wreg	equ	0xFE8
 13818                           postdec1	equ	0xFE5
 13819                           fsr1l	equ	0xFE1
 13820                           
 13821 ;; *************** function _terminal_ringBufferPull *****************
 13822 ;; Defined at:
 13823 ;;		line 12 in file "ring_buffer_interface.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;		None
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;  index           2    2[BANK3 ] int 
 13828 ;;  index           2    4[BANK3 ] int 
 13829 ;;  charNumber      2    0[BANK3 ] int 
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      void 
 13832 ;; Registers used:
 13833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13840 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0
 13841 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13842 ;;      Totals:         0       0       3       0       6       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;Total ram usage:        9 bytes
 13844 ;; Hardware stack levels used:    1
 13845 ;; Hardware stack levels required when called:   19
 13846 ;; This function calls:
 13847 ;;		_EUSART2_Read
 13848 ;;		_ringBufferLUT
 13849 ;;		_strlen
 13850 ;; This function is called by:
 13851 ;;		_main
 13852 ;; This function uses a non-reentrant model
 13853 ;;
 13854                           
 13855                           	psect	text2
 13856  0178CC                     __ptext2:
 13857                           	opt stack 0
 13858  0178CC                     _terminal_ringBufferPull:
 13859                           	opt stack 11
 13860                           
 13861                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 13862                           
 13863                           ;incstack = 0
 13864  0178CC  C1DF  F3C0         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 13865  0178D0  0103               	movlb	3	; () banked
 13866  0178D2  6BC1               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 13867                           
 13868                           ; BSR set to: 3
 13869                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 13870  0178D4  0E00               	movlw	0
 13871  0178D6  6FC5               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 13872  0178D8  0E00               	movlw	0
 13873  0178DA  6FC4               	movwf	terminal_ringBufferPull@index& (0+255),b
 13874  0178DC                     l20733:
 13875                           
 13876                           ; BSR set to: 3
 13877  0178DC  BFC5               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 13878  0178DE  D006               	goto	l1244
 13879  0178E0  51C5               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 13880  0178E2  E10F               	bnz	l20743
 13881  0178E4  0E40               	movlw	64
 13882  0178E6  5DC4               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 13883  0178E8  B0D8               	btfsc	status,0,c
 13884  0178EA  D00B               	goto	u27570
 13885  0178EC                     l1244:
 13886                           
 13887                           ; BSR set to: 3
 13888                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 13889                           
 13890                           ; BSR set to: 3
 13891  0178EC  0E4C               	movlw	low _line
 13892  0178EE  25C4               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 13893  0178F0  6ED9               	movwf	fsr2l,c
 13894  0178F2  0E02               	movlw	high _line
 13895  0178F4  21C5               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 13896  0178F6  6EDA               	movwf	fsr2h,c
 13897  0178F8  0E00               	movlw	0
 13898  0178FA  6EDF               	movwf	indf2,c
 13899                           
 13900                           ; BSR set to: 3
 13901  0178FC  4BC4               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 13902  0178FE  2BC5               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 13903  017900  D7ED               	goto	l20733
 13904  017902                     u27570:
 13905  017902                     l20743:
 13906                           
 13907                           ; BSR set to: 3
 13908                           ;ring_buffer_interface.c: 21: }
 13909                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 13910  017902  0E00               	movlw	0
 13911  017904  6FC3               	movwf	(terminal_ringBufferPull@index_2870+1)& (0+255),b
 13912  017906  0E00               	movlw	0
 13913  017908  6FC2               	movwf	terminal_ringBufferPull@index_2870& (0+255),b
 13914  01790A  D00F               	goto	l1246
 13915  01790C                     
 13916                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 13917                           
 13918                           ; BSR set to: 3
 13919  01790C  EC51  F0C8         	call	_EUSART2_Read	;wreg free
 13920  017910  0101               	movlb	1	; () banked
 13921  017912  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13922  017914  0E4C               	movlw	low _line
 13923  017916  0103               	movlb	3	; () banked
 13924  017918  25C2               	addwf	terminal_ringBufferPull@index_2870& (0+255),w,b
 13925  01791A  6ED9               	movwf	fsr2l,c
 13926  01791C  0E02               	movlw	high _line
 13927  01791E  21C3               	addwfc	(terminal_ringBufferPull@index_2870+1)& (0+255),w,b
 13928  017920  6EDA               	movwf	fsr2h,c
 13929  017922  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
 13930                           
 13931                           ; BSR set to: 3
 13932  017926  4BC2               	infsnz	terminal_ringBufferPull@index_2870& (0+255),f,b
 13933  017928  2BC3               	incf	(terminal_ringBufferPull@index_2870+1)& (0+255),f,b
 13934  01792A                     l1246:
 13935                           
 13936                           ; BSR set to: 3
 13937                           
 13938                           ; BSR set to: 3
 13939  01792A  51C0               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 13940  01792C  5DC2               	subwf	terminal_ringBufferPull@index_2870& (0+255),w,b
 13941  01792E  51C3               	movf	(terminal_ringBufferPull@index_2870+1)& (0+255),w,b
 13942  017930  0A80               	xorlw	128
 13943  017932  0101               	movlb	1	; () banked
 13944  017934  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13945  017936  0103               	movlb	3	; () banked
 13946  017938  51C1               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 13947  01793A  0A80               	xorlw	128
 13948  01793C  0101               	movlb	1	; () banked
 13949  01793E  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 13950  017940  A0D8               	btfss	status,0,c
 13951  017942  D7E4               	goto	l1247
 13952                           
 13953                           ; BSR set to: 1
 13954                           ;ring_buffer_interface.c: 28: }
 13955                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 13956  017944  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 13957                           
 13958                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 13959                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 13960  017948  D017               	goto	l1249
 13961  01794A                     
 13962                           ; BSR set to: 1
 13963                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 13964                           
 13965                           ; BSR set to: 1
 13966  01794A  0EFF               	movlw	255
 13967  01794C  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13968  01794E  0EFF               	movlw	255
 13969  017950  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 13970  017952  0E4C               	movlw	low _line
 13971  017954  6F17               	movwf	strlen@s& (0+255),b
 13972  017956  0E02               	movlw	high _line
 13973  017958  6F18               	movwf	(strlen@s+1)& (0+255),b
 13974  01795A  EC73  F0C6         	call	_strlen	;wreg free
 13975  01795E  0101               	movlb	1	; () banked
 13976  017960  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 13977  017962  2717               	addwf	?_strlen& (0+255),f,b
 13978  017964  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 13979  017966  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 13980  017968  0E4C               	movlw	low _line
 13981  01796A  2517               	addwf	?_strlen& (0+255),w,b
 13982  01796C  6ED9               	movwf	fsr2l,c
 13983  01796E  0E02               	movlw	high _line
 13984  017970  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 13985  017972  6EDA               	movwf	fsr2h,c
 13986  017974  0E00               	movlw	0
 13987  017976  6EDF               	movwf	indf2,c
 13988  017978                     l1249:
 13989                           
 13990                           ; BSR set to: 1
 13991  017978  0EFF               	movlw	255
 13992  01797A  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13993  01797C  0EFF               	movlw	255
 13994  01797E  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 13995  017980  0E4C               	movlw	low _line
 13996  017982  6F17               	movwf	strlen@s& (0+255),b
 13997  017984  0E02               	movlw	high _line
 13998  017986  6F18               	movwf	(strlen@s+1)& (0+255),b
 13999  017988  EC73  F0C6         	call	_strlen	;wreg free
 14000  01798C  0101               	movlb	1	; () banked
 14001  01798E  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 14002  017990  2717               	addwf	?_strlen& (0+255),f,b
 14003  017992  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 14004  017994  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 14005  017996  0E4C               	movlw	low _line
 14006  017998  2517               	addwf	?_strlen& (0+255),w,b
 14007  01799A  6ED9               	movwf	fsr2l,c
 14008  01799C  0E02               	movlw	high _line
 14009  01799E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 14010  0179A0  6EDA               	movwf	fsr2h,c
 14011  0179A2  0E0A               	movlw	10
 14012  0179A4  18DE               	xorwf	postinc2,w,c
 14013  0179A6  B4D8               	btfsc	status,2,c
 14014  0179A8  D7D0               	goto	l1250
 14015                           
 14016                           ; BSR set to: 1
 14017  0179AA  0EFF               	movlw	255
 14018  0179AC  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 14019  0179AE  0EFF               	movlw	255
 14020  0179B0  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 14021  0179B2  0E4C               	movlw	low _line
 14022  0179B4  6F17               	movwf	strlen@s& (0+255),b
 14023  0179B6  0E02               	movlw	high _line
 14024  0179B8  6F18               	movwf	(strlen@s+1)& (0+255),b
 14025  0179BA  EC73  F0C6         	call	_strlen	;wreg free
 14026  0179BE  0101               	movlb	1	; () banked
 14027  0179C0  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 14028  0179C2  2717               	addwf	?_strlen& (0+255),f,b
 14029  0179C4  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 14030  0179C6  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 14031  0179C8  0E4C               	movlw	low _line
 14032  0179CA  2517               	addwf	?_strlen& (0+255),w,b
 14033  0179CC  6ED9               	movwf	fsr2l,c
 14034  0179CE  0E02               	movlw	high _line
 14035  0179D0  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 14036  0179D2  6EDA               	movwf	fsr2h,c
 14037  0179D4  0E0D               	movlw	13
 14038  0179D6  18DE               	xorwf	postinc2,w,c
 14039  0179D8  B4D8               	btfsc	status,2,c
 14040  0179DA  D7B7               	goto	l1250
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;ring_buffer_interface.c: 40: }
 14044                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 14045  0179DC  0100               	movlb	0	; () banked
 14046  0179DE  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 14050  0179E0  0E4C               	movlw	low _line
 14051  0179E2  0101               	movlb	1	; () banked
 14052  0179E4  6FB4               	movwf	ringBufferLUT@line& (0+255),b
 14053  0179E6  0E02               	movlw	high _line
 14054  0179E8  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
 14055  0179EA  EC00  F080         	call	_ringBufferLUT	;wreg free
 14056  0179EE  0012               	return		;funcret
 14057  0179F0                     __end_of_terminal_ringBufferPull:
 14058                           	opt stack 0
 14059                           tblptru	equ	0xFF8
 14060                           tblptrh	equ	0xFF7
 14061                           tblptrl	equ	0xFF6
 14062                           tablat	equ	0xFF5
 14063                           intcon	equ	0xFF2
 14064                           postinc0	equ	0xFEE
 14065                           wreg	equ	0xFE8
 14066                           postdec1	equ	0xFE5
 14067                           fsr1l	equ	0xFE1
 14068                           indf2	equ	0xFDF
 14069                           postinc2	equ	0xFDE
 14070                           fsr2h	equ	0xFDA
 14071                           fsr2l	equ	0xFD9
 14072                           status	equ	0xFD8
 14073                           
 14074 ;; *************** function _ringBufferLUT *****************
 14075 ;; Defined at:
 14076 ;;		line 61 in file "ring_buffer_LUT.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;  line            2  180[BANK1 ] PTR unsigned char 
 14079 ;;		 -> line(64), 
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;  angle_degree    4   38[BANK2 ] PTR unsigned char 
 14082 ;;  index           2   69[BANK2 ] int 
 14083 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
 14084 ;;  userID          2   73[BANK2 ] int 
 14085 ;;  max_voltage_    4   62[BANK2 ] int 
 14086 ;;  max_temp_pri    4   58[BANK2 ] int 
 14087 ;;  max_voltage_    4   54[BANK2 ] int 
 14088 ;;  max_voltage_    4   50[BANK2 ] int 
 14089 ;;  max_Power_pr    4   46[BANK2 ] int 
 14090 ;;  max_current_    4   42[BANK2 ] int 
 14091 ;;  arg_buff        3   66[BANK2 ] unsigned char [3]
 14092 ;;  percentage      2   71[BANK2 ] int 
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      void 
 14095 ;; Registers used:
 14096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14102 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14103 ;;      Locals:         0       0       0      59       0       0       0       0       0       0       0       0       
      +0       0       0
 14104 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14105 ;;      Totals:         0       0       4      59       0       0       0       0       0       0       0       0       
      +0       0       0
 14106 ;;Total ram usage:       63 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; Hardware stack levels required when called:   18
 14109 ;; This function calls:
 14110 ;;		_TMR5_StopTimer
 14111 ;;		_TMR7_StopTimer
 14112 ;;		___fladd
 14113 ;;		___fldiv
 14114 ;;		___flmul
 14115 ;;		___flneg
 14116 ;;		___wmul
 14117 ;;		___xxtofl
 14118 ;;		_atoi
 14119 ;;		_getCauseOfResetString
 14120 ;;		_getDeviceID
 14121 ;;		_getDeviceIDString
 14122 ;;		_getMajorRevisionID
 14123 ;;		_getMinorRevisionID
 14124 ;;		_getUserID
 14125 ;;		_printf
 14126 ;;		_readDoubleFromEEPROM
 14127 ;;		_strcmp
 14128 ;;		_strcpy
 14129 ;;		_strstr
 14130 ;;		_terminal_printNewline
 14131 ;;		_terminal_textAttributes
 14132 ;;		_terminal_textAttributesReset
 14133 ;;		_writeDoubleToEEPROM
 14134 ;; This function is called by:
 14135 ;;		_terminal_ringBufferPull
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text3
 14140  010000                     __ptext3:
 14141                           	opt stack 0
 14142  010000                     _ringBufferLUT:
 14143                           	opt stack 11
 14144                           
 14145                           ;ring_buffer_LUT.c: 67: if((0 == strcmp(line, "Reset"))) {
 14146                           
 14147                           ;incstack = 0
 14148  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14149  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14150  010008  0EC3               	movlw	low (STR_166+10)
 14151  01000A  0101               	movlb	1	; () banked
 14152  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 14153  01000E  0EFD               	movlw	high (STR_166+10)
 14154  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14155  010012  EC1B  F0C7         	call	_strcmp	;wreg free
 14156  010016  0101               	movlb	1	; () banked
 14157  010018  5117               	movf	?_strcmp& (0+255),w,b
 14158  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14159  01001C  A4D8               	btfss	status,2,c
 14160  01001E  D026               	goto	l1427
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;ring_buffer_LUT.c: 71: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 14164  010020  C0F6  F11B         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 14165  010024  C0F7  F11C         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 14166  010028  C0F8  F11D         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 14167  01002C  C0F9  F11E         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 14168  010030  0E1B               	movlw	low _Total_Energy_address
 14169  010032  6EF6               	movwf	tblptrl,c
 14170  010034                     	if	1	;There is more than 1 active tblptr byte
 14171  010034  0ED5               	movlw	high _Total_Energy_address
 14172  010036  6EF7               	movwf	tblptrh,c
 14173  010038                     	endif
 14174  010038                     	if	1	;There are 3 active tblptr bytes
 14175  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 14176  01003A  6EF8               	movwf	tblptru,c
 14177  01003C                     	endif
 14178  01003C  0009               	tblrd		*+
 14179  01003E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 14180  010042  000A               	tblrd		*-
 14181  010044  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 14182  010048  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 14183                           
 14184                           ;ring_buffer_LUT.c: 74: printf("\033[2J");
 14185  01004C  0EB0               	movlw	low STR_2
 14186  01004E  0101               	movlb	1	; () banked
 14187  010050  6F82               	movwf	printf@f& (0+255),b
 14188  010052  0EFF               	movlw	high STR_2
 14189  010054  6F83               	movwf	(printf@f+1)& (0+255),b
 14190  010056  ECCD  F08A         	call	_printf	;wreg free
 14191                           
 14192                           ;ring_buffer_LUT.c: 77: printf("\033[H");
 14193  01005A  0EB9               	movlw	low STR_3
 14194  01005C  0101               	movlb	1	; () banked
 14195  01005E  6F82               	movwf	printf@f& (0+255),b
 14196  010060  0EFF               	movlw	high STR_3
 14197  010062  6F83               	movwf	(printf@f+1)& (0+255),b
 14198  010064  ECCD  F08A         	call	_printf	;wreg free
 14199  010068  00FF               	reset		;# 
 14200                           
 14201                           ;ring_buffer_LUT.c: 82: }
 14202  01006A  0012               	return	
 14203  01006C                     l1427:
 14204                           
 14205                           ;ring_buffer_LUT.c: 85: else if((0 == strcmp(line, "Clear"))) {
 14206  01006C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14207  010070  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14208  010074  0EA0               	movlw	low STR_44
 14209  010076  0101               	movlb	1	; () banked
 14210  010078  6F19               	movwf	strcmp@s2& (0+255),b
 14211  01007A  0EFF               	movlw	high STR_44
 14212  01007C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14213  01007E  EC1B  F0C7         	call	_strcmp	;wreg free
 14214  010082  0101               	movlb	1	; () banked
 14215  010084  5117               	movf	?_strcmp& (0+255),w,b
 14216  010086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14217  010088  A4D8               	btfss	status,2,c
 14218  01008A  D00E               	goto	l1429
 14219                           
 14220                           ; BSR set to: 1
 14221                           ;ring_buffer_LUT.c: 88: printf("\033[2J");
 14222  01008C  0EB0               	movlw	low STR_2
 14223  01008E  6F82               	movwf	printf@f& (0+255),b
 14224  010090  0EFF               	movlw	high STR_2
 14225  010092  6F83               	movwf	(printf@f+1)& (0+255),b
 14226  010094  ECCD  F08A         	call	_printf	;wreg free
 14227                           
 14228                           ;ring_buffer_LUT.c: 91: printf("\033[H");
 14229  010098  0EB9               	movlw	low STR_3
 14230  01009A  0101               	movlb	1	; () banked
 14231  01009C  6F82               	movwf	printf@f& (0+255),b
 14232  01009E  0EFF               	movlw	high STR_3
 14233  0100A0  6F83               	movwf	(printf@f+1)& (0+255),b
 14234  0100A2  ECCD  F08A         	call	_printf	;wreg free
 14235                           
 14236                           ;ring_buffer_LUT.c: 93: }
 14237  0100A6  0012               	return	
 14238  0100A8                     l1429:
 14239                           
 14240                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Cause of Reset?"))) {
 14241  0100A8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14242  0100AC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14243  0100B0  0EF9               	movlw	low STR_47
 14244  0100B2  0101               	movlb	1	; () banked
 14245  0100B4  6F19               	movwf	strcmp@s2& (0+255),b
 14246  0100B6  0EFD               	movlw	high STR_47
 14247  0100B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14248  0100BA  EC1B  F0C7         	call	_strcmp	;wreg free
 14249  0100BE  0101               	movlb	1	; () banked
 14250  0100C0  5117               	movf	?_strcmp& (0+255),w,b
 14251  0100C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14252  0100C4  A4D8               	btfss	status,2,c
 14253  0100C6  D019               	goto	l1431
 14254                           
 14255                           ; BSR set to: 1
 14256                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14257  0100C8  0E00               	movlw	0
 14258  0100CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14259  0100CC  0E00               	movlw	0
 14260  0100CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14261  0100D0  0E02               	movlw	2
 14262  0100D2  EC95  F0A2         	call	_terminal_textAttributes
 14263                           
 14264                           ;ring_buffer_LUT.c: 101: printf("The cause of the most recent device reset was: %s\n\r",
 14265                           ;ring_buffer_LUT.c: 102: getCauseOfResetString(reset_cause));
 14266  0100D6  0EDB               	movlw	low STR_48
 14267  0100D8  0101               	movlb	1	; () banked
 14268  0100DA  6F82               	movwf	printf@f& (0+255),b
 14269  0100DC  0EF6               	movlw	high STR_48
 14270  0100DE  6F83               	movwf	(printf@f+1)& (0+255),b
 14271  0100E0  0102               	movlb	2	; () banked
 14272  0100E2  51FD               	movf	_reset_cause& (0+255),w,b
 14273  0100E4  EC6E  F0CA         	call	_getCauseOfResetString
 14274  0100E8  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
 14275  0100EC  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
 14276  0100F0  ECCD  F08A         	call	_printf	;wreg free
 14277                           
 14278                           ;ring_buffer_LUT.c: 104: terminal_textAttributesReset();
 14279  0100F4  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14280                           
 14281                           ;ring_buffer_LUT.c: 106: }
 14282  0100F8  0012               	return	
 14283  0100FA                     l1431:
 14284                           
 14285                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 14286  0100FA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14287  0100FE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14288  010102  0E9A               	movlw	low STR_49
 14289  010104  0101               	movlb	1	; () banked
 14290  010106  6F19               	movwf	strcmp@s2& (0+255),b
 14291  010108  0EFF               	movlw	high STR_49
 14292  01010A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14293  01010C  EC1B  F0C7         	call	_strcmp	;wreg free
 14294  010110  0101               	movlb	1	; () banked
 14295  010112  5117               	movf	?_strcmp& (0+255),w,b
 14296  010114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14297  010116  B4D8               	btfsc	status,2,c
 14298  010118  D00F               	goto	u26890
 14299                           
 14300                           ; BSR set to: 1
 14301  01011A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14302  01011E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14303  010122  0EB5               	movlw	low STR_50
 14304  010124  6F19               	movwf	strcmp@s2& (0+255),b
 14305  010126  0EFF               	movlw	high STR_50
 14306  010128  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14307  01012A  EC1B  F0C7         	call	_strcmp	;wreg free
 14308  01012E  0101               	movlb	1	; () banked
 14309  010130  5117               	movf	?_strcmp& (0+255),w,b
 14310  010132  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14311  010134  A4D8               	btfss	status,2,c
 14312  010136  D018               	goto	l1433
 14313  010138                     u26890:
 14314                           
 14315                           ; BSR set to: 1
 14316                           ;ring_buffer_LUT.c: 111: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14317                           
 14318                           ; BSR set to: 1
 14319  010138  0E00               	movlw	0
 14320  01013A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14321  01013C  0E00               	movlw	0
 14322  01013E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14323  010140  0E02               	movlw	2
 14324  010142  EC95  F0A2         	call	_terminal_textAttributes
 14325                           
 14326                           ;ring_buffer_LUT.c: 112: printf("AC Power Meter\n\r");
 14327  010146  0E53               	movlw	low STR_51
 14328  010148  0101               	movlb	1	; () banked
 14329  01014A  6F82               	movwf	printf@f& (0+255),b
 14330  01014C  0EFD               	movlw	high STR_51
 14331  01014E  6F83               	movwf	(printf@f+1)& (0+255),b
 14332  010150  ECCD  F08A         	call	_printf	;wreg free
 14333                           
 14334                           ;ring_buffer_LUT.c: 113: printf("Marquette University ELEN 3035 Final Project\n\r");
 14335  010154  0ED9               	movlw	low STR_52
 14336  010156  0101               	movlb	1	; () banked
 14337  010158  6F82               	movwf	printf@f& (0+255),b
 14338  01015A  0EF7               	movlw	high STR_52
 14339  01015C  6F83               	movwf	(printf@f+1)& (0+255),b
 14340  01015E  ECCD  F08A         	call	_printf	;wreg free
 14341                           
 14342                           ;ring_buffer_LUT.c: 114: terminal_textAttributesReset();
 14343  010162  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14344                           
 14345                           ;ring_buffer_LUT.c: 116: }
 14346  010166  0012               	return	
 14347  010168                     l1433:
 14348                           
 14349                           ;ring_buffer_LUT.c: 119: else if((0 == strcmp(line, "Device ID?"))) {
 14350  010168  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14351  01016C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14352  010170  0E3D               	movlw	low STR_53
 14353  010172  0101               	movlb	1	; () banked
 14354  010174  6F19               	movwf	strcmp@s2& (0+255),b
 14355  010176  0EFF               	movlw	high STR_53
 14356  010178  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14357  01017A  EC1B  F0C7         	call	_strcmp	;wreg free
 14358  01017E  0101               	movlb	1	; () banked
 14359  010180  5117               	movf	?_strcmp& (0+255),w,b
 14360  010182  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14361  010184  A4D8               	btfss	status,2,c
 14362  010186  D023               	goto	l1437
 14363                           
 14364                           ; BSR set to: 1
 14365                           ;ring_buffer_LUT.c: 121: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14366  010188  0E00               	movlw	0
 14367  01018A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14368  01018C  0E00               	movlw	0
 14369  01018E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14370  010190  0E02               	movlw	2
 14371  010192  EC95  F0A2         	call	_terminal_textAttributes
 14372                           
 14373                           ;ring_buffer_LUT.c: 124: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 14374                           ;ring_buffer_LUT.c: 125: "part number of %s\n\r",
 14375                           ;ring_buffer_LUT.c: 126: getDeviceID(),
 14376                           ;ring_buffer_LUT.c: 127: getDeviceIDString(getDeviceID()));
 14377  010196  0E6B               	movlw	low STR_54
 14378  010198  0101               	movlb	1	; () banked
 14379  01019A  6F82               	movwf	printf@f& (0+255),b
 14380  01019C  0EF2               	movlw	high STR_54
 14381  01019E  6F83               	movwf	(printf@f+1)& (0+255),b
 14382  0101A0  ECB1  F0CB         	call	_getDeviceID	;wreg free
 14383  0101A4  C122  F184         	movff	?_getDeviceID,?_printf+2
 14384  0101A8  C123  F185         	movff	?_getDeviceID+1,?_printf+3
 14385  0101AC  ECB1  F0CB         	call	_getDeviceID	;wreg free
 14386  0101B0  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 14387  0101B4  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 14388  0101B8  EC13  F0C6         	call	_getDeviceIDString	;wreg free
 14389  0101BC  C124  F186         	movff	?_getDeviceIDString,?_printf+4
 14390  0101C0  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
 14391  0101C4  ECCD  F08A         	call	_printf	;wreg free
 14392                           
 14393                           ;ring_buffer_LUT.c: 129: terminal_textAttributesReset();
 14394  0101C8  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14395                           
 14396                           ;ring_buffer_LUT.c: 131: }
 14397  0101CC  0012               	return	
 14398  0101CE                     l1437:
 14399                           
 14400                           ;ring_buffer_LUT.c: 134: else if((0 == strcmp(line, "Revision ID?"))) {
 14401  0101CE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14402  0101D2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14403  0101D6  0EF1               	movlw	low STR_55
 14404  0101D8  0101               	movlb	1	; () banked
 14405  0101DA  6F19               	movwf	strcmp@s2& (0+255),b
 14406  0101DC  0EFE               	movlw	high STR_55
 14407  0101DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14408  0101E0  EC1B  F0C7         	call	_strcmp	;wreg free
 14409  0101E4  0101               	movlb	1	; () banked
 14410  0101E6  5117               	movf	?_strcmp& (0+255),w,b
 14411  0101E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14412  0101EA  A4D8               	btfss	status,2,c
 14413  0101EC  D022               	goto	l1439
 14414                           
 14415                           ; BSR set to: 1
 14416                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14417  0101EE  0E00               	movlw	0
 14418  0101F0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14419  0101F2  0E00               	movlw	0
 14420  0101F4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14421  0101F6  0E02               	movlw	2
 14422  0101F8  EC95  F0A2         	call	_terminal_textAttributes
 14423                           
 14424                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 14425                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 14426  0101FC  0E0D               	movlw	low STR_56
 14427  0101FE  0101               	movlb	1	; () banked
 14428  010200  6F82               	movwf	printf@f& (0+255),b
 14429  010202  0EF4               	movlw	high STR_56
 14430  010204  6F83               	movwf	(printf@f+1)& (0+255),b
 14431  010206  EC3F  F0C9         	call	_getMajorRevisionID	;wreg free
 14432  01020A  0101               	movlb	1	; () banked
 14433  01020C  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 14434  01020E  0E41               	movlw	65
 14435  010210  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 14436  010212  6F84               	movwf	(?_printf+2)& (0+255),b
 14437  010214  6B85               	clrf	(?_printf+3)& (0+255),b
 14438  010216  0E00               	movlw	0
 14439  010218  2385               	addwfc	(?_printf+3)& (0+255),f,b
 14440  01021A  EC1E  F0CB         	call	_getMinorRevisionID	;wreg free
 14441  01021E  0101               	movlb	1	; () banked
 14442  010220  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 14443  010222  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 14444  010224  6F86               	movwf	(?_printf+4)& (0+255),b
 14445  010226  6B87               	clrf	(?_printf+5)& (0+255),b
 14446  010228  ECCD  F08A         	call	_printf	;wreg free
 14447                           
 14448                           ;ring_buffer_LUT.c: 142: terminal_textAttributesReset();
 14449  01022C  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14450                           
 14451                           ;ring_buffer_LUT.c: 144: }
 14452  010230  0012               	return	
 14453  010232                     l1439:
 14454                           
 14455                           ;ring_buffer_LUT.c: 147: else if((0 == strcmp(line, "User IDs?"))) {
 14456  010232  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14457  010236  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14458  01023A  0E69               	movlw	low STR_57
 14459  01023C  0101               	movlb	1	; () banked
 14460  01023E  6F19               	movwf	strcmp@s2& (0+255),b
 14461  010240  0EFF               	movlw	high STR_57
 14462  010242  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14463  010244  EC1B  F0C7         	call	_strcmp	;wreg free
 14464  010248  0101               	movlb	1	; () banked
 14465  01024A  5117               	movf	?_strcmp& (0+255),w,b
 14466  01024C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14467  01024E  A4D8               	btfss	status,2,c
 14468  010250  D03E               	goto	l1441
 14469                           
 14470                           ; BSR set to: 1
 14471                           ;ring_buffer_LUT.c: 149: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14472  010252  0E00               	movlw	0
 14473  010254  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14474  010256  0E00               	movlw	0
 14475  010258  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14476  01025A  0E02               	movlw	2
 14477  01025C  EC95  F0A2         	call	_terminal_textAttributes
 14478                           
 14479                           ;ring_buffer_LUT.c: 151: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 14480  010260  0E50               	movlw	low STR_58
 14481  010262  0101               	movlb	1	; () banked
 14482  010264  6F82               	movwf	printf@f& (0+255),b
 14483  010266  0EF3               	movlw	high STR_58
 14484  010268  6F83               	movwf	(printf@f+1)& (0+255),b
 14485  01026A  ECCD  F08A         	call	_printf	;wreg free
 14486                           
 14487                           ;ring_buffer_LUT.c: 154: for (int userID = 0; userID <= 7; userID++) {
 14488  01026E  0E00               	movlw	0
 14489  010270  0102               	movlb	2	; () banked
 14490  010272  6FD6               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 14491  010274  0E00               	movlw	0
 14492  010276  6FD5               	movwf	ringBufferLUT@userID& (0+255),b
 14493  010278                     l20333:
 14494                           
 14495                           ; BSR set to: 2
 14496  010278  BFD6               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 14497  01027A  D006               	goto	l1442
 14498  01027C  51D6               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 14499  01027E  E124               	bnz	l20343
 14500  010280  0E08               	movlw	8
 14501  010282  5DD5               	subwf	ringBufferLUT@userID& (0+255),w,b
 14502  010284  B0D8               	btfsc	status,0,c
 14503  010286  D020               	goto	u26940
 14504  010288                     l1442:
 14505                           
 14506                           ; BSR set to: 2
 14507                           ;ring_buffer_LUT.c: 156: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 14508                           ;ring_buffer_LUT.c: 157: userID,
 14509                           ;ring_buffer_LUT.c: 158: (2 * userID),
 14510                           ;ring_buffer_LUT.c: 159: getUserID(userID));
 14511                           
 14512                           ; BSR set to: 2
 14513  010288  0E9C               	movlw	low STR_59
 14514  01028A  0101               	movlb	1	; () banked
 14515  01028C  6F82               	movwf	printf@f& (0+255),b
 14516  01028E  0EF5               	movlw	high STR_59
 14517  010290  6F83               	movwf	(printf@f+1)& (0+255),b
 14518  010292  C2D5  F184         	movff	ringBufferLUT@userID,?_printf+2
 14519  010296  C2D6  F185         	movff	ringBufferLUT@userID+1,?_printf+3
 14520  01029A  90D8               	bcf	status,0,c
 14521  01029C  0102               	movlb	2	; () banked
 14522  01029E  35D5               	rlcf	ringBufferLUT@userID& (0+255),w,b
 14523  0102A0  0101               	movlb	1	; () banked
 14524  0102A2  6F86               	movwf	(?_printf+4)& (0+255),b
 14525  0102A4  0102               	movlb	2	; () banked
 14526  0102A6  35D6               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 14527  0102A8  0101               	movlb	1	; () banked
 14528  0102AA  6F87               	movwf	(?_printf+5)& (0+255),b
 14529  0102AC  0102               	movlb	2	; () banked
 14530  0102AE  51D5               	movf	ringBufferLUT@userID& (0+255),w,b
 14531  0102B0  ECBD  F0C8         	call	_getUserID
 14532  0102B4  C122  F188         	movff	?_getUserID,?_printf+6
 14533  0102B8  C123  F189         	movff	?_getUserID+1,?_printf+7
 14534  0102BC  ECCD  F08A         	call	_printf	;wreg free
 14535  0102C0  0102               	movlb	2	; () banked
 14536  0102C2  4BD5               	infsnz	ringBufferLUT@userID& (0+255),f,b
 14537  0102C4  2BD6               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 14538  0102C6  D7D8               	goto	l20333
 14539  0102C8                     u26940:
 14540  0102C8                     l20343:
 14541                           
 14542                           ; BSR set to: 2
 14543                           ;ring_buffer_LUT.c: 161: }
 14544                           ;ring_buffer_LUT.c: 163: terminal_textAttributesReset();
 14545  0102C8  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14546                           
 14547                           ;ring_buffer_LUT.c: 165: }
 14548  0102CC  0012               	return	
 14549  0102CE                     l1441:
 14550                           
 14551                           ;ring_buffer_LUT.c: 168: else if((0 == strcmp(line, "ADC Error?"))) {
 14552  0102CE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14553  0102D2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14554  0102D6  0E53               	movlw	low STR_60
 14555  0102D8  0101               	movlb	1	; () banked
 14556  0102DA  6F19               	movwf	strcmp@s2& (0+255),b
 14557  0102DC  0EFF               	movlw	high STR_60
 14558  0102DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14559  0102E0  EC1B  F0C7         	call	_strcmp	;wreg free
 14560  0102E4  0101               	movlb	1	; () banked
 14561  0102E6  5117               	movf	?_strcmp& (0+255),w,b
 14562  0102E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14563  0102EA  A4D8               	btfss	status,2,c
 14564  0102EC  D0A4               	goto	l1445
 14565                           
 14566                           ; BSR set to: 1
 14567                           ;ring_buffer_LUT.c: 170: if (adc_error_flag) {
 14568  0102EE  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 14569  0102F0  D090               	goto	l1446
 14570                           
 14571                           ; BSR set to: 1
 14572                           ;ring_buffer_LUT.c: 172: terminal_textAttributes(RED, BLACK, NORMAL);
 14573  0102F2  0E00               	movlw	0
 14574  0102F4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14575  0102F6  0E00               	movlw	0
 14576  0102F8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14577  0102FA  0E01               	movlw	1
 14578  0102FC  EC95  F0A2         	call	_terminal_textAttributes
 14579                           
 14580                           ;ring_buffer_LUT.c: 175: current_adc_channel = ADPCH;
 14581  010300  CF5F F248          	movff	3935,_current_adc_channel	;volatile
 14582                           
 14583                           ;ring_buffer_LUT.c: 178: char channel_name[22];
 14584                           ;ring_buffer_LUT.c: 180: switch (current_adc_channel) {
 14585  010304  D060               	goto	l1447
 14586  010306                     
 14587                           ;ring_buffer_LUT.c: 183: strcpy(channel_name, "ISNS");
 14588  010306  0E9C               	movlw	low ringBufferLUT@channel_name
 14589  010308  0101               	movlb	1	; () banked
 14590  01030A  6F17               	movwf	strcpy@to& (0+255),b
 14591  01030C  0E02               	movlw	high ringBufferLUT@channel_name
 14592  01030E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14593  010310  0EA6               	movlw	low STR_61
 14594  010312  6F19               	movwf	strcpy@from& (0+255),b
 14595  010314  0EFF               	movlw	high STR_61
 14596  010316  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14597  010318  ECD0  F0C9         	call	_strcpy	;wreg free
 14598                           
 14599                           ;ring_buffer_LUT.c: 184: break;
 14600  01031C  D06C               	goto	l1449
 14601  01031E                     
 14602                           ;ring_buffer_LUT.c: 187: strcpy(channel_name, "POS12");
 14603  01031E  0E9C               	movlw	low ringBufferLUT@channel_name
 14604  010320  0101               	movlb	1	; () banked
 14605  010322  6F17               	movwf	strcpy@to& (0+255),b
 14606  010324  0E02               	movlw	high ringBufferLUT@channel_name
 14607  010326  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14608  010328  0E94               	movlw	low STR_62
 14609  01032A  6F19               	movwf	strcpy@from& (0+255),b
 14610  01032C  0EFF               	movlw	high STR_62
 14611  01032E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14612  010330  ECD0  F0C9         	call	_strcpy	;wreg free
 14613                           
 14614                           ;ring_buffer_LUT.c: 188: break;
 14615  010334  D060               	goto	l1449
 14616  010336                     
 14617                           ;ring_buffer_LUT.c: 191: strcpy(channel_name, "POS3P3");
 14618  010336  0E9C               	movlw	low ringBufferLUT@channel_name
 14619  010338  0101               	movlb	1	; () banked
 14620  01033A  6F17               	movwf	strcpy@to& (0+255),b
 14621  01033C  0E02               	movlw	high ringBufferLUT@channel_name
 14622  01033E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14623  010340  0E8D               	movlw	low STR_63
 14624  010342  6F19               	movwf	strcpy@from& (0+255),b
 14625  010344  0EFF               	movlw	high STR_63
 14626  010346  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14627  010348  ECD0  F0C9         	call	_strcpy	;wreg free
 14628                           
 14629                           ;ring_buffer_LUT.c: 192: break;
 14630  01034C  D054               	goto	l1449
 14631  01034E                     
 14632                           ;ring_buffer_LUT.c: 195: strcpy(channel_name, "Internal AVSS");
 14633  01034E  0E9C               	movlw	low ringBufferLUT@channel_name
 14634  010350  0101               	movlb	1	; () banked
 14635  010352  6F17               	movwf	strcpy@to& (0+255),b
 14636  010354  0E02               	movlw	high ringBufferLUT@channel_name
 14637  010356  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14638  010358  0EBB               	movlw	low STR_64
 14639  01035A  6F19               	movwf	strcpy@from& (0+255),b
 14640  01035C  0EFE               	movlw	high STR_64
 14641  01035E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14642  010360  ECD0  F0C9         	call	_strcpy	;wreg free
 14643                           
 14644                           ;ring_buffer_LUT.c: 196: break;
 14645  010364  D048               	goto	l1449
 14646  010366                     
 14647                           ;ring_buffer_LUT.c: 199: strcpy(channel_name, "Internal Temp");
 14648  010366  0E9C               	movlw	low ringBufferLUT@channel_name
 14649  010368  0101               	movlb	1	; () banked
 14650  01036A  6F17               	movwf	strcpy@to& (0+255),b
 14651  01036C  0E02               	movlw	high ringBufferLUT@channel_name
 14652  01036E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14653  010370  0EC9               	movlw	low STR_65
 14654  010372  6F19               	movwf	strcpy@from& (0+255),b
 14655  010374  0EFE               	movlw	high STR_65
 14656  010376  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14657  010378  ECD0  F0C9         	call	_strcpy	;wreg free
 14658                           
 14659                           ;ring_buffer_LUT.c: 200: break;
 14660  01037C  D03C               	goto	l1449
 14661  01037E                     
 14662                           ;ring_buffer_LUT.c: 203: strcpy(channel_name, "Internal DAC1");
 14663  01037E  0E9C               	movlw	low ringBufferLUT@channel_name
 14664  010380  0101               	movlb	1	; () banked
 14665  010382  6F17               	movwf	strcpy@to& (0+255),b
 14666  010384  0E02               	movlw	high ringBufferLUT@channel_name
 14667  010386  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14668  010388  0E75               	movlw	low STR_66
 14669  01038A  6F19               	movwf	strcpy@from& (0+255),b
 14670  01038C  0EFE               	movlw	high STR_66
 14671  01038E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14672  010390  ECD0  F0C9         	call	_strcpy	;wreg free
 14673                           
 14674                           ;ring_buffer_LUT.c: 204: break;
 14675  010394  D030               	goto	l1449
 14676  010396                     
 14677                           ;ring_buffer_LUT.c: 207: strcpy(channel_name, "Internal FVR Buffer 1");
 14678  010396  0E9C               	movlw	low ringBufferLUT@channel_name
 14679  010398  0101               	movlb	1	; () banked
 14680  01039A  6F17               	movwf	strcpy@to& (0+255),b
 14681  01039C  0E02               	movlw	high ringBufferLUT@channel_name
 14682  01039E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14683  0103A0  0E8C               	movlw	low STR_67
 14684  0103A2  6F19               	movwf	strcpy@from& (0+255),b
 14685  0103A4  0EFC               	movlw	high STR_67
 14686  0103A6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14687  0103A8  ECD0  F0C9         	call	_strcpy	;wreg free
 14688                           
 14689                           ;ring_buffer_LUT.c: 208: break;
 14690  0103AC  D024               	goto	l1449
 14691  0103AE                     
 14692                           ;ring_buffer_LUT.c: 211: strcpy(channel_name, "Undefined");
 14693  0103AE  0E9C               	movlw	low ringBufferLUT@channel_name
 14694  0103B0  0101               	movlb	1	; () banked
 14695  0103B2  6F17               	movwf	strcpy@to& (0+255),b
 14696  0103B4  0E02               	movlw	high ringBufferLUT@channel_name
 14697  0103B6  6F18               	movwf	(strcpy@to+1)& (0+255),b
 14698  0103B8  0E73               	movlw	low STR_68
 14699  0103BA  6F19               	movwf	strcpy@from& (0+255),b
 14700  0103BC  0EFF               	movlw	high STR_68
 14701  0103BE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 14702  0103C0  ECD0  F0C9         	call	_strcpy	;wreg free
 14703                           
 14704                           ;ring_buffer_LUT.c: 214: }
 14705                           
 14706                           ;ring_buffer_LUT.c: 212: break;
 14707  0103C4  D018               	goto	l1449
 14708  0103C6                     l1447:
 14709  0103C6  0102               	movlb	2	; () banked
 14710  0103C8  5148               	movf	_current_adc_channel& (0+255),w,b
 14711                           
 14712                           ; Switch size 1, requested type "space"
 14713                           ; Number of cases is 7, Range of values is 0 to 63
 14714                           ; switch strategies available:
 14715                           ; Name         Instructions Cycles
 14716                           ; simple_byte           22    12 (average)
 14717                           ;	Chosen strategy is simple_byte
 14718  0103CA  0A00               	xorlw	0	; case 0
 14719  0103CC  B4D8               	btfsc	status,2,c
 14720  0103CE  D79B               	goto	l1448
 14721  0103D0  0A04               	xorlw	4	; case 4
 14722  0103D2  B4D8               	btfsc	status,2,c
 14723  0103D4  D7A4               	goto	l1450
 14724  0103D6  0A26               	xorlw	38	; case 34
 14725  0103D8  B4D8               	btfsc	status,2,c
 14726  0103DA  D7AD               	goto	l1451
 14727  0103DC  0A1E               	xorlw	30	; case 60
 14728  0103DE  B4D8               	btfsc	status,2,c
 14729  0103E0  D7B6               	goto	l1452
 14730  0103E2  0A01               	xorlw	1	; case 61
 14731  0103E4  B4D8               	btfsc	status,2,c
 14732  0103E6  D7BF               	goto	l1453
 14733  0103E8  0A03               	xorlw	3	; case 62
 14734  0103EA  B4D8               	btfsc	status,2,c
 14735  0103EC  D7C8               	goto	l1454
 14736  0103EE  0A01               	xorlw	1	; case 63
 14737  0103F0  B4D8               	btfsc	status,2,c
 14738  0103F2  D7D1               	goto	l1455
 14739  0103F4  D7DC               	goto	l1456
 14740  0103F6                     l1449:
 14741                           
 14742                           ;ring_buffer_LUT.c: 217: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
 14743                           
 14744                           ; BSR set to: 2
 14745  0103F6  0EA9               	movlw	low STR_69
 14746  0103F8  0101               	movlb	1	; () banked
 14747  0103FA  6F82               	movwf	printf@f& (0+255),b
 14748  0103FC  0EF7               	movlw	high STR_69
 14749  0103FE  6F83               	movwf	(printf@f+1)& (0+255),b
 14750  010400  0E9C               	movlw	low ringBufferLUT@channel_name
 14751  010402  6F84               	movwf	(?_printf+2)& (0+255),b
 14752  010404  0E02               	movlw	high ringBufferLUT@channel_name
 14753  010406  6F85               	movwf	(?_printf+3)& (0+255),b
 14754  010408  ECCD  F08A         	call	_printf	;wreg free
 14755                           
 14756                           ;ring_buffer_LUT.c: 218: terminal_textAttributesReset();
 14757  01040C  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14758                           
 14759                           ;ring_buffer_LUT.c: 220: }
 14760  010410  0012               	return	
 14761  010412                     l1446:
 14762                           
 14763                           ;ring_buffer_LUT.c: 222: else {
 14764                           ;ring_buffer_LUT.c: 224: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14765  010412  0E00               	movlw	0
 14766  010414  0101               	movlb	1	; () banked
 14767  010416  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14768  010418  0E00               	movlw	0
 14769  01041A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14770  01041C  0E02               	movlw	2
 14771  01041E  EC95  F0A2         	call	_terminal_textAttributes
 14772                           
 14773                           ;ring_buffer_LUT.c: 225: printf("No ADC Error detected\n\r");
 14774  010422  0E5E               	movlw	low STR_70
 14775  010424  0101               	movlb	1	; () banked
 14776  010426  6F82               	movwf	printf@f& (0+255),b
 14777  010428  0EFC               	movlw	high STR_70
 14778  01042A  6F83               	movwf	(printf@f+1)& (0+255),b
 14779  01042C  ECCD  F08A         	call	_printf	;wreg free
 14780                           
 14781                           ;ring_buffer_LUT.c: 226: terminal_textAttributesReset();
 14782  010430  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14783                           
 14784                           ;ring_buffer_LUT.c: 228: }
 14785                           ;ring_buffer_LUT.c: 230: }
 14786  010434  0012               	return	
 14787  010436                     l1445:
 14788                           
 14789                           ;ring_buffer_LUT.c: 233: else if((0 == strcmp(line, "Clear ADC Error"))) {
 14790  010436  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14791  01043A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14792  01043E  0E29               	movlw	low STR_71
 14793  010440  0101               	movlb	1	; () banked
 14794  010442  6F19               	movwf	strcmp@s2& (0+255),b
 14795  010444  0EFE               	movlw	high STR_71
 14796  010446  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14797  010448  EC1B  F0C7         	call	_strcmp	;wreg free
 14798  01044C  0101               	movlb	1	; () banked
 14799  01044E  5117               	movf	?_strcmp& (0+255),w,b
 14800  010450  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14801  010452  A4D8               	btfss	status,2,c
 14802  010454  D018               	goto	l1459
 14803                           
 14804                           ; BSR set to: 1
 14805                           ;ring_buffer_LUT.c: 235: LATFbits.LATF3 = 0;
 14806  010456  967E               	bcf	3966,3,c	;volatile
 14807                           
 14808                           ;ring_buffer_LUT.c: 236: adc_error_flag = 0;
 14809  010458  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 14810                           
 14811                           ;ring_buffer_LUT.c: 238: PIE5bits.TMR7IE = 1;
 14812  01045A  010E               	movlb	14	; () banked
 14813  01045C  8D2E               	bsf	46,6,b	;volatile
 14814                           
 14815                           ; BSR set to: 14
 14816                           ;ring_buffer_LUT.c: 239: TMR7_StopTimer();
 14817  01045E  ECF4  F0CC         	call	_TMR7_StopTimer	;wreg free
 14818                           
 14819                           ;ring_buffer_LUT.c: 241: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14820  010462  0E00               	movlw	0
 14821  010464  0101               	movlb	1	; () banked
 14822  010466  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14823  010468  0E00               	movlw	0
 14824  01046A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14825  01046C  0E02               	movlw	2
 14826  01046E  EC95  F0A2         	call	_terminal_textAttributes
 14827                           
 14828                           ;ring_buffer_LUT.c: 242: printf("Clearing ADC Error\n\r");
 14829  010472  0EB7               	movlw	low STR_72
 14830  010474  0101               	movlb	1	; () banked
 14831  010476  6F82               	movwf	printf@f& (0+255),b
 14832  010478  0EFC               	movlw	high STR_72
 14833  01047A  6F83               	movwf	(printf@f+1)& (0+255),b
 14834  01047C  ECCD  F08A         	call	_printf	;wreg free
 14835                           
 14836                           ;ring_buffer_LUT.c: 243: terminal_textAttributesReset();
 14837  010480  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14838                           
 14839                           ;ring_buffer_LUT.c: 245: }
 14840  010484  0012               	return	
 14841  010486                     l1459:
 14842                           
 14843                           ;ring_buffer_LUT.c: 249: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 14844  010486  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14845  01048A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14846  01048E  0ED9               	movlw	low STR_73
 14847  010490  0101               	movlb	1	; () banked
 14848  010492  6F19               	movwf	strcmp@s2& (0+255),b
 14849  010494  0EFD               	movlw	high STR_73
 14850  010496  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14851  010498  EC1B  F0C7         	call	_strcmp	;wreg free
 14852  01049C  0101               	movlb	1	; () banked
 14853  01049E  5117               	movf	?_strcmp& (0+255),w,b
 14854  0104A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14855  0104A2  A4D8               	btfss	status,2,c
 14856  0104A4  D019               	goto	l1461
 14857                           
 14858                           ; BSR set to: 1
 14859                           ;ring_buffer_LUT.c: 251: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14860  0104A6  0E00               	movlw	0
 14861  0104A8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14862  0104AA  0E00               	movlw	0
 14863  0104AC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14864  0104AE  0E06               	movlw	6
 14865  0104B0  EC95  F0A2         	call	_terminal_textAttributes
 14866                           
 14867                           ;ring_buffer_LUT.c: 252: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 14868  0104B4  0EB1               	movlw	low STR_74
 14869  0104B6  0101               	movlb	1	; () banked
 14870  0104B8  6F82               	movwf	printf@f& (0+255),b
 14871  0104BA  0EF9               	movlw	high STR_74
 14872  0104BC  6F83               	movwf	(printf@f+1)& (0+255),b
 14873  0104BE  C1D7  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 14874  0104C2  C1D8  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 14875  0104C6  C1D9  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 14876  0104CA  C1DA  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 14877  0104CE  ECCD  F08A         	call	_printf	;wreg free
 14878                           
 14879                           ;ring_buffer_LUT.c: 253: terminal_textAttributesReset();
 14880  0104D2  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14881                           
 14882                           ;ring_buffer_LUT.c: 255: }
 14883  0104D6  0012               	return	
 14884  0104D8                     l1461:
 14885                           
 14886                           ;ring_buffer_LUT.c: 258: else if((0 == strcmp(line, "Measure POS12?"))) {
 14887  0104D8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14888  0104DC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14889  0104E0  0E48               	movlw	low STR_75
 14890  0104E2  0101               	movlb	1	; () banked
 14891  0104E4  6F19               	movwf	strcmp@s2& (0+255),b
 14892  0104E6  0EFE               	movlw	high STR_75
 14893  0104E8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14894  0104EA  EC1B  F0C7         	call	_strcmp	;wreg free
 14895  0104EE  0101               	movlb	1	; () banked
 14896  0104F0  5117               	movf	?_strcmp& (0+255),w,b
 14897  0104F2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14898  0104F4  A4D8               	btfss	status,2,c
 14899  0104F6  D019               	goto	l1463
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;ring_buffer_LUT.c: 260: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14903  0104F8  0E00               	movlw	0
 14904  0104FA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14905  0104FC  0E00               	movlw	0
 14906  0104FE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14907  010500  0E06               	movlw	6
 14908  010502  EC95  F0A2         	call	_terminal_textAttributes
 14909                           
 14910                           ;ring_buffer_LUT.c: 261: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 14911  010506  0E1F               	movlw	low STR_76
 14912  010508  0101               	movlb	1	; () banked
 14913  01050A  6F82               	movwf	printf@f& (0+255),b
 14914  01050C  0EFA               	movlw	high STR_76
 14915  01050E  6F83               	movwf	(printf@f+1)& (0+255),b
 14916  010510  C1D3  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 14917  010514  C1D4  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 14918  010518  C1D5  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 14919  01051C  C1D6  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 14920  010520  ECCD  F08A         	call	_printf	;wreg free
 14921                           
 14922                           ;ring_buffer_LUT.c: 262: terminal_textAttributesReset();
 14923  010524  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14924                           
 14925                           ;ring_buffer_LUT.c: 264: }
 14926  010528  0012               	return	
 14927  01052A                     l1463:
 14928                           
 14929                           ;ring_buffer_LUT.c: 267: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 14930  01052A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14931  01052E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14932  010532  0E30               	movlw	low STR_77
 14933  010534  0101               	movlb	1	; () banked
 14934  010536  6F19               	movwf	strcmp@s2& (0+255),b
 14935  010538  0EFD               	movlw	high STR_77
 14936  01053A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14937  01053C  EC1B  F0C7         	call	_strcmp	;wreg free
 14938  010540  0101               	movlb	1	; () banked
 14939  010542  5117               	movf	?_strcmp& (0+255),w,b
 14940  010544  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14941  010546  A4D8               	btfss	status,2,c
 14942  010548  D019               	goto	l1465
 14943                           
 14944                           ; BSR set to: 1
 14945                           ;ring_buffer_LUT.c: 269: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14946  01054A  0E00               	movlw	0
 14947  01054C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14948  01054E  0E00               	movlw	0
 14949  010550  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14950  010552  0E06               	movlw	6
 14951  010554  EC95  F0A2         	call	_terminal_textAttributes
 14952                           
 14953                           ;ring_buffer_LUT.c: 270: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 14954  010558  0EFB               	movlw	low STR_78
 14955  01055A  0101               	movlb	1	; () banked
 14956  01055C  6F82               	movwf	printf@f& (0+255),b
 14957  01055E  0EF9               	movlw	high STR_78
 14958  010560  6F83               	movwf	(printf@f+1)& (0+255),b
 14959  010562  C1CF  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 14960  010566  C1D0  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 14961  01056A  C1D1  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 14962  01056E  C1D2  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 14963  010572  ECCD  F08A         	call	_printf	;wreg free
 14964                           
 14965                           ;ring_buffer_LUT.c: 271: terminal_textAttributesReset();
 14966  010576  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 14967                           
 14968                           ;ring_buffer_LUT.c: 275: }
 14969  01057A  0012               	return	
 14970  01057C                     l1465:
 14971                           
 14972                           ;ring_buffer_LUT.c: 278: else if((0 == strcmp(line, "Measure FVR?"))) {
 14973  01057C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14974  010580  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14975  010584  0EFE               	movlw	low STR_79
 14976  010586  0101               	movlb	1	; () banked
 14977  010588  6F19               	movwf	strcmp@s2& (0+255),b
 14978  01058A  0EFE               	movlw	high STR_79
 14979  01058C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14980  01058E  EC1B  F0C7         	call	_strcmp	;wreg free
 14981  010592  0101               	movlb	1	; () banked
 14982  010594  5117               	movf	?_strcmp& (0+255),w,b
 14983  010596  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14984  010598  A4D8               	btfss	status,2,c
 14985  01059A  D019               	goto	l1467
 14986                           
 14987                           ; BSR set to: 1
 14988                           ;ring_buffer_LUT.c: 280: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14989  01059C  0E00               	movlw	0
 14990  01059E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14991  0105A0  0E00               	movlw	0
 14992  0105A2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14993  0105A4  0E06               	movlw	6
 14994  0105A6  EC95  F0A2         	call	_terminal_textAttributes
 14995                           
 14996                           ;ring_buffer_LUT.c: 281: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 14997  0105AA  0EBD               	movlw	low STR_80
 14998  0105AC  0101               	movlb	1	; () banked
 14999  0105AE  6F82               	movwf	printf@f& (0+255),b
 15000  0105B0  0EF4               	movlw	high STR_80
 15001  0105B2  6F83               	movwf	(printf@f+1)& (0+255),b
 15002  0105B4  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 15003  0105B8  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 15004  0105BC  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 15005  0105C0  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 15006  0105C4  ECCD  F08A         	call	_printf	;wreg free
 15007                           
 15008                           ;ring_buffer_LUT.c: 282: terminal_textAttributesReset();
 15009  0105C8  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15010                           
 15011                           ;ring_buffer_LUT.c: 284: }
 15012  0105CC  0012               	return	
 15013  0105CE                     l1467:
 15014                           
 15015                           ;ring_buffer_LUT.c: 287: else if((0 == strcmp(line, "Measure AVSS?"))) {
 15016  0105CE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15017  0105D2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15018  0105D6  0E83               	movlw	low STR_81
 15019  0105D8  0101               	movlb	1	; () banked
 15020  0105DA  6F19               	movwf	strcmp@s2& (0+255),b
 15021  0105DC  0EFE               	movlw	high STR_81
 15022  0105DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15023  0105E0  EC1B  F0C7         	call	_strcmp	;wreg free
 15024  0105E4  0101               	movlb	1	; () banked
 15025  0105E6  5117               	movf	?_strcmp& (0+255),w,b
 15026  0105E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15027  0105EA  A4D8               	btfss	status,2,c
 15028  0105EC  D019               	goto	l1469
 15029                           
 15030                           ; BSR set to: 1
 15031                           ;ring_buffer_LUT.c: 289: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15032  0105EE  0E00               	movlw	0
 15033  0105F0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15034  0105F2  0E00               	movlw	0
 15035  0105F4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15036  0105F6  0E06               	movlw	6
 15037  0105F8  EC95  F0A2         	call	_terminal_textAttributes
 15038                           
 15039                           ;ring_buffer_LUT.c: 290: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 15040  0105FC  0E8C               	movlw	low STR_82
 15041  0105FE  0101               	movlb	1	; () banked
 15042  010600  6F82               	movwf	printf@f& (0+255),b
 15043  010602  0EF9               	movlw	high STR_82
 15044  010604  6F83               	movwf	(printf@f+1)& (0+255),b
 15045  010606  C1DB  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 15046  01060A  C1DC  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 15047  01060E  C1DD  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 15048  010612  C1DE  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 15049  010616  ECCD  F08A         	call	_printf	;wreg free
 15050                           
 15051                           ;ring_buffer_LUT.c: 291: terminal_textAttributesReset();
 15052  01061A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15053                           
 15054                           ;ring_buffer_LUT.c: 293: }
 15055  01061E  0012               	return	
 15056  010620                     l1469:
 15057                           
 15058                           ;ring_buffer_LUT.c: 296: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 15059  010620  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15060  010624  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15061  010628  0E12               	movlw	low STR_83
 15062  01062A  0101               	movlb	1	; () banked
 15063  01062C  6F19               	movwf	strcmp@s2& (0+255),b
 15064  01062E  0EFC               	movlw	high STR_83
 15065  010630  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15066  010632  EC1B  F0C7         	call	_strcmp	;wreg free
 15067  010636  0101               	movlb	1	; () banked
 15068  010638  5117               	movf	?_strcmp& (0+255),w,b
 15069  01063A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15070  01063C  A4D8               	btfss	status,2,c
 15071  01063E  D019               	goto	l1471
 15072                           
 15073                           ; BSR set to: 1
 15074                           ;ring_buffer_LUT.c: 298: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15075  010640  0E00               	movlw	0
 15076  010642  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15077  010644  0E00               	movlw	0
 15078  010646  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15079  010648  0E06               	movlw	6
 15080  01064A  EC95  F0A2         	call	_terminal_textAttributes
 15081                           
 15082                           ;ring_buffer_LUT.c: 299: printf("Measured Current is %.3f Amps\n\r", Imeas);
 15083  01064E  0EEC               	movlw	low STR_84
 15084  010650  0101               	movlb	1	; () banked
 15085  010652  6F82               	movwf	printf@f& (0+255),b
 15086  010654  0EFA               	movlw	high STR_84
 15087  010656  6F83               	movwf	(printf@f+1)& (0+255),b
 15088  010658  C1C7  F184         	movff	_Imeas,?_printf+2	;volatile
 15089  01065C  C1C8  F185         	movff	_Imeas+1,?_printf+3	;volatile
 15090  010660  C1C9  F186         	movff	_Imeas+2,?_printf+4	;volatile
 15091  010664  C1CA  F187         	movff	_Imeas+3,?_printf+5	;volatile
 15092  010668  ECCD  F08A         	call	_printf	;wreg free
 15093                           
 15094                           ;ring_buffer_LUT.c: 300: terminal_textAttributesReset();
 15095  01066C  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15096                           
 15097                           ;ring_buffer_LUT.c: 302: }
 15098  010670  0012               	return	
 15099  010672                     l1471:
 15100                           
 15101                           ;ring_buffer_LUT.c: 305: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 15102  010672  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15103  010676  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15104  01067A  0EE1               	movlw	low STR_85
 15105  01067C  0101               	movlb	1	; () banked
 15106  01067E  6F19               	movwf	strcmp@s2& (0+255),b
 15107  010680  0EFC               	movlw	high STR_85
 15108  010682  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15109  010684  EC1B  F0C7         	call	_strcmp	;wreg free
 15110  010688  0101               	movlb	1	; () banked
 15111  01068A  5117               	movf	?_strcmp& (0+255),w,b
 15112  01068C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15113  01068E  A4D8               	btfss	status,2,c
 15114  010690  D019               	goto	l1473
 15115                           
 15116                           ; BSR set to: 1
 15117                           ;ring_buffer_LUT.c: 307: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15118  010692  0E00               	movlw	0
 15119  010694  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15120  010696  0E00               	movlw	0
 15121  010698  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15122  01069A  0E06               	movlw	6
 15123  01069C  EC95  F0A2         	call	_terminal_textAttributes
 15124                           
 15125                           ;ring_buffer_LUT.c: 308: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 15126  0106A0  0E65               	movlw	low STR_86
 15127  0106A2  0101               	movlb	1	; () banked
 15128  0106A4  6F82               	movwf	printf@f& (0+255),b
 15129  0106A6  0EFA               	movlw	high STR_86
 15130  0106A8  6F83               	movwf	(printf@f+1)& (0+255),b
 15131  0106AA  C1C3  F184         	movff	_Irms,?_printf+2	;volatile
 15132  0106AE  C1C4  F185         	movff	_Irms+1,?_printf+3	;volatile
 15133  0106B2  C1C5  F186         	movff	_Irms+2,?_printf+4	;volatile
 15134  0106B6  C1C6  F187         	movff	_Irms+3,?_printf+5	;volatile
 15135  0106BA  ECCD  F08A         	call	_printf	;wreg free
 15136                           
 15137                           ;ring_buffer_LUT.c: 309: terminal_textAttributesReset();
 15138  0106BE  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15139                           
 15140                           ;ring_buffer_LUT.c: 311: }
 15141  0106C2  0012               	return	
 15142  0106C4                     l1473:
 15143                           
 15144                           ;ring_buffer_LUT.c: 314: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 15145  0106C4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15146  0106C8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15147  0106CC  0ECC               	movlw	low STR_87
 15148  0106CE  0101               	movlb	1	; () banked
 15149  0106D0  6F19               	movwf	strcmp@s2& (0+255),b
 15150  0106D2  0EFC               	movlw	high STR_87
 15151  0106D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15152  0106D6  EC1B  F0C7         	call	_strcmp	;wreg free
 15153  0106DA  0101               	movlb	1	; () banked
 15154  0106DC  5117               	movf	?_strcmp& (0+255),w,b
 15155  0106DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15156  0106E0  A4D8               	btfss	status,2,c
 15157  0106E2  D019               	goto	l1475
 15158                           
 15159                           ; BSR set to: 1
 15160                           ;ring_buffer_LUT.c: 316: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15161  0106E4  0E00               	movlw	0
 15162  0106E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15163  0106E8  0E00               	movlw	0
 15164  0106EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15165  0106EC  0E06               	movlw	6
 15166  0106EE  EC95  F0A2         	call	_terminal_textAttributes
 15167                           
 15168                           ;ring_buffer_LUT.c: 317: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 15169  0106F2  0E87               	movlw	low STR_88
 15170  0106F4  0101               	movlb	1	; () banked
 15171  0106F6  6F82               	movwf	printf@f& (0+255),b
 15172  0106F8  0EFA               	movlw	high STR_88
 15173  0106FA  6F83               	movwf	(printf@f+1)& (0+255),b
 15174  0106FC  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
 15175  010700  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
 15176  010704  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
 15177  010708  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
 15178  01070C  ECCD  F08A         	call	_printf	;wreg free
 15179                           
 15180                           ;ring_buffer_LUT.c: 318: terminal_textAttributesReset();
 15181  010710  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15182                           
 15183                           ;ring_buffer_LUT.c: 320: }
 15184  010714  0012               	return	
 15185  010716                     l1475:
 15186                           
 15187                           ;ring_buffer_LUT.c: 323: else if ((0 == strcmp(line, "Measure Power?"))) {
 15188  010716  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15189  01071A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15190  01071E  0E57               	movlw	low STR_89
 15191  010720  0101               	movlb	1	; () banked
 15192  010722  6F19               	movwf	strcmp@s2& (0+255),b
 15193  010724  0EFE               	movlw	high STR_89
 15194  010726  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15195  010728  EC1B  F0C7         	call	_strcmp	;wreg free
 15196  01072C  0101               	movlb	1	; () banked
 15197  01072E  5117               	movf	?_strcmp& (0+255),w,b
 15198  010730  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15199  010732  A4D8               	btfss	status,2,c
 15200  010734  D019               	goto	l1477
 15201                           
 15202                           ; BSR set to: 1
 15203                           ;ring_buffer_LUT.c: 325: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15204  010736  0E00               	movlw	0
 15205  010738  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15206  01073A  0E00               	movlw	0
 15207  01073C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15208  01073E  0E06               	movlw	6
 15209  010740  EC95  F0A2         	call	_terminal_textAttributes
 15210                           
 15211                           ;ring_buffer_LUT.c: 326: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 15212  010744  0EF7               	movlw	low STR_90
 15213  010746  0101               	movlb	1	; () banked
 15214  010748  6F82               	movwf	printf@f& (0+255),b
 15215  01074A  0EF4               	movlw	high STR_90
 15216  01074C  6F83               	movwf	(printf@f+1)& (0+255),b
 15217  01074E  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 15218  010752  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 15219  010756  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 15220  01075A  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 15221  01075E  ECCD  F08A         	call	_printf	;wreg free
 15222                           
 15223                           ;ring_buffer_LUT.c: 327: terminal_textAttributesReset();
 15224  010762  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15225                           
 15226                           ;ring_buffer_LUT.c: 329: }
 15227  010766  0012               	return	
 15228  010768                     l1477:
 15229                           
 15230                           ;ring_buffer_LUT.c: 332: else if ((0 == strcmp(line, "Measure Energy?"))) {
 15231  010768  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15232  01076C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15233  010770  0E09               	movlw	low STR_91
 15234  010772  0101               	movlb	1	; () banked
 15235  010774  6F19               	movwf	strcmp@s2& (0+255),b
 15236  010776  0EFE               	movlw	high STR_91
 15237  010778  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15238  01077A  EC1B  F0C7         	call	_strcmp	;wreg free
 15239  01077E  0101               	movlb	1	; () banked
 15240  010780  5117               	movf	?_strcmp& (0+255),w,b
 15241  010782  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15242  010784  A4D8               	btfss	status,2,c
 15243  010786  D019               	goto	l1479
 15244                           
 15245                           ; BSR set to: 1
 15246                           ;ring_buffer_LUT.c: 334: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15247  010788  0E00               	movlw	0
 15248  01078A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15249  01078C  0E00               	movlw	0
 15250  01078E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15251  010790  0E06               	movlw	6
 15252  010792  EC95  F0A2         	call	_terminal_textAttributes
 15253                           
 15254                           ;ring_buffer_LUT.c: 335: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 15255  010796  0EC0               	movlw	low STR_92
 15256  010798  0101               	movlb	1	; () banked
 15257  01079A  6F82               	movwf	printf@f& (0+255),b
 15258  01079C  0EF2               	movlw	high STR_92
 15259  01079E  6F83               	movwf	(printf@f+1)& (0+255),b
 15260  0107A0  C0F6  F184         	movff	_Total_Energy,?_printf+2	;volatile
 15261  0107A4  C0F7  F185         	movff	_Total_Energy+1,?_printf+3	;volatile
 15262  0107A8  C0F8  F186         	movff	_Total_Energy+2,?_printf+4	;volatile
 15263  0107AC  C0F9  F187         	movff	_Total_Energy+3,?_printf+5	;volatile
 15264  0107B0  ECCD  F08A         	call	_printf	;wreg free
 15265                           
 15266                           ;ring_buffer_LUT.c: 336: terminal_textAttributesReset();
 15267  0107B4  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15268                           
 15269                           ;ring_buffer_LUT.c: 338: }
 15270  0107B8  0012               	return	
 15271  0107BA                     l1479:
 15272                           
 15273                           ;ring_buffer_LUT.c: 341: else if ((0 == strcmp(line, "Clear Energy"))) {
 15274  0107BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15275  0107BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15276  0107C2  0E18               	movlw	low STR_93
 15277  0107C4  0101               	movlb	1	; () banked
 15278  0107C6  6F19               	movwf	strcmp@s2& (0+255),b
 15279  0107C8  0EFF               	movlw	high STR_93
 15280  0107CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15281  0107CC  EC1B  F0C7         	call	_strcmp	;wreg free
 15282  0107D0  0101               	movlb	1	; () banked
 15283  0107D2  5117               	movf	?_strcmp& (0+255),w,b
 15284  0107D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15285  0107D6  A4D8               	btfss	status,2,c
 15286  0107D8  D032               	goto	l1481
 15287                           
 15288                           ; BSR set to: 1
 15289                           ;ring_buffer_LUT.c: 344: Total_Energy = 0.0;
 15290  0107DA  0E00               	movlw	0
 15291  0107DC  0100               	movlb	0	; () banked
 15292  0107DE  6FF6               	movwf	_Total_Energy& (0+255),b	;volatile
 15293  0107E0  0E00               	movlw	0
 15294  0107E2  6FF7               	movwf	(_Total_Energy+1)& (0+255),b	;volatile
 15295  0107E4  0E00               	movlw	0
 15296  0107E6  6FF8               	movwf	(_Total_Energy+2)& (0+255),b	;volatile
 15297  0107E8  0E00               	movlw	0
 15298  0107EA  6FF9               	movwf	(_Total_Energy+3)& (0+255),b	;volatile
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;ring_buffer_LUT.c: 345: writeDoubleToEEPROM(0.0, Total_Energy_address);
 15302  0107EC  0E00               	movlw	0
 15303  0107EE  0101               	movlb	1	; () banked
 15304  0107F0  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15305  0107F2  0E00               	movlw	0
 15306  0107F4  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15307  0107F6  0E00               	movlw	0
 15308  0107F8  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15309  0107FA  0E00               	movlw	0
 15310  0107FC  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15311  0107FE  0E1B               	movlw	low _Total_Energy_address
 15312  010800  6EF6               	movwf	tblptrl,c
 15313  010802                     	if	1	;There is more than 1 active tblptr byte
 15314  010802  0ED5               	movlw	high _Total_Energy_address
 15315  010804  6EF7               	movwf	tblptrh,c
 15316  010806                     	endif
 15317  010806                     	if	1	;There are 3 active tblptr bytes
 15318  010806  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 15319  010808  6EF8               	movwf	tblptru,c
 15320  01080A                     	endif
 15321  01080A  0009               	tblrd		*+
 15322  01080C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15323  010810  000A               	tblrd		*-
 15324  010812  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15325  010816  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 15326                           
 15327                           ;ring_buffer_LUT.c: 347: terminal_textAttributes(RED, BLACK, NORMAL);
 15328  01081A  0E00               	movlw	0
 15329  01081C  0101               	movlb	1	; () banked
 15330  01081E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15331  010820  0E00               	movlw	0
 15332  010822  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15333  010824  0E01               	movlw	1
 15334  010826  EC95  F0A2         	call	_terminal_textAttributes
 15335                           
 15336                           ;ring_buffer_LUT.c: 348: printf("Measured output energy has been reset to zero Watt Hour
      +                          s\n\r");
 15337  01082A  0E48               	movlw	low STR_94
 15338  01082C  0101               	movlb	1	; () banked
 15339  01082E  6F82               	movwf	printf@f& (0+255),b
 15340  010830  0EF4               	movlw	high STR_94
 15341  010832  6F83               	movwf	(printf@f+1)& (0+255),b
 15342  010834  ECCD  F08A         	call	_printf	;wreg free
 15343                           
 15344                           ;ring_buffer_LUT.c: 349: terminal_textAttributesReset();
 15345  010838  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15346                           
 15347                           ;ring_buffer_LUT.c: 351: }
 15348  01083C  0012               	return	
 15349  01083E                     l1481:
 15350                           
 15351                           ;ring_buffer_LUT.c: 354: else if ((0 == strcmp(line, "Enable Dimming"))) {
 15352  01083E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15353  010842  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15354  010846  0E66               	movlw	low STR_95
 15355  010848  0101               	movlb	1	; () banked
 15356  01084A  6F19               	movwf	strcmp@s2& (0+255),b
 15357  01084C  0EFE               	movlw	high STR_95
 15358  01084E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15359  010850  EC1B  F0C7         	call	_strcmp	;wreg free
 15360  010854  0101               	movlb	1	; () banked
 15361  010856  5117               	movf	?_strcmp& (0+255),w,b
 15362  010858  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15363  01085A  A4D8               	btfss	status,2,c
 15364  01085C  D046               	goto	l1483
 15365                           
 15366                           ; BSR set to: 1
 15367                           ;ring_buffer_LUT.c: 358: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 15368  01085E  0E01               	movlw	1
 15369  010860  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15370  010862  0E02               	movlw	2
 15371  010864  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15372  010866  0E00               	movlw	0
 15373  010868  EC95  F0A2         	call	_terminal_textAttributes
 15374                           
 15375                           ;ring_buffer_LUT.c: 359: printf("WARNING: Using the dimming feature with load devices ot
      +                          her than a light bulb can result in device damage");
 15376  01086C  0EDD               	movlw	low STR_96
 15377  01086E  0101               	movlb	1	; () banked
 15378  010870  6F82               	movwf	printf@f& (0+255),b
 15379  010872  0EF0               	movlw	high STR_96
 15380  010874  6F83               	movwf	(printf@f+1)& (0+255),b
 15381  010876  ECCD  F08A         	call	_printf	;wreg free
 15382                           
 15383                           ;ring_buffer_LUT.c: 360: terminal_textAttributesReset();
 15384  01087A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15385                           
 15386                           ;ring_buffer_LUT.c: 361: terminal_printNewline();
 15387  01087E  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 15388                           
 15389                           ;ring_buffer_LUT.c: 362: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 15390  010882  0E01               	movlw	1
 15391  010884  0101               	movlb	1	; () banked
 15392  010886  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15393  010888  0E02               	movlw	2
 15394  01088A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15395  01088C  0E00               	movlw	0
 15396  01088E  EC95  F0A2         	call	_terminal_textAttributes
 15397                           
 15398                           ;ring_buffer_LUT.c: 363: printf("Only enable dimming if you are completely sure the load
      +                           is compatible with a solid state dimming circuit");
 15399  010892  0E46               	movlw	low STR_97
 15400  010894  0101               	movlb	1	; () banked
 15401  010896  6F82               	movwf	printf@f& (0+255),b
 15402  010898  0EF1               	movlw	high STR_97
 15403  01089A  6F83               	movwf	(printf@f+1)& (0+255),b
 15404  01089C  ECCD  F08A         	call	_printf	;wreg free
 15405                           
 15406                           ;ring_buffer_LUT.c: 364: terminal_textAttributesReset();
 15407  0108A0  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15408                           
 15409                           ;ring_buffer_LUT.c: 365: terminal_printNewline();
 15410  0108A4  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 15411                           
 15412                           ;ring_buffer_LUT.c: 366: terminal_textAttributes(BLACK, YELLOW, NORMAL);
 15413  0108A8  0E03               	movlw	3
 15414  0108AA  0101               	movlb	1	; () banked
 15415  0108AC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15416  0108AE  0E00               	movlw	0
 15417  0108B0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15418  0108B2  0E00               	movlw	0
 15419  0108B4  EC95  F0A2         	call	_terminal_textAttributes
 15420                           
 15421                           ;ring_buffer_LUT.c: 367: printf("Are you sure you'd like to enable output dimming?\n\r")
      +                          ;
 15422  0108B8  0EA7               	movlw	low STR_98
 15423  0108BA  0101               	movlb	1	; () banked
 15424  0108BC  6F82               	movwf	printf@f& (0+255),b
 15425  0108BE  0EF6               	movlw	high STR_98
 15426  0108C0  6F83               	movwf	(printf@f+1)& (0+255),b
 15427  0108C2  ECCD  F08A         	call	_printf	;wreg free
 15428                           
 15429                           ;ring_buffer_LUT.c: 368: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15430  0108C6  0E00               	movlw	0
 15431  0108C8  0101               	movlb	1	; () banked
 15432  0108CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15433  0108CC  0E00               	movlw	0
 15434  0108CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15435  0108D0  0E03               	movlw	3
 15436  0108D2  EC95  F0A2         	call	_terminal_textAttributes
 15437                           
 15438                           ;ring_buffer_LUT.c: 369: printf("If yes, reply 'Enable Dimming Y' on the next line:\n\r"
      +                          );
 15439  0108D6  0E08               	movlw	low STR_99
 15440  0108D8  0101               	movlb	1	; () banked
 15441  0108DA  6F82               	movwf	printf@f& (0+255),b
 15442  0108DC  0EF6               	movlw	high STR_99
 15443  0108DE  6F83               	movwf	(printf@f+1)& (0+255),b
 15444  0108E0  ECCD  F08A         	call	_printf	;wreg free
 15445                           
 15446                           ;ring_buffer_LUT.c: 370: terminal_textAttributesReset();
 15447  0108E4  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15448                           
 15449                           ;ring_buffer_LUT.c: 372: }
 15450  0108E8  0012               	return	
 15451  0108EA                     l1483:
 15452                           
 15453                           ;ring_buffer_LUT.c: 375: else if ((0 == strcmp(line, "Enable Dimming Y"))) {
 15454  0108EA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15455  0108EE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15456  0108F2  0E97               	movlw	low STR_100
 15457  0108F4  0101               	movlb	1	; () banked
 15458  0108F6  6F19               	movwf	strcmp@s2& (0+255),b
 15459  0108F8  0EFD               	movlw	high STR_100
 15460  0108FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15461  0108FC  EC1B  F0C7         	call	_strcmp	;wreg free
 15462  010900  0101               	movlb	1	; () banked
 15463  010902  5117               	movf	?_strcmp& (0+255),w,b
 15464  010904  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15465  010906  A4D8               	btfss	status,2,c
 15466  010908  D015               	goto	l1485
 15467                           
 15468                           ; BSR set to: 1
 15469                           ;ring_buffer_LUT.c: 378: LATGbits.LATG0 = 0;
 15470  01090A  907F               	bcf	3967,0,c	;volatile
 15471                           
 15472                           ;ring_buffer_LUT.c: 381: PIE0bits.INT0IE = 1;
 15473  01090C  010E               	movlb	14	; () banked
 15474  01090E  8129               	bsf	41,0,b	;volatile
 15475                           
 15476                           ; BSR set to: 14
 15477                           ;ring_buffer_LUT.c: 383: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15478  010910  0E00               	movlw	0
 15479  010912  0101               	movlb	1	; () banked
 15480  010914  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15481  010916  0E00               	movlw	0
 15482  010918  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15483  01091A  0E02               	movlw	2
 15484  01091C  EC95  F0A2         	call	_terminal_textAttributes
 15485                           
 15486                           ;ring_buffer_LUT.c: 384: printf("Output dimming has been enabled\n\r");
 15487  010920  0E43               	movlw	low STR_101
 15488  010922  0101               	movlb	1	; () banked
 15489  010924  6F82               	movwf	printf@f& (0+255),b
 15490  010926  0EFA               	movlw	high STR_101
 15491  010928  6F83               	movwf	(printf@f+1)& (0+255),b
 15492  01092A  ECCD  F08A         	call	_printf	;wreg free
 15493                           
 15494                           ;ring_buffer_LUT.c: 385: terminal_textAttributesReset();
 15495  01092E  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15496                           
 15497                           ;ring_buffer_LUT.c: 387: }
 15498  010932  0012               	return	
 15499  010934                     l1485:
 15500                           
 15501                           ;ring_buffer_LUT.c: 390: else if ((0 == strcmp(line, "Disable Dimming"))) {
 15502  010934  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15503  010938  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15504  01093C  0E19               	movlw	low STR_102
 15505  01093E  0101               	movlb	1	; () banked
 15506  010940  6F19               	movwf	strcmp@s2& (0+255),b
 15507  010942  0EFE               	movlw	high STR_102
 15508  010944  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15509  010946  EC1B  F0C7         	call	_strcmp	;wreg free
 15510  01094A  0101               	movlb	1	; () banked
 15511  01094C  5117               	movf	?_strcmp& (0+255),w,b
 15512  01094E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15513  010950  A4D8               	btfss	status,2,c
 15514  010952  D017               	goto	l1487
 15515                           
 15516                           ; BSR set to: 1
 15517                           ;ring_buffer_LUT.c: 393: LATGbits.LATG0 = 1;
 15518  010954  807F               	bsf	3967,0,c	;volatile
 15519                           
 15520                           ;ring_buffer_LUT.c: 396: PIE0bits.INT0IE = 0;
 15521  010956  010E               	movlb	14	; () banked
 15522  010958  9129               	bcf	41,0,b	;volatile
 15523                           
 15524                           ; BSR set to: 14
 15525                           ;ring_buffer_LUT.c: 397: TMR5_StopTimer();
 15526  01095A  ECFD  F0CC         	call	_TMR5_StopTimer	;wreg free
 15527                           
 15528                           ;ring_buffer_LUT.c: 399: terminal_textAttributes(RED, BLACK, NORMAL);
 15529  01095E  0E00               	movlw	0
 15530  010960  0101               	movlb	1	; () banked
 15531  010962  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15532  010964  0E00               	movlw	0
 15533  010966  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15534  010968  0E01               	movlw	1
 15535  01096A  EC95  F0A2         	call	_terminal_textAttributes
 15536                           
 15537                           ;ring_buffer_LUT.c: 400: printf("TRIAC output dimming has been disabled\n\r");
 15538  01096E  0E3C               	movlw	low STR_103
 15539  010970  0101               	movlb	1	; () banked
 15540  010972  6F82               	movwf	printf@f& (0+255),b
 15541  010974  0EF9               	movlw	high STR_103
 15542  010976  6F83               	movwf	(printf@f+1)& (0+255),b
 15543  010978  ECCD  F08A         	call	_printf	;wreg free
 15544                           
 15545                           ;ring_buffer_LUT.c: 401: terminal_textAttributesReset();
 15546  01097C  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15547                           
 15548                           ;ring_buffer_LUT.c: 403: }
 15549  010980  0012               	return	
 15550  010982                     l1487:
 15551                           
 15552                           ;ring_buffer_LUT.c: 406: else if ((0 == strcmp(line, "Enable Load"))) {
 15553  010982  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15554  010986  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15555  01098A  0E31               	movlw	low STR_104
 15556  01098C  0101               	movlb	1	; () banked
 15557  01098E  6F19               	movwf	strcmp@s2& (0+255),b
 15558  010990  0EFF               	movlw	high STR_104
 15559  010992  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15560  010994  EC1B  F0C7         	call	_strcmp	;wreg free
 15561  010998  0101               	movlb	1	; () banked
 15562  01099A  5117               	movf	?_strcmp& (0+255),w,b
 15563  01099C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15564  01099E  A4D8               	btfss	status,2,c
 15565  0109A0  D014               	goto	l1489
 15566                           
 15567                           ; BSR set to: 1
 15568                           ;ring_buffer_LUT.c: 408: LATGbits.LATG0 = 1;
 15569  0109A2  807F               	bsf	3967,0,c	;volatile
 15570                           
 15571                           ;ring_buffer_LUT.c: 409: LATGbits.LATG1 = 0;
 15572  0109A4  927F               	bcf	3967,1,c	;volatile
 15573                           
 15574                           ;ring_buffer_LUT.c: 410: load_enable = 1;
 15575  0109A6  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15576                           
 15577                           ; BSR set to: 1
 15578                           ;ring_buffer_LUT.c: 412: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15579  0109A8  0E00               	movlw	0
 15580  0109AA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15581  0109AC  0E00               	movlw	0
 15582  0109AE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15583  0109B0  0E02               	movlw	2
 15584  0109B2  EC95  F0A2         	call	_terminal_textAttributes
 15585                           
 15586                           ;ring_buffer_LUT.c: 413: printf("Load has been enabled, dimming disabled\n\r");
 15587  0109B6  0EBF               	movlw	low STR_105
 15588  0109B8  0101               	movlb	1	; () banked
 15589  0109BA  6F82               	movwf	printf@f& (0+255),b
 15590  0109BC  0EF8               	movlw	high STR_105
 15591  0109BE  6F83               	movwf	(printf@f+1)& (0+255),b
 15592  0109C0  ECCD  F08A         	call	_printf	;wreg free
 15593                           
 15594                           ;ring_buffer_LUT.c: 414: terminal_textAttributesReset();
 15595  0109C4  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15596                           
 15597                           ;ring_buffer_LUT.c: 416: }
 15598  0109C8  0012               	return	
 15599  0109CA                     l1489:
 15600                           
 15601                           ;ring_buffer_LUT.c: 419: else if ((0 == strcmp(line, "Load Enabled?"))) {
 15602  0109CA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15603  0109CE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15604  0109D2  0E91               	movlw	low STR_106
 15605  0109D4  0101               	movlb	1	; () banked
 15606  0109D6  6F19               	movwf	strcmp@s2& (0+255),b
 15607  0109D8  0EFE               	movlw	high STR_106
 15608  0109DA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15609  0109DC  EC1B  F0C7         	call	_strcmp	;wreg free
 15610  0109E0  0101               	movlb	1	; () banked
 15611  0109E2  5117               	movf	?_strcmp& (0+255),w,b
 15612  0109E4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15613  0109E6  A4D8               	btfss	status,2,c
 15614  0109E8  D025               	goto	l1491
 15615                           
 15616                           ; BSR set to: 1
 15617                           ;ring_buffer_LUT.c: 421: if (load_enable == 1) {
 15618  0109EA  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15619  0109EC  D011               	goto	l1492
 15620                           
 15621                           ; BSR set to: 1
 15622                           ;ring_buffer_LUT.c: 423: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15623  0109EE  0E00               	movlw	0
 15624  0109F0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15625  0109F2  0E00               	movlw	0
 15626  0109F4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15627  0109F6  0E02               	movlw	2
 15628  0109F8  EC95  F0A2         	call	_terminal_textAttributes
 15629                           
 15630                           ;ring_buffer_LUT.c: 424: printf("Load is currently enabled\n\r");
 15631  0109FC  0EDB               	movlw	low STR_107
 15632  0109FE  0101               	movlb	1	; () banked
 15633  010A00  6F82               	movwf	printf@f& (0+255),b
 15634  010A02  0EFB               	movlw	high STR_107
 15635  010A04  6F83               	movwf	(printf@f+1)& (0+255),b
 15636  010A06  ECCD  F08A         	call	_printf	;wreg free
 15637                           
 15638                           ;ring_buffer_LUT.c: 425: terminal_textAttributesReset();
 15639  010A0A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15640                           
 15641                           ;ring_buffer_LUT.c: 427: }
 15642  010A0E  0012               	return	
 15643  010A10                     l1492:
 15644                           
 15645                           ;ring_buffer_LUT.c: 429: else {
 15646                           ;ring_buffer_LUT.c: 431: terminal_textAttributes(RED, BLACK, NORMAL);
 15647  010A10  0E00               	movlw	0
 15648  010A12  0101               	movlb	1	; () banked
 15649  010A14  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15650  010A16  0E00               	movlw	0
 15651  010A18  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15652  010A1A  0E01               	movlw	1
 15653  010A1C  EC95  F0A2         	call	_terminal_textAttributes
 15654                           
 15655                           ;ring_buffer_LUT.c: 432: printf("Load is currently disabled\n\r");
 15656  010A20  0E68               	movlw	low STR_108
 15657  010A22  0101               	movlb	1	; () banked
 15658  010A24  6F82               	movwf	printf@f& (0+255),b
 15659  010A26  0EFB               	movlw	high STR_108
 15660  010A28  6F83               	movwf	(printf@f+1)& (0+255),b
 15661  010A2A  ECCD  F08A         	call	_printf	;wreg free
 15662                           
 15663                           ;ring_buffer_LUT.c: 433: terminal_textAttributesReset();
 15664  010A2E  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15665                           
 15666                           ;ring_buffer_LUT.c: 436: }
 15667                           ;ring_buffer_LUT.c: 438: }
 15668  010A32  0012               	return	
 15669  010A34                     l1491:
 15670                           
 15671                           ;ring_buffer_LUT.c: 441: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 15672  010A34  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15673  010A38  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15674  010A3C  0E64               	movlw	low STR_109
 15675  010A3E  0101               	movlb	1	; () banked
 15676  010A40  6F19               	movwf	strcmp@s2& (0+255),b
 15677  010A42  0EFD               	movlw	high STR_109
 15678  010A44  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15679  010A46  EC1B  F0C7         	call	_strcmp	;wreg free
 15680  010A4A  0101               	movlb	1	; () banked
 15681  010A4C  5117               	movf	?_strcmp& (0+255),w,b
 15682  010A4E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15683  010A50  A4D8               	btfss	status,2,c
 15684  010A52  D039               	goto	l1495
 15685                           
 15686                           ; BSR set to: 1
 15687                           ;ring_buffer_LUT.c: 443: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 15688  010A54  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15689                           
 15690                           ; BSR set to: 1
 15691  010A56  B07F               	btfsc	3967,0,c	;volatile
 15692  010A58  D011               	goto	l1496
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;ring_buffer_LUT.c: 445: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15696  010A5A  0E00               	movlw	0
 15697  010A5C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15698  010A5E  0E00               	movlw	0
 15699  010A60  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15700  010A62  0E02               	movlw	2
 15701  010A64  EC95  F0A2         	call	_terminal_textAttributes
 15702                           
 15703                           ;ring_buffer_LUT.c: 446: printf("Dimming is currently enabled\n\r");
 15704  010A68  0E0C               	movlw	low STR_110
 15705  010A6A  0101               	movlb	1	; () banked
 15706  010A6C  6F82               	movwf	printf@f& (0+255),b
 15707  010A6E  0EFB               	movlw	high STR_110
 15708  010A70  6F83               	movwf	(printf@f+1)& (0+255),b
 15709  010A72  ECCD  F08A         	call	_printf	;wreg free
 15710                           
 15711                           ;ring_buffer_LUT.c: 447: terminal_textAttributesReset();
 15712  010A76  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15713                           
 15714                           ;ring_buffer_LUT.c: 449: }
 15715  010A7A  0012               	return	
 15716  010A7C                     l1496:
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;ring_buffer_LUT.c: 451: else if (load_enable == 1){
 15720  010A7C  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15721  010A7E  D011               	goto	l1498
 15722                           
 15723                           ; BSR set to: 1
 15724                           ;ring_buffer_LUT.c: 453: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15725  010A80  0E00               	movlw	0
 15726  010A82  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15727  010A84  0E00               	movlw	0
 15728  010A86  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15729  010A88  0E03               	movlw	3
 15730  010A8A  EC95  F0A2         	call	_terminal_textAttributes
 15731                           
 15732                           ;ring_buffer_LUT.c: 454: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 15733  010A8E  0E3D               	movlw	low STR_111
 15734  010A90  0101               	movlb	1	; () banked
 15735  010A92  6F82               	movwf	printf@f& (0+255),b
 15736  010A94  0EF6               	movlw	high STR_111
 15737  010A96  6F83               	movwf	(printf@f+1)& (0+255),b
 15738  010A98  ECCD  F08A         	call	_printf	;wreg free
 15739                           
 15740                           ;ring_buffer_LUT.c: 455: terminal_textAttributesReset();
 15741  010A9C  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15742                           
 15743                           ;ring_buffer_LUT.c: 457: }
 15744  010AA0  0012               	return	
 15745  010AA2                     l1498:
 15746                           
 15747                           ;ring_buffer_LUT.c: 459: else {
 15748                           ;ring_buffer_LUT.c: 461: terminal_textAttributes(RED, BLACK, NORMAL);
 15749  010AA2  0E00               	movlw	0
 15750  010AA4  0101               	movlb	1	; () banked
 15751  010AA6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15752  010AA8  0E00               	movlw	0
 15753  010AAA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15754  010AAC  0E01               	movlw	1
 15755  010AAE  EC95  F0A2         	call	_terminal_textAttributes
 15756                           
 15757                           ;ring_buffer_LUT.c: 462: printf("Load and dimming are currently disabled\n\r");
 15758  010AB2  0EE9               	movlw	low STR_112
 15759  010AB4  0101               	movlb	1	; () banked
 15760  010AB6  6F82               	movwf	printf@f& (0+255),b
 15761  010AB8  0EF8               	movlw	high STR_112
 15762  010ABA  6F83               	movwf	(printf@f+1)& (0+255),b
 15763  010ABC  ECCD  F08A         	call	_printf	;wreg free
 15764                           
 15765                           ;ring_buffer_LUT.c: 463: terminal_textAttributesReset();
 15766  010AC0  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15767                           
 15768                           ;ring_buffer_LUT.c: 465: }
 15769                           ;ring_buffer_LUT.c: 469: }
 15770  010AC4  0012               	return	
 15771  010AC6                     l1495:
 15772                           
 15773                           ;ring_buffer_LUT.c: 474: else if ((0 == strcmp(line, "Disable Load"))) {
 15774  010AC6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15775  010ACA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15776  010ACE  0E0B               	movlw	low STR_113
 15777  010AD0  0101               	movlb	1	; () banked
 15778  010AD2  6F19               	movwf	strcmp@s2& (0+255),b
 15779  010AD4  0EFF               	movlw	high STR_113
 15780  010AD6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15781  010AD8  EC1B  F0C7         	call	_strcmp	;wreg free
 15782  010ADC  0101               	movlb	1	; () banked
 15783  010ADE  5117               	movf	?_strcmp& (0+255),w,b
 15784  010AE0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15785  010AE2  A4D8               	btfss	status,2,c
 15786  010AE4  D014               	goto	l1501
 15787                           
 15788                           ; BSR set to: 1
 15789                           ;ring_buffer_LUT.c: 476: LATGbits.LATG1 = 0;
 15790  010AE6  927F               	bcf	3967,1,c	;volatile
 15791                           
 15792                           ;ring_buffer_LUT.c: 477: LATGbits.LATG0 = 0;
 15793  010AE8  907F               	bcf	3967,0,c	;volatile
 15794                           
 15795                           ;ring_buffer_LUT.c: 478: load_enable = 0;
 15796  010AEA  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15797                           
 15798                           ; BSR set to: 1
 15799                           ;ring_buffer_LUT.c: 480: terminal_textAttributes(RED, BLACK, NORMAL);
 15800  010AEC  0E00               	movlw	0
 15801  010AEE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15802  010AF0  0E00               	movlw	0
 15803  010AF2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15804  010AF4  0E01               	movlw	1
 15805  010AF6  EC95  F0A2         	call	_terminal_textAttributes
 15806                           
 15807                           ;ring_buffer_LUT.c: 481: printf("Load has been disabled\n\r");
 15808  010AFA  0E2C               	movlw	low STR_114
 15809  010AFC  0101               	movlb	1	; () banked
 15810  010AFE  6F82               	movwf	printf@f& (0+255),b
 15811  010B00  0EFC               	movlw	high STR_114
 15812  010B02  6F83               	movwf	(printf@f+1)& (0+255),b
 15813  010B04  ECCD  F08A         	call	_printf	;wreg free
 15814                           
 15815                           ;ring_buffer_LUT.c: 482: terminal_textAttributesReset();
 15816  010B08  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15817                           
 15818                           ;ring_buffer_LUT.c: 484: }
 15819  010B0C  0012               	return	
 15820  010B0E                     l1501:
 15821                           
 15822                           ;ring_buffer_LUT.c: 487: else if ((strstr(line, "Set Dimming Percentage: "))) {
 15823  010B0E  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 15824  010B12  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 15825  010B16  0E45               	movlw	low STR_115
 15826  010B18  0101               	movlb	1	; () banked
 15827  010B1A  6F28               	movwf	strstr@s2& (0+255),b
 15828  010B1C  0EFC               	movlw	high STR_115
 15829  010B1E  6F29               	movwf	(strstr@s2+1)& (0+255),b
 15830  010B20  EC91  F0C2         	call	_strstr	;wreg free
 15831  010B24  0101               	movlb	1	; () banked
 15832  010B26  5126               	movf	?_strstr& (0+255),w,b
 15833  010B28  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 15834  010B2A  B4D8               	btfsc	status,2,c
 15835  010B2C  D127               	goto	l1503
 15836                           
 15837                           ; BSR set to: 1
 15838                           ;ring_buffer_LUT.c: 490: char arg_buff[3];
 15839                           ;ring_buffer_LUT.c: 493: for (int index = 0; index < 3; index++) {
 15840  010B2E  0E00               	movlw	0
 15841  010B30  0102               	movlb	2	; () banked
 15842  010B32  6FD2               	movwf	(ringBufferLUT@index+1)& (0+255),b
 15843  010B34  0E00               	movlw	0
 15844  010B36  6FD1               	movwf	ringBufferLUT@index& (0+255),b
 15845  010B38                     l20499:
 15846                           
 15847                           ; BSR set to: 2
 15848  010B38  BFD2               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 15849  010B3A  D006               	goto	l1504
 15850  010B3C  51D2               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 15851  010B3E  E11F               	bnz	l20509
 15852  010B40  0E03               	movlw	3
 15853  010B42  5DD1               	subwf	ringBufferLUT@index& (0+255),w,b
 15854  010B44  B0D8               	btfsc	status,0,c
 15855  010B46  D01B               	goto	u27220
 15856  010B48                     l1504:
 15857                           
 15858                           ; BSR set to: 2
 15859                           ;ring_buffer_LUT.c: 495: arg_buff[index] = line[index + 24];
 15860                           
 15861                           ; BSR set to: 2
 15862  010B48  0E18               	movlw	24
 15863  010B4A  25D1               	addwf	ringBufferLUT@index& (0+255),w,b
 15864  010B4C  0101               	movlb	1	; () banked
 15865  010B4E  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 15866  010B50  0E00               	movlw	0
 15867  010B52  0102               	movlb	2	; () banked
 15868  010B54  21D2               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 15869  010B56  0101               	movlb	1	; () banked
 15870  010B58  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 15871  010B5A  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 15872  010B5C  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 15873  010B5E  6ED9               	movwf	fsr2l,c
 15874  010B60  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 15875  010B62  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 15876  010B64  6EDA               	movwf	fsr2h,c
 15877  010B66  0ECE               	movlw	low ringBufferLUT@arg_buff
 15878  010B68  0102               	movlb	2	; () banked
 15879  010B6A  25D1               	addwf	ringBufferLUT@index& (0+255),w,b
 15880  010B6C  6EE1               	movwf	fsr1l,c
 15881  010B6E  0E02               	movlw	high ringBufferLUT@arg_buff
 15882  010B70  21D2               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 15883  010B72  6EE2               	movwf	fsr1h,c
 15884  010B74  CFDF FFE7          	movff	indf2,indf1
 15885                           
 15886                           ; BSR set to: 2
 15887  010B78  4BD1               	infsnz	ringBufferLUT@index& (0+255),f,b
 15888  010B7A  2BD2               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 15889  010B7C  D7DD               	goto	l20499
 15890  010B7E                     u27220:
 15891  010B7E                     l20509:
 15892                           
 15893                           ; BSR set to: 2
 15894                           ;ring_buffer_LUT.c: 497: }
 15895                           ;ring_buffer_LUT.c: 499: int percentage = atoi(arg_buff);
 15896  010B7E  0ECE               	movlw	low ringBufferLUT@arg_buff
 15897  010B80  0101               	movlb	1	; () banked
 15898  010B82  6F1D               	movwf	atoi@s& (0+255),b
 15899  010B84  0E02               	movlw	high ringBufferLUT@arg_buff
 15900  010B86  6F1E               	movwf	(atoi@s+1)& (0+255),b
 15901  010B88  EC78  F0C0         	call	_atoi	;wreg free
 15902  010B8C  C11D  F2D3         	movff	?_atoi,ringBufferLUT@percentage
 15903  010B90  C11E  F2D4         	movff	?_atoi+1,ringBufferLUT@percentage+1
 15904                           
 15905                           ;ring_buffer_LUT.c: 502: if ( (percentage >= 100) ||
 15906                           ;ring_buffer_LUT.c: 503: (percentage <= 0)) {
 15907  010B94  0102               	movlb	2	; () banked
 15908  010B96  BFD4               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 15909  010B98  D006               	goto	u27230
 15910  010B9A  51D4               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 15911  010B9C  E10B               	bnz	l20515
 15912  010B9E  0E64               	movlw	100
 15913  010BA0  5DD3               	subwf	ringBufferLUT@percentage& (0+255),w,b
 15914  010BA2  B0D8               	btfsc	status,0,c
 15915  010BA4  D007               	goto	u27240
 15916  010BA6                     u27230:
 15917                           
 15918                           ; BSR set to: 2
 15919  010BA6  BFD4               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 15920  010BA8  D005               	goto	u27240
 15921  010BAA  51D4               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 15922  010BAC  E12B               	bnz	l20517
 15923  010BAE  05D3               	decf	ringBufferLUT@percentage& (0+255),w,b
 15924  010BB0  B0D8               	btfsc	status,0,c
 15925  010BB2  D028               	goto	l1506
 15926  010BB4                     u27240:
 15927  010BB4                     l20515:
 15928                           
 15929                           ; BSR set to: 2
 15930                           ;ring_buffer_LUT.c: 505: terminal_textAttributes(RED, BLACK, NORMAL);
 15931  010BB4  0E00               	movlw	0
 15932  010BB6  0101               	movlb	1	; () banked
 15933  010BB8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15934  010BBA  0E00               	movlw	0
 15935  010BBC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15936  010BBE  0E01               	movlw	1
 15937  010BC0  EC95  F0A2         	call	_terminal_textAttributes
 15938                           
 15939                           ;ring_buffer_LUT.c: 506: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 15940  010BC4  0E15               	movlw	low STR_116
 15941  010BC6  0101               	movlb	1	; () banked
 15942  010BC8  6F82               	movwf	printf@f& (0+255),b
 15943  010BCA  0EF2               	movlw	high STR_116
 15944  010BCC  6F83               	movwf	(printf@f+1)& (0+255),b
 15945  010BCE  ECCD  F08A         	call	_printf	;wreg free
 15946                           
 15947                           ;ring_buffer_LUT.c: 507: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15948  010BD2  0E00               	movlw	0
 15949  010BD4  0101               	movlb	1	; () banked
 15950  010BD6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15951  010BD8  0E00               	movlw	0
 15952  010BDA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15953  010BDC  0E03               	movlw	3
 15954  010BDE  EC95  F0A2         	call	_terminal_textAttributes
 15955                           
 15956                           ;ring_buffer_LUT.c: 508: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 15957  010BE2  0EAF               	movlw	low STR_117
 15958  010BE4  0101               	movlb	1	; () banked
 15959  010BE6  6F82               	movwf	printf@f& (0+255),b
 15960  010BE8  0EF1               	movlw	high STR_117
 15961  010BEA  6F83               	movwf	(printf@f+1)& (0+255),b
 15962  010BEC  ECCD  F08A         	call	_printf	;wreg free
 15963                           
 15964                           ;ring_buffer_LUT.c: 509: printf("Enter 'Help' for list of available commands\n\r");
 15965  010BF0  0E36               	movlw	low STR_118
 15966  010BF2  0101               	movlb	1	; () banked
 15967  010BF4  6F82               	movwf	printf@f& (0+255),b
 15968  010BF6  0EF8               	movlw	high STR_118
 15969  010BF8  6F83               	movwf	(printf@f+1)& (0+255),b
 15970  010BFA  ECCD  F08A         	call	_printf	;wreg free
 15971                           
 15972                           ;ring_buffer_LUT.c: 510: terminal_textAttributesReset();
 15973  010BFE  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 15974                           
 15975                           ;ring_buffer_LUT.c: 512: }
 15976  010C02  0012               	return	
 15977  010C04                     l1506:
 15978  010C04                     l20517:
 15979                           
 15980                           ;ring_buffer_LUT.c: 515: else {
 15981                           ;ring_buffer_LUT.c: 518: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 15982  010C04  0E00               	movlw	0
 15983  010C06  0101               	movlb	1	; () banked
 15984  010C08  6F41               	movwf	___fldiv@a& (0+255),b
 15985  010C0A  0E00               	movlw	0
 15986  010C0C  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 15987  010C0E  0EC8               	movlw	200
 15988  010C10  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 15989  010C12  0E42               	movlw	66
 15990  010C14  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 15991  010C16  0E00               	movlw	0
 15992  010C18  6F2D               	movwf	___fladd@a& (0+255),b
 15993  010C1A  0E00               	movlw	0
 15994  010C1C  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 15995  010C1E  0EC8               	movlw	200
 15996  010C20  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 15997  010C22  0E42               	movlw	66
 15998  010C24  6F30               	movwf	(___fladd@a+3)& (0+255),b
 15999  010C26  C2D3  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 16000  010C2A  C2D4  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 16001  010C2E  0E00               	movlw	0
 16002  010C30  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 16003  010C32  0EFF               	movlw	-1
 16004  010C34  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 16005  010C36  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 16006  010C38  0E01               	movlw	1
 16007  010C3A  EC1D  F0B8         	call	___xxtofl
 16008  010C3E  C117  F125         	movff	?___xxtofl,___flneg@f1
 16009  010C42  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 16010  010C46  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 16011  010C4A  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 16012  010C4E  EC86  F0CA         	call	___flneg	;wreg free
 16013  010C52  C125  F129         	movff	?___flneg,___fladd@b
 16014  010C56  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 16015  010C5A  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 16016  010C5E  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 16017  010C62  EC9A  F0A7         	call	___fladd	;wreg free
 16018  010C66  C129  F13D         	movff	?___fladd,___fldiv@b
 16019  010C6A  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 16020  010C6E  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 16021  010C72  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 16022  010C76  EC9E  F0B0         	call	___fldiv	;wreg free
 16023  010C7A  C13D  F156         	movff	?___fldiv,___flmul@b
 16024  010C7E  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 16025  010C82  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 16026  010C86  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 16027  010C8A  0EDB               	movlw	219
 16028  010C8C  0101               	movlb	1	; () banked
 16029  010C8E  6F5A               	movwf	___flmul@a& (0+255),b
 16030  010C90  0E0F               	movlw	15
 16031  010C92  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16032  010C94  0E49               	movlw	73
 16033  010C96  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16034  010C98  0E40               	movlw	64
 16035  010C9A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16036  010C9C  EC49  F0A4         	call	___flmul	;wreg free
 16037  010CA0  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 16038  010CA4  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 16039  010CA8  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 16040  010CAC  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 16041                           
 16042                           ;ring_buffer_LUT.c: 519: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 16043  010CB0  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 16044  010CB4  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 16045  010CB8  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 16046  010CBC  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 16047  010CC0  0EE1               	movlw	225
 16048  010CC2  0101               	movlb	1	; () banked
 16049  010CC4  6F5A               	movwf	___flmul@a& (0+255),b
 16050  010CC6  0E2E               	movlw	46
 16051  010CC8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16052  010CCA  0E65               	movlw	101
 16053  010CCC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16054  010CCE  0E42               	movlw	66
 16055  010CD0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16056  010CD2  EC49  F0A4         	call	___flmul	;wreg free
 16057  010CD6  C156  F2B2         	movff	?___flmul,ringBufferLUT@angle_degrees
 16058  010CDA  C157  F2B3         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 16059  010CDE  C158  F2B4         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 16060  010CE2  C159  F2B5         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 16061                           
 16062                           ;ring_buffer_LUT.c: 520: dimming_period = (percentage) * (0xFFFF / 100);
 16063  010CE6  C2D3  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 16064  010CEA  C2D4  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 16065  010CEE  0E02               	movlw	2
 16066  010CF0  0101               	movlb	1	; () banked
 16067  010CF2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16068  010CF4  0E8F               	movlw	143
 16069  010CF6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 16070  010CF8  ECE2  F0CA         	call	___wmul	;wreg free
 16071  010CFC  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 16072  010D00  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 16073                           
 16074                           ;ring_buffer_LUT.c: 522: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16075  010D04  0E00               	movlw	0
 16076  010D06  0101               	movlb	1	; () banked
 16077  010D08  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16078  010D0A  0E00               	movlw	0
 16079  010D0C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16080  010D0E  0E02               	movlw	2
 16081  010D10  EC95  F0A2         	call	_terminal_textAttributes
 16082                           
 16083                           ;ring_buffer_LUT.c: 523: printf("Dimming has been set to %d percent\n\r", percentage);
 16084  010D14  0ED6               	movlw	low STR_119
 16085  010D16  0101               	movlb	1	; () banked
 16086  010D18  6F82               	movwf	printf@f& (0+255),b
 16087  010D1A  0EF9               	movlw	high STR_119
 16088  010D1C  6F83               	movwf	(printf@f+1)& (0+255),b
 16089  010D1E  C2D3  F184         	movff	ringBufferLUT@percentage,?_printf+2
 16090  010D22  C2D4  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 16091  010D26  ECCD  F08A         	call	_printf	;wreg free
 16092                           
 16093                           ;ring_buffer_LUT.c: 524: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 16094  010D2A  0E90               	movlw	low STR_120
 16095  010D2C  0101               	movlb	1	; () banked
 16096  010D2E  6F82               	movwf	printf@f& (0+255),b
 16097  010D30  0EF3               	movlw	high STR_120
 16098  010D32  6F83               	movwf	(printf@f+1)& (0+255),b
 16099  010D34  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 16100  010D38  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 16101  010D3C  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 16102  010D40  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 16103  010D44  C2B2  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 16104  010D48  C2B3  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 16105  010D4C  C2B4  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 16106  010D50  C2B5  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 16107  010D54  ECCD  F08A         	call	_printf	;wreg free
 16108                           
 16109                           ;ring_buffer_LUT.c: 525: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 16110  010D58  0E09               	movlw	low STR_121
 16111  010D5A  0101               	movlb	1	; () banked
 16112  010D5C  6F82               	movwf	printf@f& (0+255),b
 16113  010D5E  0EF3               	movlw	high STR_121
 16114  010D60  6F83               	movwf	(printf@f+1)& (0+255),b
 16115  010D62  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 16116  010D66  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 16117  010D6A  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 16118  010D6E  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 16119  010D72  ECCD  F08A         	call	_printf	;wreg free
 16120                           
 16121                           ;ring_buffer_LUT.c: 526: terminal_textAttributesReset();
 16122  010D76  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16123                           
 16124                           ;ring_buffer_LUT.c: 528: }
 16125                           ;ring_buffer_LUT.c: 530: }
 16126  010D7A  0012               	return	
 16127  010D7C                     l1503:
 16128                           
 16129                           ;ring_buffer_LUT.c: 533: else if((0 == strcmp(line, "Device On Time?"))) {
 16130  010D7C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16131  010D80  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16132  010D84  0EE9               	movlw	low STR_122
 16133  010D86  0101               	movlb	1	; () banked
 16134  010D88  6F19               	movwf	strcmp@s2& (0+255),b
 16135  010D8A  0EFD               	movlw	high STR_122
 16136  010D8C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16137  010D8E  EC1B  F0C7         	call	_strcmp	;wreg free
 16138  010D92  0101               	movlb	1	; () banked
 16139  010D94  5117               	movf	?_strcmp& (0+255),w,b
 16140  010D96  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16141  010D98  A4D8               	btfss	status,2,c
 16142  010D9A  D019               	goto	l1511
 16143                           
 16144                           ; BSR set to: 1
 16145                           ;ring_buffer_LUT.c: 535: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16146  010D9C  0E00               	movlw	0
 16147  010D9E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16148  010DA0  0E00               	movlw	0
 16149  010DA2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16150  010DA4  0E02               	movlw	2
 16151  010DA6  EC95  F0A2         	call	_terminal_textAttributes
 16152                           
 16153                           ;ring_buffer_LUT.c: 536: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 16154  010DAA  0E83               	movlw	low STR_123
 16155  010DAC  0101               	movlb	1	; () banked
 16156  010DAE  6F82               	movwf	printf@f& (0+255),b
 16157  010DB0  0EF4               	movlw	high STR_123
 16158  010DB2  6F83               	movwf	(printf@f+1)& (0+255),b
 16159  010DB4  C21C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 16160  010DB8  C21D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 16161  010DBC  C21E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 16162  010DC0  C21F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 16163  010DC4  ECCD  F08A         	call	_printf	;wreg free
 16164                           
 16165                           ;ring_buffer_LUT.c: 537: terminal_textAttributesReset();
 16166  010DC8  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16167                           
 16168                           ;ring_buffer_LUT.c: 539: }
 16169  010DCC  0012               	return	
 16170  010DCE                     l1511:
 16171                           
 16172                           ;ring_buffer_LUT.c: 542: else if((0 == strcmp(line, "Load On Time?"))) {
 16173  010DCE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16174  010DD2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16175  010DD6  0E9F               	movlw	low STR_124
 16176  010DD8  0101               	movlb	1	; () banked
 16177  010DDA  6F19               	movwf	strcmp@s2& (0+255),b
 16178  010DDC  0EFE               	movlw	high STR_124
 16179  010DDE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16180  010DE0  EC1B  F0C7         	call	_strcmp	;wreg free
 16181  010DE4  0101               	movlb	1	; () banked
 16182  010DE6  5117               	movf	?_strcmp& (0+255),w,b
 16183  010DE8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16184  010DEA  A4D8               	btfss	status,2,c
 16185  010DEC  D019               	goto	l1513
 16186                           
 16187                           ; BSR set to: 1
 16188                           ;ring_buffer_LUT.c: 544: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16189  010DEE  0E00               	movlw	0
 16190  010DF0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16191  010DF2  0E00               	movlw	0
 16192  010DF4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16193  010DF6  0E02               	movlw	2
 16194  010DF8  EC95  F0A2         	call	_terminal_textAttributes
 16195                           
 16196                           ;ring_buffer_LUT.c: 545: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 16197  010DFC  0E72               	movlw	low STR_125
 16198  010DFE  0101               	movlb	1	; () banked
 16199  010E00  6F82               	movwf	printf@f& (0+255),b
 16200  010E02  0EF6               	movlw	high STR_125
 16201  010E04  6F83               	movwf	(printf@f+1)& (0+255),b
 16202  010E06  C218  F184         	movff	_load_on_time,?_printf+2	;volatile
 16203  010E0A  C219  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 16204  010E0E  C21A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 16205  010E12  C21B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 16206  010E16  ECCD  F08A         	call	_printf	;wreg free
 16207                           
 16208                           ;ring_buffer_LUT.c: 546: terminal_textAttributesReset();
 16209  010E1A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16210                           
 16211                           ;ring_buffer_LUT.c: 548: }
 16212  010E1E  0012               	return	
 16213  010E20                     l1513:
 16214                           
 16215                           ;ring_buffer_LUT.c: 551: else if((0 == strcmp(line, "Max RMS Current?"))) {
 16216  010E20  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16217  010E24  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16218  010E28  0E86               	movlw	low STR_126
 16219  010E2A  0101               	movlb	1	; () banked
 16220  010E2C  6F19               	movwf	strcmp@s2& (0+255),b
 16221  010E2E  0EFD               	movlw	high STR_126
 16222  010E30  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16223  010E32  EC1B  F0C7         	call	_strcmp	;wreg free
 16224  010E36  0101               	movlb	1	; () banked
 16225  010E38  5117               	movf	?_strcmp& (0+255),w,b
 16226  010E3A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16227  010E3C  A4D8               	btfss	status,2,c
 16228  010E3E  D030               	goto	l1515
 16229                           
 16230                           ; BSR set to: 1
 16231                           ;ring_buffer_LUT.c: 554: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 16232  010E40  0E19               	movlw	low _max_Irms_address
 16233  010E42  6EF6               	movwf	tblptrl,c
 16234  010E44                     	if	1	;There is more than 1 active tblptr byte
 16235  010E44  0ED5               	movlw	high _max_Irms_address
 16236  010E46  6EF7               	movwf	tblptrh,c
 16237  010E48                     	endif
 16238  010E48                     	if	1	;There are 3 active tblptr bytes
 16239  010E48  0E00               	movlw	low (_max_Irms_address shr (0+16))
 16240  010E4A  6EF8               	movwf	tblptru,c
 16241  010E4C                     	endif
 16242  010E4C  0009               	tblrd		*+
 16243  010E4E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 16244  010E52  000A               	tblrd		*-
 16245  010E54  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 16246  010E58  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 16247  010E5C  C119  F2B6         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 16248  010E60  C11A  F2B7         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 16249  010E64  C11B  F2B8         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 16250  010E68  C11C  F2B9         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 16251                           
 16252                           ;ring_buffer_LUT.c: 556: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16253  010E6C  0E00               	movlw	0
 16254  010E6E  0101               	movlb	1	; () banked
 16255  010E70  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16256  010E72  0E00               	movlw	0
 16257  010E74  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16258  010E76  0E06               	movlw	6
 16259  010E78  EC95  F0A2         	call	_terminal_textAttributes
 16260                           
 16261                           ;ring_buffer_LUT.c: 557: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 16262  010E7C  0E43               	movlw	low STR_127
 16263  010E7E  0101               	movlb	1	; () banked
 16264  010E80  6F82               	movwf	printf@f& (0+255),b
 16265  010E82  0EF7               	movlw	high STR_127
 16266  010E84  6F83               	movwf	(printf@f+1)& (0+255),b
 16267  010E86  C2B6  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 16268  010E8A  C2B7  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 16269  010E8E  C2B8  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 16270  010E92  C2B9  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 16271  010E96  ECCD  F08A         	call	_printf	;wreg free
 16272                           
 16273                           ;ring_buffer_LUT.c: 558: terminal_textAttributesReset();
 16274  010E9A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16275                           
 16276                           ;ring_buffer_LUT.c: 560: }
 16277  010E9E  0012               	return	
 16278  010EA0                     l1515:
 16279                           
 16280                           ;ring_buffer_LUT.c: 563: else if((0 == strcmp(line, "Max Power?"))) {
 16281  010EA0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16282  010EA4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16283  010EA8  0E48               	movlw	low STR_128
 16284  010EAA  0101               	movlb	1	; () banked
 16285  010EAC  6F19               	movwf	strcmp@s2& (0+255),b
 16286  010EAE  0EFF               	movlw	high STR_128
 16287  010EB0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16288  010EB2  EC1B  F0C7         	call	_strcmp	;wreg free
 16289  010EB6  0101               	movlb	1	; () banked
 16290  010EB8  5117               	movf	?_strcmp& (0+255),w,b
 16291  010EBA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16292  010EBC  A4D8               	btfss	status,2,c
 16293  010EBE  D030               	goto	l1517
 16294                           
 16295                           ; BSR set to: 1
 16296                           ;ring_buffer_LUT.c: 566: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 16297  010EC0  0E17               	movlw	low _max_Power_address
 16298  010EC2  6EF6               	movwf	tblptrl,c
 16299  010EC4                     	if	1	;There is more than 1 active tblptr byte
 16300  010EC4  0ED5               	movlw	high _max_Power_address
 16301  010EC6  6EF7               	movwf	tblptrh,c
 16302  010EC8                     	endif
 16303  010EC8                     	if	1	;There are 3 active tblptr bytes
 16304  010EC8  0E00               	movlw	low (_max_Power_address shr (0+16))
 16305  010ECA  6EF8               	movwf	tblptru,c
 16306  010ECC                     	endif
 16307  010ECC  0009               	tblrd		*+
 16308  010ECE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 16309  010ED2  000A               	tblrd		*-
 16310  010ED4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 16311  010ED8  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 16312  010EDC  C119  F2BA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 16313  010EE0  C11A  F2BB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 16314  010EE4  C11B  F2BC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 16315  010EE8  C11C  F2BD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 16316                           
 16317                           ;ring_buffer_LUT.c: 568: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16318  010EEC  0E00               	movlw	0
 16319  010EEE  0101               	movlb	1	; () banked
 16320  010EF0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16321  010EF2  0E00               	movlw	0
 16322  010EF4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16323  010EF6  0E06               	movlw	6
 16324  010EF8  EC95  F0A2         	call	_terminal_textAttributes
 16325                           
 16326                           ;ring_buffer_LUT.c: 569: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 16327  010EFC  0E64               	movlw	low STR_129
 16328  010EFE  0101               	movlb	1	; () banked
 16329  010F00  6F82               	movwf	printf@f& (0+255),b
 16330  010F02  0EF8               	movlw	high STR_129
 16331  010F04  6F83               	movwf	(printf@f+1)& (0+255),b
 16332  010F06  C2BA  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 16333  010F0A  C2BB  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 16334  010F0E  C2BC  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 16335  010F12  C2BD  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 16336  010F16  ECCD  F08A         	call	_printf	;wreg free
 16337                           
 16338                           ;ring_buffer_LUT.c: 570: terminal_textAttributesReset();
 16339  010F1A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16340                           
 16341                           ;ring_buffer_LUT.c: 572: }
 16342  010F1E  0012               	return	
 16343  010F20                     l1517:
 16344                           
 16345                           ;ring_buffer_LUT.c: 575: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 16346  010F20  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16347  010F24  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16348  010F28  0EF6               	movlw	low STR_130
 16349  010F2A  0101               	movlb	1	; () banked
 16350  010F2C  6F19               	movwf	strcmp@s2& (0+255),b
 16351  010F2E  0EFC               	movlw	high STR_130
 16352  010F30  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16353  010F32  EC1B  F0C7         	call	_strcmp	;wreg free
 16354  010F36  0101               	movlb	1	; () banked
 16355  010F38  5117               	movf	?_strcmp& (0+255),w,b
 16356  010F3A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16357  010F3C  A4D8               	btfss	status,2,c
 16358  010F3E  D030               	goto	l1519
 16359                           
 16360                           ; BSR set to: 1
 16361                           ;ring_buffer_LUT.c: 578: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 16362  010F40  0E15               	movlw	low _max_POS3P3_ADC_Result_address
 16363  010F42  6EF6               	movwf	tblptrl,c
 16364  010F44                     	if	1	;There is more than 1 active tblptr byte
 16365  010F44  0ED5               	movlw	high _max_POS3P3_ADC_Result_address
 16366  010F46  6EF7               	movwf	tblptrh,c
 16367  010F48                     	endif
 16368  010F48                     	if	1	;There are 3 active tblptr bytes
 16369  010F48  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 16370  010F4A  6EF8               	movwf	tblptru,c
 16371  010F4C                     	endif
 16372  010F4C  0009               	tblrd		*+
 16373  010F4E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 16374  010F52  000A               	tblrd		*-
 16375  010F54  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 16376  010F58  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 16377  010F5C  C119  F2BE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 16378  010F60  C11A  F2BF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 16379  010F64  C11B  F2C0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 16380  010F68  C11C  F2C1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 16381                           
 16382                           ;ring_buffer_LUT.c: 580: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16383  010F6C  0E00               	movlw	0
 16384  010F6E  0101               	movlb	1	; () banked
 16385  010F70  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16386  010F72  0E00               	movlw	0
 16387  010F74  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16388  010F76  0E06               	movlw	6
 16389  010F78  EC95  F0A2         	call	_terminal_textAttributes
 16390                           
 16391                           ;ring_buffer_LUT.c: 581: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 16392  010F7C  0E0F               	movlw	low STR_131
 16393  010F7E  0101               	movlb	1	; () banked
 16394  010F80  6F82               	movwf	printf@f& (0+255),b
 16395  010F82  0EF7               	movlw	high STR_131
 16396  010F84  6F83               	movwf	(printf@f+1)& (0+255),b
 16397  010F86  C2BE  F184         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 16398  010F8A  C2BF  F185         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 16399  010F8E  C2C0  F186         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 16400  010F92  C2C1  F187         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 16401  010F96  ECCD  F08A         	call	_printf	;wreg free
 16402                           
 16403                           ;ring_buffer_LUT.c: 582: terminal_textAttributesReset();
 16404  010F9A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16405                           
 16406                           ;ring_buffer_LUT.c: 584: }
 16407  010F9E  0012               	return	
 16408  010FA0                     l1519:
 16409                           
 16410                           ;ring_buffer_LUT.c: 587: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 16411  010FA0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16412  010FA4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16413  010FA8  0E1D               	movlw	low STR_132
 16414  010FAA  0101               	movlb	1	; () banked
 16415  010FAC  6F19               	movwf	strcmp@s2& (0+255),b
 16416  010FAE  0EFD               	movlw	high STR_132
 16417  010FB0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16418  010FB2  EC1B  F0C7         	call	_strcmp	;wreg free
 16419  010FB6  0101               	movlb	1	; () banked
 16420  010FB8  5117               	movf	?_strcmp& (0+255),w,b
 16421  010FBA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16422  010FBC  A4D8               	btfss	status,2,c
 16423  010FBE  D030               	goto	l1521
 16424                           
 16425                           ; BSR set to: 1
 16426                           ;ring_buffer_LUT.c: 590: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 16427  010FC0  0E13               	movlw	low _max_POS12_ADC_Result_address
 16428  010FC2  6EF6               	movwf	tblptrl,c
 16429  010FC4                     	if	1	;There is more than 1 active tblptr byte
 16430  010FC4  0ED5               	movlw	high _max_POS12_ADC_Result_address
 16431  010FC6  6EF7               	movwf	tblptrh,c
 16432  010FC8                     	endif
 16433  010FC8                     	if	1	;There are 3 active tblptr bytes
 16434  010FC8  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 16435  010FCA  6EF8               	movwf	tblptru,c
 16436  010FCC                     	endif
 16437  010FCC  0009               	tblrd		*+
 16438  010FCE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 16439  010FD2  000A               	tblrd		*-
 16440  010FD4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 16441  010FD8  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 16442  010FDC  C119  F2C2         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3221
 16443  010FE0  C11A  F2C3         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3221+1
 16444  010FE4  C11B  F2C4         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3221+2
 16445  010FE8  C11C  F2C5         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3221+3
 16446                           
 16447                           ;ring_buffer_LUT.c: 592: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16448  010FEC  0E00               	movlw	0
 16449  010FEE  0101               	movlb	1	; () banked
 16450  010FF0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16451  010FF2  0E00               	movlw	0
 16452  010FF4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16453  010FF6  0E06               	movlw	6
 16454  010FF8  EC95  F0A2         	call	_terminal_textAttributes
 16455                           
 16456                           ;ring_buffer_LUT.c: 593: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 16457  010FFC  0E76               	movlw	low STR_133
 16458  010FFE  0101               	movlb	1	; () banked
 16459  011000  6F82               	movwf	printf@f& (0+255),b
 16460  011002  0EF7               	movlw	high STR_133
 16461  011004  6F83               	movwf	(printf@f+1)& (0+255),b
 16462  011006  C2C2  F184         	movff	ringBufferLUT@max_voltage_print_3221,?_printf+2
 16463  01100A  C2C3  F185         	movff	ringBufferLUT@max_voltage_print_3221+1,?_printf+3
 16464  01100E  C2C4  F186         	movff	ringBufferLUT@max_voltage_print_3221+2,?_printf+4
 16465  011012  C2C5  F187         	movff	ringBufferLUT@max_voltage_print_3221+3,?_printf+5
 16466  011016  ECCD  F08A         	call	_printf	;wreg free
 16467                           
 16468                           ;ring_buffer_LUT.c: 594: terminal_textAttributesReset();
 16469  01101A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16470                           
 16471                           ;ring_buffer_LUT.c: 596: }
 16472  01101E  0012               	return	
 16473  011020                     l1521:
 16474                           
 16475                           ;ring_buffer_LUT.c: 599: else if((0 == strcmp(line, "Max Die Temp?"))) {
 16476  011020  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16477  011024  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16478  011028  0EAD               	movlw	low STR_134
 16479  01102A  0101               	movlb	1	; () banked
 16480  01102C  6F19               	movwf	strcmp@s2& (0+255),b
 16481  01102E  0EFE               	movlw	high STR_134
 16482  011030  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16483  011032  EC1B  F0C7         	call	_strcmp	;wreg free
 16484  011036  0101               	movlb	1	; () banked
 16485  011038  5117               	movf	?_strcmp& (0+255),w,b
 16486  01103A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16487  01103C  A4D8               	btfss	status,2,c
 16488  01103E  D030               	goto	l1523
 16489                           
 16490                           ; BSR set to: 1
 16491                           ;ring_buffer_LUT.c: 602: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 16492  011040  0E11               	movlw	low _max_Temp_ADC_Result_address
 16493  011042  6EF6               	movwf	tblptrl,c
 16494  011044                     	if	1	;There is more than 1 active tblptr byte
 16495  011044  0ED5               	movlw	high _max_Temp_ADC_Result_address
 16496  011046  6EF7               	movwf	tblptrh,c
 16497  011048                     	endif
 16498  011048                     	if	1	;There are 3 active tblptr bytes
 16499  011048  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 16500  01104A  6EF8               	movwf	tblptru,c
 16501  01104C                     	endif
 16502  01104C  0009               	tblrd		*+
 16503  01104E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 16504  011052  000A               	tblrd		*-
 16505  011054  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 16506  011058  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 16507  01105C  C119  F2C6         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 16508  011060  C11A  F2C7         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 16509  011064  C11B  F2C8         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 16510  011068  C11C  F2C9         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 16511                           
 16512                           ;ring_buffer_LUT.c: 604: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16513  01106C  0E00               	movlw	0
 16514  01106E  0101               	movlb	1	; () banked
 16515  011070  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16516  011072  0E00               	movlw	0
 16517  011074  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16518  011076  0E06               	movlw	6
 16519  011078  EC95  F0A2         	call	_terminal_textAttributes
 16520                           
 16521                           ;ring_buffer_LUT.c: 605: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 16522  01107C  0E92               	movlw	low STR_135
 16523  01107E  0101               	movlb	1	; () banked
 16524  011080  6F82               	movwf	printf@f& (0+255),b
 16525  011082  0EF8               	movlw	high STR_135
 16526  011084  6F83               	movwf	(printf@f+1)& (0+255),b
 16527  011086  C2C6  F184         	movff	ringBufferLUT@max_temp_print,?_printf+2
 16528  01108A  C2C7  F185         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 16529  01108E  C2C8  F186         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 16530  011092  C2C9  F187         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 16531  011096  ECCD  F08A         	call	_printf	;wreg free
 16532                           
 16533                           ;ring_buffer_LUT.c: 606: terminal_textAttributesReset();
 16534  01109A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16535                           
 16536                           ;ring_buffer_LUT.c: 608: }
 16537  01109E  0012               	return	
 16538  0110A0                     l1523:
 16539                           
 16540                           ;ring_buffer_LUT.c: 611: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 16541  0110A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16542  0110A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16543  0110A8  0E75               	movlw	low STR_136
 16544  0110AA  0101               	movlb	1	; () banked
 16545  0110AC  6F19               	movwf	strcmp@s2& (0+255),b
 16546  0110AE  0EFD               	movlw	high STR_136
 16547  0110B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16548  0110B2  EC1B  F0C7         	call	_strcmp	;wreg free
 16549  0110B6  0101               	movlb	1	; () banked
 16550  0110B8  5117               	movf	?_strcmp& (0+255),w,b
 16551  0110BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16552  0110BC  A4D8               	btfss	status,2,c
 16553  0110BE  D030               	goto	l1525
 16554                           
 16555                           ; BSR set to: 1
 16556                           ;ring_buffer_LUT.c: 614: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 16557  0110C0  0E0F               	movlw	low _max_FVR_ADC_Result_address
 16558  0110C2  6EF6               	movwf	tblptrl,c
 16559  0110C4                     	if	1	;There is more than 1 active tblptr byte
 16560  0110C4  0ED5               	movlw	high _max_FVR_ADC_Result_address
 16561  0110C6  6EF7               	movwf	tblptrh,c
 16562  0110C8                     	endif
 16563  0110C8                     	if	1	;There are 3 active tblptr bytes
 16564  0110C8  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 16565  0110CA  6EF8               	movwf	tblptru,c
 16566  0110CC                     	endif
 16567  0110CC  0009               	tblrd		*+
 16568  0110CE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 16569  0110D2  000A               	tblrd		*-
 16570  0110D4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 16571  0110D8  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 16572  0110DC  C119  F2CA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3227
 16573  0110E0  C11A  F2CB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3227+1
 16574  0110E4  C11B  F2CC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3227+2
 16575  0110E8  C11C  F2CD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3227+3
 16576                           
 16577                           ;ring_buffer_LUT.c: 616: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16578  0110EC  0E00               	movlw	0
 16579  0110EE  0101               	movlb	1	; () banked
 16580  0110F0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16581  0110F2  0E00               	movlw	0
 16582  0110F4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16583  0110F6  0E06               	movlw	6
 16584  0110F8  EC95  F0A2         	call	_terminal_textAttributes
 16585                           
 16586                           ;ring_buffer_LUT.c: 617: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 16587  0110FC  0ED2               	movlw	low STR_137
 16588  0110FE  0101               	movlb	1	; () banked
 16589  011100  6F82               	movwf	printf@f& (0+255),b
 16590  011102  0EF5               	movlw	high STR_137
 16591  011104  6F83               	movwf	(printf@f+1)& (0+255),b
 16592  011106  C2CA  F184         	movff	ringBufferLUT@max_voltage_print_3227,?_printf+2
 16593  01110A  C2CB  F185         	movff	ringBufferLUT@max_voltage_print_3227+1,?_printf+3
 16594  01110E  C2CC  F186         	movff	ringBufferLUT@max_voltage_print_3227+2,?_printf+4
 16595  011112  C2CD  F187         	movff	ringBufferLUT@max_voltage_print_3227+3,?_printf+5
 16596  011116  ECCD  F08A         	call	_printf	;wreg free
 16597                           
 16598                           ;ring_buffer_LUT.c: 618: terminal_textAttributesReset();
 16599  01111A  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16600                           
 16601                           ;ring_buffer_LUT.c: 620: }
 16602  01111E  0012               	return	
 16603  011120                     l1525:
 16604                           
 16605                           ;ring_buffer_LUT.c: 623: else if((0 == strcmp(line, "Clear Max Values"))) {
 16606  011120  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16607  011124  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16608  011128  0EA8               	movlw	low STR_138
 16609  01112A  0101               	movlb	1	; () banked
 16610  01112C  6F19               	movwf	strcmp@s2& (0+255),b
 16611  01112E  0EFD               	movlw	high STR_138
 16612  011130  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16613  011132  EC1B  F0C7         	call	_strcmp	;wreg free
 16614  011136  0101               	movlb	1	; () banked
 16615  011138  5117               	movf	?_strcmp& (0+255),w,b
 16616  01113A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16617  01113C  A4D8               	btfss	status,2,c
 16618  01113E  D0CC               	goto	l1527
 16619                           
 16620                           ; BSR set to: 1
 16621                           ;ring_buffer_LUT.c: 626: writeDoubleToEEPROM(0.0, max_Irms_address);
 16622  011140  0E00               	movlw	0
 16623  011142  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 16624  011144  0E00               	movlw	0
 16625  011146  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 16626  011148  0E00               	movlw	0
 16627  01114A  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 16628  01114C  0E00               	movlw	0
 16629  01114E  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 16630  011150  0E19               	movlw	low _max_Irms_address
 16631  011152  6EF6               	movwf	tblptrl,c
 16632  011154                     	if	1	;There is more than 1 active tblptr byte
 16633  011154  0ED5               	movlw	high _max_Irms_address
 16634  011156  6EF7               	movwf	tblptrh,c
 16635  011158                     	endif
 16636  011158                     	if	1	;There are 3 active tblptr bytes
 16637  011158  0E00               	movlw	low (_max_Irms_address shr (0+16))
 16638  01115A  6EF8               	movwf	tblptru,c
 16639  01115C                     	endif
 16640  01115C  0009               	tblrd		*+
 16641  01115E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 16642  011162  000A               	tblrd		*-
 16643  011164  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16644  011168  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 16645                           
 16646                           ;ring_buffer_LUT.c: 627: writeDoubleToEEPROM(0.0, max_Power_address);
 16647  01116C  0E00               	movlw	0
 16648  01116E  0101               	movlb	1	; () banked
 16649  011170  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 16650  011172  0E00               	movlw	0
 16651  011174  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 16652  011176  0E00               	movlw	0
 16653  011178  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 16654  01117A  0E00               	movlw	0
 16655  01117C  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 16656  01117E  0E17               	movlw	low _max_Power_address
 16657  011180  6EF6               	movwf	tblptrl,c
 16658  011182                     	if	1	;There is more than 1 active tblptr byte
 16659  011182  0ED5               	movlw	high _max_Power_address
 16660  011184  6EF7               	movwf	tblptrh,c
 16661  011186                     	endif
 16662  011186                     	if	1	;There are 3 active tblptr bytes
 16663  011186  0E00               	movlw	low (_max_Power_address shr (0+16))
 16664  011188  6EF8               	movwf	tblptru,c
 16665  01118A                     	endif
 16666  01118A  0009               	tblrd		*+
 16667  01118C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 16668  011190  000A               	tblrd		*-
 16669  011192  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16670  011196  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 16671                           
 16672                           ;ring_buffer_LUT.c: 628: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 16673  01119A  0E00               	movlw	0
 16674  01119C  0101               	movlb	1	; () banked
 16675  01119E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 16676  0111A0  0E00               	movlw	0
 16677  0111A2  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 16678  0111A4  0E00               	movlw	0
 16679  0111A6  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 16680  0111A8  0E00               	movlw	0
 16681  0111AA  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 16682  0111AC  0E15               	movlw	low _max_POS3P3_ADC_Result_address
 16683  0111AE  6EF6               	movwf	tblptrl,c
 16684  0111B0                     	if	1	;There is more than 1 active tblptr byte
 16685  0111B0  0ED5               	movlw	high _max_POS3P3_ADC_Result_address
 16686  0111B2  6EF7               	movwf	tblptrh,c
 16687  0111B4                     	endif
 16688  0111B4                     	if	1	;There are 3 active tblptr bytes
 16689  0111B4  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 16690  0111B6  6EF8               	movwf	tblptru,c
 16691  0111B8                     	endif
 16692  0111B8  0009               	tblrd		*+
 16693  0111BA  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 16694  0111BE  000A               	tblrd		*-
 16695  0111C0  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16696  0111C4  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 16697                           
 16698                           ;ring_buffer_LUT.c: 629: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 16699  0111C8  0E00               	movlw	0
 16700  0111CA  0101               	movlb	1	; () banked
 16701  0111CC  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 16702  0111CE  0E00               	movlw	0
 16703  0111D0  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 16704  0111D2  0E00               	movlw	0
 16705  0111D4  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 16706  0111D6  0E00               	movlw	0
 16707  0111D8  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 16708  0111DA  0E13               	movlw	low _max_POS12_ADC_Result_address
 16709  0111DC  6EF6               	movwf	tblptrl,c
 16710  0111DE                     	if	1	;There is more than 1 active tblptr byte
 16711  0111DE  0ED5               	movlw	high _max_POS12_ADC_Result_address
 16712  0111E0  6EF7               	movwf	tblptrh,c
 16713  0111E2                     	endif
 16714  0111E2                     	if	1	;There are 3 active tblptr bytes
 16715  0111E2  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 16716  0111E4  6EF8               	movwf	tblptru,c
 16717  0111E6                     	endif
 16718  0111E6  0009               	tblrd		*+
 16719  0111E8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 16720  0111EC  000A               	tblrd		*-
 16721  0111EE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16722  0111F2  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 16723                           
 16724                           ;ring_buffer_LUT.c: 630: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 16725  0111F6  0E00               	movlw	0
 16726  0111F8  0101               	movlb	1	; () banked
 16727  0111FA  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 16728  0111FC  0E00               	movlw	0
 16729  0111FE  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 16730  011200  0E00               	movlw	0
 16731  011202  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 16732  011204  0E00               	movlw	0
 16733  011206  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 16734  011208  0E11               	movlw	low _max_Temp_ADC_Result_address
 16735  01120A  6EF6               	movwf	tblptrl,c
 16736  01120C                     	if	1	;There is more than 1 active tblptr byte
 16737  01120C  0ED5               	movlw	high _max_Temp_ADC_Result_address
 16738  01120E  6EF7               	movwf	tblptrh,c
 16739  011210                     	endif
 16740  011210                     	if	1	;There are 3 active tblptr bytes
 16741  011210  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 16742  011212  6EF8               	movwf	tblptru,c
 16743  011214                     	endif
 16744  011214  0009               	tblrd		*+
 16745  011216  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 16746  01121A  000A               	tblrd		*-
 16747  01121C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16748  011220  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 16749                           
 16750                           ;ring_buffer_LUT.c: 631: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 16751  011224  0E00               	movlw	0
 16752  011226  0101               	movlb	1	; () banked
 16753  011228  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 16754  01122A  0E00               	movlw	0
 16755  01122C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 16756  01122E  0E00               	movlw	0
 16757  011230  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 16758  011232  0E00               	movlw	0
 16759  011234  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 16760  011236  0E0F               	movlw	low _max_FVR_ADC_Result_address
 16761  011238  6EF6               	movwf	tblptrl,c
 16762  01123A                     	if	1	;There is more than 1 active tblptr byte
 16763  01123A  0ED5               	movlw	high _max_FVR_ADC_Result_address
 16764  01123C  6EF7               	movwf	tblptrh,c
 16765  01123E                     	endif
 16766  01123E                     	if	1	;There are 3 active tblptr bytes
 16767  01123E  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 16768  011240  6EF8               	movwf	tblptru,c
 16769  011242                     	endif
 16770  011242  0009               	tblrd		*+
 16771  011244  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 16772  011248  000A               	tblrd		*-
 16773  01124A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16774  01124E  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 16775                           
 16776                           ;ring_buffer_LUT.c: 634: max_Irms = 0.0;
 16777  011252  0E00               	movlw	0
 16778  011254  0102               	movlb	2	; () banked
 16779  011256  6F14               	movwf	_max_Irms& (0+255),b	;volatile
 16780  011258  0E00               	movlw	0
 16781  01125A  6F15               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 16782  01125C  0E00               	movlw	0
 16783  01125E  6F16               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 16784  011260  0E00               	movlw	0
 16785  011262  6F17               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 16786                           
 16787                           ; BSR set to: 2
 16788                           ;ring_buffer_LUT.c: 635: max_Power = 0.0;
 16789  011264  0E00               	movlw	0
 16790  011266  6F10               	movwf	_max_Power& (0+255),b	;volatile
 16791  011268  0E00               	movlw	0
 16792  01126A  6F11               	movwf	(_max_Power+1)& (0+255),b	;volatile
 16793  01126C  0E00               	movlw	0
 16794  01126E  6F12               	movwf	(_max_Power+2)& (0+255),b	;volatile
 16795  011270  0E00               	movlw	0
 16796  011272  6F13               	movwf	(_max_Power+3)& (0+255),b	;volatile
 16797                           
 16798                           ; BSR set to: 2
 16799                           ;ring_buffer_LUT.c: 636: max_POS3P3_ADC_Result = 0.0;
 16800  011274  0E00               	movlw	0
 16801  011276  6F0C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 16802  011278  0E00               	movlw	0
 16803  01127A  6F0D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 16804  01127C  0E00               	movlw	0
 16805  01127E  6F0E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 16806  011280  0E00               	movlw	0
 16807  011282  6F0F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 16808                           
 16809                           ; BSR set to: 2
 16810                           ;ring_buffer_LUT.c: 637: max_POS12_ADC_Result = 0.0;
 16811  011284  0E00               	movlw	0
 16812  011286  6F08               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 16813  011288  0E00               	movlw	0
 16814  01128A  6F09               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 16815  01128C  0E00               	movlw	0
 16816  01128E  6F0A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 16817  011290  0E00               	movlw	0
 16818  011292  6F0B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 16819                           
 16820                           ; BSR set to: 2
 16821                           ;ring_buffer_LUT.c: 638: max_Temp_ADC_Result = 0.0;
 16822  011294  0E00               	movlw	0
 16823  011296  6F04               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 16824  011298  0E00               	movlw	0
 16825  01129A  6F05               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 16826  01129C  0E00               	movlw	0
 16827  01129E  6F06               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 16828  0112A0  0E00               	movlw	0
 16829  0112A2  6F07               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 16830                           
 16831                           ; BSR set to: 2
 16832                           ;ring_buffer_LUT.c: 639: max_FVR_ADC_Result = 0.0;
 16833  0112A4  0E00               	movlw	0
 16834  0112A6  6F00               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 16835  0112A8  0E00               	movlw	0
 16836  0112AA  6F01               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 16837  0112AC  0E00               	movlw	0
 16838  0112AE  6F02               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 16839  0112B0  0E00               	movlw	0
 16840  0112B2  6F03               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 16841                           
 16842                           ; BSR set to: 2
 16843                           ;ring_buffer_LUT.c: 641: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16844  0112B4  0E00               	movlw	0
 16845  0112B6  0101               	movlb	1	; () banked
 16846  0112B8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16847  0112BA  0E00               	movlw	0
 16848  0112BC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16849  0112BE  0E02               	movlw	2
 16850  0112C0  EC95  F0A2         	call	_terminal_textAttributes
 16851                           
 16852                           ;ring_buffer_LUT.c: 642: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 16853  0112C4  0E66               	movlw	low STR_139
 16854  0112C6  0101               	movlb	1	; () banked
 16855  0112C8  6F82               	movwf	printf@f& (0+255),b
 16856  0112CA  0EF5               	movlw	high STR_139
 16857  0112CC  6F83               	movwf	(printf@f+1)& (0+255),b
 16858  0112CE  ECCD  F08A         	call	_printf	;wreg free
 16859                           
 16860                           ;ring_buffer_LUT.c: 643: terminal_textAttributesReset();
 16861  0112D2  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16862                           
 16863                           ;ring_buffer_LUT.c: 645: }
 16864  0112D6  0012               	return	
 16865  0112D8                     l1527:
 16866                           
 16867                           ;ring_buffer_LUT.c: 649: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 16868  0112D8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16869  0112DC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16870  0112E0  0E85               	movlw	low STR_140
 16871  0112E2  0101               	movlb	1	; () banked
 16872  0112E4  6F19               	movwf	strcmp@s2& (0+255),b
 16873  0112E6  0EFB               	movlw	high STR_140
 16874  0112E8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16875  0112EA  EC1B  F0C7         	call	_strcmp	;wreg free
 16876  0112EE  0101               	movlb	1	; () banked
 16877  0112F0  5117               	movf	?_strcmp& (0+255),w,b
 16878  0112F2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16879  0112F4  A4D8               	btfss	status,2,c
 16880  0112F6  D011               	goto	l1529
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;ring_buffer_LUT.c: 651: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16884  0112F8  0E00               	movlw	0
 16885  0112FA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16886  0112FC  0E00               	movlw	0
 16887  0112FE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16888  011300  0E03               	movlw	3
 16889  011302  EC95  F0A2         	call	_terminal_textAttributes
 16890                           
 16891                           ;ring_buffer_LUT.c: 652: printf("List of supported Device Control Commands:\n\r"
 16892                           ;ring_buffer_LUT.c: 654: "   Reset: Clears the terminal and resets the micro\n\r"
 16893                           ;ring_buffer_LUT.c: 655: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 16894                           ;ring_buffer_LUT.c: 656: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 16895                           ;ring_buffer_LUT.c: 657: "   *IDN?: Returns device identification string\n\r"
 16896                           ;ring_buffer_LUT.c: 658: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 16897  011306  0EF7               	movlw	low STR_141
 16898  011308  0101               	movlb	1	; () banked
 16899  01130A  6F82               	movwf	printf@f& (0+255),b
 16900  01130C  0EE0               	movlw	high STR_141
 16901  01130E  6F83               	movwf	(printf@f+1)& (0+255),b
 16902  011310  ECCD  F08A         	call	_printf	;wreg free
 16903                           
 16904                           ;ring_buffer_LUT.c: 668: terminal_textAttributesReset();
 16905  011314  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16906                           
 16907                           ;ring_buffer_LUT.c: 670: }
 16908  011318  0012               	return	
 16909  01131A                     l1529:
 16910                           
 16911                           ;ring_buffer_LUT.c: 673: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 16912  01131A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16913  01131E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16914  011322  0ECB               	movlw	low STR_142
 16915  011324  0101               	movlb	1	; () banked
 16916  011326  6F19               	movwf	strcmp@s2& (0+255),b
 16917  011328  0EFA               	movlw	high STR_142
 16918  01132A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16919  01132C  EC1B  F0C7         	call	_strcmp	;wreg free
 16920  011330  0101               	movlb	1	; () banked
 16921  011332  5117               	movf	?_strcmp& (0+255),w,b
 16922  011334  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16923  011336  A4D8               	btfss	status,2,c
 16924  011338  D011               	goto	l1531
 16925                           
 16926                           ; BSR set to: 1
 16927                           ;ring_buffer_LUT.c: 675: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16928  01133A  0E00               	movlw	0
 16929  01133C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16930  01133E  0E00               	movlw	0
 16931  011340  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16932  011342  0E03               	movlw	3
 16933  011344  EC95  F0A2         	call	_terminal_textAttributes
 16934                           
 16935                           ;ring_buffer_LUT.c: 676: printf("List of supported Device Measurement Commands:\n\r"
 16936                           ;ring_buffer_LUT.c: 678: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 16937                           ;ring_buffer_LUT.c: 679: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 16938                           ;ring_buffer_LUT.c: 680: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 16939                           ;ring_buffer_LUT.c: 681: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 16940                           ;ring_buffer_LUT.c: 682: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 16941  011348  0E2D               	movlw	low STR_143
 16942  01134A  0101               	movlb	1	; () banked
 16943  01134C  6F82               	movwf	printf@f& (0+255),b
 16944  01134E  0EE7               	movlw	high STR_143
 16945  011350  6F83               	movwf	(printf@f+1)& (0+255),b
 16946  011352  ECCD  F08A         	call	_printf	;wreg free
 16947                           
 16948                           ;ring_buffer_LUT.c: 689: terminal_textAttributesReset();
 16949  011356  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16950                           
 16951                           ;ring_buffer_LUT.c: 691: }
 16952  01135A  0012               	return	
 16953  01135C                     l1531:
 16954                           
 16955                           ;ring_buffer_LUT.c: 694: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 16956  01135C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16957  011360  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16958  011364  0EA9               	movlw	low STR_144
 16959  011366  0101               	movlb	1	; () banked
 16960  011368  6F19               	movwf	strcmp@s2& (0+255),b
 16961  01136A  0EFA               	movlw	high STR_144
 16962  01136C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16963  01136E  EC1B  F0C7         	call	_strcmp	;wreg free
 16964  011372  0101               	movlb	1	; () banked
 16965  011374  5117               	movf	?_strcmp& (0+255),w,b
 16966  011376  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16967  011378  A4D8               	btfss	status,2,c
 16968  01137A  D011               	goto	l1533
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;ring_buffer_LUT.c: 696: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16972  01137C  0E00               	movlw	0
 16973  01137E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16974  011380  0E00               	movlw	0
 16975  011382  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16976  011384  0E03               	movlw	3
 16977  011386  EC95  F0A2         	call	_terminal_textAttributes
 16978                           
 16979                           ;ring_buffer_LUT.c: 697: printf("List of supported Primary Measurement Commands:\n\r"
 16980                           ;ring_buffer_LUT.c: 699: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 16981                           ;ring_buffer_LUT.c: 700: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 16982                           ;ring_buffer_LUT.c: 701: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 16983                           ;ring_buffer_LUT.c: 702: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 16984  01138A  0E41               	movlw	low STR_145
 16985  01138C  0101               	movlb	1	; () banked
 16986  01138E  6F82               	movwf	printf@f& (0+255),b
 16987  011390  0EE4               	movlw	high STR_145
 16988  011392  6F83               	movwf	(printf@f+1)& (0+255),b
 16989  011394  ECCD  F08A         	call	_printf	;wreg free
 16990                           
 16991                           ;ring_buffer_LUT.c: 710: terminal_textAttributesReset();
 16992  011398  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 16993                           
 16994                           ;ring_buffer_LUT.c: 712: }
 16995  01139C  0012               	return	
 16996  01139E                     l1533:
 16997                           
 16998                           ;ring_buffer_LUT.c: 715: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 16999  01139E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 17000  0113A2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17001  0113A6  0EA2               	movlw	low STR_146
 17002  0113A8  0101               	movlb	1	; () banked
 17003  0113AA  6F19               	movwf	strcmp@s2& (0+255),b
 17004  0113AC  0EFB               	movlw	high STR_146
 17005  0113AE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17006  0113B0  EC1B  F0C7         	call	_strcmp	;wreg free
 17007  0113B4  0101               	movlb	1	; () banked
 17008  0113B6  5117               	movf	?_strcmp& (0+255),w,b
 17009  0113B8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17010  0113BA  A4D8               	btfss	status,2,c
 17011  0113BC  D011               	goto	l1535
 17012                           
 17013                           ; BSR set to: 1
 17014                           ;ring_buffer_LUT.c: 717: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17015  0113BE  0E00               	movlw	0
 17016  0113C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17017  0113C2  0E00               	movlw	0
 17018  0113C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17019  0113C6  0E03               	movlw	3
 17020  0113C8  EC95  F0A2         	call	_terminal_textAttributes
 17021                           
 17022                           ;ring_buffer_LUT.c: 718: printf("List of supported Output Control Commands:\n\r"
 17023                           ;ring_buffer_LUT.c: 720: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 17024                           ;ring_buffer_LUT.c: 721: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 17025                           ;ring_buffer_LUT.c: 722: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 17026                           ;ring_buffer_LUT.c: 723: "   Disable Load: Disables the output TRIAC completely\n\r"
 17027                           ;ring_buffer_LUT.c: 724: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 17028  0113CC  0EFD               	movlw	low STR_147
 17029  0113CE  0101               	movlb	1	; () banked
 17030  0113D0  6F82               	movwf	printf@f& (0+255),b
 17031  0113D2  0EE9               	movlw	high STR_147
 17032  0113D4  6F83               	movwf	(printf@f+1)& (0+255),b
 17033  0113D6  ECCD  F08A         	call	_printf	;wreg free
 17034                           
 17035                           ;ring_buffer_LUT.c: 729: terminal_textAttributesReset();
 17036  0113DA  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 17037                           
 17038                           ;ring_buffer_LUT.c: 731: }
 17039  0113DE  0012               	return	
 17040  0113E0                     l1535:
 17041                           
 17042                           ;ring_buffer_LUT.c: 734: else if((0 == strcmp(line, "Help All"))) {
 17043  0113E0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 17044  0113E4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17045  0113E8  0E7D               	movlw	low STR_148
 17046  0113EA  0101               	movlb	1	; () banked
 17047  0113EC  6F19               	movwf	strcmp@s2& (0+255),b
 17048  0113EE  0EFF               	movlw	high STR_148
 17049  0113F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17050  0113F2  EC1B  F0C7         	call	_strcmp	;wreg free
 17051  0113F6  0101               	movlb	1	; () banked
 17052  0113F8  5117               	movf	?_strcmp& (0+255),w,b
 17053  0113FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17054  0113FC  A4D8               	btfss	status,2,c
 17055  0113FE  D011               	goto	l1537
 17056                           
 17057                           ; BSR set to: 1
 17058                           ;ring_buffer_LUT.c: 736: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17059  011400  0E00               	movlw	0
 17060  011402  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17061  011404  0E00               	movlw	0
 17062  011406  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17063  011408  0E03               	movlw	3
 17064  01140A  EC95  F0A2         	call	_terminal_textAttributes
 17065                           
 17066                           ;ring_buffer_LUT.c: 737: printf("List of all supported commands:\n\r"
 17067                           ;ring_buffer_LUT.c: 739: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 17068                           ;ring_buffer_LUT.c: 740: "   Reset: Clears the terminal and resets the micro\n\r"
 17069                           ;ring_buffer_LUT.c: 741: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 17070                           ;ring_buffer_LUT.c: 742: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 17071                           ;ring_buffer_LUT.c: 743: "   *IDN?: Returns device identification string\n\r"
 17072  01140E  0E6D               	movlw	low STR_149
 17073  011410  0101               	movlb	1	; () banked
 17074  011412  6F82               	movwf	printf@f& (0+255),b
 17075  011414  0ED5               	movlw	high STR_149
 17076  011416  6F83               	movwf	(printf@f+1)& (0+255),b
 17077  011418  ECCD  F08A         	call	_printf	;wreg free
 17078                           
 17079                           ;ring_buffer_LUT.c: 786: terminal_textAttributesReset();
 17080  01141C  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 17081                           
 17082                           ;ring_buffer_LUT.c: 788: }
 17083  011420  0012               	return	
 17084  011422                     l1537:
 17085                           
 17086                           ;ring_buffer_LUT.c: 792: else if((0 == strcmp(line, "Help"))) {
 17087  011422  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 17088  011426  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17089  01142A  0EAB               	movlw	low STR_150
 17090  01142C  0101               	movlb	1	; () banked
 17091  01142E  6F19               	movwf	strcmp@s2& (0+255),b
 17092  011430  0EFF               	movlw	high STR_150
 17093  011432  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17094  011434  EC1B  F0C7         	call	_strcmp	;wreg free
 17095  011438  0101               	movlb	1	; () banked
 17096  01143A  5117               	movf	?_strcmp& (0+255),w,b
 17097  01143C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17098  01143E  A4D8               	btfss	status,2,c
 17099  011440  D050               	goto	l1539
 17100                           
 17101                           ; BSR set to: 1
 17102                           ;ring_buffer_LUT.c: 794: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17103  011442  0E00               	movlw	0
 17104  011444  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17105  011446  0E00               	movlw	0
 17106  011448  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17107  01144A  0E03               	movlw	3
 17108  01144C  EC95  F0A2         	call	_terminal_textAttributes
 17109                           
 17110                           ;ring_buffer_LUT.c: 795: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 17111                           ;ring_buffer_LUT.c: 796: "Try 'Help <command set>'\n\r\n\r"
 17112                           ;ring_buffer_LUT.c: 798: "Supported Command Sets:\n\r"
 17113                           ;ring_buffer_LUT.c: 799: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 17114                           ;ring_buffer_LUT.c: 800: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 17115                           ;ring_buffer_LUT.c: 801: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 17116  011450  0EE9               	movlw	low STR_151
 17117  011452  0101               	movlb	1	; () banked
 17118  011454  6F82               	movwf	printf@f& (0+255),b
 17119  011456  0EEB               	movlw	high STR_151
 17120  011458  6F83               	movwf	(printf@f+1)& (0+255),b
 17121  01145A  ECCD  F08A         	call	_printf	;wreg free
 17122                           
 17123                           ;ring_buffer_LUT.c: 808: terminal_printNewline();
 17124  01145E  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 17125                           
 17126                           ;ring_buffer_LUT.c: 809: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 17127  011462  0E2F               	movlw	low STR_152
 17128  011464  0101               	movlb	1	; () banked
 17129  011466  6F82               	movwf	printf@f& (0+255),b
 17130  011468  0EF5               	movlw	high STR_152
 17131  01146A  6F83               	movwf	(printf@f+1)& (0+255),b
 17132  01146C  ECCD  F08A         	call	_printf	;wreg free
 17133                           
 17134                           ;ring_buffer_LUT.c: 811: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17135  011470  0E00               	movlw	0
 17136  011472  0101               	movlb	1	; () banked
 17137  011474  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17138  011476  0E00               	movlw	0
 17139  011478  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17140  01147A  0E02               	movlw	2
 17141  01147C  EC95  F0A2         	call	_terminal_textAttributes
 17142                           
 17143                           ;ring_buffer_LUT.c: 812: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 17144  011480  0ECF               	movlw	low STR_153
 17145  011482  0101               	movlb	1	; () banked
 17146  011484  6F82               	movwf	printf@f& (0+255),b
 17147  011486  0EF3               	movlw	high STR_153
 17148  011488  6F83               	movwf	(printf@f+1)& (0+255),b
 17149  01148A  ECCD  F08A         	call	_printf	;wreg free
 17150                           
 17151                           ;ring_buffer_LUT.c: 813: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17152  01148E  0E00               	movlw	0
 17153  011490  0101               	movlb	1	; () banked
 17154  011492  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17155  011494  0E00               	movlw	0
 17156  011496  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17157  011498  0E06               	movlw	6
 17158  01149A  EC95  F0A2         	call	_terminal_textAttributes
 17159                           
 17160                           ;ring_buffer_LUT.c: 814: printf("Measurement responses appear in cyan\n\r");
 17161  01149E  0E65               	movlw	low STR_154
 17162  0114A0  0101               	movlb	1	; () banked
 17163  0114A2  6F82               	movwf	printf@f& (0+255),b
 17164  0114A4  0EF9               	movlw	high STR_154
 17165  0114A6  6F83               	movwf	(printf@f+1)& (0+255),b
 17166  0114A8  ECCD  F08A         	call	_printf	;wreg free
 17167                           
 17168                           ;ring_buffer_LUT.c: 815: terminal_textAttributes(RED, BLACK, NORMAL);
 17169  0114AC  0E00               	movlw	0
 17170  0114AE  0101               	movlb	1	; () banked
 17171  0114B0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17172  0114B2  0E00               	movlw	0
 17173  0114B4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17174  0114B6  0E01               	movlw	1
 17175  0114B8  EC95  F0A2         	call	_terminal_textAttributes
 17176                           
 17177                           ;ring_buffer_LUT.c: 816: printf("Errors and negative responses appear in red\n\r");
 17178  0114BC  0E08               	movlw	low STR_155
 17179  0114BE  0101               	movlb	1	; () banked
 17180  0114C0  6F82               	movwf	printf@f& (0+255),b
 17181  0114C2  0EF8               	movlw	high STR_155
 17182  0114C4  6F83               	movwf	(printf@f+1)& (0+255),b
 17183  0114C6  ECCD  F08A         	call	_printf	;wreg free
 17184                           
 17185                           ;ring_buffer_LUT.c: 817: terminal_textAttributesReset();
 17186  0114CA  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 17187                           
 17188                           ;ring_buffer_LUT.c: 818: printf("User input appears in white\n\r");
 17189  0114CE  0E4A               	movlw	low STR_156
 17190  0114D0  0101               	movlb	1	; () banked
 17191  0114D2  6F82               	movwf	printf@f& (0+255),b
 17192  0114D4  0EFB               	movlw	high STR_156
 17193  0114D6  6F83               	movwf	(printf@f+1)& (0+255),b
 17194  0114D8  ECCD  F08A         	call	_printf	;wreg free
 17195                           
 17196                           ;ring_buffer_LUT.c: 821: terminal_printNewline();
 17197  0114DC  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 17198                           
 17199                           ;ring_buffer_LUT.c: 823: }
 17200  0114E0  0012               	return	
 17201  0114E2                     l1539:
 17202                           
 17203                           ;ring_buffer_LUT.c: 826: else if ((0 == strcmp(line, "Easter Egg"))) {
 17204  0114E2  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 17205  0114E6  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17206  0114EA  0E5E               	movlw	low STR_157
 17207  0114EC  0101               	movlb	1	; () banked
 17208  0114EE  6F19               	movwf	strcmp@s2& (0+255),b
 17209  0114F0  0EFF               	movlw	high STR_157
 17210  0114F2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17211  0114F4  EC1B  F0C7         	call	_strcmp	;wreg free
 17212  0114F8  0101               	movlb	1	; () banked
 17213  0114FA  5117               	movf	?_strcmp& (0+255),w,b
 17214  0114FC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17215  0114FE  A4D8               	btfss	status,2,c
 17216  011500  0012               	return	
 17217                           
 17218                           ; BSR set to: 1
 17219                           ;ring_buffer_LUT.c: 828: terminal_printNewline();
 17220  011502  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 17221                           
 17222                           ;ring_buffer_LUT.c: 829: terminal_textAttributes(RED, BLACK, NORMAL);
 17223  011506  0E00               	movlw	0
 17224  011508  0101               	movlb	1	; () banked
 17225  01150A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17226  01150C  0E00               	movlw	0
 17227  01150E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17228  011510  0E01               	movlw	1
 17229  011512  EC95  F0A2         	call	_terminal_textAttributes
 17230                           
 17231                           ;ring_buffer_LUT.c: 830: printf(
 17232                           ;ring_buffer_LUT.c: 831: "    _   ___   ___                      __  __     _           
      +                                         _   ___  _      \n\r"
 17233                           ;ring_buffer_LUT.c: 832: "   /_\\ / __| | _ \\_____ __ _____ _ _  |  \\/  |___| |_ ___ _
      +                           _   __ _ _ _  __| | |   \\(_)_ __  _ __  ___ _ _ \n\r"
 17234                           ;ring_buffer_LUT.c: 833: "  / _ \\ (__  |  _/ _ \\ V  V / -_) '_| | |\\/| / -_)  _/ -_) 
      +                          '_| / _` | ' \\/ _` | | |) | | '  \\| '  \\/ -_) '_|\n\r"
 17235                           ;ring_buffer_LUT.c: 834: " /_/ \\_\\___| |_| \\___/\\_/\\_/\\___|_|   |_|  |_\\___|\\__\
      +                          \___|_|   \\__,_|_||_\\__,_| |___/|_|_|_|_|_|_|_\\___|_|  \n\r"
 17236  011516  0EBF               	movlw	low STR_158
 17237  011518  0101               	movlb	1	; () banked
 17238  01151A  6F82               	movwf	printf@f& (0+255),b
 17239  01151C  0EED               	movlw	high STR_158
 17240  01151E  6F83               	movwf	(printf@f+1)& (0+255),b
 17241  011520  ECCD  F08A         	call	_printf	;wreg free
 17242                           
 17243                           ;ring_buffer_LUT.c: 839: terminal_printNewline();
 17244  011524  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 17245                           
 17246                           ;ring_buffer_LUT.c: 840: terminal_textAttributes(YELLOW, BLUE, NORMAL);
 17247  011528  0E04               	movlw	4
 17248  01152A  0101               	movlb	1	; () banked
 17249  01152C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17250  01152E  0E00               	movlw	0
 17251  011530  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17252  011532  0E03               	movlw	3
 17253  011534  EC95  F0A2         	call	_terminal_textAttributes
 17254                           
 17255                           ;ring_buffer_LUT.c: 841: printf("Marquette University EECE\n\r");
 17256  011538  0EBF               	movlw	low STR_159
 17257  01153A  0101               	movlb	1	; () banked
 17258  01153C  6F82               	movwf	printf@f& (0+255),b
 17259  01153E  0EFB               	movlw	high STR_159
 17260  011540  6F83               	movwf	(printf@f+1)& (0+255),b
 17261  011542  ECCD  F08A         	call	_printf	;wreg free
 17262                           
 17263                           ;ring_buffer_LUT.c: 842: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17264  011546  0E00               	movlw	0
 17265  011548  0101               	movlb	1	; () banked
 17266  01154A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17267  01154C  0E00               	movlw	0
 17268  01154E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17269  011550  0E02               	movlw	2
 17270  011552  EC95  F0A2         	call	_terminal_textAttributes
 17271                           
 17272                           ;ring_buffer_LUT.c: 843: printf("ELEN 3035 Final Project\n\r");
 17273  011556  0EEE               	movlw	low (STR_52+21)
 17274  011558  0101               	movlb	1	; () banked
 17275  01155A  6F82               	movwf	printf@f& (0+255),b
 17276  01155C  0EF7               	movlw	high (STR_52+21)
 17277  01155E  6F83               	movwf	(printf@f+1)& (0+255),b
 17278  011560  ECCD  F08A         	call	_printf	;wreg free
 17279                           
 17280                           ;ring_buffer_LUT.c: 844: printf("Drew Maatman and Gabe Thalji\n\r");
 17281  011564  0E2B               	movlw	low STR_161
 17282  011566  0101               	movlb	1	; () banked
 17283  011568  6F82               	movwf	printf@f& (0+255),b
 17284  01156A  0EFB               	movlw	high STR_161
 17285  01156C  6F83               	movwf	(printf@f+1)& (0+255),b
 17286  01156E  ECCD  F08A         	call	_printf	;wreg free
 17287                           
 17288                           ;ring_buffer_LUT.c: 845: terminal_textAttributes(YELLOW, BLACK, BOLD);
 17289  011572  0E00               	movlw	0
 17290  011574  0101               	movlb	1	; () banked
 17291  011576  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17292  011578  0E01               	movlw	1
 17293  01157A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17294  01157C  0E03               	movlw	3
 17295  01157E  EC95  F0A2         	call	_terminal_textAttributes
 17296                           
 17297                           ;ring_buffer_LUT.c: 846: printf("PSOCs SUCK\n\r");
 17298  011582  0EE4               	movlw	low STR_162
 17299  011584  0101               	movlb	1	; () banked
 17300  011586  6F82               	movwf	printf@f& (0+255),b
 17301  011588  0EFE               	movlw	high STR_162
 17302  01158A  6F83               	movwf	(printf@f+1)& (0+255),b
 17303  01158C  ECCD  F08A         	call	_printf	;wreg free
 17304                           
 17305                           ;ring_buffer_LUT.c: 847: terminal_textAttributesReset();
 17306  011590  EC5B  F0CC         	call	_terminal_textAttributesReset	;wreg free
 17307                           
 17308                           ;ring_buffer_LUT.c: 848: terminal_printNewline();
 17309  011594  EC75  F0CC         	call	_terminal_printNewline	;wreg free
 17310  011598  0012               	return	
 17311  01159A                     __end_of_ringBufferLUT:
 17312                           	opt stack 0
 17313                           tblptru	equ	0xFF8
 17314                           tblptrh	equ	0xFF7
 17315                           tblptrl	equ	0xFF6
 17316                           tablat	equ	0xFF5
 17317                           intcon	equ	0xFF2
 17318                           postinc0	equ	0xFEE
 17319                           wreg	equ	0xFE8
 17320                           indf1	equ	0xFE7
 17321                           postdec1	equ	0xFE5
 17322                           fsr1h	equ	0xFE2
 17323                           fsr1l	equ	0xFE1
 17324                           indf2	equ	0xFDF
 17325                           postinc2	equ	0xFDE
 17326                           fsr2h	equ	0xFDA
 17327                           fsr2l	equ	0xFD9
 17328                           status	equ	0xFD8
 17329                           
 17330 ;; *************** function _terminal_textAttributesReset *****************
 17331 ;; Defined at:
 17332 ;;		line 223 in file "ring_buffer_interface.c"
 17333 ;; Parameters:    Size  Location     Type
 17334 ;;		None
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;		None
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  1    wreg      void 
 17339 ;; Registers used:
 17340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/0
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17350 ;;Total ram usage:        0 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:   17
 17353 ;; This function calls:
 17354 ;;		_terminal_textAttributes
 17355 ;; This function is called by:
 17356 ;;		_main
 17357 ;;		_ringBufferLUT
 17358 ;; This function uses a non-reentrant model
 17359 ;;
 17360                           
 17361                           	psect	text4
 17362  0198B6                     __ptext4:
 17363                           	opt stack 0
 17364  0198B6                     _terminal_textAttributesReset:
 17365                           	opt stack 13
 17366                           
 17367                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 17368                           
 17369                           ;incstack = 0
 17370  0198B6  0E00               	movlw	0
 17371  0198B8  0101               	movlb	1	; () banked
 17372  0198BA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 17373  0198BC  0E00               	movlw	0
 17374  0198BE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17375  0198C0  0E07               	movlw	7
 17376  0198C2  EC95  F0A2         	call	_terminal_textAttributes
 17377  0198C6  0012               	return		;funcret
 17378  0198C8                     __end_of_terminal_textAttributesReset:
 17379                           	opt stack 0
 17380                           tblptru	equ	0xFF8
 17381                           tblptrh	equ	0xFF7
 17382                           tblptrl	equ	0xFF6
 17383                           tablat	equ	0xFF5
 17384                           intcon	equ	0xFF2
 17385                           postinc0	equ	0xFEE
 17386                           wreg	equ	0xFE8
 17387                           indf1	equ	0xFE7
 17388                           postdec1	equ	0xFE5
 17389                           fsr1h	equ	0xFE2
 17390                           fsr1l	equ	0xFE1
 17391                           indf2	equ	0xFDF
 17392                           postinc2	equ	0xFDE
 17393                           fsr2h	equ	0xFDA
 17394                           fsr2l	equ	0xFD9
 17395                           status	equ	0xFD8
 17396                           
 17397 ;; *************** function _terminal_textAttributes *****************
 17398 ;; Defined at:
 17399 ;;		line 115 in file "ring_buffer_interface.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  foreground_c    1    wreg     enum E17999
 17402 ;;  background_c    1  178[BANK1 ] enum E17999
 17403 ;;  input_attrib    1  179[BANK1 ] enum E17991
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;  foreground_c    1    0[BANK2 ] enum E17999
 17406 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  1    wreg      void 
 17409 ;; Registers used:
 17410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17416 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17417 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17419 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 17420 ;;Total ram usage:       18 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:   16
 17423 ;; This function calls:
 17424 ;;		_printf
 17425 ;;		_strcat
 17426 ;;		_strncpy
 17427 ;; This function is called by:
 17428 ;;		_terminal_textAttributesReset
 17429 ;;		_ringBufferLUT
 17430 ;; This function uses a non-reentrant model
 17431 ;;
 17432                           
 17433                           	psect	text5
 17434  01452A                     __ptext5:
 17435                           	opt stack 0
 17436  01452A                     _terminal_textAttributes:
 17437                           	opt stack 13
 17438                           
 17439                           ;incstack = 0
 17440                           ;terminal_textAttributes@foreground_color stored from wreg
 17441  01452A  0102               	movlb	2	; () banked
 17442  01452C  6F8C               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 17443                           
 17444                           ;ring_buffer_interface.c: 119: char output_buff[15];
 17445                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 17446  01452E  0E8D               	movlw	low terminal_textAttributes@output_buff
 17447  014530  0101               	movlb	1	; () banked
 17448  014532  6F17               	movwf	strncpy@to& (0+255),b
 17449  014534  0E02               	movlw	high terminal_textAttributes@output_buff
 17450  014536  6F18               	movwf	(strncpy@to+1)& (0+255),b
 17451  014538  0EF6               	movlw	low STR_11
 17452  01453A  6F19               	movwf	strncpy@from& (0+255),b
 17453  01453C  0EFF               	movlw	high STR_11
 17454  01453E  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 17455  014540  0E00               	movlw	0
 17456  014542  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 17457  014544  0E0F               	movlw	15
 17458  014546  6F1B               	movwf	strncpy@size& (0+255),b
 17459  014548  EC78  F0C5         	call	_strncpy	;wreg free
 17460                           
 17461                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 17462  01454C  D054               	goto	l1273
 17463  01454E                     
 17464                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 17465  01454E  0E8D               	movlw	low terminal_textAttributes@output_buff
 17466  014550  0101               	movlb	1	; () banked
 17467  014552  6F17               	movwf	strcat@to& (0+255),b
 17468  014554  0E02               	movlw	high terminal_textAttributes@output_buff
 17469  014556  6F18               	movwf	(strcat@to+1)& (0+255),b
 17470  014558  0ECA               	movlw	low (STR_20+1)
 17471  01455A  6F19               	movwf	strcat@from& (0+255),b
 17472  01455C  0EFF               	movlw	high (STR_20+1)
 17473  01455E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17474  014560  ECBA  F0C7         	call	_strcat	;wreg free
 17475                           
 17476                           ;ring_buffer_interface.c: 127: break;
 17477  014564  D05D               	goto	l1275
 17478  014566                     
 17479                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 17480  014566  0E8D               	movlw	low terminal_textAttributes@output_buff
 17481  014568  0101               	movlb	1	; () banked
 17482  01456A  6F17               	movwf	strcat@to& (0+255),b
 17483  01456C  0E02               	movlw	high terminal_textAttributes@output_buff
 17484  01456E  6F18               	movwf	(strcat@to+1)& (0+255),b
 17485  014570  0EA0               	movlw	low (STR_67+20)
 17486  014572  6F19               	movwf	strcat@from& (0+255),b
 17487  014574  0EFC               	movlw	high (STR_67+20)
 17488  014576  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17489  014578  ECBA  F0C7         	call	_strcat	;wreg free
 17490                           
 17491                           ;ring_buffer_interface.c: 130: break;
 17492  01457C  D051               	goto	l1275
 17493  01457E                     
 17494                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 17495  01457E  0E8D               	movlw	low terminal_textAttributes@output_buff
 17496  014580  0101               	movlb	1	; () banked
 17497  014582  6F17               	movwf	strcat@to& (0+255),b
 17498  014584  0E02               	movlw	high terminal_textAttributes@output_buff
 17499  014586  6F18               	movwf	(strcat@to+1)& (0+255),b
 17500  014588  0EDF               	movlw	low (STR_24+1)
 17501  01458A  6F19               	movwf	strcat@from& (0+255),b
 17502  01458C  0EFF               	movlw	high (STR_24+1)
 17503  01458E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17504  014590  ECBA  F0C7         	call	_strcat	;wreg free
 17505                           
 17506                           ;ring_buffer_interface.c: 133: break;
 17507  014594  D045               	goto	l1275
 17508  014596                     
 17509                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 17510  014596  0E8D               	movlw	low terminal_textAttributes@output_buff
 17511  014598  0101               	movlb	1	; () banked
 17512  01459A  6F17               	movwf	strcat@to& (0+255),b
 17513  01459C  0E02               	movlw	high terminal_textAttributes@output_buff
 17514  01459E  6F18               	movwf	(strcat@to+1)& (0+255),b
 17515  0145A0  0EE5               	movlw	low (STR_25+1)
 17516  0145A2  6F19               	movwf	strcat@from& (0+255),b
 17517  0145A4  0EFF               	movlw	high (STR_25+1)
 17518  0145A6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17519  0145A8  ECBA  F0C7         	call	_strcat	;wreg free
 17520                           
 17521                           ;ring_buffer_interface.c: 136: break;
 17522  0145AC  D039               	goto	l1275
 17523  0145AE                     
 17524                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 17525  0145AE  0E8D               	movlw	low terminal_textAttributes@output_buff
 17526  0145B0  0101               	movlb	1	; () banked
 17527  0145B2  6F17               	movwf	strcat@to& (0+255),b
 17528  0145B4  0E02               	movlw	high terminal_textAttributes@output_buff
 17529  0145B6  6F18               	movwf	(strcat@to+1)& (0+255),b
 17530  0145B8  0EF1               	movlw	low (STR_27+1)
 17531  0145BA  6F19               	movwf	strcat@from& (0+255),b
 17532  0145BC  0EFF               	movlw	high (STR_27+1)
 17533  0145BE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17534  0145C0  ECBA  F0C7         	call	_strcat	;wreg free
 17535                           
 17536                           ;ring_buffer_interface.c: 139: break;
 17537  0145C4  D02D               	goto	l1275
 17538  0145C6                     
 17539                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 17540  0145C6  0E8D               	movlw	low terminal_textAttributes@output_buff
 17541  0145C8  0101               	movlb	1	; () banked
 17542  0145CA  6F17               	movwf	strcat@to& (0+255),b
 17543  0145CC  0E02               	movlw	high terminal_textAttributes@output_buff
 17544  0145CE  6F18               	movwf	(strcat@to+1)& (0+255),b
 17545  0145D0  0EF9               	movlw	low STR_17
 17546  0145D2  6F19               	movwf	strcat@from& (0+255),b
 17547  0145D4  0EFF               	movlw	high STR_17
 17548  0145D6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17549  0145D8  ECBA  F0C7         	call	_strcat	;wreg free
 17550                           
 17551                           ;ring_buffer_interface.c: 142: break;
 17552  0145DC  D021               	goto	l1275
 17553  0145DE                     
 17554                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 17555  0145DE  0E8D               	movlw	low terminal_textAttributes@output_buff
 17556  0145E0  0101               	movlb	1	; () banked
 17557  0145E2  6F17               	movwf	strcat@to& (0+255),b
 17558  0145E4  0E02               	movlw	high terminal_textAttributes@output_buff
 17559  0145E6  6F18               	movwf	(strcat@to+1)& (0+255),b
 17560  0145E8  0ECA               	movlw	low (STR_20+1)
 17561  0145EA  6F19               	movwf	strcat@from& (0+255),b
 17562  0145EC  0EFF               	movlw	high (STR_20+1)
 17563  0145EE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17564  0145F0  ECBA  F0C7         	call	_strcat	;wreg free
 17565                           
 17566                           ;ring_buffer_interface.c: 147: }
 17567                           
 17568                           ;ring_buffer_interface.c: 146: break;
 17569  0145F4  D015               	goto	l1275
 17570  0145F6                     l1273:
 17571  0145F6  0101               	movlb	1	; () banked
 17572  0145F8  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 17573                           
 17574                           ; Switch size 1, requested type "space"
 17575                           ; Number of cases is 6, Range of values is 0 to 5
 17576                           ; switch strategies available:
 17577                           ; Name         Instructions Cycles
 17578                           ; simple_byte           19    10 (average)
 17579                           ;	Chosen strategy is simple_byte
 17580  0145FA  0A00               	xorlw	0	; case 0
 17581  0145FC  B4D8               	btfsc	status,2,c
 17582  0145FE  D7A7               	goto	l1274
 17583  014600  0A01               	xorlw	1	; case 1
 17584  014602  B4D8               	btfsc	status,2,c
 17585  014604  D7B0               	goto	l1276
 17586  014606  0A03               	xorlw	3	; case 2
 17587  014608  B4D8               	btfsc	status,2,c
 17588  01460A  D7B9               	goto	l1277
 17589  01460C  0A01               	xorlw	1	; case 3
 17590  01460E  B4D8               	btfsc	status,2,c
 17591  014610  D7C2               	goto	l1278
 17592  014612  0A07               	xorlw	7	; case 4
 17593  014614  B4D8               	btfsc	status,2,c
 17594  014616  D7CB               	goto	l1279
 17595  014618  0A01               	xorlw	1	; case 5
 17596  01461A  B4D8               	btfsc	status,2,c
 17597  01461C  D7D4               	goto	l1280
 17598  01461E  D7DF               	goto	l1281
 17599  014620                     l1275:
 17600                           
 17601                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 17602                           
 17603                           ; BSR set to: 1
 17604  014620  0E8D               	movlw	low terminal_textAttributes@output_buff
 17605  014622  0101               	movlb	1	; () banked
 17606  014624  6F17               	movwf	strcat@to& (0+255),b
 17607  014626  0E02               	movlw	high terminal_textAttributes@output_buff
 17608  014628  6F18               	movwf	(strcat@to+1)& (0+255),b
 17609  01462A  0EFB               	movlw	low STR_19
 17610  01462C  6F19               	movwf	strcat@from& (0+255),b
 17611  01462E  0EFF               	movlw	high STR_19
 17612  014630  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17613  014632  ECBA  F0C7         	call	_strcat	;wreg free
 17614                           
 17615                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 17616  014636  D06C               	goto	l1282
 17617  014638                     
 17618                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 17619  014638  0E8D               	movlw	low terminal_textAttributes@output_buff
 17620  01463A  0101               	movlb	1	; () banked
 17621  01463C  6F17               	movwf	strcat@to& (0+255),b
 17622  01463E  0E02               	movlw	high terminal_textAttributes@output_buff
 17623  014640  6F18               	movwf	(strcat@to+1)& (0+255),b
 17624  014642  0EC9               	movlw	low STR_20
 17625  014644  6F19               	movwf	strcat@from& (0+255),b
 17626  014646  0EFF               	movlw	high STR_20
 17627  014648  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17628  01464A  ECBA  F0C7         	call	_strcat	;wreg free
 17629                           
 17630                           ;ring_buffer_interface.c: 155: break;
 17631  01464E  D07B               	goto	l1284
 17632  014650                     
 17633                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 17634  014650  0E8D               	movlw	low terminal_textAttributes@output_buff
 17635  014652  0101               	movlb	1	; () banked
 17636  014654  6F17               	movwf	strcat@to& (0+255),b
 17637  014656  0E02               	movlw	high terminal_textAttributes@output_buff
 17638  014658  6F18               	movwf	(strcat@to+1)& (0+255),b
 17639  01465A  0ECC               	movlw	low STR_21
 17640  01465C  6F19               	movwf	strcat@from& (0+255),b
 17641  01465E  0EFF               	movlw	high STR_21
 17642  014660  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17643  014662  ECBA  F0C7         	call	_strcat	;wreg free
 17644                           
 17645                           ;ring_buffer_interface.c: 158: break;
 17646  014666  D06F               	goto	l1284
 17647  014668                     
 17648                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 17649  014668  0E8D               	movlw	low terminal_textAttributes@output_buff
 17650  01466A  0101               	movlb	1	; () banked
 17651  01466C  6F17               	movwf	strcat@to& (0+255),b
 17652  01466E  0E02               	movlw	high terminal_textAttributes@output_buff
 17653  014670  6F18               	movwf	(strcat@to+1)& (0+255),b
 17654  014672  0ED2               	movlw	low STR_22
 17655  014674  6F19               	movwf	strcat@from& (0+255),b
 17656  014676  0EFF               	movlw	high STR_22
 17657  014678  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17658  01467A  ECBA  F0C7         	call	_strcat	;wreg free
 17659                           
 17660                           ;ring_buffer_interface.c: 161: break;
 17661  01467E  D063               	goto	l1284
 17662  014680                     
 17663                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 17664  014680  0E8D               	movlw	low terminal_textAttributes@output_buff
 17665  014682  0101               	movlb	1	; () banked
 17666  014684  6F17               	movwf	strcat@to& (0+255),b
 17667  014686  0E02               	movlw	high terminal_textAttributes@output_buff
 17668  014688  6F18               	movwf	(strcat@to+1)& (0+255),b
 17669  01468A  0ED8               	movlw	low STR_23
 17670  01468C  6F19               	movwf	strcat@from& (0+255),b
 17671  01468E  0EFF               	movlw	high STR_23
 17672  014690  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17673  014692  ECBA  F0C7         	call	_strcat	;wreg free
 17674                           
 17675                           ;ring_buffer_interface.c: 164: break;
 17676  014696  D057               	goto	l1284
 17677  014698                     
 17678                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 17679  014698  0E8D               	movlw	low terminal_textAttributes@output_buff
 17680  01469A  0101               	movlb	1	; () banked
 17681  01469C  6F17               	movwf	strcat@to& (0+255),b
 17682  01469E  0E02               	movlw	high terminal_textAttributes@output_buff
 17683  0146A0  6F18               	movwf	(strcat@to+1)& (0+255),b
 17684  0146A2  0EDE               	movlw	low STR_24
 17685  0146A4  6F19               	movwf	strcat@from& (0+255),b
 17686  0146A6  0EFF               	movlw	high STR_24
 17687  0146A8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17688  0146AA  ECBA  F0C7         	call	_strcat	;wreg free
 17689                           
 17690                           ;ring_buffer_interface.c: 167: break;
 17691  0146AE  D04B               	goto	l1284
 17692  0146B0                     
 17693                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 17694  0146B0  0E8D               	movlw	low terminal_textAttributes@output_buff
 17695  0146B2  0101               	movlb	1	; () banked
 17696  0146B4  6F17               	movwf	strcat@to& (0+255),b
 17697  0146B6  0E02               	movlw	high terminal_textAttributes@output_buff
 17698  0146B8  6F18               	movwf	(strcat@to+1)& (0+255),b
 17699  0146BA  0EE4               	movlw	low STR_25
 17700  0146BC  6F19               	movwf	strcat@from& (0+255),b
 17701  0146BE  0EFF               	movlw	high STR_25
 17702  0146C0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17703  0146C2  ECBA  F0C7         	call	_strcat	;wreg free
 17704                           
 17705                           ;ring_buffer_interface.c: 170: break;
 17706  0146C6  D03F               	goto	l1284
 17707  0146C8                     
 17708                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 17709  0146C8  0E8D               	movlw	low terminal_textAttributes@output_buff
 17710  0146CA  0101               	movlb	1	; () banked
 17711  0146CC  6F17               	movwf	strcat@to& (0+255),b
 17712  0146CE  0E02               	movlw	high terminal_textAttributes@output_buff
 17713  0146D0  6F18               	movwf	(strcat@to+1)& (0+255),b
 17714  0146D2  0EEA               	movlw	low STR_26
 17715  0146D4  6F19               	movwf	strcat@from& (0+255),b
 17716  0146D6  0EFF               	movlw	high STR_26
 17717  0146D8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17718  0146DA  ECBA  F0C7         	call	_strcat	;wreg free
 17719                           
 17720                           ;ring_buffer_interface.c: 173: break;
 17721  0146DE  D033               	goto	l1284
 17722  0146E0                     
 17723                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 17724  0146E0  0E8D               	movlw	low terminal_textAttributes@output_buff
 17725  0146E2  0101               	movlb	1	; () banked
 17726  0146E4  6F17               	movwf	strcat@to& (0+255),b
 17727  0146E6  0E02               	movlw	high terminal_textAttributes@output_buff
 17728  0146E8  6F18               	movwf	(strcat@to+1)& (0+255),b
 17729  0146EA  0EF0               	movlw	low STR_27
 17730  0146EC  6F19               	movwf	strcat@from& (0+255),b
 17731  0146EE  0EFF               	movlw	high STR_27
 17732  0146F0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17733  0146F2  ECBA  F0C7         	call	_strcat	;wreg free
 17734                           
 17735                           ;ring_buffer_interface.c: 176: break;
 17736  0146F6  D027               	goto	l1284
 17737  0146F8                     
 17738                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 17739  0146F8  0E8D               	movlw	low terminal_textAttributes@output_buff
 17740  0146FA  0101               	movlb	1	; () banked
 17741  0146FC  6F17               	movwf	strcat@to& (0+255),b
 17742  0146FE  0E02               	movlw	high terminal_textAttributes@output_buff
 17743  014700  6F18               	movwf	(strcat@to+1)& (0+255),b
 17744  014702  0EF0               	movlw	low STR_27
 17745  014704  6F19               	movwf	strcat@from& (0+255),b
 17746  014706  0EFF               	movlw	high STR_27
 17747  014708  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17748  01470A  ECBA  F0C7         	call	_strcat	;wreg free
 17749                           
 17750                           ;ring_buffer_interface.c: 181: }
 17751                           
 17752                           ;ring_buffer_interface.c: 180: break;
 17753  01470E  D01B               	goto	l1284
 17754  014710                     l1282:
 17755  014710  0102               	movlb	2	; () banked
 17756  014712  518C               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 17757                           
 17758                           ; Switch size 1, requested type "space"
 17759                           ; Number of cases is 8, Range of values is 0 to 7
 17760                           ; switch strategies available:
 17761                           ; Name         Instructions Cycles
 17762                           ; simple_byte           25    13 (average)
 17763                           ;	Chosen strategy is simple_byte
 17764  014714  0A00               	xorlw	0	; case 0
 17765  014716  B4D8               	btfsc	status,2,c
 17766  014718  D78F               	goto	l1283
 17767  01471A  0A01               	xorlw	1	; case 1
 17768  01471C  B4D8               	btfsc	status,2,c
 17769  01471E  D798               	goto	l1285
 17770  014720  0A03               	xorlw	3	; case 2
 17771  014722  B4D8               	btfsc	status,2,c
 17772  014724  D7A1               	goto	l1286
 17773  014726  0A01               	xorlw	1	; case 3
 17774  014728  B4D8               	btfsc	status,2,c
 17775  01472A  D7AA               	goto	l1287
 17776  01472C  0A07               	xorlw	7	; case 4
 17777  01472E  B4D8               	btfsc	status,2,c
 17778  014730  D7B3               	goto	l1288
 17779  014732  0A01               	xorlw	1	; case 5
 17780  014734  B4D8               	btfsc	status,2,c
 17781  014736  D7BC               	goto	l1289
 17782  014738  0A03               	xorlw	3	; case 6
 17783  01473A  B4D8               	btfsc	status,2,c
 17784  01473C  D7C5               	goto	l1290
 17785  01473E  0A01               	xorlw	1	; case 7
 17786  014740  B4D8               	btfsc	status,2,c
 17787  014742  D7CE               	goto	l1291
 17788  014744  D7D9               	goto	l1292
 17789  014746                     l1284:
 17790                           
 17791                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 17792                           
 17793                           ; BSR set to: 2
 17794  014746  0E8D               	movlw	low terminal_textAttributes@output_buff
 17795  014748  0101               	movlb	1	; () banked
 17796  01474A  6F17               	movwf	strcat@to& (0+255),b
 17797  01474C  0E02               	movlw	high terminal_textAttributes@output_buff
 17798  01474E  6F18               	movwf	(strcat@to+1)& (0+255),b
 17799  014750  0EFB               	movlw	low STR_19
 17800  014752  6F19               	movwf	strcat@from& (0+255),b
 17801  014754  0EFF               	movlw	high STR_19
 17802  014756  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17803  014758  ECBA  F0C7         	call	_strcat	;wreg free
 17804                           
 17805                           ;ring_buffer_interface.c: 185: switch (background_color) {
 17806  01475C  D06C               	goto	l1293
 17807  01475E                     
 17808                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 17809  01475E  0E8D               	movlw	low terminal_textAttributes@output_buff
 17810  014760  0101               	movlb	1	; () banked
 17811  014762  6F17               	movwf	strcat@to& (0+255),b
 17812  014764  0E02               	movlw	high terminal_textAttributes@output_buff
 17813  014766  6F18               	movwf	(strcat@to+1)& (0+255),b
 17814  014768  0E2E               	movlw	low (STR_163+9)
 17815  01476A  6F19               	movwf	strcat@from& (0+255),b
 17816  01476C  0EFF               	movlw	high (STR_163+9)
 17817  01476E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17818  014770  ECBA  F0C7         	call	_strcat	;wreg free
 17819                           
 17820                           ;ring_buffer_interface.c: 189: break;
 17821  014774  D07B               	goto	l1295
 17822  014776                     
 17823                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 17824  014776  0E8D               	movlw	low terminal_textAttributes@output_buff
 17825  014778  0101               	movlb	1	; () banked
 17826  01477A  6F17               	movwf	strcat@to& (0+255),b
 17827  01477C  0E02               	movlw	high terminal_textAttributes@output_buff
 17828  01477E  6F18               	movwf	(strcat@to+1)& (0+255),b
 17829  014780  0ECF               	movlw	low STR_31
 17830  014782  6F19               	movwf	strcat@from& (0+255),b
 17831  014784  0EFF               	movlw	high STR_31
 17832  014786  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17833  014788  ECBA  F0C7         	call	_strcat	;wreg free
 17834                           
 17835                           ;ring_buffer_interface.c: 192: break;
 17836  01478C  D06F               	goto	l1295
 17837  01478E                     
 17838                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 17839  01478E  0E8D               	movlw	low terminal_textAttributes@output_buff
 17840  014790  0101               	movlb	1	; () banked
 17841  014792  6F17               	movwf	strcat@to& (0+255),b
 17842  014794  0E02               	movlw	high terminal_textAttributes@output_buff
 17843  014796  6F18               	movwf	(strcat@to+1)& (0+255),b
 17844  014798  0ED5               	movlw	low STR_32
 17845  01479A  6F19               	movwf	strcat@from& (0+255),b
 17846  01479C  0EFF               	movlw	high STR_32
 17847  01479E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17848  0147A0  ECBA  F0C7         	call	_strcat	;wreg free
 17849                           
 17850                           ;ring_buffer_interface.c: 195: break;
 17851  0147A4  D063               	goto	l1295
 17852  0147A6                     
 17853                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 17854  0147A6  0E8D               	movlw	low terminal_textAttributes@output_buff
 17855  0147A8  0101               	movlb	1	; () banked
 17856  0147AA  6F17               	movwf	strcat@to& (0+255),b
 17857  0147AC  0E02               	movlw	high terminal_textAttributes@output_buff
 17858  0147AE  6F18               	movwf	(strcat@to+1)& (0+255),b
 17859  0147B0  0EDB               	movlw	low STR_33
 17860  0147B2  6F19               	movwf	strcat@from& (0+255),b
 17861  0147B4  0EFF               	movlw	high STR_33
 17862  0147B6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17863  0147B8  ECBA  F0C7         	call	_strcat	;wreg free
 17864                           
 17865                           ;ring_buffer_interface.c: 198: break;
 17866  0147BC  D057               	goto	l1295
 17867  0147BE                     
 17868                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 17869  0147BE  0E8D               	movlw	low terminal_textAttributes@output_buff
 17870  0147C0  0101               	movlb	1	; () banked
 17871  0147C2  6F17               	movwf	strcat@to& (0+255),b
 17872  0147C4  0E02               	movlw	high terminal_textAttributes@output_buff
 17873  0147C6  6F18               	movwf	(strcat@to+1)& (0+255),b
 17874  0147C8  0EE1               	movlw	low STR_34
 17875  0147CA  6F19               	movwf	strcat@from& (0+255),b
 17876  0147CC  0EFF               	movlw	high STR_34
 17877  0147CE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17878  0147D0  ECBA  F0C7         	call	_strcat	;wreg free
 17879                           
 17880                           ;ring_buffer_interface.c: 201: break;
 17881  0147D4  D04B               	goto	l1295
 17882  0147D6                     
 17883                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 17884  0147D6  0E8D               	movlw	low terminal_textAttributes@output_buff
 17885  0147D8  0101               	movlb	1	; () banked
 17886  0147DA  6F17               	movwf	strcat@to& (0+255),b
 17887  0147DC  0E02               	movlw	high terminal_textAttributes@output_buff
 17888  0147DE  6F18               	movwf	(strcat@to+1)& (0+255),b
 17889  0147E0  0EE7               	movlw	low STR_35
 17890  0147E2  6F19               	movwf	strcat@from& (0+255),b
 17891  0147E4  0EFF               	movlw	high STR_35
 17892  0147E6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17893  0147E8  ECBA  F0C7         	call	_strcat	;wreg free
 17894                           
 17895                           ;ring_buffer_interface.c: 204: break;
 17896  0147EC  D03F               	goto	l1295
 17897  0147EE                     
 17898                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 17899  0147EE  0E8D               	movlw	low terminal_textAttributes@output_buff
 17900  0147F0  0101               	movlb	1	; () banked
 17901  0147F2  6F17               	movwf	strcat@to& (0+255),b
 17902  0147F4  0E02               	movlw	high terminal_textAttributes@output_buff
 17903  0147F6  6F18               	movwf	(strcat@to+1)& (0+255),b
 17904  0147F8  0EED               	movlw	low STR_36
 17905  0147FA  6F19               	movwf	strcat@from& (0+255),b
 17906  0147FC  0EFF               	movlw	high STR_36
 17907  0147FE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17908  014800  ECBA  F0C7         	call	_strcat	;wreg free
 17909                           
 17910                           ;ring_buffer_interface.c: 207: break;
 17911  014804  D033               	goto	l1295
 17912  014806                     
 17913                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 17914  014806  0E8D               	movlw	low terminal_textAttributes@output_buff
 17915  014808  0101               	movlb	1	; () banked
 17916  01480A  6F17               	movwf	strcat@to& (0+255),b
 17917  01480C  0E02               	movlw	high terminal_textAttributes@output_buff
 17918  01480E  6F18               	movwf	(strcat@to+1)& (0+255),b
 17919  014810  0EF3               	movlw	low STR_37
 17920  014812  6F19               	movwf	strcat@from& (0+255),b
 17921  014814  0EFF               	movlw	high STR_37
 17922  014816  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17923  014818  ECBA  F0C7         	call	_strcat	;wreg free
 17924                           
 17925                           ;ring_buffer_interface.c: 210: break;
 17926  01481C  D027               	goto	l1295
 17927  01481E                     
 17928                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 17929  01481E  0E8D               	movlw	low terminal_textAttributes@output_buff
 17930  014820  0101               	movlb	1	; () banked
 17931  014822  6F17               	movwf	strcat@to& (0+255),b
 17932  014824  0E02               	movlw	high terminal_textAttributes@output_buff
 17933  014826  6F18               	movwf	(strcat@to+1)& (0+255),b
 17934  014828  0EF3               	movlw	low STR_37
 17935  01482A  6F19               	movwf	strcat@from& (0+255),b
 17936  01482C  0EFF               	movlw	high STR_37
 17937  01482E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17938  014830  ECBA  F0C7         	call	_strcat	;wreg free
 17939                           
 17940                           ;ring_buffer_interface.c: 215: }
 17941                           
 17942                           ;ring_buffer_interface.c: 214: break;
 17943  014834  D01B               	goto	l1295
 17944  014836                     l1293:
 17945  014836  0101               	movlb	1	; () banked
 17946  014838  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 17947                           
 17948                           ; Switch size 1, requested type "space"
 17949                           ; Number of cases is 8, Range of values is 0 to 7
 17950                           ; switch strategies available:
 17951                           ; Name         Instructions Cycles
 17952                           ; simple_byte           25    13 (average)
 17953                           ;	Chosen strategy is simple_byte
 17954  01483A  0A00               	xorlw	0	; case 0
 17955  01483C  B4D8               	btfsc	status,2,c
 17956  01483E  D78F               	goto	l1294
 17957  014840  0A01               	xorlw	1	; case 1
 17958  014842  B4D8               	btfsc	status,2,c
 17959  014844  D798               	goto	l1296
 17960  014846  0A03               	xorlw	3	; case 2
 17961  014848  B4D8               	btfsc	status,2,c
 17962  01484A  D7A1               	goto	l1297
 17963  01484C  0A01               	xorlw	1	; case 3
 17964  01484E  B4D8               	btfsc	status,2,c
 17965  014850  D7AA               	goto	l1298
 17966  014852  0A07               	xorlw	7	; case 4
 17967  014854  B4D8               	btfsc	status,2,c
 17968  014856  D7B3               	goto	l1299
 17969  014858  0A01               	xorlw	1	; case 5
 17970  01485A  B4D8               	btfsc	status,2,c
 17971  01485C  D7BC               	goto	l1300
 17972  01485E  0A03               	xorlw	3	; case 6
 17973  014860  B4D8               	btfsc	status,2,c
 17974  014862  D7C5               	goto	l1301
 17975  014864  0A01               	xorlw	1	; case 7
 17976  014866  B4D8               	btfsc	status,2,c
 17977  014868  D7CE               	goto	l1302
 17978  01486A  D7D9               	goto	l1303
 17979  01486C                     l1295:
 17980                           
 17981                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 17982                           
 17983                           ; BSR set to: 1
 17984  01486C  0E8D               	movlw	low terminal_textAttributes@output_buff
 17985  01486E  0101               	movlb	1	; () banked
 17986  014870  6F17               	movwf	strcat@to& (0+255),b
 17987  014872  0E02               	movlw	high terminal_textAttributes@output_buff
 17988  014874  6F18               	movwf	(strcat@to+1)& (0+255),b
 17989  014876  0EFD               	movlw	low STR_39
 17990  014878  6F19               	movwf	strcat@from& (0+255),b
 17991  01487A  0EFF               	movlw	high STR_39
 17992  01487C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 17993  01487E  ECBA  F0C7         	call	_strcat	;wreg free
 17994                           
 17995                           ;ring_buffer_interface.c: 219: printf(output_buff);
 17996  014882  0E8D               	movlw	low terminal_textAttributes@output_buff
 17997  014884  0101               	movlb	1	; () banked
 17998  014886  6F82               	movwf	printf@f& (0+255),b
 17999  014888  0E02               	movlw	high terminal_textAttributes@output_buff
 18000  01488A  6F83               	movwf	(printf@f+1)& (0+255),b
 18001  01488C  ECCD  F08A         	call	_printf	;wreg free
 18002  014890  0012               	return		;funcret
 18003  014892                     __end_of_terminal_textAttributes:
 18004                           	opt stack 0
 18005                           tblptru	equ	0xFF8
 18006                           tblptrh	equ	0xFF7
 18007                           tblptrl	equ	0xFF6
 18008                           tablat	equ	0xFF5
 18009                           intcon	equ	0xFF2
 18010                           postinc0	equ	0xFEE
 18011                           wreg	equ	0xFE8
 18012                           indf1	equ	0xFE7
 18013                           postdec1	equ	0xFE5
 18014                           fsr1h	equ	0xFE2
 18015                           fsr1l	equ	0xFE1
 18016                           indf2	equ	0xFDF
 18017                           postinc2	equ	0xFDE
 18018                           fsr2h	equ	0xFDA
 18019                           fsr2l	equ	0xFD9
 18020                           status	equ	0xFD8
 18021                           
 18022 ;; *************** function _strncpy *****************
 18023 ;; Defined at:
 18024 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 18025 ;; Parameters:    Size  Location     Type
 18026 ;;  to              2   23[BANK1 ] PTR unsigned char 
 18027 ;;		 -> terminal_textAttributes@output_buff(15), 
 18028 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 18029 ;;		 -> STR_11(3), 
 18030 ;;  size            2   27[BANK1 ] unsigned int 
 18031 ;; Auto vars:     Size  Location     Type
 18032 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 18033 ;;		 -> terminal_textAttributes@output_buff(15), 
 18034 ;; Return value:  Size  Location     Type
 18035 ;;                  2   23[BANK1 ] PTR unsigned char 
 18036 ;; Registers used:
 18037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18038 ;; Tracked objects:
 18039 ;;		On entry : 0/0
 18040 ;;		On exit  : 0/0
 18041 ;;		Unchanged: 0/0
 18042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18043 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18044 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18046 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18047 ;;Total ram usage:        8 bytes
 18048 ;; Hardware stack levels used:    1
 18049 ;; Hardware stack levels required when called:   13
 18050 ;; This function calls:
 18051 ;;		Nothing
 18052 ;; This function is called by:
 18053 ;;		_terminal_textAttributes
 18054 ;; This function uses a non-reentrant model
 18055 ;;
 18056                           
 18057                           	psect	text6
 18058  018AF0                     __ptext6:
 18059                           	opt stack 0
 18060  018AF0                     _strncpy:
 18061                           	opt stack 15
 18062                           
 18063                           ;incstack = 0
 18064  018AF0  C117  F11D         	movff	strncpy@to,strncpy@cp
 18065  018AF4  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 18066  018AF8  D018               	goto	l2506
 18067  018AFA  0101               	movlb	1	; () banked
 18068  018AFC  071B               	decf	strncpy@size& (0+255),f,b
 18069  018AFE  A0D8               	btfss	status,0,c
 18070  018B00  071C               	decf	(strncpy@size+1)& (0+255),f,b
 18071                           
 18072                           ; BSR set to: 1
 18073  018B02  C119  FFF6         	movff	strncpy@from,tblptrl
 18074  018B06  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 18075  018B0A  4B19               	infsnz	strncpy@from& (0+255),f,b
 18076  018B0C  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 18077  018B0E                     	if	0	;tblptru may be non-zero
 18078  018B0E                     	endif
 18079  018B0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18080  018B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 18081  018B10  6EF8               	movwf	tblptru,c
 18082  018B12                     	endif
 18083  018B12  C11D  FFD9         	movff	strncpy@cp,fsr2l
 18084  018B16  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 18085  018B1A  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 18086  018B1C  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 18087  018B1E  0008               	tblrd		*
 18088  018B20  CFF5 FFDF          	movff	tablat,indf2
 18089  018B24  50DF               	movf	indf2,w,c
 18090  018B26  B4D8               	btfsc	status,2,c
 18091  018B28  D00E               	goto	l2508
 18092  018B2A                     l2506:
 18093                           
 18094                           ; BSR set to: 1
 18095                           
 18096                           ; BSR set to: 1
 18097  018B2A  0101               	movlb	1	; () banked
 18098  018B2C  511B               	movf	strncpy@size& (0+255),w,b
 18099  018B2E  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 18100  018B30  B4D8               	btfsc	status,2,c
 18101  018B32  D009               	goto	l2508
 18102  018B34  D7E2               	goto	l2505
 18103  018B36                     l19793:
 18104                           
 18105                           ; BSR set to: 1
 18106  018B36  C11D  FFD9         	movff	strncpy@cp,fsr2l
 18107  018B3A  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 18108  018B3E  0E00               	movlw	0
 18109  018B40  6EDF               	movwf	indf2,c
 18110                           
 18111                           ; BSR set to: 1
 18112  018B42  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 18113  018B44  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 18114  018B46                     l2508:
 18115                           
 18116                           ; BSR set to: 1
 18117                           
 18118                           ; BSR set to: 1
 18119  018B46  071B               	decf	strncpy@size& (0+255),f,b
 18120  018B48  A0D8               	btfss	status,0,c
 18121  018B4A  071C               	decf	(strncpy@size+1)& (0+255),f,b
 18122  018B4C  291B               	incf	strncpy@size& (0+255),w,b
 18123  018B4E  E1F3               	bnz	l19793
 18124  018B50  291C               	incf	(strncpy@size+1)& (0+255),w,b
 18125  018B52  B4D8               	btfsc	status,2,c
 18126  018B54  0012               	return	
 18127  018B56  D7EF               	goto	l2509
 18128  018B58                     __end_of_strncpy:
 18129                           	opt stack 0
 18130                           tblptru	equ	0xFF8
 18131                           tblptrh	equ	0xFF7
 18132                           tblptrl	equ	0xFF6
 18133                           tablat	equ	0xFF5
 18134                           intcon	equ	0xFF2
 18135                           postinc0	equ	0xFEE
 18136                           wreg	equ	0xFE8
 18137                           indf1	equ	0xFE7
 18138                           postdec1	equ	0xFE5
 18139                           fsr1h	equ	0xFE2
 18140                           fsr1l	equ	0xFE1
 18141                           indf2	equ	0xFDF
 18142                           postinc2	equ	0xFDE
 18143                           fsr2h	equ	0xFDA
 18144                           fsr2l	equ	0xFD9
 18145                           status	equ	0xFD8
 18146                           
 18147 ;; *************** function _strcat *****************
 18148 ;; Defined at:
 18149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;  to              2   23[BANK1 ] PTR unsigned char 
 18152 ;;		 -> terminal_textAttributes@output_buff(15), 
 18153 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 18154 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 18155 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 18156 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 18157 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 18158 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 18159 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 18160 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 18161 ;; Auto vars:     Size  Location     Type
 18162 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 18163 ;;		 -> terminal_textAttributes@output_buff(15), 
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  2   23[BANK1 ] PTR unsigned char 
 18166 ;; Registers used:
 18167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18173 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18174 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18176 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18177 ;;Total ram usage:        6 bytes
 18178 ;; Hardware stack levels used:    1
 18179 ;; Hardware stack levels required when called:   13
 18180 ;; This function calls:
 18181 ;;		Nothing
 18182 ;; This function is called by:
 18183 ;;		_terminal_textAttributes
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           	psect	text7
 18188  018F74                     __ptext7:
 18189                           	opt stack 0
 18190  018F74                     _strcat:
 18191                           	opt stack 15
 18192                           
 18193                           ; BSR set to: 1
 18194                           ;incstack = 0
 18195  018F74  C117  F11B         	movff	strcat@to,strcat@cp
 18196  018F78  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 18197  018F7C  D003               	goto	l2475
 18198  018F7E  0101               	movlb	1	; () banked
 18199  018F80  4B1B               	infsnz	strcat@cp& (0+255),f,b
 18200  018F82  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 18201  018F84                     l2475:
 18202                           
 18203                           ; BSR set to: 1
 18204  018F84  C11B  FFD9         	movff	strcat@cp,fsr2l
 18205  018F88  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 18206  018F8C  50DF               	movf	indf2,w,c
 18207  018F8E  B4D8               	btfsc	status,2,c
 18208  018F90  D006               	goto	l2478
 18209  018F92  D7F5               	goto	l2476
 18210  018F94  0101               	movlb	1	; () banked
 18211  018F96  4B1B               	infsnz	strcat@cp& (0+255),f,b
 18212  018F98  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 18213  018F9A  4B19               	infsnz	strcat@from& (0+255),f,b
 18214  018F9C  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 18215  018F9E                     l2478:
 18216                           
 18217                           ; BSR set to: 1
 18218  018F9E  C119  FFF6         	movff	strcat@from,tblptrl
 18219  018FA2  C11A  FFF7         	movff	strcat@from+1,tblptrh
 18220  018FA6                     	if	0	;tblptru may be non-zero
 18221  018FA6                     	endif
 18222  018FA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18223  018FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 18224  018FA8  6EF8               	movwf	tblptru,c
 18225  018FAA                     	endif
 18226  018FAA  C11B  FFD9         	movff	strcat@cp,fsr2l
 18227  018FAE  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 18228  018FB2  0008               	tblrd		*
 18229  018FB4  CFF5 FFDF          	movff	tablat,indf2
 18230  018FB8  50DF               	movf	indf2,w,c
 18231  018FBA  B4D8               	btfsc	status,2,c
 18232  018FBC  0012               	return	
 18233  018FBE  D7EA               	goto	l2479
 18234  018FC0                     __end_of_strcat:
 18235                           	opt stack 0
 18236                           tblptru	equ	0xFF8
 18237                           tblptrh	equ	0xFF7
 18238                           tblptrl	equ	0xFF6
 18239                           tablat	equ	0xFF5
 18240                           intcon	equ	0xFF2
 18241                           postinc0	equ	0xFEE
 18242                           wreg	equ	0xFE8
 18243                           indf1	equ	0xFE7
 18244                           postdec1	equ	0xFE5
 18245                           fsr1h	equ	0xFE2
 18246                           fsr1l	equ	0xFE1
 18247                           indf2	equ	0xFDF
 18248                           postinc2	equ	0xFDE
 18249                           fsr2h	equ	0xFDA
 18250                           fsr2l	equ	0xFD9
 18251                           status	equ	0xFD8
 18252                           
 18253 ;; *************** function _terminal_printNewline *****************
 18254 ;; Defined at:
 18255 ;;		line 230 in file "ring_buffer_interface.c"
 18256 ;; Parameters:    Size  Location     Type
 18257 ;;		None
 18258 ;; Auto vars:     Size  Location     Type
 18259 ;;		None
 18260 ;; Return value:  Size  Location     Type
 18261 ;;                  1    wreg      void 
 18262 ;; Registers used:
 18263 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18264 ;; Tracked objects:
 18265 ;;		On entry : 0/0
 18266 ;;		On exit  : 0/0
 18267 ;;		Unchanged: 0/0
 18268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18273 ;;Total ram usage:        0 bytes
 18274 ;; Hardware stack levels used:    1
 18275 ;; Hardware stack levels required when called:   16
 18276 ;; This function calls:
 18277 ;;		_printf
 18278 ;; This function is called by:
 18279 ;;		_ringBufferLUT
 18280 ;; This function uses a non-reentrant model
 18281 ;;
 18282                           
 18283                           	psect	text8
 18284  0198EA                     __ptext8:
 18285                           	opt stack 0
 18286  0198EA                     _terminal_printNewline:
 18287                           	opt stack 12
 18288                           
 18289                           ;ring_buffer_interface.c: 232: printf("\n\r");
 18290                           
 18291                           ;incstack = 0
 18292  0198EA  0EFA               	movlw	low (STR_143+717)
 18293  0198EC  0101               	movlb	1	; () banked
 18294  0198EE  6F82               	movwf	printf@f& (0+255),b
 18295  0198F0  0EE9               	movlw	high (STR_143+717)
 18296  0198F2  6F83               	movwf	(printf@f+1)& (0+255),b
 18297  0198F4  ECCD  F08A         	call	_printf	;wreg free
 18298  0198F8  0012               	return		;funcret
 18299  0198FA                     __end_of_terminal_printNewline:
 18300                           	opt stack 0
 18301                           tblptru	equ	0xFF8
 18302                           tblptrh	equ	0xFF7
 18303                           tblptrl	equ	0xFF6
 18304                           tablat	equ	0xFF5
 18305                           intcon	equ	0xFF2
 18306                           postinc0	equ	0xFEE
 18307                           wreg	equ	0xFE8
 18308                           indf1	equ	0xFE7
 18309                           postdec1	equ	0xFE5
 18310                           fsr1h	equ	0xFE2
 18311                           fsr1l	equ	0xFE1
 18312                           indf2	equ	0xFDF
 18313                           postinc2	equ	0xFDE
 18314                           fsr2h	equ	0xFDA
 18315                           fsr2l	equ	0xFD9
 18316                           status	equ	0xFD8
 18317                           
 18318 ;; *************** function _strstr *****************
 18319 ;; Defined at:
 18320 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 18321 ;; Parameters:    Size  Location     Type
 18322 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 18323 ;;		 -> NULL(0), line(64), 
 18324 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 18325 ;;		 -> STR_115(25), 
 18326 ;; Auto vars:     Size  Location     Type
 18327 ;;		None
 18328 ;; Return value:  Size  Location     Type
 18329 ;;                  2   38[BANK1 ] PTR unsigned char 
 18330 ;; Registers used:
 18331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18332 ;; Tracked objects:
 18333 ;;		On entry : 0/0
 18334 ;;		On exit  : 0/0
 18335 ;;		Unchanged: 0/0
 18336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18337 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18340 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18341 ;;Total ram usage:        4 bytes
 18342 ;; Hardware stack levels used:    1
 18343 ;; Hardware stack levels required when called:   14
 18344 ;; This function calls:
 18345 ;;		_strchr
 18346 ;;		_strlen
 18347 ;;		_strncmp
 18348 ;; This function is called by:
 18349 ;;		_ringBufferLUT
 18350 ;; This function uses a non-reentrant model
 18351 ;;
 18352                           
 18353                           	psect	text9
 18354  018522                     __ptext9:
 18355                           	opt stack 0
 18356  018522                     _strstr:
 18357                           	opt stack 14
 18358                           
 18359                           ;incstack = 0
 18360  018522  D034               	goto	l2520
 18361  018524  C126  F11D         	movff	strstr@s1,strncmp@s1
 18362  018528  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 18363  01852C  C128  F11F         	movff	strstr@s2,strncmp@s2
 18364  018530  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 18365  018534  C128  F117         	movff	strstr@s2,strlen@s
 18366  018538  C129  F118         	movff	strstr@s2+1,strlen@s+1
 18367  01853C  EC73  F0C6         	call	_strlen	;wreg free
 18368  018540  C117  F121         	movff	?_strlen,strncmp@len
 18369  018544  C118  F122         	movff	?_strlen+1,strncmp@len+1
 18370  018548  EC49  F0C2         	call	_strncmp	;wreg free
 18371  01854C  0101               	movlb	1	; () banked
 18372  01854E  511D               	movf	?_strncmp& (0+255),w,b
 18373  018550  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 18374  018552  A4D8               	btfss	status,2,c
 18375  018554  D005               	goto	l2522
 18376                           
 18377                           ; BSR set to: 1
 18378  018556  C126  F126         	movff	strstr@s1,?_strstr
 18379  01855A  C127  F127         	movff	strstr@s1+1,?_strstr+1
 18380                           
 18381                           ; BSR set to: 1
 18382  01855E  0012               	return	
 18383  018560                     l2522:
 18384                           
 18385                           ; BSR set to: 1
 18386                           
 18387                           ; BSR set to: 1
 18388  018560  0E01               	movlw	1
 18389  018562  2526               	addwf	strstr@s1& (0+255),w,b
 18390  018564  6F17               	movwf	strchr@ptr& (0+255),b
 18391  018566  0E00               	movlw	0
 18392  018568  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 18393  01856A  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 18394  01856C  C128  FFF6         	movff	strstr@s2,tblptrl
 18395  018570  C129  FFF7         	movff	strstr@s2+1,tblptrh
 18396  018574                     	if	0	;tblptru may be non-zero
 18397  018574                     	endif
 18398  018574                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18399  018574  0E00               	movlw	low (__mediumconst shr (0+16))
 18400  018576  6EF8               	movwf	tblptru,c
 18401  018578                     	endif
 18402  018578  0008               	tblrd		*
 18403  01857A  50F5               	movf	tablat,w,c
 18404  01857C  6F19               	movwf	strchr@chr& (0+255),b
 18405  01857E  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 18406  018580  EC98  F0C9         	call	_strchr	;wreg free
 18407  018584  C117  F126         	movff	?_strchr,strstr@s1
 18408  018588  C118  F127         	movff	?_strchr+1,strstr@s1+1
 18409  01858C                     l2520:
 18410  01858C  0101               	movlb	1	; () banked
 18411  01858E  5126               	movf	strstr@s1& (0+255),w,b
 18412  018590  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 18413  018592  B4D8               	btfsc	status,2,c
 18414  018594  D007               	goto	u26490
 18415                           
 18416                           ; BSR set to: 1
 18417  018596  C126  FFD9         	movff	strstr@s1,fsr2l
 18418  01859A  C127  FFDA         	movff	strstr@s1+1,fsr2h
 18419  01859E  50DF               	movf	indf2,w,c
 18420  0185A0  A4D8               	btfss	status,2,c
 18421  0185A2  D7C0               	goto	l2521
 18422  0185A4                     u26490:
 18423                           
 18424                           ; BSR set to: 1
 18425                           
 18426                           ; BSR set to: 1
 18427                           
 18428                           ; BSR set to: 1
 18429  0185A4  0E00               	movlw	0
 18430  0185A6  6F26               	movwf	?_strstr& (0+255),b
 18431  0185A8  0E00               	movlw	0
 18432  0185AA  6F27               	movwf	(?_strstr+1)& (0+255),b
 18433  0185AC  0012               	return	
 18434  0185AE                     __end_of_strstr:
 18435                           	opt stack 0
 18436                           tblptru	equ	0xFF8
 18437                           tblptrh	equ	0xFF7
 18438                           tblptrl	equ	0xFF6
 18439                           tablat	equ	0xFF5
 18440                           intcon	equ	0xFF2
 18441                           postinc0	equ	0xFEE
 18442                           wreg	equ	0xFE8
 18443                           indf1	equ	0xFE7
 18444                           postdec1	equ	0xFE5
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           fsr2h	equ	0xFDA
 18450                           fsr2l	equ	0xFD9
 18451                           status	equ	0xFD8
 18452                           
 18453 ;; *************** function _strncmp *****************
 18454 ;; Defined at:
 18455 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 18456 ;; Parameters:    Size  Location     Type
 18457 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 18458 ;;		 -> NULL(0), line(64), 
 18459 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 18460 ;;		 -> STR_115(25), 
 18461 ;;  len             2   33[BANK1 ] unsigned int 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;		None
 18464 ;; Return value:  Size  Location     Type
 18465 ;;                  2   29[BANK1 ] int 
 18466 ;; Registers used:
 18467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18473 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18475 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18476 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18477 ;;Total ram usage:        9 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; Hardware stack levels required when called:   13
 18480 ;; This function calls:
 18481 ;;		Nothing
 18482 ;; This function is called by:
 18483 ;;		_strstr
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           	psect	text10
 18488  018492                     __ptext10:
 18489                           	opt stack 0
 18490  018492                     _strncmp:
 18491                           	opt stack 14
 18492                           
 18493                           ; BSR set to: 1
 18494                           ;incstack = 0
 18495  018492  D039               	goto	l2579
 18496  018494                     l19933:
 18497  018494  C11D  FFD9         	movff	strncmp@s1,fsr2l
 18498  018498  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 18499  01849C  50DF               	movf	indf2,w,c
 18500  01849E  B4D8               	btfsc	status,2,c
 18501  0184A0  D012               	goto	u26330
 18502  0184A2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 18503  0184A6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 18504  0184AA  50DF               	movf	indf2,w,c
 18505  0184AC  0101               	movlb	1	; () banked
 18506  0184AE  6F23               	movwf	??_strncmp& (0+255),b
 18507  0184B0  C11F  FFF6         	movff	strncmp@s2,tblptrl
 18508  0184B4  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 18509  0184B8                     	if	0	;tblptru may be non-zero
 18510  0184B8                     	endif
 18511  0184B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18512  0184B8  0E00               	movlw	low (__mediumconst shr (0+16))
 18513  0184BA  6EF8               	movwf	tblptru,c
 18514  0184BC                     	endif
 18515  0184BC  0008               	tblrd		*
 18516  0184BE  50F5               	movf	tablat,w,c
 18517  0184C0  1923               	xorwf	??_strncmp& (0+255),w,b
 18518  0184C2  B4D8               	btfsc	status,2,c
 18519  0184C4  D01C               	goto	l2581
 18520  0184C6                     u26330:
 18521                           
 18522                           ; BSR set to: 1
 18523  0184C6  C11F  FFF6         	movff	strncmp@s2,tblptrl
 18524  0184CA  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 18525  0184CE                     	if	0	;tblptru may be non-zero
 18526  0184CE                     	endif
 18527  0184CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18528  0184CE  0E00               	movlw	low (__mediumconst shr (0+16))
 18529  0184D0  6EF8               	movwf	tblptru,c
 18530  0184D2                     	endif
 18531  0184D2  0008               	tblrd		*
 18532  0184D4  50F5               	movf	tablat,w,c
 18533  0184D6  0101               	movlb	1	; () banked
 18534  0184D8  6F23               	movwf	??_strncmp& (0+255),b
 18535  0184DA  6B24               	clrf	(??_strncmp+1)& (0+255),b
 18536  0184DC  1F23               	comf	??_strncmp& (0+255),f,b
 18537  0184DE  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 18538  0184E0  4B23               	infsnz	??_strncmp& (0+255),f,b
 18539  0184E2  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 18540  0184E4  C11D  FFD9         	movff	strncmp@s1,fsr2l
 18541  0184E8  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 18542  0184EC  50DF               	movf	indf2,w,c
 18543  0184EE  6F25               	movwf	(??_strncmp+2)& (0+255),b
 18544  0184F0  5125               	movf	(??_strncmp+2)& (0+255),w,b
 18545  0184F2  2523               	addwf	??_strncmp& (0+255),w,b
 18546  0184F4  6F1D               	movwf	?_strncmp& (0+255),b
 18547  0184F6  0E00               	movlw	0
 18548  0184F8  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 18549  0184FA  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 18550                           
 18551                           ; BSR set to: 1
 18552  0184FC  0012               	return	
 18553  0184FE                     l2581:
 18554                           
 18555                           ; BSR set to: 1
 18556                           
 18557                           ; BSR set to: 1
 18558  0184FE  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 18559  018500  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 18560  018502  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 18561  018504  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 18562  018506                     l2579:
 18563                           
 18564                           ; BSR set to: 1
 18565  018506  0101               	movlb	1	; () banked
 18566  018508  0721               	decf	strncmp@len& (0+255),f,b
 18567  01850A  A0D8               	btfss	status,0,c
 18568  01850C  0722               	decf	(strncmp@len+1)& (0+255),f,b
 18569  01850E  2921               	incf	strncmp@len& (0+255),w,b
 18570  018510  E1C1               	bnz	l19933
 18571  018512  2922               	incf	(strncmp@len+1)& (0+255),w,b
 18572  018514  A4D8               	btfss	status,2,c
 18573  018516  D7BE               	goto	l2580
 18574                           
 18575                           ; BSR set to: 1
 18576                           
 18577                           ; BSR set to: 1
 18578  018518  0E00               	movlw	0
 18579  01851A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 18580  01851C  0E00               	movlw	0
 18581  01851E  6F1D               	movwf	?_strncmp& (0+255),b
 18582  018520  0012               	return	
 18583  018522                     __end_of_strncmp:
 18584                           	opt stack 0
 18585                           tblptru	equ	0xFF8
 18586                           tblptrh	equ	0xFF7
 18587                           tblptrl	equ	0xFF6
 18588                           tablat	equ	0xFF5
 18589                           intcon	equ	0xFF2
 18590                           postinc0	equ	0xFEE
 18591                           wreg	equ	0xFE8
 18592                           indf1	equ	0xFE7
 18593                           postdec1	equ	0xFE5
 18594                           fsr1h	equ	0xFE2
 18595                           fsr1l	equ	0xFE1
 18596                           indf2	equ	0xFDF
 18597                           postinc2	equ	0xFDE
 18598                           fsr2h	equ	0xFDA
 18599                           fsr2l	equ	0xFD9
 18600                           status	equ	0xFD8
 18601                           
 18602 ;; *************** function _strlen *****************
 18603 ;; Defined at:
 18604 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 18605 ;; Parameters:    Size  Location     Type
 18606 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 18607 ;;		 -> STR_115(25), line(64), 
 18608 ;; Auto vars:     Size  Location     Type
 18609 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 18610 ;;		 -> STR_115(25), line(64), 
 18611 ;; Return value:  Size  Location     Type
 18612 ;;                  2   23[BANK1 ] unsigned int 
 18613 ;; Registers used:
 18614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18615 ;; Tracked objects:
 18616 ;;		On entry : 0/0
 18617 ;;		On exit  : 0/0
 18618 ;;		Unchanged: 0/0
 18619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18620 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18621 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18622 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18623 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18624 ;;Total ram usage:        6 bytes
 18625 ;; Hardware stack levels used:    1
 18626 ;; Hardware stack levels required when called:   13
 18627 ;; This function calls:
 18628 ;;		Nothing
 18629 ;; This function is called by:
 18630 ;;		_terminal_ringBufferPull
 18631 ;;		_strstr
 18632 ;; This function uses a non-reentrant model
 18633 ;;
 18634                           
 18635                           	psect	text11
 18636  018CE6                     __ptext11:
 18637                           	opt stack 0
 18638  018CE6                     _strlen:
 18639                           	opt stack 16
 18640                           
 18641                           ; BSR set to: 1
 18642                           ;incstack = 0
 18643  018CE6  C117  F11B         	movff	strlen@s,strlen@cp
 18644  018CEA  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 18645  018CEE  D003               	goto	l2498
 18646  018CF0  0101               	movlb	1	; () banked
 18647  018CF2  4B1B               	infsnz	strlen@cp& (0+255),f,b
 18648  018CF4  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 18649  018CF6                     l2498:
 18650                           
 18651                           ; BSR set to: 1
 18652  018CF6  C11B  FFF6         	movff	strlen@cp,tblptrl
 18653  018CFA  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 18654  018CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 18655  018D00  6EF8               	movwf	tblptru,c
 18656  018D02  0E0D               	movlw	(high __ramtop+-1)
 18657  018D04  64F7               	cpfsgt	tblptrh,c
 18658  018D06  D003               	bra	u26307
 18659  018D08  0008               	tblrd		*
 18660  018D0A  50F5               	movf	tablat,w,c
 18661  018D0C  D005               	bra	u26300
 18662  018D0E                     u26307:
 18663  018D0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18664  018D12  CFF7 FFEA          	movff	tblptrh,fsr0h
 18665  018D16  50EF               	movf	indf0,w,c
 18666  018D18                     u26300:
 18667  018D18  0900               	iorlw	0
 18668  018D1A  A4D8               	btfss	status,2,c
 18669  018D1C  D7E9               	goto	l2499
 18670  018D1E  C117  F119         	movff	strlen@s,??_strlen
 18671  018D22  C118  F11A         	movff	strlen@s+1,??_strlen+1
 18672  018D26  0101               	movlb	1	; () banked
 18673  018D28  1F19               	comf	??_strlen& (0+255),f,b
 18674  018D2A  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 18675  018D2C  4B19               	infsnz	??_strlen& (0+255),f,b
 18676  018D2E  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 18677  018D30  511B               	movf	strlen@cp& (0+255),w,b
 18678  018D32  2519               	addwf	??_strlen& (0+255),w,b
 18679  018D34  6F17               	movwf	?_strlen& (0+255),b
 18680  018D36  511C               	movf	(strlen@cp+1)& (0+255),w,b
 18681  018D38  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 18682  018D3A  6F18               	movwf	(?_strlen+1)& (0+255),b
 18683  018D3C  0012               	return	
 18684  018D3E                     __end_of_strlen:
 18685                           	opt stack 0
 18686                           tblptru	equ	0xFF8
 18687                           tblptrh	equ	0xFF7
 18688                           tblptrl	equ	0xFF6
 18689                           tablat	equ	0xFF5
 18690                           intcon	equ	0xFF2
 18691                           indf0	equ	0xFEF
 18692                           postinc0	equ	0xFEE
 18693                           fsr0h	equ	0xFEA
 18694                           fsr0l	equ	0xFE9
 18695                           wreg	equ	0xFE8
 18696                           indf1	equ	0xFE7
 18697                           postdec1	equ	0xFE5
 18698                           fsr1h	equ	0xFE2
 18699                           fsr1l	equ	0xFE1
 18700                           indf2	equ	0xFDF
 18701                           postinc2	equ	0xFDE
 18702                           fsr2h	equ	0xFDA
 18703                           fsr2l	equ	0xFD9
 18704                           status	equ	0xFD8
 18705                           
 18706 ;; *************** function _strchr *****************
 18707 ;; Defined at:
 18708 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 18709 ;; Parameters:    Size  Location     Type
 18710 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 18711 ;;		 -> NULL(0), line(64), 
 18712 ;;  chr             2   25[BANK1 ] int 
 18713 ;; Auto vars:     Size  Location     Type
 18714 ;;		None
 18715 ;; Return value:  Size  Location     Type
 18716 ;;                  2   23[BANK1 ] PTR unsigned char 
 18717 ;; Registers used:
 18718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18719 ;; Tracked objects:
 18720 ;;		On entry : 0/0
 18721 ;;		On exit  : 0/0
 18722 ;;		Unchanged: 0/0
 18723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18724 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18726 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18727 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18728 ;;Total ram usage:        5 bytes
 18729 ;; Hardware stack levels used:    1
 18730 ;; Hardware stack levels required when called:   13
 18731 ;; This function calls:
 18732 ;;		Nothing
 18733 ;; This function is called by:
 18734 ;;		_strstr
 18735 ;; This function uses a non-reentrant model
 18736 ;;
 18737                           
 18738                           	psect	text12
 18739  019330                     __ptext12:
 18740                           	opt stack 0
 18741  019330                     _strchr:
 18742                           	opt stack 14
 18743                           
 18744                           ; BSR set to: 1
 18745                           ;incstack = 0
 18746  019330  C117  FFD9         	movff	strchr@ptr,fsr2l
 18747  019334  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 18748  019338  0101               	movlb	1	; () banked
 18749  01933A  5119               	movf	strchr@chr& (0+255),w,b
 18750  01933C  18DE               	xorwf	postinc2,w,c
 18751  01933E  A4D8               	btfss	status,2,c
 18752  019340  D005               	goto	l2574
 18753                           
 18754                           ; BSR set to: 1
 18755  019342  C117  F117         	movff	strchr@ptr,?_strchr
 18756  019346  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 18757                           
 18758                           ; BSR set to: 1
 18759  01934A  0012               	return	
 18760  01934C                     l2574:
 18761                           
 18762                           ; BSR set to: 1
 18763                           
 18764                           ; BSR set to: 1
 18765  01934C  C117  FFD9         	movff	strchr@ptr,fsr2l
 18766  019350  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 18767  019354  4B17               	infsnz	strchr@ptr& (0+255),f,b
 18768  019356  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 18769  019358  50DF               	movf	indf2,w,c
 18770  01935A  A4D8               	btfss	status,2,c
 18771  01935C  D7E9               	goto	_strchr
 18772                           
 18773                           ; BSR set to: 1
 18774                           
 18775                           ; BSR set to: 1
 18776  01935E  0E00               	movlw	0
 18777  019360  6F17               	movwf	?_strchr& (0+255),b
 18778  019362  0E00               	movlw	0
 18779  019364  6F18               	movwf	(?_strchr+1)& (0+255),b
 18780  019366  0012               	return	
 18781  019368                     __end_of_strchr:
 18782                           	opt stack 0
 18783                           tblptru	equ	0xFF8
 18784                           tblptrh	equ	0xFF7
 18785                           tblptrl	equ	0xFF6
 18786                           tablat	equ	0xFF5
 18787                           intcon	equ	0xFF2
 18788                           indf0	equ	0xFEF
 18789                           postinc0	equ	0xFEE
 18790                           fsr0h	equ	0xFEA
 18791                           fsr0l	equ	0xFE9
 18792                           wreg	equ	0xFE8
 18793                           indf1	equ	0xFE7
 18794                           postdec1	equ	0xFE5
 18795                           fsr1h	equ	0xFE2
 18796                           fsr1l	equ	0xFE1
 18797                           indf2	equ	0xFDF
 18798                           postinc2	equ	0xFDE
 18799                           fsr2h	equ	0xFDA
 18800                           fsr2l	equ	0xFD9
 18801                           status	equ	0xFD8
 18802                           
 18803 ;; *************** function _strcpy *****************
 18804 ;; Defined at:
 18805 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 18806 ;; Parameters:    Size  Location     Type
 18807 ;;  to              2   23[BANK1 ] PTR unsigned char 
 18808 ;;		 -> ringBufferLUT@channel_name(22), 
 18809 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 18810 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 18811 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 18814 ;;		 -> ringBufferLUT@channel_name(22), 
 18815 ;; Return value:  Size  Location     Type
 18816 ;;                  2   23[BANK1 ] PTR unsigned char 
 18817 ;; Registers used:
 18818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18819 ;; Tracked objects:
 18820 ;;		On entry : 0/0
 18821 ;;		On exit  : 0/0
 18822 ;;		Unchanged: 0/0
 18823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18824 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18825 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18827 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18828 ;;Total ram usage:        6 bytes
 18829 ;; Hardware stack levels used:    1
 18830 ;; Hardware stack levels required when called:   13
 18831 ;; This function calls:
 18832 ;;		Nothing
 18833 ;; This function is called by:
 18834 ;;		_ringBufferLUT
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           	psect	text13
 18839  0193A0                     __ptext13:
 18840                           	opt stack 0
 18841  0193A0                     _strcpy:
 18842                           	opt stack 15
 18843                           
 18844                           ; BSR set to: 1
 18845                           ;incstack = 0
 18846  0193A0  C117  F11B         	movff	strcpy@to,strcpy@cp
 18847  0193A4  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 18848  0193A8  D005               	goto	l2492
 18849  0193AA  0101               	movlb	1	; () banked
 18850  0193AC  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 18851  0193AE  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 18852  0193B0  4B19               	infsnz	strcpy@from& (0+255),f,b
 18853  0193B2  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 18854  0193B4                     l2492:
 18855                           
 18856                           ; BSR set to: 1
 18857  0193B4  C119  FFF6         	movff	strcpy@from,tblptrl
 18858  0193B8  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 18859  0193BC                     	if	0	;tblptru may be non-zero
 18860  0193BC                     	endif
 18861  0193BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18862  0193BC  0E00               	movlw	low (__mediumconst shr (0+16))
 18863  0193BE  6EF8               	movwf	tblptru,c
 18864  0193C0                     	endif
 18865  0193C0  C11B  FFD9         	movff	strcpy@cp,fsr2l
 18866  0193C4  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 18867  0193C8  0008               	tblrd		*
 18868  0193CA  CFF5 FFDF          	movff	tablat,indf2
 18869  0193CE  50DF               	movf	indf2,w,c
 18870  0193D0  B4D8               	btfsc	status,2,c
 18871  0193D2  0012               	return	
 18872  0193D4  D7EA               	goto	l2493
 18873  0193D6                     __end_of_strcpy:
 18874                           	opt stack 0
 18875                           tblptru	equ	0xFF8
 18876                           tblptrh	equ	0xFF7
 18877                           tblptrl	equ	0xFF6
 18878                           tablat	equ	0xFF5
 18879                           intcon	equ	0xFF2
 18880                           indf0	equ	0xFEF
 18881                           postinc0	equ	0xFEE
 18882                           fsr0h	equ	0xFEA
 18883                           fsr0l	equ	0xFE9
 18884                           wreg	equ	0xFE8
 18885                           indf1	equ	0xFE7
 18886                           postdec1	equ	0xFE5
 18887                           fsr1h	equ	0xFE2
 18888                           fsr1l	equ	0xFE1
 18889                           indf2	equ	0xFDF
 18890                           postinc2	equ	0xFDE
 18891                           fsr2h	equ	0xFDA
 18892                           fsr2l	equ	0xFD9
 18893                           status	equ	0xFD8
 18894                           
 18895 ;; *************** function _strcmp *****************
 18896 ;; Defined at:
 18897 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 18898 ;; Parameters:    Size  Location     Type
 18899 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 18900 ;;		 -> line(64), 
 18901 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 18902 ;;		 -> STR_157(11), STR_150(5), STR_148(9), STR_146(29), 
 18903 ;;		 -> STR_144(34), STR_142(33), STR_140(29), STR_138(17), 
 18904 ;;		 -> STR_136(17), STR_134(14), STR_132(19), STR_130(20), 
 18905 ;;		 -> STR_128(11), STR_126(17), STR_124(14), STR_122(16), 
 18906 ;;		 -> STR_113(13), STR_109(17), STR_106(14), STR_104(12), 
 18907 ;;		 -> STR_102(16), STR_100(17), STR_95(15), STR_93(13), 
 18908 ;;		 -> STR_91(16), STR_89(15), STR_87(21), STR_85(21), 
 18909 ;;		 -> STR_83(26), STR_81(14), STR_79(13), STR_77(18), 
 18910 ;;		 -> STR_75(15), STR_73(16), STR_71(16), STR_60(11), 
 18911 ;;		 -> STR_57(10), STR_55(13), STR_53(11), STR_50(4), 
 18912 ;;		 -> STR_49(6), STR_47(16), STR_44(6), STR_41(6), 
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;  r               1   28[BANK1 ] char 
 18915 ;; Return value:  Size  Location     Type
 18916 ;;                  2   23[BANK1 ] int 
 18917 ;; Registers used:
 18918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18919 ;; Tracked objects:
 18920 ;;		On entry : 0/0
 18921 ;;		On exit  : 0/0
 18922 ;;		Unchanged: 0/0
 18923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18924 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18925 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18926 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18927 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18928 ;;Total ram usage:        6 bytes
 18929 ;; Hardware stack levels used:    1
 18930 ;; Hardware stack levels required when called:   13
 18931 ;; This function calls:
 18932 ;;		Nothing
 18933 ;; This function is called by:
 18934 ;;		_ringBufferLUT
 18935 ;; This function uses a non-reentrant model
 18936 ;;
 18937                           
 18938                           	psect	text14
 18939  018E36                     __ptext14:
 18940                           	opt stack 0
 18941  018E36                     _strcmp:
 18942                           	opt stack 15
 18943                           
 18944                           ;incstack = 0
 18945  018E36  D005               	goto	l2484
 18946  018E38  0101               	movlb	1	; () banked
 18947  018E3A  4B17               	infsnz	strcmp@s1& (0+255),f,b
 18948  018E3C  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 18949  018E3E  4B19               	infsnz	strcmp@s2& (0+255),f,b
 18950  018E40  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 18951  018E42                     l2484:
 18952                           
 18953                           ; BSR set to: 1
 18954  018E42  C117  FFD9         	movff	strcmp@s1,fsr2l
 18955  018E46  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 18956  018E4A  50DF               	movf	indf2,w,c
 18957  018E4C  0101               	movlb	1	; () banked
 18958  018E4E  6F1B               	movwf	??_strcmp& (0+255),b
 18959  018E50  C119  FFF6         	movff	strcmp@s2,tblptrl
 18960  018E54  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 18961  018E58                     	if	0	;tblptru may be non-zero
 18962  018E58                     	endif
 18963  018E58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18964  018E58  0E00               	movlw	low (__mediumconst shr (0+16))
 18965  018E5A  6EF8               	movwf	tblptru,c
 18966  018E5C                     	endif
 18967  018E5C  0008               	tblrd		*
 18968  018E5E  50F5               	movf	tablat,w,c
 18969  018E60  0800               	sublw	0
 18970  018E62  251B               	addwf	??_strcmp& (0+255),w,b
 18971  018E64  6F1C               	movwf	strcmp@r& (0+255),b
 18972  018E66  511C               	movf	strcmp@r& (0+255),w,b
 18973  018E68  A4D8               	btfss	status,2,c
 18974  018E6A  D007               	goto	u26420
 18975                           
 18976                           ; BSR set to: 1
 18977  018E6C  C117  FFD9         	movff	strcmp@s1,fsr2l
 18978  018E70  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 18979  018E74  50DF               	movf	indf2,w,c
 18980  018E76  A4D8               	btfss	status,2,c
 18981  018E78  D7DF               	goto	l2485
 18982  018E7A                     u26420:
 18983                           
 18984                           ; BSR set to: 1
 18985                           
 18986                           ; BSR set to: 1
 18987                           
 18988                           ; BSR set to: 1
 18989  018E7A  511C               	movf	strcmp@r& (0+255),w,b
 18990  018E7C  6F17               	movwf	?_strcmp& (0+255),b
 18991  018E7E  6B18               	clrf	(?_strcmp+1)& (0+255),b
 18992  018E80  BF17               	btfsc	?_strcmp& (0+255),7,b
 18993  018E82  0718               	decf	(?_strcmp+1)& (0+255),f,b
 18994  018E84  0012               	return	
 18995  018E86                     __end_of_strcmp:
 18996                           	opt stack 0
 18997                           tblptru	equ	0xFF8
 18998                           tblptrh	equ	0xFF7
 18999                           tblptrl	equ	0xFF6
 19000                           tablat	equ	0xFF5
 19001                           intcon	equ	0xFF2
 19002                           indf0	equ	0xFEF
 19003                           postinc0	equ	0xFEE
 19004                           fsr0h	equ	0xFEA
 19005                           fsr0l	equ	0xFE9
 19006                           wreg	equ	0xFE8
 19007                           indf1	equ	0xFE7
 19008                           postdec1	equ	0xFE5
 19009                           fsr1h	equ	0xFE2
 19010                           fsr1l	equ	0xFE1
 19011                           indf2	equ	0xFDF
 19012                           postinc2	equ	0xFDE
 19013                           fsr2h	equ	0xFDA
 19014                           fsr2l	equ	0xFD9
 19015                           status	equ	0xFD8
 19016                           
 19017 ;; *************** function _getUserID *****************
 19018 ;; Defined at:
 19019 ;;		line 65 in file "device_IDs.c"
 19020 ;; Parameters:    Size  Location     Type
 19021 ;;  inputUserID     1    wreg     unsigned char 
 19022 ;; Auto vars:     Size  Location     Type
 19023 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 19024 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 19025 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 19026 ;; Return value:  Size  Location     Type
 19027 ;;                  2   34[BANK1 ] unsigned int 
 19028 ;; Registers used:
 19029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19030 ;; Tracked objects:
 19031 ;;		On entry : 0/0
 19032 ;;		On exit  : 0/0
 19033 ;;		Unchanged: 0/0
 19034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19035 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19036 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19038 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19039 ;;Total ram usage:        8 bytes
 19040 ;; Hardware stack levels used:    1
 19041 ;; Hardware stack levels required when called:   15
 19042 ;; This function calls:
 19043 ;;		_FLASH_ReadWord
 19044 ;; This function is called by:
 19045 ;;		_ringBufferLUT
 19046 ;; This function uses a non-reentrant model
 19047 ;;
 19048                           
 19049                           	psect	text15
 19050  01917A                     __ptext15:
 19051                           	opt stack 0
 19052  01917A                     _getUserID:
 19053                           	opt stack 13
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;incstack = 0
 19057                           ;getUserID@inputUserID stored from wreg
 19058  01917A  0101               	movlb	1	; () banked
 19059  01917C  6F24               	movwf	getUserID@inputUserID& (0+255),b
 19060                           
 19061                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 19062  01917E  0E00               	movlw	0
 19063  019180  0101               	movlb	1	; () banked
 19064  019182  6F25               	movwf	getUserID@initialOffset& (0+255),b
 19065  019184  0E00               	movlw	0
 19066  019186  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 19067  019188  0E20               	movlw	32
 19068  01918A  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 19069  01918C  0E00               	movlw	0
 19070  01918E  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 19071                           
 19072                           ; BSR set to: 1
 19073                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 19074  019190  5124               	movf	getUserID@inputUserID& (0+255),w,b
 19075  019192  0D02               	mullw	2
 19076  019194  CFF3 F129          	movff	prodl,getUserID@IDOffset
 19077                           
 19078                           ; BSR set to: 1
 19079                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 19080  019198  5129               	movf	getUserID@IDOffset& (0+255),w,b
 19081  01919A  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 19082  01919C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 19083  01919E  0E00               	movlw	0
 19084  0191A0  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 19085  0191A2  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 19086  0191A4  0E00               	movlw	0
 19087  0191A6  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 19088  0191A8  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 19089  0191AA  0E00               	movlw	0
 19090  0191AC  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 19091  0191AE  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 19092  0191B0  ECDF  F0C8         	call	_FLASH_ReadWord	;wreg free
 19093  0191B4  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 19094  0191B8  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 19095  0191BC  0012               	return	
 19096  0191BE                     __end_of_getUserID:
 19097                           	opt stack 0
 19098                           tblptru	equ	0xFF8
 19099                           tblptrh	equ	0xFF7
 19100                           tblptrl	equ	0xFF6
 19101                           tablat	equ	0xFF5
 19102                           prodl	equ	0xFF3
 19103                           intcon	equ	0xFF2
 19104                           indf0	equ	0xFEF
 19105                           postinc0	equ	0xFEE
 19106                           fsr0h	equ	0xFEA
 19107                           fsr0l	equ	0xFE9
 19108                           wreg	equ	0xFE8
 19109                           indf1	equ	0xFE7
 19110                           postdec1	equ	0xFE5
 19111                           fsr1h	equ	0xFE2
 19112                           fsr1l	equ	0xFE1
 19113                           indf2	equ	0xFDF
 19114                           postinc2	equ	0xFDE
 19115                           fsr2h	equ	0xFDA
 19116                           fsr2l	equ	0xFD9
 19117                           status	equ	0xFD8
 19118                           
 19119 ;; *************** function _getMinorRevisionID *****************
 19120 ;; Defined at:
 19121 ;;		line 23 in file "device_IDs.c"
 19122 ;; Parameters:    Size  Location     Type
 19123 ;;		None
 19124 ;; Auto vars:     Size  Location     Type
 19125 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 19126 ;; Return value:  Size  Location     Type
 19127 ;;                  1    wreg      unsigned char 
 19128 ;; Registers used:
 19129 ;;		wreg, status,2, status,0, cstack
 19130 ;; Tracked objects:
 19131 ;;		On entry : 0/0
 19132 ;;		On exit  : 0/0
 19133 ;;		Unchanged: 0/0
 19134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19136 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19138 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19139 ;;Total ram usage:        2 bytes
 19140 ;; Hardware stack levels used:    1
 19141 ;; Hardware stack levels required when called:   15
 19142 ;; This function calls:
 19143 ;;		_FLASH_ReadWord
 19144 ;; This function is called by:
 19145 ;;		_ringBufferLUT
 19146 ;; This function uses a non-reentrant model
 19147 ;;
 19148                           
 19149                           	psect	text16
 19150  01963C                     __ptext16:
 19151                           	opt stack 0
 19152  01963C                     _getMinorRevisionID:
 19153                           	opt stack 13
 19154                           
 19155                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 19156                           
 19157                           ;incstack = 0
 19158  01963C  0EFC               	movlw	252
 19159  01963E  0101               	movlb	1	; () banked
 19160  019640  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 19161  019642  0EFF               	movlw	255
 19162  019644  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 19163  019646  0E3F               	movlw	63
 19164  019648  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 19165  01964A  0E00               	movlw	0
 19166  01964C  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 19167  01964E  ECDF  F0C8         	call	_FLASH_ReadWord	;wreg free
 19168  019652  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 19169  019656  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 19170                           
 19171                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 19172  01965A  0101               	movlb	1	; () banked
 19173  01965C  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 19174  01965E  0B1F               	andlw	31
 19175  019660  0012               	return	
 19176  019662                     __end_of_getMinorRevisionID:
 19177                           	opt stack 0
 19178                           tblptru	equ	0xFF8
 19179                           tblptrh	equ	0xFF7
 19180                           tblptrl	equ	0xFF6
 19181                           tablat	equ	0xFF5
 19182                           prodl	equ	0xFF3
 19183                           intcon	equ	0xFF2
 19184                           indf0	equ	0xFEF
 19185                           postinc0	equ	0xFEE
 19186                           fsr0h	equ	0xFEA
 19187                           fsr0l	equ	0xFE9
 19188                           wreg	equ	0xFE8
 19189                           indf1	equ	0xFE7
 19190                           postdec1	equ	0xFE5
 19191                           fsr1h	equ	0xFE2
 19192                           fsr1l	equ	0xFE1
 19193                           indf2	equ	0xFDF
 19194                           postinc2	equ	0xFDE
 19195                           fsr2h	equ	0xFDA
 19196                           fsr2l	equ	0xFD9
 19197                           status	equ	0xFD8
 19198                           
 19199 ;; *************** function _getMajorRevisionID *****************
 19200 ;; Defined at:
 19201 ;;		line 12 in file "device_IDs.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;		None
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      unsigned char 
 19208 ;; Registers used:
 19209 ;;		wreg, status,2, status,0, cstack
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19216 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19217 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19218 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19219 ;;Total ram usage:        5 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; Hardware stack levels required when called:   15
 19222 ;; This function calls:
 19223 ;;		_FLASH_ReadWord
 19224 ;; This function is called by:
 19225 ;;		_ringBufferLUT
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text17
 19230  01927E                     __ptext17:
 19231                           	opt stack 0
 19232  01927E                     _getMajorRevisionID:
 19233                           	opt stack 13
 19234                           
 19235                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 19236                           
 19237                           ; BSR set to: 1
 19238                           ;incstack = 0
 19239  01927E  0EFC               	movlw	252
 19240  019280  0101               	movlb	1	; () banked
 19241  019282  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 19242  019284  0EFF               	movlw	255
 19243  019286  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 19244  019288  0E3F               	movlw	63
 19245  01928A  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 19246  01928C  0E00               	movlw	0
 19247  01928E  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 19248  019290  ECDF  F0C8         	call	_FLASH_ReadWord	;wreg free
 19249  019294  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 19250  019298  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 19251                           
 19252                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 19253  01929C  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 19254  0192A0  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 19255  0192A4  0E06               	movlw	6
 19256  0192A6  0101               	movlb	1	; () banked
 19257  0192A8  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 19258  0192AA                     u26455:
 19259  0192AA  90D8               	bcf	status,0,c
 19260  0192AC  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 19261  0192AE  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 19262  0192B0  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 19263  0192B2  D7FB               	goto	u26455
 19264  0192B4  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 19265  0192B6  0B1F               	andlw	31
 19266  0192B8  0012               	return	
 19267  0192BA                     __end_of_getMajorRevisionID:
 19268                           	opt stack 0
 19269                           tblptru	equ	0xFF8
 19270                           tblptrh	equ	0xFF7
 19271                           tblptrl	equ	0xFF6
 19272                           tablat	equ	0xFF5
 19273                           prodl	equ	0xFF3
 19274                           intcon	equ	0xFF2
 19275                           indf0	equ	0xFEF
 19276                           postinc0	equ	0xFEE
 19277                           fsr0h	equ	0xFEA
 19278                           fsr0l	equ	0xFE9
 19279                           wreg	equ	0xFE8
 19280                           indf1	equ	0xFE7
 19281                           postdec1	equ	0xFE5
 19282                           fsr1h	equ	0xFE2
 19283                           fsr1l	equ	0xFE1
 19284                           indf2	equ	0xFDF
 19285                           postinc2	equ	0xFDE
 19286                           fsr2h	equ	0xFDA
 19287                           fsr2l	equ	0xFD9
 19288                           status	equ	0xFD8
 19289                           
 19290 ;; *************** function _getDeviceIDString *****************
 19291 ;; Defined at:
 19292 ;;		line 34 in file "device_IDs.c"
 19293 ;; Parameters:    Size  Location     Type
 19294 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 19297 ;;		 -> STR_165(10), STR_164(13), STR_163(12), 
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  2   36[BANK1 ] PTR inline unsigned char
 19300 ;; Registers used:
 19301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19307 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19308 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19309 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19310 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19311 ;;Total ram usage:       10 bytes
 19312 ;; Hardware stack levels used:    1
 19313 ;; Hardware stack levels required when called:   13
 19314 ;; This function calls:
 19315 ;;		Nothing
 19316 ;; This function is called by:
 19317 ;;		_ringBufferLUT
 19318 ;; This function uses a non-reentrant model
 19319 ;;
 19320                           
 19321                           	psect	text18
 19322  018C26                     __ptext18:
 19323                           	opt stack 0
 19324  018C26                     _getDeviceIDString:
 19325                           	opt stack 15
 19326                           
 19327                           ;device_IDs.c: 37: const char *strings[] = {
 19328                           ;device_IDs.c: 39: "PIC18F67K40",
 19329                           ;device_IDs.c: 40: "PIC18LF67K40",
 19330                           ;device_IDs.c: 41: "Undefined"
 19331                           ;device_IDs.c: 43: };
 19332                           
 19333                           ; BSR set to: 1
 19334                           ;incstack = 0
 19335  018C26  EE22  F0EB         	lfsr	2,getDeviceIDString@F17550
 19336  018C2A  EE11  F028         	lfsr	1,getDeviceIDString@strings
 19337  018C2E  0E05               	movlw	5
 19338  018C30                     u26441:
 19339  018C30  CFDB FFE3          	movff	plusw2,plusw1
 19340  018C34  06E8               	decf	wreg,f,c
 19341  018C36  E2FC               	bc	u26441
 19342                           
 19343                           ;device_IDs.c: 47: switch (inputDevID) {
 19344  018C38  D00F               	goto	l1558
 19345  018C3A                     
 19346                           ;device_IDs.c: 50: return strings[0];
 19347  018C3A  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 19348  018C3E  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 19349                           
 19350                           ;device_IDs.c: 51: break;
 19351  018C42  0012               	return	
 19352  018C44                     
 19353                           ;device_IDs.c: 54: return strings[1];
 19354  018C44  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 19355  018C48  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 19356                           
 19357                           ;device_IDs.c: 55: break;
 19358  018C4C  0012               	return	
 19359  018C4E                     
 19360                           ;device_IDs.c: 58: return strings[2];
 19361  018C4E  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 19362  018C52  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 19363                           
 19364                           ;device_IDs.c: 61: }
 19365                           
 19366                           ;device_IDs.c: 59: break;
 19367  018C56  0012               	return	
 19368  018C58                     l1558:
 19369  018C58  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 19370  018C5C  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 19371                           
 19372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19373                           ; Switch size 1, requested type "space"
 19374                           ; Number of cases is 2, Range of values is 106 to 107
 19375                           ; switch strategies available:
 19376                           ; Name         Instructions Cycles
 19377                           ; simple_byte            7     4 (average)
 19378                           ;	Chosen strategy is simple_byte
 19379  018C60  0101               	movlb	1	; () banked
 19380  018C62  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 19381  018C64  0A6A               	xorlw	106	; case 106
 19382  018C66  B4D8               	btfsc	status,2,c
 19383  018C68  D004               	goto	l20915
 19384  018C6A  0A01               	xorlw	1	; case 107
 19385  018C6C  B4D8               	btfsc	status,2,c
 19386  018C6E  D006               	goto	l20917
 19387  018C70  D7EE               	goto	l1563
 19388  018C72                     l20915:
 19389                           
 19390                           ; BSR set to: 1
 19391                           ; Switch size 1, requested type "space"
 19392                           ; Number of cases is 1, Range of values is 192 to 192
 19393                           ; switch strategies available:
 19394                           ; Name         Instructions Cycles
 19395                           ; simple_byte            4     3 (average)
 19396                           ;	Chosen strategy is simple_byte
 19397  018C72  5126               	movf	??_getDeviceIDString& (0+255),w,b
 19398  018C74  0AC0               	xorlw	192	; case 192
 19399  018C76  B4D8               	btfsc	status,2,c
 19400  018C78  D7E0               	goto	l1559
 19401  018C7A  D7E9               	goto	l1563
 19402  018C7C                     l20917:
 19403                           
 19404                           ; BSR set to: 1
 19405                           ; Switch size 1, requested type "space"
 19406                           ; Number of cases is 1, Range of values is 32 to 32
 19407                           ; switch strategies available:
 19408                           ; Name         Instructions Cycles
 19409                           ; simple_byte            4     3 (average)
 19410                           ;	Chosen strategy is simple_byte
 19411  018C7C  5126               	movf	??_getDeviceIDString& (0+255),w,b
 19412  018C7E  0A20               	xorlw	32	; case 32
 19413  018C80  B4D8               	btfsc	status,2,c
 19414  018C82  D7E0               	goto	l1562
 19415  018C84  D7E4               	goto	l1563
 19416  018C86                     __end_of_getDeviceIDString:
 19417                           	opt stack 0
 19418                           tblptru	equ	0xFF8
 19419                           tblptrh	equ	0xFF7
 19420                           tblptrl	equ	0xFF6
 19421                           tablat	equ	0xFF5
 19422                           prodl	equ	0xFF3
 19423                           intcon	equ	0xFF2
 19424                           indf0	equ	0xFEF
 19425                           postinc0	equ	0xFEE
 19426                           fsr0h	equ	0xFEA
 19427                           fsr0l	equ	0xFE9
 19428                           wreg	equ	0xFE8
 19429                           indf1	equ	0xFE7
 19430                           postdec1	equ	0xFE5
 19431                           plusw1	equ	0xFE3
 19432                           fsr1h	equ	0xFE2
 19433                           fsr1l	equ	0xFE1
 19434                           indf2	equ	0xFDF
 19435                           postinc2	equ	0xFDE
 19436                           plusw2	equ	0xFDB
 19437                           fsr2h	equ	0xFDA
 19438                           fsr2l	equ	0xFD9
 19439                           status	equ	0xFD8
 19440                           
 19441 ;; *************** function _getDeviceID *****************
 19442 ;; Defined at:
 19443 ;;		line 4 in file "device_IDs.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;		None
 19446 ;; Auto vars:     Size  Location     Type
 19447 ;;		None
 19448 ;; Return value:  Size  Location     Type
 19449 ;;                  2   34[BANK1 ] unsigned int 
 19450 ;; Registers used:
 19451 ;;		wreg, status,2, status,0, cstack
 19452 ;; Tracked objects:
 19453 ;;		On entry : 0/0
 19454 ;;		On exit  : 0/0
 19455 ;;		Unchanged: 0/0
 19456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19457 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19460 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19461 ;;Total ram usage:        2 bytes
 19462 ;; Hardware stack levels used:    1
 19463 ;; Hardware stack levels required when called:   15
 19464 ;; This function calls:
 19465 ;;		_FLASH_ReadWord
 19466 ;; This function is called by:
 19467 ;;		_ringBufferLUT
 19468 ;; This function uses a non-reentrant model
 19469 ;;
 19470                           
 19471                           	psect	text19
 19472  019762                     __ptext19:
 19473                           	opt stack 0
 19474  019762                     _getDeviceID:
 19475                           	opt stack 13
 19476                           
 19477                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 19478                           
 19479                           ;incstack = 0
 19480  019762  0EFE               	movlw	254
 19481  019764  0101               	movlb	1	; () banked
 19482  019766  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 19483  019768  0EFF               	movlw	255
 19484  01976A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 19485  01976C  0E3F               	movlw	63
 19486  01976E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 19487  019770  0E00               	movlw	0
 19488  019772  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 19489  019774  ECDF  F0C8         	call	_FLASH_ReadWord	;wreg free
 19490  019778  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 19491  01977C  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 19492  019780  0012               	return	
 19493  019782                     __end_of_getDeviceID:
 19494                           	opt stack 0
 19495                           tblptru	equ	0xFF8
 19496                           tblptrh	equ	0xFF7
 19497                           tblptrl	equ	0xFF6
 19498                           tablat	equ	0xFF5
 19499                           prodl	equ	0xFF3
 19500                           intcon	equ	0xFF2
 19501                           indf0	equ	0xFEF
 19502                           postinc0	equ	0xFEE
 19503                           fsr0h	equ	0xFEA
 19504                           fsr0l	equ	0xFE9
 19505                           wreg	equ	0xFE8
 19506                           indf1	equ	0xFE7
 19507                           postdec1	equ	0xFE5
 19508                           plusw1	equ	0xFE3
 19509                           fsr1h	equ	0xFE2
 19510                           fsr1l	equ	0xFE1
 19511                           indf2	equ	0xFDF
 19512                           postinc2	equ	0xFDE
 19513                           plusw2	equ	0xFDB
 19514                           fsr2h	equ	0xFDA
 19515                           fsr2l	equ	0xFD9
 19516                           status	equ	0xFD8
 19517                           
 19518 ;; *************** function _FLASH_ReadWord *****************
 19519 ;; Defined at:
 19520 ;;		line 71 in file "mcc_generated_files/memory.c"
 19521 ;; Parameters:    Size  Location     Type
 19522 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 19523 ;; Auto vars:     Size  Location     Type
 19524 ;;		None
 19525 ;; Return value:  Size  Location     Type
 19526 ;;                  2   27[BANK1 ] unsigned int 
 19527 ;; Registers used:
 19528 ;;		wreg, status,2, status,0, cstack
 19529 ;; Tracked objects:
 19530 ;;		On entry : 0/0
 19531 ;;		On exit  : 0/0
 19532 ;;		Unchanged: 0/0
 19533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19534 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19536 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19537 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19538 ;;Total ram usage:        7 bytes
 19539 ;; Hardware stack levels used:    1
 19540 ;; Hardware stack levels required when called:   14
 19541 ;; This function calls:
 19542 ;;		_FLASH_ReadByte
 19543 ;; This function is called by:
 19544 ;;		_getDeviceID
 19545 ;;		_getMajorRevisionID
 19546 ;;		_getMinorRevisionID
 19547 ;;		_getUserID
 19548 ;; This function uses a non-reentrant model
 19549 ;;
 19550                           
 19551                           	psect	text20
 19552  0191BE                     __ptext20:
 19553                           	opt stack 0
 19554  0191BE                     _FLASH_ReadWord:
 19555                           	opt stack 13
 19556                           
 19557                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 19558                           
 19559                           ;incstack = 0
 19560  0191BE  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 19561  0191C2  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 19562  0191C6  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 19563  0191CA  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 19564  0191CE  EC09  F0CC         	call	_FLASH_ReadByte	;wreg free
 19565  0191D2  0101               	movlb	1	; () banked
 19566  0191D4  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 19567  0191D6  0E01               	movlw	1
 19568  0191D8  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 19569  0191DA  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 19570  0191DC  0E00               	movlw	0
 19571  0191DE  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 19572  0191E0  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 19573  0191E2  0E00               	movlw	0
 19574  0191E4  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 19575  0191E6  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 19576  0191E8  0E00               	movlw	0
 19577  0191EA  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 19578  0191EC  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 19579  0191EE  EC09  F0CC         	call	_FLASH_ReadByte	;wreg free
 19580  0191F2  0101               	movlb	1	; () banked
 19581  0191F4  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 19582  0191F6  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 19583  0191F8  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 19584  0191FA  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 19585  0191FE  0012               	return	
 19586  019200                     __end_of_FLASH_ReadWord:
 19587                           	opt stack 0
 19588                           tblptru	equ	0xFF8
 19589                           tblptrh	equ	0xFF7
 19590                           tblptrl	equ	0xFF6
 19591                           tablat	equ	0xFF5
 19592                           prodl	equ	0xFF3
 19593                           intcon	equ	0xFF2
 19594                           indf0	equ	0xFEF
 19595                           postinc0	equ	0xFEE
 19596                           fsr0h	equ	0xFEA
 19597                           fsr0l	equ	0xFE9
 19598                           wreg	equ	0xFE8
 19599                           indf1	equ	0xFE7
 19600                           postdec1	equ	0xFE5
 19601                           plusw1	equ	0xFE3
 19602                           fsr1h	equ	0xFE2
 19603                           fsr1l	equ	0xFE1
 19604                           indf2	equ	0xFDF
 19605                           postinc2	equ	0xFDE
 19606                           plusw2	equ	0xFDB
 19607                           fsr2h	equ	0xFDA
 19608                           fsr2l	equ	0xFD9
 19609                           status	equ	0xFD8
 19610                           
 19611 ;; *************** function _FLASH_ReadByte *****************
 19612 ;; Defined at:
 19613 ;;		line 59 in file "mcc_generated_files/memory.c"
 19614 ;; Parameters:    Size  Location     Type
 19615 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 19616 ;; Auto vars:     Size  Location     Type
 19617 ;;		None
 19618 ;; Return value:  Size  Location     Type
 19619 ;;                  1    wreg      unsigned char 
 19620 ;; Registers used:
 19621 ;;		wreg, status,2
 19622 ;; Tracked objects:
 19623 ;;		On entry : 0/0
 19624 ;;		On exit  : 0/0
 19625 ;;		Unchanged: 0/0
 19626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19627 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19630 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19631 ;;Total ram usage:        4 bytes
 19632 ;; Hardware stack levels used:    1
 19633 ;; Hardware stack levels required when called:   13
 19634 ;; This function calls:
 19635 ;;		Nothing
 19636 ;; This function is called by:
 19637 ;;		_FLASH_ReadWord
 19638 ;;		_FLASH_WriteByte
 19639 ;; This function uses a non-reentrant model
 19640 ;;
 19641                           
 19642                           	psect	text21
 19643  019812                     __ptext21:
 19644                           	opt stack 0
 19645  019812                     _FLASH_ReadByte:
 19646                           	opt stack 13
 19647                           
 19648                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 19649                           
 19650                           ; BSR set to: 1
 19651                           ;incstack = 0
 19652  019812  5077               	movf	3959,w,c	;volsfr
 19653  019814  0B3F               	andlw	-193
 19654  019816  0980               	iorlw	128
 19655  019818  6E77               	movwf	3959,c	;volsfr
 19656                           
 19657                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 19658  01981A  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 19659                           
 19660                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 19661  01981E  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 19662                           
 19663                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 19664  019822  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 19665  019826  0008               	tblrd		*	;# 
 19666                           
 19667                           ;memory.c: 68: return (TABLAT);
 19668  019828  50F5               	movf	tablat,w,c	;volatile
 19669  01982A  0012               	return	
 19670  01982C                     __end_of_FLASH_ReadByte:
 19671                           	opt stack 0
 19672                           tblptru	equ	0xFF8
 19673                           tblptrh	equ	0xFF7
 19674                           tblptrl	equ	0xFF6
 19675                           tablat	equ	0xFF5
 19676                           prodl	equ	0xFF3
 19677                           intcon	equ	0xFF2
 19678                           indf0	equ	0xFEF
 19679                           postinc0	equ	0xFEE
 19680                           fsr0h	equ	0xFEA
 19681                           fsr0l	equ	0xFE9
 19682                           wreg	equ	0xFE8
 19683                           indf1	equ	0xFE7
 19684                           postdec1	equ	0xFE5
 19685                           plusw1	equ	0xFE3
 19686                           fsr1h	equ	0xFE2
 19687                           fsr1l	equ	0xFE1
 19688                           indf2	equ	0xFDF
 19689                           postinc2	equ	0xFDE
 19690                           plusw2	equ	0xFDB
 19691                           fsr2h	equ	0xFDA
 19692                           fsr2l	equ	0xFD9
 19693                           status	equ	0xFD8
 19694                           
 19695 ;; *************** function _getCauseOfResetString *****************
 19696 ;; Defined at:
 19697 ;;		line 81 in file "cause_of_reset.c"
 19698 ;; Parameters:    Size  Location     Type
 19699 ;;  r               1    wreg     enum E17455
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;  r               1   25[BANK1 ] enum E17455
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  2   23[BANK1 ] PTR inline unsigned char
 19704 ;; Registers used:
 19705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/0
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19711 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19712 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19714 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19715 ;;Total ram usage:        3 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:   13
 19718 ;; This function calls:
 19719 ;;		Nothing
 19720 ;; This function is called by:
 19721 ;;		_ringBufferLUT
 19722 ;; This function uses a non-reentrant model
 19723 ;;
 19724                           
 19725                           	psect	text22
 19726  0194DC                     __ptext22:
 19727                           	opt stack 0
 19728  0194DC                     _getCauseOfResetString:
 19729                           	opt stack 15
 19730                           
 19731                           ;incstack = 0
 19732                           ;getCauseOfResetString@r stored from wreg
 19733  0194DC  0101               	movlb	1	; () banked
 19734  0194DE  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 19735                           
 19736                           ;cause_of_reset.c: 84: static char *strings[] = {
 19737                           ;cause_of_reset.c: 85: "Undefined Reset",
 19738                           ;cause_of_reset.c: 86: "Power On Reset",
 19739                           ;cause_of_reset.c: 87: "Brown Out Reset",
 19740                           ;cause_of_reset.c: 88: "Master Clear Reset",
 19741                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 19742                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 19743                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 19744                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 19745                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 19746                           ;cause_of_reset.c: 94: };
 19747  0194E0  0E09               	movlw	9
 19748  0194E2  0101               	movlb	1	; () banked
 19749  0194E4  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 19750  0194E6  D00D               	goto	l1590
 19751                           
 19752                           ; BSR set to: 1
 19753                           ;cause_of_reset.c: 99: return strings[r];
 19754  0194E8  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 19755  0194EA  0D02               	mullw	2
 19756  0194EC  0ED9               	movlw	low getCauseOfResetString@strings
 19757  0194EE  24F3               	addwf	prodl,w,c
 19758  0194F0  6ED9               	movwf	fsr2l,c
 19759  0194F2  0E02               	movlw	high getCauseOfResetString@strings
 19760  0194F4  20F4               	addwfc	prodh,w,c
 19761  0194F6  6EDA               	movwf	fsr2h,c
 19762  0194F8  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 19763  0194FC  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 19764                           
 19765                           ; BSR set to: 1
 19766                           ;cause_of_reset.c: 101: }
 19767                           
 19768                           ; BSR set to: 1
 19769  019500  0012               	return	
 19770  019502                     l1590:
 19771                           
 19772                           ; BSR set to: 1
 19773                           ;cause_of_reset.c: 103: else {
 19774                           ;cause_of_reset.c: 105: return "Undefined Reset";
 19775                           
 19776                           ; BSR set to: 1
 19777  019502  0EB9               	movlw	low STR_166
 19778  019504  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 19779  019506  0EFD               	movlw	high STR_166
 19780  019508  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 19781                           
 19782                           ; BSR set to: 1
 19783  01950A  0012               	return	
 19784  01950C                     __end_of_getCauseOfResetString:
 19785                           	opt stack 0
 19786                           tblptru	equ	0xFF8
 19787                           tblptrh	equ	0xFF7
 19788                           tblptrl	equ	0xFF6
 19789                           tablat	equ	0xFF5
 19790                           prodh	equ	0xFF4
 19791                           prodl	equ	0xFF3
 19792                           intcon	equ	0xFF2
 19793                           indf0	equ	0xFEF
 19794                           postinc0	equ	0xFEE
 19795                           fsr0h	equ	0xFEA
 19796                           fsr0l	equ	0xFE9
 19797                           wreg	equ	0xFE8
 19798                           indf1	equ	0xFE7
 19799                           postdec1	equ	0xFE5
 19800                           plusw1	equ	0xFE3
 19801                           fsr1h	equ	0xFE2
 19802                           fsr1l	equ	0xFE1
 19803                           indf2	equ	0xFDF
 19804                           postinc2	equ	0xFDE
 19805                           postdec2	equ	0xFDD
 19806                           plusw2	equ	0xFDB
 19807                           fsr2h	equ	0xFDA
 19808                           fsr2l	equ	0xFD9
 19809                           status	equ	0xFD8
 19810                           
 19811 ;; *************** function _atoi *****************
 19812 ;; Defined at:
 19813 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 19814 ;; Parameters:    Size  Location     Type
 19815 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 19816 ;;		 -> ringBufferLUT@arg_buff(3), 
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;  a               2   34[BANK1 ] int 
 19819 ;;  sign            1   33[BANK1 ] unsigned char 
 19820 ;; Return value:  Size  Location     Type
 19821 ;;                  2   29[BANK1 ] int 
 19822 ;; Registers used:
 19823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19824 ;; Tracked objects:
 19825 ;;		On entry : 0/0
 19826 ;;		On exit  : 0/0
 19827 ;;		Unchanged: 0/0
 19828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19829 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19830 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19831 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19832 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19833 ;;Total ram usage:        7 bytes
 19834 ;; Hardware stack levels used:    1
 19835 ;; Hardware stack levels required when called:   14
 19836 ;; This function calls:
 19837 ;;		___wmul
 19838 ;;		_isdigit
 19839 ;; This function is called by:
 19840 ;;		_ringBufferLUT
 19841 ;; This function uses a non-reentrant model
 19842 ;;
 19843                           
 19844                           	psect	text23
 19845  0180F0                     __ptext23:
 19846                           	opt stack 0
 19847  0180F0                     _atoi:
 19848                           	opt stack 14
 19849                           
 19850                           ; BSR set to: 1
 19851                           ;incstack = 0
 19852  0180F0  D003               	goto	l1986
 19853  0180F2  0101               	movlb	1	; () banked
 19854  0180F4  4B1D               	infsnz	atoi@s& (0+255),f,b
 19855  0180F6  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 19856  0180F8                     l1986:
 19857                           
 19858                           ; BSR set to: 1
 19859  0180F8  C11D  FFD9         	movff	atoi@s,fsr2l
 19860  0180FC  C11E  FFDA         	movff	atoi@s+1,fsr2h
 19861  018100  0E20               	movlw	32
 19862  018102  18DE               	xorwf	postinc2,w,c
 19863  018104  B4D8               	btfsc	status,2,c
 19864  018106  D7F5               	goto	l1987
 19865  018108  C11D  FFD9         	movff	atoi@s,fsr2l
 19866  01810C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 19867  018110  0E09               	movlw	9
 19868  018112  18DE               	xorwf	postinc2,w,c
 19869  018114  B4D8               	btfsc	status,2,c
 19870  018116  D7ED               	goto	l1987
 19871  018118  0E00               	movlw	0
 19872  01811A  0101               	movlb	1	; () banked
 19873  01811C  6F23               	movwf	(atoi@a+1)& (0+255),b
 19874  01811E  0E00               	movlw	0
 19875  018120  6F22               	movwf	atoi@a& (0+255),b
 19876  018122  0E00               	movlw	0
 19877  018124  6F21               	movwf	atoi@sign& (0+255),b
 19878                           
 19879                           ; BSR set to: 1
 19880  018126  C11D  FFD9         	movff	atoi@s,fsr2l
 19881  01812A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 19882  01812E  0E2D               	movlw	45
 19883  018130  18DE               	xorwf	postinc2,w,c
 19884  018132  A4D8               	btfss	status,2,c
 19885  018134  D002               	goto	l1989
 19886                           
 19887                           ; BSR set to: 1
 19888  018136  2B21               	incf	atoi@sign& (0+255),f,b
 19889  018138  D026               	goto	l20119
 19890  01813A                     l1989:
 19891                           
 19892                           ; BSR set to: 1
 19893                           
 19894                           ; BSR set to: 1
 19895  01813A  C11D  FFD9         	movff	atoi@s,fsr2l
 19896  01813E  C11E  FFDA         	movff	atoi@s+1,fsr2h
 19897  018142  0E2B               	movlw	43
 19898  018144  18DE               	xorwf	postinc2,w,c
 19899  018146  A4D8               	btfss	status,2,c
 19900  018148  D020               	goto	l1992
 19901  01814A  D01D               	goto	l20119
 19902  01814C                     
 19903                           ; BSR set to: 1
 19904  01814C  C122  F117         	movff	atoi@a,___wmul@multiplier
 19905  018150  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 19906  018154  0E00               	movlw	0
 19907  018156  0101               	movlb	1	; () banked
 19908  018158  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19909  01815A  0E0A               	movlw	10
 19910  01815C  6F19               	movwf	___wmul@multiplicand& (0+255),b
 19911  01815E  ECE2  F0CA         	call	___wmul	;wreg free
 19912  018162  C11D  FFD9         	movff	atoi@s,fsr2l
 19913  018166  C11E  FFDA         	movff	atoi@s+1,fsr2h
 19914  01816A  50DF               	movf	indf2,w,c
 19915  01816C  0101               	movlb	1	; () banked
 19916  01816E  6F1F               	movwf	??_atoi& (0+255),b
 19917  018170  6B20               	clrf	(??_atoi+1)& (0+255),b
 19918  018172  5117               	movf	?___wmul& (0+255),w,b
 19919  018174  271F               	addwf	??_atoi& (0+255),f,b
 19920  018176  5118               	movf	(?___wmul+1)& (0+255),w,b
 19921  018178  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 19922  01817A  0ED0               	movlw	208
 19923  01817C  251F               	addwf	??_atoi& (0+255),w,b
 19924  01817E  6F22               	movwf	atoi@a& (0+255),b
 19925  018180  0EFF               	movlw	255
 19926  018182  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 19927  018184  6F23               	movwf	(atoi@a+1)& (0+255),b
 19928  018186                     l20119:
 19929                           
 19930                           ; BSR set to: 1
 19931  018186  4B1D               	infsnz	atoi@s& (0+255),f,b
 19932  018188  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 19933  01818A                     l1992:
 19934                           
 19935                           ; BSR set to: 1
 19936                           
 19937                           ; BSR set to: 1
 19938  01818A  C11D  FFD9         	movff	atoi@s,fsr2l
 19939  01818E  C11E  FFDA         	movff	atoi@s+1,fsr2h
 19940  018192  50DF               	movf	indf2,w,c
 19941  018194  ECA0  F0CB         	call	_isdigit
 19942  018198  B0D8               	btfsc	status,0,c
 19943  01819A  D7D8               	goto	l1993
 19944  01819C  0101               	movlb	1	; () banked
 19945  01819E  5121               	movf	atoi@sign& (0+255),w,b
 19946  0181A0  B4D8               	btfsc	status,2,c
 19947  0181A2  D00D               	goto	l1995
 19948                           
 19949                           ; BSR set to: 1
 19950  0181A4  C122  F11F         	movff	atoi@a,??_atoi
 19951  0181A8  C123  F120         	movff	atoi@a+1,??_atoi+1
 19952  0181AC  1F1F               	comf	??_atoi& (0+255),f,b
 19953  0181AE  1F20               	comf	(??_atoi+1)& (0+255),f,b
 19954  0181B0  4B1F               	infsnz	??_atoi& (0+255),f,b
 19955  0181B2  2B20               	incf	(??_atoi+1)& (0+255),f,b
 19956  0181B4  C11F  F11D         	movff	??_atoi,?_atoi
 19957  0181B8  C120  F11E         	movff	??_atoi+1,?_atoi+1
 19958  0181BC  0012               	return	
 19959  0181BE                     l1995:
 19960                           
 19961                           ; BSR set to: 1
 19962  0181BE  C122  F11D         	movff	atoi@a,?_atoi
 19963  0181C2  C123  F11E         	movff	atoi@a+1,?_atoi+1
 19964                           
 19965                           ; BSR set to: 1
 19966  0181C6  0012               	return		;funcret
 19967  0181C8                     __end_of_atoi:
 19968                           	opt stack 0
 19969                           tblptru	equ	0xFF8
 19970                           tblptrh	equ	0xFF7
 19971                           tblptrl	equ	0xFF6
 19972                           tablat	equ	0xFF5
 19973                           prodh	equ	0xFF4
 19974                           prodl	equ	0xFF3
 19975                           intcon	equ	0xFF2
 19976                           indf0	equ	0xFEF
 19977                           postinc0	equ	0xFEE
 19978                           fsr0h	equ	0xFEA
 19979                           fsr0l	equ	0xFE9
 19980                           wreg	equ	0xFE8
 19981                           indf1	equ	0xFE7
 19982                           postdec1	equ	0xFE5
 19983                           plusw1	equ	0xFE3
 19984                           fsr1h	equ	0xFE2
 19985                           fsr1l	equ	0xFE1
 19986                           indf2	equ	0xFDF
 19987                           postinc2	equ	0xFDE
 19988                           postdec2	equ	0xFDD
 19989                           plusw2	equ	0xFDB
 19990                           fsr2h	equ	0xFDA
 19991                           fsr2l	equ	0xFD9
 19992                           status	equ	0xFD8
 19993                           
 19994 ;; *************** function ___fldiv *****************
 19995 ;; Defined at:
 19996 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;  b               4   61[BANK1 ] int 
 19999 ;;  a               4   65[BANK1 ] int 
 20000 ;; Auto vars:     Size  Location     Type
 20001 ;;  grs             4   80[BANK1 ] unsigned long 
 20002 ;;  rem             4   74[BANK1 ] unsigned long 
 20003 ;;  new_exp         2   78[BANK1 ] int 
 20004 ;;  aexp            1   85[BANK1 ] unsigned char 
 20005 ;;  bexp            1   84[BANK1 ] unsigned char 
 20006 ;;  sign            1   73[BANK1 ] unsigned char 
 20007 ;; Return value:  Size  Location     Type
 20008 ;;                  4   61[BANK1 ] unsigned char 
 20009 ;; Registers used:
 20010 ;;		wreg, status,2, status,0
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20016 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20017 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20018 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20019 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20020 ;;Total ram usage:       25 bytes
 20021 ;; Hardware stack levels used:    1
 20022 ;; Hardware stack levels required when called:   13
 20023 ;; This function calls:
 20024 ;;		Nothing
 20025 ;; This function is called by:
 20026 ;;		_ringBufferLUT
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           	psect	text24
 20031  01613C                     __ptext24:
 20032                           	opt stack 0
 20033  01613C                     ___fldiv:
 20034                           	opt stack 15
 20035                           
 20036                           ; BSR set to: 1
 20037                           ;incstack = 0
 20038  01613C  0101               	movlb	1	; () banked
 20039  01613E  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 20040  016140  0B80               	andlw	128
 20041  016142  6F49               	movwf	___fldiv@sign& (0+255),b
 20042  016144  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 20043  016146  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 20044  016148  6F54               	movwf	___fldiv@bexp& (0+255),b
 20045                           
 20046                           ; BSR set to: 1
 20047  01614A  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 20048                           
 20049                           ; BSR set to: 1
 20050  01614C  8154               	bsf	___fldiv@bexp& (0+255),0,b
 20051                           
 20052                           ; BSR set to: 1
 20053                           
 20054                           ; BSR set to: 1
 20055  01614E  5154               	movf	___fldiv@bexp& (0+255),w,b
 20056  016150  B4D8               	btfsc	status,2,c
 20057  016152  D00D               	goto	l2393
 20058                           
 20059                           ; BSR set to: 1
 20060  016154  2954               	incf	___fldiv@bexp& (0+255),w,b
 20061  016156  A4D8               	btfss	status,2,c
 20062  016158  D008               	goto	l2394
 20063                           
 20064                           ; BSR set to: 1
 20065  01615A  0E00               	movlw	0
 20066  01615C  6F3D               	movwf	___fldiv@b& (0+255),b
 20067  01615E  0E00               	movlw	0
 20068  016160  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20069  016162  0E00               	movlw	0
 20070  016164  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20071  016166  0E00               	movlw	0
 20072  016168  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20073  01616A                     l2394:
 20074                           
 20075                           ; BSR set to: 1
 20076                           
 20077                           ; BSR set to: 1
 20078  01616A  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 20079  01616C  D006               	goto	L1
 20080  01616E                     l2393:
 20081                           
 20082                           ; BSR set to: 1
 20083                           
 20084                           ; BSR set to: 1
 20085  01616E  0E00               	movlw	0
 20086  016170  6F3D               	movwf	___fldiv@b& (0+255),b
 20087  016172  0E00               	movlw	0
 20088  016174  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20089  016176  0E00               	movlw	0
 20090  016178  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20091  01617A                     L1:
 20092  01617A  0E00               	movlw	0
 20093  01617C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20094                           
 20095                           ; BSR set to: 1
 20096                           
 20097                           ; BSR set to: 1
 20098  01617E  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 20099  016180  0B80               	andlw	128
 20100  016182  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 20101                           
 20102                           ; BSR set to: 1
 20103  016184  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 20104  016186  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 20105  016188  6F55               	movwf	___fldiv@aexp& (0+255),b
 20106                           
 20107                           ; BSR set to: 1
 20108  01618A  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 20109                           
 20110                           ; BSR set to: 1
 20111  01618C  8155               	bsf	___fldiv@aexp& (0+255),0,b
 20112                           
 20113                           ; BSR set to: 1
 20114                           
 20115                           ; BSR set to: 1
 20116  01618E  5155               	movf	___fldiv@aexp& (0+255),w,b
 20117  016190  B4D8               	btfsc	status,2,c
 20118  016192  D00D               	goto	l2397
 20119                           
 20120                           ; BSR set to: 1
 20121  016194  2955               	incf	___fldiv@aexp& (0+255),w,b
 20122  016196  A4D8               	btfss	status,2,c
 20123  016198  D008               	goto	l2398
 20124                           
 20125                           ; BSR set to: 1
 20126  01619A  0E00               	movlw	0
 20127  01619C  6F41               	movwf	___fldiv@a& (0+255),b
 20128  01619E  0E00               	movlw	0
 20129  0161A0  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 20130  0161A2  0E00               	movlw	0
 20131  0161A4  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 20132  0161A6  0E00               	movlw	0
 20133  0161A8  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 20134  0161AA                     l2398:
 20135                           
 20136                           ; BSR set to: 1
 20137                           
 20138                           ; BSR set to: 1
 20139  0161AA  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 20140  0161AC  D006               	goto	L2
 20141  0161AE                     l2397:
 20142                           
 20143                           ; BSR set to: 1
 20144                           
 20145                           ; BSR set to: 1
 20146  0161AE  0E00               	movlw	0
 20147  0161B0  6F41               	movwf	___fldiv@a& (0+255),b
 20148  0161B2  0E00               	movlw	0
 20149  0161B4  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 20150  0161B6  0E00               	movlw	0
 20151  0161B8  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 20152  0161BA                     L2:
 20153  0161BA  0E00               	movlw	0
 20154  0161BC  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 20155                           
 20156                           ; BSR set to: 1
 20157                           
 20158                           ; BSR set to: 1
 20159  0161BE  5141               	movf	___fldiv@a& (0+255),w,b
 20160  0161C0  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 20161  0161C2  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 20162  0161C4  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 20163  0161C6  A4D8               	btfss	status,2,c
 20164  0161C8  D015               	goto	l2400
 20165                           
 20166                           ; BSR set to: 1
 20167  0161CA  0E00               	movlw	0
 20168  0161CC  6F3D               	movwf	___fldiv@b& (0+255),b
 20169  0161CE  0E00               	movlw	0
 20170  0161D0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20171  0161D2  0E00               	movlw	0
 20172  0161D4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20173  0161D6  0E00               	movlw	0
 20174  0161D8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20175                           
 20176                           ; BSR set to: 1
 20177  0161DA  0E80               	movlw	128
 20178  0161DC  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 20179  0161DE  0E7F               	movlw	127
 20180  0161E0  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 20181                           
 20182                           ; BSR set to: 1
 20183  0161E2  C13D  F13D         	movff	___fldiv@b,?___fldiv
 20184  0161E6  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 20185  0161EA  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 20186  0161EE  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 20187                           
 20188                           ; BSR set to: 1
 20189  0161F2  0012               	return	
 20190  0161F4                     l2400:
 20191                           
 20192                           ; BSR set to: 1
 20193                           
 20194                           ; BSR set to: 1
 20195  0161F4  5154               	movf	___fldiv@bexp& (0+255),w,b
 20196  0161F6  A4D8               	btfss	status,2,c
 20197  0161F8  D011               	goto	l2402
 20198                           
 20199                           ; BSR set to: 1
 20200  0161FA  0E00               	movlw	0
 20201  0161FC  6F3D               	movwf	___fldiv@b& (0+255),b
 20202  0161FE  0E00               	movlw	0
 20203  016200  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20204  016202  0E00               	movlw	0
 20205  016204  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20206  016206  0E00               	movlw	0
 20207  016208  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20208                           
 20209                           ; BSR set to: 1
 20210  01620A  C13D  F13D         	movff	___fldiv@b,?___fldiv
 20211  01620E  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 20212  016212  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 20213  016216  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 20214                           
 20215                           ; BSR set to: 1
 20216  01621A  0012               	return	
 20217  01621C                     l2402:
 20218                           
 20219                           ; BSR set to: 1
 20220                           
 20221                           ; BSR set to: 1
 20222  01621C  5155               	movf	___fldiv@aexp& (0+255),w,b
 20223  01621E  6F45               	movwf	??___fldiv& (0+255),b
 20224  016220  6B46               	clrf	(??___fldiv+1)& (0+255),b
 20225  016222  1F45               	comf	??___fldiv& (0+255),f,b
 20226  016224  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 20227  016226  4B45               	infsnz	??___fldiv& (0+255),f,b
 20228  016228  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 20229  01622A  5154               	movf	___fldiv@bexp& (0+255),w,b
 20230  01622C  6F47               	movwf	(??___fldiv+2)& (0+255),b
 20231  01622E  6B48               	clrf	(??___fldiv+3)& (0+255),b
 20232  016230  5145               	movf	??___fldiv& (0+255),w,b
 20233  016232  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 20234  016234  5146               	movf	(??___fldiv+1)& (0+255),w,b
 20235  016236  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 20236  016238  0E7F               	movlw	127
 20237  01623A  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 20238  01623C  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 20239  01623E  0E00               	movlw	0
 20240  016240  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 20241  016242  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 20242                           
 20243                           ; BSR set to: 1
 20244  016244  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 20245  016248  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 20246  01624C  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 20247  016250  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 20248                           
 20249                           ; BSR set to: 1
 20250  016254  0E00               	movlw	0
 20251  016256  6F3D               	movwf	___fldiv@b& (0+255),b
 20252  016258  0E00               	movlw	0
 20253  01625A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20254  01625C  0E00               	movlw	0
 20255  01625E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20256  016260  0E00               	movlw	0
 20257  016262  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20258                           
 20259                           ; BSR set to: 1
 20260  016264  0E00               	movlw	0
 20261  016266  6F50               	movwf	___fldiv@grs& (0+255),b
 20262  016268  0E00               	movlw	0
 20263  01626A  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 20264  01626C  0E00               	movlw	0
 20265  01626E  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 20266  016270  0E00               	movlw	0
 20267  016272  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 20268                           
 20269                           ; BSR set to: 1
 20270  016274  0E00               	movlw	0
 20271  016276  6F55               	movwf	___fldiv@aexp& (0+255),b
 20272  016278  D028               	goto	l2403
 20273  01627A                     
 20274                           ; BSR set to: 1
 20275                           
 20276                           ; BSR set to: 1
 20277  01627A  5155               	movf	___fldiv@aexp& (0+255),w,b
 20278  01627C  B4D8               	btfsc	status,2,c
 20279  01627E  D011               	goto	l2405
 20280                           
 20281                           ; BSR set to: 1
 20282  016280  90D8               	bcf	status,0,c
 20283  016282  374A               	rlcf	___fldiv@rem& (0+255),f,b
 20284  016284  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 20285  016286  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 20286  016288  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 20287  01628A  90D8               	bcf	status,0,c
 20288  01628C  373D               	rlcf	___fldiv@b& (0+255),f,b
 20289  01628E  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 20290  016290  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 20291  016292  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 20292                           
 20293                           ; BSR set to: 1
 20294  016294  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 20295                           
 20296                           ; BSR set to: 1
 20297  016296  813D               	bsf	___fldiv@b& (0+255),0,b
 20298                           
 20299                           ; BSR set to: 1
 20300  016298  90D8               	bcf	status,0,c
 20301  01629A  3750               	rlcf	___fldiv@grs& (0+255),f,b
 20302  01629C  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 20303  01629E  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 20304  0162A0  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 20305  0162A2                     l2405:
 20306                           
 20307                           ; BSR set to: 1
 20308                           
 20309                           ; BSR set to: 1
 20310  0162A2  5141               	movf	___fldiv@a& (0+255),w,b
 20311  0162A4  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 20312  0162A6  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 20313  0162A8  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 20314  0162AA  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 20315  0162AC  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 20316  0162AE  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 20317  0162B0  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 20318  0162B2  A0D8               	btfss	status,0,c
 20319  0162B4  D009               	goto	l2407
 20320                           
 20321                           ; BSR set to: 1
 20322  0162B6  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 20323                           
 20324                           ; BSR set to: 1
 20325  0162B8  5141               	movf	___fldiv@a& (0+255),w,b
 20326  0162BA  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 20327  0162BC  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 20328  0162BE  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 20329  0162C0  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 20330  0162C2  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 20331  0162C4  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 20332  0162C6  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 20333  0162C8                     l2407:
 20334                           
 20335                           ; BSR set to: 1
 20336                           
 20337                           ; BSR set to: 1
 20338  0162C8  2B55               	incf	___fldiv@aexp& (0+255),f,b
 20339  0162CA                     l2403:
 20340                           
 20341                           ; BSR set to: 1
 20342  0162CA  0E19               	movlw	25
 20343  0162CC  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 20344  0162CE  D7D5               	goto	l2404
 20345                           
 20346                           ; BSR set to: 1
 20347                           
 20348                           ; BSR set to: 1
 20349  0162D0  514A               	movf	___fldiv@rem& (0+255),w,b
 20350  0162D2  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 20351  0162D4  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 20352  0162D6  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 20353  0162D8  B4D8               	btfsc	status,2,c
 20354  0162DA  D011               	goto	l2410
 20355                           
 20356                           ; BSR set to: 1
 20357  0162DC  8150               	bsf	___fldiv@grs& (0+255),0,b
 20358                           
 20359                           ; BSR set to: 1
 20360  0162DE  D00F               	goto	l2410
 20361  0162E0                     
 20362                           ; BSR set to: 1
 20363                           
 20364                           ; BSR set to: 1
 20365  0162E0  90D8               	bcf	status,0,c
 20366  0162E2  373D               	rlcf	___fldiv@b& (0+255),f,b
 20367  0162E4  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 20368  0162E6  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 20369  0162E8  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 20370                           
 20371                           ; BSR set to: 1
 20372  0162EA  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 20373                           
 20374                           ; BSR set to: 1
 20375  0162EC  813D               	bsf	___fldiv@b& (0+255),0,b
 20376                           
 20377                           ; BSR set to: 1
 20378  0162EE  90D8               	bcf	status,0,c
 20379  0162F0  3750               	rlcf	___fldiv@grs& (0+255),f,b
 20380  0162F2  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 20381  0162F4  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 20382  0162F6  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 20383  0162F8  074E               	decf	___fldiv@new_exp& (0+255),f,b
 20384  0162FA  A0D8               	btfss	status,0,c
 20385  0162FC  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 20386  0162FE                     l2410:
 20387                           
 20388                           ; BSR set to: 1
 20389                           
 20390                           ; BSR set to: 1
 20391  0162FE  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 20392  016300  D7EF               	goto	l2411
 20393                           
 20394                           ; BSR set to: 1
 20395                           
 20396                           ; BSR set to: 1
 20397  016302  0E00               	movlw	0
 20398  016304  6F55               	movwf	___fldiv@aexp& (0+255),b
 20399                           
 20400                           ; BSR set to: 1
 20401  016306  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 20402  016308  D016               	goto	l2417
 20403                           
 20404                           ; BSR set to: 1
 20405  01630A  0EFF               	movlw	255
 20406  01630C  1550               	andwf	___fldiv@grs& (0+255),w,b
 20407  01630E  6F45               	movwf	??___fldiv& (0+255),b
 20408  016310  0EFF               	movlw	255
 20409  016312  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 20410  016314  6F46               	movwf	(??___fldiv+1)& (0+255),b
 20411  016316  0EFF               	movlw	255
 20412  016318  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 20413  01631A  6F47               	movwf	(??___fldiv+2)& (0+255),b
 20414  01631C  0E7F               	movlw	127
 20415  01631E  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 20416  016320  6F48               	movwf	(??___fldiv+3)& (0+255),b
 20417  016322  5145               	movf	??___fldiv& (0+255),w,b
 20418  016324  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 20419  016326  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 20420  016328  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 20421  01632A  A4D8               	btfss	status,2,c
 20422  01632C  D002               	goto	u26730
 20423                           
 20424                           ; BSR set to: 1
 20425                           
 20426                           ; BSR set to: 1
 20427  01632E  A13D               	btfss	___fldiv@b& (0+255),0,b
 20428  016330  D002               	goto	l2417
 20429  016332                     u26730:
 20430                           
 20431                           ; BSR set to: 1
 20432  016332  0E01               	movlw	1
 20433  016334  6F55               	movwf	___fldiv@aexp& (0+255),b
 20434  016336                     l2417:
 20435                           
 20436                           ; BSR set to: 1
 20437                           
 20438                           ; BSR set to: 1
 20439                           
 20440                           ; BSR set to: 1
 20441  016336  5155               	movf	___fldiv@aexp& (0+255),w,b
 20442  016338  B4D8               	btfsc	status,2,c
 20443  01633A  D01F               	goto	l2419
 20444                           
 20445                           ; BSR set to: 1
 20446  01633C  0E01               	movlw	1
 20447  01633E  273D               	addwf	___fldiv@b& (0+255),f,b
 20448  016340  0E00               	movlw	0
 20449  016342  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 20450  016344  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 20451  016346  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 20452                           
 20453                           ; BSR set to: 1
 20454  016348  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 20455  01634A  D017               	goto	l2419
 20456                           
 20457                           ; BSR set to: 1
 20458  01634C  C13D  F145         	movff	___fldiv@b,??___fldiv
 20459  016350  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 20460  016354  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 20461  016358  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 20462  01635C  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 20463  01635E  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 20464  016360  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 20465  016362  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 20466  016364  3345               	rrcf	??___fldiv& (0+255),f,b
 20467  016366  C145  F13D         	movff	??___fldiv,___fldiv@b
 20468  01636A  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 20469  01636E  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 20470  016372  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 20471                           
 20472                           ; BSR set to: 1
 20473  016376  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 20474  016378  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 20475  01637A                     l2419:
 20476                           
 20477                           ; BSR set to: 1
 20478                           
 20479                           ; BSR set to: 1
 20480                           
 20481                           ; BSR set to: 1
 20482  01637A  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 20483  01637C  D010               	goto	l2420
 20484  01637E  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 20485  016380  E103               	bnz	u26760
 20486  016382  294E               	incf	___fldiv@new_exp& (0+255),w,b
 20487  016384  A0D8               	btfss	status,0,c
 20488  016386  D00B               	goto	l2420
 20489  016388                     u26760:
 20490                           
 20491                           ; BSR set to: 1
 20492  016388  0E00               	movlw	0
 20493  01638A  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 20494  01638C  694E               	setf	___fldiv@new_exp& (0+255),b
 20495  01638E  0E00               	movlw	0
 20496  016390  6F3D               	movwf	___fldiv@b& (0+255),b
 20497  016392  0E00               	movlw	0
 20498  016394  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20499  016396  0E00               	movlw	0
 20500  016398  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20501  01639A  0E00               	movlw	0
 20502  01639C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20503  01639E                     l2420:
 20504                           
 20505                           ; BSR set to: 1
 20506                           
 20507                           ; BSR set to: 1
 20508  01639E  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 20509  0163A0  D005               	goto	u26770
 20510  0163A2  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 20511  0163A4  E111               	bnz	l20247
 20512  0163A6  054E               	decf	___fldiv@new_exp& (0+255),w,b
 20513  0163A8  B0D8               	btfsc	status,0,c
 20514  0163AA  D00E               	goto	l2421
 20515  0163AC                     u26770:
 20516                           
 20517                           ; BSR set to: 1
 20518  0163AC  0E00               	movlw	0
 20519  0163AE  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 20520  0163B0  0E00               	movlw	0
 20521  0163B2  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 20522  0163B4  0E00               	movlw	0
 20523  0163B6  6F3D               	movwf	___fldiv@b& (0+255),b
 20524  0163B8  0E00               	movlw	0
 20525  0163BA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 20526  0163BC  0E00               	movlw	0
 20527  0163BE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 20528  0163C0  0E00               	movlw	0
 20529  0163C2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20530  0163C4  0E00               	movlw	0
 20531  0163C6  6F49               	movwf	___fldiv@sign& (0+255),b
 20532  0163C8                     l2421:
 20533  0163C8                     l20247:
 20534                           
 20535                           ; BSR set to: 1
 20536  0163C8  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 20537                           
 20538                           ; BSR set to: 1
 20539  0163CC  A154               	btfss	___fldiv@bexp& (0+255),0,b
 20540  0163CE  D002               	goto	l2422
 20541                           
 20542                           ; BSR set to: 1
 20543  0163D0  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 20544  0163D2  D001               	goto	l2423
 20545  0163D4                     l2422:
 20546                           
 20547                           ; BSR set to: 1
 20548                           
 20549                           ; BSR set to: 1
 20550  0163D4  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 20551  0163D6                     l2423:
 20552                           
 20553                           ; BSR set to: 1
 20554                           
 20555                           ; BSR set to: 1
 20556  0163D6  90D8               	bcf	status,0,c
 20557  0163D8  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 20558  0163DA  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 20559                           
 20560                           ; BSR set to: 1
 20561  0163DC  5149               	movf	___fldiv@sign& (0+255),w,b
 20562  0163DE  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 20563                           
 20564                           ; BSR set to: 1
 20565  0163E0  C13D  F13D         	movff	___fldiv@b,?___fldiv
 20566  0163E4  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 20567  0163E8  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 20568  0163EC  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 20569  0163F0  0012               	return	
 20570  0163F2                     __end_of___fldiv:
 20571                           	opt stack 0
 20572                           tblptru	equ	0xFF8
 20573                           tblptrh	equ	0xFF7
 20574                           tblptrl	equ	0xFF6
 20575                           tablat	equ	0xFF5
 20576                           prodh	equ	0xFF4
 20577                           prodl	equ	0xFF3
 20578                           intcon	equ	0xFF2
 20579                           indf0	equ	0xFEF
 20580                           postinc0	equ	0xFEE
 20581                           fsr0h	equ	0xFEA
 20582                           fsr0l	equ	0xFE9
 20583                           wreg	equ	0xFE8
 20584                           indf1	equ	0xFE7
 20585                           postdec1	equ	0xFE5
 20586                           plusw1	equ	0xFE3
 20587                           fsr1h	equ	0xFE2
 20588                           fsr1l	equ	0xFE1
 20589                           indf2	equ	0xFDF
 20590                           postinc2	equ	0xFDE
 20591                           postdec2	equ	0xFDD
 20592                           plusw2	equ	0xFDB
 20593                           fsr2h	equ	0xFDA
 20594                           fsr2l	equ	0xFD9
 20595                           status	equ	0xFD8
 20596                           
 20597 ;; *************** function _TMR7_StopTimer *****************
 20598 ;; Defined at:
 20599 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 20600 ;; Parameters:    Size  Location     Type
 20601 ;;		None
 20602 ;; Auto vars:     Size  Location     Type
 20603 ;;		None
 20604 ;; Return value:  Size  Location     Type
 20605 ;;                  1    wreg      void 
 20606 ;; Registers used:
 20607 ;;		None
 20608 ;; Tracked objects:
 20609 ;;		On entry : 0/0
 20610 ;;		On exit  : 0/0
 20611 ;;		Unchanged: 0/0
 20612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20617 ;;Total ram usage:        0 bytes
 20618 ;; Hardware stack levels used:    1
 20619 ;; Hardware stack levels required when called:   13
 20620 ;; This function calls:
 20621 ;;		Nothing
 20622 ;; This function is called by:
 20623 ;;		_ringBufferLUT
 20624 ;; This function uses a non-reentrant model
 20625 ;;
 20626                           
 20627                           	psect	text25
 20628  0199E8                     __ptext25:
 20629                           	opt stack 0
 20630  0199E8                     _TMR7_StopTimer:
 20631                           	opt stack 15
 20632                           
 20633                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 20634                           
 20635                           ; BSR set to: 1
 20636                           ;incstack = 0
 20637  0199E8  010F               	movlb	15	; () banked
 20638  0199EA  9130               	bcf	48,0,b	;volatile
 20639                           
 20640                           ; BSR set to: 15
 20641  0199EC  0012               	return		;funcret
 20642  0199EE                     __end_of_TMR7_StopTimer:
 20643                           	opt stack 0
 20644                           tblptru	equ	0xFF8
 20645                           tblptrh	equ	0xFF7
 20646                           tblptrl	equ	0xFF6
 20647                           tablat	equ	0xFF5
 20648                           prodh	equ	0xFF4
 20649                           prodl	equ	0xFF3
 20650                           intcon	equ	0xFF2
 20651                           indf0	equ	0xFEF
 20652                           postinc0	equ	0xFEE
 20653                           fsr0h	equ	0xFEA
 20654                           fsr0l	equ	0xFE9
 20655                           wreg	equ	0xFE8
 20656                           indf1	equ	0xFE7
 20657                           postdec1	equ	0xFE5
 20658                           plusw1	equ	0xFE3
 20659                           fsr1h	equ	0xFE2
 20660                           fsr1l	equ	0xFE1
 20661                           indf2	equ	0xFDF
 20662                           postinc2	equ	0xFDE
 20663                           postdec2	equ	0xFDD
 20664                           plusw2	equ	0xFDB
 20665                           fsr2h	equ	0xFDA
 20666                           fsr2l	equ	0xFD9
 20667                           status	equ	0xFD8
 20668                           
 20669 ;; *************** function _TMR5_StopTimer *****************
 20670 ;; Defined at:
 20671 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 20672 ;; Parameters:    Size  Location     Type
 20673 ;;		None
 20674 ;; Auto vars:     Size  Location     Type
 20675 ;;		None
 20676 ;; Return value:  Size  Location     Type
 20677 ;;                  1    wreg      void 
 20678 ;; Registers used:
 20679 ;;		None
 20680 ;; Tracked objects:
 20681 ;;		On entry : 0/0
 20682 ;;		On exit  : 0/0
 20683 ;;		Unchanged: 0/0
 20684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20689 ;;Total ram usage:        0 bytes
 20690 ;; Hardware stack levels used:    1
 20691 ;; Hardware stack levels required when called:   13
 20692 ;; This function calls:
 20693 ;;		Nothing
 20694 ;; This function is called by:
 20695 ;;		_main
 20696 ;;		_ringBufferLUT
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           	psect	text26
 20701  0199FA                     __ptext26:
 20702                           	opt stack 0
 20703  0199FA                     _TMR5_StopTimer:
 20704                           	opt stack 15
 20705                           
 20706                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 20707                           
 20708                           ; BSR set to: 15
 20709                           ;incstack = 0
 20710  0199FA  90C3               	bcf	4035,0,c	;volatile
 20711  0199FC  0012               	return		;funcret
 20712  0199FE                     __end_of_TMR5_StopTimer:
 20713                           	opt stack 0
 20714                           tblptru	equ	0xFF8
 20715                           tblptrh	equ	0xFF7
 20716                           tblptrl	equ	0xFF6
 20717                           tablat	equ	0xFF5
 20718                           prodh	equ	0xFF4
 20719                           prodl	equ	0xFF3
 20720                           intcon	equ	0xFF2
 20721                           indf0	equ	0xFEF
 20722                           postinc0	equ	0xFEE
 20723                           fsr0h	equ	0xFEA
 20724                           fsr0l	equ	0xFE9
 20725                           wreg	equ	0xFE8
 20726                           indf1	equ	0xFE7
 20727                           postdec1	equ	0xFE5
 20728                           plusw1	equ	0xFE3
 20729                           fsr1h	equ	0xFE2
 20730                           fsr1l	equ	0xFE1
 20731                           indf2	equ	0xFDF
 20732                           postinc2	equ	0xFDE
 20733                           postdec2	equ	0xFDD
 20734                           plusw2	equ	0xFDB
 20735                           fsr2h	equ	0xFDA
 20736                           fsr2l	equ	0xFD9
 20737                           status	equ	0xFD8
 20738                           
 20739 ;; *************** function _EUSART2_Read *****************
 20740 ;; Defined at:
 20741 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 20742 ;; Parameters:    Size  Location     Type
 20743 ;;		None
 20744 ;; Auto vars:     Size  Location     Type
 20745 ;;  readValue       1   23[BANK1 ] unsigned char 
 20746 ;; Return value:  Size  Location     Type
 20747 ;;                  1    wreg      unsigned char 
 20748 ;; Registers used:
 20749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20750 ;; Tracked objects:
 20751 ;;		On entry : 0/0
 20752 ;;		On exit  : 0/0
 20753 ;;		Unchanged: 0/0
 20754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20756 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20758 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20759 ;;Total ram usage:        1 bytes
 20760 ;; Hardware stack levels used:    1
 20761 ;; Hardware stack levels required when called:   13
 20762 ;; This function calls:
 20763 ;;		Nothing
 20764 ;; This function is called by:
 20765 ;;		_terminal_ringBufferPull
 20766 ;;		_getch
 20767 ;; This function uses a non-reentrant model
 20768 ;;
 20769                           
 20770                           	psect	text27
 20771  0190A2                     __ptext27:
 20772                           	opt stack 0
 20773  0190A2                     _EUSART2_Read:
 20774                           	opt stack 16
 20775                           
 20776                           ;eusart2.c: 139: uint8_t readValue = 0;
 20777                           
 20778                           ;incstack = 0
 20779  0190A2  0E00               	movlw	0
 20780  0190A4  0101               	movlb	1	; () banked
 20781  0190A6  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 20782                           
 20783                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 20784  0190A8  D002               	goto	l401
 20785  0190AA                     l402:
 20786                           
 20787                           ; BSR set to: 1
 20788  0190AA  0004               	clrwdt		;# 
 20789                           
 20790                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 20791  0190AC  827E               	bsf	3966,1,c	;volatile
 20792  0190AE                     l401:
 20793  0190AE  0101               	movlb	1	; () banked
 20794  0190B0  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 20795  0190B2  B4D8               	btfsc	status,2,c
 20796  0190B4  D7FA               	goto	l402
 20797                           
 20798                           ; BSR set to: 1
 20799                           ;eusart2.c: 145: }
 20800                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 20801  0190B6  927E               	bcf	3966,1,c	;volatile
 20802                           
 20803                           ; BSR set to: 1
 20804                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 20805  0190B8  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 20806  0190BA  0D01               	mullw	1
 20807  0190BC  0E80               	movlw	low _eusart2RxBuffer
 20808  0190BE  24F3               	addwf	prodl,w,c
 20809  0190C0  6ED9               	movwf	fsr2l,c
 20810  0190C2  0E03               	movlw	high _eusart2RxBuffer
 20811  0190C4  20F4               	addwfc	prodh,w,c
 20812  0190C6  6EDA               	movwf	fsr2h,c
 20813  0190C8  50DF               	movf	indf2,w,c
 20814  0190CA  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 20815                           
 20816                           ; BSR set to: 1
 20817  0190CC  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 20818                           
 20819                           ; BSR set to: 1
 20820                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 20821  0190CE  0E3F               	movlw	63
 20822  0190D0  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 20823  0190D2  D002               	goto	l404
 20824                           
 20825                           ; BSR set to: 1
 20826                           ;eusart2.c: 151: {
 20827                           ;eusart2.c: 152: eusart2RxTail = 0;
 20828  0190D4  0E00               	movlw	0
 20829  0190D6  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 20830  0190D8                     l404:
 20831                           
 20832                           ; BSR set to: 1
 20833                           ;eusart2.c: 153: }
 20834                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 20835                           
 20836                           ; BSR set to: 1
 20837  0190D8  010E               	movlb	14	; () banked
 20838  0190DA  9F2C               	bcf	44,7,b	;volatile
 20839                           
 20840                           ; BSR set to: 14
 20841                           ;eusart2.c: 155: eusart2RxCount--;
 20842  0190DC  0101               	movlb	1	; () banked
 20843  0190DE  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 20844                           
 20845                           ; BSR set to: 1
 20846                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 20847  0190E0  010E               	movlb	14	; () banked
 20848  0190E2  8F2C               	bsf	44,7,b	;volatile
 20849                           
 20850                           ; BSR set to: 14
 20851                           ;eusart2.c: 158: return readValue;
 20852  0190E4  0101               	movlb	1	; () banked
 20853  0190E6  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 20854  0190E8  0012               	return	
 20855  0190EA                     __end_of_EUSART2_Read:
 20856                           	opt stack 0
 20857                           tblptru	equ	0xFF8
 20858                           tblptrh	equ	0xFF7
 20859                           tblptrl	equ	0xFF6
 20860                           tablat	equ	0xFF5
 20861                           prodh	equ	0xFF4
 20862                           prodl	equ	0xFF3
 20863                           intcon	equ	0xFF2
 20864                           indf0	equ	0xFEF
 20865                           postinc0	equ	0xFEE
 20866                           fsr0h	equ	0xFEA
 20867                           fsr0l	equ	0xFE9
 20868                           wreg	equ	0xFE8
 20869                           indf1	equ	0xFE7
 20870                           postdec1	equ	0xFE5
 20871                           plusw1	equ	0xFE3
 20872                           fsr1h	equ	0xFE2
 20873                           fsr1l	equ	0xFE1
 20874                           indf2	equ	0xFDF
 20875                           postinc2	equ	0xFDE
 20876                           postdec2	equ	0xFDD
 20877                           plusw2	equ	0xFDB
 20878                           fsr2h	equ	0xFDA
 20879                           fsr2l	equ	0xFD9
 20880                           status	equ	0xFD8
 20881                           
 20882 ;; *************** function _terminal_clearTerminal *****************
 20883 ;; Defined at:
 20884 ;;		line 80 in file "ring_buffer_interface.c"
 20885 ;; Parameters:    Size  Location     Type
 20886 ;;		None
 20887 ;; Auto vars:     Size  Location     Type
 20888 ;;		None
 20889 ;; Return value:  Size  Location     Type
 20890 ;;                  1    wreg      void 
 20891 ;; Registers used:
 20892 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20893 ;; Tracked objects:
 20894 ;;		On entry : 0/0
 20895 ;;		On exit  : 0/0
 20896 ;;		Unchanged: 0/0
 20897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20902 ;;Total ram usage:        0 bytes
 20903 ;; Hardware stack levels used:    1
 20904 ;; Hardware stack levels required when called:   16
 20905 ;; This function calls:
 20906 ;;		_printf
 20907 ;; This function is called by:
 20908 ;;		_main
 20909 ;; This function uses a non-reentrant model
 20910 ;;
 20911                           
 20912                           	psect	text28
 20913  0198FA                     __ptext28:
 20914                           	opt stack 0
 20915  0198FA                     _terminal_clearTerminal:
 20916                           	opt stack 14
 20917                           
 20918                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 20919                           
 20920                           ; BSR set to: 1
 20921                           ;incstack = 0
 20922  0198FA  0EB0               	movlw	low STR_2
 20923  0198FC  0101               	movlb	1	; () banked
 20924  0198FE  6F82               	movwf	printf@f& (0+255),b
 20925  019900  0EFF               	movlw	high STR_2
 20926  019902  6F83               	movwf	(printf@f+1)& (0+255),b
 20927  019904  ECCD  F08A         	call	_printf	;wreg free
 20928  019908  0012               	return		;funcret
 20929  01990A                     __end_of_terminal_clearTerminal:
 20930                           	opt stack 0
 20931                           tblptru	equ	0xFF8
 20932                           tblptrh	equ	0xFF7
 20933                           tblptrl	equ	0xFF6
 20934                           tablat	equ	0xFF5
 20935                           prodh	equ	0xFF4
 20936                           prodl	equ	0xFF3
 20937                           intcon	equ	0xFF2
 20938                           indf0	equ	0xFEF
 20939                           postinc0	equ	0xFEE
 20940                           fsr0h	equ	0xFEA
 20941                           fsr0l	equ	0xFE9
 20942                           wreg	equ	0xFE8
 20943                           indf1	equ	0xFE7
 20944                           postdec1	equ	0xFE5
 20945                           plusw1	equ	0xFE3
 20946                           fsr1h	equ	0xFE2
 20947                           fsr1l	equ	0xFE1
 20948                           indf2	equ	0xFDF
 20949                           postinc2	equ	0xFDE
 20950                           postdec2	equ	0xFDD
 20951                           plusw2	equ	0xFDB
 20952                           fsr2h	equ	0xFDA
 20953                           fsr2l	equ	0xFD9
 20954                           status	equ	0xFD8
 20955                           
 20956 ;; *************** function _printf *****************
 20957 ;; Defined at:
 20958 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 20961 ;;		 -> STR_162(13), STR_161(31), STR_160(26), STR_159(28), 
 20962 ;;		 -> STR_158(426), STR_156(30), STR_155(46), STR_154(39), 
 20963 ;;		 -> STR_153(62), STR_152(55), STR_151(470), STR_149(2954), 
 20964 ;;		 -> STR_147(492), STR_145(748), STR_143(720), STR_141(842), 
 20965 ;;		 -> STR_139(54), STR_137(54), STR_135(45), STR_133(51), 
 20966 ;;		 -> STR_131(52), STR_129(46), STR_127(51), STR_125(53), 
 20967 ;;		 -> STR_123(58), STR_121(71), STR_120(63), STR_119(37), 
 20968 ;;		 -> STR_118(46), STR_117(102), STR_116(86), STR_114(25), 
 20969 ;;		 -> STR_112(42), STR_111(53), STR_110(31), STR_108(29), 
 20970 ;;		 -> STR_107(28), STR_105(42), STR_103(41), STR_101(34), 
 20971 ;;		 -> STR_99(53), STR_98(52), STR_97(105), STR_96(105), 
 20972 ;;		 -> STR_94(59), STR_92(73), STR_90(56), STR_88(34), 
 20973 ;;		 -> STR_86(34), STR_84(32), STR_82(37), STR_80(58), 
 20974 ;;		 -> STR_78(36), STR_76(36), STR_74(37), STR_72(21), 
 20975 ;;		 -> STR_70(24), STR_69(48), STR_59(54), STR_58(64), 
 20976 ;;		 -> STR_56(59), STR_54(85), STR_52(47), STR_51(17), 
 20977 ;;		 -> STR_48(52), STR_46(4), STR_45(5), STR_43(4), 
 20978 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 20979 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 20980 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 20981 ;;		 -> STR_1(4), 
 20982 ;; Auto vars:     Size  Location     Type
 20983 ;;  idx             1  150[BANK1 ] unsigned char 
 20984 ;;  val             4  167[BANK1 ] unsigned long 
 20985 ;;  fval            4  163[BANK1 ] unsigned long 
 20986 ;;  tmpval          4  157[BANK1 ] struct .
 20987 ;;  prec            2  175[BANK1 ] int 
 20988 ;;  width           2  173[BANK1 ] int 
 20989 ;;  flag            2  171[BANK1 ] unsigned short 
 20990 ;;  exp             2  161[BANK1 ] int 
 20991 ;;  ap              2  155[BANK1 ] PTR void [1]
 20992 ;;		 -> ?i2_printf(2), ?_printf(2), 
 20993 ;;  len             2  153[BANK1 ] unsigned int 
 20994 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 20995 ;;		 -> STR_176(7), printf@c(1), STR_175(16), STR_174(22), 
 20996 ;;		 -> STR_173(21), STR_172(27), STR_171(41), STR_170(32), 
 20997 ;;		 -> STR_169(19), STR_168(16), STR_167(15), STR_166(16), 
 20998 ;;		 -> STR_165(10), STR_164(13), STR_163(12), ringBufferLUT@channel_name(22), 
 20999 ;;		 -> TRIAC_Firing_Angle(4), 
 21000 ;;  c               1  177[BANK1 ] char 
 21001 ;;  d               1    0        unsigned char 
 21002 ;; Return value:  Size  Location     Type
 21003 ;;                  2  130[BANK1 ] int 
 21004 ;; Registers used:
 21005 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/0
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21011 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21012 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21013 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21014 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21015 ;;Total ram usage:       48 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:   15
 21018 ;; This function calls:
 21019 ;;		___awdiv
 21020 ;;		___fladd
 21021 ;;		___flge
 21022 ;;		___flmul
 21023 ;;		___flneg
 21024 ;;		___flsub
 21025 ;;		___fltol
 21026 ;;		___lldiv
 21027 ;;		___llmod
 21028 ;;		___wmul
 21029 ;;		___xxtofl
 21030 ;;		__div_to_l_
 21031 ;;		__tdiv_to_l_
 21032 ;;		_fround
 21033 ;;		_isdigit
 21034 ;;		_putch
 21035 ;;		_scale
 21036 ;; This function is called by:
 21037 ;;		_terminal_clearTerminal
 21038 ;;		_terminal_setCursorHome
 21039 ;;		_terminal_textAttributes
 21040 ;;		_terminal_printNewline
 21041 ;;		_ringBufferLUT
 21042 ;;		_terminal_printResetMessage
 21043 ;;		_terminal_clearLine
 21044 ;;		_terminal_saveCursor
 21045 ;;		_terminal_returnCursor
 21046 ;; This function uses a non-reentrant model
 21047 ;;
 21048                           
 21049                           	psect	text29
 21050  01159A                     __ptext29:
 21051                           	opt stack 0
 21052  01159A                     _printf:
 21053                           	opt stack 13
 21054                           
 21055                           ;doprnt.c: 466: va_list ap;
 21056                           ;doprnt.c: 499: signed char c;
 21057                           ;doprnt.c: 501: int width;
 21058                           ;doprnt.c: 504: int prec;
 21059                           ;doprnt.c: 508: unsigned short flag;
 21060                           ;doprnt.c: 515: char d;
 21061                           ;doprnt.c: 516: double fval;
 21062                           ;doprnt.c: 517: int exp;
 21063                           ;doprnt.c: 523: union {
 21064                           ;doprnt.c: 524: unsigned long vd;
 21065                           ;doprnt.c: 525: double integ;
 21066                           ;doprnt.c: 526: } tmpval;
 21067                           ;doprnt.c: 528: unsigned long val;
 21068                           ;doprnt.c: 529: unsigned len;
 21069                           ;doprnt.c: 530: const char * cp;
 21070                           ;doprnt.c: 533: *ap = __va_start();
 21071                           
 21072                           ;incstack = 0
 21073  01159A  0E84               	movlw	low (?_printf+2)
 21074  01159C  0101               	movlb	1	; () banked
 21075  01159E  6F9B               	movwf	printf@ap& (0+255),b
 21076  0115A0  0E01               	movlw	high (?_printf+2)
 21077  0115A2  6F9C               	movwf	(printf@ap+1)& (0+255),b
 21078                           
 21079                           ;doprnt.c: 536: while(c = *f++) {
 21080  0115A4  EF95  F091         	goto	u26200
 21081  0115A8                     
 21082                           ; BSR set to: 1
 21083                           ;doprnt.c: 538: if(c != '%')
 21084                           
 21085                           ; BSR set to: 1
 21086  0115A8  0E25               	movlw	37
 21087  0115AA  19B1               	xorwf	printf@c& (0+255),w,b
 21088  0115AC  B4D8               	btfsc	status,2,c
 21089  0115AE  D005               	goto	l1647
 21090                           
 21091                           ; BSR set to: 1
 21092                           ;doprnt.c: 540: {
 21093                           ;doprnt.c: 541: (putch(c) );
 21094  0115B0  51B1               	movf	printf@c& (0+255),w,b
 21095  0115B2  EC8D  F0CC         	call	_putch
 21096                           
 21097                           ;doprnt.c: 542: continue;
 21098  0115B6  EF95  F091         	goto	u26200
 21099  0115BA                     l1647:
 21100                           
 21101                           ;doprnt.c: 543: }
 21102                           ;doprnt.c: 546: width = 0;
 21103  0115BA  0E00               	movlw	0
 21104  0115BC  0101               	movlb	1	; () banked
 21105  0115BE  6FAE               	movwf	(printf@width+1)& (0+255),b
 21106  0115C0  0E00               	movlw	0
 21107  0115C2  6FAD               	movwf	printf@width& (0+255),b
 21108                           
 21109                           ;doprnt.c: 548: flag = 0;
 21110  0115C4  0E00               	movlw	0
 21111  0115C6  6FAC               	movwf	(printf@flag+1)& (0+255),b
 21112  0115C8  0E00               	movlw	0
 21113  0115CA  6FAB               	movwf	printf@flag& (0+255),b
 21114                           
 21115                           ; BSR set to: 1
 21116                           ;doprnt.c: 551: switch(*f) {
 21117                           
 21118                           ;doprnt.c: 550: for(;;) {
 21119  0115CC  D004               	goto	l1649
 21120  0115CE                     
 21121                           ;doprnt.c: 580: flag |= 0x04;
 21122                           
 21123                           ; BSR set to: 1
 21124  0115CE  0101               	movlb	1	; () banked
 21125  0115D0  85AB               	bsf	printf@flag& (0+255),2,b
 21126                           
 21127                           ;doprnt.c: 581: f++;
 21128  0115D2  4B82               	infsnz	printf@f& (0+255),f,b
 21129  0115D4  2B83               	incf	(printf@f+1)& (0+255),f,b
 21130  0115D6                     l1649:
 21131                           
 21132                           ; BSR set to: 1
 21133  0115D6  C182  FFF6         	movff	printf@f,tblptrl
 21134  0115DA  C183  FFF7         	movff	printf@f+1,tblptrh
 21135  0115DE  0E00               	movlw	low (__mediumconst shr (0+16))
 21136  0115E0  6EF8               	movwf	tblptru,c
 21137  0115E2  0E0D               	movlw	(high __ramtop+-1)
 21138  0115E4  64F7               	cpfsgt	tblptrh,c
 21139  0115E6  D003               	bra	u25467
 21140  0115E8  0008               	tblrd		*
 21141  0115EA  50F5               	movf	tablat,w,c
 21142  0115EC  D005               	bra	u25460
 21143  0115EE                     u25467:
 21144  0115EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 21145  0115F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21146  0115F6  50EF               	movf	indf0,w,c
 21147  0115F8                     u25460:
 21148                           
 21149                           ; Switch size 1, requested type "space"
 21150                           ; Number of cases is 1, Range of values is 48 to 48
 21151                           ; switch strategies available:
 21152                           ; Name         Instructions Cycles
 21153                           ; simple_byte            4     3 (average)
 21154                           ;	Chosen strategy is simple_byte
 21155  0115F8  0A30               	xorlw	48	; case 48
 21156  0115FA  B4D8               	btfsc	status,2,c
 21157  0115FC  D7E8               	goto	l1650
 21158                           
 21159                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 21160                           
 21161                           ;doprnt.c: 586: }
 21162                           
 21163                           ;doprnt.c: 585: break;
 21164  0115FE  C182  FFF6         	movff	printf@f,tblptrl
 21165  011602  C183  FFF7         	movff	printf@f+1,tblptrh
 21166  011606  0E00               	movlw	low (__mediumconst shr (0+16))
 21167  011608  6EF8               	movwf	tblptru,c
 21168  01160A  0E0D               	movlw	(high __ramtop+-1)
 21169  01160C  64F7               	cpfsgt	tblptrh,c
 21170  01160E  D003               	bra	u25477
 21171  011610  0008               	tblrd		*
 21172  011612  50F5               	movf	tablat,w,c
 21173  011614  D005               	bra	u25470
 21174  011616                     u25477:
 21175  011616  CFF6 FFE9          	movff	tblptrl,fsr0l
 21176  01161A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21177  01161E  50EF               	movf	indf0,w,c
 21178  011620                     u25470:
 21179  011620  ECA0  F0CB         	call	_isdigit
 21180  011624  A0D8               	btfss	status,0,c
 21181  011626  D04C               	goto	u25510
 21182                           
 21183                           ;doprnt.c: 598: width = 0;
 21184  011628  0E00               	movlw	0
 21185  01162A  0101               	movlb	1	; () banked
 21186  01162C  6FAE               	movwf	(printf@width+1)& (0+255),b
 21187  01162E  0E00               	movlw	0
 21188  011630  6FAD               	movwf	printf@width& (0+255),b
 21189  011632                     
 21190                           ;doprnt.c: 600: width *= 10;
 21191                           
 21192                           ; BSR set to: 1
 21193  011632  C1AD  F117         	movff	printf@width,___wmul@multiplier
 21194  011636  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 21195  01163A  0E00               	movlw	0
 21196  01163C  0101               	movlb	1	; () banked
 21197  01163E  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21198  011640  0E0A               	movlw	10
 21199  011642  6F19               	movwf	___wmul@multiplicand& (0+255),b
 21200  011644  ECE2  F0CA         	call	___wmul	;wreg free
 21201  011648  C117  F1AD         	movff	?___wmul,printf@width
 21202  01164C  C118  F1AE         	movff	?___wmul+1,printf@width+1
 21203                           
 21204                           ;doprnt.c: 601: width += *f++ - '0';
 21205  011650  0ED0               	movlw	208
 21206  011652  0101               	movlb	1	; () banked
 21207  011654  6F8C               	movwf	??_printf& (0+255),b
 21208  011656  0EFF               	movlw	255
 21209  011658  6F8D               	movwf	(??_printf+1)& (0+255),b
 21210  01165A  C182  FFF6         	movff	printf@f,tblptrl
 21211  01165E  C183  FFF7         	movff	printf@f+1,tblptrh
 21212  011662  0E00               	movlw	low (__mediumconst shr (0+16))
 21213  011664  6EF8               	movwf	tblptru,c
 21214  011666  0E0D               	movlw	(high __ramtop+-1)
 21215  011668  64F7               	cpfsgt	tblptrh,c
 21216  01166A  D003               	bra	u25497
 21217  01166C  0008               	tblrd		*
 21218  01166E  50F5               	movf	tablat,w,c
 21219  011670  D005               	bra	u25490
 21220  011672                     u25497:
 21221  011672  CFF6 FFE9          	movff	tblptrl,fsr0l
 21222  011676  CFF7 FFEA          	movff	tblptrh,fsr0h
 21223  01167A  50EF               	movf	indf0,w,c
 21224  01167C                     u25490:
 21225  01167C  0101               	movlb	1	; () banked
 21226  01167E  6F8E               	movwf	(??_printf+2)& (0+255),b
 21227  011680  6B8F               	clrf	(??_printf+3)& (0+255),b
 21228  011682  518C               	movf	??_printf& (0+255),w,b
 21229  011684  278E               	addwf	(??_printf+2)& (0+255),f,b
 21230  011686  518D               	movf	(??_printf+1)& (0+255),w,b
 21231  011688  238F               	addwfc	(??_printf+3)& (0+255),f,b
 21232  01168A  518E               	movf	(??_printf+2)& (0+255),w,b
 21233  01168C  27AD               	addwf	printf@width& (0+255),f,b
 21234  01168E  518F               	movf	(??_printf+3)& (0+255),w,b
 21235  011690  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 21236                           
 21237                           ; BSR set to: 1
 21238  011692  4B82               	infsnz	printf@f& (0+255),f,b
 21239  011694  2B83               	incf	(printf@f+1)& (0+255),f,b
 21240                           
 21241                           ; BSR set to: 1
 21242                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 21243  011696  C182  FFF6         	movff	printf@f,tblptrl
 21244  01169A  C183  FFF7         	movff	printf@f+1,tblptrh
 21245  01169E  0E00               	movlw	low (__mediumconst shr (0+16))
 21246  0116A0  6EF8               	movwf	tblptru,c
 21247  0116A2  0E0D               	movlw	(high __ramtop+-1)
 21248  0116A4  64F7               	cpfsgt	tblptrh,c
 21249  0116A6  D003               	bra	u25507
 21250  0116A8  0008               	tblrd		*
 21251  0116AA  50F5               	movf	tablat,w,c
 21252  0116AC  D005               	bra	u25500
 21253  0116AE                     u25507:
 21254  0116AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 21255  0116B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21256  0116B6  50EF               	movf	indf0,w,c
 21257  0116B8                     u25500:
 21258  0116B8  ECA0  F0CB         	call	_isdigit
 21259  0116BC  B0D8               	btfsc	status,0,c
 21260  0116BE  D7B9               	goto	l1655
 21261  0116C0                     u25510:
 21262                           
 21263                           ;doprnt.c: 608: }
 21264                           ;doprnt.c: 611: if(*f == '.') {
 21265  0116C0  C182  FFF6         	movff	printf@f,tblptrl
 21266  0116C4  C183  FFF7         	movff	printf@f+1,tblptrh
 21267  0116C8  0E00               	movlw	low (__mediumconst shr (0+16))
 21268  0116CA  6EF8               	movwf	tblptru,c
 21269  0116CC  0E0D               	movlw	(high __ramtop+-1)
 21270  0116CE  64F7               	cpfsgt	tblptrh,c
 21271  0116D0  D003               	bra	u25527
 21272  0116D2  0008               	tblrd		*
 21273  0116D4  50F5               	movf	tablat,w,c
 21274  0116D6  D005               	bra	u25520
 21275  0116D8                     u25527:
 21276  0116D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 21277  0116DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 21278  0116E0  50EF               	movf	indf0,w,c
 21279  0116E2                     u25520:
 21280  0116E2  0A2E               	xorlw	46
 21281  0116E4  A4D8               	btfss	status,2,c
 21282  0116E6  D049               	goto	l1657
 21283                           
 21284                           ;doprnt.c: 612: flag |= 0x4000;
 21285  0116E8  0101               	movlb	1	; () banked
 21286  0116EA  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 21287                           
 21288                           ;doprnt.c: 613: f++;
 21289  0116EC  4B82               	infsnz	printf@f& (0+255),f,b
 21290  0116EE  2B83               	incf	(printf@f+1)& (0+255),f,b
 21291                           
 21292                           ; BSR set to: 1
 21293                           ;doprnt.c: 620: {
 21294                           ;doprnt.c: 621: prec = 0;
 21295  0116F0  0E00               	movlw	0
 21296  0116F2  6FB0               	movwf	(printf@prec+1)& (0+255),b
 21297  0116F4  0E00               	movlw	0
 21298  0116F6  6FAF               	movwf	printf@prec& (0+255),b
 21299                           
 21300                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 21301  0116F8  D02A               	goto	l1658
 21302  0116FA                     
 21303                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 21304                           
 21305                           ; BSR set to: 1
 21306  0116FA  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 21307  0116FE  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 21308  011702  0E00               	movlw	0
 21309  011704  0101               	movlb	1	; () banked
 21310  011706  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21311  011708  0E0A               	movlw	10
 21312  01170A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 21313  01170C  ECE2  F0CA         	call	___wmul	;wreg free
 21314  011710  C182  FFF6         	movff	printf@f,tblptrl
 21315  011714  C183  FFF7         	movff	printf@f+1,tblptrh
 21316  011718  0E00               	movlw	low (__mediumconst shr (0+16))
 21317  01171A  6EF8               	movwf	tblptru,c
 21318  01171C  0E0D               	movlw	(high __ramtop+-1)
 21319  01171E  64F7               	cpfsgt	tblptrh,c
 21320  011720  D003               	bra	u25547
 21321  011722  0008               	tblrd		*
 21322  011724  50F5               	movf	tablat,w,c
 21323  011726  D005               	bra	u25540
 21324  011728                     u25547:
 21325  011728  CFF6 FFE9          	movff	tblptrl,fsr0l
 21326  01172C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21327  011730  50EF               	movf	indf0,w,c
 21328  011732                     u25540:
 21329  011732  0101               	movlb	1	; () banked
 21330  011734  6F8C               	movwf	??_printf& (0+255),b
 21331  011736  518C               	movf	??_printf& (0+255),w,b
 21332  011738  2717               	addwf	?___wmul& (0+255),f,b
 21333  01173A  0E00               	movlw	0
 21334  01173C  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 21335  01173E  0ED0               	movlw	208
 21336  011740  2517               	addwf	?___wmul& (0+255),w,b
 21337  011742  6FAF               	movwf	printf@prec& (0+255),b
 21338  011744  0EFF               	movlw	255
 21339  011746  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 21340  011748  6FB0               	movwf	(printf@prec+1)& (0+255),b
 21341                           
 21342                           ; BSR set to: 1
 21343  01174A  4B82               	infsnz	printf@f& (0+255),f,b
 21344  01174C  2B83               	incf	(printf@f+1)& (0+255),f,b
 21345  01174E                     l1658:
 21346                           
 21347                           ; BSR set to: 1
 21348                           
 21349                           ; BSR set to: 1
 21350  01174E  C182  FFF6         	movff	printf@f,tblptrl
 21351  011752  C183  FFF7         	movff	printf@f+1,tblptrh
 21352  011756  0E00               	movlw	low (__mediumconst shr (0+16))
 21353  011758  6EF8               	movwf	tblptru,c
 21354  01175A  0E0D               	movlw	(high __ramtop+-1)
 21355  01175C  64F7               	cpfsgt	tblptrh,c
 21356  01175E  D003               	bra	u25557
 21357  011760  0008               	tblrd		*
 21358  011762  50F5               	movf	tablat,w,c
 21359  011764  D005               	bra	u25550
 21360  011766                     u25557:
 21361  011766  CFF6 FFE9          	movff	tblptrl,fsr0l
 21362  01176A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21363  01176E  50EF               	movf	indf0,w,c
 21364  011770                     u25550:
 21365  011770  ECA0  F0CB         	call	_isdigit
 21366  011774  A0D8               	btfss	status,0,c
 21367  011776  D0A4               	goto	l1662
 21368  011778  D7C0               	goto	l1659
 21369  01177A                     l1657:
 21370                           
 21371                           ;doprnt.c: 626: prec = 0;
 21372  01177A  0E00               	movlw	0
 21373  01177C  0101               	movlb	1	; () banked
 21374  01177E  6FB0               	movwf	(printf@prec+1)& (0+255),b
 21375  011780  0E00               	movlw	0
 21376  011782  6FAF               	movwf	printf@prec& (0+255),b
 21377                           
 21378                           ; BSR set to: 1
 21379                           ;doprnt.c: 628: flag |= 0x1000;
 21380  011784  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 21381                           
 21382                           ; BSR set to: 1
 21383                           ;doprnt.c: 630: }
 21384                           ;doprnt.c: 635: switch(c = *f++) {
 21385  011786  D09C               	goto	l1662
 21386  011788                     
 21387                           ; BSR set to: 1
 21388                           ;doprnt.c: 663: flag |= 0x400;
 21389                           
 21390                           ; BSR set to: 1
 21391  011788  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 21392                           
 21393                           ; BSR set to: 1
 21394                           ;doprnt.c: 698: case 'i':
 21395                           ;doprnt.c: 699: break;
 21396                           
 21397                           ; BSR set to: 1
 21398                           
 21399                           ;doprnt.c: 697: case 'd':
 21400                           
 21401                           ;doprnt.c: 664: break;
 21402  01178A  D0D1               	goto	l1666
 21403  01178C                     
 21404                           ; BSR set to: 1
 21405                           ;doprnt.c: 718: case 'x':
 21406                           ;doprnt.c: 721: flag |= 0x80;
 21407                           
 21408                           ; BSR set to: 1
 21409                           
 21410                           ; BSR set to: 1
 21411  01178C  8FAB               	bsf	printf@flag& (0+255),7,b
 21412                           
 21413                           ;doprnt.c: 723: break;
 21414  01178E  D0CF               	goto	l1666
 21415  011790                     
 21416                           ; BSR set to: 1
 21417                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 21418                           
 21419                           ; BSR set to: 1
 21420  011790  C19B  FFD9         	movff	printf@ap,fsr2l
 21421  011794  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21422  011798  CFDE F197          	movff	postinc2,printf@cp
 21423  01179C  CFDD F198          	movff	postdec2,printf@cp+1
 21424                           
 21425                           ; BSR set to: 1
 21426  0117A0  0E02               	movlw	2
 21427  0117A2  279B               	addwf	printf@ap& (0+255),f,b
 21428  0117A4  0E00               	movlw	0
 21429  0117A6  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21430                           
 21431                           ; BSR set to: 1
 21432                           ;doprnt.c: 740: if(!cp)
 21433  0117A8  5197               	movf	printf@cp& (0+255),w,b
 21434  0117AA  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 21435  0117AC  A4D8               	btfss	status,2,c
 21436  0117AE  D004               	goto	l1672
 21437                           
 21438                           ; BSR set to: 1
 21439                           ;doprnt.c: 741: cp = "(null)";
 21440  0117B0  0E86               	movlw	low STR_176
 21441  0117B2  6F97               	movwf	printf@cp& (0+255),b
 21442  0117B4  0EFF               	movlw	high STR_176
 21443  0117B6  6F98               	movwf	(printf@cp+1)& (0+255),b
 21444  0117B8                     l1672:
 21445                           
 21446                           ; BSR set to: 1
 21447                           ;doprnt.c: 745: len = 0;
 21448                           
 21449                           ; BSR set to: 1
 21450  0117B8  0E00               	movlw	0
 21451  0117BA  6F9A               	movwf	(printf@len+1)& (0+255),b
 21452  0117BC  0E00               	movlw	0
 21453  0117BE  6F99               	movwf	printf@len& (0+255),b
 21454                           
 21455                           ;doprnt.c: 746: while(cp[len])
 21456  0117C0  D003               	goto	l1673
 21457  0117C2                     
 21458                           ;doprnt.c: 747: len++;
 21459                           
 21460                           ; BSR set to: 1
 21461  0117C2  0101               	movlb	1	; () banked
 21462  0117C4  4B99               	infsnz	printf@len& (0+255),f,b
 21463  0117C6  2B9A               	incf	(printf@len+1)& (0+255),f,b
 21464  0117C8                     l1673:
 21465                           
 21466                           ; BSR set to: 1
 21467                           
 21468                           ; BSR set to: 1
 21469  0117C8  5199               	movf	printf@len& (0+255),w,b
 21470  0117CA  2597               	addwf	printf@cp& (0+255),w,b
 21471  0117CC  6F8C               	movwf	??_printf& (0+255),b
 21472  0117CE  519A               	movf	(printf@len+1)& (0+255),w,b
 21473  0117D0  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 21474  0117D2  6F8D               	movwf	(??_printf+1)& (0+255),b
 21475  0117D4  C18C  FFF6         	movff	??_printf,tblptrl
 21476  0117D8  C18D  FFF7         	movff	??_printf+1,tblptrh
 21477  0117DC  0E00               	movlw	low (__mediumconst shr (0+16))
 21478  0117DE  6EF8               	movwf	tblptru,c
 21479  0117E0  0E0D               	movlw	(high __ramtop+-1)
 21480  0117E2  64F7               	cpfsgt	tblptrh,c
 21481  0117E4  D003               	bra	u25587
 21482  0117E6  0008               	tblrd		*
 21483  0117E8  50F5               	movf	tablat,w,c
 21484  0117EA  D005               	bra	u25580
 21485  0117EC                     u25587:
 21486  0117EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21487  0117F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21488  0117F4  50EF               	movf	indf0,w,c
 21489  0117F6                     u25580:
 21490  0117F6  0900               	iorlw	0
 21491  0117F8  A4D8               	btfss	status,2,c
 21492  0117FA  D7E3               	goto	l1674
 21493  0117FC                     u25590:
 21494                           
 21495                           ;doprnt.c: 753: if(prec && prec < len)
 21496                           
 21497                           ;doprnt.c: 750: dostring:
 21498  0117FC  0101               	movlb	1	; () banked
 21499  0117FE  51AF               	movf	printf@prec& (0+255),w,b
 21500  011800  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21501  011802  B4D8               	btfsc	status,2,c
 21502  011804  D00A               	goto	l1677
 21503                           
 21504                           ; BSR set to: 1
 21505  011806  5199               	movf	printf@len& (0+255),w,b
 21506  011808  5DAF               	subwf	printf@prec& (0+255),w,b
 21507  01180A  519A               	movf	(printf@len+1)& (0+255),w,b
 21508  01180C  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 21509  01180E  B0D8               	btfsc	status,0,c
 21510  011810  D004               	goto	l1677
 21511                           
 21512                           ; BSR set to: 1
 21513                           ;doprnt.c: 754: len = prec;
 21514  011812  C1AF  F199         	movff	printf@prec,printf@len
 21515  011816  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 21516  01181A                     l1677:
 21517                           
 21518                           ; BSR set to: 1
 21519                           ;doprnt.c: 757: if(width > len)
 21520                           
 21521                           ; BSR set to: 1
 21522  01181A  51AD               	movf	printf@width& (0+255),w,b
 21523  01181C  5D99               	subwf	printf@len& (0+255),w,b
 21524  01181E  51AE               	movf	(printf@width+1)& (0+255),w,b
 21525  011820  599A               	subwfb	(printf@len+1)& (0+255),w,b
 21526  011822  B0D8               	btfsc	status,0,c
 21527  011824  D005               	goto	l1678
 21528                           
 21529                           ; BSR set to: 1
 21530                           ;doprnt.c: 758: width -= len;
 21531  011826  5199               	movf	printf@len& (0+255),w,b
 21532  011828  5FAD               	subwf	printf@width& (0+255),f,b
 21533  01182A  519A               	movf	(printf@len+1)& (0+255),w,b
 21534  01182C  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21535  01182E  D008               	goto	l1680
 21536  011830                     l1678:
 21537                           
 21538                           ; BSR set to: 1
 21539                           ;doprnt.c: 759: else
 21540                           ;doprnt.c: 760: width = 0;
 21541                           
 21542                           ; BSR set to: 1
 21543  011830  0E00               	movlw	0
 21544  011832  6FAE               	movwf	(printf@width+1)& (0+255),b
 21545  011834  0E00               	movlw	0
 21546  011836  6FAD               	movwf	printf@width& (0+255),b
 21547                           
 21548                           ; BSR set to: 1
 21549                           ;doprnt.c: 764: while(width--)
 21550  011838  D003               	goto	l1680
 21551  01183A                     l19467:
 21552                           
 21553                           ; BSR set to: 1
 21554                           ;doprnt.c: 765: (putch(' ') );
 21555  01183A  0E20               	movlw	32
 21556  01183C  EC8D  F0CC         	call	_putch
 21557  011840                     l1680:
 21558  011840  0101               	movlb	1	; () banked
 21559  011842  07AD               	decf	printf@width& (0+255),f,b
 21560  011844  A0D8               	btfss	status,0,c
 21561  011846  07AE               	decf	(printf@width+1)& (0+255),f,b
 21562  011848  29AD               	incf	printf@width& (0+255),w,b
 21563  01184A  E1F7               	bnz	l19467
 21564  01184C  29AE               	incf	(printf@width+1)& (0+255),w,b
 21565  01184E  B4D8               	btfsc	status,2,c
 21566  011850  D017               	goto	l1683
 21567  011852  D7F3               	goto	l1681
 21568  011854                     l19471:
 21569                           
 21570                           ; BSR set to: 1
 21571                           ;doprnt.c: 768: (putch(*cp++) );
 21572  011854  C197  FFF6         	movff	printf@cp,tblptrl
 21573  011858  C198  FFF7         	movff	printf@cp+1,tblptrh
 21574  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
 21575  01185E  6EF8               	movwf	tblptru,c
 21576  011860  0E0D               	movlw	(high __ramtop+-1)
 21577  011862  64F7               	cpfsgt	tblptrh,c
 21578  011864  D003               	bra	u25647
 21579  011866  0008               	tblrd		*
 21580  011868  50F5               	movf	tablat,w,c
 21581  01186A  D005               	bra	u25640
 21582  01186C                     u25647:
 21583  01186C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21584  011870  CFF7 FFEA          	movff	tblptrh,fsr0h
 21585  011874  50EF               	movf	indf0,w,c
 21586  011876                     u25640:
 21587  011876  EC8D  F0CC         	call	_putch
 21588  01187A  0101               	movlb	1	; () banked
 21589  01187C  4B97               	infsnz	printf@cp& (0+255),f,b
 21590  01187E  2B98               	incf	(printf@cp+1)& (0+255),f,b
 21591  011880                     l1683:
 21592                           
 21593                           ; BSR set to: 1
 21594                           
 21595                           ; BSR set to: 1
 21596  011880  0799               	decf	printf@len& (0+255),f,b
 21597  011882  A0D8               	btfss	status,0,c
 21598  011884  079A               	decf	(printf@len+1)& (0+255),f,b
 21599  011886  2999               	incf	printf@len& (0+255),w,b
 21600  011888  E1E5               	bnz	l19471
 21601  01188A  299A               	incf	(printf@len+1)& (0+255),w,b
 21602  01188C  B4D8               	btfsc	status,2,c
 21603  01188E  EF95  F091         	goto	u26200
 21604  011892  D7E0               	goto	l1684
 21605  011894                     
 21606                           ; BSR set to: 1
 21607                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 21608                           
 21609                           ; BSR set to: 1
 21610  011894  C19B  FFD9         	movff	printf@ap,fsr2l
 21611  011898  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21612  01189C  50DF               	movf	indf2,w,c
 21613  01189E  6FB1               	movwf	printf@c& (0+255),b
 21614                           
 21615                           ; BSR set to: 1
 21616  0118A0  0E02               	movlw	2
 21617  0118A2  279B               	addwf	printf@ap& (0+255),f,b
 21618  0118A4  0E00               	movlw	0
 21619  0118A6  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21620  0118A8                     
 21621                           ; BSR set to: 1
 21622                           ;doprnt.c: 805: cp = (char *)&c;
 21623                           
 21624                           ; BSR set to: 1
 21625  0118A8  0EB1               	movlw	low printf@c
 21626  0118AA  6F97               	movwf	printf@cp& (0+255),b
 21627  0118AC  0E01               	movlw	high printf@c
 21628  0118AE  6F98               	movwf	(printf@cp+1)& (0+255),b
 21629                           
 21630                           ; BSR set to: 1
 21631                           ;doprnt.c: 806: len = 1;
 21632  0118B0  0E00               	movlw	0
 21633  0118B2  6F9A               	movwf	(printf@len+1)& (0+255),b
 21634  0118B4  0E01               	movlw	1
 21635  0118B6  6F99               	movwf	printf@len& (0+255),b
 21636                           
 21637                           ;doprnt.c: 807: goto dostring;
 21638  0118B8  D7A1               	goto	u25590
 21639  0118BA                     
 21640                           ; BSR set to: 1
 21641                           ;doprnt.c: 818: flag |= 0xC0;
 21642                           
 21643                           ; BSR set to: 1
 21644  0118BA  0EC0               	movlw	192
 21645  0118BC  13AB               	iorwf	printf@flag& (0+255),f,b
 21646                           
 21647                           ; BSR set to: 1
 21648                           ;doprnt.c: 822: }
 21649                           
 21650                           ;doprnt.c: 819: break;
 21651  0118BE  D037               	goto	l1666
 21652  0118C0                     l1662:
 21653                           
 21654                           ; BSR set to: 1
 21655  0118C0  0101               	movlb	1	; () banked
 21656  0118C2  5182               	movf	printf@f& (0+255),w,b
 21657  0118C4  6F8C               	movwf	??_printf& (0+255),b
 21658  0118C6  5183               	movf	(printf@f+1)& (0+255),w,b
 21659  0118C8  6F8D               	movwf	(??_printf+1)& (0+255),b
 21660  0118CA  4B82               	infsnz	printf@f& (0+255),f,b
 21661  0118CC  2B83               	incf	(printf@f+1)& (0+255),f,b
 21662  0118CE  C18C  FFF6         	movff	??_printf,tblptrl
 21663  0118D2  C18D  FFF7         	movff	??_printf+1,tblptrh
 21664  0118D6  0E00               	movlw	low (__mediumconst shr (0+16))
 21665  0118D8  6EF8               	movwf	tblptru,c
 21666  0118DA  0E0D               	movlw	(high __ramtop+-1)
 21667  0118DC  64F7               	cpfsgt	tblptrh,c
 21668  0118DE  D003               	bra	u25667
 21669  0118E0  0008               	tblrd		*
 21670  0118E2  50F5               	movf	tablat,w,c
 21671  0118E4  D005               	bra	u25660
 21672  0118E6                     u25667:
 21673  0118E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 21674  0118EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 21675  0118EE  50EF               	movf	indf0,w,c
 21676  0118F0                     u25660:
 21677  0118F0  0101               	movlb	1	; () banked
 21678  0118F2  6FB1               	movwf	printf@c& (0+255),b
 21679  0118F4  51B1               	movf	printf@c& (0+255),w,b
 21680                           
 21681                           ; Switch size 1, requested type "space"
 21682                           ; Number of cases is 9, Range of values is 0 to 120
 21683                           ; switch strategies available:
 21684                           ; Name         Instructions Cycles
 21685                           ; simple_byte           28    15 (average)
 21686                           ;	Chosen strategy is simple_byte
 21687  0118F6  0A00               	xorlw	0	; case 0
 21688  0118F8  B4D8               	btfsc	status,2,c
 21689  0118FA  0012               	return	
 21690  0118FC  0A58               	xorlw	88	; case 88
 21691  0118FE  B4D8               	btfsc	status,2,c
 21692  011900  D745               	goto	l1669
 21693  011902  0A3B               	xorlw	59	; case 99
 21694  011904  B4D8               	btfsc	status,2,c
 21695  011906  D7C6               	goto	l1686
 21696  011908  0A07               	xorlw	7	; case 100
 21697  01190A  B4D8               	btfsc	status,2,c
 21698  01190C  D010               	goto	l1666
 21699  01190E  0A02               	xorlw	2	; case 102
 21700  011910  B4D8               	btfsc	status,2,c
 21701  011912  D73A               	goto	l1665
 21702  011914  0A0F               	xorlw	15	; case 105
 21703  011916  B4D8               	btfsc	status,2,c
 21704  011918  D00A               	goto	l1666
 21705  01191A  0A1A               	xorlw	26	; case 115
 21706  01191C  B4D8               	btfsc	status,2,c
 21707  01191E  D738               	goto	l1671
 21708  011920  0A06               	xorlw	6	; case 117
 21709  011922  B4D8               	btfsc	status,2,c
 21710  011924  D7CA               	goto	l1688
 21711  011926  0A0D               	xorlw	13	; case 120
 21712  011928  B4D8               	btfsc	status,2,c
 21713  01192A  D730               	goto	l1669
 21714  01192C  D7BD               	goto	l1687
 21715  01192E                     l1666:
 21716                           
 21717                           ; BSR set to: 1
 21718                           ;doprnt.c: 825: if(flag & (0x700)) {
 21719                           
 21720                           ; BSR set to: 1
 21721  01192E  0E07               	movlw	7
 21722  011930  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21723  011932  B4D8               	btfsc	status,2,c
 21724  011934  D33D               	goto	l1689
 21725                           
 21726                           ; BSR set to: 1
 21727                           ;doprnt.c: 827: if(flag & 0x1000)
 21728  011936  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 21729  011938  D004               	goto	l1690
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;doprnt.c: 829: prec = 6;
 21733  01193A  0E00               	movlw	0
 21734  01193C  6FB0               	movwf	(printf@prec+1)& (0+255),b
 21735  01193E  0E06               	movlw	6
 21736  011940  6FAF               	movwf	printf@prec& (0+255),b
 21737  011942                     l1690:
 21738                           
 21739                           ; BSR set to: 1
 21740                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 21741                           
 21742                           ; BSR set to: 1
 21743  011942  C19B  FFD9         	movff	printf@ap,fsr2l
 21744  011946  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21745  01194A  CFDE F1A3          	movff	postinc2,printf@fval
 21746  01194E  CFDE F1A4          	movff	postinc2,printf@fval+1
 21747  011952  CFDE F1A5          	movff	postinc2,printf@fval+2
 21748  011956  CFDE F1A6          	movff	postinc2,printf@fval+3
 21749                           
 21750                           ; BSR set to: 1
 21751  01195A  0E04               	movlw	4
 21752  01195C  279B               	addwf	printf@ap& (0+255),f,b
 21753  01195E  0E00               	movlw	0
 21754  011960  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21755                           
 21756                           ; BSR set to: 1
 21757                           ;doprnt.c: 831: if(fval < 0.0) {
 21758  011962  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 21759  011964  D015               	goto	l1691
 21760                           
 21761                           ; BSR set to: 1
 21762                           ;doprnt.c: 832: fval = -fval;
 21763  011966  C1A3  F125         	movff	printf@fval,___flneg@f1
 21764  01196A  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 21765  01196E  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 21766  011972  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 21767  011976  EC86  F0CA         	call	___flneg	;wreg free
 21768  01197A  C125  F1A3         	movff	?___flneg,printf@fval
 21769  01197E  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 21770  011982  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 21771  011986  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 21772                           
 21773                           ;doprnt.c: 833: flag |= 0x03;
 21774  01198A  0E03               	movlw	3
 21775  01198C  0101               	movlb	1	; () banked
 21776  01198E  13AB               	iorwf	printf@flag& (0+255),f,b
 21777  011990                     l1691:
 21778                           
 21779                           ; BSR set to: 1
 21780                           ;doprnt.c: 834: }
 21781                           ;doprnt.c: 835: exp = 0;
 21782                           
 21783                           ; BSR set to: 1
 21784  011990  0E00               	movlw	0
 21785  011992  6FA2               	movwf	(printf@exp+1)& (0+255),b
 21786  011994  0E00               	movlw	0
 21787  011996  6FA1               	movwf	printf@exp& (0+255),b
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;doprnt.c: 836: if( fval!=0) {
 21791  011998  51A3               	movf	printf@fval& (0+255),w,b
 21792  01199A  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 21793  01199C  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 21794  01199E  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 21795  0119A0  B4D8               	btfsc	status,2,c
 21796  0119A2  D084               	goto	l1696
 21797                           
 21798                           ; BSR set to: 1
 21799                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 21800  0119A4  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 21801  0119A6  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 21802  0119A8  0F82               	addlw	130
 21803  0119AA  6FA1               	movwf	printf@exp& (0+255),b
 21804  0119AC  6BA2               	clrf	(printf@exp+1)& (0+255),b
 21805  0119AE  0EFF               	movlw	255
 21806  0119B0  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 21807                           
 21808                           ; BSR set to: 1
 21809                           ;doprnt.c: 838: exp--;
 21810  0119B2  07A1               	decf	printf@exp& (0+255),f,b
 21811  0119B4  A0D8               	btfss	status,0,c
 21812  0119B6  07A2               	decf	(printf@exp+1)& (0+255),f,b
 21813                           
 21814                           ; BSR set to: 1
 21815                           ;doprnt.c: 839: exp *= 3;
 21816  0119B8  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 21817  0119BC  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 21818  0119C0  0E00               	movlw	0
 21819  0119C2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21820  0119C4  0E03               	movlw	3
 21821  0119C6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 21822  0119C8  ECE2  F0CA         	call	___wmul	;wreg free
 21823  0119CC  C117  F1A1         	movff	?___wmul,printf@exp
 21824  0119D0  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 21825                           
 21826                           ;doprnt.c: 840: exp /= 10;
 21827  0119D4  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 21828  0119D8  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 21829  0119DC  0E00               	movlw	0
 21830  0119DE  0101               	movlb	1	; () banked
 21831  0119E0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 21832  0119E2  0E0A               	movlw	10
 21833  0119E4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 21834  0119E6  ECD7  F0C2         	call	___awdiv	;wreg free
 21835  0119EA  C11D  F1A1         	movff	?___awdiv,printf@exp
 21836  0119EE  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 21837                           
 21838                           ;doprnt.c: 841: if(exp < 0)
 21839  0119F2  0101               	movlb	1	; () banked
 21840  0119F4  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 21841  0119F6  D003               	goto	l1693
 21842                           
 21843                           ; BSR set to: 1
 21844                           ;doprnt.c: 842: exp--;
 21845  0119F8  07A1               	decf	printf@exp& (0+255),f,b
 21846  0119FA  A0D8               	btfss	status,0,c
 21847  0119FC  07A2               	decf	(printf@exp+1)& (0+255),f,b
 21848  0119FE                     l1693:
 21849                           
 21850                           ; BSR set to: 1
 21851                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 21852                           
 21853                           ; BSR set to: 1
 21854  0119FE  51A1               	movf	printf@exp& (0+255),w,b
 21855  011A00  0800               	sublw	0
 21856  011A02  EC03  F09E         	call	_scale
 21857  011A06  C16F  F19D         	movff	?_scale,printf@tmpval
 21858  011A0A  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 21859  011A0E  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 21860  011A12  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 21861                           
 21862                           ;doprnt.c: 847: tmpval.integ *= fval;
 21863  011A16  C19D  F156         	movff	printf@tmpval,___flmul@b
 21864  011A1A  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 21865  011A1E  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 21866  011A22  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 21867  011A26  C1A3  F15A         	movff	printf@fval,___flmul@a
 21868  011A2A  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 21869  011A2E  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 21870  011A32  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 21871  011A36  EC49  F0A4         	call	___flmul	;wreg free
 21872  011A3A  C156  F19D         	movff	?___flmul,printf@tmpval
 21873  011A3E  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 21874  011A42  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 21875  011A46  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 21876                           
 21877                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 21878  011A4A  C19D  F117         	movff	printf@tmpval,___flge@ff1
 21879  011A4E  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 21880  011A52  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 21881  011A56  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 21882  011A5A  0E00               	movlw	0
 21883  011A5C  0101               	movlb	1	; () banked
 21884  011A5E  6F1B               	movwf	___flge@ff2& (0+255),b
 21885  011A60  0E00               	movlw	0
 21886  011A62  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 21887  011A64  0E80               	movlw	128
 21888  011A66  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 21889  011A68  0E3F               	movlw	63
 21890  011A6A  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 21891  011A6C  ECF8  F0BC         	call	___flge	;wreg free
 21892  011A70  0101               	movlb	1	; () banked
 21893  011A72  B0D8               	btfsc	status,0,c
 21894  011A74  D004               	goto	l1694
 21895                           
 21896                           ; BSR set to: 1
 21897                           ;doprnt.c: 849: exp--;
 21898  011A76  07A1               	decf	printf@exp& (0+255),f,b
 21899  011A78  A0D8               	btfss	status,0,c
 21900  011A7A  07A2               	decf	(printf@exp+1)& (0+255),f,b
 21901  011A7C  D017               	goto	l1696
 21902  011A7E                     l1694:
 21903                           
 21904                           ; BSR set to: 1
 21905                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 21906                           
 21907                           ; BSR set to: 1
 21908  011A7E  C19D  F117         	movff	printf@tmpval,___flge@ff1
 21909  011A82  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 21910  011A86  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 21911  011A8A  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 21912  011A8E  0E00               	movlw	0
 21913  011A90  6F1B               	movwf	___flge@ff2& (0+255),b
 21914  011A92  0E00               	movlw	0
 21915  011A94  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 21916  011A96  0E20               	movlw	32
 21917  011A98  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 21918  011A9A  0E41               	movlw	65
 21919  011A9C  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 21920  011A9E  ECF8  F0BC         	call	___flge	;wreg free
 21921  011AA2  0101               	movlb	1	; () banked
 21922  011AA4  A0D8               	btfss	status,0,c
 21923  011AA6  D002               	goto	l1696
 21924                           
 21925                           ; BSR set to: 1
 21926                           ;doprnt.c: 851: exp++;
 21927  011AA8  4BA1               	infsnz	printf@exp& (0+255),f,b
 21928  011AAA  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 21929  011AAC                     l1696:
 21930                           
 21931                           ; BSR set to: 1
 21932                           ;doprnt.c: 852: }
 21933                           ;doprnt.c: 1112: if(prec <= 12)
 21934                           
 21935                           ; BSR set to: 1
 21936                           
 21937                           ; BSR set to: 1
 21938                           
 21939                           ; BSR set to: 1
 21940  011AAC  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 21941  011AAE  D006               	goto	u25740
 21942  011AB0  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21943  011AB2  E121               	bnz	l19539
 21944  011AB4  0E0D               	movlw	13
 21945  011AB6  5DAF               	subwf	printf@prec& (0+255),w,b
 21946  011AB8  B0D8               	btfsc	status,0,c
 21947  011ABA  D01D               	goto	l1697
 21948  011ABC                     u25740:
 21949                           
 21950                           ; BSR set to: 1
 21951                           ;doprnt.c: 1113: fval += fround(prec);
 21952  011ABC  C1A3  F129         	movff	printf@fval,___fladd@b
 21953  011AC0  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 21954  011AC4  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 21955  011AC8  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 21956  011ACC  51AF               	movf	printf@prec& (0+255),w,b
 21957  011ACE  EC3B  F0AF         	call	_fround
 21958  011AD2  C16F  F12D         	movff	?_fround,___fladd@a
 21959  011AD6  C170  F12E         	movff	?_fround+1,___fladd@a+1
 21960  011ADA  C171  F12F         	movff	?_fround+2,___fladd@a+2
 21961  011ADE  C172  F130         	movff	?_fround+3,___fladd@a+3
 21962  011AE2  EC9A  F0A7         	call	___fladd	;wreg free
 21963  011AE6  C129  F1A3         	movff	?___fladd,printf@fval
 21964  011AEA  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 21965  011AEE  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 21966  011AF2  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 21967  011AF6                     l1697:
 21968  011AF6                     l19539:
 21969                           
 21970                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 21971  011AF6  0101               	movlb	1	; () banked
 21972  011AF8  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 21973  011AFA  D006               	goto	u25750
 21974  011AFC  51A2               	movf	(printf@exp+1)& (0+255),w,b
 21975  011AFE  E122               	bnz	l19547
 21976  011B00  0E0A               	movlw	10
 21977  011B02  5DA1               	subwf	printf@exp& (0+255),w,b
 21978  011B04  B0D8               	btfsc	status,0,c
 21979  011B06  D01E               	goto	u25780
 21980  011B08                     u25750:
 21981                           
 21982                           ; BSR set to: 1
 21983  011B08  51A3               	movf	printf@fval& (0+255),w,b
 21984  011B0A  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 21985  011B0C  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 21986  011B0E  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 21987  011B10  B4D8               	btfsc	status,2,c
 21988  011B12  D062               	goto	l1698
 21989                           
 21990                           ; BSR set to: 1
 21991  011B14  C1A3  F178         	movff	printf@fval,___fltol@f1
 21992  011B18  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 21993  011B1C  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 21994  011B20  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 21995  011B24  EC9A  F0BF         	call	___fltol	;wreg free
 21996  011B28  0101               	movlb	1	; () banked
 21997  011B2A  5178               	movf	?___fltol& (0+255),w,b
 21998  011B2C  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 21999  011B2E  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 22000  011B30  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 22001  011B32  B4D8               	btfsc	status,2,c
 22002                           
 22003                           ; BSR set to: 1
 22004  011B34  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 22005  011B36  D050               	goto	l1698
 22006  011B38  51A2               	movf	(printf@exp+1)& (0+255),w,b
 22007  011B3A  E104               	bnz	l19547
 22008  011B3C  0E02               	movlw	2
 22009  011B3E  5DA1               	subwf	printf@exp& (0+255),w,b
 22010  011B40  A0D8               	btfss	status,0,c
 22011  011B42  D04A               	goto	l1698
 22012  011B44                     u25780:
 22013  011B44                     l19547:
 22014                           
 22015                           ; BSR set to: 1
 22016                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 22017  011B44  C19D  F117         	movff	printf@tmpval,___flge@ff1
 22018  011B48  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 22019  011B4C  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 22020  011B50  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 22021  011B54  0E5F               	movlw	95
 22022  011B56  6F1B               	movwf	___flge@ff2& (0+255),b
 22023  011B58  0E70               	movlw	112
 22024  011B5A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 22025  011B5C  0E89               	movlw	137
 22026  011B5E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 22027  011B60  0E40               	movlw	64
 22028  011B62  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 22029  011B64  ECF8  F0BC         	call	___flge	;wreg free
 22030  011B68  0101               	movlb	1	; () banked
 22031  011B6A  B0D8               	btfsc	status,0,c
 22032  011B6C  D002               	goto	l1701
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 22036  011B6E  0EF7               	movlw	247
 22037  011B70  D001               	goto	L3
 22038  011B72                     l1701:
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 22042                           
 22043                           ; BSR set to: 1
 22044  011B72  0EF8               	movlw	248
 22045  011B74                     L3:
 22046  011B74  27A1               	addwf	printf@exp& (0+255),f,b
 22047  011B76  0EFF               	movlw	255
 22048  011B78  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 22049                           
 22050                           ; BSR set to: 1
 22051                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 22052                           
 22053                           ; BSR set to: 1
 22054  011B7A  51A1               	movf	printf@exp& (0+255),w,b
 22055  011B7C  EC03  F09E         	call	_scale
 22056  011B80  C16F  F19D         	movff	?_scale,printf@tmpval
 22057  011B84  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 22058  011B88  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 22059  011B8C  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 22060  011B90  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 22061  011B94  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 22062  011B98  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 22063  011B9C  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 22064  011BA0  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 22065  011BA4  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 22066  011BA8  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 22067  011BAC  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 22068  011BB0  EC3D  F0BB         	call	__div_to_l_	;wreg free
 22069  011BB4  C117  F1A7         	movff	?__div_to_l_,printf@val
 22070  011BB8  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 22071  011BBC  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 22072  011BC0  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 22073                           
 22074                           ;doprnt.c: 1129: fval = 0.0;
 22075  011BC4  0E00               	movlw	0
 22076  011BC6  0101               	movlb	1	; () banked
 22077  011BC8  6FA3               	movwf	printf@fval& (0+255),b
 22078  011BCA  0E00               	movlw	0
 22079  011BCC  6FA4               	movwf	(printf@fval+1)& (0+255),b
 22080  011BCE  0E00               	movlw	0
 22081  011BD0  6FA5               	movwf	(printf@fval+2)& (0+255),b
 22082  011BD2  0E00               	movlw	0
 22083  011BD4  6FA6               	movwf	(printf@fval+3)& (0+255),b
 22084                           
 22085                           ;doprnt.c: 1130: } else {
 22086  011BD6  D03C               	goto	l1707
 22087  011BD8                     l1698:
 22088                           
 22089                           ; BSR set to: 1
 22090                           ;doprnt.c: 1131: val = (unsigned long)fval;
 22091                           
 22092                           ; BSR set to: 1
 22093  011BD8  C1A3  F178         	movff	printf@fval,___fltol@f1
 22094  011BDC  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 22095  011BE0  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 22096  011BE4  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 22097  011BE8  EC9A  F0BF         	call	___fltol	;wreg free
 22098  011BEC  C178  F1A7         	movff	?___fltol,printf@val
 22099  011BF0  C179  F1A8         	movff	?___fltol+1,printf@val+1
 22100  011BF4  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 22101  011BF8  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 22102                           
 22103                           ;doprnt.c: 1132: fval -= (double)val;
 22104  011BFC  C1A3  F13D         	movff	printf@fval,___flsub@b
 22105  011C00  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 22106  011C04  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 22107  011C08  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 22108  011C0C  C1A7  F117         	movff	printf@val,___xxtofl@val
 22109  011C10  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 22110  011C14  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 22111  011C18  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 22112  011C1C  0E00               	movlw	0
 22113  011C1E  EC1D  F0B8         	call	___xxtofl
 22114  011C22  C117  F141         	movff	?___xxtofl,___flsub@a
 22115  011C26  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 22116  011C2A  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 22117  011C2E  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 22118  011C32  EC75  F0C8         	call	___flsub	;wreg free
 22119  011C36  C13D  F1A3         	movff	?___flsub,printf@fval
 22120  011C3A  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 22121  011C3E  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 22122  011C42  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 22123                           
 22124                           ;doprnt.c: 1133: exp = 0;
 22125  011C46  0E00               	movlw	0
 22126  011C48  0101               	movlb	1	; () banked
 22127  011C4A  6FA2               	movwf	(printf@exp+1)& (0+255),b
 22128  011C4C  0E00               	movlw	0
 22129  011C4E  6FA1               	movwf	printf@exp& (0+255),b
 22130  011C50                     l1707:
 22131                           
 22132                           ; BSR set to: 1
 22133                           ;doprnt.c: 1134: }
 22134                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 22135                           
 22136                           ; BSR set to: 1
 22137  011C50  0E01               	movlw	1
 22138  011C52  6FB1               	movwf	printf@c& (0+255),b
 22139  011C54                     l19567:
 22140                           
 22141                           ; BSR set to: 1
 22142  011C54  0E0A               	movlw	10
 22143  011C56  19B1               	xorwf	printf@c& (0+255),w,b
 22144  011C58  B4D8               	btfsc	status,2,c
 22145  011C5A  D01B               	goto	u25820
 22146                           
 22147                           ; BSR set to: 1
 22148                           ;doprnt.c: 1137: if(val < dpowers[c])
 22149                           
 22150                           ; BSR set to: 1
 22151                           
 22152                           ; BSR set to: 1
 22153  011C5C  51B1               	movf	printf@c& (0+255),w,b
 22154  011C5E  0D04               	mullw	4
 22155  011C60  0EC7               	movlw	low _dpowers
 22156  011C62  24F3               	addwf	prodl,w,c
 22157  011C64  6EF6               	movwf	tblptrl,c
 22158  011C66  0ED4               	movlw	high _dpowers
 22159  011C68  20F4               	addwfc	prodh,w,c
 22160  011C6A  6EF7               	movwf	tblptrh,c
 22161  011C6C                     	if	1	;There are 3 active tblptr bytes
 22162  011C6C  6AF8               	clrf	tblptru,c
 22163  011C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 22164  011C70  22F8               	addwfc	tblptru,f,c
 22165  011C72                     	endif
 22166  011C72  0009               	tblrd		*+
 22167  011C74  50F5               	movf	tablat,w,c
 22168  011C76  5DA7               	subwf	printf@val& (0+255),w,b
 22169  011C78  0009               	tblrd		*+
 22170  011C7A  50F5               	movf	tablat,w,c
 22171  011C7C  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 22172  011C7E  0009               	tblrd		*+
 22173  011C80  50F5               	movf	tablat,w,c
 22174  011C82  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 22175  011C84  0009               	tblrd		*+
 22176  011C86  50F5               	movf	tablat,w,c
 22177  011C88  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 22178  011C8A  A0D8               	btfss	status,0,c
 22179  011C8C  D002               	goto	u25820
 22180                           
 22181                           ; BSR set to: 1
 22182                           
 22183                           ; BSR set to: 1
 22184                           
 22185                           ; BSR set to: 1
 22186                           ;doprnt.c: 1138: break;
 22187  011C8E  2BB1               	incf	printf@c& (0+255),f,b
 22188  011C90  D7E1               	goto	l19567
 22189  011C92                     u25820:
 22190                           
 22191                           ; BSR set to: 1
 22192                           ;doprnt.c: 1142: width -= prec + c + exp;
 22193                           
 22194                           ; BSR set to: 1
 22195  011C92  C1B1  F18C         	movff	printf@c,??_printf
 22196  011C96  6B8D               	clrf	(??_printf+1)& (0+255),b
 22197  011C98  BF8C               	btfsc	??_printf& (0+255),7,b
 22198  011C9A  078D               	decf	(??_printf+1)& (0+255),f,b
 22199  011C9C  51AF               	movf	printf@prec& (0+255),w,b
 22200  011C9E  278C               	addwf	??_printf& (0+255),f,b
 22201  011CA0  51B0               	movf	(printf@prec+1)& (0+255),w,b
 22202  011CA2  238D               	addwfc	(??_printf+1)& (0+255),f,b
 22203  011CA4  51A1               	movf	printf@exp& (0+255),w,b
 22204  011CA6  278C               	addwf	??_printf& (0+255),f,b
 22205  011CA8  51A2               	movf	(printf@exp+1)& (0+255),w,b
 22206  011CAA  238D               	addwfc	(??_printf+1)& (0+255),f,b
 22207  011CAC  518C               	movf	??_printf& (0+255),w,b
 22208  011CAE  5FAD               	subwf	printf@width& (0+255),f,b
 22209  011CB0  518D               	movf	(??_printf+1)& (0+255),w,b
 22210  011CB2  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 22211                           
 22212                           ;doprnt.c: 1143: if(
 22213                           ;doprnt.c: 1147: prec)
 22214  011CB4  51AF               	movf	printf@prec& (0+255),w,b
 22215  011CB6  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 22216  011CB8  B4D8               	btfsc	status,2,c
 22217  011CBA  D003               	goto	l1711
 22218                           
 22219                           ; BSR set to: 1
 22220                           ;doprnt.c: 1148: width--;
 22221  011CBC  07AD               	decf	printf@width& (0+255),f,b
 22222  011CBE  A0D8               	btfss	status,0,c
 22223  011CC0  07AE               	decf	(printf@width+1)& (0+255),f,b
 22224  011CC2                     l1711:
 22225                           
 22226                           ; BSR set to: 1
 22227                           ;doprnt.c: 1149: if(flag & 0x03)
 22228                           
 22229                           ; BSR set to: 1
 22230  011CC2  0E03               	movlw	3
 22231  011CC4  15AB               	andwf	printf@flag& (0+255),w,b
 22232  011CC6  6F8C               	movwf	??_printf& (0+255),b
 22233  011CC8  0E00               	movlw	0
 22234  011CCA  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22235  011CCC  6F8D               	movwf	(??_printf+1)& (0+255),b
 22236  011CCE  518C               	movf	??_printf& (0+255),w,b
 22237  011CD0  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22238  011CD2  B4D8               	btfsc	status,2,c
 22239  011CD4  D003               	goto	l1712
 22240                           
 22241                           ; BSR set to: 1
 22242                           ;doprnt.c: 1150: width--;
 22243  011CD6  07AD               	decf	printf@width& (0+255),f,b
 22244  011CD8  A0D8               	btfss	status,0,c
 22245  011CDA  07AE               	decf	(printf@width+1)& (0+255),f,b
 22246  011CDC                     l1712:
 22247                           
 22248                           ; BSR set to: 1
 22249                           ;doprnt.c: 1153: if(flag & 0x04) {
 22250                           
 22251                           ; BSR set to: 1
 22252  011CDC  A5AB               	btfss	printf@flag& (0+255),2,b
 22253  011CDE  D025               	goto	l1719
 22254                           
 22255                           ; BSR set to: 1
 22256                           ;doprnt.c: 1157: if(flag & 0x03)
 22257  011CE0  0E03               	movlw	3
 22258  011CE2  15AB               	andwf	printf@flag& (0+255),w,b
 22259  011CE4  6F8C               	movwf	??_printf& (0+255),b
 22260  011CE6  0E00               	movlw	0
 22261  011CE8  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22262  011CEA  6F8D               	movwf	(??_printf+1)& (0+255),b
 22263  011CEC  518C               	movf	??_printf& (0+255),w,b
 22264  011CEE  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22265  011CF0  B4D8               	btfsc	status,2,c
 22266  011CF2  D00B               	goto	l1715
 22267                           
 22268                           ; BSR set to: 1
 22269                           ;doprnt.c: 1159: (putch('-') );
 22270  011CF4  0E2D               	movlw	45
 22271  011CF6  EC8D  F0CC         	call	_putch
 22272                           
 22273                           ;doprnt.c: 1168: while(width > 0) {
 22274  011CFA  D007               	goto	l1715
 22275  011CFC                     l19593:
 22276                           
 22277                           ;doprnt.c: 1169: (putch('0') );
 22278  011CFC  0E30               	movlw	48
 22279  011CFE  EC8D  F0CC         	call	_putch
 22280                           
 22281                           ;doprnt.c: 1170: width--;
 22282  011D02  0101               	movlb	1	; () banked
 22283  011D04  07AD               	decf	printf@width& (0+255),f,b
 22284  011D06  A0D8               	btfss	status,0,c
 22285  011D08  07AE               	decf	(printf@width+1)& (0+255),f,b
 22286  011D0A                     l1715:
 22287                           
 22288                           ; BSR set to: 1
 22289  011D0A  0101               	movlb	1	; () banked
 22290  011D0C  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 22291  011D0E  D06C               	goto	l1723
 22292  011D10  51AE               	movf	(printf@width+1)& (0+255),w,b
 22293  011D12  E1F4               	bnz	l19593
 22294  011D14  05AD               	decf	printf@width& (0+255),w,b
 22295  011D16  A0D8               	btfss	status,0,c
 22296  011D18  D067               	goto	l1723
 22297  011D1A  D7F0               	goto	l1716
 22298  011D1C                     l19599:
 22299                           
 22300                           ; BSR set to: 1
 22301                           ;doprnt.c: 1181: (putch(' ') );
 22302  011D1C  0E20               	movlw	32
 22303  011D1E  EC8D  F0CC         	call	_putch
 22304                           
 22305                           ;doprnt.c: 1182: width--;
 22306  011D22  0101               	movlb	1	; () banked
 22307  011D24  07AD               	decf	printf@width& (0+255),f,b
 22308  011D26  A0D8               	btfss	status,0,c
 22309  011D28  07AE               	decf	(printf@width+1)& (0+255),f,b
 22310  011D2A                     l1719:
 22311                           
 22312                           ; BSR set to: 1
 22313                           
 22314                           ; BSR set to: 1
 22315  011D2A  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 22316  011D2C  D005               	goto	u25880
 22317  011D2E  51AE               	movf	(printf@width+1)& (0+255),w,b
 22318  011D30  E1F5               	bnz	l19599
 22319  011D32  05AD               	decf	printf@width& (0+255),w,b
 22320  011D34  B0D8               	btfsc	status,0,c
 22321  011D36  D7F2               	goto	l1720
 22322  011D38                     u25880:
 22323                           
 22324                           ; BSR set to: 1
 22325                           ;doprnt.c: 1183: }
 22326                           ;doprnt.c: 1188: if(flag & 0x03)
 22327                           
 22328                           ; BSR set to: 1
 22329  011D38  0E03               	movlw	3
 22330  011D3A  15AB               	andwf	printf@flag& (0+255),w,b
 22331  011D3C  6F8C               	movwf	??_printf& (0+255),b
 22332  011D3E  0E00               	movlw	0
 22333  011D40  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22334  011D42  6F8D               	movwf	(??_printf+1)& (0+255),b
 22335  011D44  518C               	movf	??_printf& (0+255),w,b
 22336  011D46  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22337  011D48  B4D8               	btfsc	status,2,c
 22338  011D4A  D04E               	goto	l1723
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;doprnt.c: 1190: (putch('-') );
 22342  011D4C  0E2D               	movlw	45
 22343  011D4E  EC8D  F0CC         	call	_putch
 22344                           
 22345                           ;doprnt.c: 1195: }
 22346                           ;doprnt.c: 1196: while(c--) {
 22347  011D52  D04A               	goto	l1723
 22348  011D54                     
 22349                           ;doprnt.c: 1200: {
 22350                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 22351  011D54  C1A7  F117         	movff	printf@val,___lldiv@dividend
 22352  011D58  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 22353  011D5C  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 22354  011D60  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 22355  011D64  0101               	movlb	1	; () banked
 22356  011D66  51B1               	movf	printf@c& (0+255),w,b
 22357  011D68  0D04               	mullw	4
 22358  011D6A  0EC7               	movlw	low _dpowers
 22359  011D6C  24F3               	addwf	prodl,w,c
 22360  011D6E  6EF6               	movwf	tblptrl,c
 22361  011D70  0ED4               	movlw	high _dpowers
 22362  011D72  20F4               	addwfc	prodh,w,c
 22363  011D74  6EF7               	movwf	tblptrh,c
 22364  011D76                     	if	1	;There are 3 active tblptr bytes
 22365  011D76  6AF8               	clrf	tblptru,c
 22366  011D78  0E00               	movlw	low (__mediumconst shr (0+16))
 22367  011D7A  22F8               	addwfc	tblptru,f,c
 22368  011D7C                     	endif
 22369  011D7C  0009               	tblrd		*+
 22370  011D7E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 22371  011D82  0009               	tblrd		*+
 22372  011D84  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 22373  011D88  0009               	tblrd		*+
 22374  011D8A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 22375  011D8E  000A               	tblrd		*-
 22376  011D90  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 22377  011D94  EC1A  F0C3         	call	___lldiv	;wreg free
 22378  011D98  C117  F19D         	movff	?___lldiv,printf@tmpval
 22379  011D9C  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 22380  011DA0  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 22381  011DA4  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 22382                           
 22383                           ;doprnt.c: 1202: tmpval.vd %= 10;
 22384  011DA8  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 22385  011DAC  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 22386  011DB0  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 22387  011DB4  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 22388  011DB8  0E0A               	movlw	10
 22389  011DBA  0101               	movlb	1	; () banked
 22390  011DBC  6F28               	movwf	___llmod@divisor& (0+255),b
 22391  011DBE  0E00               	movlw	0
 22392  011DC0  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 22393  011DC2  0E00               	movlw	0
 22394  011DC4  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 22395  011DC6  0E00               	movlw	0
 22396  011DC8  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 22397  011DCA  ECAC  F0C5         	call	___llmod	;wreg free
 22398  011DCE  C124  F19D         	movff	?___llmod,printf@tmpval
 22399  011DD2  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 22400  011DD6  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 22401  011DDA  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 22402                           
 22403                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 22404  011DDE  0101               	movlb	1	; () banked
 22405  011DE0  519D               	movf	printf@tmpval& (0+255),w,b
 22406  011DE2  0F30               	addlw	48
 22407  011DE4  EC8D  F0CC         	call	_putch
 22408  011DE8                     l1723:
 22409  011DE8  0101               	movlb	1	; () banked
 22410  011DEA  07B1               	decf	printf@c& (0+255),f,b
 22411  011DEC  29B1               	incf	printf@c& (0+255),w,b
 22412  011DEE  B4D8               	btfsc	status,2,c
 22413  011DF0  D008               	goto	l1726
 22414  011DF2  D7B0               	goto	l1724
 22415  011DF4                     l19617:
 22416                           
 22417                           ; BSR set to: 1
 22418                           ;doprnt.c: 1208: (putch('0') );
 22419  011DF4  0E30               	movlw	48
 22420  011DF6  EC8D  F0CC         	call	_putch
 22421                           
 22422                           ;doprnt.c: 1209: exp--;
 22423  011DFA  0101               	movlb	1	; () banked
 22424  011DFC  07A1               	decf	printf@exp& (0+255),f,b
 22425  011DFE  A0D8               	btfss	status,0,c
 22426  011E00  07A2               	decf	(printf@exp+1)& (0+255),f,b
 22427  011E02                     l1726:
 22428                           
 22429                           ; BSR set to: 1
 22430                           
 22431                           ; BSR set to: 1
 22432  011E02  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 22433  011E04  D005               	goto	u25910
 22434  011E06  51A2               	movf	(printf@exp+1)& (0+255),w,b
 22435  011E08  E1F5               	bnz	l19617
 22436  011E0A  05A1               	decf	printf@exp& (0+255),w,b
 22437  011E0C  B0D8               	btfsc	status,0,c
 22438  011E0E  D7F2               	goto	l1727
 22439  011E10                     u25910:
 22440                           
 22441                           ; BSR set to: 1
 22442                           ;doprnt.c: 1210: }
 22443                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 22444                           
 22445                           ; BSR set to: 1
 22446  011E10  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 22447  011E12  D009               	goto	l1729
 22448  011E14  51B0               	movf	(printf@prec+1)& (0+255),w,b
 22449  011E16  E104               	bnz	u25920
 22450  011E18  0E09               	movlw	9
 22451  011E1A  5DAF               	subwf	printf@prec& (0+255),w,b
 22452  011E1C  A0D8               	btfss	status,0,c
 22453  011E1E  D003               	goto	l1729
 22454  011E20                     u25920:
 22455                           
 22456                           ; BSR set to: 1
 22457                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 22458  011E20  0E08               	movlw	8
 22459  011E22  6FB1               	movwf	printf@c& (0+255),b
 22460  011E24  D002               	goto	l1730
 22461  011E26                     l1729:
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;doprnt.c: 1213: else
 22465                           ;doprnt.c: 1214: c = prec;
 22466  011E26  C1AF  F1B1         	movff	printf@prec,printf@c
 22467  011E2A                     l1730:
 22468                           
 22469                           ; BSR set to: 1
 22470                           ;doprnt.c: 1215: prec -= c;
 22471                           
 22472                           ; BSR set to: 1
 22473  011E2A  51B1               	movf	printf@c& (0+255),w,b
 22474  011E2C  5FAF               	subwf	printf@prec& (0+255),f,b
 22475  011E2E  0E00               	movlw	0
 22476  011E30  BFB1               	btfsc	printf@c& (0+255),7,b
 22477  011E32  0EFF               	movlw	255
 22478  011E34  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 22479                           
 22480                           ; BSR set to: 1
 22481                           ;doprnt.c: 1219: if(c)
 22482  011E36  51B1               	movf	printf@c& (0+255),w,b
 22483  011E38  B4D8               	btfsc	status,2,c
 22484  011E3A  D003               	goto	l1731
 22485                           
 22486                           ; BSR set to: 1
 22487                           ;doprnt.c: 1221: (putch('.') );
 22488  011E3C  0E2E               	movlw	46
 22489  011E3E  EC8D  F0CC         	call	_putch
 22490  011E42                     l1731:
 22491                           
 22492                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 22493  011E42  0101               	movlb	1	; () banked
 22494  011E44  51B1               	movf	printf@c& (0+255),w,b
 22495  011E46  EC03  F09E         	call	_scale
 22496  011E4A  C16F  F192         	movff	?_scale,_printf$4504
 22497  011E4E  C170  F193         	movff	?_scale+1,_printf$4504+1
 22498  011E52  C171  F194         	movff	?_scale+2,_printf$4504+2
 22499  011E56  C172  F195         	movff	?_scale+3,_printf$4504+3
 22500                           
 22501                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 22502  011E5A  C1A3  F15A         	movff	printf@fval,___flmul@a
 22503  011E5E  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 22504  011E62  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 22505  011E66  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 22506  011E6A  C192  F156         	movff	_printf$4504,___flmul@b
 22507  011E6E  C193  F157         	movff	_printf$4504+1,___flmul@b+1
 22508  011E72  C194  F158         	movff	_printf$4504+2,___flmul@b+2
 22509  011E76  C195  F159         	movff	_printf$4504+3,___flmul@b+3
 22510  011E7A  EC49  F0A4         	call	___flmul	;wreg free
 22511  011E7E  C156  F178         	movff	?___flmul,___fltol@f1
 22512  011E82  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 22513  011E86  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 22514  011E8A  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 22515  011E8E  EC9A  F0BF         	call	___fltol	;wreg free
 22516  011E92  C178  F1A7         	movff	?___fltol,printf@val
 22517  011E96  C179  F1A8         	movff	?___fltol+1,printf@val+1
 22518  011E9A  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 22519  011E9E  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 22520                           
 22521                           ;doprnt.c: 1228: while(c--) {
 22522  011EA2  D074               	goto	l1732
 22523  011EA4                     
 22524                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 22525  011EA4  C1A7  F117         	movff	printf@val,___lldiv@dividend
 22526  011EA8  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 22527  011EAC  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 22528  011EB0  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 22529  011EB4  0101               	movlb	1	; () banked
 22530  011EB6  51B1               	movf	printf@c& (0+255),w,b
 22531  011EB8  0D04               	mullw	4
 22532  011EBA  0EC7               	movlw	low _dpowers
 22533  011EBC  24F3               	addwf	prodl,w,c
 22534  011EBE  6EF6               	movwf	tblptrl,c
 22535  011EC0  0ED4               	movlw	high _dpowers
 22536  011EC2  20F4               	addwfc	prodh,w,c
 22537  011EC4  6EF7               	movwf	tblptrh,c
 22538  011EC6                     	if	1	;There are 3 active tblptr bytes
 22539  011EC6  6AF8               	clrf	tblptru,c
 22540  011EC8  0E00               	movlw	low (__mediumconst shr (0+16))
 22541  011ECA  22F8               	addwfc	tblptru,f,c
 22542  011ECC                     	endif
 22543  011ECC  0009               	tblrd		*+
 22544  011ECE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 22545  011ED2  0009               	tblrd		*+
 22546  011ED4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 22547  011ED8  0009               	tblrd		*+
 22548  011EDA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 22549  011EDE  000A               	tblrd		*-
 22550  011EE0  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 22551  011EE4  EC1A  F0C3         	call	___lldiv	;wreg free
 22552  011EE8  C117  F19D         	movff	?___lldiv,printf@tmpval
 22553  011EEC  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 22554  011EF0  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 22555  011EF4  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 22556                           
 22557                           ;doprnt.c: 1230: tmpval.vd %= 10;
 22558  011EF8  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 22559  011EFC  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 22560  011F00  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 22561  011F04  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 22562  011F08  0E0A               	movlw	10
 22563  011F0A  0101               	movlb	1	; () banked
 22564  011F0C  6F28               	movwf	___llmod@divisor& (0+255),b
 22565  011F0E  0E00               	movlw	0
 22566  011F10  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 22567  011F12  0E00               	movlw	0
 22568  011F14  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 22569  011F16  0E00               	movlw	0
 22570  011F18  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 22571  011F1A  ECAC  F0C5         	call	___llmod	;wreg free
 22572  011F1E  C124  F19D         	movff	?___llmod,printf@tmpval
 22573  011F22  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 22574  011F26  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 22575  011F2A  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 22576                           
 22577                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 22578  011F2E  0101               	movlb	1	; () banked
 22579  011F30  519D               	movf	printf@tmpval& (0+255),w,b
 22580  011F32  0F30               	addlw	48
 22581  011F34  EC8D  F0CC         	call	_putch
 22582                           
 22583                           ;doprnt.c: 1232: val %= dpowers[c];
 22584  011F38  C1A7  F124         	movff	printf@val,___llmod@dividend
 22585  011F3C  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 22586  011F40  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 22587  011F44  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 22588  011F48  0101               	movlb	1	; () banked
 22589  011F4A  51B1               	movf	printf@c& (0+255),w,b
 22590  011F4C  0D04               	mullw	4
 22591  011F4E  0EC7               	movlw	low _dpowers
 22592  011F50  24F3               	addwf	prodl,w,c
 22593  011F52  6EF6               	movwf	tblptrl,c
 22594  011F54  0ED4               	movlw	high _dpowers
 22595  011F56  20F4               	addwfc	prodh,w,c
 22596  011F58  6EF7               	movwf	tblptrh,c
 22597  011F5A                     	if	1	;There are 3 active tblptr bytes
 22598  011F5A  6AF8               	clrf	tblptru,c
 22599  011F5C  0E00               	movlw	low (__mediumconst shr (0+16))
 22600  011F5E  22F8               	addwfc	tblptru,f,c
 22601  011F60                     	endif
 22602  011F60  0009               	tblrd		*+
 22603  011F62  CFF5 F128          	movff	tablat,___llmod@divisor
 22604  011F66  0009               	tblrd		*+
 22605  011F68  CFF5 F129          	movff	tablat,___llmod@divisor+1
 22606  011F6C  0009               	tblrd		*+
 22607  011F6E  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 22608  011F72  000A               	tblrd		*-
 22609  011F74  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 22610  011F78  ECAC  F0C5         	call	___llmod	;wreg free
 22611  011F7C  C124  F1A7         	movff	?___llmod,printf@val
 22612  011F80  C125  F1A8         	movff	?___llmod+1,printf@val+1
 22613  011F84  C126  F1A9         	movff	?___llmod+2,printf@val+2
 22614  011F88  C127  F1AA         	movff	?___llmod+3,printf@val+3
 22615  011F8C                     l1732:
 22616  011F8C  0101               	movlb	1	; () banked
 22617  011F8E  07B1               	decf	printf@c& (0+255),f,b
 22618  011F90  29B1               	incf	printf@c& (0+255),w,b
 22619  011F92  B4D8               	btfsc	status,2,c
 22620  011F94  D008               	goto	l1735
 22621  011F96  D786               	goto	l1733
 22622  011F98                     
 22623                           ; BSR set to: 1
 22624                           ;doprnt.c: 1236: (putch('0') );
 22625                           
 22626                           ; BSR set to: 1
 22627  011F98  0E30               	movlw	48
 22628  011F9A  EC8D  F0CC         	call	_putch
 22629                           
 22630                           ;doprnt.c: 1237: prec--;
 22631  011F9E  0101               	movlb	1	; () banked
 22632  011FA0  07AF               	decf	printf@prec& (0+255),f,b
 22633  011FA2  A0D8               	btfss	status,0,c
 22634  011FA4  07B0               	decf	(printf@prec+1)& (0+255),f,b
 22635  011FA6                     l1735:
 22636                           
 22637                           ; BSR set to: 1
 22638                           
 22639                           ; BSR set to: 1
 22640  011FA6  51AF               	movf	printf@prec& (0+255),w,b
 22641  011FA8  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 22642  011FAA  B4D8               	btfsc	status,2,c
 22643  011FAC  D1BE               	goto	u26200
 22644  011FAE  D7F4               	goto	l1736
 22645  011FB0                     l1689:
 22646                           
 22647                           ; BSR set to: 1
 22648                           ;doprnt.c: 1246: }
 22649                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 22650                           
 22651                           ; BSR set to: 1
 22652  011FB0  0EC0               	movlw	192
 22653  011FB2  15AB               	andwf	printf@flag& (0+255),w,b
 22654  011FB4  6F8C               	movwf	??_printf& (0+255),b
 22655  011FB6  0E00               	movlw	0
 22656  011FB8  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22657  011FBA  6F8D               	movwf	(??_printf+1)& (0+255),b
 22658  011FBC  518C               	movf	??_printf& (0+255),w,b
 22659  011FBE  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22660  011FC0  A4D8               	btfss	status,2,c
 22661  011FC2  D01E               	goto	l1738
 22662                           
 22663                           ; BSR set to: 1
 22664                           ;doprnt.c: 1253: {
 22665                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 22666  011FC4  C19B  FFD9         	movff	printf@ap,fsr2l
 22667  011FC8  C19C  FFDA         	movff	printf@ap+1,fsr2h
 22668  011FCC  CFDE F1A7          	movff	postinc2,printf@val
 22669  011FD0  CFDD F1A8          	movff	postdec2,printf@val+1
 22670  011FD4  0E00               	movlw	0
 22671  011FD6  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 22672  011FD8  0EFF               	movlw	-1
 22673  011FDA  6FA9               	movwf	(printf@val+2)& (0+255),b
 22674  011FDC  6FAA               	movwf	(printf@val+3)& (0+255),b
 22675                           
 22676                           ; BSR set to: 1
 22677  011FDE  0E02               	movlw	2
 22678  011FE0  279B               	addwf	printf@ap& (0+255),f,b
 22679  011FE2  0E00               	movlw	0
 22680  011FE4  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 22681                           
 22682                           ; BSR set to: 1
 22683                           ;doprnt.c: 1261: if((long)val < 0) {
 22684  011FE6  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 22685  011FE8  D01D               	goto	l1740
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;doprnt.c: 1262: flag |= 0x03;
 22689  011FEA  0E03               	movlw	3
 22690  011FEC  13AB               	iorwf	printf@flag& (0+255),f,b
 22691                           
 22692                           ; BSR set to: 1
 22693                           ;doprnt.c: 1263: val = -val;
 22694  011FEE  1FAA               	comf	(printf@val+3)& (0+255),f,b
 22695  011FF0  1FA9               	comf	(printf@val+2)& (0+255),f,b
 22696  011FF2  1FA8               	comf	(printf@val+1)& (0+255),f,b
 22697  011FF4  6DA7               	negf	printf@val& (0+255),b
 22698  011FF6  0E00               	movlw	0
 22699  011FF8  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 22700  011FFA  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 22701  011FFC  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 22702                           
 22703                           ; BSR set to: 1
 22704                           ;doprnt.c: 1264: }
 22705                           ;doprnt.c: 1266: }
 22706  011FFE  D012               	goto	l1740
 22707  012000                     l1738:
 22708                           
 22709                           ; BSR set to: 1
 22710                           ;doprnt.c: 1268: else
 22711                           ;doprnt.c: 1273: {
 22712                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 22713                           
 22714                           ; BSR set to: 1
 22715  012000  C19B  FFD9         	movff	printf@ap,fsr2l
 22716  012004  C19C  FFDA         	movff	printf@ap+1,fsr2h
 22717  012008  CFDE F18C          	movff	postinc2,??_printf
 22718  01200C  CFDD F18D          	movff	postdec2,??_printf+1
 22719  012010  C18C  F1A7         	movff	??_printf,printf@val
 22720  012014  C18D  F1A8         	movff	??_printf+1,printf@val+1
 22721  012018  6BA9               	clrf	(printf@val+2)& (0+255),b
 22722  01201A  6BAA               	clrf	(printf@val+3)& (0+255),b
 22723                           
 22724                           ; BSR set to: 1
 22725  01201C  0E02               	movlw	2
 22726  01201E  279B               	addwf	printf@ap& (0+255),f,b
 22727  012020  0E00               	movlw	0
 22728  012022  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 22729  012024                     l1740:
 22730                           
 22731                           ; BSR set to: 1
 22732                           ;doprnt.c: 1287: }
 22733                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 22734                           
 22735                           ; BSR set to: 1
 22736  012024  51AF               	movf	printf@prec& (0+255),w,b
 22737  012026  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 22738  012028  A4D8               	btfss	status,2,c
 22739  01202A  D04B               	goto	l1742
 22740                           
 22741                           ; BSR set to: 1
 22742  01202C  51A7               	movf	printf@val& (0+255),w,b
 22743  01202E  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 22744  012030  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 22745  012032  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 22746  012034  A4D8               	btfss	status,2,c
 22747  012036  D045               	goto	l1742
 22748                           
 22749                           ; BSR set to: 1
 22750                           ;doprnt.c: 1291: prec++;
 22751  012038  4BAF               	infsnz	printf@prec& (0+255),f,b
 22752  01203A  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 22753                           
 22754                           ; BSR set to: 1
 22755                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 22756  01203C  D042               	goto	l1742
 22757  01203E                     
 22758                           ; BSR set to: 1
 22759                           ;doprnt.c: 1302: case 0xC0:
 22760                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 22761                           
 22762                           ; BSR set to: 1
 22763                           
 22764                           ; BSR set to: 1
 22765  01203E  0E01               	movlw	1
 22766  012040  6FB1               	movwf	printf@c& (0+255),b
 22767  012042                     l19677:
 22768                           
 22769                           ; BSR set to: 1
 22770  012042  0E0A               	movlw	10
 22771  012044  19B1               	xorwf	printf@c& (0+255),w,b
 22772  012046  B4D8               	btfsc	status,2,c
 22773  012048  D047               	goto	l1748
 22774                           
 22775                           ; BSR set to: 1
 22776                           ;doprnt.c: 1306: if(val < dpowers[c])
 22777                           
 22778                           ; BSR set to: 1
 22779                           
 22780                           ; BSR set to: 1
 22781  01204A  51B1               	movf	printf@c& (0+255),w,b
 22782  01204C  0D04               	mullw	4
 22783  01204E  0EC7               	movlw	low _dpowers
 22784  012050  24F3               	addwf	prodl,w,c
 22785  012052  6EF6               	movwf	tblptrl,c
 22786  012054  0ED4               	movlw	high _dpowers
 22787  012056  20F4               	addwfc	prodh,w,c
 22788  012058  6EF7               	movwf	tblptrh,c
 22789  01205A                     	if	1	;There are 3 active tblptr bytes
 22790  01205A  6AF8               	clrf	tblptru,c
 22791  01205C  0E00               	movlw	low (__mediumconst shr (0+16))
 22792  01205E  22F8               	addwfc	tblptru,f,c
 22793  012060                     	endif
 22794  012060  0009               	tblrd		*+
 22795  012062  50F5               	movf	tablat,w,c
 22796  012064  5DA7               	subwf	printf@val& (0+255),w,b
 22797  012066  0009               	tblrd		*+
 22798  012068  50F5               	movf	tablat,w,c
 22799  01206A  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 22800  01206C  0009               	tblrd		*+
 22801  01206E  50F5               	movf	tablat,w,c
 22802  012070  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 22803  012072  0009               	tblrd		*+
 22804  012074  50F5               	movf	tablat,w,c
 22805  012076  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 22806  012078  A0D8               	btfss	status,0,c
 22807  01207A  D02E               	goto	l1748
 22808                           
 22809                           ; BSR set to: 1
 22810                           
 22811                           ; BSR set to: 1
 22812                           
 22813                           ; BSR set to: 1
 22814                           ;doprnt.c: 1307: break;
 22815  01207C  2BB1               	incf	printf@c& (0+255),f,b
 22816  01207E  D7E1               	goto	l19677
 22817  012080                     
 22818                           ; BSR set to: 1
 22819                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 22820                           
 22821                           ; BSR set to: 1
 22822  012080  0E01               	movlw	1
 22823  012082  6FB1               	movwf	printf@c& (0+255),b
 22824  012084                     l19691:
 22825                           
 22826                           ; BSR set to: 1
 22827  012084  0E08               	movlw	8
 22828  012086  19B1               	xorwf	printf@c& (0+255),w,b
 22829  012088  B4D8               	btfsc	status,2,c
 22830  01208A  D026               	goto	l1748
 22831                           
 22832                           ; BSR set to: 1
 22833                           ;doprnt.c: 1317: if(val < hexpowers[c])
 22834                           
 22835                           ; BSR set to: 1
 22836                           
 22837                           ; BSR set to: 1
 22838  01208C  51B1               	movf	printf@c& (0+255),w,b
 22839  01208E  0D04               	mullw	4
 22840  012090  0EEF               	movlw	low _hexpowers
 22841  012092  24F3               	addwf	prodl,w,c
 22842  012094  6EF6               	movwf	tblptrl,c
 22843  012096  0ED4               	movlw	high _hexpowers
 22844  012098  20F4               	addwfc	prodh,w,c
 22845  01209A  6EF7               	movwf	tblptrh,c
 22846  01209C                     	if	1	;There are 3 active tblptr bytes
 22847  01209C  6AF8               	clrf	tblptru,c
 22848  01209E  0E00               	movlw	low (__mediumconst shr (0+16))
 22849  0120A0  22F8               	addwfc	tblptru,f,c
 22850  0120A2                     	endif
 22851  0120A2  0009               	tblrd		*+
 22852  0120A4  50F5               	movf	tablat,w,c
 22853  0120A6  5DA7               	subwf	printf@val& (0+255),w,b
 22854  0120A8  0009               	tblrd		*+
 22855  0120AA  50F5               	movf	tablat,w,c
 22856  0120AC  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 22857  0120AE  0009               	tblrd		*+
 22858  0120B0  50F5               	movf	tablat,w,c
 22859  0120B2  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 22860  0120B4  0009               	tblrd		*+
 22861  0120B6  50F5               	movf	tablat,w,c
 22862  0120B8  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 22863  0120BA  A0D8               	btfss	status,0,c
 22864  0120BC  D00D               	goto	l1748
 22865                           
 22866                           ; BSR set to: 1
 22867                           
 22868                           ; BSR set to: 1
 22869                           
 22870                           ; BSR set to: 1
 22871                           ;doprnt.c: 1318: break;
 22872  0120BE  2BB1               	incf	printf@c& (0+255),f,b
 22873  0120C0  D7E1               	goto	l19691
 22874  0120C2                     l1742:
 22875                           
 22876                           ; BSR set to: 1
 22877                           
 22878                           ; BSR set to: 1
 22879  0120C2  51AB               	movf	printf@flag& (0+255),w,b
 22880  0120C4  0BC0               	andlw	192
 22881                           
 22882                           ; Switch size 1, requested type "space"
 22883                           ; Number of cases is 3, Range of values is 0 to 192
 22884                           ; switch strategies available:
 22885                           ; Name         Instructions Cycles
 22886                           ; simple_byte           10     6 (average)
 22887                           ;	Chosen strategy is simple_byte
 22888  0120C6  0A00               	xorlw	0	; case 0
 22889  0120C8  B4D8               	btfsc	status,2,c
 22890  0120CA  D7B9               	goto	l1743
 22891  0120CC  0A80               	xorlw	128	; case 128
 22892  0120CE  B4D8               	btfsc	status,2,c
 22893  0120D0  D7D7               	goto	l1749
 22894  0120D2  0A40               	xorlw	64	; case 192
 22895  0120D4  B4D8               	btfsc	status,2,c
 22896  0120D6  D7B3               	goto	l1743
 22897  0120D8                     l1748:
 22898                           
 22899                           ; BSR set to: 1
 22900                           ;doprnt.c: 1339: if(c < prec)
 22901                           
 22902                           ; BSR set to: 1
 22903  0120D8  0E80               	movlw	128
 22904  0120DA  BFB1               	btfsc	printf@c& (0+255),7,b
 22905  0120DC  0E7F               	movlw	127
 22906  0120DE  6F8C               	movwf	??_printf& (0+255),b
 22907  0120E0  51AF               	movf	printf@prec& (0+255),w,b
 22908  0120E2  5DB1               	subwf	printf@c& (0+255),w,b
 22909  0120E4  51B0               	movf	(printf@prec+1)& (0+255),w,b
 22910  0120E6  0A80               	xorlw	128
 22911  0120E8  598C               	subwfb	??_printf& (0+255),w,b
 22912  0120EA  B0D8               	btfsc	status,0,c
 22913  0120EC  D003               	goto	l1753
 22914                           
 22915                           ; BSR set to: 1
 22916                           ;doprnt.c: 1340: c = prec;
 22917  0120EE  C1AF  F1B1         	movff	printf@prec,printf@c
 22918  0120F2  D010               	goto	l1755
 22919  0120F4                     l1753:
 22920                           
 22921                           ; BSR set to: 1
 22922                           ;doprnt.c: 1341: else if(prec < c)
 22923                           
 22924                           ; BSR set to: 1
 22925  0120F4  51B0               	movf	(printf@prec+1)& (0+255),w,b
 22926  0120F6  0A80               	xorlw	128
 22927  0120F8  6F8C               	movwf	??_printf& (0+255),b
 22928  0120FA  51B1               	movf	printf@c& (0+255),w,b
 22929  0120FC  5DAF               	subwf	printf@prec& (0+255),w,b
 22930  0120FE  0E80               	movlw	128
 22931  012100  BFB1               	btfsc	printf@c& (0+255),7,b
 22932  012102  0E7F               	movlw	127
 22933  012104  598C               	subwfb	??_printf& (0+255),w,b
 22934  012106  B0D8               	btfsc	status,0,c
 22935  012108  D005               	goto	l1755
 22936                           
 22937                           ; BSR set to: 1
 22938                           ;doprnt.c: 1342: prec = c;
 22939  01210A  51B1               	movf	printf@c& (0+255),w,b
 22940  01210C  6FAF               	movwf	printf@prec& (0+255),b
 22941  01210E  6BB0               	clrf	(printf@prec+1)& (0+255),b
 22942  012110  BFAF               	btfsc	printf@prec& (0+255),7,b
 22943  012112  07B0               	decf	(printf@prec+1)& (0+255),f,b
 22944  012114                     l1755:
 22945                           
 22946                           ; BSR set to: 1
 22947                           ;doprnt.c: 1345: if(width && flag & 0x03)
 22948                           
 22949                           ; BSR set to: 1
 22950                           
 22951                           ; BSR set to: 1
 22952  012114  51AD               	movf	printf@width& (0+255),w,b
 22953  012116  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 22954  012118  B4D8               	btfsc	status,2,c
 22955  01211A  D00D               	goto	l1756
 22956                           
 22957                           ; BSR set to: 1
 22958  01211C  0E03               	movlw	3
 22959  01211E  15AB               	andwf	printf@flag& (0+255),w,b
 22960  012120  6F8C               	movwf	??_printf& (0+255),b
 22961  012122  0E00               	movlw	0
 22962  012124  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22963  012126  6F8D               	movwf	(??_printf+1)& (0+255),b
 22964  012128  518C               	movf	??_printf& (0+255),w,b
 22965  01212A  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22966  01212C  B4D8               	btfsc	status,2,c
 22967  01212E  D003               	goto	l1756
 22968                           
 22969                           ; BSR set to: 1
 22970                           ;doprnt.c: 1346: width--;
 22971  012130  07AD               	decf	printf@width& (0+255),f,b
 22972  012132  A0D8               	btfss	status,0,c
 22973  012134  07AE               	decf	(printf@width+1)& (0+255),f,b
 22974  012136                     l1756:
 22975                           
 22976                           ; BSR set to: 1
 22977                           ;doprnt.c: 1348: if(flag & 0x4000) {
 22978                           
 22979                           ; BSR set to: 1
 22980  012136  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 22981  012138  D013               	goto	l1759
 22982                           
 22983                           ; BSR set to: 1
 22984                           ;doprnt.c: 1349: if(width > prec)
 22985  01213A  51AD               	movf	printf@width& (0+255),w,b
 22986  01213C  5DAF               	subwf	printf@prec& (0+255),w,b
 22987  01213E  51B0               	movf	(printf@prec+1)& (0+255),w,b
 22988  012140  0A80               	xorlw	128
 22989  012142  6F8C               	movwf	??_printf& (0+255),b
 22990  012144  51AE               	movf	(printf@width+1)& (0+255),w,b
 22991  012146  0A80               	xorlw	128
 22992  012148  598C               	subwfb	??_printf& (0+255),w,b
 22993  01214A  B0D8               	btfsc	status,0,c
 22994  01214C  D005               	goto	l1758
 22995                           
 22996                           ; BSR set to: 1
 22997                           ;doprnt.c: 1350: width -= prec;
 22998  01214E  51AF               	movf	printf@prec& (0+255),w,b
 22999  012150  5FAD               	subwf	printf@width& (0+255),f,b
 23000  012152  51B0               	movf	(printf@prec+1)& (0+255),w,b
 23001  012154  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 23002  012156  D004               	goto	l1759
 23003  012158                     l1758:
 23004                           
 23005                           ; BSR set to: 1
 23006                           ;doprnt.c: 1351: else
 23007                           ;doprnt.c: 1352: width = 0;
 23008                           
 23009                           ; BSR set to: 1
 23010  012158  0E00               	movlw	0
 23011  01215A  6FAE               	movwf	(printf@width+1)& (0+255),b
 23012  01215C  0E00               	movlw	0
 23013  01215E  6FAD               	movwf	printf@width& (0+255),b
 23014  012160                     l1759:
 23015                           
 23016                           ; BSR set to: 1
 23017                           ;doprnt.c: 1353: }
 23018                           ;doprnt.c: 1381: if(width > c)
 23019                           
 23020                           ; BSR set to: 1
 23021                           
 23022                           ; BSR set to: 1
 23023  012160  0E80               	movlw	128
 23024  012162  BFB1               	btfsc	printf@c& (0+255),7,b
 23025  012164  0E7F               	movlw	127
 23026  012166  6F8C               	movwf	??_printf& (0+255),b
 23027  012168  51AD               	movf	printf@width& (0+255),w,b
 23028  01216A  5DB1               	subwf	printf@c& (0+255),w,b
 23029  01216C  51AE               	movf	(printf@width+1)& (0+255),w,b
 23030  01216E  0A80               	xorlw	128
 23031  012170  598C               	subwfb	??_printf& (0+255),w,b
 23032  012172  B0D8               	btfsc	status,0,c
 23033  012174  D007               	goto	l1760
 23034                           
 23035                           ; BSR set to: 1
 23036                           ;doprnt.c: 1382: width -= c;
 23037  012176  51B1               	movf	printf@c& (0+255),w,b
 23038  012178  5FAD               	subwf	printf@width& (0+255),f,b
 23039  01217A  0E00               	movlw	0
 23040  01217C  BFB1               	btfsc	printf@c& (0+255),7,b
 23041  01217E  0EFF               	movlw	255
 23042  012180  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 23043  012182  D004               	goto	l1761
 23044  012184                     l1760:
 23045                           
 23046                           ; BSR set to: 1
 23047                           ;doprnt.c: 1383: else
 23048                           ;doprnt.c: 1384: width = 0;
 23049                           
 23050                           ; BSR set to: 1
 23051  012184  0E00               	movlw	0
 23052  012186  6FAE               	movwf	(printf@width+1)& (0+255),b
 23053  012188  0E00               	movlw	0
 23054  01218A  6FAD               	movwf	printf@width& (0+255),b
 23055  01218C                     l1761:
 23056                           
 23057                           ; BSR set to: 1
 23058                           ;doprnt.c: 1387: if(flag & 0x04) {
 23059                           
 23060                           ; BSR set to: 1
 23061  01218C  A5AB               	btfss	printf@flag& (0+255),2,b
 23062  01218E  D01A               	goto	l1762
 23063                           
 23064                           ; BSR set to: 1
 23065                           ;doprnt.c: 1392: if(flag & 0x03)
 23066  012190  0E03               	movlw	3
 23067  012192  15AB               	andwf	printf@flag& (0+255),w,b
 23068  012194  6F8C               	movwf	??_printf& (0+255),b
 23069  012196  0E00               	movlw	0
 23070  012198  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 23071  01219A  6F8D               	movwf	(??_printf+1)& (0+255),b
 23072  01219C  518C               	movf	??_printf& (0+255),w,b
 23073  01219E  118D               	iorwf	(??_printf+1)& (0+255),w,b
 23074  0121A0  B4D8               	btfsc	status,2,c
 23075  0121A2  D003               	goto	l1763
 23076                           
 23077                           ; BSR set to: 1
 23078                           ;doprnt.c: 1393: (putch('-') );
 23079  0121A4  0E2D               	movlw	45
 23080  0121A6  EC8D  F0CC         	call	_putch
 23081  0121AA                     l1763:
 23082                           
 23083                           ;doprnt.c: 1415: if(width)
 23084  0121AA  0101               	movlb	1	; () banked
 23085  0121AC  51AD               	movf	printf@width& (0+255),w,b
 23086  0121AE  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 23087  0121B0  B4D8               	btfsc	status,2,c
 23088  0121B2  D0B2               	goto	l1772
 23089                           
 23090                           ; BSR set to: 1
 23091                           ;doprnt.c: 1417: (putch('0') );
 23092                           
 23093                           ; BSR set to: 1
 23094                           
 23095                           ;doprnt.c: 1416: do
 23096  0121B4  0E30               	movlw	48
 23097  0121B6  EC8D  F0CC         	call	_putch
 23098                           
 23099                           ;doprnt.c: 1418: while(--width);
 23100  0121BA  0101               	movlb	1	; () banked
 23101  0121BC  07AD               	decf	printf@width& (0+255),f,b
 23102  0121BE  A0D8               	btfss	status,0,c
 23103  0121C0  07AE               	decf	(printf@width+1)& (0+255),f,b
 23104  0121C2  D7F4               	goto	L26
 23105  0121C4                     l1762:
 23106                           
 23107                           ; BSR set to: 1
 23108                           ;doprnt.c: 1422: {
 23109                           ;doprnt.c: 1424: if(width
 23110                           ;doprnt.c: 1428: )
 23111                           
 23112                           ; BSR set to: 1
 23113  0121C4  51AD               	movf	printf@width& (0+255),w,b
 23114  0121C6  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 23115  0121C8  B4D8               	btfsc	status,2,c
 23116  0121CA  D00B               	goto	u26180
 23117  0121CC                     u26170:
 23118                           
 23119                           ; BSR set to: 1
 23120                           ;doprnt.c: 1430: (putch(' ') );
 23121                           
 23122                           ; BSR set to: 1
 23123                           
 23124                           ;doprnt.c: 1429: do
 23125  0121CC  0E20               	movlw	32
 23126  0121CE  EC8D  F0CC         	call	_putch
 23127                           
 23128                           ;doprnt.c: 1431: while(--width);
 23129  0121D2  0101               	movlb	1	; () banked
 23130  0121D4  07AD               	decf	printf@width& (0+255),f,b
 23131  0121D6  A0D8               	btfss	status,0,c
 23132  0121D8  07AE               	decf	(printf@width+1)& (0+255),f,b
 23133  0121DA  51AD               	movf	printf@width& (0+255),w,b
 23134  0121DC  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 23135  0121DE  A4D8               	btfss	status,2,c
 23136  0121E0  D7F5               	goto	u26170
 23137  0121E2                     u26180:
 23138                           
 23139                           ; BSR set to: 1
 23140                           ;doprnt.c: 1438: if(flag & 0x03)
 23141                           
 23142                           ; BSR set to: 1
 23143                           
 23144                           ; BSR set to: 1
 23145  0121E2  0E03               	movlw	3
 23146  0121E4  15AB               	andwf	printf@flag& (0+255),w,b
 23147  0121E6  6F8C               	movwf	??_printf& (0+255),b
 23148  0121E8  0E00               	movlw	0
 23149  0121EA  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 23150  0121EC  6F8D               	movwf	(??_printf+1)& (0+255),b
 23151  0121EE  518C               	movf	??_printf& (0+255),w,b
 23152  0121F0  118D               	iorwf	(??_printf+1)& (0+255),w,b
 23153  0121F2  B4D8               	btfsc	status,2,c
 23154  0121F4  D091               	goto	l1772
 23155                           
 23156                           ; BSR set to: 1
 23157                           ;doprnt.c: 1439: (putch('-') );
 23158  0121F6  0E2D               	movlw	45
 23159  0121F8  EC8D  F0CC         	call	_putch
 23160                           
 23161                           ;doprnt.c: 1469: }
 23162                           ;doprnt.c: 1474: while(prec--) {
 23163  0121FC  D08D               	goto	l1772
 23164  0121FE                     
 23165                           ;doprnt.c: 1486: case 0xC0:
 23166                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 23167  0121FE  C1AF  F18C         	movff	printf@prec,??_printf
 23168  012202  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 23169  012206  0101               	movlb	1	; () banked
 23170  012208  90D8               	bcf	status,0,c
 23171  01220A  378C               	rlcf	??_printf& (0+255),f,b
 23172  01220C  378D               	rlcf	(??_printf+1)& (0+255),f,b
 23173  01220E  90D8               	bcf	status,0,c
 23174  012210  378C               	rlcf	??_printf& (0+255),f,b
 23175  012212  378D               	rlcf	(??_printf+1)& (0+255),f,b
 23176  012214  0EC7               	movlw	low _dpowers
 23177  012216  258C               	addwf	??_printf& (0+255),w,b
 23178  012218  6EF6               	movwf	tblptrl,c
 23179  01221A  0ED4               	movlw	high _dpowers
 23180  01221C  218D               	addwfc	(??_printf+1)& (0+255),w,b
 23181  01221E  6EF7               	movwf	tblptrh,c
 23182  012220                     	if	1	;There are 3 active tblptr bytes
 23183  012220  6AF8               	clrf	tblptru,c
 23184  012222  0E00               	movlw	low (__mediumconst shr (0+16))
 23185  012224  22F8               	addwfc	tblptru,f,c
 23186  012226                     	endif
 23187  012226  0009               	tblrd		*+
 23188  012228  CFF5 F11B          	movff	tablat,___lldiv@divisor
 23189  01222C  0009               	tblrd		*+
 23190  01222E  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 23191  012232  0009               	tblrd		*+
 23192  012234  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 23193  012238  000A               	tblrd		*-
 23194  01223A  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 23195  01223E  C1A7  F117         	movff	printf@val,___lldiv@dividend
 23196  012242  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 23197  012246  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 23198  01224A  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 23199  01224E  EC1A  F0C3         	call	___lldiv	;wreg free
 23200  012252  C117  F124         	movff	?___lldiv,___llmod@dividend
 23201  012256  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 23202  01225A  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 23203  01225E  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 23204  012262  0E0A               	movlw	10
 23205  012264  0101               	movlb	1	; () banked
 23206  012266  6F28               	movwf	___llmod@divisor& (0+255),b
 23207  012268  0E00               	movlw	0
 23208  01226A  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 23209  01226C  0E00               	movlw	0
 23210  01226E  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 23211  012270  0E00               	movlw	0
 23212  012272  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 23213  012274  ECAC  F0C5         	call	___llmod	;wreg free
 23214  012278  0101               	movlb	1	; () banked
 23215  01227A  5124               	movf	?___llmod& (0+255),w,b
 23216  01227C  0F30               	addlw	48
 23217  01227E  6FB1               	movwf	printf@c& (0+255),b
 23218                           
 23219                           ;doprnt.c: 1491: break;
 23220  012280  D048               	goto	l1777
 23221  012282                     
 23222                           ; BSR set to: 1
 23223                           ;doprnt.c: 1499: {
 23224                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 23225                           
 23226                           ; BSR set to: 1
 23227  012282  C1A7  F117         	movff	printf@val,___lldiv@dividend
 23228  012286  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 23229  01228A  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 23230  01228E  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 23231  012292  C1AF  F18C         	movff	printf@prec,??_printf
 23232  012296  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 23233  01229A  90D8               	bcf	status,0,c
 23234  01229C  378C               	rlcf	??_printf& (0+255),f,b
 23235  01229E  378D               	rlcf	(??_printf+1)& (0+255),f,b
 23236  0122A0  90D8               	bcf	status,0,c
 23237  0122A2  378C               	rlcf	??_printf& (0+255),f,b
 23238  0122A4  378D               	rlcf	(??_printf+1)& (0+255),f,b
 23239  0122A6  0EEF               	movlw	low _hexpowers
 23240  0122A8  258C               	addwf	??_printf& (0+255),w,b
 23241  0122AA  6EF6               	movwf	tblptrl,c
 23242  0122AC  0ED4               	movlw	high _hexpowers
 23243  0122AE  218D               	addwfc	(??_printf+1)& (0+255),w,b
 23244  0122B0  6EF7               	movwf	tblptrh,c
 23245  0122B2                     	if	1	;There are 3 active tblptr bytes
 23246  0122B2  6AF8               	clrf	tblptru,c
 23247  0122B4  0E00               	movlw	low (__mediumconst shr (0+16))
 23248  0122B6  22F8               	addwfc	tblptru,f,c
 23249  0122B8                     	endif
 23250  0122B8  0009               	tblrd		*+
 23251  0122BA  CFF5 F11B          	movff	tablat,___lldiv@divisor
 23252  0122BE  0009               	tblrd		*+
 23253  0122C0  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 23254  0122C4  0009               	tblrd		*+
 23255  0122C6  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 23256  0122CA  000A               	tblrd		*-
 23257  0122CC  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 23258  0122D0  EC1A  F0C3         	call	___lldiv	;wreg free
 23259  0122D4  0101               	movlb	1	; () banked
 23260  0122D6  5117               	movf	?___lldiv& (0+255),w,b
 23261  0122D8  0B0F               	andlw	15
 23262  0122DA  6F96               	movwf	printf@idx& (0+255),b
 23263                           
 23264                           ; BSR set to: 1
 23265                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 23266  0122DC  5196               	movf	printf@idx& (0+255),w,b
 23267  0122DE  0D01               	mullw	1
 23268  0122E0  0E42               	movlw	low STR_177
 23269  0122E2  24F3               	addwf	prodl,w,c
 23270  0122E4  6EF6               	movwf	tblptrl,c
 23271  0122E6  0EFD               	movlw	high STR_177
 23272  0122E8  20F4               	addwfc	prodh,w,c
 23273  0122EA  6EF7               	movwf	tblptrh,c
 23274  0122EC                     	if	1	;There are 3 active tblptr bytes
 23275  0122EC  6AF8               	clrf	tblptru,c
 23276  0122EE  0E00               	movlw	low (__mediumconst shr (0+16))
 23277  0122F0  22F8               	addwfc	tblptru,f,c
 23278  0122F2                     	endif
 23279  0122F2  0008               	tblrd		*
 23280  0122F4  CFF5 F1B1          	movff	tablat,printf@c
 23281                           
 23282                           ; BSR set to: 1
 23283                           ;doprnt.c: 1523: }
 23284                           
 23285                           ;doprnt.c: 1508: }
 23286                           ;doprnt.c: 1510: break;
 23287  0122F8  D00C               	goto	l1777
 23288  0122FA                     l19765:
 23289  0122FA  0101               	movlb	1	; () banked
 23290  0122FC  51AB               	movf	printf@flag& (0+255),w,b
 23291  0122FE  0BC0               	andlw	192
 23292                           
 23293                           ; Switch size 1, requested type "space"
 23294                           ; Number of cases is 3, Range of values is 0 to 192
 23295                           ; switch strategies available:
 23296                           ; Name         Instructions Cycles
 23297                           ; simple_byte           10     6 (average)
 23298                           ;	Chosen strategy is simple_byte
 23299  012300  0A00               	xorlw	0	; case 0
 23300  012302  B4D8               	btfsc	status,2,c
 23301  012304  D77C               	goto	l1775
 23302  012306  0A80               	xorlw	128	; case 128
 23303  012308  B4D8               	btfsc	status,2,c
 23304  01230A  D7BB               	goto	l1778
 23305  01230C  0A40               	xorlw	64	; case 192
 23306  01230E  B4D8               	btfsc	status,2,c
 23307  012310  D776               	goto	l1775
 23308  012312                     l1777:
 23309                           
 23310                           ; BSR set to: 1
 23311                           ;doprnt.c: 1524: (putch(c) );
 23312                           
 23313                           ; BSR set to: 1
 23314  012312  51B1               	movf	printf@c& (0+255),w,b
 23315  012314  EC8D  F0CC         	call	_putch
 23316  012318                     l1772:
 23317  012318  0101               	movlb	1	; () banked
 23318  01231A  07AF               	decf	printf@prec& (0+255),f,b
 23319  01231C  A0D8               	btfss	status,0,c
 23320  01231E  07B0               	decf	(printf@prec+1)& (0+255),f,b
 23321  012320  29AF               	incf	printf@prec& (0+255),w,b
 23322  012322  E1EB               	bnz	l19765
 23323  012324  29B0               	incf	(printf@prec+1)& (0+255),w,b
 23324  012326  A4D8               	btfss	status,2,c
 23325  012328  D7E8               	goto	l1774
 23326  01232A                     u26200:
 23327                           
 23328                           ; BSR set to: 1
 23329                           
 23330                           ; BSR set to: 1
 23331  01232A  0101               	movlb	1	; () banked
 23332  01232C  5182               	movf	printf@f& (0+255),w,b
 23333  01232E  6F8C               	movwf	??_printf& (0+255),b
 23334  012330  5183               	movf	(printf@f+1)& (0+255),w,b
 23335  012332  6F8D               	movwf	(??_printf+1)& (0+255),b
 23336  012334  4B82               	infsnz	printf@f& (0+255),f,b
 23337  012336  2B83               	incf	(printf@f+1)& (0+255),f,b
 23338  012338  C18C  FFF6         	movff	??_printf,tblptrl
 23339  01233C  C18D  FFF7         	movff	??_printf+1,tblptrh
 23340  012340  0E00               	movlw	low (__mediumconst shr (0+16))
 23341  012342  6EF8               	movwf	tblptru,c
 23342  012344  0E0D               	movlw	(high __ramtop+-1)
 23343  012346  64F7               	cpfsgt	tblptrh,c
 23344  012348  D003               	bra	u26217
 23345  01234A  0008               	tblrd		*
 23346  01234C  50F5               	movf	tablat,w,c
 23347  01234E  D005               	bra	u26210
 23348  012350                     u26217:
 23349  012350  CFF6 FFE9          	movff	tblptrl,fsr0l
 23350  012354  CFF7 FFEA          	movff	tblptrh,fsr0h
 23351  012358  50EF               	movf	indf0,w,c
 23352  01235A                     u26210:
 23353  01235A  0101               	movlb	1	; () banked
 23354  01235C  6FB1               	movwf	printf@c& (0+255),b
 23355  01235E  51B1               	movf	printf@c& (0+255),w,b
 23356  012360  B4D8               	btfsc	status,2,c
 23357  012362  0012               	return	
 23358  012364  EFD4  F08A         	goto	l1646
 23359  012368                     __end_of_printf:
 23360                           	opt stack 0
 23361                           tblptru	equ	0xFF8
 23362                           tblptrh	equ	0xFF7
 23363                           tblptrl	equ	0xFF6
 23364                           tablat	equ	0xFF5
 23365                           prodh	equ	0xFF4
 23366                           prodl	equ	0xFF3
 23367                           intcon	equ	0xFF2
 23368                           indf0	equ	0xFEF
 23369                           postinc0	equ	0xFEE
 23370                           fsr0h	equ	0xFEA
 23371                           fsr0l	equ	0xFE9
 23372                           wreg	equ	0xFE8
 23373                           indf1	equ	0xFE7
 23374                           postdec1	equ	0xFE5
 23375                           plusw1	equ	0xFE3
 23376                           fsr1h	equ	0xFE2
 23377                           fsr1l	equ	0xFE1
 23378                           indf2	equ	0xFDF
 23379                           postinc2	equ	0xFDE
 23380                           postdec2	equ	0xFDD
 23381                           plusw2	equ	0xFDB
 23382                           fsr2h	equ	0xFDA
 23383                           fsr2l	equ	0xFD9
 23384                           status	equ	0xFD8
 23385                           
 23386 ;; *************** function _scale *****************
 23387 ;; Defined at:
 23388 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;  scl             1    wreg     char 
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;  scl             1  119[BANK1 ] char 
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  4  111[BANK1 ] char 
 23395 ;; Registers used:
 23396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23402 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23403 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23405 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23406 ;;Total ram usage:        9 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:   14
 23409 ;; This function calls:
 23410 ;;		___awdiv
 23411 ;;		___awmod
 23412 ;;		___flmul
 23413 ;; This function is called by:
 23414 ;;		_printf
 23415 ;; This function uses a non-reentrant model
 23416 ;;
 23417                           
 23418                           	psect	text30
 23419  013C06                     __ptext30:
 23420                           	opt stack 0
 23421  013C06                     _scale:
 23422                           	opt stack 13
 23423                           
 23424                           ; BSR set to: 1
 23425                           ;incstack = 0
 23426                           ;scale@scl stored from wreg
 23427  013C06  0101               	movlb	1	; () banked
 23428  013C08  6F77               	movwf	scale@scl& (0+255),b
 23429                           
 23430                           ;doprnt.c: 428: if(scl < 0) {
 23431  013C0A  0101               	movlb	1	; () banked
 23432  013C0C  AF77               	btfss	scale@scl& (0+255),7,b
 23433  013C0E  D127               	goto	l1635
 23434                           
 23435                           ; BSR set to: 1
 23436                           ;doprnt.c: 429: scl = -scl;
 23437  013C10  6D77               	negf	scale@scl& (0+255),b
 23438                           
 23439                           ;doprnt.c: 430: if(scl>=110)
 23440  013C12  5177               	movf	scale@scl& (0+255),w,b
 23441  013C14  0A80               	xorlw	128
 23442  013C16  0F12               	addlw	-238
 23443  013C18  A0D8               	btfss	status,0,c
 23444  013C1A  D0A5               	goto	l1636
 23445                           
 23446                           ; BSR set to: 1
 23447                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 23448  013C1C  0E00               	movlw	0
 23449  013C1E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23450  013C20  0E0A               	movlw	10
 23451  013C22  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23452  013C24  0E00               	movlw	0
 23453  013C26  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23454  013C28  0E64               	movlw	100
 23455  013C2A  6F19               	movwf	___awmod@divisor& (0+255),b
 23456  013C2C  5177               	movf	scale@scl& (0+255),w,b
 23457  013C2E  6F17               	movwf	___awmod@dividend& (0+255),b
 23458  013C30  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23459  013C32  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 23460  013C34  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 23461  013C36  EC9B  F0C4         	call	___awmod	;wreg free
 23462  013C3A  C117  F11D         	movff	?___awmod,___awdiv@dividend
 23463  013C3E  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 23464  013C42  ECD7  F0C2         	call	___awdiv	;wreg free
 23465  013C46  0101               	movlb	1	; () banked
 23466  013C48  90D8               	bcf	status,0,c
 23467  013C4A  371D               	rlcf	?___awdiv& (0+255),f,b
 23468  013C4C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23469  013C4E  90D8               	bcf	status,0,c
 23470  013C50  371D               	rlcf	?___awdiv& (0+255),f,b
 23471  013C52  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23472  013C54  0E24               	movlw	36
 23473  013C56  271D               	addwf	?___awdiv& (0+255),f,b
 23474  013C58  0E00               	movlw	0
 23475  013C5A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23476  013C5C  0E93               	movlw	low __npowers_
 23477  013C5E  251D               	addwf	?___awdiv& (0+255),w,b
 23478  013C60  6EF6               	movwf	tblptrl,c
 23479  013C62  0ED4               	movlw	high __npowers_
 23480  013C64  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23481  013C66  6EF7               	movwf	tblptrh,c
 23482  013C68                     	if	1	;There are 3 active tblptr bytes
 23483  013C68  6AF8               	clrf	tblptru,c
 23484  013C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 23485  013C6C  22F8               	addwfc	tblptru,f,c
 23486  013C6E                     	endif
 23487  013C6E  0009               	tblrd		*+
 23488  013C70  CFF5 F15A          	movff	tablat,___flmul@a
 23489  013C74  0009               	tblrd		*+
 23490  013C76  CFF5 F15B          	movff	tablat,___flmul@a+1
 23491  013C7A  0009               	tblrd		*+
 23492  013C7C  CFF5 F15C          	movff	tablat,___flmul@a+2
 23493  013C80  000A               	tblrd		*-
 23494  013C82  CFF5 F15D          	movff	tablat,___flmul@a+3
 23495  013C86  0E00               	movlw	0
 23496  013C88  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23497  013C8A  0E64               	movlw	100
 23498  013C8C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23499  013C8E  5177               	movf	scale@scl& (0+255),w,b
 23500  013C90  6F1D               	movwf	___awdiv@dividend& (0+255),b
 23501  013C92  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23502  013C94  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 23503  013C96  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23504  013C98  ECD7  F0C2         	call	___awdiv	;wreg free
 23505  013C9C  0101               	movlb	1	; () banked
 23506  013C9E  90D8               	bcf	status,0,c
 23507  013CA0  371D               	rlcf	?___awdiv& (0+255),f,b
 23508  013CA2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23509  013CA4  90D8               	bcf	status,0,c
 23510  013CA6  371D               	rlcf	?___awdiv& (0+255),f,b
 23511  013CA8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23512  013CAA  0E48               	movlw	72
 23513  013CAC  271D               	addwf	?___awdiv& (0+255),f,b
 23514  013CAE  0E00               	movlw	0
 23515  013CB0  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23516  013CB2  0E93               	movlw	low __npowers_
 23517  013CB4  251D               	addwf	?___awdiv& (0+255),w,b
 23518  013CB6  6EF6               	movwf	tblptrl,c
 23519  013CB8  0ED4               	movlw	high __npowers_
 23520  013CBA  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23521  013CBC  6EF7               	movwf	tblptrh,c
 23522  013CBE                     	if	1	;There are 3 active tblptr bytes
 23523  013CBE  6AF8               	clrf	tblptru,c
 23524  013CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 23525  013CC2  22F8               	addwfc	tblptru,f,c
 23526  013CC4                     	endif
 23527  013CC4  0009               	tblrd		*+
 23528  013CC6  CFF5 F156          	movff	tablat,___flmul@b
 23529  013CCA  0009               	tblrd		*+
 23530  013CCC  CFF5 F157          	movff	tablat,___flmul@b+1
 23531  013CD0  0009               	tblrd		*+
 23532  013CD2  CFF5 F158          	movff	tablat,___flmul@b+2
 23533  013CD6  000A               	tblrd		*-
 23534  013CD8  CFF5 F159          	movff	tablat,___flmul@b+3
 23535  013CDC  EC49  F0A4         	call	___flmul	;wreg free
 23536  013CE0  C156  F173         	movff	?___flmul,_scale$4503
 23537  013CE4  C157  F174         	movff	?___flmul+1,_scale$4503+1
 23538  013CE8  C158  F175         	movff	?___flmul+2,_scale$4503+2
 23539  013CEC  C159  F176         	movff	?___flmul+3,_scale$4503+3
 23540                           
 23541                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 23542  013CF0  C173  F156         	movff	_scale$4503,___flmul@b
 23543  013CF4  C174  F157         	movff	_scale$4503+1,___flmul@b+1
 23544  013CF8  C175  F158         	movff	_scale$4503+2,___flmul@b+2
 23545  013CFC  C176  F159         	movff	_scale$4503+3,___flmul@b+3
 23546  013D00  0E00               	movlw	0
 23547  013D02  0101               	movlb	1	; () banked
 23548  013D04  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23549  013D06  0E0A               	movlw	10
 23550  013D08  6F19               	movwf	___awmod@divisor& (0+255),b
 23551  013D0A  5177               	movf	scale@scl& (0+255),w,b
 23552  013D0C  6F17               	movwf	___awmod@dividend& (0+255),b
 23553  013D0E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23554  013D10  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 23555  013D12  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 23556  013D14  EC9B  F0C4         	call	___awmod	;wreg free
 23557  013D18  0101               	movlb	1	; () banked
 23558  013D1A  90D8               	bcf	status,0,c
 23559  013D1C  3717               	rlcf	?___awmod& (0+255),f,b
 23560  013D1E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23561  013D20  90D8               	bcf	status,0,c
 23562  013D22  3717               	rlcf	?___awmod& (0+255),f,b
 23563  013D24  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23564  013D26  0E93               	movlw	low __npowers_
 23565  013D28  2517               	addwf	?___awmod& (0+255),w,b
 23566  013D2A  6EF6               	movwf	tblptrl,c
 23567  013D2C  0ED4               	movlw	high __npowers_
 23568  013D2E  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23569  013D30  6EF7               	movwf	tblptrh,c
 23570  013D32                     	if	1	;There are 3 active tblptr bytes
 23571  013D32  6AF8               	clrf	tblptru,c
 23572  013D34  0E00               	movlw	low (__mediumconst shr (0+16))
 23573  013D36  22F8               	addwfc	tblptru,f,c
 23574  013D38                     	endif
 23575  013D38  0009               	tblrd		*+
 23576  013D3A  CFF5 F15A          	movff	tablat,___flmul@a
 23577  013D3E  0009               	tblrd		*+
 23578  013D40  CFF5 F15B          	movff	tablat,___flmul@a+1
 23579  013D44  0009               	tblrd		*+
 23580  013D46  CFF5 F15C          	movff	tablat,___flmul@a+2
 23581  013D4A  000A               	tblrd		*-
 23582  013D4C  CFF5 F15D          	movff	tablat,___flmul@a+3
 23583  013D50  EC49  F0A4         	call	___flmul	;wreg free
 23584  013D54  C156  F16F         	movff	?___flmul,?_scale
 23585  013D58  C157  F170         	movff	?___flmul+1,?_scale+1
 23586  013D5C  C158  F171         	movff	?___flmul+2,?_scale+2
 23587  013D60  C159  F172         	movff	?___flmul+3,?_scale+3
 23588  013D64  0012               	return	
 23589  013D66                     l1636:
 23590                           
 23591                           ;doprnt.c: 432: else if(scl > 10)
 23592  013D66  0101               	movlb	1	; () banked
 23593  013D68  5177               	movf	scale@scl& (0+255),w,b
 23594  013D6A  0A80               	xorlw	128
 23595  013D6C  0F75               	addlw	-139
 23596  013D6E  A0D8               	btfss	status,0,c
 23597  013D70  D05D               	goto	l1639
 23598                           
 23599                           ; BSR set to: 1
 23600                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 23601  013D72  0E00               	movlw	0
 23602  013D74  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23603  013D76  0E0A               	movlw	10
 23604  013D78  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23605  013D7A  5177               	movf	scale@scl& (0+255),w,b
 23606  013D7C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 23607  013D7E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23608  013D80  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 23609  013D82  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23610  013D84  ECD7  F0C2         	call	___awdiv	;wreg free
 23611  013D88  0101               	movlb	1	; () banked
 23612  013D8A  90D8               	bcf	status,0,c
 23613  013D8C  371D               	rlcf	?___awdiv& (0+255),f,b
 23614  013D8E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23615  013D90  90D8               	bcf	status,0,c
 23616  013D92  371D               	rlcf	?___awdiv& (0+255),f,b
 23617  013D94  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23618  013D96  0E24               	movlw	36
 23619  013D98  271D               	addwf	?___awdiv& (0+255),f,b
 23620  013D9A  0E00               	movlw	0
 23621  013D9C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23622  013D9E  0E93               	movlw	low __npowers_
 23623  013DA0  251D               	addwf	?___awdiv& (0+255),w,b
 23624  013DA2  6EF6               	movwf	tblptrl,c
 23625  013DA4  0ED4               	movlw	high __npowers_
 23626  013DA6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23627  013DA8  6EF7               	movwf	tblptrh,c
 23628  013DAA                     	if	1	;There are 3 active tblptr bytes
 23629  013DAA  6AF8               	clrf	tblptru,c
 23630  013DAC  0E00               	movlw	low (__mediumconst shr (0+16))
 23631  013DAE  22F8               	addwfc	tblptru,f,c
 23632  013DB0                     	endif
 23633  013DB0  0009               	tblrd		*+
 23634  013DB2  CFF5 F156          	movff	tablat,___flmul@b
 23635  013DB6  0009               	tblrd		*+
 23636  013DB8  CFF5 F157          	movff	tablat,___flmul@b+1
 23637  013DBC  0009               	tblrd		*+
 23638  013DBE  CFF5 F158          	movff	tablat,___flmul@b+2
 23639  013DC2  000A               	tblrd		*-
 23640  013DC4  CFF5 F159          	movff	tablat,___flmul@b+3
 23641  013DC8  0E00               	movlw	0
 23642  013DCA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23643  013DCC  0E0A               	movlw	10
 23644  013DCE  6F19               	movwf	___awmod@divisor& (0+255),b
 23645  013DD0  5177               	movf	scale@scl& (0+255),w,b
 23646  013DD2  6F17               	movwf	___awmod@dividend& (0+255),b
 23647  013DD4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23648  013DD6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 23649  013DD8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 23650  013DDA  EC9B  F0C4         	call	___awmod	;wreg free
 23651  013DDE  0101               	movlb	1	; () banked
 23652  013DE0  90D8               	bcf	status,0,c
 23653  013DE2  3717               	rlcf	?___awmod& (0+255),f,b
 23654  013DE4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23655  013DE6  90D8               	bcf	status,0,c
 23656  013DE8  3717               	rlcf	?___awmod& (0+255),f,b
 23657  013DEA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23658  013DEC  0E93               	movlw	low __npowers_
 23659  013DEE  2517               	addwf	?___awmod& (0+255),w,b
 23660  013DF0  6EF6               	movwf	tblptrl,c
 23661  013DF2  0ED4               	movlw	high __npowers_
 23662  013DF4  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23663  013DF6  6EF7               	movwf	tblptrh,c
 23664  013DF8                     	if	1	;There are 3 active tblptr bytes
 23665  013DF8  6AF8               	clrf	tblptru,c
 23666  013DFA  0E00               	movlw	low (__mediumconst shr (0+16))
 23667  013DFC  22F8               	addwfc	tblptru,f,c
 23668  013DFE                     	endif
 23669  013DFE  0009               	tblrd		*+
 23670  013E00  CFF5 F15A          	movff	tablat,___flmul@a
 23671  013E04  0009               	tblrd		*+
 23672  013E06  CFF5 F15B          	movff	tablat,___flmul@a+1
 23673  013E0A  0009               	tblrd		*+
 23674  013E0C  CFF5 F15C          	movff	tablat,___flmul@a+2
 23675  013E10  000A               	tblrd		*-
 23676  013E12  CFF5 F15D          	movff	tablat,___flmul@a+3
 23677  013E16  EC49  F0A4         	call	___flmul	;wreg free
 23678  013E1A  C156  F16F         	movff	?___flmul,?_scale
 23679  013E1E  C157  F170         	movff	?___flmul+1,?_scale+1
 23680  013E22  C158  F171         	movff	?___flmul+2,?_scale+2
 23681  013E26  C159  F172         	movff	?___flmul+3,?_scale+3
 23682  013E2A  0012               	return	
 23683  013E2C                     l1639:
 23684                           
 23685                           ;doprnt.c: 434: return _npowers_[scl];
 23686  013E2C  0101               	movlb	1	; () banked
 23687  013E2E  5177               	movf	scale@scl& (0+255),w,b
 23688  013E30  0D04               	mullw	4
 23689  013E32  0E93               	movlw	low __npowers_
 23690  013E34  24F3               	addwf	prodl,w,c
 23691  013E36  6EF6               	movwf	tblptrl,c
 23692  013E38  0ED4               	movlw	high __npowers_
 23693  013E3A  20F4               	addwfc	prodh,w,c
 23694  013E3C  6EF7               	movwf	tblptrh,c
 23695  013E3E                     	if	1	;There are 3 active tblptr bytes
 23696  013E3E  6AF8               	clrf	tblptru,c
 23697  013E40  0E00               	movlw	low (__mediumconst shr (0+16))
 23698  013E42  22F8               	addwfc	tblptru,f,c
 23699  013E44                     	endif
 23700  013E44  0009               	tblrd		*+
 23701  013E46  CFF5 F16F          	movff	tablat,?_scale
 23702  013E4A  0009               	tblrd		*+
 23703  013E4C  CFF5 F170          	movff	tablat,?_scale+1
 23704  013E50  0009               	tblrd		*+
 23705  013E52  CFF5 F171          	movff	tablat,?_scale+2
 23706  013E56  000A               	tblrd		*-
 23707  013E58  CFF5 F172          	movff	tablat,?_scale+3
 23708                           
 23709                           ; BSR set to: 1
 23710  013E5C  0012               	return	
 23711  013E5E                     l1635:
 23712                           
 23713                           ; BSR set to: 1
 23714                           ;doprnt.c: 435: }
 23715                           ;doprnt.c: 436: if(scl>=110)
 23716                           
 23717                           ; BSR set to: 1
 23718  013E5E  5177               	movf	scale@scl& (0+255),w,b
 23719  013E60  0A80               	xorlw	128
 23720  013E62  0F12               	addlw	-238
 23721  013E64  A0D8               	btfss	status,0,c
 23722  013E66  D0A5               	goto	l1640
 23723                           
 23724                           ; BSR set to: 1
 23725                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 23726  013E68  0E00               	movlw	0
 23727  013E6A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23728  013E6C  0E0A               	movlw	10
 23729  013E6E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23730  013E70  0E00               	movlw	0
 23731  013E72  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23732  013E74  0E64               	movlw	100
 23733  013E76  6F19               	movwf	___awmod@divisor& (0+255),b
 23734  013E78  5177               	movf	scale@scl& (0+255),w,b
 23735  013E7A  6F17               	movwf	___awmod@dividend& (0+255),b
 23736  013E7C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23737  013E7E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 23738  013E80  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 23739  013E82  EC9B  F0C4         	call	___awmod	;wreg free
 23740  013E86  C117  F11D         	movff	?___awmod,___awdiv@dividend
 23741  013E8A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 23742  013E8E  ECD7  F0C2         	call	___awdiv	;wreg free
 23743  013E92  0101               	movlb	1	; () banked
 23744  013E94  90D8               	bcf	status,0,c
 23745  013E96  371D               	rlcf	?___awdiv& (0+255),f,b
 23746  013E98  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23747  013E9A  90D8               	bcf	status,0,c
 23748  013E9C  371D               	rlcf	?___awdiv& (0+255),f,b
 23749  013E9E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23750  013EA0  0E24               	movlw	36
 23751  013EA2  271D               	addwf	?___awdiv& (0+255),f,b
 23752  013EA4  0E00               	movlw	0
 23753  013EA6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23754  013EA8  0E5F               	movlw	low __powers_
 23755  013EAA  251D               	addwf	?___awdiv& (0+255),w,b
 23756  013EAC  6EF6               	movwf	tblptrl,c
 23757  013EAE  0ED4               	movlw	high __powers_
 23758  013EB0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23759  013EB2  6EF7               	movwf	tblptrh,c
 23760  013EB4                     	if	1	;There are 3 active tblptr bytes
 23761  013EB4  6AF8               	clrf	tblptru,c
 23762  013EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 23763  013EB8  22F8               	addwfc	tblptru,f,c
 23764  013EBA                     	endif
 23765  013EBA  0009               	tblrd		*+
 23766  013EBC  CFF5 F15A          	movff	tablat,___flmul@a
 23767  013EC0  0009               	tblrd		*+
 23768  013EC2  CFF5 F15B          	movff	tablat,___flmul@a+1
 23769  013EC6  0009               	tblrd		*+
 23770  013EC8  CFF5 F15C          	movff	tablat,___flmul@a+2
 23771  013ECC  000A               	tblrd		*-
 23772  013ECE  CFF5 F15D          	movff	tablat,___flmul@a+3
 23773  013ED2  0E00               	movlw	0
 23774  013ED4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23775  013ED6  0E64               	movlw	100
 23776  013ED8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23777  013EDA  5177               	movf	scale@scl& (0+255),w,b
 23778  013EDC  6F1D               	movwf	___awdiv@dividend& (0+255),b
 23779  013EDE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23780  013EE0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 23781  013EE2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23782  013EE4  ECD7  F0C2         	call	___awdiv	;wreg free
 23783  013EE8  0101               	movlb	1	; () banked
 23784  013EEA  90D8               	bcf	status,0,c
 23785  013EEC  371D               	rlcf	?___awdiv& (0+255),f,b
 23786  013EEE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23787  013EF0  90D8               	bcf	status,0,c
 23788  013EF2  371D               	rlcf	?___awdiv& (0+255),f,b
 23789  013EF4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23790  013EF6  0E48               	movlw	72
 23791  013EF8  271D               	addwf	?___awdiv& (0+255),f,b
 23792  013EFA  0E00               	movlw	0
 23793  013EFC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23794  013EFE  0E5F               	movlw	low __powers_
 23795  013F00  251D               	addwf	?___awdiv& (0+255),w,b
 23796  013F02  6EF6               	movwf	tblptrl,c
 23797  013F04  0ED4               	movlw	high __powers_
 23798  013F06  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23799  013F08  6EF7               	movwf	tblptrh,c
 23800  013F0A                     	if	1	;There are 3 active tblptr bytes
 23801  013F0A  6AF8               	clrf	tblptru,c
 23802  013F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 23803  013F0E  22F8               	addwfc	tblptru,f,c
 23804  013F10                     	endif
 23805  013F10  0009               	tblrd		*+
 23806  013F12  CFF5 F156          	movff	tablat,___flmul@b
 23807  013F16  0009               	tblrd		*+
 23808  013F18  CFF5 F157          	movff	tablat,___flmul@b+1
 23809  013F1C  0009               	tblrd		*+
 23810  013F1E  CFF5 F158          	movff	tablat,___flmul@b+2
 23811  013F22  000A               	tblrd		*-
 23812  013F24  CFF5 F159          	movff	tablat,___flmul@b+3
 23813  013F28  EC49  F0A4         	call	___flmul	;wreg free
 23814  013F2C  C156  F173         	movff	?___flmul,_scale$4503
 23815  013F30  C157  F174         	movff	?___flmul+1,_scale$4503+1
 23816  013F34  C158  F175         	movff	?___flmul+2,_scale$4503+2
 23817  013F38  C159  F176         	movff	?___flmul+3,_scale$4503+3
 23818                           
 23819                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 23820  013F3C  C173  F156         	movff	_scale$4503,___flmul@b
 23821  013F40  C174  F157         	movff	_scale$4503+1,___flmul@b+1
 23822  013F44  C175  F158         	movff	_scale$4503+2,___flmul@b+2
 23823  013F48  C176  F159         	movff	_scale$4503+3,___flmul@b+3
 23824  013F4C  0E00               	movlw	0
 23825  013F4E  0101               	movlb	1	; () banked
 23826  013F50  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23827  013F52  0E0A               	movlw	10
 23828  013F54  6F19               	movwf	___awmod@divisor& (0+255),b
 23829  013F56  5177               	movf	scale@scl& (0+255),w,b
 23830  013F58  6F17               	movwf	___awmod@dividend& (0+255),b
 23831  013F5A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23832  013F5C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 23833  013F5E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 23834  013F60  EC9B  F0C4         	call	___awmod	;wreg free
 23835  013F64  0101               	movlb	1	; () banked
 23836  013F66  90D8               	bcf	status,0,c
 23837  013F68  3717               	rlcf	?___awmod& (0+255),f,b
 23838  013F6A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23839  013F6C  90D8               	bcf	status,0,c
 23840  013F6E  3717               	rlcf	?___awmod& (0+255),f,b
 23841  013F70  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23842  013F72  0E5F               	movlw	low __powers_
 23843  013F74  2517               	addwf	?___awmod& (0+255),w,b
 23844  013F76  6EF6               	movwf	tblptrl,c
 23845  013F78  0ED4               	movlw	high __powers_
 23846  013F7A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23847  013F7C  6EF7               	movwf	tblptrh,c
 23848  013F7E                     	if	1	;There are 3 active tblptr bytes
 23849  013F7E  6AF8               	clrf	tblptru,c
 23850  013F80  0E00               	movlw	low (__mediumconst shr (0+16))
 23851  013F82  22F8               	addwfc	tblptru,f,c
 23852  013F84                     	endif
 23853  013F84  0009               	tblrd		*+
 23854  013F86  CFF5 F15A          	movff	tablat,___flmul@a
 23855  013F8A  0009               	tblrd		*+
 23856  013F8C  CFF5 F15B          	movff	tablat,___flmul@a+1
 23857  013F90  0009               	tblrd		*+
 23858  013F92  CFF5 F15C          	movff	tablat,___flmul@a+2
 23859  013F96  000A               	tblrd		*-
 23860  013F98  CFF5 F15D          	movff	tablat,___flmul@a+3
 23861  013F9C  EC49  F0A4         	call	___flmul	;wreg free
 23862  013FA0  C156  F16F         	movff	?___flmul,?_scale
 23863  013FA4  C157  F170         	movff	?___flmul+1,?_scale+1
 23864  013FA8  C158  F171         	movff	?___flmul+2,?_scale+2
 23865  013FAC  C159  F172         	movff	?___flmul+3,?_scale+3
 23866  013FB0  0012               	return	
 23867  013FB2                     l1640:
 23868                           
 23869                           ;doprnt.c: 438: else if(scl > 10)
 23870  013FB2  0101               	movlb	1	; () banked
 23871  013FB4  5177               	movf	scale@scl& (0+255),w,b
 23872  013FB6  0A80               	xorlw	128
 23873  013FB8  0F75               	addlw	-139
 23874  013FBA  A0D8               	btfss	status,0,c
 23875  013FBC  D05D               	goto	l1642
 23876                           
 23877                           ; BSR set to: 1
 23878                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 23879  013FBE  0E00               	movlw	0
 23880  013FC0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23881  013FC2  0E0A               	movlw	10
 23882  013FC4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23883  013FC6  5177               	movf	scale@scl& (0+255),w,b
 23884  013FC8  6F1D               	movwf	___awdiv@dividend& (0+255),b
 23885  013FCA  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23886  013FCC  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 23887  013FCE  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 23888  013FD0  ECD7  F0C2         	call	___awdiv	;wreg free
 23889  013FD4  0101               	movlb	1	; () banked
 23890  013FD6  90D8               	bcf	status,0,c
 23891  013FD8  371D               	rlcf	?___awdiv& (0+255),f,b
 23892  013FDA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23893  013FDC  90D8               	bcf	status,0,c
 23894  013FDE  371D               	rlcf	?___awdiv& (0+255),f,b
 23895  013FE0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23896  013FE2  0E24               	movlw	36
 23897  013FE4  271D               	addwf	?___awdiv& (0+255),f,b
 23898  013FE6  0E00               	movlw	0
 23899  013FE8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23900  013FEA  0E5F               	movlw	low __powers_
 23901  013FEC  251D               	addwf	?___awdiv& (0+255),w,b
 23902  013FEE  6EF6               	movwf	tblptrl,c
 23903  013FF0  0ED4               	movlw	high __powers_
 23904  013FF2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23905  013FF4  6EF7               	movwf	tblptrh,c
 23906  013FF6                     	if	1	;There are 3 active tblptr bytes
 23907  013FF6  6AF8               	clrf	tblptru,c
 23908  013FF8  0E00               	movlw	low (__mediumconst shr (0+16))
 23909  013FFA  22F8               	addwfc	tblptru,f,c
 23910  013FFC                     	endif
 23911  013FFC  0009               	tblrd		*+
 23912  013FFE  CFF5 F156          	movff	tablat,___flmul@b
 23913  014002  0009               	tblrd		*+
 23914  014004  CFF5 F157          	movff	tablat,___flmul@b+1
 23915  014008  0009               	tblrd		*+
 23916  01400A  CFF5 F158          	movff	tablat,___flmul@b+2
 23917  01400E  000A               	tblrd		*-
 23918  014010  CFF5 F159          	movff	tablat,___flmul@b+3
 23919  014014  0E00               	movlw	0
 23920  014016  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23921  014018  0E0A               	movlw	10
 23922  01401A  6F19               	movwf	___awmod@divisor& (0+255),b
 23923  01401C  5177               	movf	scale@scl& (0+255),w,b
 23924  01401E  6F17               	movwf	___awmod@dividend& (0+255),b
 23925  014020  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23926  014022  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 23927  014024  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 23928  014026  EC9B  F0C4         	call	___awmod	;wreg free
 23929  01402A  0101               	movlb	1	; () banked
 23930  01402C  90D8               	bcf	status,0,c
 23931  01402E  3717               	rlcf	?___awmod& (0+255),f,b
 23932  014030  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23933  014032  90D8               	bcf	status,0,c
 23934  014034  3717               	rlcf	?___awmod& (0+255),f,b
 23935  014036  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23936  014038  0E5F               	movlw	low __powers_
 23937  01403A  2517               	addwf	?___awmod& (0+255),w,b
 23938  01403C  6EF6               	movwf	tblptrl,c
 23939  01403E  0ED4               	movlw	high __powers_
 23940  014040  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23941  014042  6EF7               	movwf	tblptrh,c
 23942  014044                     	if	1	;There are 3 active tblptr bytes
 23943  014044  6AF8               	clrf	tblptru,c
 23944  014046  0E00               	movlw	low (__mediumconst shr (0+16))
 23945  014048  22F8               	addwfc	tblptru,f,c
 23946  01404A                     	endif
 23947  01404A  0009               	tblrd		*+
 23948  01404C  CFF5 F15A          	movff	tablat,___flmul@a
 23949  014050  0009               	tblrd		*+
 23950  014052  CFF5 F15B          	movff	tablat,___flmul@a+1
 23951  014056  0009               	tblrd		*+
 23952  014058  CFF5 F15C          	movff	tablat,___flmul@a+2
 23953  01405C  000A               	tblrd		*-
 23954  01405E  CFF5 F15D          	movff	tablat,___flmul@a+3
 23955  014062  EC49  F0A4         	call	___flmul	;wreg free
 23956  014066  C156  F16F         	movff	?___flmul,?_scale
 23957  01406A  C157  F170         	movff	?___flmul+1,?_scale+1
 23958  01406E  C158  F171         	movff	?___flmul+2,?_scale+2
 23959  014072  C159  F172         	movff	?___flmul+3,?_scale+3
 23960  014076  0012               	return	
 23961  014078                     l1642:
 23962                           
 23963                           ;doprnt.c: 440: return _powers_[scl];
 23964  014078  0101               	movlb	1	; () banked
 23965  01407A  5177               	movf	scale@scl& (0+255),w,b
 23966  01407C  0D04               	mullw	4
 23967  01407E  0E5F               	movlw	low __powers_
 23968  014080  24F3               	addwf	prodl,w,c
 23969  014082  6EF6               	movwf	tblptrl,c
 23970  014084  0ED4               	movlw	high __powers_
 23971  014086  20F4               	addwfc	prodh,w,c
 23972  014088  6EF7               	movwf	tblptrh,c
 23973  01408A                     	if	1	;There are 3 active tblptr bytes
 23974  01408A  6AF8               	clrf	tblptru,c
 23975  01408C  0E00               	movlw	low (__mediumconst shr (0+16))
 23976  01408E  22F8               	addwfc	tblptru,f,c
 23977  014090                     	endif
 23978  014090  0009               	tblrd		*+
 23979  014092  CFF5 F16F          	movff	tablat,?_scale
 23980  014096  0009               	tblrd		*+
 23981  014098  CFF5 F170          	movff	tablat,?_scale+1
 23982  01409C  0009               	tblrd		*+
 23983  01409E  CFF5 F171          	movff	tablat,?_scale+2
 23984  0140A2  000A               	tblrd		*-
 23985  0140A4  CFF5 F172          	movff	tablat,?_scale+3
 23986  0140A8  0012               	return	
 23987  0140AA                     __end_of_scale:
 23988                           	opt stack 0
 23989                           tblptru	equ	0xFF8
 23990                           tblptrh	equ	0xFF7
 23991                           tblptrl	equ	0xFF6
 23992                           tablat	equ	0xFF5
 23993                           prodh	equ	0xFF4
 23994                           prodl	equ	0xFF3
 23995                           intcon	equ	0xFF2
 23996                           indf0	equ	0xFEF
 23997                           postinc0	equ	0xFEE
 23998                           fsr0h	equ	0xFEA
 23999                           fsr0l	equ	0xFE9
 24000                           wreg	equ	0xFE8
 24001                           indf1	equ	0xFE7
 24002                           postdec1	equ	0xFE5
 24003                           plusw1	equ	0xFE3
 24004                           fsr1h	equ	0xFE2
 24005                           fsr1l	equ	0xFE1
 24006                           indf2	equ	0xFDF
 24007                           postinc2	equ	0xFDE
 24008                           postdec2	equ	0xFDD
 24009                           plusw2	equ	0xFDB
 24010                           fsr2h	equ	0xFDA
 24011                           fsr2l	equ	0xFD9
 24012                           status	equ	0xFD8
 24013                           
 24014 ;; *************** function _putch *****************
 24015 ;; Defined at:
 24016 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 24017 ;; Parameters:    Size  Location     Type
 24018 ;;  txData          1    wreg     unsigned char 
 24019 ;; Auto vars:     Size  Location     Type
 24020 ;;  txData          1   24[BANK1 ] unsigned char 
 24021 ;; Return value:  Size  Location     Type
 24022 ;;                  1    wreg      void 
 24023 ;; Registers used:
 24024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24025 ;; Tracked objects:
 24026 ;;		On entry : 0/0
 24027 ;;		On exit  : 0/0
 24028 ;;		Unchanged: 0/0
 24029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24031 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24033 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24034 ;;Total ram usage:        1 bytes
 24035 ;; Hardware stack levels used:    1
 24036 ;; Hardware stack levels required when called:   14
 24037 ;; This function calls:
 24038 ;;		_EUSART2_Write
 24039 ;; This function is called by:
 24040 ;;		_printf
 24041 ;; This function uses a non-reentrant model
 24042 ;;
 24043                           
 24044                           	psect	text31
 24045  01991A                     __ptext31:
 24046                           	opt stack 0
 24047  01991A                     _putch:
 24048                           	opt stack 13
 24049                           
 24050                           ;incstack = 0
 24051                           ;putch@txData stored from wreg
 24052  01991A  0101               	movlb	1	; () banked
 24053  01991C  6F18               	movwf	putch@txData& (0+255),b
 24054                           
 24055                           ;eusart2.c: 195: EUSART2_Write(txData);
 24056  01991E  0101               	movlb	1	; () banked
 24057  019920  5118               	movf	putch@txData& (0+255),w,b
 24058  019922  ECE0  F0C7         	call	_EUSART2_Write
 24059  019926  0012               	return		;funcret
 24060  019928                     __end_of_putch:
 24061                           	opt stack 0
 24062                           tblptru	equ	0xFF8
 24063                           tblptrh	equ	0xFF7
 24064                           tblptrl	equ	0xFF6
 24065                           tablat	equ	0xFF5
 24066                           prodh	equ	0xFF4
 24067                           prodl	equ	0xFF3
 24068                           intcon	equ	0xFF2
 24069                           indf0	equ	0xFEF
 24070                           postinc0	equ	0xFEE
 24071                           fsr0h	equ	0xFEA
 24072                           fsr0l	equ	0xFE9
 24073                           wreg	equ	0xFE8
 24074                           indf1	equ	0xFE7
 24075                           postdec1	equ	0xFE5
 24076                           plusw1	equ	0xFE3
 24077                           fsr1h	equ	0xFE2
 24078                           fsr1l	equ	0xFE1
 24079                           indf2	equ	0xFDF
 24080                           postinc2	equ	0xFDE
 24081                           postdec2	equ	0xFDD
 24082                           plusw2	equ	0xFDB
 24083                           fsr2h	equ	0xFDA
 24084                           fsr2l	equ	0xFD9
 24085                           status	equ	0xFD8
 24086                           
 24087 ;; *************** function _EUSART2_Write *****************
 24088 ;; Defined at:
 24089 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 24090 ;; Parameters:    Size  Location     Type
 24091 ;;  txData          1    wreg     unsigned char 
 24092 ;; Auto vars:     Size  Location     Type
 24093 ;;  txData          1   23[BANK1 ] unsigned char 
 24094 ;; Return value:  Size  Location     Type
 24095 ;;                  1    wreg      void 
 24096 ;; Registers used:
 24097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24098 ;; Tracked objects:
 24099 ;;		On entry : 0/0
 24100 ;;		On exit  : 0/0
 24101 ;;		Unchanged: 0/0
 24102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24104 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24106 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24107 ;;Total ram usage:        1 bytes
 24108 ;; Hardware stack levels used:    1
 24109 ;; Hardware stack levels required when called:   13
 24110 ;; This function calls:
 24111 ;;		Nothing
 24112 ;; This function is called by:
 24113 ;;		_putch
 24114 ;; This function uses a non-reentrant model
 24115 ;;
 24116                           
 24117                           	psect	text32
 24118  018FC0                     __ptext32:
 24119                           	opt stack 0
 24120  018FC0                     _EUSART2_Write:
 24121                           	opt stack 13
 24122                           
 24123                           ;incstack = 0
 24124                           ;EUSART2_Write@txData stored from wreg
 24125  018FC0  0101               	movlb	1	; () banked
 24126  018FC2  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 24127                           
 24128                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 24129  018FC4  D002               	goto	l408
 24130  018FC6                     l409:
 24131                           
 24132                           ; BSR set to: 1
 24133  018FC6  0004               	clrwdt		;# 
 24134                           
 24135                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 24136  018FC8  827E               	bsf	3966,1,c	;volatile
 24137  018FCA                     l408:
 24138  018FCA  0101               	movlb	1	; () banked
 24139  018FCC  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 24140  018FCE  B4D8               	btfsc	status,2,c
 24141  018FD0  D7FA               	goto	l409
 24142                           
 24143                           ; BSR set to: 1
 24144                           ;eusart2.c: 167: }
 24145                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 24146  018FD2  927E               	bcf	3966,1,c	;volatile
 24147                           
 24148                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 24149  018FD4  010E               	movlb	14	; () banked
 24150  018FD6  BD2C               	btfsc	44,6,b	;volatile
 24151  018FD8  D003               	goto	l411
 24152                           
 24153                           ; BSR set to: 14
 24154                           ;eusart2.c: 172: {
 24155                           ;eusart2.c: 173: TX2REG = txData;
 24156  018FDA  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 24157                           
 24158                           ;eusart2.c: 174: }
 24159  018FDE  D013               	goto	l412
 24160  018FE0                     l411:
 24161                           
 24162                           ; BSR set to: 14
 24163                           ;eusart2.c: 175: else
 24164                           ;eusart2.c: 176: {
 24165                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 24166  018FE0  9D2C               	bcf	44,6,b	;volatile
 24167                           
 24168                           ; BSR set to: 14
 24169                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 24170  018FE2  0101               	movlb	1	; () banked
 24171  018FE4  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 24172  018FE6  0D01               	mullw	1
 24173  018FE8  0E00               	movlw	low _eusart2TxBuffer
 24174  018FEA  24F3               	addwf	prodl,w,c
 24175  018FEC  6ED9               	movwf	fsr2l,c
 24176  018FEE  0E03               	movlw	high _eusart2TxBuffer
 24177  018FF0  20F4               	addwfc	prodh,w,c
 24178  018FF2  6EDA               	movwf	fsr2h,c
 24179  018FF4  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 24180                           
 24181                           ; BSR set to: 1
 24182  018FF8  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 24183                           
 24184                           ; BSR set to: 1
 24185                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 24186  018FFA  0E7F               	movlw	127
 24187  018FFC  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 24188  018FFE  D002               	goto	l413
 24189                           
 24190                           ; BSR set to: 1
 24191                           ;eusart2.c: 180: {
 24192                           ;eusart2.c: 181: eusart2TxHead = 0;
 24193  019000  0E00               	movlw	0
 24194  019002  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 24195  019004                     l413:
 24196                           
 24197                           ; BSR set to: 1
 24198                           ;eusart2.c: 182: }
 24199                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 24200                           
 24201                           ; BSR set to: 1
 24202  019004  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 24203  019006                     l412:
 24204                           
 24205                           ;eusart2.c: 184: }
 24206                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 24207                           
 24208                           ; BSR set to: 1
 24209  019006  010E               	movlb	14	; () banked
 24210  019008  8D2C               	bsf	44,6,b	;volatile
 24211                           
 24212                           ; BSR set to: 14
 24213  01900A  0012               	return		;funcret
 24214  01900C                     __end_of_EUSART2_Write:
 24215                           	opt stack 0
 24216                           tblptru	equ	0xFF8
 24217                           tblptrh	equ	0xFF7
 24218                           tblptrl	equ	0xFF6
 24219                           tablat	equ	0xFF5
 24220                           prodh	equ	0xFF4
 24221                           prodl	equ	0xFF3
 24222                           intcon	equ	0xFF2
 24223                           indf0	equ	0xFEF
 24224                           postinc0	equ	0xFEE
 24225                           fsr0h	equ	0xFEA
 24226                           fsr0l	equ	0xFE9
 24227                           wreg	equ	0xFE8
 24228                           indf1	equ	0xFE7
 24229                           postdec1	equ	0xFE5
 24230                           plusw1	equ	0xFE3
 24231                           fsr1h	equ	0xFE2
 24232                           fsr1l	equ	0xFE1
 24233                           indf2	equ	0xFDF
 24234                           postinc2	equ	0xFDE
 24235                           postdec2	equ	0xFDD
 24236                           plusw2	equ	0xFDB
 24237                           fsr2h	equ	0xFDA
 24238                           fsr2l	equ	0xFD9
 24239                           status	equ	0xFD8
 24240                           
 24241 ;; *************** function _isdigit *****************
 24242 ;; Defined at:
 24243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 24244 ;; Parameters:    Size  Location     Type
 24245 ;;  c               1    wreg     unsigned char 
 24246 ;; Auto vars:     Size  Location     Type
 24247 ;;  c               1   25[BANK1 ] unsigned char 
 24248 ;; Return value:  Size  Location     Type
 24249 ;;		None               void
 24250 ;; Registers used:
 24251 ;;		wreg, status,2, status,0
 24252 ;; Tracked objects:
 24253 ;;		On entry : 0/0
 24254 ;;		On exit  : 0/0
 24255 ;;		Unchanged: 0/0
 24256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24258 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24259 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24260 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24261 ;;Total ram usage:        3 bytes
 24262 ;; Hardware stack levels used:    1
 24263 ;; Hardware stack levels required when called:   13
 24264 ;; This function calls:
 24265 ;;		Nothing
 24266 ;; This function is called by:
 24267 ;;		_printf
 24268 ;;		_atoi
 24269 ;; This function uses a non-reentrant model
 24270 ;;
 24271                           
 24272                           	psect	text33
 24273  019740                     __ptext33:
 24274                           	opt stack 0
 24275  019740                     _isdigit:
 24276                           	opt stack 14
 24277                           
 24278                           ; BSR set to: 14
 24279                           ;incstack = 0
 24280                           ;isdigit@c stored from wreg
 24281  019740  0101               	movlb	1	; () banked
 24282  019742  6F19               	movwf	isdigit@c& (0+255),b
 24283  019744  0E00               	movlw	0
 24284  019746  0101               	movlb	1	; () banked
 24285  019748  6F18               	movwf	_isdigit$3742& (0+255),b
 24286                           
 24287                           ; BSR set to: 1
 24288  01974A  0E3A               	movlw	58
 24289  01974C  6119               	cpfslt	isdigit@c& (0+255),b
 24290  01974E  D005               	goto	l2213
 24291                           
 24292                           ; BSR set to: 1
 24293  019750  0E2F               	movlw	47
 24294  019752  6519               	cpfsgt	isdigit@c& (0+255),b
 24295  019754  D002               	goto	l2213
 24296                           
 24297                           ; BSR set to: 1
 24298  019756  0E01               	movlw	1
 24299  019758  6F18               	movwf	_isdigit$3742& (0+255),b
 24300  01975A                     l2213:
 24301                           
 24302                           ; BSR set to: 1
 24303                           
 24304                           ; BSR set to: 1
 24305  01975A  C118  F117         	movff	_isdigit$3742,??_isdigit
 24306  01975E  3117               	rrcf	??_isdigit& (0+255),w,b
 24307  019760  0012               	return	
 24308  019762                     __end_of_isdigit:
 24309                           	opt stack 0
 24310                           tblptru	equ	0xFF8
 24311                           tblptrh	equ	0xFF7
 24312                           tblptrl	equ	0xFF6
 24313                           tablat	equ	0xFF5
 24314                           prodh	equ	0xFF4
 24315                           prodl	equ	0xFF3
 24316                           intcon	equ	0xFF2
 24317                           indf0	equ	0xFEF
 24318                           postinc0	equ	0xFEE
 24319                           fsr0h	equ	0xFEA
 24320                           fsr0l	equ	0xFE9
 24321                           wreg	equ	0xFE8
 24322                           indf1	equ	0xFE7
 24323                           postdec1	equ	0xFE5
 24324                           plusw1	equ	0xFE3
 24325                           fsr1h	equ	0xFE2
 24326                           fsr1l	equ	0xFE1
 24327                           indf2	equ	0xFDF
 24328                           postinc2	equ	0xFDE
 24329                           postdec2	equ	0xFDD
 24330                           plusw2	equ	0xFDB
 24331                           fsr2h	equ	0xFDA
 24332                           fsr2l	equ	0xFD9
 24333                           status	equ	0xFD8
 24334                           
 24335 ;; *************** function _fround *****************
 24336 ;; Defined at:
 24337 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 24338 ;; Parameters:    Size  Location     Type
 24339 ;;  prec            1    wreg     unsigned char 
 24340 ;; Auto vars:     Size  Location     Type
 24341 ;;  prec            1  123[BANK1 ] unsigned char 
 24342 ;; Return value:  Size  Location     Type
 24343 ;;                  4  111[BANK1 ] unsigned char 
 24344 ;; Registers used:
 24345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24346 ;; Tracked objects:
 24347 ;;		On entry : 0/0
 24348 ;;		On exit  : 0/0
 24349 ;;		Unchanged: 0/0
 24350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24351 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24352 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24354 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24355 ;;Total ram usage:       13 bytes
 24356 ;; Hardware stack levels used:    1
 24357 ;; Hardware stack levels required when called:   14
 24358 ;; This function calls:
 24359 ;;		___awdiv
 24360 ;;		___awmod
 24361 ;;		___flmul
 24362 ;; This function is called by:
 24363 ;;		_printf
 24364 ;; This function uses a non-reentrant model
 24365 ;;
 24366                           
 24367                           	psect	text34
 24368  015E76                     __ptext34:
 24369                           	opt stack 0
 24370  015E76                     _fround:
 24371                           	opt stack 13
 24372                           
 24373                           ; BSR set to: 1
 24374                           ;incstack = 0
 24375                           ;fround@prec stored from wreg
 24376  015E76  0101               	movlb	1	; () banked
 24377  015E78  6F7B               	movwf	fround@prec& (0+255),b
 24378                           
 24379                           ;doprnt.c: 413: if(prec>=110)
 24380  015E7A  0E6D               	movlw	109
 24381  015E7C  0101               	movlb	1	; () banked
 24382  015E7E  657B               	cpfsgt	fround@prec& (0+255),b
 24383  015E80  D0BA               	goto	l1629
 24384                           
 24385                           ; BSR set to: 1
 24386                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 24387  015E82  0E00               	movlw	0
 24388  015E84  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 24389  015E86  0E0A               	movlw	10
 24390  015E88  6F1F               	movwf	___awdiv@divisor& (0+255),b
 24391  015E8A  0E00               	movlw	0
 24392  015E8C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 24393  015E8E  0E64               	movlw	100
 24394  015E90  6F19               	movwf	___awmod@divisor& (0+255),b
 24395  015E92  C17B  F117         	movff	fround@prec,___awmod@dividend
 24396  015E96  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 24397  015E98  EC9B  F0C4         	call	___awmod	;wreg free
 24398  015E9C  C117  F11D         	movff	?___awmod,___awdiv@dividend
 24399  015EA0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 24400  015EA4  ECD7  F0C2         	call	___awdiv	;wreg free
 24401  015EA8  0101               	movlb	1	; () banked
 24402  015EAA  90D8               	bcf	status,0,c
 24403  015EAC  371D               	rlcf	?___awdiv& (0+255),f,b
 24404  015EAE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 24405  015EB0  90D8               	bcf	status,0,c
 24406  015EB2  371D               	rlcf	?___awdiv& (0+255),f,b
 24407  015EB4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 24408  015EB6  0E24               	movlw	36
 24409  015EB8  271D               	addwf	?___awdiv& (0+255),f,b
 24410  015EBA  0E00               	movlw	0
 24411  015EBC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 24412  015EBE  0E93               	movlw	low __npowers_
 24413  015EC0  251D               	addwf	?___awdiv& (0+255),w,b
 24414  015EC2  6EF6               	movwf	tblptrl,c
 24415  015EC4  0ED4               	movlw	high __npowers_
 24416  015EC6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 24417  015EC8  6EF7               	movwf	tblptrh,c
 24418  015ECA                     	if	1	;There are 3 active tblptr bytes
 24419  015ECA  6AF8               	clrf	tblptru,c
 24420  015ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 24421  015ECE  22F8               	addwfc	tblptru,f,c
 24422  015ED0                     	endif
 24423  015ED0  0009               	tblrd		*+
 24424  015ED2  CFF5 F15A          	movff	tablat,___flmul@a
 24425  015ED6  0009               	tblrd		*+
 24426  015ED8  CFF5 F15B          	movff	tablat,___flmul@a+1
 24427  015EDC  0009               	tblrd		*+
 24428  015EDE  CFF5 F15C          	movff	tablat,___flmul@a+2
 24429  015EE2  000A               	tblrd		*-
 24430  015EE4  CFF5 F15D          	movff	tablat,___flmul@a+3
 24431  015EE8  0E00               	movlw	0
 24432  015EEA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 24433  015EEC  0E64               	movlw	100
 24434  015EEE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 24435  015EF0  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 24436  015EF4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 24437  015EF6  ECD7  F0C2         	call	___awdiv	;wreg free
 24438  015EFA  0101               	movlb	1	; () banked
 24439  015EFC  90D8               	bcf	status,0,c
 24440  015EFE  371D               	rlcf	?___awdiv& (0+255),f,b
 24441  015F00  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 24442  015F02  90D8               	bcf	status,0,c
 24443  015F04  371D               	rlcf	?___awdiv& (0+255),f,b
 24444  015F06  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 24445  015F08  0E48               	movlw	72
 24446  015F0A  271D               	addwf	?___awdiv& (0+255),f,b
 24447  015F0C  0E00               	movlw	0
 24448  015F0E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 24449  015F10  0E93               	movlw	low __npowers_
 24450  015F12  251D               	addwf	?___awdiv& (0+255),w,b
 24451  015F14  6EF6               	movwf	tblptrl,c
 24452  015F16  0ED4               	movlw	high __npowers_
 24453  015F18  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 24454  015F1A  6EF7               	movwf	tblptrh,c
 24455  015F1C                     	if	1	;There are 3 active tblptr bytes
 24456  015F1C  6AF8               	clrf	tblptru,c
 24457  015F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 24458  015F20  22F8               	addwfc	tblptru,f,c
 24459  015F22                     	endif
 24460  015F22  0009               	tblrd		*+
 24461  015F24  CFF5 F156          	movff	tablat,___flmul@b
 24462  015F28  0009               	tblrd		*+
 24463  015F2A  CFF5 F157          	movff	tablat,___flmul@b+1
 24464  015F2E  0009               	tblrd		*+
 24465  015F30  CFF5 F158          	movff	tablat,___flmul@b+2
 24466  015F34  000A               	tblrd		*-
 24467  015F36  CFF5 F159          	movff	tablat,___flmul@b+3
 24468  015F3A  EC49  F0A4         	call	___flmul	;wreg free
 24469  015F3E  C156  F177         	movff	?___flmul,_fround$4501
 24470  015F42  C157  F178         	movff	?___flmul+1,_fround$4501+1
 24471  015F46  C158  F179         	movff	?___flmul+2,_fround$4501+2
 24472  015F4A  C159  F17A         	movff	?___flmul+3,_fround$4501+3
 24473                           
 24474                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 24475  015F4E  0E00               	movlw	0
 24476  015F50  0101               	movlb	1	; () banked
 24477  015F52  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 24478  015F54  0E0A               	movlw	10
 24479  015F56  6F19               	movwf	___awmod@divisor& (0+255),b
 24480  015F58  C17B  F117         	movff	fround@prec,___awmod@dividend
 24481  015F5C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 24482  015F5E  EC9B  F0C4         	call	___awmod	;wreg free
 24483  015F62  0101               	movlb	1	; () banked
 24484  015F64  90D8               	bcf	status,0,c
 24485  015F66  3717               	rlcf	?___awmod& (0+255),f,b
 24486  015F68  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 24487  015F6A  90D8               	bcf	status,0,c
 24488  015F6C  3717               	rlcf	?___awmod& (0+255),f,b
 24489  015F6E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 24490  015F70  0E93               	movlw	low __npowers_
 24491  015F72  2517               	addwf	?___awmod& (0+255),w,b
 24492  015F74  6EF6               	movwf	tblptrl,c
 24493  015F76  0ED4               	movlw	high __npowers_
 24494  015F78  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 24495  015F7A  6EF7               	movwf	tblptrh,c
 24496  015F7C                     	if	1	;There are 3 active tblptr bytes
 24497  015F7C  6AF8               	clrf	tblptru,c
 24498  015F7E  0E00               	movlw	low (__mediumconst shr (0+16))
 24499  015F80  22F8               	addwfc	tblptru,f,c
 24500  015F82                     	endif
 24501  015F82  0009               	tblrd		*+
 24502  015F84  CFF5 F15A          	movff	tablat,___flmul@a
 24503  015F88  0009               	tblrd		*+
 24504  015F8A  CFF5 F15B          	movff	tablat,___flmul@a+1
 24505  015F8E  0009               	tblrd		*+
 24506  015F90  CFF5 F15C          	movff	tablat,___flmul@a+2
 24507  015F94  000A               	tblrd		*-
 24508  015F96  CFF5 F15D          	movff	tablat,___flmul@a+3
 24509  015F9A  C177  F156         	movff	_fround$4501,___flmul@b
 24510  015F9E  C178  F157         	movff	_fround$4501+1,___flmul@b+1
 24511  015FA2  C179  F158         	movff	_fround$4501+2,___flmul@b+2
 24512  015FA6  C17A  F159         	movff	_fround$4501+3,___flmul@b+3
 24513  015FAA  EC49  F0A4         	call	___flmul	;wreg free
 24514  015FAE  C156  F173         	movff	?___flmul,_fround$4502
 24515  015FB2  C157  F174         	movff	?___flmul+1,_fround$4502+1
 24516  015FB6  C158  F175         	movff	?___flmul+2,_fround$4502+2
 24517  015FBA  C159  F176         	movff	?___flmul+3,_fround$4502+3
 24518                           
 24519                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 24520  015FBE  C173  F156         	movff	_fround$4502,___flmul@b
 24521  015FC2  C174  F157         	movff	_fround$4502+1,___flmul@b+1
 24522  015FC6  C175  F158         	movff	_fround$4502+2,___flmul@b+2
 24523  015FCA  C176  F159         	movff	_fround$4502+3,___flmul@b+3
 24524  015FCE  0E00               	movlw	0
 24525  015FD0  0101               	movlb	1	; () banked
 24526  015FD2  6F5A               	movwf	___flmul@a& (0+255),b
 24527  015FD4  0E00               	movlw	0
 24528  015FD6  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 24529  015FD8  0E00               	movlw	0
 24530  015FDA  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 24531  015FDC  0E3F               	movlw	63
 24532  015FDE  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 24533  015FE0  EC49  F0A4         	call	___flmul	;wreg free
 24534  015FE4  C156  F16F         	movff	?___flmul,?_fround
 24535  015FE8  C157  F170         	movff	?___flmul+1,?_fround+1
 24536  015FEC  C158  F171         	movff	?___flmul+2,?_fround+2
 24537  015FF0  C159  F172         	movff	?___flmul+3,?_fround+3
 24538  015FF4  0012               	return	
 24539  015FF6                     l1629:
 24540                           
 24541                           ;doprnt.c: 415: else if(prec > 10)
 24542  015FF6  0E0A               	movlw	10
 24543  015FF8  0101               	movlb	1	; () banked
 24544  015FFA  657B               	cpfsgt	fround@prec& (0+255),b
 24545  015FFC  D074               	goto	l1632
 24546                           
 24547                           ; BSR set to: 1
 24548                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 24549  015FFE  0E00               	movlw	0
 24550  016000  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 24551  016002  0E0A               	movlw	10
 24552  016004  6F19               	movwf	___awmod@divisor& (0+255),b
 24553  016006  C17B  F117         	movff	fround@prec,___awmod@dividend
 24554  01600A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 24555  01600C  EC9B  F0C4         	call	___awmod	;wreg free
 24556  016010  0101               	movlb	1	; () banked
 24557  016012  90D8               	bcf	status,0,c
 24558  016014  3717               	rlcf	?___awmod& (0+255),f,b
 24559  016016  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 24560  016018  90D8               	bcf	status,0,c
 24561  01601A  3717               	rlcf	?___awmod& (0+255),f,b
 24562  01601C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 24563  01601E  0E93               	movlw	low __npowers_
 24564  016020  2517               	addwf	?___awmod& (0+255),w,b
 24565  016022  6EF6               	movwf	tblptrl,c
 24566  016024  0ED4               	movlw	high __npowers_
 24567  016026  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 24568  016028  6EF7               	movwf	tblptrh,c
 24569  01602A                     	if	1	;There are 3 active tblptr bytes
 24570  01602A  6AF8               	clrf	tblptru,c
 24571  01602C  0E00               	movlw	low (__mediumconst shr (0+16))
 24572  01602E  22F8               	addwfc	tblptru,f,c
 24573  016030                     	endif
 24574  016030  0009               	tblrd		*+
 24575  016032  CFF5 F15A          	movff	tablat,___flmul@a
 24576  016036  0009               	tblrd		*+
 24577  016038  CFF5 F15B          	movff	tablat,___flmul@a+1
 24578  01603C  0009               	tblrd		*+
 24579  01603E  CFF5 F15C          	movff	tablat,___flmul@a+2
 24580  016042  000A               	tblrd		*-
 24581  016044  CFF5 F15D          	movff	tablat,___flmul@a+3
 24582  016048  0E00               	movlw	0
 24583  01604A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 24584  01604C  0E0A               	movlw	10
 24585  01604E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 24586  016050  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 24587  016054  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 24588  016056  ECD7  F0C2         	call	___awdiv	;wreg free
 24589  01605A  0101               	movlb	1	; () banked
 24590  01605C  90D8               	bcf	status,0,c
 24591  01605E  371D               	rlcf	?___awdiv& (0+255),f,b
 24592  016060  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 24593  016062  90D8               	bcf	status,0,c
 24594  016064  371D               	rlcf	?___awdiv& (0+255),f,b
 24595  016066  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 24596  016068  0E24               	movlw	36
 24597  01606A  271D               	addwf	?___awdiv& (0+255),f,b
 24598  01606C  0E00               	movlw	0
 24599  01606E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 24600  016070  0E93               	movlw	low __npowers_
 24601  016072  251D               	addwf	?___awdiv& (0+255),w,b
 24602  016074  6EF6               	movwf	tblptrl,c
 24603  016076  0ED4               	movlw	high __npowers_
 24604  016078  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 24605  01607A  6EF7               	movwf	tblptrh,c
 24606  01607C                     	if	1	;There are 3 active tblptr bytes
 24607  01607C  6AF8               	clrf	tblptru,c
 24608  01607E  0E00               	movlw	low (__mediumconst shr (0+16))
 24609  016080  22F8               	addwfc	tblptru,f,c
 24610  016082                     	endif
 24611  016082  0009               	tblrd		*+
 24612  016084  CFF5 F156          	movff	tablat,___flmul@b
 24613  016088  0009               	tblrd		*+
 24614  01608A  CFF5 F157          	movff	tablat,___flmul@b+1
 24615  01608E  0009               	tblrd		*+
 24616  016090  CFF5 F158          	movff	tablat,___flmul@b+2
 24617  016094  000A               	tblrd		*-
 24618  016096  CFF5 F159          	movff	tablat,___flmul@b+3
 24619  01609A  EC49  F0A4         	call	___flmul	;wreg free
 24620  01609E  C156  F177         	movff	?___flmul,_fround$4501
 24621  0160A2  C157  F178         	movff	?___flmul+1,_fround$4501+1
 24622  0160A6  C158  F179         	movff	?___flmul+2,_fround$4501+2
 24623  0160AA  C159  F17A         	movff	?___flmul+3,_fround$4501+3
 24624                           
 24625                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 24626  0160AE  C177  F156         	movff	_fround$4501,___flmul@b
 24627  0160B2  C178  F157         	movff	_fround$4501+1,___flmul@b+1
 24628  0160B6  C179  F158         	movff	_fround$4501+2,___flmul@b+2
 24629  0160BA  C17A  F159         	movff	_fround$4501+3,___flmul@b+3
 24630  0160BE  0E00               	movlw	0
 24631  0160C0  0101               	movlb	1	; () banked
 24632  0160C2  6F5A               	movwf	___flmul@a& (0+255),b
 24633  0160C4  0E00               	movlw	0
 24634  0160C6  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 24635  0160C8  0E00               	movlw	0
 24636  0160CA  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 24637  0160CC  0E3F               	movlw	63
 24638  0160CE  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 24639  0160D0  EC49  F0A4         	call	___flmul	;wreg free
 24640  0160D4  C156  F16F         	movff	?___flmul,?_fround
 24641  0160D8  C157  F170         	movff	?___flmul+1,?_fround+1
 24642  0160DC  C158  F171         	movff	?___flmul+2,?_fround+2
 24643  0160E0  C159  F172         	movff	?___flmul+3,?_fround+3
 24644  0160E4  0012               	return	
 24645  0160E6                     l1632:
 24646                           
 24647                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 24648  0160E6  0101               	movlb	1	; () banked
 24649  0160E8  517B               	movf	fround@prec& (0+255),w,b
 24650  0160EA  0D04               	mullw	4
 24651  0160EC  0E93               	movlw	low __npowers_
 24652  0160EE  24F3               	addwf	prodl,w,c
 24653  0160F0  6EF6               	movwf	tblptrl,c
 24654  0160F2  0ED4               	movlw	high __npowers_
 24655  0160F4  20F4               	addwfc	prodh,w,c
 24656  0160F6  6EF7               	movwf	tblptrh,c
 24657  0160F8                     	if	1	;There are 3 active tblptr bytes
 24658  0160F8  6AF8               	clrf	tblptru,c
 24659  0160FA  0E00               	movlw	low (__mediumconst shr (0+16))
 24660  0160FC  22F8               	addwfc	tblptru,f,c
 24661  0160FE                     	endif
 24662  0160FE  0009               	tblrd		*+
 24663  016100  CFF5 F156          	movff	tablat,___flmul@b
 24664  016104  0009               	tblrd		*+
 24665  016106  CFF5 F157          	movff	tablat,___flmul@b+1
 24666  01610A  0009               	tblrd		*+
 24667  01610C  CFF5 F158          	movff	tablat,___flmul@b+2
 24668  016110  000A               	tblrd		*-
 24669  016112  CFF5 F159          	movff	tablat,___flmul@b+3
 24670  016116  0E00               	movlw	0
 24671  016118  6F5A               	movwf	___flmul@a& (0+255),b
 24672  01611A  0E00               	movlw	0
 24673  01611C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 24674  01611E  0E00               	movlw	0
 24675  016120  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 24676  016122  0E3F               	movlw	63
 24677  016124  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 24678  016126  EC49  F0A4         	call	___flmul	;wreg free
 24679  01612A  C156  F16F         	movff	?___flmul,?_fround
 24680  01612E  C157  F170         	movff	?___flmul+1,?_fround+1
 24681  016132  C158  F171         	movff	?___flmul+2,?_fround+2
 24682  016136  C159  F172         	movff	?___flmul+3,?_fround+3
 24683  01613A  0012               	return	
 24684  01613C                     __end_of_fround:
 24685                           	opt stack 0
 24686                           tblptru	equ	0xFF8
 24687                           tblptrh	equ	0xFF7
 24688                           tblptrl	equ	0xFF6
 24689                           tablat	equ	0xFF5
 24690                           prodh	equ	0xFF4
 24691                           prodl	equ	0xFF3
 24692                           intcon	equ	0xFF2
 24693                           indf0	equ	0xFEF
 24694                           postinc0	equ	0xFEE
 24695                           fsr0h	equ	0xFEA
 24696                           fsr0l	equ	0xFE9
 24697                           wreg	equ	0xFE8
 24698                           indf1	equ	0xFE7
 24699                           postdec1	equ	0xFE5
 24700                           plusw1	equ	0xFE3
 24701                           fsr1h	equ	0xFE2
 24702                           fsr1l	equ	0xFE1
 24703                           indf2	equ	0xFDF
 24704                           postinc2	equ	0xFDE
 24705                           postdec2	equ	0xFDD
 24706                           plusw2	equ	0xFDB
 24707                           fsr2h	equ	0xFDA
 24708                           fsr2l	equ	0xFD9
 24709                           status	equ	0xFD8
 24710                           
 24711 ;; *************** function ___flmul *****************
 24712 ;; Defined at:
 24713 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 24714 ;; Parameters:    Size  Location     Type
 24715 ;;  b               4   86[BANK1 ] unsigned char 
 24716 ;;  a               4   90[BANK1 ] unsigned char 
 24717 ;; Auto vars:     Size  Location     Type
 24718 ;;  prod            4  105[BANK1 ] struct .
 24719 ;;  grs             4  101[BANK1 ] unsigned long 
 24720 ;;  temp            2  109[BANK1 ] struct .
 24721 ;;  bexp            1  100[BANK1 ] unsigned char 
 24722 ;;  aexp            1   99[BANK1 ] unsigned char 
 24723 ;;  sign            1   98[BANK1 ] unsigned char 
 24724 ;; Return value:  Size  Location     Type
 24725 ;;                  4   86[BANK1 ] unsigned char 
 24726 ;; Registers used:
 24727 ;;		wreg, status,2, status,0, prodl, prodh
 24728 ;; Tracked objects:
 24729 ;;		On entry : 0/0
 24730 ;;		On exit  : 0/0
 24731 ;;		Unchanged: 0/0
 24732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24733 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24734 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24735 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24736 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24737 ;;Total ram usage:       25 bytes
 24738 ;; Hardware stack levels used:    1
 24739 ;; Hardware stack levels required when called:   13
 24740 ;; This function calls:
 24741 ;;		Nothing
 24742 ;; This function is called by:
 24743 ;;		_ringBufferLUT
 24744 ;;		_fround
 24745 ;;		_scale
 24746 ;;		_printf
 24747 ;; This function uses a non-reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text35
 24751  014892                     __ptext35:
 24752                           	opt stack 0
 24753  014892                     ___flmul:
 24754                           	opt stack 13
 24755                           
 24756                           ;incstack = 0
 24757  014892  0101               	movlb	1	; () banked
 24758  014894  5159               	movf	(___flmul@b+3)& (0+255),w,b
 24759  014896  0B80               	andlw	128
 24760  014898  6F62               	movwf	___flmul@sign& (0+255),b
 24761  01489A  5159               	movf	(___flmul@b+3)& (0+255),w,b
 24762  01489C  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 24763  01489E  6F64               	movwf	___flmul@bexp& (0+255),b
 24764                           
 24765                           ; BSR set to: 1
 24766  0148A0  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 24767                           
 24768                           ; BSR set to: 1
 24769  0148A2  8164               	bsf	___flmul@bexp& (0+255),0,b
 24770                           
 24771                           ; BSR set to: 1
 24772                           
 24773                           ; BSR set to: 1
 24774  0148A4  5164               	movf	___flmul@bexp& (0+255),w,b
 24775  0148A6  B4D8               	btfsc	status,2,c
 24776  0148A8  D00D               	goto	l2427
 24777                           
 24778                           ; BSR set to: 1
 24779  0148AA  2964               	incf	___flmul@bexp& (0+255),w,b
 24780  0148AC  A4D8               	btfss	status,2,c
 24781  0148AE  D008               	goto	l2428
 24782                           
 24783                           ; BSR set to: 1
 24784  0148B0  0E00               	movlw	0
 24785  0148B2  6F56               	movwf	___flmul@b& (0+255),b
 24786  0148B4  0E00               	movlw	0
 24787  0148B6  6F57               	movwf	(___flmul@b+1)& (0+255),b
 24788  0148B8  0E00               	movlw	0
 24789  0148BA  6F58               	movwf	(___flmul@b+2)& (0+255),b
 24790  0148BC  0E00               	movlw	0
 24791  0148BE  6F59               	movwf	(___flmul@b+3)& (0+255),b
 24792  0148C0                     l2428:
 24793                           
 24794                           ; BSR set to: 1
 24795                           
 24796                           ; BSR set to: 1
 24797  0148C0  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 24798  0148C2  D008               	goto	l2429
 24799  0148C4                     l2427:
 24800                           
 24801                           ; BSR set to: 1
 24802                           
 24803                           ; BSR set to: 1
 24804  0148C4  0E00               	movlw	0
 24805  0148C6  6F56               	movwf	___flmul@b& (0+255),b
 24806  0148C8  0E00               	movlw	0
 24807  0148CA  6F57               	movwf	(___flmul@b+1)& (0+255),b
 24808  0148CC  0E00               	movlw	0
 24809  0148CE  6F58               	movwf	(___flmul@b+2)& (0+255),b
 24810  0148D0  0E00               	movlw	0
 24811  0148D2  6F59               	movwf	(___flmul@b+3)& (0+255),b
 24812  0148D4                     l2429:
 24813                           
 24814                           ; BSR set to: 1
 24815                           
 24816                           ; BSR set to: 1
 24817  0148D4  515D               	movf	(___flmul@a+3)& (0+255),w,b
 24818  0148D6  0B80               	andlw	128
 24819  0148D8  1B62               	xorwf	___flmul@sign& (0+255),f,b
 24820                           
 24821                           ; BSR set to: 1
 24822  0148DA  515D               	movf	(___flmul@a+3)& (0+255),w,b
 24823  0148DC  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 24824  0148DE  6F63               	movwf	___flmul@aexp& (0+255),b
 24825                           
 24826                           ; BSR set to: 1
 24827  0148E0  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 24828                           
 24829                           ; BSR set to: 1
 24830  0148E2  8163               	bsf	___flmul@aexp& (0+255),0,b
 24831                           
 24832                           ; BSR set to: 1
 24833                           
 24834                           ; BSR set to: 1
 24835  0148E4  5163               	movf	___flmul@aexp& (0+255),w,b
 24836  0148E6  B4D8               	btfsc	status,2,c
 24837  0148E8  D00D               	goto	l2431
 24838                           
 24839                           ; BSR set to: 1
 24840  0148EA  2963               	incf	___flmul@aexp& (0+255),w,b
 24841  0148EC  A4D8               	btfss	status,2,c
 24842  0148EE  D008               	goto	l2432
 24843                           
 24844                           ; BSR set to: 1
 24845  0148F0  0E00               	movlw	0
 24846  0148F2  6F5A               	movwf	___flmul@a& (0+255),b
 24847  0148F4  0E00               	movlw	0
 24848  0148F6  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 24849  0148F8  0E00               	movlw	0
 24850  0148FA  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 24851  0148FC  0E00               	movlw	0
 24852  0148FE  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 24853  014900                     l2432:
 24854                           
 24855                           ; BSR set to: 1
 24856                           
 24857                           ; BSR set to: 1
 24858  014900  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 24859  014902  D008               	goto	l2433
 24860  014904                     l2431:
 24861                           
 24862                           ; BSR set to: 1
 24863                           
 24864                           ; BSR set to: 1
 24865  014904  0E00               	movlw	0
 24866  014906  6F5A               	movwf	___flmul@a& (0+255),b
 24867  014908  0E00               	movlw	0
 24868  01490A  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 24869  01490C  0E00               	movlw	0
 24870  01490E  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 24871  014910  0E00               	movlw	0
 24872  014912  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 24873  014914                     l2433:
 24874                           
 24875                           ; BSR set to: 1
 24876  014914  5163               	movf	___flmul@aexp& (0+255),w,b
 24877  014916  B4D8               	btfsc	status,2,c
 24878  014918  D003               	goto	u24670
 24879                           
 24880                           ; BSR set to: 1
 24881  01491A  5164               	movf	___flmul@bexp& (0+255),w,b
 24882  01491C  A4D8               	btfss	status,2,c
 24883  01491E  D009               	goto	l2434
 24884  014920                     u24670:
 24885                           
 24886                           ; BSR set to: 1
 24887                           
 24888                           ; BSR set to: 1
 24889  014920  0E00               	movlw	0
 24890  014922  6F56               	movwf	?___flmul& (0+255),b
 24891  014924  0E00               	movlw	0
 24892  014926  6F57               	movwf	(?___flmul+1)& (0+255),b
 24893  014928  0E00               	movlw	0
 24894  01492A  6F58               	movwf	(?___flmul+2)& (0+255),b
 24895  01492C  0E00               	movlw	0
 24896  01492E  6F59               	movwf	(?___flmul+3)& (0+255),b
 24897                           
 24898                           ; BSR set to: 1
 24899  014930  0012               	return	
 24900  014932                     l2434:
 24901                           
 24902                           ; BSR set to: 1
 24903                           
 24904                           ; BSR set to: 1
 24905  014932  515C               	movf	(___flmul@a+2)& (0+255),w,b
 24906  014934  0356               	mulwf	___flmul@b& (0+255),b
 24907  014936  CFF3 F16D          	movff	prodl,___flmul@temp
 24908  01493A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24909                           
 24910                           ; BSR set to: 1
 24911  01493E  516D               	movf	___flmul@temp& (0+255),w,b
 24912  014940  6F65               	movwf	___flmul@grs& (0+255),b
 24913  014942  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 24914  014944  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 24915  014946  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 24916                           
 24917                           ; BSR set to: 1
 24918  014948  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24919  01494A  6F69               	movwf	___flmul@prod& (0+255),b
 24920  01494C  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 24921  01494E  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 24922  014950  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 24923  014952  515B               	movf	(___flmul@a+1)& (0+255),w,b
 24924  014954  0357               	mulwf	(___flmul@b+1)& (0+255),b
 24925  014956  CFF3 F16D          	movff	prodl,___flmul@temp
 24926  01495A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24927                           
 24928                           ; BSR set to: 1
 24929  01495E  516D               	movf	___flmul@temp& (0+255),w,b
 24930  014960  2765               	addwf	___flmul@grs& (0+255),f,b
 24931  014962  0E00               	movlw	0
 24932  014964  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 24933  014966  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 24934  014968  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 24935                           
 24936                           ; BSR set to: 1
 24937  01496A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24938  01496C  2769               	addwf	___flmul@prod& (0+255),f,b
 24939  01496E  0E00               	movlw	0
 24940  014970  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24941  014972  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24942  014974  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24943  014976  515A               	movf	___flmul@a& (0+255),w,b
 24944  014978  0358               	mulwf	(___flmul@b+2)& (0+255),b
 24945  01497A  CFF3 F16D          	movff	prodl,___flmul@temp
 24946  01497E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24947                           
 24948                           ; BSR set to: 1
 24949  014982  516D               	movf	___flmul@temp& (0+255),w,b
 24950  014984  2765               	addwf	___flmul@grs& (0+255),f,b
 24951  014986  0E00               	movlw	0
 24952  014988  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 24953  01498A  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 24954  01498C  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 24955                           
 24956                           ; BSR set to: 1
 24957  01498E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24958  014990  2769               	addwf	___flmul@prod& (0+255),f,b
 24959  014992  0E00               	movlw	0
 24960  014994  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24961  014996  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24962  014998  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24963                           
 24964                           ; BSR set to: 1
 24965  01499A  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 24966  01499E  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 24967  0149A2  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 24968  0149A6  6B65               	clrf	___flmul@grs& (0+255),b
 24969                           
 24970                           ; BSR set to: 1
 24971  0149A8  515A               	movf	___flmul@a& (0+255),w,b
 24972  0149AA  0357               	mulwf	(___flmul@b+1)& (0+255),b
 24973  0149AC  CFF3 F16D          	movff	prodl,___flmul@temp
 24974  0149B0  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24975                           
 24976                           ; BSR set to: 1
 24977  0149B4  516D               	movf	___flmul@temp& (0+255),w,b
 24978  0149B6  2765               	addwf	___flmul@grs& (0+255),f,b
 24979  0149B8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24980  0149BA  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 24981  0149BC  0E00               	movlw	0
 24982  0149BE  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 24983  0149C0  0E00               	movlw	0
 24984  0149C2  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 24985                           
 24986                           ; BSR set to: 1
 24987  0149C4  515B               	movf	(___flmul@a+1)& (0+255),w,b
 24988  0149C6  0356               	mulwf	___flmul@b& (0+255),b
 24989  0149C8  CFF3 F16D          	movff	prodl,___flmul@temp
 24990  0149CC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24991                           
 24992                           ; BSR set to: 1
 24993  0149D0  516D               	movf	___flmul@temp& (0+255),w,b
 24994  0149D2  2765               	addwf	___flmul@grs& (0+255),f,b
 24995  0149D4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24996  0149D6  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 24997  0149D8  0E00               	movlw	0
 24998  0149DA  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 24999  0149DC  0E00               	movlw	0
 25000  0149DE  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25001                           
 25002                           ; BSR set to: 1
 25003  0149E0  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 25004  0149E4  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 25005  0149E8  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 25006  0149EC  6B65               	clrf	___flmul@grs& (0+255),b
 25007  0149EE  515A               	movf	___flmul@a& (0+255),w,b
 25008  0149F0  0356               	mulwf	___flmul@b& (0+255),b
 25009  0149F2  CFF3 F16D          	movff	prodl,___flmul@temp
 25010  0149F6  CFF4 F16E          	movff	prodh,___flmul@temp+1
 25011                           
 25012                           ; BSR set to: 1
 25013  0149FA  516D               	movf	___flmul@temp& (0+255),w,b
 25014  0149FC  2765               	addwf	___flmul@grs& (0+255),f,b
 25015  0149FE  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 25016  014A00  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 25017  014A02  0E00               	movlw	0
 25018  014A04  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 25019  014A06  0E00               	movlw	0
 25020  014A08  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25021                           
 25022                           ; BSR set to: 1
 25023  014A0A  515C               	movf	(___flmul@a+2)& (0+255),w,b
 25024  014A0C  0357               	mulwf	(___flmul@b+1)& (0+255),b
 25025  014A0E  CFF3 F16D          	movff	prodl,___flmul@temp
 25026  014A12  CFF4 F16E          	movff	prodh,___flmul@temp+1
 25027  014A16  516D               	movf	___flmul@temp& (0+255),w,b
 25028  014A18  2769               	addwf	___flmul@prod& (0+255),f,b
 25029  014A1A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 25030  014A1C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25031  014A1E  0E00               	movlw	0
 25032  014A20  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25033  014A22  0E00               	movlw	0
 25034  014A24  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25035                           
 25036                           ; BSR set to: 1
 25037  014A26  515B               	movf	(___flmul@a+1)& (0+255),w,b
 25038  014A28  0358               	mulwf	(___flmul@b+2)& (0+255),b
 25039  014A2A  CFF3 F16D          	movff	prodl,___flmul@temp
 25040  014A2E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 25041                           
 25042                           ; BSR set to: 1
 25043  014A32  516D               	movf	___flmul@temp& (0+255),w,b
 25044  014A34  2769               	addwf	___flmul@prod& (0+255),f,b
 25045  014A36  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 25046  014A38  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25047  014A3A  0E00               	movlw	0
 25048  014A3C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25049  014A3E  0E00               	movlw	0
 25050  014A40  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25051  014A42  515C               	movf	(___flmul@a+2)& (0+255),w,b
 25052  014A44  0358               	mulwf	(___flmul@b+2)& (0+255),b
 25053  014A46  CFF3 F16D          	movff	prodl,___flmul@temp
 25054  014A4A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 25055                           
 25056                           ; BSR set to: 1
 25057  014A4E  516D               	movf	___flmul@temp& (0+255),w,b
 25058  014A50  6F5E               	movwf	??___flmul& (0+255),b
 25059  014A52  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 25060  014A54  6F5F               	movwf	(??___flmul+1)& (0+255),b
 25061  014A56  6B60               	clrf	(??___flmul+2)& (0+255),b
 25062  014A58  6B61               	clrf	(??___flmul+3)& (0+255),b
 25063  014A5A  C160  F161         	movff	??___flmul+2,??___flmul+3
 25064  014A5E  C15F  F160         	movff	??___flmul+1,??___flmul+2
 25065  014A62  C15E  F15F         	movff	??___flmul,??___flmul+1
 25066  014A66  6B5E               	clrf	??___flmul& (0+255),b
 25067  014A68  515E               	movf	??___flmul& (0+255),w,b
 25068  014A6A  2769               	addwf	___flmul@prod& (0+255),f,b
 25069  014A6C  515F               	movf	(??___flmul+1)& (0+255),w,b
 25070  014A6E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25071  014A70  5160               	movf	(??___flmul+2)& (0+255),w,b
 25072  014A72  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25073  014A74  5161               	movf	(??___flmul+3)& (0+255),w,b
 25074  014A76  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25075                           
 25076                           ; BSR set to: 1
 25077  014A78  C165  F15E         	movff	___flmul@grs,??___flmul
 25078  014A7C  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 25079  014A80  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 25080  014A84  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 25081  014A88  0E19               	movlw	25
 25082  014A8A  D005               	goto	u24680
 25083  014A8C                     u24685:
 25084  014A8C  90D8               	bcf	status,0,c
 25085  014A8E  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 25086  014A90  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 25087  014A92  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 25088  014A94  335E               	rrcf	??___flmul& (0+255),f,b
 25089  014A96                     u24680:
 25090  014A96  2EE8               	decfsz	wreg,f,c
 25091  014A98  D7F9               	goto	u24685
 25092  014A9A  515E               	movf	??___flmul& (0+255),w,b
 25093  014A9C  2769               	addwf	___flmul@prod& (0+255),f,b
 25094  014A9E  515F               	movf	(??___flmul+1)& (0+255),w,b
 25095  014AA0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25096  014AA2  5160               	movf	(??___flmul+2)& (0+255),w,b
 25097  014AA4  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25098  014AA6  5161               	movf	(??___flmul+3)& (0+255),w,b
 25099  014AA8  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25100                           
 25101                           ; BSR set to: 1
 25102  014AAA  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 25103  014AAE  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 25104  014AB2  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 25105  014AB6  6B65               	clrf	___flmul@grs& (0+255),b
 25106                           
 25107                           ; BSR set to: 1
 25108  014AB8  5163               	movf	___flmul@aexp& (0+255),w,b
 25109  014ABA  C164  F15E         	movff	___flmul@bexp,??___flmul
 25110  014ABE  6B5F               	clrf	(??___flmul+1)& (0+255),b
 25111  014AC0  275E               	addwf	??___flmul& (0+255),f,b
 25112  014AC2  0E00               	movlw	0
 25113  014AC4  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 25114  014AC6  0E82               	movlw	130
 25115  014AC8  255E               	addwf	??___flmul& (0+255),w,b
 25116  014ACA  6F6D               	movwf	___flmul@temp& (0+255),b
 25117  014ACC  0EFF               	movlw	255
 25118  014ACE  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 25119  014AD0  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 25120  014AD2  D00F               	goto	l2438
 25121  014AD4                     
 25122                           ; BSR set to: 1
 25123                           
 25124                           ; BSR set to: 1
 25125  014AD4  90D8               	bcf	status,0,c
 25126  014AD6  3769               	rlcf	___flmul@prod& (0+255),f,b
 25127  014AD8  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 25128  014ADA  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 25129  014ADC  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 25130                           
 25131                           ; BSR set to: 1
 25132  014ADE  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 25133                           
 25134                           ; BSR set to: 1
 25135  014AE0  8169               	bsf	___flmul@prod& (0+255),0,b
 25136                           
 25137                           ; BSR set to: 1
 25138  014AE2  90D8               	bcf	status,0,c
 25139  014AE4  3765               	rlcf	___flmul@grs& (0+255),f,b
 25140  014AE6  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 25141  014AE8  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 25142  014AEA  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 25143  014AEC  076D               	decf	___flmul@temp& (0+255),f,b
 25144  014AEE  A0D8               	btfss	status,0,c
 25145  014AF0  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 25146  014AF2                     l2438:
 25147                           
 25148                           ; BSR set to: 1
 25149                           
 25150                           ; BSR set to: 1
 25151  014AF2  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 25152  014AF4  D7EF               	goto	l2439
 25153                           
 25154                           ; BSR set to: 1
 25155                           
 25156                           ; BSR set to: 1
 25157  014AF6  0E00               	movlw	0
 25158  014AF8  6F63               	movwf	___flmul@aexp& (0+255),b
 25159                           
 25160                           ; BSR set to: 1
 25161  014AFA  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 25162  014AFC  D016               	goto	l2445
 25163                           
 25164                           ; BSR set to: 1
 25165  014AFE  0EFF               	movlw	255
 25166  014B00  1565               	andwf	___flmul@grs& (0+255),w,b
 25167  014B02  6F5E               	movwf	??___flmul& (0+255),b
 25168  014B04  0EFF               	movlw	255
 25169  014B06  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 25170  014B08  6F5F               	movwf	(??___flmul+1)& (0+255),b
 25171  014B0A  0EFF               	movlw	255
 25172  014B0C  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 25173  014B0E  6F60               	movwf	(??___flmul+2)& (0+255),b
 25174  014B10  0E7F               	movlw	127
 25175  014B12  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 25176  014B14  6F61               	movwf	(??___flmul+3)& (0+255),b
 25177  014B16  515E               	movf	??___flmul& (0+255),w,b
 25178  014B18  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 25179  014B1A  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 25180  014B1C  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 25181  014B1E  A4D8               	btfss	status,2,c
 25182  014B20  D002               	goto	u24730
 25183                           
 25184                           ; BSR set to: 1
 25185                           
 25186                           ; BSR set to: 1
 25187  014B22  A169               	btfss	___flmul@prod& (0+255),0,b
 25188  014B24  D002               	goto	l2445
 25189  014B26                     u24730:
 25190                           
 25191                           ; BSR set to: 1
 25192  014B26  0E01               	movlw	1
 25193  014B28  6F63               	movwf	___flmul@aexp& (0+255),b
 25194  014B2A                     l2445:
 25195                           
 25196                           ; BSR set to: 1
 25197                           
 25198                           ; BSR set to: 1
 25199                           
 25200                           ; BSR set to: 1
 25201  014B2A  5163               	movf	___flmul@aexp& (0+255),w,b
 25202  014B2C  B4D8               	btfsc	status,2,c
 25203  014B2E  D01F               	goto	l2447
 25204                           
 25205                           ; BSR set to: 1
 25206  014B30  0E01               	movlw	1
 25207  014B32  2769               	addwf	___flmul@prod& (0+255),f,b
 25208  014B34  0E00               	movlw	0
 25209  014B36  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25210  014B38  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25211  014B3A  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25212                           
 25213                           ; BSR set to: 1
 25214  014B3C  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 25215  014B3E  D017               	goto	l2447
 25216                           
 25217                           ; BSR set to: 1
 25218  014B40  C169  F15E         	movff	___flmul@prod,??___flmul
 25219  014B44  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 25220  014B48  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 25221  014B4C  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 25222  014B50  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 25223  014B52  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 25224  014B54  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 25225  014B56  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 25226  014B58  335E               	rrcf	??___flmul& (0+255),f,b
 25227  014B5A  C15E  F169         	movff	??___flmul,___flmul@prod
 25228  014B5E  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 25229  014B62  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 25230  014B66  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 25231                           
 25232                           ; BSR set to: 1
 25233  014B6A  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 25234  014B6C  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 25235  014B6E                     l2447:
 25236                           
 25237                           ; BSR set to: 1
 25238                           
 25239                           ; BSR set to: 1
 25240                           
 25241                           ; BSR set to: 1
 25242  014B6E  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 25243  014B70  D00D               	goto	l2448
 25244  014B72  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 25245  014B74  E103               	bnz	u24760
 25246  014B76  296D               	incf	___flmul@temp& (0+255),w,b
 25247  014B78  A0D8               	btfss	status,0,c
 25248  014B7A  D008               	goto	l2448
 25249  014B7C                     u24760:
 25250                           
 25251                           ; BSR set to: 1
 25252  014B7C  0E00               	movlw	0
 25253  014B7E  6F69               	movwf	___flmul@prod& (0+255),b
 25254  014B80  0E00               	movlw	0
 25255  014B82  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 25256  014B84  0E80               	movlw	128
 25257  014B86  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 25258  014B88  0E7F               	movlw	127
 25259  014B8A  D020               	goto	L4
 25260  014B8C                     l2448:
 25261                           
 25262                           ; BSR set to: 1
 25263                           
 25264                           ; BSR set to: 1
 25265  014B8C  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 25266  014B8E  D005               	goto	u24770
 25267  014B90  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 25268  014B92  E10E               	bnz	l2450
 25269  014B94  056D               	decf	___flmul@temp& (0+255),w,b
 25270  014B96  B0D8               	btfsc	status,0,c
 25271  014B98  D00B               	goto	l2450
 25272  014B9A                     u24770:
 25273                           
 25274                           ; BSR set to: 1
 25275  014B9A  0E00               	movlw	0
 25276  014B9C  6F69               	movwf	___flmul@prod& (0+255),b
 25277  014B9E  0E00               	movlw	0
 25278  014BA0  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 25279  014BA2  0E00               	movlw	0
 25280  014BA4  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 25281  014BA6  0E00               	movlw	0
 25282  014BA8  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 25283  014BAA  0E00               	movlw	0
 25284  014BAC  6F62               	movwf	___flmul@sign& (0+255),b
 25285  014BAE  D00F               	goto	l2451
 25286  014BB0                     l2450:
 25287                           
 25288                           ; BSR set to: 1
 25289  014BB0  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 25290                           
 25291                           ; BSR set to: 1
 25292  014BB4  0EFF               	movlw	255
 25293  014BB6  1769               	andwf	___flmul@prod& (0+255),f,b
 25294  014BB8  0EFF               	movlw	255
 25295  014BBA  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 25296  014BBC  0E7F               	movlw	127
 25297  014BBE  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 25298  014BC0  0E00               	movlw	0
 25299  014BC2  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 25300                           
 25301                           ; BSR set to: 1
 25302  014BC4  B164               	btfsc	___flmul@bexp& (0+255),0,b
 25303                           
 25304                           ; BSR set to: 1
 25305  014BC6  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 25306                           
 25307                           ; BSR set to: 1
 25308                           
 25309                           ; BSR set to: 1
 25310  014BC8  90D8               	bcf	status,0,c
 25311  014BCA  3164               	rrcf	___flmul@bexp& (0+255),w,b
 25312  014BCC                     L4:
 25313  014BCC  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 25314  014BCE                     l2451:
 25315                           
 25316                           ; BSR set to: 1
 25317                           
 25318                           ; BSR set to: 1
 25319                           
 25320                           ; BSR set to: 1
 25321  014BCE  5162               	movf	___flmul@sign& (0+255),w,b
 25322  014BD0  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 25323                           
 25324                           ; BSR set to: 1
 25325  014BD2  C169  F156         	movff	___flmul@prod,?___flmul
 25326  014BD6  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 25327  014BDA  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 25328  014BDE  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 25329  014BE2  0012               	return	
 25330  014BE4                     __end_of___flmul:
 25331                           	opt stack 0
 25332                           tblptru	equ	0xFF8
 25333                           tblptrh	equ	0xFF7
 25334                           tblptrl	equ	0xFF6
 25335                           tablat	equ	0xFF5
 25336                           prodh	equ	0xFF4
 25337                           prodl	equ	0xFF3
 25338                           intcon	equ	0xFF2
 25339                           indf0	equ	0xFEF
 25340                           postinc0	equ	0xFEE
 25341                           fsr0h	equ	0xFEA
 25342                           fsr0l	equ	0xFE9
 25343                           wreg	equ	0xFE8
 25344                           indf1	equ	0xFE7
 25345                           postdec1	equ	0xFE5
 25346                           plusw1	equ	0xFE3
 25347                           fsr1h	equ	0xFE2
 25348                           fsr1l	equ	0xFE1
 25349                           indf2	equ	0xFDF
 25350                           postinc2	equ	0xFDE
 25351                           postdec2	equ	0xFDD
 25352                           plusw2	equ	0xFDB
 25353                           fsr2h	equ	0xFDA
 25354                           fsr2l	equ	0xFD9
 25355                           status	equ	0xFD8
 25356                           
 25357 ;; *************** function ___awmod *****************
 25358 ;; Defined at:
 25359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 25360 ;; Parameters:    Size  Location     Type
 25361 ;;  dividend        2   23[BANK1 ] int 
 25362 ;;  divisor         2   25[BANK1 ] int 
 25363 ;; Auto vars:     Size  Location     Type
 25364 ;;  sign            1   28[BANK1 ] unsigned char 
 25365 ;;  counter         1   27[BANK1 ] unsigned char 
 25366 ;; Return value:  Size  Location     Type
 25367 ;;                  2   23[BANK1 ] int 
 25368 ;; Registers used:
 25369 ;;		wreg, status,2, status,0
 25370 ;; Tracked objects:
 25371 ;;		On entry : 0/0
 25372 ;;		On exit  : 0/0
 25373 ;;		Unchanged: 0/0
 25374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25375 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25376 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25378 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25379 ;;Total ram usage:        6 bytes
 25380 ;; Hardware stack levels used:    1
 25381 ;; Hardware stack levels required when called:   13
 25382 ;; This function calls:
 25383 ;;		Nothing
 25384 ;; This function is called by:
 25385 ;;		_fround
 25386 ;;		_scale
 25387 ;; This function uses a non-reentrant model
 25388 ;;
 25389                           
 25390                           	psect	text36
 25391  018936                     __ptext36:
 25392                           	opt stack 0
 25393  018936                     ___awmod:
 25394                           	opt stack 13
 25395                           
 25396                           ; BSR set to: 1
 25397                           ;incstack = 0
 25398  018936  0E00               	movlw	0
 25399  018938  0101               	movlb	1	; () banked
 25400  01893A  6F1C               	movwf	___awmod@sign& (0+255),b
 25401                           
 25402                           ; BSR set to: 1
 25403  01893C  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 25404  01893E  D006               	goto	l2018
 25405                           
 25406                           ; BSR set to: 1
 25407  018940  6D17               	negf	___awmod@dividend& (0+255),b
 25408  018942  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 25409  018944  B0D8               	btfsc	status,0,c
 25410  018946  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 25411                           
 25412                           ; BSR set to: 1
 25413  018948  0E01               	movlw	1
 25414  01894A  6F1C               	movwf	___awmod@sign& (0+255),b
 25415  01894C                     l2018:
 25416                           
 25417                           ; BSR set to: 1
 25418                           
 25419                           ; BSR set to: 1
 25420  01894C  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 25421  01894E  D004               	goto	l2019
 25422                           
 25423                           ; BSR set to: 1
 25424  018950  6D19               	negf	___awmod@divisor& (0+255),b
 25425  018952  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 25426  018954  B0D8               	btfsc	status,0,c
 25427  018956  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 25428  018958                     l2019:
 25429                           
 25430                           ; BSR set to: 1
 25431                           
 25432                           ; BSR set to: 1
 25433  018958  5119               	movf	___awmod@divisor& (0+255),w,b
 25434  01895A  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 25435  01895C  B4D8               	btfsc	status,2,c
 25436  01895E  D018               	goto	l2026
 25437                           
 25438                           ; BSR set to: 1
 25439  018960  0E01               	movlw	1
 25440  018962  6F1B               	movwf	___awmod@counter& (0+255),b
 25441  018964  D004               	goto	l2021
 25442  018966                     
 25443                           ; BSR set to: 1
 25444                           
 25445                           ; BSR set to: 1
 25446  018966  90D8               	bcf	status,0,c
 25447  018968  3719               	rlcf	___awmod@divisor& (0+255),f,b
 25448  01896A  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 25449  01896C  2B1B               	incf	___awmod@counter& (0+255),f,b
 25450  01896E                     l2021:
 25451                           
 25452                           ; BSR set to: 1
 25453                           
 25454                           ; BSR set to: 1
 25455  01896E  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 25456  018970  D7FA               	goto	l2022
 25457  018972                     u24880:
 25458                           
 25459                           ; BSR set to: 1
 25460                           
 25461                           ; BSR set to: 1
 25462                           
 25463                           ; BSR set to: 1
 25464  018972  5119               	movf	___awmod@divisor& (0+255),w,b
 25465  018974  5D17               	subwf	___awmod@dividend& (0+255),w,b
 25466  018976  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 25467  018978  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 25468  01897A  A0D8               	btfss	status,0,c
 25469  01897C  D004               	goto	l2025
 25470                           
 25471                           ; BSR set to: 1
 25472  01897E  5119               	movf	___awmod@divisor& (0+255),w,b
 25473  018980  5F17               	subwf	___awmod@dividend& (0+255),f,b
 25474  018982  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 25475  018984  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 25476  018986                     l2025:
 25477                           
 25478                           ; BSR set to: 1
 25479                           
 25480                           ; BSR set to: 1
 25481  018986  90D8               	bcf	status,0,c
 25482  018988  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 25483  01898A  3319               	rrcf	___awmod@divisor& (0+255),f,b
 25484                           
 25485                           ; BSR set to: 1
 25486  01898C  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 25487  01898E  D7F1               	goto	u24880
 25488  018990                     l2026:
 25489                           
 25490                           ; BSR set to: 1
 25491                           
 25492                           ; BSR set to: 1
 25493                           
 25494                           ; BSR set to: 1
 25495  018990  511C               	movf	___awmod@sign& (0+255),w,b
 25496  018992  B4D8               	btfsc	status,2,c
 25497  018994  D004               	goto	l2027
 25498                           
 25499                           ; BSR set to: 1
 25500  018996  6D17               	negf	___awmod@dividend& (0+255),b
 25501  018998  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 25502  01899A  B0D8               	btfsc	status,0,c
 25503  01899C  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 25504  01899E                     l2027:
 25505                           
 25506                           ; BSR set to: 1
 25507                           
 25508                           ; BSR set to: 1
 25509  01899E  C117  F117         	movff	___awmod@dividend,?___awmod
 25510  0189A2  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 25511  0189A6  0012               	return	
 25512  0189A8                     __end_of___awmod:
 25513                           	opt stack 0
 25514                           tblptru	equ	0xFF8
 25515                           tblptrh	equ	0xFF7
 25516                           tblptrl	equ	0xFF6
 25517                           tablat	equ	0xFF5
 25518                           prodh	equ	0xFF4
 25519                           prodl	equ	0xFF3
 25520                           intcon	equ	0xFF2
 25521                           indf0	equ	0xFEF
 25522                           postinc0	equ	0xFEE
 25523                           fsr0h	equ	0xFEA
 25524                           fsr0l	equ	0xFE9
 25525                           wreg	equ	0xFE8
 25526                           indf1	equ	0xFE7
 25527                           postdec1	equ	0xFE5
 25528                           plusw1	equ	0xFE3
 25529                           fsr1h	equ	0xFE2
 25530                           fsr1l	equ	0xFE1
 25531                           indf2	equ	0xFDF
 25532                           postinc2	equ	0xFDE
 25533                           postdec2	equ	0xFDD
 25534                           plusw2	equ	0xFDB
 25535                           fsr2h	equ	0xFDA
 25536                           fsr2l	equ	0xFD9
 25537                           status	equ	0xFD8
 25538                           
 25539 ;; *************** function ___awdiv *****************
 25540 ;; Defined at:
 25541 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 25542 ;; Parameters:    Size  Location     Type
 25543 ;;  dividend        2   29[BANK1 ] int 
 25544 ;;  divisor         2   31[BANK1 ] int 
 25545 ;; Auto vars:     Size  Location     Type
 25546 ;;  quotient        2   35[BANK1 ] int 
 25547 ;;  sign            1   34[BANK1 ] unsigned char 
 25548 ;;  counter         1   33[BANK1 ] unsigned char 
 25549 ;; Return value:  Size  Location     Type
 25550 ;;                  2   29[BANK1 ] int 
 25551 ;; Registers used:
 25552 ;;		wreg, status,2, status,0
 25553 ;; Tracked objects:
 25554 ;;		On entry : 0/0
 25555 ;;		On exit  : 0/0
 25556 ;;		Unchanged: 0/0
 25557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25558 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25559 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25561 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25562 ;;Total ram usage:        8 bytes
 25563 ;; Hardware stack levels used:    1
 25564 ;; Hardware stack levels required when called:   13
 25565 ;; This function calls:
 25566 ;;		Nothing
 25567 ;; This function is called by:
 25568 ;;		_fround
 25569 ;;		_scale
 25570 ;;		_printf
 25571 ;; This function uses a non-reentrant model
 25572 ;;
 25573                           
 25574                           	psect	text37
 25575  0185AE                     __ptext37:
 25576                           	opt stack 0
 25577  0185AE                     ___awdiv:
 25578                           	opt stack 13
 25579                           
 25580                           ; BSR set to: 1
 25581                           ;incstack = 0
 25582  0185AE  0E00               	movlw	0
 25583  0185B0  0101               	movlb	1	; () banked
 25584  0185B2  6F22               	movwf	___awdiv@sign& (0+255),b
 25585                           
 25586                           ; BSR set to: 1
 25587  0185B4  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25588  0185B6  D006               	goto	l2005
 25589                           
 25590                           ; BSR set to: 1
 25591  0185B8  6D1F               	negf	___awdiv@divisor& (0+255),b
 25592  0185BA  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 25593  0185BC  B0D8               	btfsc	status,0,c
 25594  0185BE  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 25595                           
 25596                           ; BSR set to: 1
 25597  0185C0  0E01               	movlw	1
 25598  0185C2  6F22               	movwf	___awdiv@sign& (0+255),b
 25599  0185C4                     l2005:
 25600                           
 25601                           ; BSR set to: 1
 25602                           
 25603                           ; BSR set to: 1
 25604  0185C4  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 25605  0185C6  D006               	goto	l2006
 25606                           
 25607                           ; BSR set to: 1
 25608  0185C8  6D1D               	negf	___awdiv@dividend& (0+255),b
 25609  0185CA  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 25610  0185CC  B0D8               	btfsc	status,0,c
 25611  0185CE  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 25612                           
 25613                           ; BSR set to: 1
 25614  0185D0  0E01               	movlw	1
 25615  0185D2  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 25616  0185D4                     l2006:
 25617                           
 25618                           ; BSR set to: 1
 25619                           
 25620                           ; BSR set to: 1
 25621  0185D4  0E00               	movlw	0
 25622  0185D6  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 25623  0185D8  0E00               	movlw	0
 25624  0185DA  6F23               	movwf	___awdiv@quotient& (0+255),b
 25625                           
 25626                           ; BSR set to: 1
 25627  0185DC  511F               	movf	___awdiv@divisor& (0+255),w,b
 25628  0185DE  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 25629  0185E0  B4D8               	btfsc	status,2,c
 25630  0185E2  D01C               	goto	l2013
 25631                           
 25632                           ; BSR set to: 1
 25633  0185E4  0E01               	movlw	1
 25634  0185E6  6F21               	movwf	___awdiv@counter& (0+255),b
 25635  0185E8  D004               	goto	l2008
 25636  0185EA                     
 25637                           ; BSR set to: 1
 25638                           
 25639                           ; BSR set to: 1
 25640  0185EA  90D8               	bcf	status,0,c
 25641  0185EC  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 25642  0185EE  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 25643  0185F0  2B21               	incf	___awdiv@counter& (0+255),f,b
 25644  0185F2                     l2008:
 25645                           
 25646                           ; BSR set to: 1
 25647                           
 25648                           ; BSR set to: 1
 25649  0185F2  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25650  0185F4  D7FA               	goto	l2009
 25651  0185F6                     u24820:
 25652                           
 25653                           ; BSR set to: 1
 25654                           
 25655                           ; BSR set to: 1
 25656                           
 25657                           ; BSR set to: 1
 25658  0185F6  90D8               	bcf	status,0,c
 25659  0185F8  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 25660  0185FA  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 25661                           
 25662                           ; BSR set to: 1
 25663  0185FC  511F               	movf	___awdiv@divisor& (0+255),w,b
 25664  0185FE  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 25665  018600  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25666  018602  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 25667  018604  A0D8               	btfss	status,0,c
 25668  018606  D005               	goto	l2012
 25669                           
 25670                           ; BSR set to: 1
 25671  018608  511F               	movf	___awdiv@divisor& (0+255),w,b
 25672  01860A  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 25673  01860C  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25674  01860E  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 25675                           
 25676                           ; BSR set to: 1
 25677  018610  8123               	bsf	___awdiv@quotient& (0+255),0,b
 25678  018612                     l2012:
 25679                           
 25680                           ; BSR set to: 1
 25681                           
 25682                           ; BSR set to: 1
 25683  018612  90D8               	bcf	status,0,c
 25684  018614  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 25685  018616  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 25686                           
 25687                           ; BSR set to: 1
 25688  018618  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 25689  01861A  D7ED               	goto	u24820
 25690  01861C                     l2013:
 25691                           
 25692                           ; BSR set to: 1
 25693                           
 25694                           ; BSR set to: 1
 25695                           
 25696                           ; BSR set to: 1
 25697  01861C  5122               	movf	___awdiv@sign& (0+255),w,b
 25698  01861E  B4D8               	btfsc	status,2,c
 25699  018620  D004               	goto	l2014
 25700                           
 25701                           ; BSR set to: 1
 25702  018622  6D23               	negf	___awdiv@quotient& (0+255),b
 25703  018624  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 25704  018626  B0D8               	btfsc	status,0,c
 25705  018628  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 25706  01862A                     l2014:
 25707                           
 25708                           ; BSR set to: 1
 25709                           
 25710                           ; BSR set to: 1
 25711  01862A  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 25712  01862E  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 25713  018632  0012               	return	
 25714  018634                     __end_of___awdiv:
 25715                           	opt stack 0
 25716                           tblptru	equ	0xFF8
 25717                           tblptrh	equ	0xFF7
 25718                           tblptrl	equ	0xFF6
 25719                           tablat	equ	0xFF5
 25720                           prodh	equ	0xFF4
 25721                           prodl	equ	0xFF3
 25722                           intcon	equ	0xFF2
 25723                           indf0	equ	0xFEF
 25724                           postinc0	equ	0xFEE
 25725                           fsr0h	equ	0xFEA
 25726                           fsr0l	equ	0xFE9
 25727                           wreg	equ	0xFE8
 25728                           indf1	equ	0xFE7
 25729                           postdec1	equ	0xFE5
 25730                           plusw1	equ	0xFE3
 25731                           fsr1h	equ	0xFE2
 25732                           fsr1l	equ	0xFE1
 25733                           indf2	equ	0xFDF
 25734                           postinc2	equ	0xFDE
 25735                           postdec2	equ	0xFDD
 25736                           plusw2	equ	0xFDB
 25737                           fsr2h	equ	0xFDA
 25738                           fsr2l	equ	0xFD9
 25739                           status	equ	0xFD8
 25740                           
 25741 ;; *************** function __tdiv_to_l_ *****************
 25742 ;; Defined at:
 25743 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 25744 ;; Parameters:    Size  Location     Type
 25745 ;;  f1              3   23[BANK1 ] float 
 25746 ;;  f2              3   26[BANK1 ] float 
 25747 ;; Auto vars:     Size  Location     Type
 25748 ;;  quot            4   32[BANK1 ] unsigned long 
 25749 ;;  exp1            1   37[BANK1 ] unsigned char 
 25750 ;;  cntr            1   36[BANK1 ] unsigned char 
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  4   23[BANK1 ] unsigned long 
 25753 ;; Registers used:
 25754 ;;		wreg, status,2, status,0
 25755 ;; Tracked objects:
 25756 ;;		On entry : 0/0
 25757 ;;		On exit  : 0/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25760 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25761 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25762 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25763 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25764 ;;Total ram usage:       15 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; Hardware stack levels required when called:   13
 25767 ;; This function calls:
 25768 ;;		Nothing
 25769 ;; This function is called by:
 25770 ;;		_printf
 25771 ;; This function uses a non-reentrant model
 25772 ;;
 25773                           
 25774                           	psect	text38
 25775  017414                     __ptext38:
 25776                           	opt stack 0
 25777  017414                     __tdiv_to_l_:
 25778                           	opt stack 14
 25779                           
 25780                           ; BSR set to: 1
 25781                           ;incstack = 0
 25782  017414  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 25783  017418  0101               	movlb	1	; () banked
 25784  01741A  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 25785  01741C  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 25786  01741E  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 25787  017420  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 25788  017422  E301               	bnc	u25001
 25789  017424  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 25790  017426                     u25001:
 25791  017426  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 25792  017428  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 25793  01742A  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 25794  01742C  A4D8               	btfss	status,2,c
 25795  01742E  D009               	goto	l2153
 25796                           
 25797                           ; BSR set to: 1
 25798  017430  0E00               	movlw	0
 25799  017432  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 25800  017434  0E00               	movlw	0
 25801  017436  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 25802  017438  0E00               	movlw	0
 25803  01743A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 25804  01743C  0E00               	movlw	0
 25805  01743E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 25806                           
 25807                           ; BSR set to: 1
 25808  017440  0012               	return	
 25809  017442                     l2153:
 25810                           
 25811                           ; BSR set to: 1
 25812                           
 25813                           ; BSR set to: 1
 25814  017442  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 25815  017446  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 25816  017448  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 25817  01744A  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 25818  01744C  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 25819  01744E  E301               	bnc	u25021
 25820  017450  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 25821  017452                     u25021:
 25822  017452  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 25823  017454  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 25824  017456  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 25825  017458  A4D8               	btfss	status,2,c
 25826  01745A  D009               	goto	l2155
 25827                           
 25828                           ; BSR set to: 1
 25829  01745C  0E00               	movlw	0
 25830  01745E  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 25831  017460  0E00               	movlw	0
 25832  017462  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 25833  017464  0E00               	movlw	0
 25834  017466  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 25835  017468  0E00               	movlw	0
 25836  01746A  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 25837                           
 25838                           ; BSR set to: 1
 25839  01746C  0012               	return	
 25840  01746E                     l2155:
 25841                           
 25842                           ; BSR set to: 1
 25843                           
 25844                           ; BSR set to: 1
 25845  01746E  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 25846                           
 25847                           ; BSR set to: 1
 25848  017470  0EFF               	movlw	255
 25849  017472  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 25850  017474  0EFF               	movlw	255
 25851  017476  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 25852  017478  0E00               	movlw	0
 25853  01747A  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 25854  01747C  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 25855                           
 25856                           ; BSR set to: 1
 25857  01747E  0EFF               	movlw	255
 25858  017480  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 25859  017482  0EFF               	movlw	255
 25860  017484  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 25861  017486  0E00               	movlw	0
 25862  017488  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 25863                           
 25864                           ; BSR set to: 1
 25865  01748A  0E00               	movlw	0
 25866  01748C  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 25867  01748E  0E00               	movlw	0
 25868  017490  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 25869  017492  0E00               	movlw	0
 25870  017494  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 25871  017496  0E00               	movlw	0
 25872  017498  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 25873                           
 25874                           ; BSR set to: 1
 25875  01749A  0E7F               	movlw	127
 25876  01749C  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 25877                           
 25878                           ; BSR set to: 1
 25879  01749E  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 25880  0174A0  0F98               	addlw	152
 25881  0174A2  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 25882                           
 25883                           ; BSR set to: 1
 25884  0174A4  0E18               	movlw	24
 25885  0174A6  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 25886  0174A8                     l2156:
 25887                           
 25888                           ; BSR set to: 1
 25889  0174A8  90D8               	bcf	status,0,c
 25890  0174AA  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 25891  0174AC  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 25892  0174AE  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 25893  0174B0  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 25894                           
 25895                           ; BSR set to: 1
 25896  0174B2  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 25897  0174B4  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 25898  0174B6  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 25899  0174B8  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 25900  0174BA  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 25901  0174BC  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 25902  0174BE  A0D8               	btfss	status,0,c
 25903  0174C0  D007               	goto	l2157
 25904                           
 25905                           ; BSR set to: 1
 25906  0174C2  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 25907  0174C4  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 25908  0174C6  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 25909  0174C8  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 25910  0174CA  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 25911  0174CC  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 25912                           
 25913                           ; BSR set to: 1
 25914  0174CE  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 25915  0174D0                     l2157:
 25916                           
 25917                           ; BSR set to: 1
 25918  0174D0  90D8               	bcf	status,0,c
 25919  0174D2  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 25920  0174D4  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 25921  0174D6  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 25922                           
 25923                           ; BSR set to: 1
 25924  0174D8  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 25925  0174DA  D7E6               	goto	l2156
 25926                           
 25927                           ; BSR set to: 1
 25928                           
 25929                           ; BSR set to: 1
 25930  0174DC  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 25931  0174DE  D016               	goto	l2159
 25932                           
 25933                           ; BSR set to: 1
 25934  0174E0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 25935  0174E2  0A80               	xorlw	128
 25936  0174E4  0F97               	addlw	151
 25937  0174E6  B0D8               	btfsc	status,0,c
 25938  0174E8  D009               	goto	l2160
 25939                           
 25940                           ; BSR set to: 1
 25941  0174EA  0E00               	movlw	0
 25942  0174EC  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 25943  0174EE  0E00               	movlw	0
 25944  0174F0  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 25945  0174F2  0E00               	movlw	0
 25946  0174F4  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 25947  0174F6  0E00               	movlw	0
 25948  0174F8  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 25949                           
 25950                           ; BSR set to: 1
 25951  0174FA  0012               	return	
 25952  0174FC                     l2160:
 25953                           
 25954                           ; BSR set to: 1
 25955                           
 25956                           ; BSR set to: 1
 25957                           
 25958                           ; BSR set to: 1
 25959  0174FC  90D8               	bcf	status,0,c
 25960  0174FE  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 25961  017500  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 25962  017502  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 25963  017504  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 25964                           
 25965                           ; BSR set to: 1
 25966  017506  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 25967  017508  D7F9               	goto	l2160
 25968                           
 25969                           ; BSR set to: 1
 25970  01750A  D015               	goto	u25080
 25971  01750C                     l2159:
 25972                           
 25973                           ; BSR set to: 1
 25974                           
 25975                           ; BSR set to: 1
 25976  01750C  0E17               	movlw	23
 25977  01750E  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 25978  017510  D00F               	goto	l2165
 25979                           
 25980                           ; BSR set to: 1
 25981  017512  0E00               	movlw	0
 25982  017514  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 25983  017516  0E00               	movlw	0
 25984  017518  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 25985  01751A  0E00               	movlw	0
 25986  01751C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 25987  01751E  0E00               	movlw	0
 25988  017520  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 25989                           
 25990                           ; BSR set to: 1
 25991  017522  0012               	return	
 25992  017524                     
 25993                           ; BSR set to: 1
 25994                           
 25995                           ; BSR set to: 1
 25996  017524  90D8               	bcf	status,0,c
 25997  017526  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 25998  017528  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 25999  01752A  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 26000  01752C  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 26001  01752E  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 26002  017530                     l2165:
 26003                           
 26004                           ; BSR set to: 1
 26005                           
 26006                           ; BSR set to: 1
 26007  017530  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 26008  017532  A4D8               	btfss	status,2,c
 26009  017534  D7F7               	goto	l2166
 26010  017536                     u25080:
 26011                           
 26012                           ; BSR set to: 1
 26013                           
 26014                           ; BSR set to: 1
 26015  017536  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 26016  01753A  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 26017  01753E  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 26018  017542  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 26019                           
 26020                           ; BSR set to: 1
 26021  017546  0012               	return		;funcret
 26022  017548                     __end_of__tdiv_to_l_:
 26023                           	opt stack 0
 26024                           tblptru	equ	0xFF8
 26025                           tblptrh	equ	0xFF7
 26026                           tblptrl	equ	0xFF6
 26027                           tablat	equ	0xFF5
 26028                           prodh	equ	0xFF4
 26029                           prodl	equ	0xFF3
 26030                           intcon	equ	0xFF2
 26031                           indf0	equ	0xFEF
 26032                           postinc0	equ	0xFEE
 26033                           fsr0h	equ	0xFEA
 26034                           fsr0l	equ	0xFE9
 26035                           wreg	equ	0xFE8
 26036                           indf1	equ	0xFE7
 26037                           postdec1	equ	0xFE5
 26038                           plusw1	equ	0xFE3
 26039                           fsr1h	equ	0xFE2
 26040                           fsr1l	equ	0xFE1
 26041                           indf2	equ	0xFDF
 26042                           postinc2	equ	0xFDE
 26043                           postdec2	equ	0xFDD
 26044                           plusw2	equ	0xFDB
 26045                           fsr2h	equ	0xFDA
 26046                           fsr2l	equ	0xFD9
 26047                           status	equ	0xFD8
 26048                           
 26049 ;; *************** function __div_to_l_ *****************
 26050 ;; Defined at:
 26051 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 26052 ;; Parameters:    Size  Location     Type
 26053 ;;  f1              4   23[BANK1 ] unsigned long 
 26054 ;;  f2              4   27[BANK1 ] unsigned long 
 26055 ;; Auto vars:     Size  Location     Type
 26056 ;;  quot            4   31[BANK1 ] unsigned long 
 26057 ;;  exp1            1   36[BANK1 ] unsigned char 
 26058 ;;  cntr            1   35[BANK1 ] unsigned char 
 26059 ;; Return value:  Size  Location     Type
 26060 ;;                  4   23[BANK1 ] unsigned long 
 26061 ;; Registers used:
 26062 ;;		wreg, status,2, status,0
 26063 ;; Tracked objects:
 26064 ;;		On entry : 0/0
 26065 ;;		On exit  : 0/0
 26066 ;;		Unchanged: 0/0
 26067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26068 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26069 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26071 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26072 ;;Total ram usage:       14 bytes
 26073 ;; Hardware stack levels used:    1
 26074 ;; Hardware stack levels required when called:   13
 26075 ;; This function calls:
 26076 ;;		Nothing
 26077 ;; This function is called by:
 26078 ;;		_printf
 26079 ;; This function uses a non-reentrant model
 26080 ;;
 26081                           
 26082                           	psect	text39
 26083  01767A                     __ptext39:
 26084                           	opt stack 0
 26085  01767A                     __div_to_l_:
 26086                           	opt stack 14
 26087                           
 26088                           ; BSR set to: 1
 26089                           ;incstack = 0
 26090  01767A  0101               	movlb	1	; () banked
 26091  01767C  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 26092  01767E  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 26093  017680  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 26094  017682  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 26095  017684  A4D8               	btfss	status,2,c
 26096  017686  D009               	goto	l2049
 26097                           
 26098                           ; BSR set to: 1
 26099  017688  0E00               	movlw	0
 26100  01768A  6F17               	movwf	?__div_to_l_& (0+255),b
 26101  01768C  0E00               	movlw	0
 26102  01768E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 26103  017690  0E00               	movlw	0
 26104  017692  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 26105  017694  0E00               	movlw	0
 26106  017696  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 26107                           
 26108                           ; BSR set to: 1
 26109  017698  0012               	return	
 26110  01769A                     l2049:
 26111                           
 26112                           ; BSR set to: 1
 26113                           
 26114                           ; BSR set to: 1
 26115  01769A  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 26116  01769C  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 26117  01769E  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 26118  0176A0  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 26119  0176A2  A4D8               	btfss	status,2,c
 26120  0176A4  D009               	goto	l2051
 26121                           
 26122                           ; BSR set to: 1
 26123  0176A6  0E00               	movlw	0
 26124  0176A8  6F17               	movwf	?__div_to_l_& (0+255),b
 26125  0176AA  0E00               	movlw	0
 26126  0176AC  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 26127  0176AE  0E00               	movlw	0
 26128  0176B0  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 26129  0176B2  0E00               	movlw	0
 26130  0176B4  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 26131                           
 26132                           ; BSR set to: 1
 26133  0176B6  0012               	return	
 26134  0176B8                     l2051:
 26135                           
 26136                           ; BSR set to: 1
 26137                           
 26138                           ; BSR set to: 1
 26139  0176B8  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 26140                           
 26141                           ; BSR set to: 1
 26142  0176BA  0EFF               	movlw	255
 26143  0176BC  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 26144  0176BE  0EFF               	movlw	255
 26145  0176C0  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 26146  0176C2  0EFF               	movlw	255
 26147  0176C4  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 26148  0176C6  0E00               	movlw	0
 26149  0176C8  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 26150                           
 26151                           ; BSR set to: 1
 26152  0176CA  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 26153  0176CC  0EFF               	movlw	255
 26154  0176CE  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 26155  0176D0  0EFF               	movlw	255
 26156  0176D2  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 26157  0176D4  0EFF               	movlw	255
 26158  0176D6  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 26159  0176D8  0E00               	movlw	0
 26160  0176DA  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 26161                           
 26162                           ; BSR set to: 1
 26163  0176DC  0E00               	movlw	0
 26164  0176DE  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 26165  0176E0  0E00               	movlw	0
 26166  0176E2  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 26167  0176E4  0E00               	movlw	0
 26168  0176E6  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 26169  0176E8  0E00               	movlw	0
 26170  0176EA  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 26171                           
 26172                           ; BSR set to: 1
 26173  0176EC  0E7F               	movlw	127
 26174  0176EE  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 26175                           
 26176                           ; BSR set to: 1
 26177  0176F0  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 26178  0176F2  0FA0               	addlw	160
 26179  0176F4  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 26180                           
 26181                           ; BSR set to: 1
 26182  0176F6  0E20               	movlw	32
 26183  0176F8  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 26184  0176FA                     
 26185                           ; BSR set to: 1
 26186                           
 26187                           ; BSR set to: 1
 26188  0176FA  90D8               	bcf	status,0,c
 26189  0176FC  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 26190  0176FE  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 26191  017700  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 26192  017702  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 26193                           
 26194                           ; BSR set to: 1
 26195  017704  511B               	movf	__div_to_l_@f2& (0+255),w,b
 26196  017706  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 26197  017708  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 26198  01770A  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 26199  01770C  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 26200  01770E  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 26201  017710  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 26202  017712  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 26203  017714  A0D8               	btfss	status,0,c
 26204  017716  D009               	goto	l2053
 26205                           
 26206                           ; BSR set to: 1
 26207  017718  511B               	movf	__div_to_l_@f2& (0+255),w,b
 26208  01771A  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 26209  01771C  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 26210  01771E  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 26211  017720  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 26212  017722  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 26213  017724  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 26214  017726  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 26215                           
 26216                           ; BSR set to: 1
 26217  017728  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 26218  01772A                     l2053:
 26219                           
 26220                           ; BSR set to: 1
 26221                           
 26222                           ; BSR set to: 1
 26223  01772A  90D8               	bcf	status,0,c
 26224  01772C  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 26225  01772E  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 26226  017730  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 26227  017732  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 26228                           
 26229                           ; BSR set to: 1
 26230  017734  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 26231  017736  D7E1               	goto	l2052
 26232                           
 26233                           ; BSR set to: 1
 26234                           
 26235                           ; BSR set to: 1
 26236  017738  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 26237  01773A  D016               	goto	l2055
 26238                           
 26239                           ; BSR set to: 1
 26240  01773C  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 26241  01773E  0A80               	xorlw	128
 26242  017740  0F9F               	addlw	159
 26243  017742  B0D8               	btfsc	status,0,c
 26244  017744  D009               	goto	l2056
 26245                           
 26246                           ; BSR set to: 1
 26247  017746  0E00               	movlw	0
 26248  017748  6F17               	movwf	?__div_to_l_& (0+255),b
 26249  01774A  0E00               	movlw	0
 26250  01774C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 26251  01774E  0E00               	movlw	0
 26252  017750  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 26253  017752  0E00               	movlw	0
 26254  017754  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 26255                           
 26256                           ; BSR set to: 1
 26257  017756  0012               	return	
 26258  017758                     l2056:
 26259                           
 26260                           ; BSR set to: 1
 26261                           
 26262                           ; BSR set to: 1
 26263                           
 26264                           ; BSR set to: 1
 26265  017758  90D8               	bcf	status,0,c
 26266  01775A  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 26267  01775C  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 26268  01775E  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 26269  017760  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 26270                           
 26271                           ; BSR set to: 1
 26272  017762  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 26273  017764  D7F9               	goto	l2056
 26274                           
 26275                           ; BSR set to: 1
 26276  017766  D015               	goto	u25150
 26277  017768                     l2055:
 26278                           
 26279                           ; BSR set to: 1
 26280                           
 26281                           ; BSR set to: 1
 26282  017768  0E1F               	movlw	31
 26283  01776A  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 26284  01776C  D00F               	goto	l2061
 26285                           
 26286                           ; BSR set to: 1
 26287  01776E  0E00               	movlw	0
 26288  017770  6F17               	movwf	?__div_to_l_& (0+255),b
 26289  017772  0E00               	movlw	0
 26290  017774  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 26291  017776  0E00               	movlw	0
 26292  017778  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 26293  01777A  0E00               	movlw	0
 26294  01777C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 26295                           
 26296                           ; BSR set to: 1
 26297  01777E  0012               	return	
 26298  017780                     
 26299                           ; BSR set to: 1
 26300                           
 26301                           ; BSR set to: 1
 26302  017780  90D8               	bcf	status,0,c
 26303  017782  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 26304  017784  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 26305  017786  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 26306  017788  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 26307  01778A  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 26308  01778C                     l2061:
 26309                           
 26310                           ; BSR set to: 1
 26311                           
 26312                           ; BSR set to: 1
 26313  01778C  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 26314  01778E  A4D8               	btfss	status,2,c
 26315  017790  D7F7               	goto	l2062
 26316  017792                     u25150:
 26317                           
 26318                           ; BSR set to: 1
 26319                           
 26320                           ; BSR set to: 1
 26321  017792  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 26322  017796  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 26323  01779A  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 26324  01779E  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 26325                           
 26326                           ; BSR set to: 1
 26327  0177A2  0012               	return		;funcret
 26328  0177A4                     __end_of__div_to_l_:
 26329                           	opt stack 0
 26330                           tblptru	equ	0xFF8
 26331                           tblptrh	equ	0xFF7
 26332                           tblptrl	equ	0xFF6
 26333                           tablat	equ	0xFF5
 26334                           prodh	equ	0xFF4
 26335                           prodl	equ	0xFF3
 26336                           intcon	equ	0xFF2
 26337                           indf0	equ	0xFEF
 26338                           postinc0	equ	0xFEE
 26339                           fsr0h	equ	0xFEA
 26340                           fsr0l	equ	0xFE9
 26341                           wreg	equ	0xFE8
 26342                           indf1	equ	0xFE7
 26343                           postdec1	equ	0xFE5
 26344                           plusw1	equ	0xFE3
 26345                           fsr1h	equ	0xFE2
 26346                           fsr1l	equ	0xFE1
 26347                           indf2	equ	0xFDF
 26348                           postinc2	equ	0xFDE
 26349                           postdec2	equ	0xFDD
 26350                           plusw2	equ	0xFDB
 26351                           fsr2h	equ	0xFDA
 26352                           fsr2l	equ	0xFD9
 26353                           status	equ	0xFD8
 26354                           
 26355 ;; *************** function ___xxtofl *****************
 26356 ;; Defined at:
 26357 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;  sign            1    wreg     unsigned char 
 26360 ;;  val             4   23[BANK1 ] long 
 26361 ;; Auto vars:     Size  Location     Type
 26362 ;;  sign            1   31[BANK1 ] unsigned char 
 26363 ;;  arg             4   33[BANK1 ] unsigned long 
 26364 ;;  exp             1   32[BANK1 ] unsigned char 
 26365 ;; Return value:  Size  Location     Type
 26366 ;;                  4   23[BANK1 ] unsigned char 
 26367 ;; Registers used:
 26368 ;;		wreg, status,2, status,0
 26369 ;; Tracked objects:
 26370 ;;		On entry : 0/0
 26371 ;;		On exit  : 0/0
 26372 ;;		Unchanged: 0/0
 26373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26374 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26375 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26376 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26377 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26378 ;;Total ram usage:       14 bytes
 26379 ;; Hardware stack levels used:    1
 26380 ;; Hardware stack levels required when called:   13
 26381 ;; This function calls:
 26382 ;;		Nothing
 26383 ;; This function is called by:
 26384 ;;		_ringBufferLUT
 26385 ;;		_printf
 26386 ;; This function uses a non-reentrant model
 26387 ;;
 26388                           
 26389                           	psect	text40
 26390  01703A                     __ptext40:
 26391                           	opt stack 0
 26392  01703A                     ___xxtofl:
 26393                           	opt stack 14
 26394                           
 26395                           ; BSR set to: 1
 26396                           ;incstack = 0
 26397                           ;___xxtofl@sign stored from wreg
 26398  01703A  0101               	movlb	1	; () banked
 26399  01703C  6F1F               	movwf	___xxtofl@sign& (0+255),b
 26400  01703E  0101               	movlb	1	; () banked
 26401  017040  511F               	movf	___xxtofl@sign& (0+255),w,b
 26402  017042  A4D8               	btfss	status,2,c
 26403                           
 26404                           ; BSR set to: 1
 26405  017044  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 26406  017046  D01A               	goto	l2529
 26407                           
 26408                           ; BSR set to: 1
 26409  017048  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 26410  01704C  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 26411  017050  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 26412  017054  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 26413  017058  1F1B               	comf	??___xxtofl& (0+255),f,b
 26414  01705A  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 26415  01705C  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 26416  01705E  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 26417  017060  2B1B               	incf	??___xxtofl& (0+255),f,b
 26418  017062  0E00               	movlw	0
 26419  017064  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 26420  017066  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 26421  017068  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 26422  01706A  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 26423  01706E  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 26424  017072  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 26425  017076  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 26426  01707A  D008               	goto	l2530
 26427  01707C                     l2529:
 26428                           
 26429                           ; BSR set to: 1
 26430  01707C  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 26431  017080  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 26432  017084  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 26433  017088  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 26434  01708C                     l2530:
 26435                           
 26436                           ; BSR set to: 1
 26437                           
 26438                           ; BSR set to: 1
 26439  01708C  5117               	movf	___xxtofl@val& (0+255),w,b
 26440  01708E  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 26441  017090  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 26442  017092  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 26443  017094  A4D8               	btfss	status,2,c
 26444  017096  D009               	goto	l2531
 26445                           
 26446                           ; BSR set to: 1
 26447  017098  0E00               	movlw	0
 26448  01709A  6F17               	movwf	?___xxtofl& (0+255),b
 26449  01709C  0E00               	movlw	0
 26450  01709E  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 26451  0170A0  0E00               	movlw	0
 26452  0170A2  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 26453  0170A4  0E00               	movlw	0
 26454  0170A6  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 26455                           
 26456                           ; BSR set to: 1
 26457  0170A8  0012               	return	
 26458  0170AA                     l2531:
 26459                           
 26460                           ; BSR set to: 1
 26461                           
 26462                           ; BSR set to: 1
 26463  0170AA  0E96               	movlw	150
 26464  0170AC  6F20               	movwf	___xxtofl@exp& (0+255),b
 26465  0170AE  D006               	goto	l2533
 26466  0170B0                     
 26467                           ; BSR set to: 1
 26468                           
 26469                           ; BSR set to: 1
 26470  0170B0  2B20               	incf	___xxtofl@exp& (0+255),f,b
 26471  0170B2  90D8               	bcf	status,0,c
 26472  0170B4  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 26473  0170B6  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 26474  0170B8  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 26475  0170BA  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 26476  0170BC                     l2533:
 26477                           
 26478                           ; BSR set to: 1
 26479                           
 26480                           ; BSR set to: 1
 26481  0170BC  0E00               	movlw	0
 26482  0170BE  1521               	andwf	___xxtofl@arg& (0+255),w,b
 26483  0170C0  6F1B               	movwf	??___xxtofl& (0+255),b
 26484  0170C2  0E00               	movlw	0
 26485  0170C4  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 26486  0170C6  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 26487  0170C8  0E00               	movlw	0
 26488  0170CA  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 26489  0170CC  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 26490  0170CE  0EFE               	movlw	254
 26491  0170D0  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 26492  0170D2  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 26493  0170D4  511B               	movf	??___xxtofl& (0+255),w,b
 26494  0170D6  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 26495  0170D8  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 26496  0170DA  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 26497  0170DC  B4D8               	btfsc	status,2,c
 26498  0170DE  D00D               	goto	l2536
 26499  0170E0  D7E7               	goto	l2534
 26500  0170E2                     
 26501                           ; BSR set to: 1
 26502                           
 26503                           ; BSR set to: 1
 26504  0170E2  2B20               	incf	___xxtofl@exp& (0+255),f,b
 26505                           
 26506                           ; BSR set to: 1
 26507  0170E4  0E01               	movlw	1
 26508  0170E6  2721               	addwf	___xxtofl@arg& (0+255),f,b
 26509  0170E8  0E00               	movlw	0
 26510  0170EA  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 26511  0170EC  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 26512  0170EE  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 26513                           
 26514                           ; BSR set to: 1
 26515  0170F0  90D8               	bcf	status,0,c
 26516  0170F2  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 26517  0170F4  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 26518  0170F6  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 26519  0170F8  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 26520  0170FA                     l2536:
 26521                           
 26522                           ; BSR set to: 1
 26523  0170FA  0E00               	movlw	0
 26524  0170FC  1521               	andwf	___xxtofl@arg& (0+255),w,b
 26525  0170FE  6F1B               	movwf	??___xxtofl& (0+255),b
 26526  017100  0E00               	movlw	0
 26527  017102  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 26528  017104  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 26529  017106  0E00               	movlw	0
 26530  017108  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 26531  01710A  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 26532  01710C  0EFF               	movlw	255
 26533  01710E  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 26534  017110  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 26535  017112  511B               	movf	??___xxtofl& (0+255),w,b
 26536  017114  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 26537  017116  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 26538  017118  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 26539  01711A  B4D8               	btfsc	status,2,c
 26540  01711C  D007               	goto	l2539
 26541  01711E  D7E1               	goto	l2537
 26542  017120                     
 26543                           ; BSR set to: 1
 26544                           
 26545                           ; BSR set to: 1
 26546  017120  0720               	decf	___xxtofl@exp& (0+255),f,b
 26547  017122  90D8               	bcf	status,0,c
 26548  017124  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 26549  017126  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 26550  017128  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 26551  01712A  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 26552  01712C                     l2539:
 26553                           
 26554                           ; BSR set to: 1
 26555                           
 26556                           ; BSR set to: 1
 26557  01712C  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 26558  01712E  D003               	goto	u25410
 26559                           
 26560                           ; BSR set to: 1
 26561  017130  0E02               	movlw	2
 26562  017132  6120               	cpfslt	___xxtofl@exp& (0+255),b
 26563  017134  D7F5               	goto	l2540
 26564  017136                     u25410:
 26565                           
 26566                           ; BSR set to: 1
 26567                           
 26568                           ; BSR set to: 1
 26569  017136  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 26570  017138  D008               	goto	l2544
 26571                           
 26572                           ; BSR set to: 1
 26573  01713A  0EFF               	movlw	255
 26574  01713C  1721               	andwf	___xxtofl@arg& (0+255),f,b
 26575  01713E  0EFF               	movlw	255
 26576  017140  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 26577  017142  0E7F               	movlw	127
 26578  017144  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 26579  017146  0EFF               	movlw	255
 26580  017148  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 26581  01714A                     l2544:
 26582                           
 26583                           ; BSR set to: 1
 26584  01714A  90D8               	bcf	status,0,c
 26585  01714C  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 26586  01714E  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 26587  017152  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 26588  017154  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 26589  017156  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 26590  017158  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 26591  01715C  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 26592  01715E  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 26593  017160  6B1B               	clrf	??___xxtofl& (0+255),b
 26594  017162  511B               	movf	??___xxtofl& (0+255),w,b
 26595  017164  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 26596  017166  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 26597  017168  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 26598  01716A  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 26599  01716C  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 26600  01716E  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 26601  017170  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 26602                           
 26603                           ; BSR set to: 1
 26604  017172  511F               	movf	___xxtofl@sign& (0+255),w,b
 26605  017174  A4D8               	btfss	status,2,c
 26606                           
 26607                           ; BSR set to: 1
 26608  017176  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 26609  017178  D001               	goto	l2545
 26610                           
 26611                           ; BSR set to: 1
 26612  01717A  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 26613  01717C                     l2545:
 26614                           
 26615                           ; BSR set to: 1
 26616                           
 26617                           ; BSR set to: 1
 26618  01717C  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 26619  017180  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 26620  017184  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 26621  017188  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 26622  01718C  0012               	return	
 26623  01718E                     __end_of___xxtofl:
 26624                           	opt stack 0
 26625                           tblptru	equ	0xFF8
 26626                           tblptrh	equ	0xFF7
 26627                           tblptrl	equ	0xFF6
 26628                           tablat	equ	0xFF5
 26629                           prodh	equ	0xFF4
 26630                           prodl	equ	0xFF3
 26631                           intcon	equ	0xFF2
 26632                           indf0	equ	0xFEF
 26633                           postinc0	equ	0xFEE
 26634                           fsr0h	equ	0xFEA
 26635                           fsr0l	equ	0xFE9
 26636                           wreg	equ	0xFE8
 26637                           indf1	equ	0xFE7
 26638                           postdec1	equ	0xFE5
 26639                           plusw1	equ	0xFE3
 26640                           fsr1h	equ	0xFE2
 26641                           fsr1l	equ	0xFE1
 26642                           indf2	equ	0xFDF
 26643                           postinc2	equ	0xFDE
 26644                           postdec2	equ	0xFDD
 26645                           plusw2	equ	0xFDB
 26646                           fsr2h	equ	0xFDA
 26647                           fsr2l	equ	0xFD9
 26648                           status	equ	0xFD8
 26649                           
 26650 ;; *************** function ___wmul *****************
 26651 ;; Defined at:
 26652 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 26653 ;; Parameters:    Size  Location     Type
 26654 ;;  multiplier      2   23[BANK1 ] unsigned int 
 26655 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 26656 ;; Auto vars:     Size  Location     Type
 26657 ;;  product         2   27[BANK1 ] unsigned int 
 26658 ;; Return value:  Size  Location     Type
 26659 ;;                  2   23[BANK1 ] unsigned int 
 26660 ;; Registers used:
 26661 ;;		wreg, status,2, status,0, prodl, prodh
 26662 ;; Tracked objects:
 26663 ;;		On entry : 0/0
 26664 ;;		On exit  : 0/0
 26665 ;;		Unchanged: 0/0
 26666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26667 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26668 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26670 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26671 ;;Total ram usage:        6 bytes
 26672 ;; Hardware stack levels used:    1
 26673 ;; Hardware stack levels required when called:   13
 26674 ;; This function calls:
 26675 ;;		Nothing
 26676 ;; This function is called by:
 26677 ;;		_ringBufferLUT
 26678 ;;		_printf
 26679 ;;		_atoi
 26680 ;; This function uses a non-reentrant model
 26681 ;;
 26682                           
 26683                           	psect	text41
 26684  0195C4                     __ptext41:
 26685                           	opt stack 0
 26686  0195C4                     ___wmul:
 26687                           	opt stack 14
 26688                           
 26689                           ; BSR set to: 1
 26690                           ;incstack = 0
 26691  0195C4  0101               	movlb	1	; () banked
 26692  0195C6  5117               	movf	___wmul@multiplier& (0+255),w,b
 26693  0195C8  0319               	mulwf	___wmul@multiplicand& (0+255),b
 26694  0195CA  CFF3 F11B          	movff	prodl,___wmul@product
 26695  0195CE  CFF4 F11C          	movff	prodh,___wmul@product+1
 26696  0195D2  5117               	movf	___wmul@multiplier& (0+255),w,b
 26697  0195D4  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 26698  0195D6  50F3               	movf	prodl,w,c
 26699  0195D8  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 26700  0195DA  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 26701  0195DC  0319               	mulwf	___wmul@multiplicand& (0+255),b
 26702  0195DE  50F3               	movf	prodl,w,c
 26703  0195E0  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 26704                           
 26705                           ; BSR set to: 1
 26706  0195E2  C11B  F117         	movff	___wmul@product,?___wmul
 26707  0195E6  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 26708  0195EA  0012               	return	
 26709  0195EC                     __end_of___wmul:
 26710                           	opt stack 0
 26711                           tblptru	equ	0xFF8
 26712                           tblptrh	equ	0xFF7
 26713                           tblptrl	equ	0xFF6
 26714                           tablat	equ	0xFF5
 26715                           prodh	equ	0xFF4
 26716                           prodl	equ	0xFF3
 26717                           intcon	equ	0xFF2
 26718                           indf0	equ	0xFEF
 26719                           postinc0	equ	0xFEE
 26720                           fsr0h	equ	0xFEA
 26721                           fsr0l	equ	0xFE9
 26722                           wreg	equ	0xFE8
 26723                           indf1	equ	0xFE7
 26724                           postdec1	equ	0xFE5
 26725                           plusw1	equ	0xFE3
 26726                           fsr1h	equ	0xFE2
 26727                           fsr1l	equ	0xFE1
 26728                           indf2	equ	0xFDF
 26729                           postinc2	equ	0xFDE
 26730                           postdec2	equ	0xFDD
 26731                           plusw2	equ	0xFDB
 26732                           fsr2h	equ	0xFDA
 26733                           fsr2l	equ	0xFD9
 26734                           status	equ	0xFD8
 26735                           
 26736 ;; *************** function ___llmod *****************
 26737 ;; Defined at:
 26738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 26739 ;; Parameters:    Size  Location     Type
 26740 ;;  dividend        4   36[BANK1 ] unsigned long 
 26741 ;;  divisor         4   40[BANK1 ] unsigned long 
 26742 ;; Auto vars:     Size  Location     Type
 26743 ;;  counter         1   44[BANK1 ] unsigned char 
 26744 ;; Return value:  Size  Location     Type
 26745 ;;                  4   36[BANK1 ] unsigned long 
 26746 ;; Registers used:
 26747 ;;		wreg, status,2, status,0
 26748 ;; Tracked objects:
 26749 ;;		On entry : 0/0
 26750 ;;		On exit  : 0/0
 26751 ;;		Unchanged: 0/0
 26752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26753 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26754 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26756 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26757 ;;Total ram usage:        9 bytes
 26758 ;; Hardware stack levels used:    1
 26759 ;; Hardware stack levels required when called:   13
 26760 ;; This function calls:
 26761 ;;		Nothing
 26762 ;; This function is called by:
 26763 ;;		_printf
 26764 ;; This function uses a non-reentrant model
 26765 ;;
 26766                           
 26767                           	psect	text42
 26768  018B58                     __ptext42:
 26769                           	opt stack 0
 26770  018B58                     ___llmod:
 26771                           	opt stack 14
 26772                           
 26773                           ; BSR set to: 1
 26774                           ;incstack = 0
 26775  018B58  0101               	movlb	1	; () banked
 26776  018B5A  5128               	movf	___llmod@divisor& (0+255),w,b
 26777  018B5C  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 26778  018B5E  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 26779  018B60  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 26780  018B62  B4D8               	btfsc	status,2,c
 26781  018B64  D024               	goto	l2254
 26782                           
 26783                           ; BSR set to: 1
 26784  018B66  0E01               	movlw	1
 26785  018B68  6F2C               	movwf	___llmod@counter& (0+255),b
 26786  018B6A  D006               	goto	l2249
 26787  018B6C                     
 26788                           ; BSR set to: 1
 26789                           
 26790                           ; BSR set to: 1
 26791  018B6C  90D8               	bcf	status,0,c
 26792  018B6E  3728               	rlcf	___llmod@divisor& (0+255),f,b
 26793  018B70  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 26794  018B72  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 26795  018B74  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 26796  018B76  2B2C               	incf	___llmod@counter& (0+255),f,b
 26797  018B78                     l2249:
 26798                           
 26799                           ; BSR set to: 1
 26800                           
 26801                           ; BSR set to: 1
 26802  018B78  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 26803  018B7A  D7F8               	goto	l2250
 26804  018B7C                     u25330:
 26805                           
 26806                           ; BSR set to: 1
 26807                           
 26808                           ; BSR set to: 1
 26809                           
 26810                           ; BSR set to: 1
 26811  018B7C  5128               	movf	___llmod@divisor& (0+255),w,b
 26812  018B7E  5D24               	subwf	___llmod@dividend& (0+255),w,b
 26813  018B80  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 26814  018B82  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 26815  018B84  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 26816  018B86  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 26817  018B88  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 26818  018B8A  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 26819  018B8C  A0D8               	btfss	status,0,c
 26820  018B8E  D008               	goto	l2253
 26821                           
 26822                           ; BSR set to: 1
 26823  018B90  5128               	movf	___llmod@divisor& (0+255),w,b
 26824  018B92  5F24               	subwf	___llmod@dividend& (0+255),f,b
 26825  018B94  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 26826  018B96  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 26827  018B98  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 26828  018B9A  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 26829  018B9C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 26830  018B9E  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 26831  018BA0                     l2253:
 26832                           
 26833                           ; BSR set to: 1
 26834                           
 26835                           ; BSR set to: 1
 26836  018BA0  90D8               	bcf	status,0,c
 26837  018BA2  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 26838  018BA4  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 26839  018BA6  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 26840  018BA8  3328               	rrcf	___llmod@divisor& (0+255),f,b
 26841                           
 26842                           ; BSR set to: 1
 26843  018BAA  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 26844  018BAC  D7E7               	goto	u25330
 26845  018BAE                     l2254:
 26846                           
 26847                           ; BSR set to: 1
 26848                           
 26849                           ; BSR set to: 1
 26850  018BAE  C124  F124         	movff	___llmod@dividend,?___llmod
 26851  018BB2  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 26852  018BB6  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 26853  018BBA  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 26854                           
 26855                           ; BSR set to: 1
 26856  018BBE  0012               	return		;funcret
 26857  018BC0                     __end_of___llmod:
 26858                           	opt stack 0
 26859                           tblptru	equ	0xFF8
 26860                           tblptrh	equ	0xFF7
 26861                           tblptrl	equ	0xFF6
 26862                           tablat	equ	0xFF5
 26863                           prodh	equ	0xFF4
 26864                           prodl	equ	0xFF3
 26865                           intcon	equ	0xFF2
 26866                           indf0	equ	0xFEF
 26867                           postinc0	equ	0xFEE
 26868                           fsr0h	equ	0xFEA
 26869                           fsr0l	equ	0xFE9
 26870                           wreg	equ	0xFE8
 26871                           indf1	equ	0xFE7
 26872                           postdec1	equ	0xFE5
 26873                           plusw1	equ	0xFE3
 26874                           fsr1h	equ	0xFE2
 26875                           fsr1l	equ	0xFE1
 26876                           indf2	equ	0xFDF
 26877                           postinc2	equ	0xFDE
 26878                           postdec2	equ	0xFDD
 26879                           plusw2	equ	0xFDB
 26880                           fsr2h	equ	0xFDA
 26881                           fsr2l	equ	0xFD9
 26882                           status	equ	0xFD8
 26883                           
 26884 ;; *************** function ___lldiv *****************
 26885 ;; Defined at:
 26886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 26887 ;; Parameters:    Size  Location     Type
 26888 ;;  dividend        4   23[BANK1 ] unsigned long 
 26889 ;;  divisor         4   27[BANK1 ] unsigned long 
 26890 ;; Auto vars:     Size  Location     Type
 26891 ;;  quotient        4   32[BANK1 ] unsigned long 
 26892 ;;  counter         1   31[BANK1 ] unsigned char 
 26893 ;; Return value:  Size  Location     Type
 26894 ;;                  4   23[BANK1 ] unsigned long 
 26895 ;; Registers used:
 26896 ;;		wreg, status,2, status,0
 26897 ;; Tracked objects:
 26898 ;;		On entry : 0/0
 26899 ;;		On exit  : 0/0
 26900 ;;		Unchanged: 0/0
 26901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26902 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26903 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26905 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26906 ;;Total ram usage:       13 bytes
 26907 ;; Hardware stack levels used:    1
 26908 ;; Hardware stack levels required when called:   13
 26909 ;; This function calls:
 26910 ;;		Nothing
 26911 ;; This function is called by:
 26912 ;;		_printf
 26913 ;; This function uses a non-reentrant model
 26914 ;;
 26915                           
 26916                           	psect	text43
 26917  018634                     __ptext43:
 26918                           	opt stack 0
 26919  018634                     ___lldiv:
 26920                           	opt stack 14
 26921                           
 26922                           ; BSR set to: 1
 26923                           ;incstack = 0
 26924  018634  0E00               	movlw	0
 26925  018636  0101               	movlb	1	; () banked
 26926  018638  6F20               	movwf	___lldiv@quotient& (0+255),b
 26927  01863A  0E00               	movlw	0
 26928  01863C  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 26929  01863E  0E00               	movlw	0
 26930  018640  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 26931  018642  0E00               	movlw	0
 26932  018644  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 26933                           
 26934                           ; BSR set to: 1
 26935  018646  511B               	movf	___lldiv@divisor& (0+255),w,b
 26936  018648  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 26937  01864A  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 26938  01864C  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 26939  01864E  B4D8               	btfsc	status,2,c
 26940  018650  D02A               	goto	l2244
 26941                           
 26942                           ; BSR set to: 1
 26943  018652  0E01               	movlw	1
 26944  018654  6F1F               	movwf	___lldiv@counter& (0+255),b
 26945  018656  D006               	goto	l2239
 26946  018658                     
 26947                           ; BSR set to: 1
 26948                           
 26949                           ; BSR set to: 1
 26950  018658  90D8               	bcf	status,0,c
 26951  01865A  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 26952  01865C  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 26953  01865E  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 26954  018660  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 26955  018662  2B1F               	incf	___lldiv@counter& (0+255),f,b
 26956  018664                     l2239:
 26957                           
 26958                           ; BSR set to: 1
 26959                           
 26960                           ; BSR set to: 1
 26961  018664  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 26962  018666  D7F8               	goto	l2240
 26963  018668                     u25300:
 26964                           
 26965                           ; BSR set to: 1
 26966                           
 26967                           ; BSR set to: 1
 26968                           
 26969                           ; BSR set to: 1
 26970  018668  90D8               	bcf	status,0,c
 26971  01866A  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 26972  01866C  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 26973  01866E  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 26974  018670  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 26975                           
 26976                           ; BSR set to: 1
 26977  018672  511B               	movf	___lldiv@divisor& (0+255),w,b
 26978  018674  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 26979  018676  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 26980  018678  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 26981  01867A  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 26982  01867C  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 26983  01867E  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 26984  018680  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 26985  018682  A0D8               	btfss	status,0,c
 26986  018684  D009               	goto	l2243
 26987                           
 26988                           ; BSR set to: 1
 26989  018686  511B               	movf	___lldiv@divisor& (0+255),w,b
 26990  018688  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 26991  01868A  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 26992  01868C  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 26993  01868E  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 26994  018690  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 26995  018692  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 26996  018694  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 26997                           
 26998                           ; BSR set to: 1
 26999  018696  8120               	bsf	___lldiv@quotient& (0+255),0,b
 27000  018698                     l2243:
 27001                           
 27002                           ; BSR set to: 1
 27003                           
 27004                           ; BSR set to: 1
 27005  018698  90D8               	bcf	status,0,c
 27006  01869A  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 27007  01869C  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 27008  01869E  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 27009  0186A0  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 27010                           
 27011                           ; BSR set to: 1
 27012  0186A2  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 27013  0186A4  D7E1               	goto	u25300
 27014  0186A6                     l2244:
 27015                           
 27016                           ; BSR set to: 1
 27017                           
 27018                           ; BSR set to: 1
 27019  0186A6  C120  F117         	movff	___lldiv@quotient,?___lldiv
 27020  0186AA  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 27021  0186AE  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 27022  0186B2  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 27023                           
 27024                           ; BSR set to: 1
 27025  0186B6  0012               	return		;funcret
 27026  0186B8                     __end_of___lldiv:
 27027                           	opt stack 0
 27028                           tblptru	equ	0xFF8
 27029                           tblptrh	equ	0xFF7
 27030                           tblptrl	equ	0xFF6
 27031                           tablat	equ	0xFF5
 27032                           prodh	equ	0xFF4
 27033                           prodl	equ	0xFF3
 27034                           intcon	equ	0xFF2
 27035                           indf0	equ	0xFEF
 27036                           postinc0	equ	0xFEE
 27037                           fsr0h	equ	0xFEA
 27038                           fsr0l	equ	0xFE9
 27039                           wreg	equ	0xFE8
 27040                           indf1	equ	0xFE7
 27041                           postdec1	equ	0xFE5
 27042                           plusw1	equ	0xFE3
 27043                           fsr1h	equ	0xFE2
 27044                           fsr1l	equ	0xFE1
 27045                           indf2	equ	0xFDF
 27046                           postinc2	equ	0xFDE
 27047                           postdec2	equ	0xFDD
 27048                           plusw2	equ	0xFDB
 27049                           fsr2h	equ	0xFDA
 27050                           fsr2l	equ	0xFD9
 27051                           status	equ	0xFD8
 27052                           
 27053 ;; *************** function ___fltol *****************
 27054 ;; Defined at:
 27055 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 27056 ;; Parameters:    Size  Location     Type
 27057 ;;  f1              4  120[BANK1 ] unsigned long 
 27058 ;; Auto vars:     Size  Location     Type
 27059 ;;  exp1            1  129[BANK1 ] unsigned char 
 27060 ;;  sign1           1  128[BANK1 ] unsigned char 
 27061 ;; Return value:  Size  Location     Type
 27062 ;;                  4  120[BANK1 ] long 
 27063 ;; Registers used:
 27064 ;;		wreg, status,2, status,0
 27065 ;; Tracked objects:
 27066 ;;		On entry : 0/0
 27067 ;;		On exit  : 0/0
 27068 ;;		Unchanged: 0/0
 27069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27070 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27071 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27072 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27073 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27074 ;;Total ram usage:       10 bytes
 27075 ;; Hardware stack levels used:    1
 27076 ;; Hardware stack levels required when called:   13
 27077 ;; This function calls:
 27078 ;;		Nothing
 27079 ;; This function is called by:
 27080 ;;		_printf
 27081 ;; This function uses a non-reentrant model
 27082 ;;
 27083                           
 27084                           	psect	text44
 27085  017F34                     __ptext44:
 27086                           	opt stack 0
 27087  017F34                     ___fltol:
 27088                           	opt stack 14
 27089                           
 27090                           ; BSR set to: 1
 27091                           ;incstack = 0
 27092  017F34  0101               	movlb	1	; () banked
 27093  017F36  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 27094  017F38  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 27095  017F3A  6F81               	movwf	___fltol@exp1& (0+255),b
 27096  017F3C  5181               	movf	___fltol@exp1& (0+255),w,b
 27097  017F3E  A4D8               	btfss	status,2,c
 27098  017F40  D009               	goto	l2096
 27099                           
 27100                           ; BSR set to: 1
 27101  017F42  0E00               	movlw	0
 27102  017F44  6F78               	movwf	?___fltol& (0+255),b
 27103  017F46  0E00               	movlw	0
 27104  017F48  6F79               	movwf	(?___fltol+1)& (0+255),b
 27105  017F4A  0E00               	movlw	0
 27106  017F4C  6F7A               	movwf	(?___fltol+2)& (0+255),b
 27107  017F4E  0E00               	movlw	0
 27108  017F50  6F7B               	movwf	(?___fltol+3)& (0+255),b
 27109                           
 27110                           ; BSR set to: 1
 27111  017F52  0012               	return	
 27112  017F54                     l2096:
 27113                           
 27114                           ; BSR set to: 1
 27115                           
 27116                           ; BSR set to: 1
 27117  017F54  C178  F17C         	movff	___fltol@f1,??___fltol
 27118  017F58  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 27119  017F5C  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 27120  017F60  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 27121  017F64  0E20               	movlw	32
 27122  017F66  D005               	goto	u25230
 27123  017F68                     u25235:
 27124  017F68  90D8               	bcf	status,0,c
 27125  017F6A  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 27126  017F6C  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 27127  017F6E  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 27128  017F70  337C               	rrcf	??___fltol& (0+255),f,b
 27129  017F72                     u25230:
 27130  017F72  2EE8               	decfsz	wreg,f,c
 27131  017F74  D7F9               	goto	u25235
 27132  017F76  517C               	movf	??___fltol& (0+255),w,b
 27133  017F78  6F80               	movwf	___fltol@sign1& (0+255),b
 27134                           
 27135                           ; BSR set to: 1
 27136  017F7A  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 27137                           
 27138                           ; BSR set to: 1
 27139  017F7C  0EFF               	movlw	255
 27140  017F7E  1778               	andwf	___fltol@f1& (0+255),f,b
 27141  017F80  0EFF               	movlw	255
 27142  017F82  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 27143  017F84  0EFF               	movlw	255
 27144  017F86  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 27145  017F88  0E00               	movlw	0
 27146  017F8A  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 27147                           
 27148                           ; BSR set to: 1
 27149  017F8C  0E96               	movlw	150
 27150  017F8E  5F81               	subwf	___fltol@exp1& (0+255),f,b
 27151                           
 27152                           ; BSR set to: 1
 27153  017F90  AF81               	btfss	___fltol@exp1& (0+255),7,b
 27154  017F92  D016               	goto	l2098
 27155                           
 27156                           ; BSR set to: 1
 27157  017F94  5181               	movf	___fltol@exp1& (0+255),w,b
 27158  017F96  0A80               	xorlw	128
 27159  017F98  0F97               	addlw	151
 27160  017F9A  B0D8               	btfsc	status,0,c
 27161  017F9C  D009               	goto	l2099
 27162                           
 27163                           ; BSR set to: 1
 27164  017F9E  0E00               	movlw	0
 27165  017FA0  6F78               	movwf	?___fltol& (0+255),b
 27166  017FA2  0E00               	movlw	0
 27167  017FA4  6F79               	movwf	(?___fltol+1)& (0+255),b
 27168  017FA6  0E00               	movlw	0
 27169  017FA8  6F7A               	movwf	(?___fltol+2)& (0+255),b
 27170  017FAA  0E00               	movlw	0
 27171  017FAC  6F7B               	movwf	(?___fltol+3)& (0+255),b
 27172                           
 27173                           ; BSR set to: 1
 27174  017FAE  0012               	return	
 27175  017FB0                     l2099:
 27176                           
 27177                           ; BSR set to: 1
 27178                           
 27179                           ; BSR set to: 1
 27180                           
 27181                           ; BSR set to: 1
 27182  017FB0  90D8               	bcf	status,0,c
 27183  017FB2  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 27184  017FB4  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 27185  017FB6  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 27186  017FB8  3378               	rrcf	___fltol@f1& (0+255),f,b
 27187                           
 27188                           ; BSR set to: 1
 27189  017FBA  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 27190  017FBC  D7F9               	goto	l2099
 27191                           
 27192                           ; BSR set to: 1
 27193  017FBE  D015               	goto	u25270
 27194  017FC0                     l2098:
 27195                           
 27196                           ; BSR set to: 1
 27197                           
 27198                           ; BSR set to: 1
 27199  017FC0  0E1F               	movlw	31
 27200  017FC2  6581               	cpfsgt	___fltol@exp1& (0+255),b
 27201  017FC4  D00F               	goto	l2104
 27202                           
 27203                           ; BSR set to: 1
 27204  017FC6  0E00               	movlw	0
 27205  017FC8  6F78               	movwf	?___fltol& (0+255),b
 27206  017FCA  0E00               	movlw	0
 27207  017FCC  6F79               	movwf	(?___fltol+1)& (0+255),b
 27208  017FCE  0E00               	movlw	0
 27209  017FD0  6F7A               	movwf	(?___fltol+2)& (0+255),b
 27210  017FD2  0E00               	movlw	0
 27211  017FD4  6F7B               	movwf	(?___fltol+3)& (0+255),b
 27212                           
 27213                           ; BSR set to: 1
 27214  017FD6  0012               	return	
 27215  017FD8                     
 27216                           ; BSR set to: 1
 27217                           
 27218                           ; BSR set to: 1
 27219  017FD8  90D8               	bcf	status,0,c
 27220  017FDA  3778               	rlcf	___fltol@f1& (0+255),f,b
 27221  017FDC  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 27222  017FDE  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 27223  017FE0  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 27224  017FE2  0781               	decf	___fltol@exp1& (0+255),f,b
 27225  017FE4                     l2104:
 27226                           
 27227                           ; BSR set to: 1
 27228                           
 27229                           ; BSR set to: 1
 27230  017FE4  5181               	movf	___fltol@exp1& (0+255),w,b
 27231  017FE6  A4D8               	btfss	status,2,c
 27232  017FE8  D7F7               	goto	l2105
 27233  017FEA                     u25270:
 27234                           
 27235                           ; BSR set to: 1
 27236                           
 27237                           ; BSR set to: 1
 27238                           
 27239                           ; BSR set to: 1
 27240  017FEA  5180               	movf	___fltol@sign1& (0+255),w,b
 27241  017FEC  B4D8               	btfsc	status,2,c
 27242  017FEE  D008               	goto	l2107
 27243                           
 27244                           ; BSR set to: 1
 27245  017FF0  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 27246  017FF2  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 27247  017FF4  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 27248  017FF6  6D78               	negf	___fltol@f1& (0+255),b
 27249  017FF8  0E00               	movlw	0
 27250  017FFA  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 27251  017FFC  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 27252  017FFE  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 27253  018000                     l2107:
 27254                           
 27255                           ; BSR set to: 1
 27256                           
 27257                           ; BSR set to: 1
 27258  018000  C178  F178         	movff	___fltol@f1,?___fltol
 27259  018004  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 27260  018008  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 27261  01800C  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 27262  018010  0012               	return	
 27263  018012                     __end_of___fltol:
 27264                           	opt stack 0
 27265                           tblptru	equ	0xFF8
 27266                           tblptrh	equ	0xFF7
 27267                           tblptrl	equ	0xFF6
 27268                           tablat	equ	0xFF5
 27269                           prodh	equ	0xFF4
 27270                           prodl	equ	0xFF3
 27271                           intcon	equ	0xFF2
 27272                           indf0	equ	0xFEF
 27273                           postinc0	equ	0xFEE
 27274                           fsr0h	equ	0xFEA
 27275                           fsr0l	equ	0xFE9
 27276                           wreg	equ	0xFE8
 27277                           indf1	equ	0xFE7
 27278                           postdec1	equ	0xFE5
 27279                           plusw1	equ	0xFE3
 27280                           fsr1h	equ	0xFE2
 27281                           fsr1l	equ	0xFE1
 27282                           indf2	equ	0xFDF
 27283                           postinc2	equ	0xFDE
 27284                           postdec2	equ	0xFDD
 27285                           plusw2	equ	0xFDB
 27286                           fsr2h	equ	0xFDA
 27287                           fsr2l	equ	0xFD9
 27288                           status	equ	0xFD8
 27289                           
 27290 ;; *************** function ___flsub *****************
 27291 ;; Defined at:
 27292 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 27293 ;; Parameters:    Size  Location     Type
 27294 ;;  b               4   61[BANK1 ] long 
 27295 ;;  a               4   65[BANK1 ] long 
 27296 ;; Auto vars:     Size  Location     Type
 27297 ;;		None
 27298 ;; Return value:  Size  Location     Type
 27299 ;;                  4   61[BANK1 ] long 
 27300 ;; Registers used:
 27301 ;;		wreg, status,2, status,0, cstack
 27302 ;; Tracked objects:
 27303 ;;		On entry : 0/0
 27304 ;;		On exit  : 0/0
 27305 ;;		Unchanged: 0/0
 27306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27307 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27310 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27311 ;;Total ram usage:        8 bytes
 27312 ;; Hardware stack levels used:    1
 27313 ;; Hardware stack levels required when called:   14
 27314 ;; This function calls:
 27315 ;;		___fladd
 27316 ;; This function is called by:
 27317 ;;		_printf
 27318 ;; This function uses a non-reentrant model
 27319 ;;
 27320                           
 27321                           	psect	text45
 27322  0190EA                     __ptext45:
 27323                           	opt stack 0
 27324  0190EA                     ___flsub:
 27325                           	opt stack 13
 27326                           
 27327                           ; BSR set to: 1
 27328                           ;incstack = 0
 27329  0190EA  0E00               	movlw	0
 27330  0190EC  0101               	movlb	1	; () banked
 27331  0190EE  1B41               	xorwf	___flsub@a& (0+255),f,b
 27332  0190F0  0E00               	movlw	0
 27333  0190F2  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 27334  0190F4  0E00               	movlw	0
 27335  0190F6  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 27336  0190F8  0E80               	movlw	128
 27337  0190FA  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 27338                           
 27339                           ; BSR set to: 1
 27340  0190FC  C13D  F129         	movff	___flsub@b,___fladd@b
 27341  019100  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 27342  019104  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 27343  019108  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 27344  01910C  C141  F12D         	movff	___flsub@a,___fladd@a
 27345  019110  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 27346  019114  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 27347  019118  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 27348  01911C  EC9A  F0A7         	call	___fladd	;wreg free
 27349  019120  C129  F13D         	movff	?___fladd,?___flsub
 27350  019124  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 27351  019128  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 27352  01912C  C12C  F140         	movff	?___fladd+3,?___flsub+3
 27353  019130  0012               	return	
 27354  019132                     __end_of___flsub:
 27355                           	opt stack 0
 27356                           tblptru	equ	0xFF8
 27357                           tblptrh	equ	0xFF7
 27358                           tblptrl	equ	0xFF6
 27359                           tablat	equ	0xFF5
 27360                           prodh	equ	0xFF4
 27361                           prodl	equ	0xFF3
 27362                           intcon	equ	0xFF2
 27363                           indf0	equ	0xFEF
 27364                           postinc0	equ	0xFEE
 27365                           fsr0h	equ	0xFEA
 27366                           fsr0l	equ	0xFE9
 27367                           wreg	equ	0xFE8
 27368                           indf1	equ	0xFE7
 27369                           postdec1	equ	0xFE5
 27370                           plusw1	equ	0xFE3
 27371                           fsr1h	equ	0xFE2
 27372                           fsr1l	equ	0xFE1
 27373                           indf2	equ	0xFDF
 27374                           postinc2	equ	0xFDE
 27375                           postdec2	equ	0xFDD
 27376                           plusw2	equ	0xFDB
 27377                           fsr2h	equ	0xFDA
 27378                           fsr2l	equ	0xFD9
 27379                           status	equ	0xFD8
 27380                           
 27381 ;; *************** function ___fladd *****************
 27382 ;; Defined at:
 27383 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 27384 ;; Parameters:    Size  Location     Type
 27385 ;;  b               4   41[BANK1 ] long 
 27386 ;;  a               4   45[BANK1 ] long 
 27387 ;; Auto vars:     Size  Location     Type
 27388 ;;  grs             1   60[BANK1 ] unsigned char 
 27389 ;;  bexp            1   59[BANK1 ] unsigned char 
 27390 ;;  aexp            1   58[BANK1 ] unsigned char 
 27391 ;;  signs           1   57[BANK1 ] unsigned char 
 27392 ;; Return value:  Size  Location     Type
 27393 ;;                  4   41[BANK1 ] unsigned char 
 27394 ;; Registers used:
 27395 ;;		wreg, status,2, status,0
 27396 ;; Tracked objects:
 27397 ;;		On entry : 0/0
 27398 ;;		On exit  : 0/0
 27399 ;;		Unchanged: 0/0
 27400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27401 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27402 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27403 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27404 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27405 ;;Total ram usage:       20 bytes
 27406 ;; Hardware stack levels used:    1
 27407 ;; Hardware stack levels required when called:   13
 27408 ;; This function calls:
 27409 ;;		Nothing
 27410 ;; This function is called by:
 27411 ;;		_ringBufferLUT
 27412 ;;		_printf
 27413 ;;		___flsub
 27414 ;; This function uses a non-reentrant model
 27415 ;;
 27416                           
 27417                           	psect	text46
 27418  014F34                     __ptext46:
 27419                           	opt stack 0
 27420  014F34                     ___fladd:
 27421                           	opt stack 13
 27422                           
 27423                           ;incstack = 0
 27424  014F34  0101               	movlb	1	; () banked
 27425  014F36  512C               	movf	(___fladd@b+3)& (0+255),w,b
 27426  014F38  0B80               	andlw	128
 27427  014F3A  6F39               	movwf	___fladd@signs& (0+255),b
 27428  014F3C  512C               	movf	(___fladd@b+3)& (0+255),w,b
 27429  014F3E  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 27430  014F40  6F3B               	movwf	___fladd@bexp& (0+255),b
 27431                           
 27432                           ; BSR set to: 1
 27433  014F42  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 27434                           
 27435                           ; BSR set to: 1
 27436  014F44  813B               	bsf	___fladd@bexp& (0+255),0,b
 27437                           
 27438                           ; BSR set to: 1
 27439                           
 27440                           ; BSR set to: 1
 27441  014F46  513B               	movf	___fladd@bexp& (0+255),w,b
 27442  014F48  B4D8               	btfsc	status,2,c
 27443  014F4A  D00D               	goto	l2336
 27444                           
 27445                           ; BSR set to: 1
 27446  014F4C  293B               	incf	___fladd@bexp& (0+255),w,b
 27447  014F4E  A4D8               	btfss	status,2,c
 27448  014F50  D008               	goto	l2337
 27449                           
 27450                           ; BSR set to: 1
 27451  014F52  0E00               	movlw	0
 27452  014F54  6F29               	movwf	___fladd@b& (0+255),b
 27453  014F56  0E00               	movlw	0
 27454  014F58  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 27455  014F5A  0E00               	movlw	0
 27456  014F5C  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 27457  014F5E  0E00               	movlw	0
 27458  014F60  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 27459  014F62                     l2337:
 27460                           
 27461                           ; BSR set to: 1
 27462                           
 27463                           ; BSR set to: 1
 27464  014F62  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 27465  014F64  D006               	goto	L5
 27466  014F66                     l2336:
 27467                           
 27468                           ; BSR set to: 1
 27469                           
 27470                           ; BSR set to: 1
 27471  014F66  0E00               	movlw	0
 27472  014F68  6F29               	movwf	___fladd@b& (0+255),b
 27473  014F6A  0E00               	movlw	0
 27474  014F6C  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 27475  014F6E  0E00               	movlw	0
 27476  014F70  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 27477  014F72                     L5:
 27478  014F72  0E00               	movlw	0
 27479  014F74  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 27480                           
 27481                           ; BSR set to: 1
 27482                           
 27483                           ; BSR set to: 1
 27484  014F76  5130               	movf	(___fladd@a+3)& (0+255),w,b
 27485  014F78  0B80               	andlw	128
 27486  014F7A  6F3A               	movwf	___fladd@aexp& (0+255),b
 27487                           
 27488                           ; BSR set to: 1
 27489  014F7C  5139               	movf	___fladd@signs& (0+255),w,b
 27490  014F7E  193A               	xorwf	___fladd@aexp& (0+255),w,b
 27491  014F80  A4D8               	btfss	status,2,c
 27492                           
 27493                           ; BSR set to: 1
 27494  014F82  8D39               	bsf	___fladd@signs& (0+255),6,b
 27495                           
 27496                           ; BSR set to: 1
 27497                           
 27498                           ; BSR set to: 1
 27499  014F84  5130               	movf	(___fladd@a+3)& (0+255),w,b
 27500  014F86  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 27501  014F88  6F3A               	movwf	___fladd@aexp& (0+255),b
 27502                           
 27503                           ; BSR set to: 1
 27504  014F8A  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 27505                           
 27506                           ; BSR set to: 1
 27507  014F8C  813A               	bsf	___fladd@aexp& (0+255),0,b
 27508                           
 27509                           ; BSR set to: 1
 27510                           
 27511                           ; BSR set to: 1
 27512  014F8E  513A               	movf	___fladd@aexp& (0+255),w,b
 27513  014F90  B4D8               	btfsc	status,2,c
 27514  014F92  D00D               	goto	l2341
 27515                           
 27516                           ; BSR set to: 1
 27517  014F94  293A               	incf	___fladd@aexp& (0+255),w,b
 27518  014F96  A4D8               	btfss	status,2,c
 27519  014F98  D008               	goto	l2342
 27520                           
 27521                           ; BSR set to: 1
 27522  014F9A  0E00               	movlw	0
 27523  014F9C  6F2D               	movwf	___fladd@a& (0+255),b
 27524  014F9E  0E00               	movlw	0
 27525  014FA0  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 27526  014FA2  0E00               	movlw	0
 27527  014FA4  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 27528  014FA6  0E00               	movlw	0
 27529  014FA8  6F30               	movwf	(___fladd@a+3)& (0+255),b
 27530  014FAA                     l2342:
 27531                           
 27532                           ; BSR set to: 1
 27533                           
 27534                           ; BSR set to: 1
 27535  014FAA  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 27536  014FAC  D006               	goto	L6
 27537  014FAE                     l2341:
 27538                           
 27539                           ; BSR set to: 1
 27540                           
 27541                           ; BSR set to: 1
 27542  014FAE  0E00               	movlw	0
 27543  014FB0  6F2D               	movwf	___fladd@a& (0+255),b
 27544  014FB2  0E00               	movlw	0
 27545  014FB4  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 27546  014FB6  0E00               	movlw	0
 27547  014FB8  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 27548  014FBA                     L6:
 27549  014FBA  0E00               	movlw	0
 27550  014FBC  6F30               	movwf	(___fladd@a+3)& (0+255),b
 27551                           
 27552                           ; BSR set to: 1
 27553                           
 27554                           ; BSR set to: 1
 27555  014FBE  513B               	movf	___fladd@bexp& (0+255),w,b
 27556  014FC0  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 27557  014FC2  B0D8               	btfsc	status,0,c
 27558  014FC4  D022               	goto	l2344
 27559                           
 27560                           ; BSR set to: 1
 27561  014FC6  AD39               	btfss	___fladd@signs& (0+255),6,b
 27562  014FC8  D002               	goto	l2345
 27563                           
 27564                           ; BSR set to: 1
 27565  014FCA  0E80               	movlw	128
 27566  014FCC  1B39               	xorwf	___fladd@signs& (0+255),f,b
 27567  014FCE                     l2345:
 27568                           
 27569                           ; BSR set to: 1
 27570                           
 27571                           ; BSR set to: 1
 27572  014FCE  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 27573                           
 27574                           ; BSR set to: 1
 27575  014FD2  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 27576                           
 27577                           ; BSR set to: 1
 27578  014FD6  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 27579                           
 27580                           ; BSR set to: 1
 27581  014FDA  C129  F13C         	movff	___fladd@b,___fladd@grs
 27582                           
 27583                           ; BSR set to: 1
 27584  014FDE  C12D  F129         	movff	___fladd@a,___fladd@b
 27585                           
 27586                           ; BSR set to: 1
 27587  014FE2  C13C  F12D         	movff	___fladd@grs,___fladd@a
 27588                           
 27589                           ; BSR set to: 1
 27590  014FE6  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 27591                           
 27592                           ; BSR set to: 1
 27593  014FEA  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 27594                           
 27595                           ; BSR set to: 1
 27596  014FEE  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 27597                           
 27598                           ; BSR set to: 1
 27599  014FF2  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 27600                           
 27601                           ; BSR set to: 1
 27602  014FF6  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 27603                           
 27604                           ; BSR set to: 1
 27605  014FFA  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 27606                           
 27607                           ; BSR set to: 1
 27608  014FFE  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 27609                           
 27610                           ; BSR set to: 1
 27611  015002  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 27612                           
 27613                           ; BSR set to: 1
 27614  015006  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 27615  01500A                     l2344:
 27616                           
 27617                           ; BSR set to: 1
 27618                           
 27619                           ; BSR set to: 1
 27620  01500A  0E00               	movlw	0
 27621  01500C  6F3C               	movwf	___fladd@grs& (0+255),b
 27622                           
 27623                           ; BSR set to: 1
 27624  01500E  513B               	movf	___fladd@bexp& (0+255),w,b
 27625  015010  6F31               	movwf	??___fladd& (0+255),b
 27626  015012  6B32               	clrf	(??___fladd+1)& (0+255),b
 27627  015014  1F31               	comf	??___fladd& (0+255),f,b
 27628  015016  1F32               	comf	(??___fladd+1)& (0+255),f,b
 27629  015018  4B31               	infsnz	??___fladd& (0+255),f,b
 27630  01501A  2B32               	incf	(??___fladd+1)& (0+255),f,b
 27631  01501C  513A               	movf	___fladd@aexp& (0+255),w,b
 27632  01501E  6F33               	movwf	(??___fladd+2)& (0+255),b
 27633  015020  6B34               	clrf	(??___fladd+3)& (0+255),b
 27634  015022  5131               	movf	??___fladd& (0+255),w,b
 27635  015024  2733               	addwf	(??___fladd+2)& (0+255),f,b
 27636  015026  5132               	movf	(??___fladd+1)& (0+255),w,b
 27637  015028  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 27638  01502A  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 27639  01502C  D02C               	goto	l2348
 27640  01502E  5134               	movf	(??___fladd+3)& (0+255),w,b
 27641  015030  E104               	bnz	u24300
 27642  015032  0E1A               	movlw	26
 27643  015034  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 27644  015036  A0D8               	btfss	status,0,c
 27645  015038  D026               	goto	l2348
 27646  01503A                     u24300:
 27647                           
 27648                           ; BSR set to: 1
 27649  01503A  5129               	movf	___fladd@b& (0+255),w,b
 27650  01503C  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 27651  01503E  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 27652  015040  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 27653  015042  B4D8               	btfsc	status,2,c
 27654  015044  D002               	goto	u24310
 27655  015046  0E01               	movlw	1
 27656  015048  D001               	goto	u24320
 27657  01504A                     u24310:
 27658  01504A  0E00               	movlw	0
 27659  01504C                     u24320:
 27660  01504C  6F3C               	movwf	___fladd@grs& (0+255),b
 27661                           
 27662                           ; BSR set to: 1
 27663  01504E  0E00               	movlw	0
 27664  015050  6F29               	movwf	___fladd@b& (0+255),b
 27665  015052  0E00               	movlw	0
 27666  015054  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 27667  015056  0E00               	movlw	0
 27668  015058  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 27669  01505A  0E00               	movlw	0
 27670  01505C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 27671                           
 27672                           ; BSR set to: 1
 27673  01505E  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 27674  015062  D015               	goto	u24350
 27675  015064                     l2349:
 27676                           
 27677                           ; BSR set to: 1
 27678  015064  A13C               	btfss	___fladd@grs& (0+255),0,b
 27679  015066  D005               	goto	l2350
 27680                           
 27681                           ; BSR set to: 1
 27682  015068  90D8               	bcf	status,0,c
 27683  01506A  313C               	rrcf	___fladd@grs& (0+255),w,b
 27684  01506C  0901               	iorlw	1
 27685  01506E  6F3C               	movwf	___fladd@grs& (0+255),b
 27686  015070  D002               	goto	l2351
 27687  015072                     l2350:
 27688                           
 27689                           ; BSR set to: 1
 27690                           
 27691                           ; BSR set to: 1
 27692  015072  90D8               	bcf	status,0,c
 27693  015074  333C               	rrcf	___fladd@grs& (0+255),f,b
 27694  015076                     l2351:
 27695                           
 27696                           ; BSR set to: 1
 27697                           
 27698                           ; BSR set to: 1
 27699  015076  B129               	btfsc	___fladd@b& (0+255),0,b
 27700                           
 27701                           ; BSR set to: 1
 27702  015078  8F3C               	bsf	___fladd@grs& (0+255),7,b
 27703                           
 27704                           ; BSR set to: 1
 27705                           
 27706                           ; BSR set to: 1
 27707  01507A  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 27708  01507C  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 27709  01507E  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 27710  015080  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 27711  015082  3329               	rrcf	___fladd@b& (0+255),f,b
 27712                           
 27713                           ; BSR set to: 1
 27714  015084  2B3B               	incf	___fladd@bexp& (0+255),f,b
 27715  015086                     l2348:
 27716                           
 27717                           ; BSR set to: 1
 27718  015086  513A               	movf	___fladd@aexp& (0+255),w,b
 27719  015088  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 27720  01508A  A0D8               	btfss	status,0,c
 27721  01508C  D7EB               	goto	l2349
 27722  01508E                     u24350:
 27723                           
 27724                           ; BSR set to: 1
 27725                           
 27726                           ; BSR set to: 1
 27727  01508E  BD39               	btfsc	___fladd@signs& (0+255),6,b
 27728  015090  D029               	goto	l2354
 27729                           
 27730                           ; BSR set to: 1
 27731  015092  513B               	movf	___fladd@bexp& (0+255),w,b
 27732  015094  A4D8               	btfss	status,2,c
 27733  015096  D009               	goto	l2355
 27734                           
 27735                           ; BSR set to: 1
 27736  015098  0E00               	movlw	0
 27737  01509A  6F29               	movwf	?___fladd& (0+255),b
 27738  01509C  0E00               	movlw	0
 27739  01509E  6F2A               	movwf	(?___fladd+1)& (0+255),b
 27740  0150A0  0E00               	movlw	0
 27741  0150A2  6F2B               	movwf	(?___fladd+2)& (0+255),b
 27742  0150A4  0E00               	movlw	0
 27743  0150A6  6F2C               	movwf	(?___fladd+3)& (0+255),b
 27744                           
 27745                           ; BSR set to: 1
 27746  0150A8  0012               	return	
 27747  0150AA                     l2355:
 27748                           
 27749                           ; BSR set to: 1
 27750                           
 27751                           ; BSR set to: 1
 27752  0150AA  512D               	movf	___fladd@a& (0+255),w,b
 27753  0150AC  2729               	addwf	___fladd@b& (0+255),f,b
 27754  0150AE  512E               	movf	(___fladd@a+1)& (0+255),w,b
 27755  0150B0  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 27756  0150B2  512F               	movf	(___fladd@a+2)& (0+255),w,b
 27757  0150B4  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 27758  0150B6  5130               	movf	(___fladd@a+3)& (0+255),w,b
 27759  0150B8  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 27760                           
 27761                           ; BSR set to: 1
 27762  0150BA  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 27763  0150BC  D083               	goto	u24480
 27764                           
 27765                           ; BSR set to: 1
 27766  0150BE  A13C               	btfss	___fladd@grs& (0+255),0,b
 27767  0150C0  D006               	goto	l2358
 27768                           
 27769                           ; BSR set to: 1
 27770  0150C2  90D8               	bcf	status,0,c
 27771  0150C4  333C               	rrcf	___fladd@grs& (0+255),f,b
 27772  0150C6  513C               	movf	___fladd@grs& (0+255),w,b
 27773  0150C8  0901               	iorlw	1
 27774  0150CA  6F3C               	movwf	___fladd@grs& (0+255),b
 27775  0150CC  D002               	goto	l2359
 27776  0150CE                     l2358:
 27777                           
 27778                           ; BSR set to: 1
 27779                           
 27780                           ; BSR set to: 1
 27781  0150CE  90D8               	bcf	status,0,c
 27782  0150D0  333C               	rrcf	___fladd@grs& (0+255),f,b
 27783  0150D2                     l2359:
 27784                           
 27785                           ; BSR set to: 1
 27786                           
 27787                           ; BSR set to: 1
 27788  0150D2  B129               	btfsc	___fladd@b& (0+255),0,b
 27789                           
 27790                           ; BSR set to: 1
 27791  0150D4  8F3C               	bsf	___fladd@grs& (0+255),7,b
 27792                           
 27793                           ; BSR set to: 1
 27794                           
 27795                           ; BSR set to: 1
 27796  0150D6  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 27797  0150D8  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 27798  0150DA  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 27799  0150DC  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 27800  0150DE  3329               	rrcf	___fladd@b& (0+255),f,b
 27801                           
 27802                           ; BSR set to: 1
 27803  0150E0  2B3B               	incf	___fladd@bexp& (0+255),f,b
 27804                           
 27805                           ; BSR set to: 1
 27806  0150E2  D070               	goto	u24480
 27807  0150E4                     l2354:
 27808                           
 27809                           ; BSR set to: 1
 27810                           
 27811                           ; BSR set to: 1
 27812  0150E4  512D               	movf	___fladd@a& (0+255),w,b
 27813  0150E6  5D29               	subwf	___fladd@b& (0+255),w,b
 27814  0150E8  512E               	movf	(___fladd@a+1)& (0+255),w,b
 27815  0150EA  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 27816  0150EC  512F               	movf	(___fladd@a+2)& (0+255),w,b
 27817  0150EE  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 27818  0150F0  512C               	movf	(___fladd@b+3)& (0+255),w,b
 27819  0150F2  0A80               	xorlw	128
 27820  0150F4  6F31               	movwf	??___fladd& (0+255),b
 27821  0150F6  5130               	movf	(___fladd@a+3)& (0+255),w,b
 27822  0150F8  0A80               	xorlw	128
 27823  0150FA  5931               	subwfb	??___fladd& (0+255),w,b
 27824  0150FC  B0D8               	btfsc	status,0,c
 27825  0150FE  D036               	goto	l2362
 27826                           
 27827                           ; BSR set to: 1
 27828  015100  C129  F131         	movff	___fladd@b,??___fladd
 27829  015104  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 27830  015108  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 27831  01510C  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 27832  015110  1F31               	comf	??___fladd& (0+255),f,b
 27833  015112  1F32               	comf	(??___fladd+1)& (0+255),f,b
 27834  015114  1F33               	comf	(??___fladd+2)& (0+255),f,b
 27835  015116  1F34               	comf	(??___fladd+3)& (0+255),f,b
 27836  015118  2B31               	incf	??___fladd& (0+255),f,b
 27837  01511A  0E00               	movlw	0
 27838  01511C  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 27839  01511E  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 27840  015120  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 27841  015122  512D               	movf	___fladd@a& (0+255),w,b
 27842  015124  2531               	addwf	??___fladd& (0+255),w,b
 27843  015126  6F35               	movwf	(??___fladd+4)& (0+255),b
 27844  015128  512E               	movf	(___fladd@a+1)& (0+255),w,b
 27845  01512A  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 27846  01512C  6F36               	movwf	(??___fladd+5)& (0+255),b
 27847  01512E  512F               	movf	(___fladd@a+2)& (0+255),w,b
 27848  015130  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 27849  015132  6F37               	movwf	(??___fladd+6)& (0+255),b
 27850  015134  5130               	movf	(___fladd@a+3)& (0+255),w,b
 27851  015136  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 27852  015138  6F38               	movwf	(??___fladd+7)& (0+255),b
 27853  01513A  0EFF               	movlw	255
 27854  01513C  2535               	addwf	(??___fladd+4)& (0+255),w,b
 27855  01513E  6F29               	movwf	___fladd@b& (0+255),b
 27856  015140  0EFF               	movlw	255
 27857  015142  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 27858  015144  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 27859  015146  0EFF               	movlw	255
 27860  015148  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 27861  01514A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 27862  01514C  0EFF               	movlw	255
 27863  01514E  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 27864  015150  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 27865  015152  0E80               	movlw	128
 27866  015154  1B39               	xorwf	___fladd@signs& (0+255),f,b
 27867                           
 27868                           ; BSR set to: 1
 27869  015156  6D3C               	negf	___fladd@grs& (0+255),b
 27870                           
 27871                           ; BSR set to: 1
 27872  015158  513C               	movf	___fladd@grs& (0+255),w,b
 27873  01515A  A4D8               	btfss	status,2,c
 27874  01515C  D00F               	goto	l2364
 27875                           
 27876                           ; BSR set to: 1
 27877  01515E  0E01               	movlw	1
 27878  015160  2729               	addwf	___fladd@b& (0+255),f,b
 27879  015162  0E00               	movlw	0
 27880  015164  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 27881  015166  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 27882  015168  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 27883                           
 27884                           ; BSR set to: 1
 27885  01516A  D008               	goto	l2364
 27886  01516C                     l2362:
 27887                           
 27888                           ; BSR set to: 1
 27889                           
 27890                           ; BSR set to: 1
 27891  01516C  512D               	movf	___fladd@a& (0+255),w,b
 27892  01516E  5F29               	subwf	___fladd@b& (0+255),f,b
 27893  015170  512E               	movf	(___fladd@a+1)& (0+255),w,b
 27894  015172  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 27895  015174  512F               	movf	(___fladd@a+2)& (0+255),w,b
 27896  015176  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 27897  015178  5130               	movf	(___fladd@a+3)& (0+255),w,b
 27898  01517A  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 27899  01517C                     l2364:
 27900                           
 27901                           ; BSR set to: 1
 27902  01517C  5129               	movf	___fladd@b& (0+255),w,b
 27903  01517E  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 27904  015180  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 27905  015182  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 27906  015184  A4D8               	btfss	status,2,c
 27907  015186  D01C               	goto	l2371
 27908                           
 27909                           ; BSR set to: 1
 27910  015188  513C               	movf	___fladd@grs& (0+255),w,b
 27911  01518A  A4D8               	btfss	status,2,c
 27912  01518C  D019               	goto	l2371
 27913                           
 27914                           ; BSR set to: 1
 27915  01518E  0E00               	movlw	0
 27916  015190  6F29               	movwf	?___fladd& (0+255),b
 27917  015192  0E00               	movlw	0
 27918  015194  6F2A               	movwf	(?___fladd+1)& (0+255),b
 27919  015196  0E00               	movlw	0
 27920  015198  6F2B               	movwf	(?___fladd+2)& (0+255),b
 27921  01519A  0E00               	movlw	0
 27922  01519C  6F2C               	movwf	(?___fladd+3)& (0+255),b
 27923                           
 27924                           ; BSR set to: 1
 27925  01519E  0012               	return	
 27926  0151A0                     
 27927                           ; BSR set to: 1
 27928                           
 27929                           ; BSR set to: 1
 27930  0151A0  90D8               	bcf	status,0,c
 27931  0151A2  3729               	rlcf	___fladd@b& (0+255),f,b
 27932  0151A4  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 27933  0151A6  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 27934  0151A8  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 27935                           
 27936                           ; BSR set to: 1
 27937  0151AA  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 27938                           
 27939                           ; BSR set to: 1
 27940  0151AC  8129               	bsf	___fladd@b& (0+255),0,b
 27941                           
 27942                           ; BSR set to: 1
 27943                           
 27944                           ; BSR set to: 1
 27945  0151AE  A13C               	btfss	___fladd@grs& (0+255),0,b
 27946  0151B0  D002               	goto	l2369
 27947                           
 27948                           ; BSR set to: 1
 27949  0151B2  80D8               	bsf	status,0,c
 27950  0151B4  D001               	goto	L7
 27951  0151B6                     l2369:
 27952                           
 27953                           ; BSR set to: 1
 27954                           
 27955                           ; BSR set to: 1
 27956  0151B6  90D8               	bcf	status,0,c
 27957  0151B8                     L7:
 27958  0151B8  373C               	rlcf	___fladd@grs& (0+255),f,b
 27959                           
 27960                           ; BSR set to: 1
 27961                           
 27962                           ; BSR set to: 1
 27963  0151BA  513B               	movf	___fladd@bexp& (0+255),w,b
 27964  0151BC  A4D8               	btfss	status,2,c
 27965                           
 27966                           ; BSR set to: 1
 27967  0151BE  073B               	decf	___fladd@bexp& (0+255),f,b
 27968  0151C0                     l2371:
 27969                           
 27970                           ; BSR set to: 1
 27971                           
 27972                           ; BSR set to: 1
 27973                           
 27974                           ; BSR set to: 1
 27975  0151C0  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 27976  0151C2  D7EE               	goto	l2367
 27977  0151C4                     u24480:
 27978                           
 27979                           ; BSR set to: 1
 27980                           
 27981                           ; BSR set to: 1
 27982                           
 27983                           ; BSR set to: 1
 27984  0151C4  0E00               	movlw	0
 27985  0151C6  6F3A               	movwf	___fladd@aexp& (0+255),b
 27986                           
 27987                           ; BSR set to: 1
 27988  0151C8  AF3C               	btfss	___fladd@grs& (0+255),7,b
 27989  0151CA  D00A               	goto	l2376
 27990                           
 27991                           ; BSR set to: 1
 27992  0151CC  C13C  F131         	movff	___fladd@grs,??___fladd
 27993  0151D0  0E7F               	movlw	127
 27994  0151D2  1731               	andwf	??___fladd& (0+255),f,b
 27995  0151D4  A4D8               	btfss	status,2,c
 27996  0151D6  D002               	goto	u24510
 27997                           
 27998                           ; BSR set to: 1
 27999                           
 28000                           ; BSR set to: 1
 28001  0151D8  A129               	btfss	___fladd@b& (0+255),0,b
 28002  0151DA  D002               	goto	l2376
 28003  0151DC                     u24510:
 28004                           
 28005                           ; BSR set to: 1
 28006  0151DC  0E01               	movlw	1
 28007  0151DE  6F3A               	movwf	___fladd@aexp& (0+255),b
 28008  0151E0                     l2376:
 28009                           
 28010                           ; BSR set to: 1
 28011                           
 28012                           ; BSR set to: 1
 28013                           
 28014                           ; BSR set to: 1
 28015  0151E0  513A               	movf	___fladd@aexp& (0+255),w,b
 28016  0151E2  B4D8               	btfsc	status,2,c
 28017  0151E4  D020               	goto	l2379
 28018                           
 28019                           ; BSR set to: 1
 28020  0151E6  0E01               	movlw	1
 28021  0151E8  2729               	addwf	___fladd@b& (0+255),f,b
 28022  0151EA  0E00               	movlw	0
 28023  0151EC  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 28024  0151EE  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 28025  0151F0  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 28026                           
 28027                           ; BSR set to: 1
 28028  0151F2  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 28029  0151F4  D018               	goto	l2379
 28030                           
 28031                           ; BSR set to: 1
 28032  0151F6  C129  F131         	movff	___fladd@b,??___fladd
 28033  0151FA  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 28034  0151FE  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 28035  015202  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 28036  015206  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 28037  015208  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 28038  01520A  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 28039  01520C  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 28040  01520E  3331               	rrcf	??___fladd& (0+255),f,b
 28041  015210  C131  F129         	movff	??___fladd,___fladd@b
 28042  015214  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 28043  015218  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 28044  01521C  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 28045  015220  293B               	incf	___fladd@bexp& (0+255),w,b
 28046  015222  A4D8               	btfss	status,2,c
 28047                           
 28048                           ; BSR set to: 1
 28049  015224  2B3B               	incf	___fladd@bexp& (0+255),f,b
 28050  015226                     l2379:
 28051                           
 28052                           ; BSR set to: 1
 28053                           
 28054                           ; BSR set to: 1
 28055                           
 28056                           ; BSR set to: 1
 28057                           
 28058                           ; BSR set to: 1
 28059  015226  293B               	incf	___fladd@bexp& (0+255),w,b
 28060  015228  B4D8               	btfsc	status,2,c
 28061  01522A  D003               	goto	u24560
 28062                           
 28063                           ; BSR set to: 1
 28064  01522C  513B               	movf	___fladd@bexp& (0+255),w,b
 28065  01522E  A4D8               	btfss	status,2,c
 28066  015230  D00D               	goto	l2383
 28067  015232                     u24560:
 28068                           
 28069                           ; BSR set to: 1
 28070                           
 28071                           ; BSR set to: 1
 28072  015232  0E00               	movlw	0
 28073  015234  6F29               	movwf	___fladd@b& (0+255),b
 28074  015236  0E00               	movlw	0
 28075  015238  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 28076  01523A  0E00               	movlw	0
 28077  01523C  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 28078  01523E  0E00               	movlw	0
 28079  015240  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 28080  015242  513B               	movf	___fladd@bexp& (0+255),w,b
 28081  015244  A4D8               	btfss	status,2,c
 28082  015246  D002               	goto	l2383
 28083                           
 28084                           ; BSR set to: 1
 28085  015248  0E00               	movlw	0
 28086  01524A  6F39               	movwf	___fladd@signs& (0+255),b
 28087  01524C                     l2383:
 28088                           
 28089                           ; BSR set to: 1
 28090                           
 28091                           ; BSR set to: 1
 28092                           
 28093                           ; BSR set to: 1
 28094  01524C  A13B               	btfss	___fladd@bexp& (0+255),0,b
 28095  01524E  D002               	goto	l2384
 28096                           
 28097                           ; BSR set to: 1
 28098  015250  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 28099  015252  D001               	goto	l2385
 28100  015254                     l2384:
 28101                           
 28102                           ; BSR set to: 1
 28103                           
 28104                           ; BSR set to: 1
 28105  015254  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 28106  015256                     l2385:
 28107                           
 28108                           ; BSR set to: 1
 28109                           
 28110                           ; BSR set to: 1
 28111  015256  90D8               	bcf	status,0,c
 28112  015258  313B               	rrcf	___fladd@bexp& (0+255),w,b
 28113  01525A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 28114                           
 28115                           ; BSR set to: 1
 28116  01525C  BF39               	btfsc	___fladd@signs& (0+255),7,b
 28117                           
 28118                           ; BSR set to: 1
 28119  01525E  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 28120                           
 28121                           ; BSR set to: 1
 28122                           
 28123                           ; BSR set to: 1
 28124  015260  C129  F129         	movff	___fladd@b,?___fladd
 28125  015264  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 28126  015268  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 28127  01526C  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 28128  015270  0012               	return	
 28129  015272                     __end_of___fladd:
 28130                           	opt stack 0
 28131                           tblptru	equ	0xFF8
 28132                           tblptrh	equ	0xFF7
 28133                           tblptrl	equ	0xFF6
 28134                           tablat	equ	0xFF5
 28135                           prodh	equ	0xFF4
 28136                           prodl	equ	0xFF3
 28137                           intcon	equ	0xFF2
 28138                           indf0	equ	0xFEF
 28139                           postinc0	equ	0xFEE
 28140                           fsr0h	equ	0xFEA
 28141                           fsr0l	equ	0xFE9
 28142                           wreg	equ	0xFE8
 28143                           indf1	equ	0xFE7
 28144                           postdec1	equ	0xFE5
 28145                           plusw1	equ	0xFE3
 28146                           fsr1h	equ	0xFE2
 28147                           fsr1l	equ	0xFE1
 28148                           indf2	equ	0xFDF
 28149                           postinc2	equ	0xFDE
 28150                           postdec2	equ	0xFDD
 28151                           plusw2	equ	0xFDB
 28152                           fsr2h	equ	0xFDA
 28153                           fsr2l	equ	0xFD9
 28154                           status	equ	0xFD8
 28155                           
 28156 ;; *************** function ___flneg *****************
 28157 ;; Defined at:
 28158 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 28159 ;; Parameters:    Size  Location     Type
 28160 ;;  f1              4   37[BANK1 ] unsigned char 
 28161 ;; Auto vars:     Size  Location     Type
 28162 ;;		None
 28163 ;; Return value:  Size  Location     Type
 28164 ;;                  4   37[BANK1 ] unsigned char 
 28165 ;; Registers used:
 28166 ;;		wreg, status,2, status,0
 28167 ;; Tracked objects:
 28168 ;;		On entry : 0/0
 28169 ;;		On exit  : 0/0
 28170 ;;		Unchanged: 0/0
 28171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28172 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28175 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28176 ;;Total ram usage:        4 bytes
 28177 ;; Hardware stack levels used:    1
 28178 ;; Hardware stack levels required when called:   13
 28179 ;; This function calls:
 28180 ;;		Nothing
 28181 ;; This function is called by:
 28182 ;;		_ringBufferLUT
 28183 ;;		_printf
 28184 ;; This function uses a non-reentrant model
 28185 ;;
 28186                           
 28187                           	psect	text47
 28188  01950C                     __ptext47:
 28189                           	opt stack 0
 28190  01950C                     ___flneg:
 28191                           	opt stack 14
 28192                           
 28193                           ; BSR set to: 1
 28194                           ;incstack = 0
 28195  01950C  0101               	movlb	1	; () banked
 28196  01950E  5125               	movf	___flneg@f1& (0+255),w,b
 28197  019510  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 28198  019512  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 28199  019514  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 28200  019516  B4D8               	btfsc	status,2,c
 28201  019518  D008               	goto	l2073
 28202                           
 28203                           ; BSR set to: 1
 28204  01951A  0E00               	movlw	0
 28205  01951C  1B25               	xorwf	___flneg@f1& (0+255),f,b
 28206  01951E  0E00               	movlw	0
 28207  019520  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 28208  019522  0E00               	movlw	0
 28209  019524  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 28210  019526  0E80               	movlw	128
 28211  019528  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 28212  01952A                     l2073:
 28213                           
 28214                           ; BSR set to: 1
 28215                           
 28216                           ; BSR set to: 1
 28217  01952A  C125  F125         	movff	___flneg@f1,?___flneg
 28218  01952E  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 28219  019532  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 28220  019536  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 28221  01953A  0012               	return	
 28222  01953C                     __end_of___flneg:
 28223                           	opt stack 0
 28224                           tblptru	equ	0xFF8
 28225                           tblptrh	equ	0xFF7
 28226                           tblptrl	equ	0xFF6
 28227                           tablat	equ	0xFF5
 28228                           prodh	equ	0xFF4
 28229                           prodl	equ	0xFF3
 28230                           intcon	equ	0xFF2
 28231                           indf0	equ	0xFEF
 28232                           postinc0	equ	0xFEE
 28233                           fsr0h	equ	0xFEA
 28234                           fsr0l	equ	0xFE9
 28235                           wreg	equ	0xFE8
 28236                           indf1	equ	0xFE7
 28237                           postdec1	equ	0xFE5
 28238                           plusw1	equ	0xFE3
 28239                           fsr1h	equ	0xFE2
 28240                           fsr1l	equ	0xFE1
 28241                           indf2	equ	0xFDF
 28242                           postinc2	equ	0xFDE
 28243                           postdec2	equ	0xFDD
 28244                           plusw2	equ	0xFDB
 28245                           fsr2h	equ	0xFDA
 28246                           fsr2l	equ	0xFD9
 28247                           status	equ	0xFD8
 28248                           
 28249 ;; *************** function _saveSRAMMaxToEEPROM *****************
 28250 ;; Defined at:
 28251 ;;		line 154 in file "main.c"
 28252 ;; Parameters:    Size  Location     Type
 28253 ;;		None
 28254 ;; Auto vars:     Size  Location     Type
 28255 ;;		None
 28256 ;; Return value:  Size  Location     Type
 28257 ;;                  1    wreg      void 
 28258 ;; Registers used:
 28259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28260 ;; Tracked objects:
 28261 ;;		On entry : 0/0
 28262 ;;		On exit  : 0/0
 28263 ;;		Unchanged: 0/0
 28264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28269 ;;Total ram usage:        0 bytes
 28270 ;; Hardware stack levels used:    1
 28271 ;; Hardware stack levels required when called:   15
 28272 ;; This function calls:
 28273 ;;		___flge
 28274 ;;		_writeDoubleToEEPROM
 28275 ;; This function is called by:
 28276 ;;		_main
 28277 ;; This function uses a non-reentrant model
 28278 ;;
 28279                           
 28280                           	psect	text48
 28281  016954                     __ptext48:
 28282                           	opt stack 0
 28283  016954                     _saveSRAMMaxToEEPROM:
 28284                           	opt stack 15
 28285                           
 28286                           ;main.c: 158: if (Irms > max_Irms) {
 28287                           
 28288                           ; BSR set to: 1
 28289                           ;incstack = 0
 28290  016954  C214  F117         	movff	_max_Irms,___flge@ff1	;volatile
 28291  016958  C215  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 28292  01695C  C216  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 28293  016960  C217  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 28294  016964  C1C3  F11B         	movff	_Irms,___flge@ff2	;volatile
 28295  016968  C1C4  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 28296  01696C  C1C5  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 28297  016970  C1C6  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 28298  016974  ECF8  F0BC         	call	___flge	;wreg free
 28299  016978  0101               	movlb	1	; () banked
 28300  01697A  B0D8               	btfsc	status,0,c
 28301  01697C  D01E               	goto	l1138
 28302                           
 28303                           ; BSR set to: 1
 28304                           ;main.c: 159: writeDoubleToEEPROM(Irms, max_Irms_address);
 28305  01697E  C1C3  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 28306  016982  C1C4  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 28307  016986  C1C5  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 28308  01698A  C1C6  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 28309  01698E  0E19               	movlw	low _max_Irms_address
 28310  016990  6EF6               	movwf	tblptrl,c
 28311  016992                     	if	1	;There is more than 1 active tblptr byte
 28312  016992  0ED5               	movlw	high _max_Irms_address
 28313  016994  6EF7               	movwf	tblptrh,c
 28314  016996                     	endif
 28315  016996                     	if	1	;There are 3 active tblptr bytes
 28316  016996  0E00               	movlw	low (_max_Irms_address shr (0+16))
 28317  016998  6EF8               	movwf	tblptru,c
 28318  01699A                     	endif
 28319  01699A  0009               	tblrd		*+
 28320  01699C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 28321  0169A0  000A               	tblrd		*-
 28322  0169A2  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 28323  0169A6  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 28324                           
 28325                           ;main.c: 160: max_Irms = Irms;
 28326  0169AA  C1C3  F214         	movff	_Irms,_max_Irms	;volatile
 28327  0169AE  C1C4  F215         	movff	_Irms+1,_max_Irms+1	;volatile
 28328  0169B2  C1C5  F216         	movff	_Irms+2,_max_Irms+2	;volatile
 28329  0169B6  C1C6  F217         	movff	_Irms+3,_max_Irms+3	;volatile
 28330  0169BA                     l1138:
 28331                           
 28332                           ;main.c: 161: }
 28333                           ;main.c: 163: if (Avg_Power > max_Power) {
 28334  0169BA  C210  F117         	movff	_max_Power,___flge@ff1	;volatile
 28335  0169BE  C211  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 28336  0169C2  C212  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 28337  0169C6  C213  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 28338  0169CA  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 28339  0169CE  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 28340  0169D2  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 28341  0169D6  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 28342  0169DA  ECF8  F0BC         	call	___flge	;wreg free
 28343  0169DE  0101               	movlb	1	; () banked
 28344  0169E0  B0D8               	btfsc	status,0,c
 28345  0169E2  D01E               	goto	l1139
 28346                           
 28347                           ; BSR set to: 1
 28348                           ;main.c: 164: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 28349  0169E4  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 28350  0169E8  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 28351  0169EC  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 28352  0169F0  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 28353  0169F4  0E17               	movlw	low _max_Power_address
 28354  0169F6  6EF6               	movwf	tblptrl,c
 28355  0169F8                     	if	1	;There is more than 1 active tblptr byte
 28356  0169F8  0ED5               	movlw	high _max_Power_address
 28357  0169FA  6EF7               	movwf	tblptrh,c
 28358  0169FC                     	endif
 28359  0169FC                     	if	1	;There are 3 active tblptr bytes
 28360  0169FC  0E00               	movlw	low (_max_Power_address shr (0+16))
 28361  0169FE  6EF8               	movwf	tblptru,c
 28362  016A00                     	endif
 28363  016A00  0009               	tblrd		*+
 28364  016A02  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 28365  016A06  000A               	tblrd		*-
 28366  016A08  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 28367  016A0C  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 28368                           
 28369                           ;main.c: 165: max_Power = Avg_Power;
 28370  016A10  C1BB  F210         	movff	_Avg_Power,_max_Power	;volatile
 28371  016A14  C1BC  F211         	movff	_Avg_Power+1,_max_Power+1	;volatile
 28372  016A18  C1BD  F212         	movff	_Avg_Power+2,_max_Power+2	;volatile
 28373  016A1C  C1BE  F213         	movff	_Avg_Power+3,_max_Power+3	;volatile
 28374  016A20                     l1139:
 28375                           
 28376                           ;main.c: 166: }
 28377                           ;main.c: 168: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 28378  016A20  C20C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 28379  016A24  C20D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 28380  016A28  C20E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 28381  016A2C  C20F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 28382  016A30  C1D7  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 28383  016A34  C1D8  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 28384  016A38  C1D9  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 28385  016A3C  C1DA  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 28386  016A40  ECF8  F0BC         	call	___flge	;wreg free
 28387  016A44  0101               	movlb	1	; () banked
 28388  016A46  B0D8               	btfsc	status,0,c
 28389  016A48  D01E               	goto	l1140
 28390                           
 28391                           ; BSR set to: 1
 28392                           ;main.c: 169: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 28393  016A4A  C1D7  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 28394  016A4E  C1D8  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 28395  016A52  C1D9  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 28396  016A56  C1DA  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 28397  016A5A  0E15               	movlw	low _max_POS3P3_ADC_Result_address
 28398  016A5C  6EF6               	movwf	tblptrl,c
 28399  016A5E                     	if	1	;There is more than 1 active tblptr byte
 28400  016A5E  0ED5               	movlw	high _max_POS3P3_ADC_Result_address
 28401  016A60  6EF7               	movwf	tblptrh,c
 28402  016A62                     	endif
 28403  016A62                     	if	1	;There are 3 active tblptr bytes
 28404  016A62  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 28405  016A64  6EF8               	movwf	tblptru,c
 28406  016A66                     	endif
 28407  016A66  0009               	tblrd		*+
 28408  016A68  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 28409  016A6C  000A               	tblrd		*-
 28410  016A6E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 28411  016A72  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 28412                           
 28413                           ;main.c: 170: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 28414  016A76  C1D7  F20C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 28415  016A7A  C1D8  F20D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 28416  016A7E  C1D9  F20E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 28417  016A82  C1DA  F20F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 28418  016A86                     l1140:
 28419                           
 28420                           ;main.c: 171: }
 28421                           ;main.c: 173: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 28422  016A86  C208  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 28423  016A8A  C209  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 28424  016A8E  C20A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 28425  016A92  C20B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 28426  016A96  C1D3  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 28427  016A9A  C1D4  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 28428  016A9E  C1D5  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 28429  016AA2  C1D6  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 28430  016AA6  ECF8  F0BC         	call	___flge	;wreg free
 28431  016AAA  0101               	movlb	1	; () banked
 28432  016AAC  B0D8               	btfsc	status,0,c
 28433  016AAE  D01E               	goto	l1141
 28434                           
 28435                           ; BSR set to: 1
 28436                           ;main.c: 174: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 28437  016AB0  C1D3  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 28438  016AB4  C1D4  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 28439  016AB8  C1D5  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 28440  016ABC  C1D6  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 28441  016AC0  0E13               	movlw	low _max_POS12_ADC_Result_address
 28442  016AC2  6EF6               	movwf	tblptrl,c
 28443  016AC4                     	if	1	;There is more than 1 active tblptr byte
 28444  016AC4  0ED5               	movlw	high _max_POS12_ADC_Result_address
 28445  016AC6  6EF7               	movwf	tblptrh,c
 28446  016AC8                     	endif
 28447  016AC8                     	if	1	;There are 3 active tblptr bytes
 28448  016AC8  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 28449  016ACA  6EF8               	movwf	tblptru,c
 28450  016ACC                     	endif
 28451  016ACC  0009               	tblrd		*+
 28452  016ACE  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 28453  016AD2  000A               	tblrd		*-
 28454  016AD4  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 28455  016AD8  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 28456                           
 28457                           ;main.c: 175: max_POS12_ADC_Result = POS12_ADC_Result;
 28458  016ADC  C1D3  F208         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 28459  016AE0  C1D4  F209         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 28460  016AE4  C1D5  F20A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 28461  016AE8  C1D6  F20B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 28462  016AEC                     l1141:
 28463                           
 28464                           ;main.c: 176: }
 28465                           ;main.c: 178: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 28466  016AEC  C204  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 28467  016AF0  C205  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 28468  016AF4  C206  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 28469  016AF8  C207  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 28470  016AFC  C1CF  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 28471  016B00  C1D0  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 28472  016B04  C1D1  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 28473  016B08  C1D2  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 28474  016B0C  ECF8  F0BC         	call	___flge	;wreg free
 28475  016B10  0101               	movlb	1	; () banked
 28476  016B12  B0D8               	btfsc	status,0,c
 28477  016B14  D01E               	goto	l1142
 28478                           
 28479                           ; BSR set to: 1
 28480                           ;main.c: 179: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 28481  016B16  C1CF  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 28482  016B1A  C1D0  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 28483  016B1E  C1D1  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 28484  016B22  C1D2  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 28485  016B26  0E11               	movlw	low _max_Temp_ADC_Result_address
 28486  016B28  6EF6               	movwf	tblptrl,c
 28487  016B2A                     	if	1	;There is more than 1 active tblptr byte
 28488  016B2A  0ED5               	movlw	high _max_Temp_ADC_Result_address
 28489  016B2C  6EF7               	movwf	tblptrh,c
 28490  016B2E                     	endif
 28491  016B2E                     	if	1	;There are 3 active tblptr bytes
 28492  016B2E  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 28493  016B30  6EF8               	movwf	tblptru,c
 28494  016B32                     	endif
 28495  016B32  0009               	tblrd		*+
 28496  016B34  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 28497  016B38  000A               	tblrd		*-
 28498  016B3A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 28499  016B3E  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 28500                           
 28501                           ;main.c: 180: max_Temp_ADC_Result = Temp_ADC_Result;
 28502  016B42  C1CF  F204         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 28503  016B46  C1D0  F205         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 28504  016B4A  C1D1  F206         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 28505  016B4E  C1D2  F207         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 28506  016B52                     l1142:
 28507                           
 28508                           ;main.c: 181: }
 28509                           ;main.c: 183: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 28510  016B52  C200  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 28511  016B56  C201  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 28512  016B5A  C202  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 28513  016B5E  C203  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 28514  016B62  C1E4  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 28515  016B66  C1E5  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 28516  016B6A  C1E6  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 28517  016B6E  C1E7  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 28518  016B72  ECF8  F0BC         	call	___flge	;wreg free
 28519  016B76  0101               	movlb	1	; () banked
 28520  016B78  B0D8               	btfsc	status,0,c
 28521  016B7A  0012               	return	
 28522                           
 28523                           ; BSR set to: 1
 28524                           ;main.c: 184: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 28525  016B7C  C1E4  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 28526  016B80  C1E5  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 28527  016B84  C1E6  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 28528  016B88  C1E7  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 28529  016B8C  0E0F               	movlw	low _max_FVR_ADC_Result_address
 28530  016B8E  6EF6               	movwf	tblptrl,c
 28531  016B90                     	if	1	;There is more than 1 active tblptr byte
 28532  016B90  0ED5               	movlw	high _max_FVR_ADC_Result_address
 28533  016B92  6EF7               	movwf	tblptrh,c
 28534  016B94                     	endif
 28535  016B94                     	if	1	;There are 3 active tblptr bytes
 28536  016B94  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 28537  016B96  6EF8               	movwf	tblptru,c
 28538  016B98                     	endif
 28539  016B98  0009               	tblrd		*+
 28540  016B9A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 28541  016B9E  000A               	tblrd		*-
 28542  016BA0  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 28543  016BA4  EC43  F0C7         	call	_writeDoubleToEEPROM	;wreg free
 28544                           
 28545                           ;main.c: 185: max_FVR_ADC_Result = FVR_ADC_Result;
 28546  016BA8  C1E4  F200         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 28547  016BAC  C1E5  F201         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 28548  016BB0  C1E6  F202         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 28549  016BB4  C1E7  F203         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 28550  016BB8  0012               	return	
 28551  016BBA                     __end_of_saveSRAMMaxToEEPROM:
 28552                           	opt stack 0
 28553                           tblptru	equ	0xFF8
 28554                           tblptrh	equ	0xFF7
 28555                           tblptrl	equ	0xFF6
 28556                           tablat	equ	0xFF5
 28557                           prodh	equ	0xFF4
 28558                           prodl	equ	0xFF3
 28559                           intcon	equ	0xFF2
 28560                           indf0	equ	0xFEF
 28561                           postinc0	equ	0xFEE
 28562                           fsr0h	equ	0xFEA
 28563                           fsr0l	equ	0xFE9
 28564                           wreg	equ	0xFE8
 28565                           indf1	equ	0xFE7
 28566                           postdec1	equ	0xFE5
 28567                           plusw1	equ	0xFE3
 28568                           fsr1h	equ	0xFE2
 28569                           fsr1l	equ	0xFE1
 28570                           indf2	equ	0xFDF
 28571                           postinc2	equ	0xFDE
 28572                           postdec2	equ	0xFDD
 28573                           plusw2	equ	0xFDB
 28574                           fsr2h	equ	0xFDA
 28575                           fsr2l	equ	0xFD9
 28576                           status	equ	0xFD8
 28577                           
 28578 ;; *************** function _writeDoubleToEEPROM *****************
 28579 ;; Defined at:
 28580 ;;		line 6 in file "double_to_EEPROM.c"
 28581 ;; Parameters:    Size  Location     Type
 28582 ;;  input_double    4   27[BANK1 ] void 
 28583 ;;  starting_add    2   31[BANK1 ] unsigned int 
 28584 ;; Auto vars:     Size  Location     Type
 28585 ;;  byte_index      2   37[BANK1 ] int 
 28586 ;;  input_data      4   33[BANK1 ] struct .
 28587 ;; Return value:  Size  Location     Type
 28588 ;;                  1    wreg      void 
 28589 ;; Registers used:
 28590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28591 ;; Tracked objects:
 28592 ;;		On entry : 0/0
 28593 ;;		On exit  : 0/0
 28594 ;;		Unchanged: 0/0
 28595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28596 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28597 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28599 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28600 ;;Total ram usage:       12 bytes
 28601 ;; Hardware stack levels used:    1
 28602 ;; Hardware stack levels required when called:   14
 28603 ;; This function calls:
 28604 ;;		_DATAEE_WriteByte
 28605 ;; This function is called by:
 28606 ;;		_saveSRAMMaxToEEPROM
 28607 ;;		_ringBufferLUT
 28608 ;; This function uses a non-reentrant model
 28609 ;;
 28610                           
 28611                           	psect	text49
 28612  018E86                     __ptext49:
 28613                           	opt stack 0
 28614  018E86                     _writeDoubleToEEPROM:
 28615                           	opt stack 14
 28616                           
 28617                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 28618                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 28619                           
 28620                           ;incstack = 0
 28621  018E86  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 28622  018E8A  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 28623  018E8E  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 28624  018E92  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 28625                           
 28626                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 28627  018E96  0E00               	movlw	0
 28628  018E98  0101               	movlb	1	; () banked
 28629  018E9A  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 28630  018E9C  0E00               	movlw	0
 28631  018E9E  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 28632  018EA0                     l19969:
 28633                           
 28634                           ; BSR set to: 1
 28635  018EA0  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 28636  018EA2  E118               	bnz	l1601
 28637  018EA4  0E04               	movlw	4
 28638  018EA6  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 28639  018EA8  B0D8               	btfsc	status,0,c
 28640  018EAA  0012               	return	
 28641                           
 28642                           ; BSR set to: 1
 28643                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 28644                           
 28645                           ; BSR set to: 1
 28646                           
 28647                           ; BSR set to: 1
 28648  018EAC  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 28649  018EAE  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 28650  018EB0  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 28651  018EB2  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 28652  018EB4  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 28653  018EB6  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 28654  018EB8  0E21               	movlw	low writeDoubleToEEPROM@input_data
 28655  018EBA  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 28656  018EBC  6ED9               	movwf	fsr2l,c
 28657  018EBE  0E01               	movlw	high writeDoubleToEEPROM@input_data
 28658  018EC0  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 28659  018EC2  6EDA               	movwf	fsr2h,c
 28660  018EC4  50DF               	movf	indf2,w,c
 28661  018EC6  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 28662  018EC8  EC20  F0C9         	call	_DATAEE_WriteByte	;wreg free
 28663  018ECC  0101               	movlb	1	; () banked
 28664  018ECE  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 28665  018ED0  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 28666  018ED2  D7E6               	goto	l19969
 28667  018ED4                     l1601:
 28668                           
 28669                           ; BSR set to: 1
 28670  018ED4  0012               	return		;funcret
 28671  018ED6                     __end_of_writeDoubleToEEPROM:
 28672                           	opt stack 0
 28673                           tblptru	equ	0xFF8
 28674                           tblptrh	equ	0xFF7
 28675                           tblptrl	equ	0xFF6
 28676                           tablat	equ	0xFF5
 28677                           prodh	equ	0xFF4
 28678                           prodl	equ	0xFF3
 28679                           intcon	equ	0xFF2
 28680                           indf0	equ	0xFEF
 28681                           postinc0	equ	0xFEE
 28682                           fsr0h	equ	0xFEA
 28683                           fsr0l	equ	0xFE9
 28684                           wreg	equ	0xFE8
 28685                           indf1	equ	0xFE7
 28686                           postdec1	equ	0xFE5
 28687                           plusw1	equ	0xFE3
 28688                           fsr1h	equ	0xFE2
 28689                           fsr1l	equ	0xFE1
 28690                           indf2	equ	0xFDF
 28691                           postinc2	equ	0xFDE
 28692                           postdec2	equ	0xFDD
 28693                           plusw2	equ	0xFDB
 28694                           fsr2h	equ	0xFDA
 28695                           fsr2l	equ	0xFD9
 28696                           status	equ	0xFD8
 28697                           
 28698 ;; *************** function _DATAEE_WriteByte *****************
 28699 ;; Defined at:
 28700 ;;		line 168 in file "mcc_generated_files/memory.c"
 28701 ;; Parameters:    Size  Location     Type
 28702 ;;  bAdd            2   23[BANK1 ] unsigned int 
 28703 ;;  bData           1   25[BANK1 ] unsigned char 
 28704 ;; Auto vars:     Size  Location     Type
 28705 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 28706 ;; Return value:  Size  Location     Type
 28707 ;;                  1    wreg      void 
 28708 ;; Registers used:
 28709 ;;		wreg, status,2, status,0
 28710 ;; Tracked objects:
 28711 ;;		On entry : 0/0
 28712 ;;		On exit  : 0/0
 28713 ;;		Unchanged: 0/0
 28714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28715 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28716 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28718 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28719 ;;Total ram usage:        4 bytes
 28720 ;; Hardware stack levels used:    1
 28721 ;; Hardware stack levels required when called:   13
 28722 ;; This function calls:
 28723 ;;		Nothing
 28724 ;; This function is called by:
 28725 ;;		_writeDoubleToEEPROM
 28726 ;; This function uses a non-reentrant model
 28727 ;;
 28728                           
 28729                           	psect	text50
 28730  019240                     __ptext50:
 28731                           	opt stack 0
 28732  019240                     _DATAEE_WriteByte:
 28733                           	opt stack 14
 28734                           
 28735                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 28736                           
 28737                           ; BSR set to: 1
 28738                           ;incstack = 0
 28739  019240  0E00               	movlw	0
 28740  019242  BEF2               	btfsc	intcon,7,c	;volatile
 28741  019244  0E01               	movlw	1
 28742  019246  0101               	movlb	1	; () banked
 28743  019248  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 28744                           
 28745                           ; BSR set to: 1
 28746                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 28747  01924A  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 28748  01924C  0B03               	andlw	3
 28749  01924E  6E75               	movwf	3957,c	;volatile
 28750                           
 28751                           ; BSR set to: 1
 28752                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 28753  019250  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 28754                           
 28755                           ; BSR set to: 1
 28756                           ;memory.c: 174: NVMDAT = bData;
 28757  019254  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 28758                           
 28759                           ; BSR set to: 1
 28760                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 28761  019258  0E3F               	movlw	-193
 28762  01925A  1677               	andwf	3959,f,c	;volsfr
 28763                           
 28764                           ; BSR set to: 1
 28765                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 28766  01925C  8477               	bsf	3959,2,c	;volsfr
 28767                           
 28768                           ; BSR set to: 1
 28769                           ;memory.c: 177: INTCONbits.GIE = 0;
 28770  01925E  9EF2               	bcf	intcon,7,c	;volatile
 28771                           
 28772                           ; BSR set to: 1
 28773                           ;memory.c: 178: NVMCON2 = 0x55;
 28774  019260  0E55               	movlw	85
 28775  019262  6E78               	movwf	3960,c	;volsfr
 28776                           
 28777                           ; BSR set to: 1
 28778                           ;memory.c: 179: NVMCON2 = 0xAA;
 28779  019264  0EAA               	movlw	170
 28780  019266  6E78               	movwf	3960,c	;volsfr
 28781                           
 28782                           ; BSR set to: 1
 28783                           ;memory.c: 180: NVMCON1bits.WR = 1;
 28784  019268  8277               	bsf	3959,1,c	;volsfr
 28785  01926A                     
 28786                           ; BSR set to: 1
 28787                           ;memory.c: 183: {
 28788  01926A  B277               	btfsc	3959,1,c	;volsfr
 28789  01926C  D7FE               	goto	l809
 28790                           
 28791                           ;memory.c: 184: }
 28792                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 28793  01926E  9477               	bcf	3959,2,c	;volsfr
 28794                           
 28795                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 28796  019270  0101               	movlb	1	; () banked
 28797  019272  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 28798  019274  D002               	bra	u26295
 28799  019276  9EF2               	bcf	intcon,7,c	;volatile
 28800  019278  D001               	bra	u26296
 28801  01927A                     u26295:
 28802  01927A  8EF2               	bsf	intcon,7,c	;volatile
 28803  01927C                     u26296:
 28804  01927C  0012               	return		;funcret
 28805  01927E                     __end_of_DATAEE_WriteByte:
 28806                           	opt stack 0
 28807                           tblptru	equ	0xFF8
 28808                           tblptrh	equ	0xFF7
 28809                           tblptrl	equ	0xFF6
 28810                           tablat	equ	0xFF5
 28811                           prodh	equ	0xFF4
 28812                           prodl	equ	0xFF3
 28813                           intcon	equ	0xFF2
 28814                           indf0	equ	0xFEF
 28815                           postinc0	equ	0xFEE
 28816                           fsr0h	equ	0xFEA
 28817                           fsr0l	equ	0xFE9
 28818                           wreg	equ	0xFE8
 28819                           indf1	equ	0xFE7
 28820                           postdec1	equ	0xFE5
 28821                           plusw1	equ	0xFE3
 28822                           fsr1h	equ	0xFE2
 28823                           fsr1l	equ	0xFE1
 28824                           indf2	equ	0xFDF
 28825                           postinc2	equ	0xFDE
 28826                           postdec2	equ	0xFDD
 28827                           plusw2	equ	0xFDB
 28828                           fsr2h	equ	0xFDA
 28829                           fsr2l	equ	0xFD9
 28830                           status	equ	0xFD8
 28831                           
 28832 ;; *************** function ___flge *****************
 28833 ;; Defined at:
 28834 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 28835 ;; Parameters:    Size  Location     Type
 28836 ;;  ff1             4   23[BANK1 ] void 
 28837 ;;  ff2             4   27[BANK1 ] void 
 28838 ;; Auto vars:     Size  Location     Type
 28839 ;;		None
 28840 ;; Return value:  Size  Location     Type
 28841 ;;		None               void
 28842 ;; Registers used:
 28843 ;;		wreg, status,2, status,0
 28844 ;; Tracked objects:
 28845 ;;		On entry : 0/0
 28846 ;;		On exit  : 0/0
 28847 ;;		Unchanged: 0/0
 28848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28849 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28851 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28852 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28853 ;;Total ram usage:       12 bytes
 28854 ;; Hardware stack levels used:    1
 28855 ;; Hardware stack levels required when called:   13
 28856 ;; This function calls:
 28857 ;;		Nothing
 28858 ;; This function is called by:
 28859 ;;		_saveSRAMMaxToEEPROM
 28860 ;;		_printf
 28861 ;; This function uses a non-reentrant model
 28862 ;;
 28863                           
 28864                           	psect	text51
 28865  0179F0                     __ptext51:
 28866                           	opt stack 0
 28867  0179F0                     ___flge:
 28868                           	opt stack 14
 28869                           
 28870                           ;incstack = 0
 28871  0179F0  0E00               	movlw	0
 28872  0179F2  0101               	movlb	1	; () banked
 28873  0179F4  1517               	andwf	___flge@ff1& (0+255),w,b
 28874  0179F6  6F1F               	movwf	??___flge& (0+255),b
 28875  0179F8  0E00               	movlw	0
 28876  0179FA  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 28877  0179FC  6F20               	movwf	(??___flge+1)& (0+255),b
 28878  0179FE  0E80               	movlw	128
 28879  017A00  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 28880  017A02  6F21               	movwf	(??___flge+2)& (0+255),b
 28881  017A04  0E7F               	movlw	127
 28882  017A06  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 28883  017A08  6F22               	movwf	(??___flge+3)& (0+255),b
 28884  017A0A  511F               	movf	??___flge& (0+255),w,b
 28885  017A0C  1120               	iorwf	(??___flge+1)& (0+255),w,b
 28886  017A0E  1121               	iorwf	(??___flge+2)& (0+255),w,b
 28887  017A10  1122               	iorwf	(??___flge+3)& (0+255),w,b
 28888  017A12  A4D8               	btfss	status,2,c
 28889  017A14  D008               	goto	l2066
 28890                           
 28891                           ; BSR set to: 1
 28892  017A16  0E00               	movlw	0
 28893  017A18  6F17               	movwf	___flge@ff1& (0+255),b
 28894  017A1A  0E00               	movlw	0
 28895  017A1C  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 28896  017A1E  0E00               	movlw	0
 28897  017A20  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 28898  017A22  0E00               	movlw	0
 28899  017A24  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 28900  017A26                     l2066:
 28901                           
 28902                           ; BSR set to: 1
 28903                           
 28904                           ; BSR set to: 1
 28905  017A26  0E00               	movlw	0
 28906  017A28  151B               	andwf	___flge@ff2& (0+255),w,b
 28907  017A2A  6F1F               	movwf	??___flge& (0+255),b
 28908  017A2C  0E00               	movlw	0
 28909  017A2E  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 28910  017A30  6F20               	movwf	(??___flge+1)& (0+255),b
 28911  017A32  0E80               	movlw	128
 28912  017A34  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 28913  017A36  6F21               	movwf	(??___flge+2)& (0+255),b
 28914  017A38  0E7F               	movlw	127
 28915  017A3A  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 28916  017A3C  6F22               	movwf	(??___flge+3)& (0+255),b
 28917  017A3E  511F               	movf	??___flge& (0+255),w,b
 28918  017A40  1120               	iorwf	(??___flge+1)& (0+255),w,b
 28919  017A42  1121               	iorwf	(??___flge+2)& (0+255),w,b
 28920  017A44  1122               	iorwf	(??___flge+3)& (0+255),w,b
 28921  017A46  A4D8               	btfss	status,2,c
 28922  017A48  D008               	goto	l2067
 28923                           
 28924                           ; BSR set to: 1
 28925  017A4A  0E00               	movlw	0
 28926  017A4C  6F1B               	movwf	___flge@ff2& (0+255),b
 28927  017A4E  0E00               	movlw	0
 28928  017A50  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 28929  017A52  0E00               	movlw	0
 28930  017A54  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 28931  017A56  0E00               	movlw	0
 28932  017A58  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 28933  017A5A                     l2067:
 28934                           
 28935                           ; BSR set to: 1
 28936                           
 28937                           ; BSR set to: 1
 28938  017A5A  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 28939  017A5C  D01D               	goto	l2068
 28940                           
 28941                           ; BSR set to: 1
 28942  017A5E  C117  F11F         	movff	___flge@ff1,??___flge
 28943  017A62  C118  F120         	movff	___flge@ff1+1,??___flge+1
 28944  017A66  C119  F121         	movff	___flge@ff1+2,??___flge+2
 28945  017A6A  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 28946  017A6E  1F1F               	comf	??___flge& (0+255),f,b
 28947  017A70  1F20               	comf	(??___flge+1)& (0+255),f,b
 28948  017A72  1F21               	comf	(??___flge+2)& (0+255),f,b
 28949  017A74  1F22               	comf	(??___flge+3)& (0+255),f,b
 28950  017A76  2B1F               	incf	??___flge& (0+255),f,b
 28951  017A78  0E00               	movlw	0
 28952  017A7A  2320               	addwfc	(??___flge+1)& (0+255),f,b
 28953  017A7C  2321               	addwfc	(??___flge+2)& (0+255),f,b
 28954  017A7E  2322               	addwfc	(??___flge+3)& (0+255),f,b
 28955  017A80  0E00               	movlw	0
 28956  017A82  251F               	addwf	??___flge& (0+255),w,b
 28957  017A84  6F17               	movwf	___flge@ff1& (0+255),b
 28958  017A86  0E00               	movlw	0
 28959  017A88  2120               	addwfc	(??___flge+1)& (0+255),w,b
 28960  017A8A  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 28961  017A8C  0E00               	movlw	0
 28962  017A8E  2121               	addwfc	(??___flge+2)& (0+255),w,b
 28963  017A90  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 28964  017A92  0E80               	movlw	128
 28965  017A94  2122               	addwfc	(??___flge+3)& (0+255),w,b
 28966  017A96  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 28967  017A98                     l2068:
 28968                           
 28969                           ; BSR set to: 1
 28970                           
 28971                           ; BSR set to: 1
 28972  017A98  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 28973  017A9A  D01D               	goto	l2069
 28974                           
 28975                           ; BSR set to: 1
 28976  017A9C  C11B  F11F         	movff	___flge@ff2,??___flge
 28977  017AA0  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 28978  017AA4  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 28979  017AA8  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 28980  017AAC  1F1F               	comf	??___flge& (0+255),f,b
 28981  017AAE  1F20               	comf	(??___flge+1)& (0+255),f,b
 28982  017AB0  1F21               	comf	(??___flge+2)& (0+255),f,b
 28983  017AB2  1F22               	comf	(??___flge+3)& (0+255),f,b
 28984  017AB4  2B1F               	incf	??___flge& (0+255),f,b
 28985  017AB6  0E00               	movlw	0
 28986  017AB8  2320               	addwfc	(??___flge+1)& (0+255),f,b
 28987  017ABA  2321               	addwfc	(??___flge+2)& (0+255),f,b
 28988  017ABC  2322               	addwfc	(??___flge+3)& (0+255),f,b
 28989  017ABE  0E00               	movlw	0
 28990  017AC0  251F               	addwf	??___flge& (0+255),w,b
 28991  017AC2  6F1B               	movwf	___flge@ff2& (0+255),b
 28992  017AC4  0E00               	movlw	0
 28993  017AC6  2120               	addwfc	(??___flge+1)& (0+255),w,b
 28994  017AC8  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 28995  017ACA  0E00               	movlw	0
 28996  017ACC  2121               	addwfc	(??___flge+2)& (0+255),w,b
 28997  017ACE  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 28998  017AD0  0E80               	movlw	128
 28999  017AD2  2122               	addwfc	(??___flge+3)& (0+255),w,b
 29000  017AD4  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 29001  017AD6                     l2069:
 29002                           
 29003                           ; BSR set to: 1
 29004  017AD6  0E00               	movlw	0
 29005  017AD8  1B17               	xorwf	___flge@ff1& (0+255),f,b
 29006  017ADA  0E00               	movlw	0
 29007  017ADC  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 29008  017ADE  0E00               	movlw	0
 29009  017AE0  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 29010  017AE2  0E80               	movlw	128
 29011  017AE4  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 29012  017AE6  0E00               	movlw	0
 29013  017AE8  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 29014  017AEA  0E00               	movlw	0
 29015  017AEC  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 29016  017AEE  0E00               	movlw	0
 29017  017AF0  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 29018  017AF2  0E80               	movlw	128
 29019  017AF4  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 29020  017AF6  511B               	movf	___flge@ff2& (0+255),w,b
 29021  017AF8  5D17               	subwf	___flge@ff1& (0+255),w,b
 29022  017AFA  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 29023  017AFC  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 29024  017AFE  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 29025  017B00  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 29026  017B02  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 29027  017B04  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 29028  017B06  B0D8               	btfsc	status,0,c
 29029  017B08  D002               	goto	l18605
 29030                           
 29031                           ; BSR set to: 1
 29032  017B0A  90D8               	bcf	status,0,c
 29033  017B0C  0012               	return	
 29034  017B0E                     l18605:
 29035                           
 29036                           ; BSR set to: 1
 29037                           
 29038                           ; BSR set to: 1
 29039  017B0E  80D8               	bsf	status,0,c
 29040                           
 29041                           ; BSR set to: 1
 29042  017B10  0012               	return	
 29043  017B12                     __end_of___flge:
 29044                           	opt stack 0
 29045                           tblptru	equ	0xFF8
 29046                           tblptrh	equ	0xFF7
 29047                           tblptrl	equ	0xFF6
 29048                           tablat	equ	0xFF5
 29049                           prodh	equ	0xFF4
 29050                           prodl	equ	0xFF3
 29051                           intcon	equ	0xFF2
 29052                           indf0	equ	0xFEF
 29053                           postinc0	equ	0xFEE
 29054                           fsr0h	equ	0xFEA
 29055                           fsr0l	equ	0xFE9
 29056                           wreg	equ	0xFE8
 29057                           indf1	equ	0xFE7
 29058                           postdec1	equ	0xFE5
 29059                           plusw1	equ	0xFE3
 29060                           fsr1h	equ	0xFE2
 29061                           fsr1l	equ	0xFE1
 29062                           indf2	equ	0xFDF
 29063                           postinc2	equ	0xFDE
 29064                           postdec2	equ	0xFDD
 29065                           plusw2	equ	0xFDB
 29066                           fsr2h	equ	0xFDA
 29067                           fsr2l	equ	0xFD9
 29068                           status	equ	0xFD8
 29069                           
 29070 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 29071 ;; Defined at:
 29072 ;;		line 191 in file "main.c"
 29073 ;; Parameters:    Size  Location     Type
 29074 ;;		None
 29075 ;; Auto vars:     Size  Location     Type
 29076 ;;		None
 29077 ;; Return value:  Size  Location     Type
 29078 ;;                  1    wreg      void 
 29079 ;; Registers used:
 29080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29081 ;; Tracked objects:
 29082 ;;		On entry : 0/0
 29083 ;;		On exit  : 0/0
 29084 ;;		Unchanged: 0/0
 29085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29090 ;;Total ram usage:        0 bytes
 29091 ;; Hardware stack levels used:    1
 29092 ;; Hardware stack levels required when called:   15
 29093 ;; This function calls:
 29094 ;;		_readDoubleFromEEPROM
 29095 ;; This function is called by:
 29096 ;;		_main
 29097 ;; This function uses a non-reentrant model
 29098 ;;
 29099                           
 29100                           	psect	text52
 29101  0172DE                     __ptext52:
 29102                           	opt stack 0
 29103  0172DE                     _recoverSRAMMaxFromEEPROM:
 29104                           	opt stack 15
 29105                           
 29106                           ;main.c: 193: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 29107                           
 29108                           ; BSR set to: 1
 29109                           ;incstack = 0
 29110  0172DE  0E19               	movlw	low _max_Irms_address
 29111  0172E0  6EF6               	movwf	tblptrl,c
 29112  0172E2                     	if	1	;There is more than 1 active tblptr byte
 29113  0172E2  0ED5               	movlw	high _max_Irms_address
 29114  0172E4  6EF7               	movwf	tblptrh,c
 29115  0172E6                     	endif
 29116  0172E6                     	if	1	;There are 3 active tblptr bytes
 29117  0172E6  0E00               	movlw	low (_max_Irms_address shr (0+16))
 29118  0172E8  6EF8               	movwf	tblptru,c
 29119  0172EA                     	endif
 29120  0172EA  0009               	tblrd		*+
 29121  0172EC  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29122  0172F0  000A               	tblrd		*-
 29123  0172F2  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29124  0172F6  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29125  0172FA  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 29126  0172FE  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 29127  017302  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 29128  017306  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 29129                           
 29130                           ;main.c: 194: max_Power = readDoubleFromEEPROM(max_Power_address);
 29131  01730A  0E17               	movlw	low _max_Power_address
 29132  01730C  6EF6               	movwf	tblptrl,c
 29133  01730E                     	if	1	;There is more than 1 active tblptr byte
 29134  01730E  0ED5               	movlw	high _max_Power_address
 29135  017310  6EF7               	movwf	tblptrh,c
 29136  017312                     	endif
 29137  017312                     	if	1	;There are 3 active tblptr bytes
 29138  017312  0E00               	movlw	low (_max_Power_address shr (0+16))
 29139  017314  6EF8               	movwf	tblptru,c
 29140  017316                     	endif
 29141  017316  0009               	tblrd		*+
 29142  017318  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29143  01731C  000A               	tblrd		*-
 29144  01731E  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29145  017322  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29146  017326  C119  F210         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 29147  01732A  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 29148  01732E  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 29149  017332  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 29150                           
 29151                           ;main.c: 195: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 29152  017336  0E15               	movlw	low _max_POS3P3_ADC_Result_address
 29153  017338  6EF6               	movwf	tblptrl,c
 29154  01733A                     	if	1	;There is more than 1 active tblptr byte
 29155  01733A  0ED5               	movlw	high _max_POS3P3_ADC_Result_address
 29156  01733C  6EF7               	movwf	tblptrh,c
 29157  01733E                     	endif
 29158  01733E                     	if	1	;There are 3 active tblptr bytes
 29159  01733E  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 29160  017340  6EF8               	movwf	tblptru,c
 29161  017342                     	endif
 29162  017342  0009               	tblrd		*+
 29163  017344  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29164  017348  000A               	tblrd		*-
 29165  01734A  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29166  01734E  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29167  017352  C119  F20C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 29168  017356  C11A  F20D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 29169  01735A  C11B  F20E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 29170  01735E  C11C  F20F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 29171                           
 29172                           ;main.c: 196: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 29173  017362  0E13               	movlw	low _max_POS12_ADC_Result_address
 29174  017364  6EF6               	movwf	tblptrl,c
 29175  017366                     	if	1	;There is more than 1 active tblptr byte
 29176  017366  0ED5               	movlw	high _max_POS12_ADC_Result_address
 29177  017368  6EF7               	movwf	tblptrh,c
 29178  01736A                     	endif
 29179  01736A                     	if	1	;There are 3 active tblptr bytes
 29180  01736A  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 29181  01736C  6EF8               	movwf	tblptru,c
 29182  01736E                     	endif
 29183  01736E  0009               	tblrd		*+
 29184  017370  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29185  017374  000A               	tblrd		*-
 29186  017376  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29187  01737A  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29188  01737E  C119  F208         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 29189  017382  C11A  F209         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 29190  017386  C11B  F20A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 29191  01738A  C11C  F20B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 29192                           
 29193                           ;main.c: 197: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 29194  01738E  0E11               	movlw	low _max_Temp_ADC_Result_address
 29195  017390  6EF6               	movwf	tblptrl,c
 29196  017392                     	if	1	;There is more than 1 active tblptr byte
 29197  017392  0ED5               	movlw	high _max_Temp_ADC_Result_address
 29198  017394  6EF7               	movwf	tblptrh,c
 29199  017396                     	endif
 29200  017396                     	if	1	;There are 3 active tblptr bytes
 29201  017396  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 29202  017398  6EF8               	movwf	tblptru,c
 29203  01739A                     	endif
 29204  01739A  0009               	tblrd		*+
 29205  01739C  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29206  0173A0  000A               	tblrd		*-
 29207  0173A2  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29208  0173A6  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29209  0173AA  C119  F204         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 29210  0173AE  C11A  F205         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 29211  0173B2  C11B  F206         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 29212  0173B6  C11C  F207         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 29213                           
 29214                           ;main.c: 198: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 29215  0173BA  0E0F               	movlw	low _max_FVR_ADC_Result_address
 29216  0173BC  6EF6               	movwf	tblptrl,c
 29217  0173BE                     	if	1	;There is more than 1 active tblptr byte
 29218  0173BE  0ED5               	movlw	high _max_FVR_ADC_Result_address
 29219  0173C0  6EF7               	movwf	tblptrh,c
 29220  0173C2                     	endif
 29221  0173C2                     	if	1	;There are 3 active tblptr bytes
 29222  0173C2  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 29223  0173C4  6EF8               	movwf	tblptru,c
 29224  0173C6                     	endif
 29225  0173C6  0009               	tblrd		*+
 29226  0173C8  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29227  0173CC  000A               	tblrd		*-
 29228  0173CE  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29229  0173D2  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29230  0173D6  C119  F200         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 29231  0173DA  C11A  F201         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 29232  0173DE  C11B  F202         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 29233  0173E2  C11C  F203         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 29234                           
 29235                           ;main.c: 199: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 29236  0173E6  0E1B               	movlw	low _Total_Energy_address
 29237  0173E8  6EF6               	movwf	tblptrl,c
 29238  0173EA                     	if	1	;There is more than 1 active tblptr byte
 29239  0173EA  0ED5               	movlw	high _Total_Energy_address
 29240  0173EC  6EF7               	movwf	tblptrh,c
 29241  0173EE                     	endif
 29242  0173EE                     	if	1	;There are 3 active tblptr bytes
 29243  0173EE  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 29244  0173F0  6EF8               	movwf	tblptru,c
 29245  0173F2                     	endif
 29246  0173F2  0009               	tblrd		*+
 29247  0173F4  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 29248  0173F8  000A               	tblrd		*-
 29249  0173FA  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 29250  0173FE  ECC9  F0C6         	call	_readDoubleFromEEPROM	;wreg free
 29251  017402  C119  F0F6         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 29252  017406  C11A  F0F7         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 29253  01740A  C11B  F0F8         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 29254  01740E  C11C  F0F9         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 29255  017412  0012               	return		;funcret
 29256  017414                     __end_of_recoverSRAMMaxFromEEPROM:
 29257                           	opt stack 0
 29258                           tblptru	equ	0xFF8
 29259                           tblptrh	equ	0xFF7
 29260                           tblptrl	equ	0xFF6
 29261                           tablat	equ	0xFF5
 29262                           prodh	equ	0xFF4
 29263                           prodl	equ	0xFF3
 29264                           intcon	equ	0xFF2
 29265                           indf0	equ	0xFEF
 29266                           postinc0	equ	0xFEE
 29267                           fsr0h	equ	0xFEA
 29268                           fsr0l	equ	0xFE9
 29269                           wreg	equ	0xFE8
 29270                           indf1	equ	0xFE7
 29271                           postdec1	equ	0xFE5
 29272                           plusw1	equ	0xFE3
 29273                           fsr1h	equ	0xFE2
 29274                           fsr1l	equ	0xFE1
 29275                           indf2	equ	0xFDF
 29276                           postinc2	equ	0xFDE
 29277                           postdec2	equ	0xFDD
 29278                           plusw2	equ	0xFDB
 29279                           fsr2h	equ	0xFDA
 29280                           fsr2l	equ	0xFD9
 29281                           status	equ	0xFD8
 29282                           
 29283 ;; *************** function _readDoubleFromEEPROM *****************
 29284 ;; Defined at:
 29285 ;;		line 22 in file "double_to_EEPROM.c"
 29286 ;; Parameters:    Size  Location     Type
 29287 ;;  starting_add    2   25[BANK1 ] unsigned int 
 29288 ;; Auto vars:     Size  Location     Type
 29289 ;;  byte_index      2   33[BANK1 ] int 
 29290 ;;  output_data     4   29[BANK1 ] struct .
 29291 ;; Return value:  Size  Location     Type
 29292 ;;                  4   25[BANK1 ] struct .
 29293 ;; Registers used:
 29294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29295 ;; Tracked objects:
 29296 ;;		On entry : 0/0
 29297 ;;		On exit  : 0/0
 29298 ;;		Unchanged: 0/0
 29299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29300 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29301 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29303 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29304 ;;Total ram usage:       10 bytes
 29305 ;; Hardware stack levels used:    1
 29306 ;; Hardware stack levels required when called:   14
 29307 ;; This function calls:
 29308 ;;		_DATAEE_ReadByte
 29309 ;; This function is called by:
 29310 ;;		_recoverSRAMMaxFromEEPROM
 29311 ;;		_ringBufferLUT
 29312 ;; This function uses a non-reentrant model
 29313 ;;
 29314                           
 29315                           	psect	text53
 29316  018D92                     __ptext53:
 29317                           	opt stack 0
 29318  018D92                     _readDoubleFromEEPROM:
 29319                           	opt stack 14
 29320                           
 29321                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 29322                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 29323                           
 29324                           ;incstack = 0
 29325  018D92  0E00               	movlw	0
 29326  018D94  0101               	movlb	1	; () banked
 29327  018D96  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 29328  018D98  0E00               	movlw	0
 29329  018D9A  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 29330                           
 29331                           ; BSR set to: 1
 29332  018D9C  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 29333  018D9E  E119               	bnz	l1605
 29334  018DA0  D014               	goto	L8
 29335  018DA2                     
 29336                           ; BSR set to: 1
 29337                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 29338                           
 29339                           ; BSR set to: 1
 29340  018DA2  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 29341  018DA4  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 29342  018DA6  6ED9               	movwf	fsr2l,c
 29343  018DA8  0E01               	movlw	high readDoubleFromEEPROM@output_data
 29344  018DAA  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 29345  018DAC  6EDA               	movwf	fsr2h,c
 29346  018DAE  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 29347  018DB0  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 29348  018DB2  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 29349  018DB4  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 29350  018DB6  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 29351  018DB8  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 29352  018DBA  EC16  F0CC         	call	_DATAEE_ReadByte	;wreg free
 29353  018DBE  6EDF               	movwf	indf2,c
 29354  018DC0  0101               	movlb	1	; () banked
 29355  018DC2  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 29356  018DC4  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 29357                           
 29358                           ; BSR set to: 1
 29359  018DC6  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 29360  018DC8  E104               	bnz	u26400
 29361  018DCA                     L8:
 29362  018DCA  0E04               	movlw	4
 29363  018DCC  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 29364  018DCE  A0D8               	btfss	status,0,c
 29365  018DD0  D7E8               	goto	l1604
 29366  018DD2                     u26400:
 29367  018DD2                     l1605:
 29368                           
 29369                           ; BSR set to: 1
 29370                           ;double_to_EEPROM.c: 32: }
 29371                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 29372  018DD2  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 29373  018DD6  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 29374  018DDA  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 29375  018DDE  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 29376                           
 29377                           ; BSR set to: 1
 29378  018DE2  0012               	return		;funcret
 29379  018DE4                     __end_of_readDoubleFromEEPROM:
 29380                           	opt stack 0
 29381                           tblptru	equ	0xFF8
 29382                           tblptrh	equ	0xFF7
 29383                           tblptrl	equ	0xFF6
 29384                           tablat	equ	0xFF5
 29385                           prodh	equ	0xFF4
 29386                           prodl	equ	0xFF3
 29387                           intcon	equ	0xFF2
 29388                           indf0	equ	0xFEF
 29389                           postinc0	equ	0xFEE
 29390                           fsr0h	equ	0xFEA
 29391                           fsr0l	equ	0xFE9
 29392                           wreg	equ	0xFE8
 29393                           indf1	equ	0xFE7
 29394                           postdec1	equ	0xFE5
 29395                           plusw1	equ	0xFE3
 29396                           fsr1h	equ	0xFE2
 29397                           fsr1l	equ	0xFE1
 29398                           indf2	equ	0xFDF
 29399                           postinc2	equ	0xFDE
 29400                           postdec2	equ	0xFDD
 29401                           plusw2	equ	0xFDB
 29402                           fsr2h	equ	0xFDA
 29403                           fsr2l	equ	0xFD9
 29404                           status	equ	0xFD8
 29405                           
 29406 ;; *************** function _DATAEE_ReadByte *****************
 29407 ;; Defined at:
 29408 ;;		line 190 in file "mcc_generated_files/memory.c"
 29409 ;; Parameters:    Size  Location     Type
 29410 ;;  bAdd            2   23[BANK1 ] unsigned int 
 29411 ;; Auto vars:     Size  Location     Type
 29412 ;;		None
 29413 ;; Return value:  Size  Location     Type
 29414 ;;                  1    wreg      unsigned char 
 29415 ;; Registers used:
 29416 ;;		wreg, status,2, status,0
 29417 ;; Tracked objects:
 29418 ;;		On entry : 0/0
 29419 ;;		On exit  : 0/0
 29420 ;;		Unchanged: 0/0
 29421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29422 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29425 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29426 ;;Total ram usage:        2 bytes
 29427 ;; Hardware stack levels used:    1
 29428 ;; Hardware stack levels required when called:   13
 29429 ;; This function calls:
 29430 ;;		Nothing
 29431 ;; This function is called by:
 29432 ;;		_readDoubleFromEEPROM
 29433 ;; This function uses a non-reentrant model
 29434 ;;
 29435                           
 29436                           	psect	text54
 29437  01982C                     __ptext54:
 29438                           	opt stack 0
 29439  01982C                     _DATAEE_ReadByte:
 29440                           	opt stack 14
 29441                           
 29442                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 29443                           
 29444                           ; BSR set to: 1
 29445                           ;incstack = 0
 29446  01982C  0101               	movlb	1	; () banked
 29447  01982E  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 29448  019830  0B03               	andlw	3
 29449  019832  6E75               	movwf	3957,c	;volatile
 29450                           
 29451                           ; BSR set to: 1
 29452                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 29453  019834  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 29454                           
 29455                           ; BSR set to: 1
 29456                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 29457  019838  0E3F               	movlw	-193
 29458  01983A  1677               	andwf	3959,f,c	;volsfr
 29459                           
 29460                           ; BSR set to: 1
 29461                           ;memory.c: 195: NVMCON1bits.RD = 1;
 29462  01983C  8077               	bsf	3959,0,c	;volsfr
 29463                           
 29464                           ; BSR set to: 1
 29465                           ;memory.c: 196: __nop();
 29466  01983E  F000               	nop	
 29467                           
 29468                           ;memory.c: 197: __nop();
 29469  019840  F000               	nop	
 29470                           
 29471                           ;memory.c: 199: return (NVMDAT);
 29472  019842  5076               	movf	3958,w,c	;volatile
 29473  019844  0012               	return	
 29474  019846                     __end_of_DATAEE_ReadByte:
 29475                           	opt stack 0
 29476                           tblptru	equ	0xFF8
 29477                           tblptrh	equ	0xFF7
 29478                           tblptrl	equ	0xFF6
 29479                           tablat	equ	0xFF5
 29480                           prodh	equ	0xFF4
 29481                           prodl	equ	0xFF3
 29482                           intcon	equ	0xFF2
 29483                           indf0	equ	0xFEF
 29484                           postinc0	equ	0xFEE
 29485                           fsr0h	equ	0xFEA
 29486                           fsr0l	equ	0xFE9
 29487                           wreg	equ	0xFE8
 29488                           indf1	equ	0xFE7
 29489                           postdec1	equ	0xFE5
 29490                           plusw1	equ	0xFE3
 29491                           fsr1h	equ	0xFE2
 29492                           fsr1l	equ	0xFE1
 29493                           indf2	equ	0xFDF
 29494                           postinc2	equ	0xFDE
 29495                           postdec2	equ	0xFDD
 29496                           plusw2	equ	0xFDB
 29497                           fsr2h	equ	0xFDA
 29498                           fsr2l	equ	0xFD9
 29499                           status	equ	0xFD8
 29500                           
 29501 ;; *************** function _getCauseOfReset *****************
 29502 ;; Defined at:
 29503 ;;		line 11 in file "cause_of_reset.c"
 29504 ;; Parameters:    Size  Location     Type
 29505 ;;		None
 29506 ;; Auto vars:     Size  Location     Type
 29507 ;;  return_reset    1   23[BANK1 ] enum E17455
 29508 ;; Return value:  Size  Location     Type
 29509 ;;                  1    wreg      enum E18054
 29510 ;; Registers used:
 29511 ;;		wreg, status,2
 29512 ;; Tracked objects:
 29513 ;;		On entry : 0/0
 29514 ;;		On exit  : 0/0
 29515 ;;		Unchanged: 0/0
 29516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29518 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29520 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29521 ;;Total ram usage:        1 bytes
 29522 ;; Hardware stack levels used:    1
 29523 ;; Hardware stack levels required when called:   13
 29524 ;; This function calls:
 29525 ;;		Nothing
 29526 ;; This function is called by:
 29527 ;;		_main
 29528 ;; This function uses a non-reentrant model
 29529 ;;
 29530                           
 29531                           	psect	text55
 29532  018DE4                     __ptext55:
 29533                           	opt stack 0
 29534  018DE4                     _getCauseOfReset:
 29535                           	opt stack 17
 29536                           
 29537                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 29538                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 29539                           
 29540                           ;incstack = 0
 29541  018DE4  AED7               	btfss	4055,7,c	;volatile
 29542  018DE6  D002               	goto	l1571
 29543                           
 29544                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 29545  018DE8  0E07               	movlw	7
 29546  018DEA  D019               	goto	L15
 29547  018DEC                     l1571:
 29548                           
 29549                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 29550  018DEC  ACD7               	btfss	4055,6,c	;volatile
 29551  018DEE  D002               	goto	l1573
 29552                           
 29553                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 29554  018DF0  0E08               	movlw	8
 29555  018DF2  D015               	goto	L15
 29556  018DF4                     l1573:
 29557                           
 29558                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 29559  018DF4  BAD7               	btfsc	4055,5,c	;volatile
 29560  018DF6  D002               	goto	l1575
 29561                           
 29562                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 29563  018DF8  0E05               	movlw	5
 29564  018DFA  D011               	goto	L15
 29565  018DFC                     l1575:
 29566                           
 29567                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 29568  018DFC  B6D7               	btfsc	4055,3,c	;volatile
 29569  018DFE  D002               	goto	l1577
 29570                           
 29571                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 29572  018E00  0E03               	movlw	3
 29573  018E02  D00D               	goto	L15
 29574  018E04                     l1577:
 29575                           
 29576                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 29577  018E04  B4D7               	btfsc	4055,2,c	;volatile
 29578  018E06  D002               	goto	l1579
 29579                           
 29580                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 29581  018E08  0E06               	movlw	6
 29582  018E0A  D009               	goto	L15
 29583  018E0C                     l1579:
 29584                           
 29585                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 29586  018E0C  B2D7               	btfsc	4055,1,c	;volatile
 29587  018E0E  D002               	goto	l1581
 29588                           
 29589                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 29590  018E10  0E01               	movlw	1
 29591  018E12  D005               	goto	L15
 29592  018E14                     l1581:
 29593                           
 29594                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 29595  018E14  B0D7               	btfsc	4055,0,c	;volatile
 29596  018E16  D002               	goto	l1583
 29597                           
 29598                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 29599  018E18  0E02               	movlw	2
 29600  018E1A  D001               	goto	L15
 29601  018E1C                     l1583:
 29602                           
 29603                           ;cause_of_reset.c: 60: else {
 29604                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 29605                           
 29606                           ; BSR set to: 1
 29607  018E1C  0E00               	movlw	0
 29608  018E1E                     L15:
 29609  018E1E  0101               	movlb	1	; () banked
 29610  018E20  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 29611                           
 29612                           ; BSR set to: 1
 29613                           ;cause_of_reset.c: 64: }
 29614                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 29615                           
 29616                           ; BSR set to: 1
 29617                           
 29618                           ; BSR set to: 1
 29619                           
 29620                           ; BSR set to: 1
 29621                           
 29622                           ; BSR set to: 1
 29623                           
 29624                           ; BSR set to: 1
 29625                           
 29626                           ; BSR set to: 1
 29627                           
 29628                           ; BSR set to: 1
 29629  018E22  9ED7               	bcf	4055,7,c	;volatile
 29630                           
 29631                           ; BSR set to: 1
 29632                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 29633  018E24  9CD7               	bcf	4055,6,c	;volatile
 29634                           
 29635                           ; BSR set to: 1
 29636                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 29637  018E26  8AD7               	bsf	4055,5,c	;volatile
 29638                           
 29639                           ; BSR set to: 1
 29640                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 29641  018E28  88D7               	bsf	4055,4,c	;volatile
 29642                           
 29643                           ; BSR set to: 1
 29644                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 29645  018E2A  86D7               	bsf	4055,3,c	;volatile
 29646                           
 29647                           ; BSR set to: 1
 29648                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 29649  018E2C  84D7               	bsf	4055,2,c	;volatile
 29650                           
 29651                           ; BSR set to: 1
 29652                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 29653  018E2E  82D7               	bsf	4055,1,c	;volatile
 29654                           
 29655                           ; BSR set to: 1
 29656                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 29657  018E30  80D7               	bsf	4055,0,c	;volatile
 29658                           
 29659                           ;cause_of_reset.c: 76: return return_reset_cause;
 29660  018E32  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 29661  018E34  0012               	return	
 29662  018E36                     __end_of_getCauseOfReset:
 29663                           	opt stack 0
 29664                           tblptru	equ	0xFF8
 29665                           tblptrh	equ	0xFF7
 29666                           tblptrl	equ	0xFF6
 29667                           tablat	equ	0xFF5
 29668                           prodh	equ	0xFF4
 29669                           prodl	equ	0xFF3
 29670                           intcon	equ	0xFF2
 29671                           indf0	equ	0xFEF
 29672                           postinc0	equ	0xFEE
 29673                           fsr0h	equ	0xFEA
 29674                           fsr0l	equ	0xFE9
 29675                           wreg	equ	0xFE8
 29676                           indf1	equ	0xFE7
 29677                           postdec1	equ	0xFE5
 29678                           plusw1	equ	0xFE3
 29679                           fsr1h	equ	0xFE2
 29680                           fsr1l	equ	0xFE1
 29681                           indf2	equ	0xFDF
 29682                           postinc2	equ	0xFDE
 29683                           postdec2	equ	0xFDD
 29684                           plusw2	equ	0xFDB
 29685                           fsr2h	equ	0xFDA
 29686                           fsr2l	equ	0xFD9
 29687                           status	equ	0xFD8
 29688                           
 29689 ;; *************** function _SYSTEM_Initialize *****************
 29690 ;; Defined at:
 29691 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29692 ;; Parameters:    Size  Location     Type
 29693 ;;		None
 29694 ;; Auto vars:     Size  Location     Type
 29695 ;;		None
 29696 ;; Return value:  Size  Location     Type
 29697 ;;                  1    wreg      void 
 29698 ;; Registers used:
 29699 ;;		wreg, status,2, status,0, cstack
 29700 ;; Tracked objects:
 29701 ;;		On entry : 0/0
 29702 ;;		On exit  : 0/0
 29703 ;;		Unchanged: 0/0
 29704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29709 ;;Total ram usage:        0 bytes
 29710 ;; Hardware stack levels used:    1
 29711 ;; Hardware stack levels required when called:   15
 29712 ;; This function calls:
 29713 ;;		_ADCC_Initialize
 29714 ;;		_EUSART2_Initialize
 29715 ;;		_EXT_INT_Initialize
 29716 ;;		_FVR_Initialize
 29717 ;;		_HLVD_Initialize
 29718 ;;		_INTERRUPT_Initialize
 29719 ;;		_OSCILLATOR_Initialize
 29720 ;;		_PIN_MANAGER_Initialize
 29721 ;;		_PMD_Initialize
 29722 ;;		_TMR4_Initialize
 29723 ;;		_TMR5_Initialize
 29724 ;;		_TMR6_Initialize
 29725 ;;		_TMR7_Initialize
 29726 ;; This function is called by:
 29727 ;;		_main
 29728 ;; This function uses a non-reentrant model
 29729 ;;
 29730                           
 29731                           	psect	text56
 29732  0193D6                     __ptext56:
 29733                           	opt stack 0
 29734  0193D6                     _SYSTEM_Initialize:
 29735                           	opt stack 15
 29736                           
 29737                           ;mcc.c: 52: INTERRUPT_Initialize();
 29738                           
 29739                           ; BSR set to: 1
 29740                           ;incstack = 0
 29741  0193D6  EC23  F0CC         	call	_INTERRUPT_Initialize	;wreg free
 29742                           
 29743                           ;mcc.c: 53: PMD_Initialize();
 29744  0193DA  ECDF  F0CB         	call	_PMD_Initialize	;wreg free
 29745                           
 29746                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 29747  0193DE  EC4B  F0C1         	call	_PIN_MANAGER_Initialize	;wreg free
 29748                           
 29749                           ;mcc.c: 55: OSCILLATOR_Initialize();
 29750  0193E2  ECED  F0CB         	call	_OSCILLATOR_Initialize	;wreg free
 29751                           
 29752                           ;mcc.c: 56: HLVD_Initialize();
 29753  0193E6  EC85  F0CC         	call	_HLVD_Initialize	;wreg free
 29754                           
 29755                           ;mcc.c: 57: FVR_Initialize();
 29756  0193EA  ECE9  F0CC         	call	_FVR_Initialize	;wreg free
 29757                           
 29758                           ;mcc.c: 58: TMR7_Initialize();
 29759  0193EE  EC9F  F0C6         	call	_TMR7_Initialize	;wreg free
 29760                           
 29761                           ;mcc.c: 59: TMR6_Initialize();
 29762  0193F2  EC55  F0CA         	call	_TMR6_Initialize	;wreg free
 29763                           
 29764                           ;mcc.c: 60: ADCC_Initialize();
 29765  0193F6  EC43  F0C6         	call	_ADCC_Initialize	;wreg free
 29766                           
 29767                           ;mcc.c: 61: TMR4_Initialize();
 29768  0193FA  EC9E  F0CA         	call	_TMR4_Initialize	;wreg free
 29769                           
 29770                           ;mcc.c: 62: TMR5_Initialize();
 29771  0193FE  EC6B  F0C7         	call	_TMR5_Initialize	;wreg free
 29772                           
 29773                           ;mcc.c: 63: EXT_INT_Initialize();
 29774  019402  ECC1  F0CB         	call	_EXT_INT_Initialize	;wreg free
 29775                           
 29776                           ;mcc.c: 64: EUSART2_Initialize();
 29777  019406  EC43  F0C5         	call	_EUSART2_Initialize	;wreg free
 29778  01940A  0012               	return		;funcret
 29779  01940C                     __end_of_SYSTEM_Initialize:
 29780                           	opt stack 0
 29781                           tblptru	equ	0xFF8
 29782                           tblptrh	equ	0xFF7
 29783                           tblptrl	equ	0xFF6
 29784                           tablat	equ	0xFF5
 29785                           prodh	equ	0xFF4
 29786                           prodl	equ	0xFF3
 29787                           intcon	equ	0xFF2
 29788                           indf0	equ	0xFEF
 29789                           postinc0	equ	0xFEE
 29790                           fsr0h	equ	0xFEA
 29791                           fsr0l	equ	0xFE9
 29792                           wreg	equ	0xFE8
 29793                           indf1	equ	0xFE7
 29794                           postdec1	equ	0xFE5
 29795                           plusw1	equ	0xFE3
 29796                           fsr1h	equ	0xFE2
 29797                           fsr1l	equ	0xFE1
 29798                           indf2	equ	0xFDF
 29799                           postinc2	equ	0xFDE
 29800                           postdec2	equ	0xFDD
 29801                           plusw2	equ	0xFDB
 29802                           fsr2h	equ	0xFDA
 29803                           fsr2l	equ	0xFD9
 29804                           status	equ	0xFD8
 29805                           
 29806 ;; *************** function _TMR7_Initialize *****************
 29807 ;; Defined at:
 29808 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 29809 ;; Parameters:    Size  Location     Type
 29810 ;;		None
 29811 ;; Auto vars:     Size  Location     Type
 29812 ;;		None
 29813 ;; Return value:  Size  Location     Type
 29814 ;;                  1    wreg      void 
 29815 ;; Registers used:
 29816 ;;		wreg, status,2, status,0, cstack
 29817 ;; Tracked objects:
 29818 ;;		On entry : 0/0
 29819 ;;		On exit  : 0/0
 29820 ;;		Unchanged: 0/0
 29821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29824 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29825 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29826 ;;Total ram usage:        2 bytes
 29827 ;; Hardware stack levels used:    1
 29828 ;; Hardware stack levels required when called:   14
 29829 ;; This function calls:
 29830 ;;		_TMR7_SetInterruptHandler
 29831 ;; This function is called by:
 29832 ;;		_SYSTEM_Initialize
 29833 ;; This function uses a non-reentrant model
 29834 ;;
 29835                           
 29836                           	psect	text57
 29837  018D3E                     __ptext57:
 29838                           	opt stack 0
 29839  018D3E                     _TMR7_Initialize:
 29840                           	opt stack 15
 29841                           
 29842                           ;tmr7.c: 69: T7GCON = 0x00;
 29843                           
 29844                           ;incstack = 0
 29845  018D3E  0E00               	movlw	0
 29846  018D40  010F               	movlb	15	; () banked
 29847  018D42  6F31               	movwf	49,b	;volatile
 29848                           
 29849                           ;tmr7.c: 72: T7GATE = 0x00;
 29850  018D44  0E00               	movlw	0
 29851  018D46  6F32               	movwf	50,b	;volatile
 29852                           
 29853                           ;tmr7.c: 75: T7CLK = 0x03;
 29854  018D48  0E03               	movlw	3
 29855  018D4A  6F33               	movwf	51,b	;volatile
 29856                           
 29857                           ;tmr7.c: 78: TMR7H = 0xEC;
 29858  018D4C  0EEC               	movlw	236
 29859  018D4E  6F2F               	movwf	47,b	;volatile
 29860                           
 29861                           ;tmr7.c: 81: TMR7L = 0x78;
 29862  018D50  0E78               	movlw	120
 29863  018D52  6F2E               	movwf	46,b	;volatile
 29864                           
 29865                           ; BSR set to: 15
 29866                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 29867  018D54  512E               	movf	46,w,b	;volatile
 29868  018D56  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 29869  018D5A  0101               	movlb	1	; () banked
 29870  018D5C  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 29871  018D5E  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 29872  018D62  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 29873  018D64  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 29874  018D66  0102               	movlb	2	; () banked
 29875  018D68  6F46               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 29876  018D6A  0101               	movlb	1	; () banked
 29877  018D6C  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 29878  018D6E  0102               	movlb	2	; () banked
 29879  018D70  6F47               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 29880                           
 29881                           ; BSR set to: 2
 29882                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 29883  018D72  010E               	movlb	14	; () banked
 29884  018D74  9D38               	bcf	56,6,b	;volatile
 29885                           
 29886                           ; BSR set to: 14
 29887                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 29888  018D76  8D2E               	bsf	46,6,b	;volatile
 29889                           
 29890                           ; BSR set to: 14
 29891                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 29892  018D78  0E0A               	movlw	low _TMR7_DefaultInterruptHandler
 29893  018D7A  0101               	movlb	1	; () banked
 29894  018D7C  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 29895  018D7E  0E9A               	movlw	high _TMR7_DefaultInterruptHandler
 29896  018D80  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 29897  018D82  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 29898  018D84  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 29899  018D86  EC94  F0CC         	call	_TMR7_SetInterruptHandler	;wreg free
 29900                           
 29901                           ;tmr7.c: 96: T7CON = 0x31;
 29902  018D8A  0E31               	movlw	49
 29903  018D8C  010F               	movlb	15	; () banked
 29904  018D8E  6F30               	movwf	48,b	;volatile
 29905                           
 29906                           ; BSR set to: 15
 29907  018D90  0012               	return		;funcret
 29908  018D92                     __end_of_TMR7_Initialize:
 29909                           	opt stack 0
 29910                           tblptru	equ	0xFF8
 29911                           tblptrh	equ	0xFF7
 29912                           tblptrl	equ	0xFF6
 29913                           tablat	equ	0xFF5
 29914                           prodh	equ	0xFF4
 29915                           prodl	equ	0xFF3
 29916                           intcon	equ	0xFF2
 29917                           indf0	equ	0xFEF
 29918                           postinc0	equ	0xFEE
 29919                           fsr0h	equ	0xFEA
 29920                           fsr0l	equ	0xFE9
 29921                           wreg	equ	0xFE8
 29922                           indf1	equ	0xFE7
 29923                           postdec1	equ	0xFE5
 29924                           plusw1	equ	0xFE3
 29925                           fsr1h	equ	0xFE2
 29926                           fsr1l	equ	0xFE1
 29927                           indf2	equ	0xFDF
 29928                           postinc2	equ	0xFDE
 29929                           postdec2	equ	0xFDD
 29930                           plusw2	equ	0xFDB
 29931                           fsr2h	equ	0xFDA
 29932                           fsr2l	equ	0xFD9
 29933                           status	equ	0xFD8
 29934                           
 29935 ;; *************** function _TMR7_SetInterruptHandler *****************
 29936 ;; Defined at:
 29937 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 29938 ;; Parameters:    Size  Location     Type
 29939 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 29940 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 29941 ;; Auto vars:     Size  Location     Type
 29942 ;;		None
 29943 ;; Return value:  Size  Location     Type
 29944 ;;                  1    wreg      void 
 29945 ;; Registers used:
 29946 ;;		wreg, status,2, status,0
 29947 ;; Tracked objects:
 29948 ;;		On entry : 0/0
 29949 ;;		On exit  : 0/0
 29950 ;;		Unchanged: 0/0
 29951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29952 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29955 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29956 ;;Total ram usage:        3 bytes
 29957 ;; Hardware stack levels used:    1
 29958 ;; Hardware stack levels required when called:   13
 29959 ;; This function calls:
 29960 ;;		Nothing
 29961 ;; This function is called by:
 29962 ;;		_TMR7_Initialize
 29963 ;;		_main
 29964 ;; This function uses a non-reentrant model
 29965 ;;
 29966                           
 29967                           	psect	text58
 29968  019928                     __ptext58:
 29969                           	opt stack 0
 29970  019928                     _TMR7_SetInterruptHandler:
 29971                           	opt stack 17
 29972                           
 29973                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 29974                           
 29975                           ; BSR set to: 15
 29976                           ;incstack = 0
 29977  019928  C117  F231         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 29978  01992C  C118  F232         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 29979  019930  C119  F233         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 29980  019934  0012               	return		;funcret
 29981  019936                     __end_of_TMR7_SetInterruptHandler:
 29982                           	opt stack 0
 29983                           tblptru	equ	0xFF8
 29984                           tblptrh	equ	0xFF7
 29985                           tblptrl	equ	0xFF6
 29986                           tablat	equ	0xFF5
 29987                           prodh	equ	0xFF4
 29988                           prodl	equ	0xFF3
 29989                           intcon	equ	0xFF2
 29990                           indf0	equ	0xFEF
 29991                           postinc0	equ	0xFEE
 29992                           fsr0h	equ	0xFEA
 29993                           fsr0l	equ	0xFE9
 29994                           wreg	equ	0xFE8
 29995                           indf1	equ	0xFE7
 29996                           postdec1	equ	0xFE5
 29997                           plusw1	equ	0xFE3
 29998                           fsr1h	equ	0xFE2
 29999                           fsr1l	equ	0xFE1
 30000                           indf2	equ	0xFDF
 30001                           postinc2	equ	0xFDE
 30002                           postdec2	equ	0xFDD
 30003                           plusw2	equ	0xFDB
 30004                           fsr2h	equ	0xFDA
 30005                           fsr2l	equ	0xFD9
 30006                           status	equ	0xFD8
 30007                           
 30008 ;; *************** function _TMR6_Initialize *****************
 30009 ;; Defined at:
 30010 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 30011 ;; Parameters:    Size  Location     Type
 30012 ;;		None
 30013 ;; Auto vars:     Size  Location     Type
 30014 ;;		None
 30015 ;; Return value:  Size  Location     Type
 30016 ;;                  1    wreg      void 
 30017 ;; Registers used:
 30018 ;;		wreg, status,2, status,0, cstack
 30019 ;; Tracked objects:
 30020 ;;		On entry : 0/0
 30021 ;;		On exit  : 0/0
 30022 ;;		Unchanged: 0/0
 30023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30028 ;;Total ram usage:        0 bytes
 30029 ;; Hardware stack levels used:    1
 30030 ;; Hardware stack levels required when called:   14
 30031 ;; This function calls:
 30032 ;;		_TMR6_SetInterruptHandler
 30033 ;; This function is called by:
 30034 ;;		_SYSTEM_Initialize
 30035 ;; This function uses a non-reentrant model
 30036 ;;
 30037                           
 30038                           	psect	text59
 30039  0194AA                     __ptext59:
 30040                           	opt stack 0
 30041  0194AA                     _TMR6_Initialize:
 30042                           	opt stack 15
 30043                           
 30044                           ;tmr6.c: 69: T6CLKCON = 0x04;
 30045                           
 30046                           ;incstack = 0
 30047  0194AA  0E04               	movlw	4
 30048  0194AC  6EB3               	movwf	4019,c	;volatile
 30049                           
 30050                           ;tmr6.c: 72: T6HLT = 0x20;
 30051  0194AE  0E20               	movlw	32
 30052  0194B0  6EB2               	movwf	4018,c	;volatile
 30053                           
 30054                           ;tmr6.c: 75: T6RST = 0x00;
 30055  0194B2  0E00               	movlw	0
 30056  0194B4  6EB4               	movwf	4020,c	;volatile
 30057                           
 30058                           ;tmr6.c: 78: T6PR = 0xF1;
 30059  0194B6  0EF1               	movlw	241
 30060  0194B8  6EB0               	movwf	4016,c	;volatile
 30061                           
 30062                           ;tmr6.c: 81: T6TMR = 0x00;
 30063  0194BA  0E00               	movlw	0
 30064  0194BC  6EAF               	movwf	4015,c	;volatile
 30065                           
 30066                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 30067  0194BE  010E               	movlb	14	; () banked
 30068  0194C0  9B38               	bcf	56,5,b	;volatile
 30069                           
 30070                           ; BSR set to: 14
 30071                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 30072  0194C2  8B2E               	bsf	46,5,b	;volatile
 30073                           
 30074                           ; BSR set to: 14
 30075                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 30076  0194C4  0E0C               	movlw	low _TMR6_DefaultInterruptHandler
 30077  0194C6  0101               	movlb	1	; () banked
 30078  0194C8  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 30079  0194CA  0E9A               	movlw	high _TMR6_DefaultInterruptHandler
 30080  0194CC  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30081  0194CE  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30082  0194D0  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 30083  0194D2  EC9B  F0CC         	call	_TMR6_SetInterruptHandler	;wreg free
 30084                           
 30085                           ;tmr6.c: 93: T6CON = 0xBF;
 30086  0194D6  0EBF               	movlw	191
 30087  0194D8  6EB1               	movwf	4017,c	;volatile
 30088  0194DA  0012               	return		;funcret
 30089  0194DC                     __end_of_TMR6_Initialize:
 30090                           	opt stack 0
 30091                           tblptru	equ	0xFF8
 30092                           tblptrh	equ	0xFF7
 30093                           tblptrl	equ	0xFF6
 30094                           tablat	equ	0xFF5
 30095                           prodh	equ	0xFF4
 30096                           prodl	equ	0xFF3
 30097                           intcon	equ	0xFF2
 30098                           indf0	equ	0xFEF
 30099                           postinc0	equ	0xFEE
 30100                           fsr0h	equ	0xFEA
 30101                           fsr0l	equ	0xFE9
 30102                           wreg	equ	0xFE8
 30103                           indf1	equ	0xFE7
 30104                           postdec1	equ	0xFE5
 30105                           plusw1	equ	0xFE3
 30106                           fsr1h	equ	0xFE2
 30107                           fsr1l	equ	0xFE1
 30108                           indf2	equ	0xFDF
 30109                           postinc2	equ	0xFDE
 30110                           postdec2	equ	0xFDD
 30111                           plusw2	equ	0xFDB
 30112                           fsr2h	equ	0xFDA
 30113                           fsr2l	equ	0xFD9
 30114                           status	equ	0xFD8
 30115                           
 30116 ;; *************** function _TMR6_SetInterruptHandler *****************
 30117 ;; Defined at:
 30118 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 30119 ;; Parameters:    Size  Location     Type
 30120 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30121 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 30122 ;; Auto vars:     Size  Location     Type
 30123 ;;		None
 30124 ;; Return value:  Size  Location     Type
 30125 ;;                  1    wreg      void 
 30126 ;; Registers used:
 30127 ;;		wreg, status,2, status,0
 30128 ;; Tracked objects:
 30129 ;;		On entry : 0/0
 30130 ;;		On exit  : 0/0
 30131 ;;		Unchanged: 0/0
 30132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30133 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30136 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30137 ;;Total ram usage:        3 bytes
 30138 ;; Hardware stack levels used:    1
 30139 ;; Hardware stack levels required when called:   13
 30140 ;; This function calls:
 30141 ;;		Nothing
 30142 ;; This function is called by:
 30143 ;;		_TMR6_Initialize
 30144 ;;		_main
 30145 ;; This function uses a non-reentrant model
 30146 ;;
 30147                           
 30148                           	psect	text60
 30149  019936                     __ptext60:
 30150                           	opt stack 0
 30151  019936                     _TMR6_SetInterruptHandler:
 30152                           	opt stack 17
 30153                           
 30154                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 30155                           
 30156                           ;incstack = 0
 30157  019936  C117  F237         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 30158  01993A  C118  F238         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 30159  01993E  C119  F239         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 30160  019942  0012               	return		;funcret
 30161  019944                     __end_of_TMR6_SetInterruptHandler:
 30162                           	opt stack 0
 30163                           tblptru	equ	0xFF8
 30164                           tblptrh	equ	0xFF7
 30165                           tblptrl	equ	0xFF6
 30166                           tablat	equ	0xFF5
 30167                           prodh	equ	0xFF4
 30168                           prodl	equ	0xFF3
 30169                           intcon	equ	0xFF2
 30170                           indf0	equ	0xFEF
 30171                           postinc0	equ	0xFEE
 30172                           fsr0h	equ	0xFEA
 30173                           fsr0l	equ	0xFE9
 30174                           wreg	equ	0xFE8
 30175                           indf1	equ	0xFE7
 30176                           postdec1	equ	0xFE5
 30177                           plusw1	equ	0xFE3
 30178                           fsr1h	equ	0xFE2
 30179                           fsr1l	equ	0xFE1
 30180                           indf2	equ	0xFDF
 30181                           postinc2	equ	0xFDE
 30182                           postdec2	equ	0xFDD
 30183                           plusw2	equ	0xFDB
 30184                           fsr2h	equ	0xFDA
 30185                           fsr2l	equ	0xFD9
 30186                           status	equ	0xFD8
 30187                           
 30188 ;; *************** function _TMR5_Initialize *****************
 30189 ;; Defined at:
 30190 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;		None
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;		None
 30195 ;; Return value:  Size  Location     Type
 30196 ;;                  1    wreg      void 
 30197 ;; Registers used:
 30198 ;;		wreg, status,2, status,0, cstack
 30199 ;; Tracked objects:
 30200 ;;		On entry : 0/0
 30201 ;;		On exit  : 0/0
 30202 ;;		Unchanged: 0/0
 30203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30206 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30207 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30208 ;;Total ram usage:        2 bytes
 30209 ;; Hardware stack levels used:    1
 30210 ;; Hardware stack levels required when called:   14
 30211 ;; This function calls:
 30212 ;;		_TMR5_SetInterruptHandler
 30213 ;; This function is called by:
 30214 ;;		_SYSTEM_Initialize
 30215 ;; This function uses a non-reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text61
 30219  018ED6                     __ptext61:
 30220                           	opt stack 0
 30221  018ED6                     _TMR5_Initialize:
 30222                           	opt stack 15
 30223                           
 30224                           ;tmr5.c: 69: T5GCON = 0x00;
 30225                           
 30226                           ;incstack = 0
 30227  018ED6  0E00               	movlw	0
 30228  018ED8  6EC4               	movwf	4036,c	;volatile
 30229                           
 30230                           ;tmr5.c: 72: T5GATE = 0x00;
 30231  018EDA  0E00               	movlw	0
 30232  018EDC  6EC5               	movwf	4037,c	;volatile
 30233                           
 30234                           ;tmr5.c: 75: T5CLK = 0x01;
 30235  018EDE  0E01               	movlw	1
 30236  018EE0  6EC6               	movwf	4038,c	;volatile
 30237                           
 30238                           ;tmr5.c: 78: TMR5H = 0x00;
 30239  018EE2  0E00               	movlw	0
 30240  018EE4  6EC2               	movwf	4034,c	;volatile
 30241                           
 30242                           ;tmr5.c: 81: TMR5L = 0x00;
 30243  018EE6  0E00               	movlw	0
 30244  018EE8  6EC1               	movwf	4033,c	;volatile
 30245                           
 30246                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 30247  018EEA  50C1               	movf	4033,w,c	;volatile
 30248  018EEC  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 30249  018EF0  0101               	movlb	1	; () banked
 30250  018EF2  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 30251  018EF4  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 30252  018EF8  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 30253  018EFA  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 30254  018EFC  0102               	movlb	2	; () banked
 30255  018EFE  6F44               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30256  018F00  0101               	movlb	1	; () banked
 30257  018F02  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 30258  018F04  0102               	movlb	2	; () banked
 30259  018F06  6F45               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30260                           
 30261                           ; BSR set to: 2
 30262                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 30263  018F08  010E               	movlb	14	; () banked
 30264  018F0A  9938               	bcf	56,4,b	;volatile
 30265                           
 30266                           ; BSR set to: 14
 30267                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 30268  018F0C  892E               	bsf	46,4,b	;volatile
 30269                           
 30270                           ; BSR set to: 14
 30271                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 30272  018F0E  0E0E               	movlw	low _TMR5_DefaultInterruptHandler
 30273  018F10  0101               	movlb	1	; () banked
 30274  018F12  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 30275  018F14  0E9A               	movlw	high _TMR5_DefaultInterruptHandler
 30276  018F16  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30277  018F18  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30278  018F1A  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 30279  018F1C  ECA2  F0CC         	call	_TMR5_SetInterruptHandler	;wreg free
 30280                           
 30281                           ;tmr5.c: 96: T5CON = 0x13;
 30282  018F20  0E13               	movlw	19
 30283  018F22  6EC3               	movwf	4035,c	;volatile
 30284  018F24  0012               	return		;funcret
 30285  018F26                     __end_of_TMR5_Initialize:
 30286                           	opt stack 0
 30287                           tblptru	equ	0xFF8
 30288                           tblptrh	equ	0xFF7
 30289                           tblptrl	equ	0xFF6
 30290                           tablat	equ	0xFF5
 30291                           prodh	equ	0xFF4
 30292                           prodl	equ	0xFF3
 30293                           intcon	equ	0xFF2
 30294                           indf0	equ	0xFEF
 30295                           postinc0	equ	0xFEE
 30296                           fsr0h	equ	0xFEA
 30297                           fsr0l	equ	0xFE9
 30298                           wreg	equ	0xFE8
 30299                           indf1	equ	0xFE7
 30300                           postdec1	equ	0xFE5
 30301                           plusw1	equ	0xFE3
 30302                           fsr1h	equ	0xFE2
 30303                           fsr1l	equ	0xFE1
 30304                           indf2	equ	0xFDF
 30305                           postinc2	equ	0xFDE
 30306                           postdec2	equ	0xFDD
 30307                           plusw2	equ	0xFDB
 30308                           fsr2h	equ	0xFDA
 30309                           fsr2l	equ	0xFD9
 30310                           status	equ	0xFD8
 30311                           
 30312 ;; *************** function _TMR5_SetInterruptHandler *****************
 30313 ;; Defined at:
 30314 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 30315 ;; Parameters:    Size  Location     Type
 30316 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30317 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 30318 ;; Auto vars:     Size  Location     Type
 30319 ;;		None
 30320 ;; Return value:  Size  Location     Type
 30321 ;;                  1    wreg      void 
 30322 ;; Registers used:
 30323 ;;		wreg, status,2, status,0
 30324 ;; Tracked objects:
 30325 ;;		On entry : 0/0
 30326 ;;		On exit  : 0/0
 30327 ;;		Unchanged: 0/0
 30328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30329 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30332 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30333 ;;Total ram usage:        3 bytes
 30334 ;; Hardware stack levels used:    1
 30335 ;; Hardware stack levels required when called:   13
 30336 ;; This function calls:
 30337 ;;		Nothing
 30338 ;; This function is called by:
 30339 ;;		_TMR5_Initialize
 30340 ;;		_main
 30341 ;; This function uses a non-reentrant model
 30342 ;;
 30343                           
 30344                           	psect	text62
 30345  019944                     __ptext62:
 30346                           	opt stack 0
 30347  019944                     _TMR5_SetInterruptHandler:
 30348                           	opt stack 17
 30349                           
 30350                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 30351                           
 30352                           ;incstack = 0
 30353  019944  C117  F22E         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 30354  019948  C118  F22F         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 30355  01994C  C119  F230         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 30356  019950  0012               	return		;funcret
 30357  019952                     __end_of_TMR5_SetInterruptHandler:
 30358                           	opt stack 0
 30359                           tblptru	equ	0xFF8
 30360                           tblptrh	equ	0xFF7
 30361                           tblptrl	equ	0xFF6
 30362                           tablat	equ	0xFF5
 30363                           prodh	equ	0xFF4
 30364                           prodl	equ	0xFF3
 30365                           intcon	equ	0xFF2
 30366                           indf0	equ	0xFEF
 30367                           postinc0	equ	0xFEE
 30368                           fsr0h	equ	0xFEA
 30369                           fsr0l	equ	0xFE9
 30370                           wreg	equ	0xFE8
 30371                           indf1	equ	0xFE7
 30372                           postdec1	equ	0xFE5
 30373                           plusw1	equ	0xFE3
 30374                           fsr1h	equ	0xFE2
 30375                           fsr1l	equ	0xFE1
 30376                           indf2	equ	0xFDF
 30377                           postinc2	equ	0xFDE
 30378                           postdec2	equ	0xFDD
 30379                           plusw2	equ	0xFDB
 30380                           fsr2h	equ	0xFDA
 30381                           fsr2l	equ	0xFD9
 30382                           status	equ	0xFD8
 30383                           
 30384 ;; *************** function _TMR4_Initialize *****************
 30385 ;; Defined at:
 30386 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 30387 ;; Parameters:    Size  Location     Type
 30388 ;;		None
 30389 ;; Auto vars:     Size  Location     Type
 30390 ;;		None
 30391 ;; Return value:  Size  Location     Type
 30392 ;;                  1    wreg      void 
 30393 ;; Registers used:
 30394 ;;		wreg, status,2, status,0, cstack
 30395 ;; Tracked objects:
 30396 ;;		On entry : 0/0
 30397 ;;		On exit  : 0/0
 30398 ;;		Unchanged: 0/0
 30399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30404 ;;Total ram usage:        0 bytes
 30405 ;; Hardware stack levels used:    1
 30406 ;; Hardware stack levels required when called:   14
 30407 ;; This function calls:
 30408 ;;		_TMR4_SetInterruptHandler
 30409 ;; This function is called by:
 30410 ;;		_SYSTEM_Initialize
 30411 ;; This function uses a non-reentrant model
 30412 ;;
 30413                           
 30414                           	psect	text63
 30415  01953C                     __ptext63:
 30416                           	opt stack 0
 30417  01953C                     _TMR4_Initialize:
 30418                           	opt stack 15
 30419                           
 30420                           ;tmr4.c: 69: T4CLKCON = 0x04;
 30421                           
 30422                           ;incstack = 0
 30423  01953C  0E04               	movlw	4
 30424  01953E  6EB9               	movwf	4025,c	;volatile
 30425                           
 30426                           ;tmr4.c: 72: T4HLT = 0xA0;
 30427  019540  0EA0               	movlw	160
 30428  019542  6EB8               	movwf	4024,c	;volatile
 30429                           
 30430                           ;tmr4.c: 75: T4RST = 0x00;
 30431  019544  0E00               	movlw	0
 30432  019546  6EBA               	movwf	4026,c	;volatile
 30433                           
 30434                           ;tmr4.c: 78: T4PR = 0xE2;
 30435  019548  0EE2               	movlw	226
 30436  01954A  6EB6               	movwf	4022,c	;volatile
 30437                           
 30438                           ;tmr4.c: 81: T4TMR = 0x00;
 30439  01954C  0E00               	movlw	0
 30440  01954E  6EB5               	movwf	4021,c	;volatile
 30441                           
 30442                           ;tmr4.c: 84: PIR5bits.TMR4IF = 0;
 30443  019550  010E               	movlb	14	; () banked
 30444  019552  9738               	bcf	56,3,b	;volatile
 30445                           
 30446                           ; BSR set to: 14
 30447                           ;tmr4.c: 87: PIE5bits.TMR4IE = 1;
 30448  019554  872E               	bsf	46,3,b	;volatile
 30449                           
 30450                           ; BSR set to: 14
 30451                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 30452  019556  0E10               	movlw	low _TMR4_DefaultInterruptHandler
 30453  019558  0101               	movlb	1	; () banked
 30454  01955A  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 30455  01955C  0E9A               	movlw	high _TMR4_DefaultInterruptHandler
 30456  01955E  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30457  019560  0E01               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
 30458  019562  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 30459  019564  ECA9  F0CC         	call	_TMR4_SetInterruptHandler	;wreg free
 30460                           
 30461                           ;tmr4.c: 93: T4CON = 0xFF;
 30462  019568  68B7               	setf	4023,c	;volatile
 30463  01956A  0012               	return		;funcret
 30464  01956C                     __end_of_TMR4_Initialize:
 30465                           	opt stack 0
 30466                           tblptru	equ	0xFF8
 30467                           tblptrh	equ	0xFF7
 30468                           tblptrl	equ	0xFF6
 30469                           tablat	equ	0xFF5
 30470                           prodh	equ	0xFF4
 30471                           prodl	equ	0xFF3
 30472                           intcon	equ	0xFF2
 30473                           indf0	equ	0xFEF
 30474                           postinc0	equ	0xFEE
 30475                           fsr0h	equ	0xFEA
 30476                           fsr0l	equ	0xFE9
 30477                           wreg	equ	0xFE8
 30478                           indf1	equ	0xFE7
 30479                           postdec1	equ	0xFE5
 30480                           plusw1	equ	0xFE3
 30481                           fsr1h	equ	0xFE2
 30482                           fsr1l	equ	0xFE1
 30483                           indf2	equ	0xFDF
 30484                           postinc2	equ	0xFDE
 30485                           postdec2	equ	0xFDD
 30486                           plusw2	equ	0xFDB
 30487                           fsr2h	equ	0xFDA
 30488                           fsr2l	equ	0xFD9
 30489                           status	equ	0xFD8
 30490                           
 30491 ;; *************** function _TMR4_SetInterruptHandler *****************
 30492 ;; Defined at:
 30493 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 30494 ;; Parameters:    Size  Location     Type
 30495 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30496 ;;		 -> writeEnergyToEEPROMCallback(1), TMR4_DefaultInterruptHandler(1), 
 30497 ;; Auto vars:     Size  Location     Type
 30498 ;;		None
 30499 ;; Return value:  Size  Location     Type
 30500 ;;                  1    wreg      void 
 30501 ;; Registers used:
 30502 ;;		wreg, status,2, status,0
 30503 ;; Tracked objects:
 30504 ;;		On entry : 0/0
 30505 ;;		On exit  : 0/0
 30506 ;;		Unchanged: 0/0
 30507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30508 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30511 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30512 ;;Total ram usage:        3 bytes
 30513 ;; Hardware stack levels used:    1
 30514 ;; Hardware stack levels required when called:   13
 30515 ;; This function calls:
 30516 ;;		Nothing
 30517 ;; This function is called by:
 30518 ;;		_TMR4_Initialize
 30519 ;;		_main
 30520 ;; This function uses a non-reentrant model
 30521 ;;
 30522                           
 30523                           	psect	text64
 30524  019952                     __ptext64:
 30525                           	opt stack 0
 30526  019952                     _TMR4_SetInterruptHandler:
 30527                           	opt stack 17
 30528                           
 30529                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
 30530                           
 30531                           ;incstack = 0
 30532  019952  C117  F228         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 30533  019956  C118  F229         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 30534  01995A  C119  F22A         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
 30535  01995E  0012               	return		;funcret
 30536  019960                     __end_of_TMR4_SetInterruptHandler:
 30537                           	opt stack 0
 30538                           tblptru	equ	0xFF8
 30539                           tblptrh	equ	0xFF7
 30540                           tblptrl	equ	0xFF6
 30541                           tablat	equ	0xFF5
 30542                           prodh	equ	0xFF4
 30543                           prodl	equ	0xFF3
 30544                           intcon	equ	0xFF2
 30545                           indf0	equ	0xFEF
 30546                           postinc0	equ	0xFEE
 30547                           fsr0h	equ	0xFEA
 30548                           fsr0l	equ	0xFE9
 30549                           wreg	equ	0xFE8
 30550                           indf1	equ	0xFE7
 30551                           postdec1	equ	0xFE5
 30552                           plusw1	equ	0xFE3
 30553                           fsr1h	equ	0xFE2
 30554                           fsr1l	equ	0xFE1
 30555                           indf2	equ	0xFDF
 30556                           postinc2	equ	0xFDE
 30557                           postdec2	equ	0xFDD
 30558                           plusw2	equ	0xFDB
 30559                           fsr2h	equ	0xFDA
 30560                           fsr2l	equ	0xFD9
 30561                           status	equ	0xFD8
 30562                           
 30563 ;; *************** function _PMD_Initialize *****************
 30564 ;; Defined at:
 30565 ;;		line 85 in file "mcc_generated_files/mcc.c"
 30566 ;; Parameters:    Size  Location     Type
 30567 ;;		None
 30568 ;; Auto vars:     Size  Location     Type
 30569 ;;		None
 30570 ;; Return value:  Size  Location     Type
 30571 ;;                  1    wreg      void 
 30572 ;; Registers used:
 30573 ;;		wreg, status,2
 30574 ;; Tracked objects:
 30575 ;;		On entry : 0/0
 30576 ;;		On exit  : 0/0
 30577 ;;		Unchanged: 0/0
 30578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30583 ;;Total ram usage:        0 bytes
 30584 ;; Hardware stack levels used:    1
 30585 ;; Hardware stack levels required when called:   13
 30586 ;; This function calls:
 30587 ;;		Nothing
 30588 ;; This function is called by:
 30589 ;;		_SYSTEM_Initialize
 30590 ;; This function uses a non-reentrant model
 30591 ;;
 30592                           
 30593                           	psect	text65
 30594  0197BE                     __ptext65:
 30595                           	opt stack 0
 30596  0197BE                     _PMD_Initialize:
 30597                           	opt stack 16
 30598                           
 30599                           ;mcc.c: 88: PMD0 = 0x1A;
 30600                           
 30601                           ;incstack = 0
 30602  0197BE  0E1A               	movlw	26
 30603  0197C0  010E               	movlb	14	; () banked
 30604  0197C2  6F4C               	movwf	76,b	;volatile
 30605                           
 30606                           ;mcc.c: 90: PMD1 = 0x00;
 30607  0197C4  0E00               	movlw	0
 30608  0197C6  6F4D               	movwf	77,b	;volatile
 30609                           
 30610                           ;mcc.c: 92: PMD2 = 0x2E;
 30611  0197C8  0E2E               	movlw	46
 30612  0197CA  6F4E               	movwf	78,b	;volatile
 30613                           
 30614                           ;mcc.c: 94: PMD3 = 0x4F;
 30615  0197CC  0E4F               	movlw	79
 30616  0197CE  6F4F               	movwf	79,b	;volatile
 30617                           
 30618                           ;mcc.c: 96: PMD4 = 0x7F;
 30619  0197D0  0E7F               	movlw	127
 30620  0197D2  6F50               	movwf	80,b	;volatile
 30621                           
 30622                           ;mcc.c: 98: PMD5 = 0x74;
 30623  0197D4  0E74               	movlw	116
 30624  0197D6  6F51               	movwf	81,b	;volatile
 30625                           
 30626                           ; BSR set to: 14
 30627  0197D8  0012               	return		;funcret
 30628  0197DA                     __end_of_PMD_Initialize:
 30629                           	opt stack 0
 30630                           tblptru	equ	0xFF8
 30631                           tblptrh	equ	0xFF7
 30632                           tblptrl	equ	0xFF6
 30633                           tablat	equ	0xFF5
 30634                           prodh	equ	0xFF4
 30635                           prodl	equ	0xFF3
 30636                           intcon	equ	0xFF2
 30637                           indf0	equ	0xFEF
 30638                           postinc0	equ	0xFEE
 30639                           fsr0h	equ	0xFEA
 30640                           fsr0l	equ	0xFE9
 30641                           wreg	equ	0xFE8
 30642                           indf1	equ	0xFE7
 30643                           postdec1	equ	0xFE5
 30644                           plusw1	equ	0xFE3
 30645                           fsr1h	equ	0xFE2
 30646                           fsr1l	equ	0xFE1
 30647                           indf2	equ	0xFDF
 30648                           postinc2	equ	0xFDE
 30649                           postdec2	equ	0xFDD
 30650                           plusw2	equ	0xFDB
 30651                           fsr2h	equ	0xFDA
 30652                           fsr2l	equ	0xFD9
 30653                           status	equ	0xFD8
 30654                           
 30655 ;; *************** function _PIN_MANAGER_Initialize *****************
 30656 ;; Defined at:
 30657 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30658 ;; Parameters:    Size  Location     Type
 30659 ;;		None
 30660 ;; Auto vars:     Size  Location     Type
 30661 ;;		None
 30662 ;; Return value:  Size  Location     Type
 30663 ;;                  1    wreg      void 
 30664 ;; Registers used:
 30665 ;;		wreg, status,2
 30666 ;; Tracked objects:
 30667 ;;		On entry : 0/0
 30668 ;;		On exit  : 0/0
 30669 ;;		Unchanged: 0/0
 30670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30675 ;;Total ram usage:        0 bytes
 30676 ;; Hardware stack levels used:    1
 30677 ;; Hardware stack levels required when called:   13
 30678 ;; This function calls:
 30679 ;;		Nothing
 30680 ;; This function is called by:
 30681 ;;		_SYSTEM_Initialize
 30682 ;; This function uses a non-reentrant model
 30683 ;;
 30684                           
 30685                           	psect	text66
 30686  018296                     __ptext66:
 30687                           	opt stack 0
 30688  018296                     _PIN_MANAGER_Initialize:
 30689                           	opt stack 16
 30690                           
 30691                           ;pin_manager.c: 62: LATE = 0x00;
 30692                           
 30693                           ; BSR set to: 14
 30694                           ;incstack = 0
 30695  018296  0E00               	movlw	0
 30696  018298  6E7D               	movwf	3965,c	;volatile
 30697                           
 30698                           ;pin_manager.c: 63: LATD = 0x00;
 30699  01829A  0E00               	movlw	0
 30700  01829C  6E7C               	movwf	3964,c	;volatile
 30701                           
 30702                           ;pin_manager.c: 64: LATA = 0x00;
 30703  01829E  0E00               	movlw	0
 30704  0182A0  6E79               	movwf	3961,c	;volatile
 30705                           
 30706                           ;pin_manager.c: 65: LATF = 0x00;
 30707  0182A2  0E00               	movlw	0
 30708  0182A4  6E7E               	movwf	3966,c	;volatile
 30709                           
 30710                           ;pin_manager.c: 66: LATB = 0x00;
 30711  0182A6  0E00               	movlw	0
 30712  0182A8  6E7A               	movwf	3962,c	;volatile
 30713                           
 30714                           ;pin_manager.c: 67: LATG = 0x00;
 30715  0182AA  0E00               	movlw	0
 30716  0182AC  6E7F               	movwf	3967,c	;volatile
 30717                           
 30718                           ;pin_manager.c: 68: LATC = 0x00;
 30719  0182AE  0E00               	movlw	0
 30720  0182B0  6E7B               	movwf	3963,c	;volatile
 30721                           
 30722                           ;pin_manager.c: 69: LATH = 0x00;
 30723  0182B2  0E00               	movlw	0
 30724  0182B4  6E80               	movwf	3968,c	;volatile
 30725                           
 30726                           ;pin_manager.c: 74: TRISE = 0x04;
 30727  0182B6  0E04               	movlw	4
 30728  0182B8  6E85               	movwf	3973,c	;volatile
 30729                           
 30730                           ;pin_manager.c: 75: TRISF = 0x00;
 30731  0182BA  0E00               	movlw	0
 30732  0182BC  6E86               	movwf	3974,c	;volatile
 30733                           
 30734                           ;pin_manager.c: 76: TRISA = 0xBD;
 30735  0182BE  0EBD               	movlw	189
 30736  0182C0  6E81               	movwf	3969,c	;volatile
 30737                           
 30738                           ;pin_manager.c: 77: TRISG = 0x40;
 30739  0182C2  0E40               	movlw	64
 30740  0182C4  6E87               	movwf	3975,c	;volatile
 30741                           
 30742                           ;pin_manager.c: 78: TRISB = 0x00;
 30743  0182C6  0E00               	movlw	0
 30744  0182C8  6E82               	movwf	3970,c	;volatile
 30745                           
 30746                           ;pin_manager.c: 79: TRISH = 0x00;
 30747  0182CA  0E00               	movlw	0
 30748  0182CC  6E88               	movwf	3976,c	;volatile
 30749                           
 30750                           ;pin_manager.c: 80: TRISC = 0xC0;
 30751  0182CE  0EC0               	movlw	192
 30752  0182D0  6E83               	movwf	3971,c	;volatile
 30753                           
 30754                           ;pin_manager.c: 81: TRISD = 0x00;
 30755  0182D2  0E00               	movlw	0
 30756  0182D4  6E84               	movwf	3972,c	;volatile
 30757                           
 30758                           ;pin_manager.c: 86: ANSELD = 0x00;
 30759  0182D6  0E00               	movlw	0
 30760  0182D8  010E               	movlb	14	; () banked
 30761  0182DA  6FA7               	movwf	167,b	;volatile
 30762                           
 30763                           ;pin_manager.c: 87: ANSELB = 0x00;
 30764  0182DC  0E00               	movlw	0
 30765  0182DE  6F9A               	movwf	154,b	;volatile
 30766                           
 30767                           ;pin_manager.c: 88: ANSELE = 0x04;
 30768  0182E0  0E04               	movlw	4
 30769  0182E2  6FAF               	movwf	175,b	;volatile
 30770                           
 30771                           ;pin_manager.c: 89: ANSELG = 0x20;
 30772  0182E4  0E20               	movlw	32
 30773  0182E6  6FBC               	movwf	188,b	;volatile
 30774                           
 30775                           ;pin_manager.c: 90: ANSELF = 0x00;
 30776  0182E8  0E00               	movlw	0
 30777  0182EA  6FB4               	movwf	180,b	;volatile
 30778                           
 30779                           ;pin_manager.c: 91: ANSELA = 0x9D;
 30780  0182EC  0E9D               	movlw	157
 30781  0182EE  6F92               	movwf	146,b	;volatile
 30782                           
 30783                           ;pin_manager.c: 96: WPUD = 0x00;
 30784  0182F0  0E00               	movlw	0
 30785  0182F2  6FA6               	movwf	166,b	;volatile
 30786                           
 30787                           ;pin_manager.c: 97: WPUF = 0x00;
 30788  0182F4  0E00               	movlw	0
 30789  0182F6  6FB3               	movwf	179,b	;volatile
 30790                           
 30791                           ;pin_manager.c: 98: WPUE = 0x00;
 30792  0182F8  0E00               	movlw	0
 30793  0182FA  6FAE               	movwf	174,b	;volatile
 30794                           
 30795                           ;pin_manager.c: 99: WPUB = 0x00;
 30796  0182FC  0E00               	movlw	0
 30797  0182FE  6F99               	movwf	153,b	;volatile
 30798                           
 30799                           ;pin_manager.c: 100: WPUG = 0x00;
 30800  018300  0E00               	movlw	0
 30801  018302  6FBB               	movwf	187,b	;volatile
 30802                           
 30803                           ;pin_manager.c: 101: WPUA = 0x00;
 30804  018304  0E00               	movlw	0
 30805  018306  6F91               	movwf	145,b	;volatile
 30806                           
 30807                           ;pin_manager.c: 102: WPUC = 0x00;
 30808  018308  0E00               	movlw	0
 30809  01830A  6FA1               	movwf	161,b	;volatile
 30810                           
 30811                           ;pin_manager.c: 103: WPUH = 0x00;
 30812  01830C  0E00               	movlw	0
 30813  01830E  6FC0               	movwf	192,b	;volatile
 30814                           
 30815                           ;pin_manager.c: 108: ODCONE = 0x00;
 30816  018310  0E00               	movlw	0
 30817  018312  6FAD               	movwf	173,b	;volatile
 30818                           
 30819                           ;pin_manager.c: 109: ODCONF = 0x01;
 30820  018314  0E01               	movlw	1
 30821  018316  6FB2               	movwf	178,b	;volatile
 30822                           
 30823                           ;pin_manager.c: 110: ODCONA = 0x00;
 30824  018318  0E00               	movlw	0
 30825  01831A  6F90               	movwf	144,b	;volatile
 30826                           
 30827                           ;pin_manager.c: 111: ODCONG = 0x00;
 30828  01831C  0E00               	movlw	0
 30829  01831E  6FBA               	movwf	186,b	;volatile
 30830                           
 30831                           ;pin_manager.c: 112: ODCONB = 0x00;
 30832  018320  0E00               	movlw	0
 30833  018322  6F98               	movwf	152,b	;volatile
 30834                           
 30835                           ;pin_manager.c: 113: ODCONH = 0x00;
 30836  018324  0E00               	movlw	0
 30837  018326  6FBF               	movwf	191,b	;volatile
 30838                           
 30839                           ;pin_manager.c: 114: ODCONC = 0x00;
 30840  018328  0E00               	movlw	0
 30841  01832A  6FA0               	movwf	160,b	;volatile
 30842                           
 30843                           ;pin_manager.c: 115: ODCOND = 0x00;
 30844  01832C  0E00               	movlw	0
 30845  01832E  6FA5               	movwf	165,b	;volatile
 30846                           
 30847                           ; BSR set to: 14
 30848                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 30849  018330  698F               	setf	143,b	;volatile
 30850                           
 30851                           ; BSR set to: 14
 30852                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 30853  018332  6997               	setf	151,b	;volatile
 30854                           
 30855                           ; BSR set to: 14
 30856                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 30857  018334  699F               	setf	159,b	;volatile
 30858                           
 30859                           ; BSR set to: 14
 30860                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 30861  018336  69A4               	setf	164,b	;volatile
 30862                           
 30863                           ; BSR set to: 14
 30864                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 30865  018338  69AC               	setf	172,b	;volatile
 30866                           
 30867                           ; BSR set to: 14
 30868                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 30869  01833A  69B1               	setf	177,b	;volatile
 30870                           
 30871                           ; BSR set to: 14
 30872                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 30873  01833C  69B9               	setf	185,b	;volatile
 30874                           
 30875                           ; BSR set to: 14
 30876                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 30877  01833E  69BE               	setf	190,b	;volatile
 30878                           
 30879                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 30880  018340  0E0E               	movlw	14
 30881  018342  6F89               	movwf	137,b	;volatile
 30882                           
 30883                           ;pin_manager.c: 137: INT0PPS = 0x05;
 30884  018344  0E05               	movlw	5
 30885  018346  010D               	movlb	13	; () banked
 30886  018348  6FF0               	movwf	240,b	;volatile
 30887                           
 30888                           ;pin_manager.c: 138: RX2PPS = 0x36;
 30889  01834A  0E36               	movlw	54
 30890  01834C  010E               	movlb	14	; () banked
 30891  01834E  6F11               	movwf	17,b	;volatile
 30892                           
 30893                           ; BSR set to: 14
 30894  018350  0012               	return		;funcret
 30895  018352                     __end_of_PIN_MANAGER_Initialize:
 30896                           	opt stack 0
 30897                           tblptru	equ	0xFF8
 30898                           tblptrh	equ	0xFF7
 30899                           tblptrl	equ	0xFF6
 30900                           tablat	equ	0xFF5
 30901                           prodh	equ	0xFF4
 30902                           prodl	equ	0xFF3
 30903                           intcon	equ	0xFF2
 30904                           indf0	equ	0xFEF
 30905                           postinc0	equ	0xFEE
 30906                           fsr0h	equ	0xFEA
 30907                           fsr0l	equ	0xFE9
 30908                           wreg	equ	0xFE8
 30909                           indf1	equ	0xFE7
 30910                           postdec1	equ	0xFE5
 30911                           plusw1	equ	0xFE3
 30912                           fsr1h	equ	0xFE2
 30913                           fsr1l	equ	0xFE1
 30914                           indf2	equ	0xFDF
 30915                           postinc2	equ	0xFDE
 30916                           postdec2	equ	0xFDD
 30917                           plusw2	equ	0xFDB
 30918                           fsr2h	equ	0xFDA
 30919                           fsr2l	equ	0xFD9
 30920                           status	equ	0xFD8
 30921                           
 30922 ;; *************** function _OSCILLATOR_Initialize *****************
 30923 ;; Defined at:
 30924 ;;		line 67 in file "mcc_generated_files/mcc.c"
 30925 ;; Parameters:    Size  Location     Type
 30926 ;;		None
 30927 ;; Auto vars:     Size  Location     Type
 30928 ;;		None
 30929 ;; Return value:  Size  Location     Type
 30930 ;;                  1    wreg      void 
 30931 ;; Registers used:
 30932 ;;		wreg, status,2
 30933 ;; Tracked objects:
 30934 ;;		On entry : 0/0
 30935 ;;		On exit  : 0/0
 30936 ;;		Unchanged: 0/0
 30937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30942 ;;Total ram usage:        0 bytes
 30943 ;; Hardware stack levels used:    1
 30944 ;; Hardware stack levels required when called:   13
 30945 ;; This function calls:
 30946 ;;		Nothing
 30947 ;; This function is called by:
 30948 ;;		_SYSTEM_Initialize
 30949 ;; This function uses a non-reentrant model
 30950 ;;
 30951                           
 30952                           	psect	text67
 30953  0197DA                     __ptext67:
 30954                           	opt stack 0
 30955  0197DA                     _OSCILLATOR_Initialize:
 30956                           	opt stack 16
 30957                           
 30958                           ;mcc.c: 70: OSCCON1 = 0x20;
 30959                           
 30960                           ; BSR set to: 14
 30961                           ;incstack = 0
 30962  0197DA  0E20               	movlw	32
 30963  0197DC  010E               	movlb	14	; () banked
 30964  0197DE  6F43               	movwf	67,b	;volatile
 30965                           
 30966                           ;mcc.c: 72: OSCCON3 = 0x00;
 30967  0197E0  0E00               	movlw	0
 30968  0197E2  6F45               	movwf	69,b	;volatile
 30969                           
 30970                           ;mcc.c: 74: OSCEN = 0x00;
 30971  0197E4  0E00               	movlw	0
 30972  0197E6  6F47               	movwf	71,b	;volatile
 30973                           
 30974                           ;mcc.c: 76: OSCFRQ = 0x02;
 30975  0197E8  0E02               	movlw	2
 30976  0197EA  6F49               	movwf	73,b	;volatile
 30977                           
 30978                           ;mcc.c: 78: OSCTUNE = 0x00;
 30979  0197EC  0E00               	movlw	0
 30980  0197EE  6F48               	movwf	72,b	;volatile
 30981  0197F0                     
 30982                           ; BSR set to: 14
 30983                           
 30984                           ; BSR set to: 14
 30985                           ;mcc.c: 81: {
 30986  0197F0  B146               	btfsc	70,0,b	;volatile
 30987  0197F2  0012               	return	
 30988  0197F4  D7FD               	goto	l61
 30989  0197F6                     __end_of_OSCILLATOR_Initialize:
 30990                           	opt stack 0
 30991                           tblptru	equ	0xFF8
 30992                           tblptrh	equ	0xFF7
 30993                           tblptrl	equ	0xFF6
 30994                           tablat	equ	0xFF5
 30995                           prodh	equ	0xFF4
 30996                           prodl	equ	0xFF3
 30997                           intcon	equ	0xFF2
 30998                           indf0	equ	0xFEF
 30999                           postinc0	equ	0xFEE
 31000                           fsr0h	equ	0xFEA
 31001                           fsr0l	equ	0xFE9
 31002                           wreg	equ	0xFE8
 31003                           indf1	equ	0xFE7
 31004                           postdec1	equ	0xFE5
 31005                           plusw1	equ	0xFE3
 31006                           fsr1h	equ	0xFE2
 31007                           fsr1l	equ	0xFE1
 31008                           indf2	equ	0xFDF
 31009                           postinc2	equ	0xFDE
 31010                           postdec2	equ	0xFDD
 31011                           plusw2	equ	0xFDB
 31012                           fsr2h	equ	0xFDA
 31013                           fsr2l	equ	0xFD9
 31014                           status	equ	0xFD8
 31015                           
 31016 ;; *************** function _INTERRUPT_Initialize *****************
 31017 ;; Defined at:
 31018 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31019 ;; Parameters:    Size  Location     Type
 31020 ;;		None
 31021 ;; Auto vars:     Size  Location     Type
 31022 ;;		None
 31023 ;; Return value:  Size  Location     Type
 31024 ;;                  1    wreg      void 
 31025 ;; Registers used:
 31026 ;;		None
 31027 ;; Tracked objects:
 31028 ;;		On entry : 0/0
 31029 ;;		On exit  : 0/0
 31030 ;;		Unchanged: 0/0
 31031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31036 ;;Total ram usage:        0 bytes
 31037 ;; Hardware stack levels used:    1
 31038 ;; Hardware stack levels required when called:   13
 31039 ;; This function calls:
 31040 ;;		Nothing
 31041 ;; This function is called by:
 31042 ;;		_SYSTEM_Initialize
 31043 ;; This function uses a non-reentrant model
 31044 ;;
 31045                           
 31046                           	psect	text68
 31047  019846                     __ptext68:
 31048                           	opt stack 0
 31049  019846                     _INTERRUPT_Initialize:
 31050                           	opt stack 16
 31051                           
 31052                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 31053                           
 31054                           ; BSR set to: 14
 31055                           ;incstack = 0
 31056  019846  8AF2               	bsf	intcon,5,c	;volatile
 31057                           
 31058                           ;interrupt_manager.c: 60: IPR5bits.TMR4IP = 1;
 31059  019848  010E               	movlb	14	; () banked
 31060  01984A  8724               	bsf	36,3,b	;volatile
 31061                           
 31062                           ;interrupt_manager.c: 63: IPR2bits.HLVDIP = 1;
 31063  01984C  8F21               	bsf	33,7,b	;volatile
 31064                           
 31065                           ;interrupt_manager.c: 66: IPR0bits.INT0IP = 1;
 31066  01984E  811F               	bsf	31,0,b	;volatile
 31067                           
 31068                           ;interrupt_manager.c: 69: IPR3bits.RC2IP = 1;
 31069  019850  8F22               	bsf	34,7,b	;volatile
 31070                           
 31071                           ;interrupt_manager.c: 72: IPR5bits.TMR5IP = 1;
 31072  019852  8924               	bsf	36,4,b	;volatile
 31073                           
 31074                           ;interrupt_manager.c: 75: IPR1bits.ADTIP = 1;
 31075  019854  8320               	bsf	32,1,b	;volatile
 31076                           
 31077                           ;interrupt_manager.c: 79: IPR5bits.TMR6IP = 0;
 31078  019856  9B24               	bcf	36,5,b	;volatile
 31079                           
 31080                           ;interrupt_manager.c: 82: IPR3bits.TX2IP = 0;
 31081  019858  9D22               	bcf	34,6,b	;volatile
 31082                           
 31083                           ;interrupt_manager.c: 85: IPR5bits.TMR7IP = 0;
 31084  01985A  9D24               	bcf	36,6,b	;volatile
 31085                           
 31086                           ; BSR set to: 14
 31087  01985C  0012               	return		;funcret
 31088  01985E                     __end_of_INTERRUPT_Initialize:
 31089                           	opt stack 0
 31090                           tblptru	equ	0xFF8
 31091                           tblptrh	equ	0xFF7
 31092                           tblptrl	equ	0xFF6
 31093                           tablat	equ	0xFF5
 31094                           prodh	equ	0xFF4
 31095                           prodl	equ	0xFF3
 31096                           intcon	equ	0xFF2
 31097                           indf0	equ	0xFEF
 31098                           postinc0	equ	0xFEE
 31099                           fsr0h	equ	0xFEA
 31100                           fsr0l	equ	0xFE9
 31101                           wreg	equ	0xFE8
 31102                           indf1	equ	0xFE7
 31103                           postdec1	equ	0xFE5
 31104                           plusw1	equ	0xFE3
 31105                           fsr1h	equ	0xFE2
 31106                           fsr1l	equ	0xFE1
 31107                           indf2	equ	0xFDF
 31108                           postinc2	equ	0xFDE
 31109                           postdec2	equ	0xFDD
 31110                           plusw2	equ	0xFDB
 31111                           fsr2h	equ	0xFDA
 31112                           fsr2l	equ	0xFD9
 31113                           status	equ	0xFD8
 31114                           
 31115 ;; *************** function _HLVD_Initialize *****************
 31116 ;; Defined at:
 31117 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 31118 ;; Parameters:    Size  Location     Type
 31119 ;;		None
 31120 ;; Auto vars:     Size  Location     Type
 31121 ;;		None
 31122 ;; Return value:  Size  Location     Type
 31123 ;;                  1    wreg      void 
 31124 ;; Registers used:
 31125 ;;		wreg, status,2
 31126 ;; Tracked objects:
 31127 ;;		On entry : 0/0
 31128 ;;		On exit  : 0/0
 31129 ;;		Unchanged: 0/0
 31130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31135 ;;Total ram usage:        0 bytes
 31136 ;; Hardware stack levels used:    1
 31137 ;; Hardware stack levels required when called:   13
 31138 ;; This function calls:
 31139 ;;		Nothing
 31140 ;; This function is called by:
 31141 ;;		_SYSTEM_Initialize
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text69
 31146  01990A                     __ptext69:
 31147                           	opt stack 0
 31148  01990A                     _HLVD_Initialize:
 31149                           	opt stack 16
 31150                           
 31151                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 31152                           
 31153                           ; BSR set to: 14
 31154                           ;incstack = 0
 31155  01990A  0E07               	movlw	7
 31156  01990C  010E               	movlb	14	; () banked
 31157  01990E  6FC3               	movwf	195,b	;volatile
 31158                           
 31159                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 31160  019910  0E81               	movlw	129
 31161  019912  6FC2               	movwf	194,b	;volatile
 31162                           
 31163                           ; BSR set to: 14
 31164                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 31165  019914  9F35               	bcf	53,7,b	;volatile
 31166                           
 31167                           ; BSR set to: 14
 31168                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 31169  019916  8F2B               	bsf	43,7,b	;volatile
 31170                           
 31171                           ; BSR set to: 14
 31172  019918  0012               	return		;funcret
 31173  01991A                     __end_of_HLVD_Initialize:
 31174                           	opt stack 0
 31175                           tblptru	equ	0xFF8
 31176                           tblptrh	equ	0xFF7
 31177                           tblptrl	equ	0xFF6
 31178                           tablat	equ	0xFF5
 31179                           prodh	equ	0xFF4
 31180                           prodl	equ	0xFF3
 31181                           intcon	equ	0xFF2
 31182                           indf0	equ	0xFEF
 31183                           postinc0	equ	0xFEE
 31184                           fsr0h	equ	0xFEA
 31185                           fsr0l	equ	0xFE9
 31186                           wreg	equ	0xFE8
 31187                           indf1	equ	0xFE7
 31188                           postdec1	equ	0xFE5
 31189                           plusw1	equ	0xFE3
 31190                           fsr1h	equ	0xFE2
 31191                           fsr1l	equ	0xFE1
 31192                           indf2	equ	0xFDF
 31193                           postinc2	equ	0xFDE
 31194                           postdec2	equ	0xFDD
 31195                           plusw2	equ	0xFDB
 31196                           fsr2h	equ	0xFDA
 31197                           fsr2l	equ	0xFD9
 31198                           status	equ	0xFD8
 31199                           
 31200 ;; *************** function _FVR_Initialize *****************
 31201 ;; Defined at:
 31202 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31203 ;; Parameters:    Size  Location     Type
 31204 ;;		None
 31205 ;; Auto vars:     Size  Location     Type
 31206 ;;		None
 31207 ;; Return value:  Size  Location     Type
 31208 ;;                  1    wreg      void 
 31209 ;; Registers used:
 31210 ;;		wreg, status,2
 31211 ;; Tracked objects:
 31212 ;;		On entry : 0/0
 31213 ;;		On exit  : 0/0
 31214 ;;		Unchanged: 0/0
 31215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31220 ;;Total ram usage:        0 bytes
 31221 ;; Hardware stack levels used:    1
 31222 ;; Hardware stack levels required when called:   13
 31223 ;; This function calls:
 31224 ;;		Nothing
 31225 ;; This function is called by:
 31226 ;;		_SYSTEM_Initialize
 31227 ;; This function uses a non-reentrant model
 31228 ;;
 31229                           
 31230                           	psect	text70
 31231  0199D2                     __ptext70:
 31232                           	opt stack 0
 31233  0199D2                     _FVR_Initialize:
 31234                           	opt stack 16
 31235                           
 31236                           ;fvr.c: 61: FVRCON = 0xA6;
 31237                           
 31238                           ; BSR set to: 14
 31239                           ;incstack = 0
 31240  0199D2  0EA6               	movlw	166
 31241  0199D4  010E               	movlb	14	; () banked
 31242  0199D6  6FC4               	movwf	196,b	;volatile
 31243                           
 31244                           ; BSR set to: 14
 31245  0199D8  0012               	return		;funcret
 31246  0199DA                     __end_of_FVR_Initialize:
 31247                           	opt stack 0
 31248                           tblptru	equ	0xFF8
 31249                           tblptrh	equ	0xFF7
 31250                           tblptrl	equ	0xFF6
 31251                           tablat	equ	0xFF5
 31252                           prodh	equ	0xFF4
 31253                           prodl	equ	0xFF3
 31254                           intcon	equ	0xFF2
 31255                           indf0	equ	0xFEF
 31256                           postinc0	equ	0xFEE
 31257                           fsr0h	equ	0xFEA
 31258                           fsr0l	equ	0xFE9
 31259                           wreg	equ	0xFE8
 31260                           indf1	equ	0xFE7
 31261                           postdec1	equ	0xFE5
 31262                           plusw1	equ	0xFE3
 31263                           fsr1h	equ	0xFE2
 31264                           fsr1l	equ	0xFE1
 31265                           indf2	equ	0xFDF
 31266                           postinc2	equ	0xFDE
 31267                           postdec2	equ	0xFDD
 31268                           plusw2	equ	0xFDB
 31269                           fsr2h	equ	0xFDA
 31270                           fsr2l	equ	0xFD9
 31271                           status	equ	0xFD8
 31272                           
 31273 ;; *************** function _EXT_INT_Initialize *****************
 31274 ;; Defined at:
 31275 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 31276 ;; Parameters:    Size  Location     Type
 31277 ;;		None
 31278 ;; Auto vars:     Size  Location     Type
 31279 ;;		None
 31280 ;; Return value:  Size  Location     Type
 31281 ;;                  1    wreg      void 
 31282 ;; Registers used:
 31283 ;;		wreg, status,2, status,0, cstack
 31284 ;; Tracked objects:
 31285 ;;		On entry : 0/0
 31286 ;;		On exit  : 0/0
 31287 ;;		Unchanged: 0/0
 31288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31293 ;;Total ram usage:        0 bytes
 31294 ;; Hardware stack levels used:    1
 31295 ;; Hardware stack levels required when called:   14
 31296 ;; This function calls:
 31297 ;;		_INT0_SetInterruptHandler
 31298 ;; This function is called by:
 31299 ;;		_SYSTEM_Initialize
 31300 ;; This function uses a non-reentrant model
 31301 ;;
 31302                           
 31303                           	psect	text71
 31304  019782                     __ptext71:
 31305                           	opt stack 0
 31306  019782                     _EXT_INT_Initialize:
 31307                           	opt stack 15
 31308                           
 31309                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 31310                           
 31311                           ; BSR set to: 14
 31312                           ;incstack = 0
 31313  019782  010E               	movlb	14	; () banked
 31314  019784  9133               	bcf	51,0,b	;volatile
 31315                           
 31316                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 31317  019786  80F2               	bsf	intcon,0,c	;volatile
 31318                           
 31319                           ; BSR set to: 14
 31320                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 31321  019788  0E12               	movlw	low _INT0_DefaultInterruptHandler
 31322  01978A  0101               	movlb	1	; () banked
 31323  01978C  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 31324  01978E  0E9A               	movlw	high _INT0_DefaultInterruptHandler
 31325  019790  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 31326  019792  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31327  019794  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 31328  019796  ECB0  F0CC         	call	_INT0_SetInterruptHandler	;wreg free
 31329                           
 31330                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 31331  01979A  010E               	movlb	14	; () banked
 31332  01979C  8129               	bsf	41,0,b	;volatile
 31333                           
 31334                           ; BSR set to: 14
 31335  01979E  0012               	return		;funcret
 31336  0197A0                     __end_of_EXT_INT_Initialize:
 31337                           	opt stack 0
 31338                           tblptru	equ	0xFF8
 31339                           tblptrh	equ	0xFF7
 31340                           tblptrl	equ	0xFF6
 31341                           tablat	equ	0xFF5
 31342                           prodh	equ	0xFF4
 31343                           prodl	equ	0xFF3
 31344                           intcon	equ	0xFF2
 31345                           indf0	equ	0xFEF
 31346                           postinc0	equ	0xFEE
 31347                           fsr0h	equ	0xFEA
 31348                           fsr0l	equ	0xFE9
 31349                           wreg	equ	0xFE8
 31350                           indf1	equ	0xFE7
 31351                           postdec1	equ	0xFE5
 31352                           plusw1	equ	0xFE3
 31353                           fsr1h	equ	0xFE2
 31354                           fsr1l	equ	0xFE1
 31355                           indf2	equ	0xFDF
 31356                           postinc2	equ	0xFDE
 31357                           postdec2	equ	0xFDD
 31358                           plusw2	equ	0xFDB
 31359                           fsr2h	equ	0xFDA
 31360                           fsr2l	equ	0xFD9
 31361                           status	equ	0xFD8
 31362                           
 31363 ;; *************** function _INT0_SetInterruptHandler *****************
 31364 ;; Defined at:
 31365 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 31366 ;; Parameters:    Size  Location     Type
 31367 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 31368 ;;		 -> dimmingOffTimeCallback(1), INT0_DefaultInterruptHandler(1), 
 31369 ;; Auto vars:     Size  Location     Type
 31370 ;;		None
 31371 ;; Return value:  Size  Location     Type
 31372 ;;                  1    wreg      void 
 31373 ;; Registers used:
 31374 ;;		wreg, status,2, status,0
 31375 ;; Tracked objects:
 31376 ;;		On entry : 0/0
 31377 ;;		On exit  : 0/0
 31378 ;;		Unchanged: 0/0
 31379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31380 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31383 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31384 ;;Total ram usage:        3 bytes
 31385 ;; Hardware stack levels used:    1
 31386 ;; Hardware stack levels required when called:   13
 31387 ;; This function calls:
 31388 ;;		Nothing
 31389 ;; This function is called by:
 31390 ;;		_EXT_INT_Initialize
 31391 ;;		_main
 31392 ;; This function uses a non-reentrant model
 31393 ;;
 31394                           
 31395                           	psect	text72
 31396  019960                     __ptext72:
 31397                           	opt stack 0
 31398  019960                     _INT0_SetInterruptHandler:
 31399                           	opt stack 15
 31400                           
 31401                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 31402                           
 31403                           ; BSR set to: 14
 31404                           ;incstack = 0
 31405  019960  C117  F22B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 31406  019964  C118  F22C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 31407  019968  C119  F22D         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 31408  01996C  0012               	return		;funcret
 31409  01996E                     __end_of_INT0_SetInterruptHandler:
 31410                           	opt stack 0
 31411                           tblptru	equ	0xFF8
 31412                           tblptrh	equ	0xFF7
 31413                           tblptrl	equ	0xFF6
 31414                           tablat	equ	0xFF5
 31415                           prodh	equ	0xFF4
 31416                           prodl	equ	0xFF3
 31417                           intcon	equ	0xFF2
 31418                           indf0	equ	0xFEF
 31419                           postinc0	equ	0xFEE
 31420                           fsr0h	equ	0xFEA
 31421                           fsr0l	equ	0xFE9
 31422                           wreg	equ	0xFE8
 31423                           indf1	equ	0xFE7
 31424                           postdec1	equ	0xFE5
 31425                           plusw1	equ	0xFE3
 31426                           fsr1h	equ	0xFE2
 31427                           fsr1l	equ	0xFE1
 31428                           indf2	equ	0xFDF
 31429                           postinc2	equ	0xFDE
 31430                           postdec2	equ	0xFDD
 31431                           plusw2	equ	0xFDB
 31432                           fsr2h	equ	0xFDA
 31433                           fsr2l	equ	0xFD9
 31434                           status	equ	0xFD8
 31435                           
 31436 ;; *************** function _EUSART2_Initialize *****************
 31437 ;; Defined at:
 31438 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 31439 ;; Parameters:    Size  Location     Type
 31440 ;;		None
 31441 ;; Auto vars:     Size  Location     Type
 31442 ;;		None
 31443 ;; Return value:  Size  Location     Type
 31444 ;;                  1    wreg      void 
 31445 ;; Registers used:
 31446 ;;		wreg, status,2, status,0, cstack
 31447 ;; Tracked objects:
 31448 ;;		On entry : 0/0
 31449 ;;		On exit  : 0/0
 31450 ;;		Unchanged: 0/0
 31451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31456 ;;Total ram usage:        0 bytes
 31457 ;; Hardware stack levels used:    1
 31458 ;; Hardware stack levels required when called:   14
 31459 ;; This function calls:
 31460 ;;		_EUSART2_SetRxInterruptHandler
 31461 ;;		_EUSART2_SetTxInterruptHandler
 31462 ;; This function is called by:
 31463 ;;		_SYSTEM_Initialize
 31464 ;; This function uses a non-reentrant model
 31465 ;;
 31466                           
 31467                           	psect	text73
 31468  018A86                     __ptext73:
 31469                           	opt stack 0
 31470  018A86                     _EUSART2_Initialize:
 31471                           	opt stack 15
 31472                           
 31473                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 31474                           
 31475                           ;incstack = 0
 31476  018A86  827E               	bsf	3966,1,c	;volatile
 31477                           
 31478                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 31479  018A88  010E               	movlb	14	; () banked
 31480  018A8A  9F2C               	bcf	44,7,b	;volatile
 31481                           
 31482                           ; BSR set to: 14
 31483                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 31484  018A8C  0E52               	movlw	low _EUSART2_Receive_ISR
 31485  018A8E  0101               	movlb	1	; () banked
 31486  018A90  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 31487  018A92  0E83               	movlw	high _EUSART2_Receive_ISR
 31488  018A94  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 31489  018A96  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 31490  018A98  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 31491  018A9A  ECBE  F0CC         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 31492                           
 31493                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 31494  018A9E  010E               	movlb	14	; () banked
 31495  018AA0  9D2C               	bcf	44,6,b	;volatile
 31496                           
 31497                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 31498  018AA2  0E0C               	movlw	low _EUSART2_Transmit_ISR
 31499  018AA4  0101               	movlb	1	; () banked
 31500  018AA6  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 31501  018AA8  0E94               	movlw	high _EUSART2_Transmit_ISR
 31502  018AAA  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 31503  018AAC  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 31504  018AAE  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 31505  018AB0  ECB7  F0CC         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 31506                           
 31507                           ;eusart2.c: 91: BAUD2CON = 0x08;
 31508  018AB4  0E08               	movlw	8
 31509  018AB6  010E               	movlb	14	; () banked
 31510  018AB8  6FF7               	movwf	247,b	;volatile
 31511                           
 31512                           ; BSR set to: 14
 31513                           ;eusart2.c: 94: RC2STA = 0x90;
 31514  018ABA  0E90               	movlw	144
 31515  018ABC  6FF5               	movwf	245,b	;volatile
 31516                           
 31517                           ; BSR set to: 14
 31518                           ;eusart2.c: 97: TX2STA = 0x24;
 31519  018ABE  0E24               	movlw	36
 31520  018AC0  6FF6               	movwf	246,b	;volatile
 31521                           
 31522                           ; BSR set to: 14
 31523                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 31524  018AC2  0E8A               	movlw	138
 31525  018AC4  6FF3               	movwf	243,b	;volatile
 31526                           
 31527                           ; BSR set to: 14
 31528                           ;eusart2.c: 103: SP2BRGH = 0x00;
 31529  018AC6  0E00               	movlw	0
 31530  018AC8  6FF4               	movwf	244,b	;volatile
 31531                           
 31532                           ; BSR set to: 14
 31533                           ;eusart2.c: 107: eusart2TxHead = 0;
 31534  018ACA  0E00               	movlw	0
 31535  018ACC  0101               	movlb	1	; () banked
 31536  018ACE  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 31537                           
 31538                           ; BSR set to: 1
 31539                           ;eusart2.c: 108: eusart2TxTail = 0;
 31540  018AD0  0E00               	movlw	0
 31541  018AD2  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 31542                           
 31543                           ; BSR set to: 1
 31544                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 31545  018AD4  0E80               	movlw	128
 31546  018AD6  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 31547                           
 31548                           ; BSR set to: 1
 31549                           ;eusart2.c: 111: eusart2RxHead = 0;
 31550  018AD8  0E00               	movlw	0
 31551  018ADA  0100               	movlb	0	; () banked
 31552  018ADC  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 31553                           
 31554                           ; BSR set to: 0
 31555                           ;eusart2.c: 112: eusart2RxTail = 0;
 31556  018ADE  0E00               	movlw	0
 31557  018AE0  0101               	movlb	1	; () banked
 31558  018AE2  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 31559                           
 31560                           ; BSR set to: 1
 31561                           ;eusart2.c: 113: eusart2RxCount = 0;
 31562  018AE4  0E00               	movlw	0
 31563  018AE6  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 31564                           
 31565                           ; BSR set to: 1
 31566                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 31567  018AE8  010E               	movlb	14	; () banked
 31568  018AEA  8F2C               	bsf	44,7,b	;volatile
 31569                           
 31570                           ; BSR set to: 14
 31571                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 31572  018AEC  927E               	bcf	3966,1,c	;volatile
 31573                           
 31574                           ; BSR set to: 14
 31575  018AEE  0012               	return		;funcret
 31576  018AF0                     __end_of_EUSART2_Initialize:
 31577                           	opt stack 0
 31578                           tblptru	equ	0xFF8
 31579                           tblptrh	equ	0xFF7
 31580                           tblptrl	equ	0xFF6
 31581                           tablat	equ	0xFF5
 31582                           prodh	equ	0xFF4
 31583                           prodl	equ	0xFF3
 31584                           intcon	equ	0xFF2
 31585                           indf0	equ	0xFEF
 31586                           postinc0	equ	0xFEE
 31587                           fsr0h	equ	0xFEA
 31588                           fsr0l	equ	0xFE9
 31589                           wreg	equ	0xFE8
 31590                           indf1	equ	0xFE7
 31591                           postdec1	equ	0xFE5
 31592                           plusw1	equ	0xFE3
 31593                           fsr1h	equ	0xFE2
 31594                           fsr1l	equ	0xFE1
 31595                           indf2	equ	0xFDF
 31596                           postinc2	equ	0xFDE
 31597                           postdec2	equ	0xFDD
 31598                           plusw2	equ	0xFDB
 31599                           fsr2h	equ	0xFDA
 31600                           fsr2l	equ	0xFD9
 31601                           status	equ	0xFD8
 31602                           
 31603 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 31604 ;; Defined at:
 31605 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 31606 ;; Parameters:    Size  Location     Type
 31607 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 31608 ;;		 -> EUSART2_Transmit_ISR(1), 
 31609 ;; Auto vars:     Size  Location     Type
 31610 ;;		None
 31611 ;; Return value:  Size  Location     Type
 31612 ;;                  1    wreg      void 
 31613 ;; Registers used:
 31614 ;;		wreg, status,2, status,0
 31615 ;; Tracked objects:
 31616 ;;		On entry : 0/0
 31617 ;;		On exit  : 0/0
 31618 ;;		Unchanged: 0/0
 31619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31620 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31623 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31624 ;;Total ram usage:        3 bytes
 31625 ;; Hardware stack levels used:    1
 31626 ;; Hardware stack levels required when called:   13
 31627 ;; This function calls:
 31628 ;;		Nothing
 31629 ;; This function is called by:
 31630 ;;		_EUSART2_Initialize
 31631 ;; This function uses a non-reentrant model
 31632 ;;
 31633                           
 31634                           	psect	text74
 31635  01996E                     __ptext74:
 31636                           	opt stack 0
 31637  01996E                     _EUSART2_SetTxInterruptHandler:
 31638                           	opt stack 15
 31639                           
 31640                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 31641                           
 31642                           ; BSR set to: 14
 31643                           ;incstack = 0
 31644  01996E  C117  F23D         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 31645  019972  C118  F23E         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 31646  019976  C119  F23F         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 31647  01997A  0012               	return		;funcret
 31648  01997C                     __end_of_EUSART2_SetTxInterruptHandler:
 31649                           	opt stack 0
 31650                           tblptru	equ	0xFF8
 31651                           tblptrh	equ	0xFF7
 31652                           tblptrl	equ	0xFF6
 31653                           tablat	equ	0xFF5
 31654                           prodh	equ	0xFF4
 31655                           prodl	equ	0xFF3
 31656                           intcon	equ	0xFF2
 31657                           indf0	equ	0xFEF
 31658                           postinc0	equ	0xFEE
 31659                           fsr0h	equ	0xFEA
 31660                           fsr0l	equ	0xFE9
 31661                           wreg	equ	0xFE8
 31662                           indf1	equ	0xFE7
 31663                           postdec1	equ	0xFE5
 31664                           plusw1	equ	0xFE3
 31665                           fsr1h	equ	0xFE2
 31666                           fsr1l	equ	0xFE1
 31667                           indf2	equ	0xFDF
 31668                           postinc2	equ	0xFDE
 31669                           postdec2	equ	0xFDD
 31670                           plusw2	equ	0xFDB
 31671                           fsr2h	equ	0xFDA
 31672                           fsr2l	equ	0xFD9
 31673                           status	equ	0xFD8
 31674                           
 31675 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 31676 ;; Defined at:
 31677 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 31678 ;; Parameters:    Size  Location     Type
 31679 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 31680 ;;		 -> EUSART2_Receive_ISR(1), 
 31681 ;; Auto vars:     Size  Location     Type
 31682 ;;		None
 31683 ;; Return value:  Size  Location     Type
 31684 ;;                  1    wreg      void 
 31685 ;; Registers used:
 31686 ;;		wreg, status,2, status,0
 31687 ;; Tracked objects:
 31688 ;;		On entry : 0/0
 31689 ;;		On exit  : 0/0
 31690 ;;		Unchanged: 0/0
 31691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31692 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31695 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31696 ;;Total ram usage:        3 bytes
 31697 ;; Hardware stack levels used:    1
 31698 ;; Hardware stack levels required when called:   13
 31699 ;; This function calls:
 31700 ;;		Nothing
 31701 ;; This function is called by:
 31702 ;;		_EUSART2_Initialize
 31703 ;; This function uses a non-reentrant model
 31704 ;;
 31705                           
 31706                           	psect	text75
 31707  01997C                     __ptext75:
 31708                           	opt stack 0
 31709  01997C                     _EUSART2_SetRxInterruptHandler:
 31710                           	opt stack 15
 31711                           
 31712                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 31713                           
 31714                           ;incstack = 0
 31715  01997C  C117  F23A         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 31716  019980  C118  F23B         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 31717  019984  C119  F23C         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 31718  019988  0012               	return		;funcret
 31719  01998A                     __end_of_EUSART2_SetRxInterruptHandler:
 31720                           	opt stack 0
 31721                           tblptru	equ	0xFF8
 31722                           tblptrh	equ	0xFF7
 31723                           tblptrl	equ	0xFF6
 31724                           tablat	equ	0xFF5
 31725                           prodh	equ	0xFF4
 31726                           prodl	equ	0xFF3
 31727                           intcon	equ	0xFF2
 31728                           indf0	equ	0xFEF
 31729                           postinc0	equ	0xFEE
 31730                           fsr0h	equ	0xFEA
 31731                           fsr0l	equ	0xFE9
 31732                           wreg	equ	0xFE8
 31733                           indf1	equ	0xFE7
 31734                           postdec1	equ	0xFE5
 31735                           plusw1	equ	0xFE3
 31736                           fsr1h	equ	0xFE2
 31737                           fsr1l	equ	0xFE1
 31738                           indf2	equ	0xFDF
 31739                           postinc2	equ	0xFDE
 31740                           postdec2	equ	0xFDD
 31741                           plusw2	equ	0xFDB
 31742                           fsr2h	equ	0xFDA
 31743                           fsr2l	equ	0xFD9
 31744                           status	equ	0xFD8
 31745                           
 31746 ;; *************** function _ADCC_Initialize *****************
 31747 ;; Defined at:
 31748 ;;		line 63 in file "mcc_generated_files/adcc.c"
 31749 ;; Parameters:    Size  Location     Type
 31750 ;;		None
 31751 ;; Auto vars:     Size  Location     Type
 31752 ;;		None
 31753 ;; Return value:  Size  Location     Type
 31754 ;;                  1    wreg      void 
 31755 ;; Registers used:
 31756 ;;		wreg, status,2, status,0, cstack
 31757 ;; Tracked objects:
 31758 ;;		On entry : 0/0
 31759 ;;		On exit  : 0/0
 31760 ;;		Unchanged: 0/0
 31761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31766 ;;Total ram usage:        0 bytes
 31767 ;; Hardware stack levels used:    1
 31768 ;; Hardware stack levels required when called:   14
 31769 ;; This function calls:
 31770 ;;		_ADCC_SetADTIInterruptHandler
 31771 ;; This function is called by:
 31772 ;;		_SYSTEM_Initialize
 31773 ;; This function uses a non-reentrant model
 31774 ;;
 31775                           
 31776                           	psect	text76
 31777  018C86                     __ptext76:
 31778                           	opt stack 0
 31779  018C86                     _ADCC_Initialize:
 31780                           	opt stack 15
 31781                           
 31782                           ;adcc.c: 67: ADLTHL = 0x00;
 31783                           
 31784                           ;incstack = 0
 31785  018C86  0E00               	movlw	0
 31786  018C88  6E6A               	movwf	3946,c	;volatile
 31787                           
 31788                           ;adcc.c: 69: ADLTHH = 0x00;
 31789  018C8A  0E00               	movlw	0
 31790  018C8C  6E6B               	movwf	3947,c	;volatile
 31791                           
 31792                           ;adcc.c: 71: ADUTHL = 0x00;
 31793  018C8E  0E00               	movlw	0
 31794  018C90  6E6C               	movwf	3948,c	;volatile
 31795                           
 31796                           ;adcc.c: 73: ADUTHH = 0x00;
 31797  018C92  0E00               	movlw	0
 31798  018C94  6E6D               	movwf	3949,c	;volatile
 31799                           
 31800                           ;adcc.c: 75: ADSTPTL = 0x00;
 31801  018C96  0E00               	movlw	0
 31802  018C98  6E68               	movwf	3944,c	;volatile
 31803                           
 31804                           ;adcc.c: 77: ADSTPTH = 0x00;
 31805  018C9A  0E00               	movlw	0
 31806  018C9C  6E69               	movwf	3945,c	;volatile
 31807                           
 31808                           ;adcc.c: 79: ADRPT = 0xFF;
 31809  018C9E  6866               	setf	3942,c	;volatile
 31810                           
 31811                           ;adcc.c: 81: ADPCH = 0x00;
 31812  018CA0  0E00               	movlw	0
 31813  018CA2  010F               	movlb	15	; () banked
 31814  018CA4  6F5F               	movwf	95,b	;volatile
 31815                           
 31816                           ;adcc.c: 83: ADCAP = 0x00;
 31817  018CA6  0E00               	movlw	0
 31818  018CA8  6F5D               	movwf	93,b	;volatile
 31819                           
 31820                           ;adcc.c: 85: ADCON1 = 0x00;
 31821  018CAA  0E00               	movlw	0
 31822  018CAC  6F59               	movwf	89,b	;volatile
 31823                           
 31824                           ;adcc.c: 87: ADCON2 = 0x04;
 31825  018CAE  0E04               	movlw	4
 31826  018CB0  6F5A               	movwf	90,b	;volatile
 31827                           
 31828                           ;adcc.c: 89: ADCON3 = 0x5F;
 31829  018CB2  0E5F               	movlw	95
 31830  018CB4  6F5B               	movwf	91,b	;volatile
 31831                           
 31832                           ;adcc.c: 91: ADSTAT = 0x00;
 31833  018CB6  0E00               	movlw	0
 31834  018CB8  6E65               	movwf	3941,c	;volatile
 31835                           
 31836                           ;adcc.c: 93: ADREF = 0x12;
 31837  018CBA  0E12               	movlw	18
 31838  018CBC  6F58               	movwf	88,b	;volatile
 31839                           
 31840                           ;adcc.c: 95: ADACT = 0x00;
 31841  018CBE  0E00               	movlw	0
 31842  018CC0  6F56               	movwf	86,b	;volatile
 31843                           
 31844                           ;adcc.c: 97: ADCLK = 0x1F;
 31845  018CC2  0E1F               	movlw	31
 31846  018CC4  6F57               	movwf	87,b	;volatile
 31847                           
 31848                           ;adcc.c: 99: ADCON0 = 0xC4;
 31849  018CC6  0EC4               	movlw	196
 31850  018CC8  6E60               	movwf	3936,c	;volatile
 31851                           
 31852                           ; BSR set to: 15
 31853                           ;adcc.c: 101: ADACQ = 0xFF;
 31854  018CCA  695C               	setf	92,b	;volatile
 31855                           
 31856                           ; BSR set to: 15
 31857                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 31858  018CCC  010E               	movlb	14	; () banked
 31859  018CCE  9334               	bcf	52,1,b	;volatile
 31860                           
 31861                           ; BSR set to: 14
 31862                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 31863  018CD0  832A               	bsf	42,1,b	;volatile
 31864                           
 31865                           ; BSR set to: 14
 31866                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 31867  018CD2  0E14               	movlw	low _ADCC_DefaultInterruptHandler
 31868  018CD4  0101               	movlb	1	; () banked
 31869  018CD6  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 31870  018CD8  0E9A               	movlw	high _ADCC_DefaultInterruptHandler
 31871  018CDA  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 31872  018CDC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31873  018CDE  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 31874  018CE0  ECC5  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31875  018CE4  0012               	return		;funcret
 31876  018CE6                     __end_of_ADCC_Initialize:
 31877                           	opt stack 0
 31878                           tblptru	equ	0xFF8
 31879                           tblptrh	equ	0xFF7
 31880                           tblptrl	equ	0xFF6
 31881                           tablat	equ	0xFF5
 31882                           prodh	equ	0xFF4
 31883                           prodl	equ	0xFF3
 31884                           intcon	equ	0xFF2
 31885                           indf0	equ	0xFEF
 31886                           postinc0	equ	0xFEE
 31887                           fsr0h	equ	0xFEA
 31888                           fsr0l	equ	0xFE9
 31889                           wreg	equ	0xFE8
 31890                           indf1	equ	0xFE7
 31891                           postdec1	equ	0xFE5
 31892                           plusw1	equ	0xFE3
 31893                           fsr1h	equ	0xFE2
 31894                           fsr1l	equ	0xFE1
 31895                           indf2	equ	0xFDF
 31896                           postinc2	equ	0xFDE
 31897                           postdec2	equ	0xFDD
 31898                           plusw2	equ	0xFDB
 31899                           fsr2h	equ	0xFDA
 31900                           fsr2l	equ	0xFD9
 31901                           status	equ	0xFD8
 31902                           
 31903 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31904 ;; Defined at:
 31905 ;;		line 307 in file "mcc_generated_files/adcc.c"
 31906 ;; Parameters:    Size  Location     Type
 31907 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 31908 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 31909 ;; Auto vars:     Size  Location     Type
 31910 ;;		None
 31911 ;; Return value:  Size  Location     Type
 31912 ;;                  1    wreg      void 
 31913 ;; Registers used:
 31914 ;;		wreg, status,2, status,0
 31915 ;; Tracked objects:
 31916 ;;		On entry : 0/0
 31917 ;;		On exit  : 0/0
 31918 ;;		Unchanged: 0/0
 31919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31920 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31923 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31924 ;;Total ram usage:        3 bytes
 31925 ;; Hardware stack levels used:    1
 31926 ;; Hardware stack levels required when called:   13
 31927 ;; This function calls:
 31928 ;;		Nothing
 31929 ;; This function is called by:
 31930 ;;		_ADCC_Initialize
 31931 ;;		_main
 31932 ;; This function uses a non-reentrant model
 31933 ;;
 31934                           
 31935                           	psect	text77
 31936  01998A                     __ptext77:
 31937                           	opt stack 0
 31938  01998A                     _ADCC_SetADTIInterruptHandler:
 31939                           	opt stack 15
 31940                           
 31941                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 31942                           
 31943                           ;incstack = 0
 31944  01998A  C117  F234         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 31945  01998E  C118  F235         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 31946  019992  C119  F236         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 31947  019996  0012               	return		;funcret
 31948  019998                     __end_of_ADCC_SetADTIInterruptHandler:
 31949                           	opt stack 0
 31950                           tblptru	equ	0xFF8
 31951                           tblptrh	equ	0xFF7
 31952                           tblptrl	equ	0xFF6
 31953                           tablat	equ	0xFF5
 31954                           prodh	equ	0xFF4
 31955                           prodl	equ	0xFF3
 31956                           intcon	equ	0xFF2
 31957                           indf0	equ	0xFEF
 31958                           postinc0	equ	0xFEE
 31959                           fsr0h	equ	0xFEA
 31960                           fsr0l	equ	0xFE9
 31961                           wreg	equ	0xFE8
 31962                           indf1	equ	0xFE7
 31963                           postdec1	equ	0xFE5
 31964                           plusw1	equ	0xFE3
 31965                           fsr1h	equ	0xFE2
 31966                           fsr1l	equ	0xFE1
 31967                           indf2	equ	0xFDF
 31968                           postinc2	equ	0xFDE
 31969                           postdec2	equ	0xFDD
 31970                           plusw2	equ	0xFDB
 31971                           fsr2h	equ	0xFDA
 31972                           fsr2l	equ	0xFD9
 31973                           status	equ	0xFD8
 31974                           
 31975 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 31976 ;; Defined at:
 31977 ;;		line 122 in file "mcc_generated_files/interrupt_manager.c"
 31978 ;; Parameters:    Size  Location     Type
 31979 ;;		None
 31980 ;; Auto vars:     Size  Location     Type
 31981 ;;		None
 31982 ;; Return value:  Size  Location     Type
 31983 ;;                  1    wreg      void 
 31984 ;; Registers used:
 31985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31986 ;; Tracked objects:
 31987 ;;		On entry : 0/0
 31988 ;;		On exit  : 0/0
 31989 ;;		Unchanged: 0/0
 31990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31993 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31994 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31995 ;;Total ram usage:       21 bytes
 31996 ;; Hardware stack levels used:    1
 31997 ;; Hardware stack levels required when called:   12
 31998 ;; This function calls:
 31999 ;;		Absolute function
 32000 ;;		_EUSART2_Transmit_ISR
 32001 ;;		_TMR6_ISR
 32002 ;;		_TMR7_ISR
 32003 ;; This function is called by:
 32004 ;;		Interrupt level 1
 32005 ;; This function uses a non-reentrant model
 32006 ;;
 32007                           
 32008                           	psect	intcodelo
 32009  000018                     __pintcodelo:
 32010                           	opt stack 0
 32011  000018                     _INTERRUPT_InterruptManagerLow:
 32012                           	opt stack 11
 32013                           
 32014                           ;incstack = 0
 32015  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32016  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 32017  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 32018  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 32019  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 32020  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 32021  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 32022  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 32023  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 32024  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 32025  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 32026  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 32027  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 32028  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 32029  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 32030  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 32031  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 32032  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 32033  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 32034  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 32035  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 32036  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 32037                           
 32038                           ;interrupt_manager.c: 125: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 32039  00006E  010E               	movlb	14	; () banked
 32040  000070  BB2E               	btfsc	46,5,b	;volatile
 32041                           
 32042                           ; BSR set to: 14
 32043  000072  AB38               	btfss	56,5,b	;volatile
 32044  000074  D003               	goto	i1l245
 32045                           
 32046                           ; BSR set to: 14
 32047                           ;interrupt_manager.c: 126: {
 32048                           ;interrupt_manager.c: 127: TMR6_ISR();
 32049  000076  ECF6  F0CA         	call	_TMR6_ISR	;wreg free
 32050                           
 32051                           ;interrupt_manager.c: 128: }
 32052  00007A  D015               	goto	i1l249
 32053  00007C                     i1l245:
 32054                           
 32055                           ; BSR set to: 14
 32056                           ;interrupt_manager.c: 129: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 32057  00007C  BD2C               	btfsc	44,6,b	;volatile
 32058                           
 32059                           ; BSR set to: 14
 32060  00007E  AD36               	btfss	54,6,b	;volatile
 32061  000080  D00D               	goto	i1l247
 32062                           
 32063                           ; BSR set to: 14
 32064                           ;interrupt_manager.c: 130: {
 32065                           ;interrupt_manager.c: 131: EUSART2_TxDefaultInterruptHandler();
 32066  000082  D801               	call	i1u2778_28
 32067  000084  D010               	goto	i1l249
 32068  000086                     i1u2778_28:
 32069  000086  0005               	push	
 32070  000088  6EFA               	movwf	pclath,c
 32071  00008A  0102               	movlb	2	; () banked
 32072  00008C  513D               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 32073  00008E  6EFD               	movwf	tosl,c
 32074  000090  513E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 32075  000092  6EFE               	movwf	tosh,c
 32076  000094  513F               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 32077  000096  6EFF               	movwf	tosu,c
 32078  000098  50FA               	movf	pclath,w,c
 32079  00009A  0012               	return		;indir
 32080  00009C                     i1l247:
 32081                           
 32082                           ; BSR set to: 14
 32083                           ;interrupt_manager.c: 133: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 32084  00009C  BD2E               	btfsc	46,6,b	;volatile
 32085                           
 32086                           ; BSR set to: 14
 32087  00009E  AD38               	btfss	56,6,b	;volatile
 32088  0000A0  D002               	goto	i1l249
 32089                           
 32090                           ; BSR set to: 14
 32091                           ;interrupt_manager.c: 134: {
 32092                           ;interrupt_manager.c: 135: TMR7_ISR();
 32093  0000A2  EC21  F0CA         	call	_TMR7_ISR	;wreg free
 32094  0000A6                     i1l249:
 32095                           
 32096                           ;interrupt_manager.c: 137: else
 32097                           ;interrupt_manager.c: 138: {
 32098  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 32099  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 32100  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 32101  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 32102  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 32103  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 32104  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 32105  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 32106  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 32107  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 32108  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 32109  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 32110  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 32111  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 32112  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 32113  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 32114  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 32115  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 32116  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 32117  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 32118  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 32119  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32120  0000FC  0010               	retfie	
 32121  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 32122                           	opt stack 0
 32123                           tosu	equ	0xFFF
 32124                           tosh	equ	0xFFE
 32125                           tosl	equ	0xFFD
 32126                           pclatu	equ	0xFFB
 32127                           pclath	equ	0xFFA
 32128                           tblptru	equ	0xFF8
 32129                           tblptrh	equ	0xFF7
 32130                           tblptrl	equ	0xFF6
 32131                           tablat	equ	0xFF5
 32132                           prodh	equ	0xFF4
 32133                           prodl	equ	0xFF3
 32134                           intcon	equ	0xFF2
 32135                           indf0	equ	0xFEF
 32136                           postinc0	equ	0xFEE
 32137                           fsr0h	equ	0xFEA
 32138                           fsr0l	equ	0xFE9
 32139                           wreg	equ	0xFE8
 32140                           indf1	equ	0xFE7
 32141                           postdec1	equ	0xFE5
 32142                           plusw1	equ	0xFE3
 32143                           fsr1h	equ	0xFE2
 32144                           fsr1l	equ	0xFE1
 32145                           bsr	equ	0xFE0
 32146                           indf2	equ	0xFDF
 32147                           postinc2	equ	0xFDE
 32148                           postdec2	equ	0xFDD
 32149                           plusw2	equ	0xFDB
 32150                           fsr2h	equ	0xFDA
 32151                           fsr2l	equ	0xFD9
 32152                           status	equ	0xFD8
 32153                           
 32154 ;; *************** function _TMR7_ISR *****************
 32155 ;; Defined at:
 32156 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 32157 ;; Parameters:    Size  Location     Type
 32158 ;;		None
 32159 ;; Auto vars:     Size  Location     Type
 32160 ;;		None
 32161 ;; Return value:  Size  Location     Type
 32162 ;;                  1    wreg      void 
 32163 ;; Registers used:
 32164 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32165 ;; Tracked objects:
 32166 ;;		On entry : 0/0
 32167 ;;		On exit  : 0/0
 32168 ;;		Unchanged: 0/0
 32169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32174 ;;Total ram usage:        0 bytes
 32175 ;; Hardware stack levels used:    1
 32176 ;; Hardware stack levels required when called:   11
 32177 ;; This function calls:
 32178 ;;		Absolute function
 32179 ;;		_TMR7_DefaultInterruptHandler
 32180 ;;		_TMR7_WriteTimer
 32181 ;;		_acquisitionTimerCallback
 32182 ;; This function is called by:
 32183 ;;		_INTERRUPT_InterruptManagerLow
 32184 ;; This function uses a non-reentrant model
 32185 ;;
 32186                           
 32187                           	psect	text79
 32188  019442                     __ptext79:
 32189                           	opt stack 0
 32190  019442                     _TMR7_ISR:
 32191                           	opt stack 11
 32192                           
 32193                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 32194                           
 32195                           ;incstack = 0
 32196  019442  010E               	movlb	14	; () banked
 32197  019444  9D38               	bcf	56,6,b	;volatile
 32198                           
 32199                           ; BSR set to: 14
 32200                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 32201  019446  C246  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 32202  01944A  C247  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 32203  01944E  EC31  F0CB         	call	_TMR7_WriteTimer	;wreg free
 32204                           
 32205                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 32206  019452  0102               	movlb	2	; () banked
 32207  019454  5131               	movf	_TMR7_InterruptHandler& (0+255),w,b
 32208  019456  1132               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 32209  019458  1133               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 32210  01945A  B4D8               	btfsc	status,2,c
 32211  01945C  0012               	return	
 32212                           
 32213                           ; BSR set to: 2
 32214                           ;tmr7.c: 172: {
 32215                           ;tmr7.c: 173: TMR7_InterruptHandler();
 32216  01945E  D801               	call	i1u2749_28
 32217  019460  0012               	return	
 32218  019462                     i1u2749_28:
 32219  019462  0005               	push	
 32220  019464  6EFA               	movwf	pclath,c
 32221  019466  5131               	movf	_TMR7_InterruptHandler& (0+255),w,b
 32222  019468  6EFD               	movwf	tosl,c
 32223  01946A  5132               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 32224  01946C  6EFE               	movwf	tosh,c
 32225  01946E  5133               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 32226  019470  6EFF               	movwf	tosu,c
 32227  019472  50FA               	movf	pclath,w,c
 32228  019474  0012               	return		;indir
 32229  019476                     __end_of_TMR7_ISR:
 32230                           	opt stack 0
 32231                           tosu	equ	0xFFF
 32232                           tosh	equ	0xFFE
 32233                           tosl	equ	0xFFD
 32234                           pclatu	equ	0xFFB
 32235                           pclath	equ	0xFFA
 32236                           tblptru	equ	0xFF8
 32237                           tblptrh	equ	0xFF7
 32238                           tblptrl	equ	0xFF6
 32239                           tablat	equ	0xFF5
 32240                           prodh	equ	0xFF4
 32241                           prodl	equ	0xFF3
 32242                           intcon	equ	0xFF2
 32243                           indf0	equ	0xFEF
 32244                           postinc0	equ	0xFEE
 32245                           fsr0h	equ	0xFEA
 32246                           fsr0l	equ	0xFE9
 32247                           wreg	equ	0xFE8
 32248                           indf1	equ	0xFE7
 32249                           postdec1	equ	0xFE5
 32250                           plusw1	equ	0xFE3
 32251                           fsr1h	equ	0xFE2
 32252                           fsr1l	equ	0xFE1
 32253                           bsr	equ	0xFE0
 32254                           indf2	equ	0xFDF
 32255                           postinc2	equ	0xFDE
 32256                           postdec2	equ	0xFDD
 32257                           plusw2	equ	0xFDB
 32258                           fsr2h	equ	0xFDA
 32259                           fsr2l	equ	0xFD9
 32260                           status	equ	0xFD8
 32261                           
 32262 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 32263 ;; Defined at:
 32264 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 32265 ;; Parameters:    Size  Location     Type
 32266 ;;		None
 32267 ;; Auto vars:     Size  Location     Type
 32268 ;;		None
 32269 ;; Return value:  Size  Location     Type
 32270 ;;                  1    wreg      void 
 32271 ;; Registers used:
 32272 ;;		None
 32273 ;; Tracked objects:
 32274 ;;		On entry : 0/0
 32275 ;;		On exit  : 0/0
 32276 ;;		Unchanged: 0/0
 32277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32282 ;;Total ram usage:        0 bytes
 32283 ;; Hardware stack levels used:    1
 32284 ;; Hardware stack levels required when called:    9
 32285 ;; This function calls:
 32286 ;;		Nothing
 32287 ;; This function is called by:
 32288 ;;		_TMR7_Initialize
 32289 ;;		_TMR7_ISR
 32290 ;; This function uses a non-reentrant model
 32291 ;;
 32292                           
 32293                           	psect	text80
 32294  019A0A                     __ptext80:
 32295                           	opt stack 0
 32296  019A0A                     _TMR7_DefaultInterruptHandler:
 32297                           	opt stack 12
 32298                           
 32299                           ;incstack = 0
 32300  019A0A  0012               	return		;funcret
 32301  019A0C                     __end_of_TMR7_DefaultInterruptHandler:
 32302                           	opt stack 0
 32303                           tosu	equ	0xFFF
 32304                           tosh	equ	0xFFE
 32305                           tosl	equ	0xFFD
 32306                           pclatu	equ	0xFFB
 32307                           pclath	equ	0xFFA
 32308                           tblptru	equ	0xFF8
 32309                           tblptrh	equ	0xFF7
 32310                           tblptrl	equ	0xFF6
 32311                           tablat	equ	0xFF5
 32312                           prodh	equ	0xFF4
 32313                           prodl	equ	0xFF3
 32314                           intcon	equ	0xFF2
 32315                           indf0	equ	0xFEF
 32316                           postinc0	equ	0xFEE
 32317                           fsr0h	equ	0xFEA
 32318                           fsr0l	equ	0xFE9
 32319                           wreg	equ	0xFE8
 32320                           indf1	equ	0xFE7
 32321                           postdec1	equ	0xFE5
 32322                           plusw1	equ	0xFE3
 32323                           fsr1h	equ	0xFE2
 32324                           fsr1l	equ	0xFE1
 32325                           bsr	equ	0xFE0
 32326                           indf2	equ	0xFDF
 32327                           postinc2	equ	0xFDE
 32328                           postdec2	equ	0xFDD
 32329                           plusw2	equ	0xFDB
 32330                           fsr2h	equ	0xFDA
 32331                           fsr2l	equ	0xFD9
 32332                           status	equ	0xFD8
 32333                           
 32334 ;; *************** function _acquisitionTimerCallback *****************
 32335 ;; Defined at:
 32336 ;;		line 430 in file "main.c"
 32337 ;; Parameters:    Size  Location     Type
 32338 ;;		None
 32339 ;; Auto vars:     Size  Location     Type
 32340 ;;		None
 32341 ;; Return value:  Size  Location     Type
 32342 ;;                  1    wreg      void 
 32343 ;; Registers used:
 32344 ;;		wreg, status,2, cstack
 32345 ;; Tracked objects:
 32346 ;;		On entry : 0/0
 32347 ;;		On exit  : 0/0
 32348 ;;		Unchanged: 0/0
 32349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32354 ;;Total ram usage:        0 bytes
 32355 ;; Hardware stack levels used:    1
 32356 ;; Hardware stack levels required when called:   10
 32357 ;; This function calls:
 32358 ;;		_ADCC_ClearAccumulator
 32359 ;;		_ADCC_DischargeSampleCapacitor
 32360 ;;		_ADCC_StartConversion
 32361 ;; This function is called by:
 32362 ;;		_main
 32363 ;;		_TMR7_ISR
 32364 ;; This function uses a non-reentrant model
 32365 ;;
 32366                           
 32367                           	psect	text81
 32368  0198C8                     __ptext81:
 32369                           	opt stack 0
 32370  0198C8                     _acquisitionTimerCallback:
 32371                           	opt stack 11
 32372                           
 32373                           ;main.c: 433: ADCC_DischargeSampleCapacitor();
 32374                           
 32375                           ;incstack = 0
 32376  0198C8  ECED  F0CC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 32377                           
 32378                           ;main.c: 436: ADCC_ClearAccumulator();
 32379  0198CC  ECF7  F0CC         	call	_ADCC_ClearAccumulator	;wreg free
 32380                           
 32381                           ;main.c: 439: ADCC_StartConversion(next_channel);
 32382  0198D0  0101               	movlb	1	; () banked
 32383  0198D2  51E8               	movf	_next_channel& (0+255),w,b
 32384  0198D4  ECCC  F0CC         	call	_ADCC_StartConversion
 32385  0198D8  0012               	return		;funcret
 32386  0198DA                     __end_of_acquisitionTimerCallback:
 32387                           	opt stack 0
 32388                           tosu	equ	0xFFF
 32389                           tosh	equ	0xFFE
 32390                           tosl	equ	0xFFD
 32391                           pclatu	equ	0xFFB
 32392                           pclath	equ	0xFFA
 32393                           tblptru	equ	0xFF8
 32394                           tblptrh	equ	0xFF7
 32395                           tblptrl	equ	0xFF6
 32396                           tablat	equ	0xFF5
 32397                           prodh	equ	0xFF4
 32398                           prodl	equ	0xFF3
 32399                           intcon	equ	0xFF2
 32400                           indf0	equ	0xFEF
 32401                           postinc0	equ	0xFEE
 32402                           fsr0h	equ	0xFEA
 32403                           fsr0l	equ	0xFE9
 32404                           wreg	equ	0xFE8
 32405                           indf1	equ	0xFE7
 32406                           postdec1	equ	0xFE5
 32407                           plusw1	equ	0xFE3
 32408                           fsr1h	equ	0xFE2
 32409                           fsr1l	equ	0xFE1
 32410                           bsr	equ	0xFE0
 32411                           indf2	equ	0xFDF
 32412                           postinc2	equ	0xFDE
 32413                           postdec2	equ	0xFDD
 32414                           plusw2	equ	0xFDB
 32415                           fsr2h	equ	0xFDA
 32416                           fsr2l	equ	0xFD9
 32417                           status	equ	0xFD8
 32418                           
 32419 ;; *************** function _ADCC_StartConversion *****************
 32420 ;; Defined at:
 32421 ;;		line 112 in file "mcc_generated_files/adcc.c"
 32422 ;; Parameters:    Size  Location     Type
 32423 ;;  channel         1    wreg     enum E17310
 32424 ;; Auto vars:     Size  Location     Type
 32425 ;;  channel         1    0[BANK1 ] enum E17310
 32426 ;; Return value:  Size  Location     Type
 32427 ;;                  1    wreg      void 
 32428 ;; Registers used:
 32429 ;;		wreg
 32430 ;; Tracked objects:
 32431 ;;		On entry : 0/0
 32432 ;;		On exit  : 0/0
 32433 ;;		Unchanged: 0/0
 32434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32436 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32438 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32439 ;;Total ram usage:        1 bytes
 32440 ;; Hardware stack levels used:    1
 32441 ;; Hardware stack levels required when called:    9
 32442 ;; This function calls:
 32443 ;;		Nothing
 32444 ;; This function is called by:
 32445 ;;		_acquisitionTimerCallback
 32446 ;; This function uses a non-reentrant model
 32447 ;;
 32448                           
 32449                           	psect	text82
 32450  019998                     __ptext82:
 32451                           	opt stack 0
 32452  019998                     _ADCC_StartConversion:
 32453                           	opt stack 11
 32454                           
 32455                           ;incstack = 0
 32456                           ;ADCC_StartConversion@channel stored from wreg
 32457  019998  0101               	movlb	1	; () banked
 32458  01999A  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 32459                           
 32460                           ;adcc.c: 115: ADPCH = channel;
 32461  01999C  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 32462                           
 32463                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 32464  0199A0  8E60               	bsf	3936,7,c	;volatile
 32465                           
 32466                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 32467  0199A2  8060               	bsf	3936,0,c	;volatile
 32468  0199A4  0012               	return		;funcret
 32469  0199A6                     __end_of_ADCC_StartConversion:
 32470                           	opt stack 0
 32471                           tosu	equ	0xFFF
 32472                           tosh	equ	0xFFE
 32473                           tosl	equ	0xFFD
 32474                           pclatu	equ	0xFFB
 32475                           pclath	equ	0xFFA
 32476                           tblptru	equ	0xFF8
 32477                           tblptrh	equ	0xFF7
 32478                           tblptrl	equ	0xFF6
 32479                           tablat	equ	0xFF5
 32480                           prodh	equ	0xFF4
 32481                           prodl	equ	0xFF3
 32482                           intcon	equ	0xFF2
 32483                           indf0	equ	0xFEF
 32484                           postinc0	equ	0xFEE
 32485                           fsr0h	equ	0xFEA
 32486                           fsr0l	equ	0xFE9
 32487                           wreg	equ	0xFE8
 32488                           indf1	equ	0xFE7
 32489                           postdec1	equ	0xFE5
 32490                           plusw1	equ	0xFE3
 32491                           fsr1h	equ	0xFE2
 32492                           fsr1l	equ	0xFE1
 32493                           bsr	equ	0xFE0
 32494                           indf2	equ	0xFDF
 32495                           postinc2	equ	0xFDE
 32496                           postdec2	equ	0xFDD
 32497                           plusw2	equ	0xFDB
 32498                           fsr2h	equ	0xFDA
 32499                           fsr2l	equ	0xFD9
 32500                           status	equ	0xFD8
 32501                           
 32502 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 32503 ;; Defined at:
 32504 ;;		line 174 in file "mcc_generated_files/adcc.c"
 32505 ;; Parameters:    Size  Location     Type
 32506 ;;		None
 32507 ;; Auto vars:     Size  Location     Type
 32508 ;;		None
 32509 ;; Return value:  Size  Location     Type
 32510 ;;                  1    wreg      void 
 32511 ;; Registers used:
 32512 ;;		wreg, status,2
 32513 ;; Tracked objects:
 32514 ;;		On entry : 0/0
 32515 ;;		On exit  : 0/0
 32516 ;;		Unchanged: 0/0
 32517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32522 ;;Total ram usage:        0 bytes
 32523 ;; Hardware stack levels used:    1
 32524 ;; Hardware stack levels required when called:    9
 32525 ;; This function calls:
 32526 ;;		Nothing
 32527 ;; This function is called by:
 32528 ;;		_acquisitionTimerCallback
 32529 ;; This function uses a non-reentrant model
 32530 ;;
 32531                           
 32532                           	psect	text83
 32533  0199DA                     __ptext83:
 32534                           	opt stack 0
 32535  0199DA                     _ADCC_DischargeSampleCapacitor:
 32536                           	opt stack 11
 32537                           
 32538                           ;adcc.c: 177: ADPCH = 0x3c;
 32539                           
 32540                           ;incstack = 0
 32541  0199DA  0E3C               	movlw	60
 32542  0199DC  010F               	movlb	15	; () banked
 32543  0199DE  6F5F               	movwf	95,b	;volatile
 32544                           
 32545                           ; BSR set to: 15
 32546  0199E0  0012               	return		;funcret
 32547  0199E2                     __end_of_ADCC_DischargeSampleCapacitor:
 32548                           	opt stack 0
 32549                           tosu	equ	0xFFF
 32550                           tosh	equ	0xFFE
 32551                           tosl	equ	0xFFD
 32552                           pclatu	equ	0xFFB
 32553                           pclath	equ	0xFFA
 32554                           tblptru	equ	0xFF8
 32555                           tblptrh	equ	0xFF7
 32556                           tblptrl	equ	0xFF6
 32557                           tablat	equ	0xFF5
 32558                           prodh	equ	0xFF4
 32559                           prodl	equ	0xFF3
 32560                           intcon	equ	0xFF2
 32561                           indf0	equ	0xFEF
 32562                           postinc0	equ	0xFEE
 32563                           fsr0h	equ	0xFEA
 32564                           fsr0l	equ	0xFE9
 32565                           wreg	equ	0xFE8
 32566                           indf1	equ	0xFE7
 32567                           postdec1	equ	0xFE5
 32568                           plusw1	equ	0xFE3
 32569                           fsr1h	equ	0xFE2
 32570                           fsr1l	equ	0xFE1
 32571                           bsr	equ	0xFE0
 32572                           indf2	equ	0xFDF
 32573                           postinc2	equ	0xFDE
 32574                           postdec2	equ	0xFDD
 32575                           plusw2	equ	0xFDB
 32576                           fsr2h	equ	0xFDA
 32577                           fsr2l	equ	0xFD9
 32578                           status	equ	0xFD8
 32579                           
 32580 ;; *************** function _ADCC_ClearAccumulator *****************
 32581 ;; Defined at:
 32582 ;;		line 204 in file "mcc_generated_files/adcc.c"
 32583 ;; Parameters:    Size  Location     Type
 32584 ;;		None
 32585 ;; Auto vars:     Size  Location     Type
 32586 ;;		None
 32587 ;; Return value:  Size  Location     Type
 32588 ;;                  1    wreg      void 
 32589 ;; Registers used:
 32590 ;;		None
 32591 ;; Tracked objects:
 32592 ;;		On entry : 0/0
 32593 ;;		On exit  : 0/0
 32594 ;;		Unchanged: 0/0
 32595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32600 ;;Total ram usage:        0 bytes
 32601 ;; Hardware stack levels used:    1
 32602 ;; Hardware stack levels required when called:    9
 32603 ;; This function calls:
 32604 ;;		Nothing
 32605 ;; This function is called by:
 32606 ;;		_acquisitionTimerCallback
 32607 ;; This function uses a non-reentrant model
 32608 ;;
 32609                           
 32610                           	psect	text84
 32611  0199EE                     __ptext84:
 32612                           	opt stack 0
 32613  0199EE                     _ADCC_ClearAccumulator:
 32614                           	opt stack 11
 32615                           
 32616                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 32617                           
 32618                           ; BSR set to: 15
 32619                           ;incstack = 0
 32620  0199EE  010F               	movlb	15	; () banked
 32621  0199F0  875A               	bsf	90,3,b	;volatile
 32622                           
 32623                           ; BSR set to: 15
 32624  0199F2  0012               	return		;funcret
 32625  0199F4                     __end_of_ADCC_ClearAccumulator:
 32626                           	opt stack 0
 32627                           tosu	equ	0xFFF
 32628                           tosh	equ	0xFFE
 32629                           tosl	equ	0xFFD
 32630                           pclatu	equ	0xFFB
 32631                           pclath	equ	0xFFA
 32632                           tblptru	equ	0xFF8
 32633                           tblptrh	equ	0xFF7
 32634                           tblptrl	equ	0xFF6
 32635                           tablat	equ	0xFF5
 32636                           prodh	equ	0xFF4
 32637                           prodl	equ	0xFF3
 32638                           intcon	equ	0xFF2
 32639                           indf0	equ	0xFEF
 32640                           postinc0	equ	0xFEE
 32641                           fsr0h	equ	0xFEA
 32642                           fsr0l	equ	0xFE9
 32643                           wreg	equ	0xFE8
 32644                           indf1	equ	0xFE7
 32645                           postdec1	equ	0xFE5
 32646                           plusw1	equ	0xFE3
 32647                           fsr1h	equ	0xFE2
 32648                           fsr1l	equ	0xFE1
 32649                           bsr	equ	0xFE0
 32650                           indf2	equ	0xFDF
 32651                           postinc2	equ	0xFDE
 32652                           postdec2	equ	0xFDD
 32653                           plusw2	equ	0xFDB
 32654                           fsr2h	equ	0xFDA
 32655                           fsr2l	equ	0xFD9
 32656                           status	equ	0xFD8
 32657                           
 32658 ;; *************** function _TMR7_WriteTimer *****************
 32659 ;; Defined at:
 32660 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 32661 ;; Parameters:    Size  Location     Type
 32662 ;;  timerVal        2    0[BANK1 ] unsigned int 
 32663 ;; Auto vars:     Size  Location     Type
 32664 ;;		None
 32665 ;; Return value:  Size  Location     Type
 32666 ;;                  1    wreg      void 
 32667 ;; Registers used:
 32668 ;;		wreg, status,2
 32669 ;; Tracked objects:
 32670 ;;		On entry : 0/0
 32671 ;;		On exit  : 0/0
 32672 ;;		Unchanged: 0/0
 32673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32674 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32677 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32678 ;;Total ram usage:        2 bytes
 32679 ;; Hardware stack levels used:    1
 32680 ;; Hardware stack levels required when called:    9
 32681 ;; This function calls:
 32682 ;;		Nothing
 32683 ;; This function is called by:
 32684 ;;		_TMR7_ISR
 32685 ;;		_TMR7_Reload
 32686 ;; This function uses a non-reentrant model
 32687 ;;
 32688                           
 32689                           	psect	text85
 32690  019662                     __ptext85:
 32691                           	opt stack 0
 32692  019662                     _TMR7_WriteTimer:
 32693                           	opt stack 12
 32694                           
 32695                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 32696                           
 32697                           ; BSR set to: 15
 32698                           ;incstack = 0
 32699  019662  010F               	movlb	15	; () banked
 32700  019664  A530               	btfss	48,2,b	;volatile
 32701  019666  D009               	goto	i1l660
 32702                           
 32703                           ; BSR set to: 15
 32704                           ;tmr7.c: 130: {
 32705                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 32706  019668  9130               	bcf	48,0,b	;volatile
 32707                           
 32708                           ; BSR set to: 15
 32709                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 32710  01966A  0101               	movlb	1	; () banked
 32711  01966C  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 32712  01966E  010F               	movlb	15	; () banked
 32713  019670  6F2F               	movwf	47,b	;volatile
 32714                           
 32715                           ; BSR set to: 15
 32716                           ;tmr7.c: 136: TMR7L = timerVal;
 32717  019672  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 32718                           
 32719                           ; BSR set to: 15
 32720                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 32721  019676  8130               	bsf	48,0,b	;volatile
 32722                           
 32723                           ;tmr7.c: 140: }
 32724  019678  0012               	return	
 32725  01967A                     i1l660:
 32726                           
 32727                           ; BSR set to: 15
 32728                           ;tmr7.c: 141: else
 32729                           ;tmr7.c: 142: {
 32730                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 32731                           
 32732                           ; BSR set to: 15
 32733  01967A  0101               	movlb	1	; () banked
 32734  01967C  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 32735  01967E  010F               	movlb	15	; () banked
 32736  019680  6F2F               	movwf	47,b	;volatile
 32737                           
 32738                           ; BSR set to: 15
 32739                           ;tmr7.c: 145: TMR7L = timerVal;
 32740  019682  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 32741  019686  0012               	return	
 32742  019688                     __end_of_TMR7_WriteTimer:
 32743                           	opt stack 0
 32744                           tosu	equ	0xFFF
 32745                           tosh	equ	0xFFE
 32746                           tosl	equ	0xFFD
 32747                           pclatu	equ	0xFFB
 32748                           pclath	equ	0xFFA
 32749                           tblptru	equ	0xFF8
 32750                           tblptrh	equ	0xFF7
 32751                           tblptrl	equ	0xFF6
 32752                           tablat	equ	0xFF5
 32753                           prodh	equ	0xFF4
 32754                           prodl	equ	0xFF3
 32755                           intcon	equ	0xFF2
 32756                           indf0	equ	0xFEF
 32757                           postinc0	equ	0xFEE
 32758                           fsr0h	equ	0xFEA
 32759                           fsr0l	equ	0xFE9
 32760                           wreg	equ	0xFE8
 32761                           indf1	equ	0xFE7
 32762                           postdec1	equ	0xFE5
 32763                           plusw1	equ	0xFE3
 32764                           fsr1h	equ	0xFE2
 32765                           fsr1l	equ	0xFE1
 32766                           bsr	equ	0xFE0
 32767                           indf2	equ	0xFDF
 32768                           postinc2	equ	0xFDE
 32769                           postdec2	equ	0xFDD
 32770                           plusw2	equ	0xFDB
 32771                           fsr2h	equ	0xFDA
 32772                           fsr2l	equ	0xFD9
 32773                           status	equ	0xFD8
 32774                           
 32775 ;; *************** function _TMR6_ISR *****************
 32776 ;; Defined at:
 32777 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 32778 ;; Parameters:    Size  Location     Type
 32779 ;;		None
 32780 ;; Auto vars:     Size  Location     Type
 32781 ;;		None
 32782 ;; Return value:  Size  Location     Type
 32783 ;;                  1    wreg      void 
 32784 ;; Registers used:
 32785 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32786 ;; Tracked objects:
 32787 ;;		On entry : 0/0
 32788 ;;		On exit  : 0/0
 32789 ;;		Unchanged: 0/0
 32790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32795 ;;Total ram usage:        0 bytes
 32796 ;; Hardware stack levels used:    1
 32797 ;; Hardware stack levels required when called:   10
 32798 ;; This function calls:
 32799 ;;		Absolute function
 32800 ;;		_TMR6_DefaultInterruptHandler
 32801 ;;		_heartbeatTimerCallback
 32802 ;; This function is called by:
 32803 ;;		_INTERRUPT_InterruptManagerLow
 32804 ;; This function uses a non-reentrant model
 32805 ;;
 32806                           
 32807                           	psect	text86
 32808  0195EC                     __ptext86:
 32809                           	opt stack 0
 32810  0195EC                     _TMR6_ISR:
 32811                           	opt stack 12
 32812                           
 32813                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 32814                           
 32815                           ; BSR set to: 15
 32816                           ;incstack = 0
 32817  0195EC  010E               	movlb	14	; () banked
 32818  0195EE  9B38               	bcf	56,5,b	;volatile
 32819                           
 32820                           ; BSR set to: 14
 32821                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 32822  0195F0  0102               	movlb	2	; () banked
 32823  0195F2  5137               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32824  0195F4  1138               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32825  0195F6  1139               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32826  0195F8  B4D8               	btfsc	status,2,c
 32827  0195FA  0012               	return	
 32828                           
 32829                           ; BSR set to: 2
 32830                           ;tmr6.c: 172: {
 32831                           ;tmr6.c: 173: TMR6_InterruptHandler();
 32832  0195FC  D801               	call	i1u2747_28
 32833  0195FE  0012               	return	
 32834  019600                     i1u2747_28:
 32835  019600  0005               	push	
 32836  019602  6EFA               	movwf	pclath,c
 32837  019604  5137               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32838  019606  6EFD               	movwf	tosl,c
 32839  019608  5138               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32840  01960A  6EFE               	movwf	tosh,c
 32841  01960C  5139               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32842  01960E  6EFF               	movwf	tosu,c
 32843  019610  50FA               	movf	pclath,w,c
 32844  019612  0012               	return		;indir
 32845  019614                     __end_of_TMR6_ISR:
 32846                           	opt stack 0
 32847                           tosu	equ	0xFFF
 32848                           tosh	equ	0xFFE
 32849                           tosl	equ	0xFFD
 32850                           pclatu	equ	0xFFB
 32851                           pclath	equ	0xFFA
 32852                           tblptru	equ	0xFF8
 32853                           tblptrh	equ	0xFF7
 32854                           tblptrl	equ	0xFF6
 32855                           tablat	equ	0xFF5
 32856                           prodh	equ	0xFF4
 32857                           prodl	equ	0xFF3
 32858                           intcon	equ	0xFF2
 32859                           indf0	equ	0xFEF
 32860                           postinc0	equ	0xFEE
 32861                           fsr0h	equ	0xFEA
 32862                           fsr0l	equ	0xFE9
 32863                           wreg	equ	0xFE8
 32864                           indf1	equ	0xFE7
 32865                           postdec1	equ	0xFE5
 32866                           plusw1	equ	0xFE3
 32867                           fsr1h	equ	0xFE2
 32868                           fsr1l	equ	0xFE1
 32869                           bsr	equ	0xFE0
 32870                           indf2	equ	0xFDF
 32871                           postinc2	equ	0xFDE
 32872                           postdec2	equ	0xFDD
 32873                           plusw2	equ	0xFDB
 32874                           fsr2h	equ	0xFDA
 32875                           fsr2l	equ	0xFD9
 32876                           status	equ	0xFD8
 32877                           
 32878 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 32879 ;; Defined at:
 32880 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 32881 ;; Parameters:    Size  Location     Type
 32882 ;;		None
 32883 ;; Auto vars:     Size  Location     Type
 32884 ;;		None
 32885 ;; Return value:  Size  Location     Type
 32886 ;;                  1    wreg      void 
 32887 ;; Registers used:
 32888 ;;		None
 32889 ;; Tracked objects:
 32890 ;;		On entry : 0/0
 32891 ;;		On exit  : 0/0
 32892 ;;		Unchanged: 0/0
 32893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32898 ;;Total ram usage:        0 bytes
 32899 ;; Hardware stack levels used:    1
 32900 ;; Hardware stack levels required when called:    9
 32901 ;; This function calls:
 32902 ;;		Nothing
 32903 ;; This function is called by:
 32904 ;;		_TMR6_Initialize
 32905 ;;		_TMR6_ISR
 32906 ;; This function uses a non-reentrant model
 32907 ;;
 32908                           
 32909                           	psect	text87
 32910  019A0C                     __ptext87:
 32911                           	opt stack 0
 32912  019A0C                     _TMR6_DefaultInterruptHandler:
 32913                           	opt stack 12
 32914                           
 32915                           ;incstack = 0
 32916  019A0C  0012               	return		;funcret
 32917  019A0E                     __end_of_TMR6_DefaultInterruptHandler:
 32918                           	opt stack 0
 32919                           tosu	equ	0xFFF
 32920                           tosh	equ	0xFFE
 32921                           tosl	equ	0xFFD
 32922                           pclatu	equ	0xFFB
 32923                           pclath	equ	0xFFA
 32924                           tblptru	equ	0xFF8
 32925                           tblptrh	equ	0xFF7
 32926                           tblptrl	equ	0xFF6
 32927                           tablat	equ	0xFF5
 32928                           prodh	equ	0xFF4
 32929                           prodl	equ	0xFF3
 32930                           intcon	equ	0xFF2
 32931                           indf0	equ	0xFEF
 32932                           postinc0	equ	0xFEE
 32933                           fsr0h	equ	0xFEA
 32934                           fsr0l	equ	0xFE9
 32935                           wreg	equ	0xFE8
 32936                           indf1	equ	0xFE7
 32937                           postdec1	equ	0xFE5
 32938                           plusw1	equ	0xFE3
 32939                           fsr1h	equ	0xFE2
 32940                           fsr1l	equ	0xFE1
 32941                           bsr	equ	0xFE0
 32942                           indf2	equ	0xFDF
 32943                           postinc2	equ	0xFDE
 32944                           postdec2	equ	0xFDD
 32945                           plusw2	equ	0xFDB
 32946                           fsr2h	equ	0xFDA
 32947                           fsr2l	equ	0xFD9
 32948                           status	equ	0xFD8
 32949                           
 32950 ;; *************** function _heartbeatTimerCallback *****************
 32951 ;; Defined at:
 32952 ;;		line 209 in file "main.c"
 32953 ;; Parameters:    Size  Location     Type
 32954 ;;		None
 32955 ;; Auto vars:     Size  Location     Type
 32956 ;;		None
 32957 ;; Return value:  Size  Location     Type
 32958 ;;                  1    wreg      void 
 32959 ;; Registers used:
 32960 ;;		wreg, status,2, status,0
 32961 ;; Tracked objects:
 32962 ;;		On entry : 0/0
 32963 ;;		On exit  : 0/0
 32964 ;;		Unchanged: 0/0
 32965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32968 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32969 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32970 ;;Total ram usage:        1 bytes
 32971 ;; Hardware stack levels used:    1
 32972 ;; Hardware stack levels required when called:    9
 32973 ;; This function calls:
 32974 ;;		Nothing
 32975 ;; This function is called by:
 32976 ;;		_main
 32977 ;;		_TMR6_ISR
 32978 ;; This function uses a non-reentrant model
 32979 ;;
 32980                           
 32981                           	psect	text88
 32982  019200                     __ptext88:
 32983                           	opt stack 0
 32984  019200                     _heartbeatTimerCallback:
 32985                           	opt stack 12
 32986                           
 32987                           ;main.c: 212: LATFbits.LATF2 = !LATFbits.LATF2;
 32988                           
 32989                           ;incstack = 0
 32990  019200  B47E               	btfsc	3966,2,c	;volatile
 32991  019202  D004               	goto	i1u1147_20
 32992  019204  0101               	movlb	1	; () banked
 32993  019206  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 32994  019208  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 32995  01920A  D002               	goto	i1u1148_28
 32996  01920C                     i1u1147_20:
 32997  01920C  0101               	movlb	1	; () banked
 32998  01920E  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 32999  019210                     i1u1148_28:
 33000  019210  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 33001  019212  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 33002  019214  507E               	movf	3966,w,c	;volatile
 33003  019216  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 33004  019218  0BFB               	andlw	-5
 33005  01921A  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 33006  01921C  6E7E               	movwf	3966,c	;volatile
 33007                           
 33008                           ;main.c: 215: dev_on_time++;
 33009  01921E  0E01               	movlw	1
 33010  019220  0102               	movlb	2	; () banked
 33011  019222  271C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 33012  019224  0E00               	movlw	0
 33013  019226  231D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 33014  019228  231E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 33015  01922A  231F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 33016                           
 33017                           ; BSR set to: 2
 33018                           ;main.c: 218: if (load_enable) {
 33019  01922C  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 33020  01922E  D006               	goto	i1l1150
 33021                           
 33022                           ; BSR set to: 2
 33023                           ;main.c: 220: load_on_time++;
 33024  019230  0E01               	movlw	1
 33025  019232  2718               	addwf	_load_on_time& (0+255),f,b	;volatile
 33026  019234  0E00               	movlw	0
 33027  019236  2319               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 33028  019238  231A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 33029  01923A  231B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 33030  01923C                     i1l1150:
 33031                           
 33032                           ; BSR set to: 2
 33033  01923C  0004               	clrwdt		;# 
 33034  01923E  0012               	return		;funcret
 33035  019240                     __end_of_heartbeatTimerCallback:
 33036                           	opt stack 0
 33037                           tosu	equ	0xFFF
 33038                           tosh	equ	0xFFE
 33039                           tosl	equ	0xFFD
 33040                           pclatu	equ	0xFFB
 33041                           pclath	equ	0xFFA
 33042                           tblptru	equ	0xFF8
 33043                           tblptrh	equ	0xFF7
 33044                           tblptrl	equ	0xFF6
 33045                           tablat	equ	0xFF5
 33046                           prodh	equ	0xFF4
 33047                           prodl	equ	0xFF3
 33048                           intcon	equ	0xFF2
 33049                           indf0	equ	0xFEF
 33050                           postinc0	equ	0xFEE
 33051                           fsr0h	equ	0xFEA
 33052                           fsr0l	equ	0xFE9
 33053                           wreg	equ	0xFE8
 33054                           indf1	equ	0xFE7
 33055                           postdec1	equ	0xFE5
 33056                           plusw1	equ	0xFE3
 33057                           fsr1h	equ	0xFE2
 33058                           fsr1l	equ	0xFE1
 33059                           bsr	equ	0xFE0
 33060                           indf2	equ	0xFDF
 33061                           postinc2	equ	0xFDE
 33062                           postdec2	equ	0xFDD
 33063                           plusw2	equ	0xFDB
 33064                           fsr2h	equ	0xFDA
 33065                           fsr2l	equ	0xFD9
 33066                           status	equ	0xFD8
 33067                           
 33068 ;; *************** function _EUSART2_Transmit_ISR *****************
 33069 ;; Defined at:
 33070 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 33071 ;; Parameters:    Size  Location     Type
 33072 ;;		None
 33073 ;; Auto vars:     Size  Location     Type
 33074 ;;		None
 33075 ;; Return value:  Size  Location     Type
 33076 ;;                  1    wreg      void 
 33077 ;; Registers used:
 33078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33079 ;; Tracked objects:
 33080 ;;		On entry : 0/0
 33081 ;;		On exit  : 0/0
 33082 ;;		Unchanged: 0/0
 33083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33088 ;;Total ram usage:        0 bytes
 33089 ;; Hardware stack levels used:    1
 33090 ;; Hardware stack levels required when called:    9
 33091 ;; This function calls:
 33092 ;;		Nothing
 33093 ;; This function is called by:
 33094 ;;		_EUSART2_Initialize
 33095 ;;		_INTERRUPT_InterruptManagerLow
 33096 ;; This function uses a non-reentrant model
 33097 ;;
 33098                           
 33099                           	psect	text89
 33100  01940C                     __ptext89:
 33101                           	opt stack 0
 33102  01940C                     _EUSART2_Transmit_ISR:
 33103                           	opt stack 13
 33104                           
 33105                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 33106                           
 33107                           ;incstack = 0
 33108  01940C  0E80               	movlw	128
 33109  01940E  0101               	movlb	1	; () banked
 33110  019410  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 33111  019412  D014               	goto	i1l423
 33112                           
 33113                           ; BSR set to: 1
 33114                           ;eusart2.c: 203: {
 33115                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 33116  019414  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 33117  019416  0D01               	mullw	1
 33118  019418  0E00               	movlw	low _eusart2TxBuffer
 33119  01941A  24F3               	addwf	prodl,w,c
 33120  01941C  6ED9               	movwf	fsr2l,c
 33121  01941E  0E03               	movlw	high _eusart2TxBuffer
 33122  019420  20F4               	addwfc	prodh,w,c
 33123  019422  6EDA               	movwf	fsr2h,c
 33124  019424  50DF               	movf	indf2,w,c
 33125  019426  010E               	movlb	14	; () banked
 33126  019428  6FF2               	movwf	242,b	;volatile
 33127                           
 33128                           ; BSR set to: 14
 33129  01942A  0101               	movlb	1	; () banked
 33130  01942C  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 33131                           
 33132                           ; BSR set to: 1
 33133                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 33134  01942E  0E7F               	movlw	127
 33135  019430  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 33136  019432  D002               	goto	i1l424
 33137                           
 33138                           ; BSR set to: 1
 33139                           ;eusart2.c: 206: {
 33140                           ;eusart2.c: 207: eusart2TxTail = 0;
 33141  019434  0E00               	movlw	0
 33142  019436  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 33143  019438                     i1l424:
 33144                           
 33145                           ; BSR set to: 1
 33146                           ;eusart2.c: 208: }
 33147                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 33148                           
 33149                           ; BSR set to: 1
 33150  019438  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 33151                           
 33152                           ;eusart2.c: 210: }
 33153  01943A  0012               	return	
 33154  01943C                     i1l423:
 33155                           
 33156                           ; BSR set to: 1
 33157                           ;eusart2.c: 211: else
 33158                           ;eusart2.c: 212: {
 33159                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 33160  01943C  010E               	movlb	14	; () banked
 33161  01943E  9D2C               	bcf	44,6,b	;volatile
 33162  019440  0012               	return	
 33163  019442                     __end_of_EUSART2_Transmit_ISR:
 33164                           	opt stack 0
 33165                           tosu	equ	0xFFF
 33166                           tosh	equ	0xFFE
 33167                           tosl	equ	0xFFD
 33168                           pclatu	equ	0xFFB
 33169                           pclath	equ	0xFFA
 33170                           tblptru	equ	0xFF8
 33171                           tblptrh	equ	0xFF7
 33172                           tblptrl	equ	0xFF6
 33173                           tablat	equ	0xFF5
 33174                           prodh	equ	0xFF4
 33175                           prodl	equ	0xFF3
 33176                           intcon	equ	0xFF2
 33177                           indf0	equ	0xFEF
 33178                           postinc0	equ	0xFEE
 33179                           fsr0h	equ	0xFEA
 33180                           fsr0l	equ	0xFE9
 33181                           wreg	equ	0xFE8
 33182                           indf1	equ	0xFE7
 33183                           postdec1	equ	0xFE5
 33184                           plusw1	equ	0xFE3
 33185                           fsr1h	equ	0xFE2
 33186                           fsr1l	equ	0xFE1
 33187                           bsr	equ	0xFE0
 33188                           indf2	equ	0xFDF
 33189                           postinc2	equ	0xFDE
 33190                           postdec2	equ	0xFDD
 33191                           plusw2	equ	0xFDB
 33192                           fsr2h	equ	0xFDA
 33193                           fsr2l	equ	0xFD9
 33194                           status	equ	0xFD8
 33195                           
 33196 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 33197 ;; Defined at:
 33198 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 33199 ;; Parameters:    Size  Location     Type
 33200 ;;		None
 33201 ;; Auto vars:     Size  Location     Type
 33202 ;;		None
 33203 ;; Return value:  Size  Location     Type
 33204 ;;                  1    wreg      void 
 33205 ;; Registers used:
 33206 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33207 ;; Tracked objects:
 33208 ;;		On entry : 0/0
 33209 ;;		On exit  : 0/0
 33210 ;;		Unchanged: 0/0
 33211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33214 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33215 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33216 ;;Total ram usage:       18 bytes
 33217 ;; Hardware stack levels used:    1
 33218 ;; Hardware stack levels required when called:    8
 33219 ;; This function calls:
 33220 ;;		Absolute function
 33221 ;;		_ADCC_ThresholdISR
 33222 ;;		_EUSART2_Receive_ISR
 33223 ;;		_HLVD_ISR
 33224 ;;		_INT0_ISR
 33225 ;;		_TMR4_ISR
 33226 ;;		_TMR5_ISR
 33227 ;; This function is called by:
 33228 ;;		Interrupt level 2
 33229 ;; This function uses a non-reentrant model
 33230 ;;
 33231                           
 33232                           	psect	intcode
 33233  000008                     __pintcode:
 33234                           	opt stack 0
 33235  000008                     _INTERRUPT_InterruptManagerHigh:
 33236                           	opt stack 11
 33237                           
 33238                           ;incstack = 0
 33239  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33240  00000A  EF22  F0BF         	goto	int_func
 33241                           tosu	equ	0xFFF
 33242                           tosh	equ	0xFFE
 33243                           tosl	equ	0xFFD
 33244                           pclatu	equ	0xFFB
 33245                           pclath	equ	0xFFA
 33246                           tblptru	equ	0xFF8
 33247                           tblptrh	equ	0xFF7
 33248                           tblptrl	equ	0xFF6
 33249                           tablat	equ	0xFF5
 33250                           prodh	equ	0xFF4
 33251                           prodl	equ	0xFF3
 33252                           intcon	equ	0xFF2
 33253                           indf0	equ	0xFEF
 33254                           postinc0	equ	0xFEE
 33255                           fsr0h	equ	0xFEA
 33256                           fsr0l	equ	0xFE9
 33257                           wreg	equ	0xFE8
 33258                           indf1	equ	0xFE7
 33259                           postdec1	equ	0xFE5
 33260                           plusw1	equ	0xFE3
 33261                           fsr1h	equ	0xFE2
 33262                           fsr1l	equ	0xFE1
 33263                           bsr	equ	0xFE0
 33264                           indf2	equ	0xFDF
 33265                           postinc2	equ	0xFDE
 33266                           postdec2	equ	0xFDD
 33267                           plusw2	equ	0xFDB
 33268                           fsr2h	equ	0xFDA
 33269                           fsr2l	equ	0xFD9
 33270                           status	equ	0xFD8
 33271                           
 33272                           	psect	intcode_body
 33273  017E44                     __pintcode_body:
 33274                           	opt stack 11
 33275  017E44                     int_func:
 33276                           	opt stack 11
 33277  017E44  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 33278  017E48  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 33279  017E4C  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 33280  017E50  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 33281  017E54  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 33282  017E58  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 33283  017E5C  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 33284  017E60  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 33285  017E64  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 33286  017E68  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 33287  017E6C  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 33288  017E70  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 33289  017E74  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 33290  017E78  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 33291  017E7C  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 33292  017E80  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 33293  017E84  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 33294  017E88  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 33295                           
 33296                           ;interrupt_manager.c: 92: if(PIE5bits.TMR4IE == 1 && PIR5bits.TMR4IF == 1)
 33297  017E8C  010E               	movlb	14	; () banked
 33298  017E8E  B72E               	btfsc	46,3,b	;volatile
 33299                           
 33300                           ; BSR set to: 14
 33301  017E90  A738               	btfss	56,3,b	;volatile
 33302  017E92  D003               	goto	i2l228
 33303                           
 33304                           ; BSR set to: 14
 33305                           ;interrupt_manager.c: 93: {
 33306                           ;interrupt_manager.c: 94: TMR4_ISR();
 33307  017E94  EC44  F0CB         	call	_TMR4_ISR	;wreg free
 33308                           
 33309                           ;interrupt_manager.c: 95: }
 33310  017E98  D027               	goto	i2l238
 33311  017E9A                     i2l228:
 33312                           
 33313                           ; BSR set to: 14
 33314                           ;interrupt_manager.c: 96: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 33315  017E9A  BF2B               	btfsc	43,7,b	;volatile
 33316                           
 33317                           ; BSR set to: 14
 33318  017E9C  AF35               	btfss	53,7,b	;volatile
 33319  017E9E  D003               	goto	i2l230
 33320                           
 33321                           ; BSR set to: 14
 33322                           ;interrupt_manager.c: 97: {
 33323                           ;interrupt_manager.c: 98: HLVD_ISR();
 33324  017EA0  ECB4  F0C9         	call	_HLVD_ISR	;wreg free
 33325                           
 33326                           ;interrupt_manager.c: 99: }
 33327  017EA4  D021               	goto	i2l238
 33328  017EA6                     i2l230:
 33329                           
 33330                           ; BSR set to: 14
 33331                           ;interrupt_manager.c: 100: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 33332  017EA6  B129               	btfsc	41,0,b	;volatile
 33333                           
 33334                           ; BSR set to: 14
 33335  017EA8  A133               	btfss	51,0,b	;volatile
 33336  017EAA  D003               	goto	i2l232
 33337                           
 33338                           ; BSR set to: 14
 33339                           ;interrupt_manager.c: 101: {
 33340                           ;interrupt_manager.c: 102: INT0_ISR();
 33341  017EAC  ECDF  F0CC         	call	_INT0_ISR	;wreg free
 33342                           
 33343                           ;interrupt_manager.c: 103: }
 33344  017EB0  D01B               	goto	i2l238
 33345  017EB2                     i2l232:
 33346                           
 33347                           ; BSR set to: 14
 33348                           ;interrupt_manager.c: 104: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 33349  017EB2  BF2C               	btfsc	44,7,b	;volatile
 33350                           
 33351                           ; BSR set to: 14
 33352  017EB4  AF36               	btfss	54,7,b	;volatile
 33353  017EB6  D00D               	goto	i2l234
 33354                           
 33355                           ; BSR set to: 14
 33356                           ;interrupt_manager.c: 105: {
 33357                           ;interrupt_manager.c: 106: EUSART2_RxDefaultInterruptHandler();
 33358  017EB8  D801               	call	i2u2769_48
 33359  017EBA  D016               	goto	i2l238
 33360  017EBC                     i2u2769_48:
 33361  017EBC  0005               	push	
 33362  017EBE  6EFA               	movwf	pclath,c
 33363  017EC0  0102               	movlb	2	; () banked
 33364  017EC2  513A               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 33365  017EC4  6EFD               	movwf	tosl,c
 33366  017EC6  513B               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 33367  017EC8  6EFE               	movwf	tosh,c
 33368  017ECA  513C               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 33369  017ECC  6EFF               	movwf	tosu,c
 33370  017ECE  50FA               	movf	pclath,w,c
 33371  017ED0  0012               	return		;indir
 33372  017ED2                     i2l234:
 33373                           
 33374                           ; BSR set to: 14
 33375                           ;interrupt_manager.c: 108: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 33376  017ED2  B92E               	btfsc	46,4,b	;volatile
 33377                           
 33378                           ; BSR set to: 14
 33379  017ED4  A938               	btfss	56,4,b	;volatile
 33380  017ED6  D003               	goto	i2l236
 33381                           
 33382                           ; BSR set to: 14
 33383                           ;interrupt_manager.c: 109: {
 33384                           ;interrupt_manager.c: 110: TMR5_ISR();
 33385  017ED8  EC3B  F0CA         	call	_TMR5_ISR	;wreg free
 33386                           
 33387                           ;interrupt_manager.c: 111: }
 33388  017EDC  D005               	goto	i2l238
 33389  017EDE                     i2l236:
 33390                           
 33391                           ; BSR set to: 14
 33392                           ;interrupt_manager.c: 112: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 33393  017EDE  B32A               	btfsc	42,1,b	;volatile
 33394                           
 33395                           ; BSR set to: 14
 33396  017EE0  A334               	btfss	52,1,b	;volatile
 33397  017EE2  D002               	goto	i2l238
 33398                           
 33399                           ; BSR set to: 14
 33400                           ;interrupt_manager.c: 113: {
 33401                           ;interrupt_manager.c: 114: ADCC_ThresholdISR();
 33402  017EE4  EC0A  F0CB         	call	_ADCC_ThresholdISR	;wreg free
 33403  017EE8                     i2l238:
 33404                           
 33405                           ;interrupt_manager.c: 116: else
 33406                           ;interrupt_manager.c: 117: {
 33407  017EE8  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 33408  017EEC  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 33409  017EF0  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 33410  017EF4  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 33411  017EF8  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 33412  017EFC  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 33413  017F00  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 33414  017F04  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 33415  017F08  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 33416  017F0C  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 33417  017F10  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 33418  017F14  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 33419  017F18  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 33420  017F1C  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 33421  017F20  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 33422  017F24  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 33423  017F28  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 33424  017F2C  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 33425  017F30  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33426  017F32  0011               	retfie		f
 33427  017F34                     __end_of_INTERRUPT_InterruptManagerHigh:
 33428                           	opt stack 0
 33429                           tosu	equ	0xFFF
 33430                           tosh	equ	0xFFE
 33431                           tosl	equ	0xFFD
 33432                           pclatu	equ	0xFFB
 33433                           pclath	equ	0xFFA
 33434                           tblptru	equ	0xFF8
 33435                           tblptrh	equ	0xFF7
 33436                           tblptrl	equ	0xFF6
 33437                           tablat	equ	0xFF5
 33438                           prodh	equ	0xFF4
 33439                           prodl	equ	0xFF3
 33440                           intcon	equ	0xFF2
 33441                           indf0	equ	0xFEF
 33442                           postinc0	equ	0xFEE
 33443                           fsr0h	equ	0xFEA
 33444                           fsr0l	equ	0xFE9
 33445                           wreg	equ	0xFE8
 33446                           indf1	equ	0xFE7
 33447                           postdec1	equ	0xFE5
 33448                           plusw1	equ	0xFE3
 33449                           fsr1h	equ	0xFE2
 33450                           fsr1l	equ	0xFE1
 33451                           bsr	equ	0xFE0
 33452                           indf2	equ	0xFDF
 33453                           postinc2	equ	0xFDE
 33454                           postdec2	equ	0xFDD
 33455                           plusw2	equ	0xFDB
 33456                           fsr2h	equ	0xFDA
 33457                           fsr2l	equ	0xFD9
 33458                           status	equ	0xFD8
 33459                           
 33460 ;; *************** function _TMR5_ISR *****************
 33461 ;; Defined at:
 33462 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 33463 ;; Parameters:    Size  Location     Type
 33464 ;;		None
 33465 ;; Auto vars:     Size  Location     Type
 33466 ;;		None
 33467 ;; Return value:  Size  Location     Type
 33468 ;;                  1    wreg      void 
 33469 ;; Registers used:
 33470 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 33471 ;; Tracked objects:
 33472 ;;		On entry : 0/0
 33473 ;;		On exit  : 0/0
 33474 ;;		Unchanged: 0/0
 33475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33480 ;;Total ram usage:        0 bytes
 33481 ;; Hardware stack levels used:    1
 33482 ;; Hardware stack levels required when called:    2
 33483 ;; This function calls:
 33484 ;;		Absolute function
 33485 ;;		_TMR5_DefaultInterruptHandler
 33486 ;;		_TMR5_WriteTimer
 33487 ;;		_dimmingOnTimeCallback
 33488 ;; This function is called by:
 33489 ;;		_INTERRUPT_InterruptManagerHigh
 33490 ;; This function uses a non-reentrant model
 33491 ;;
 33492                           
 33493                           	psect	text91
 33494  019476                     __ptext91:
 33495                           	opt stack 0
 33496  019476                     _TMR5_ISR:
 33497                           	opt stack 16
 33498                           
 33499                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 33500                           
 33501                           ;incstack = 0
 33502  019476  010E               	movlb	14	; () banked
 33503  019478  9938               	bcf	56,4,b	;volatile
 33504                           
 33505                           ; BSR set to: 14
 33506                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 33507  01947A  C244  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 33508  01947E  C245  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 33509  019482  ECFB  F0CB         	call	_TMR5_WriteTimer	;wreg free
 33510                           
 33511                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 33512  019486  0102               	movlb	2	; () banked
 33513  019488  512E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33514  01948A  112F               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33515  01948C  1130               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33516  01948E  B4D8               	btfsc	status,2,c
 33517  019490  0012               	return	
 33518                           
 33519                           ; BSR set to: 2
 33520                           ;tmr5.c: 172: {
 33521                           ;tmr5.c: 173: TMR5_InterruptHandler();
 33522  019492  D801               	call	i2u2743_48
 33523  019494  0012               	return	
 33524  019496                     i2u2743_48:
 33525  019496  0005               	push	
 33526  019498  6EFA               	movwf	pclath,c
 33527  01949A  512E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33528  01949C  6EFD               	movwf	tosl,c
 33529  01949E  512F               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33530  0194A0  6EFE               	movwf	tosh,c
 33531  0194A2  5130               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33532  0194A4  6EFF               	movwf	tosu,c
 33533  0194A6  50FA               	movf	pclath,w,c
 33534  0194A8  0012               	return		;indir
 33535  0194AA                     __end_of_TMR5_ISR:
 33536                           	opt stack 0
 33537                           tosu	equ	0xFFF
 33538                           tosh	equ	0xFFE
 33539                           tosl	equ	0xFFD
 33540                           pclatu	equ	0xFFB
 33541                           pclath	equ	0xFFA
 33542                           tblptru	equ	0xFF8
 33543                           tblptrh	equ	0xFF7
 33544                           tblptrl	equ	0xFF6
 33545                           tablat	equ	0xFF5
 33546                           prodh	equ	0xFF4
 33547                           prodl	equ	0xFF3
 33548                           intcon	equ	0xFF2
 33549                           indf0	equ	0xFEF
 33550                           postinc0	equ	0xFEE
 33551                           fsr0h	equ	0xFEA
 33552                           fsr0l	equ	0xFE9
 33553                           wreg	equ	0xFE8
 33554                           indf1	equ	0xFE7
 33555                           postdec1	equ	0xFE5
 33556                           plusw1	equ	0xFE3
 33557                           fsr1h	equ	0xFE2
 33558                           fsr1l	equ	0xFE1
 33559                           bsr	equ	0xFE0
 33560                           indf2	equ	0xFDF
 33561                           postinc2	equ	0xFDE
 33562                           postdec2	equ	0xFDD
 33563                           plusw2	equ	0xFDB
 33564                           fsr2h	equ	0xFDA
 33565                           fsr2l	equ	0xFD9
 33566                           status	equ	0xFD8
 33567                           
 33568 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33569 ;; Defined at:
 33570 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 33571 ;; Parameters:    Size  Location     Type
 33572 ;;		None
 33573 ;; Auto vars:     Size  Location     Type
 33574 ;;		None
 33575 ;; Return value:  Size  Location     Type
 33576 ;;                  1    wreg      void 
 33577 ;; Registers used:
 33578 ;;		None
 33579 ;; Tracked objects:
 33580 ;;		On entry : 0/0
 33581 ;;		On exit  : 0/0
 33582 ;;		Unchanged: 0/0
 33583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33588 ;;Total ram usage:        0 bytes
 33589 ;; Hardware stack levels used:    1
 33590 ;; This function calls:
 33591 ;;		Nothing
 33592 ;; This function is called by:
 33593 ;;		_TMR5_Initialize
 33594 ;;		_TMR5_ISR
 33595 ;; This function uses a non-reentrant model
 33596 ;;
 33597                           
 33598                           	psect	text92
 33599  019A0E                     __ptext92:
 33600                           	opt stack 0
 33601  019A0E                     _TMR5_DefaultInterruptHandler:
 33602                           	opt stack 17
 33603                           
 33604                           ;incstack = 0
 33605  019A0E  0012               	return		;funcret
 33606  019A10                     __end_of_TMR5_DefaultInterruptHandler:
 33607                           	opt stack 0
 33608                           tosu	equ	0xFFF
 33609                           tosh	equ	0xFFE
 33610                           tosl	equ	0xFFD
 33611                           pclatu	equ	0xFFB
 33612                           pclath	equ	0xFFA
 33613                           tblptru	equ	0xFF8
 33614                           tblptrh	equ	0xFF7
 33615                           tblptrl	equ	0xFF6
 33616                           tablat	equ	0xFF5
 33617                           prodh	equ	0xFF4
 33618                           prodl	equ	0xFF3
 33619                           intcon	equ	0xFF2
 33620                           indf0	equ	0xFEF
 33621                           postinc0	equ	0xFEE
 33622                           fsr0h	equ	0xFEA
 33623                           fsr0l	equ	0xFE9
 33624                           wreg	equ	0xFE8
 33625                           indf1	equ	0xFE7
 33626                           postdec1	equ	0xFE5
 33627                           plusw1	equ	0xFE3
 33628                           fsr1h	equ	0xFE2
 33629                           fsr1l	equ	0xFE1
 33630                           bsr	equ	0xFE0
 33631                           indf2	equ	0xFDF
 33632                           postinc2	equ	0xFDE
 33633                           postdec2	equ	0xFDD
 33634                           plusw2	equ	0xFDB
 33635                           fsr2h	equ	0xFDA
 33636                           fsr2l	equ	0xFD9
 33637                           status	equ	0xFD8
 33638                           
 33639 ;; *************** function _dimmingOnTimeCallback *****************
 33640 ;; Defined at:
 33641 ;;		line 459 in file "main.c"
 33642 ;; Parameters:    Size  Location     Type
 33643 ;;		None
 33644 ;; Auto vars:     Size  Location     Type
 33645 ;;		None
 33646 ;; Return value:  Size  Location     Type
 33647 ;;                  1    wreg      void 
 33648 ;; Registers used:
 33649 ;;		cstack
 33650 ;; Tracked objects:
 33651 ;;		On entry : 0/0
 33652 ;;		On exit  : 0/0
 33653 ;;		Unchanged: 0/0
 33654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33659 ;;Total ram usage:        0 bytes
 33660 ;; Hardware stack levels used:    1
 33661 ;; Hardware stack levels required when called:    1
 33662 ;; This function calls:
 33663 ;;		i2_TMR5_StopTimer
 33664 ;; This function is called by:
 33665 ;;		_main
 33666 ;;		_TMR5_ISR
 33667 ;; This function uses a non-reentrant model
 33668 ;;
 33669                           
 33670                           	psect	text93
 33671  0199A6                     __ptext93:
 33672                           	opt stack 0
 33673  0199A6                     _dimmingOnTimeCallback:
 33674                           	opt stack 16
 33675                           
 33676                           ;main.c: 462: LATGbits.LATG1 = 1;
 33677                           
 33678                           ;incstack = 0
 33679  0199A6  827F               	bsf	3967,1,c	;volatile
 33680                           
 33681                           ;main.c: 465: TMR5_StopTimer();
 33682  0199A8  ECFF  F0CC         	call	i2_TMR5_StopTimer	;wreg free
 33683                           
 33684                           ;main.c: 468: PIE5bits.TMR5IE = 0;
 33685  0199AC  010E               	movlb	14	; () banked
 33686  0199AE  992E               	bcf	46,4,b	;volatile
 33687                           
 33688                           ; BSR set to: 14
 33689  0199B0  0012               	return		;funcret
 33690  0199B2                     __end_of_dimmingOnTimeCallback:
 33691                           	opt stack 0
 33692                           tosu	equ	0xFFF
 33693                           tosh	equ	0xFFE
 33694                           tosl	equ	0xFFD
 33695                           pclatu	equ	0xFFB
 33696                           pclath	equ	0xFFA
 33697                           tblptru	equ	0xFF8
 33698                           tblptrh	equ	0xFF7
 33699                           tblptrl	equ	0xFF6
 33700                           tablat	equ	0xFF5
 33701                           prodh	equ	0xFF4
 33702                           prodl	equ	0xFF3
 33703                           intcon	equ	0xFF2
 33704                           indf0	equ	0xFEF
 33705                           postinc0	equ	0xFEE
 33706                           fsr0h	equ	0xFEA
 33707                           fsr0l	equ	0xFE9
 33708                           wreg	equ	0xFE8
 33709                           indf1	equ	0xFE7
 33710                           postdec1	equ	0xFE5
 33711                           plusw1	equ	0xFE3
 33712                           fsr1h	equ	0xFE2
 33713                           fsr1l	equ	0xFE1
 33714                           bsr	equ	0xFE0
 33715                           indf2	equ	0xFDF
 33716                           postinc2	equ	0xFDE
 33717                           postdec2	equ	0xFDD
 33718                           plusw2	equ	0xFDB
 33719                           fsr2h	equ	0xFDA
 33720                           fsr2l	equ	0xFD9
 33721                           status	equ	0xFD8
 33722                           
 33723 ;; *************** function i2_TMR5_StopTimer *****************
 33724 ;; Defined at:
 33725 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 33726 ;; Parameters:    Size  Location     Type
 33727 ;;		None
 33728 ;; Auto vars:     Size  Location     Type
 33729 ;;		None
 33730 ;; Return value:  Size  Location     Type
 33731 ;;                  1    wreg      void 
 33732 ;; Registers used:
 33733 ;;		None
 33734 ;; Tracked objects:
 33735 ;;		On entry : 0/0
 33736 ;;		On exit  : 0/0
 33737 ;;		Unchanged: 0/0
 33738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33743 ;;Total ram usage:        0 bytes
 33744 ;; Hardware stack levels used:    1
 33745 ;; This function calls:
 33746 ;;		Nothing
 33747 ;; This function is called by:
 33748 ;;		_dimmingOnTimeCallback
 33749 ;; This function uses a non-reentrant model
 33750 ;;
 33751                           
 33752                           	psect	text94
 33753  0199FE                     __ptext94:
 33754                           	opt stack 0
 33755  0199FE                     i2_TMR5_StopTimer:
 33756                           	opt stack 16
 33757                           
 33758                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 33759                           
 33760                           ; BSR set to: 14
 33761                           ;incstack = 0
 33762  0199FE  90C3               	bcf	4035,0,c	;volatile
 33763  019A00  0012               	return		;funcret
 33764  019A02                     __end_ofi2_TMR5_StopTimer:
 33765                           	opt stack 0
 33766                           tosu	equ	0xFFF
 33767                           tosh	equ	0xFFE
 33768                           tosl	equ	0xFFD
 33769                           pclatu	equ	0xFFB
 33770                           pclath	equ	0xFFA
 33771                           tblptru	equ	0xFF8
 33772                           tblptrh	equ	0xFF7
 33773                           tblptrl	equ	0xFF6
 33774                           tablat	equ	0xFF5
 33775                           prodh	equ	0xFF4
 33776                           prodl	equ	0xFF3
 33777                           intcon	equ	0xFF2
 33778                           indf0	equ	0xFEF
 33779                           postinc0	equ	0xFEE
 33780                           fsr0h	equ	0xFEA
 33781                           fsr0l	equ	0xFE9
 33782                           wreg	equ	0xFE8
 33783                           indf1	equ	0xFE7
 33784                           postdec1	equ	0xFE5
 33785                           plusw1	equ	0xFE3
 33786                           fsr1h	equ	0xFE2
 33787                           fsr1l	equ	0xFE1
 33788                           bsr	equ	0xFE0
 33789                           indf2	equ	0xFDF
 33790                           postinc2	equ	0xFDE
 33791                           postdec2	equ	0xFDD
 33792                           plusw2	equ	0xFDB
 33793                           fsr2h	equ	0xFDA
 33794                           fsr2l	equ	0xFD9
 33795                           status	equ	0xFD8
 33796                           
 33797 ;; *************** function _TMR4_ISR *****************
 33798 ;; Defined at:
 33799 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 33800 ;; Parameters:    Size  Location     Type
 33801 ;;		None
 33802 ;; Auto vars:     Size  Location     Type
 33803 ;;		None
 33804 ;; Return value:  Size  Location     Type
 33805 ;;                  1    wreg      void 
 33806 ;; Registers used:
 33807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 33808 ;; Tracked objects:
 33809 ;;		On entry : 0/0
 33810 ;;		On exit  : 0/0
 33811 ;;		Unchanged: 0/0
 33812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33817 ;;Total ram usage:        0 bytes
 33818 ;; Hardware stack levels used:    1
 33819 ;; Hardware stack levels required when called:    4
 33820 ;; This function calls:
 33821 ;;		_TMR4_CallBack
 33822 ;; This function is called by:
 33823 ;;		_INTERRUPT_InterruptManagerHigh
 33824 ;; This function uses a non-reentrant model
 33825 ;;
 33826                           
 33827                           	psect	text95
 33828  019688                     __ptext95:
 33829                           	opt stack 0
 33830  019688                     _TMR4_ISR:
 33831                           	opt stack 14
 33832                           
 33833                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;
 33834                           ;tmr4.c: 170: PIR5bits.TMR4IF = 0;
 33835                           
 33836                           ;incstack = 0
 33837  019688  010E               	movlb	14	; () banked
 33838  01968A  9738               	bcf	56,3,b	;volatile
 33839                           
 33840                           ; BSR set to: 14
 33841                           ;tmr4.c: 173: if (++CountCallBack >= 8)
 33842  01968C  0102               	movlb	2	; () banked
 33843  01968E  4B42               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 33844  019690  2B43               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33845  019692  5143               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33846  019694  E104               	bnz	i2u2741_40
 33847  019696  0E08               	movlw	8
 33848  019698  5D42               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 33849  01969A  A0D8               	btfss	status,0,c
 33850  01969C  0012               	return	
 33851  01969E                     i2u2741_40:
 33852                           
 33853                           ; BSR set to: 2
 33854                           ;tmr4.c: 174: {
 33855                           ;tmr4.c: 176: TMR4_CallBack();
 33856  01969E  EC7C  F0CB         	call	_TMR4_CallBack	;wreg free
 33857                           
 33858                           ;tmr4.c: 179: CountCallBack = 0;
 33859  0196A2  0E00               	movlw	0
 33860  0196A4  0102               	movlb	2	; () banked
 33861  0196A6  6F43               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 33862  0196A8  0E00               	movlw	0
 33863  0196AA  6F42               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 33864  0196AC  0012               	return	
 33865  0196AE                     __end_of_TMR4_ISR:
 33866                           	opt stack 0
 33867                           tosu	equ	0xFFF
 33868                           tosh	equ	0xFFE
 33869                           tosl	equ	0xFFD
 33870                           pclatu	equ	0xFFB
 33871                           pclath	equ	0xFFA
 33872                           tblptru	equ	0xFF8
 33873                           tblptrh	equ	0xFF7
 33874                           tblptrl	equ	0xFF6
 33875                           tablat	equ	0xFF5
 33876                           prodh	equ	0xFF4
 33877                           prodl	equ	0xFF3
 33878                           intcon	equ	0xFF2
 33879                           indf0	equ	0xFEF
 33880                           postinc0	equ	0xFEE
 33881                           fsr0h	equ	0xFEA
 33882                           fsr0l	equ	0xFE9
 33883                           wreg	equ	0xFE8
 33884                           indf1	equ	0xFE7
 33885                           postdec1	equ	0xFE5
 33886                           plusw1	equ	0xFE3
 33887                           fsr1h	equ	0xFE2
 33888                           fsr1l	equ	0xFE1
 33889                           bsr	equ	0xFE0
 33890                           indf2	equ	0xFDF
 33891                           postinc2	equ	0xFDE
 33892                           postdec2	equ	0xFDD
 33893                           plusw2	equ	0xFDB
 33894                           fsr2h	equ	0xFDA
 33895                           fsr2l	equ	0xFD9
 33896                           status	equ	0xFD8
 33897                           
 33898 ;; *************** function _TMR4_CallBack *****************
 33899 ;; Defined at:
 33900 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 33901 ;; Parameters:    Size  Location     Type
 33902 ;;		None
 33903 ;; Auto vars:     Size  Location     Type
 33904 ;;		None
 33905 ;; Return value:  Size  Location     Type
 33906 ;;                  1    wreg      void 
 33907 ;; Registers used:
 33908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 33909 ;; Tracked objects:
 33910 ;;		On entry : 0/0
 33911 ;;		On exit  : 0/0
 33912 ;;		Unchanged: 0/0
 33913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33918 ;;Total ram usage:        0 bytes
 33919 ;; Hardware stack levels used:    1
 33920 ;; Hardware stack levels required when called:    3
 33921 ;; This function calls:
 33922 ;;		Absolute function
 33923 ;;		_TMR4_DefaultInterruptHandler
 33924 ;;		_writeEnergyToEEPROMCallback
 33925 ;; This function is called by:
 33926 ;;		_TMR4_ISR
 33927 ;; This function uses a non-reentrant model
 33928 ;;
 33929                           
 33930                           	psect	text96
 33931  0196F8                     __ptext96:
 33932                           	opt stack 0
 33933  0196F8                     _TMR4_CallBack:
 33934                           	opt stack 14
 33935                           
 33936                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
 33937                           
 33938                           ; BSR set to: 2
 33939                           ;incstack = 0
 33940  0196F8  0102               	movlb	2	; () banked
 33941  0196FA  5128               	movf	_TMR4_InterruptHandler& (0+255),w,b
 33942  0196FC  1129               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 33943  0196FE  112A               	iorwf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 33944  019700  B4D8               	btfsc	status,2,c
 33945  019702  0012               	return	
 33946                           
 33947                           ; BSR set to: 2
 33948                           ;tmr4.c: 188: {
 33949                           ;tmr4.c: 189: TMR4_InterruptHandler();
 33950  019704  D801               	call	i2u2684_48
 33951  019706  0012               	return	
 33952  019708                     i2u2684_48:
 33953  019708  0005               	push	
 33954  01970A  6EFA               	movwf	pclath,c
 33955  01970C  5128               	movf	_TMR4_InterruptHandler& (0+255),w,b
 33956  01970E  6EFD               	movwf	tosl,c
 33957  019710  5129               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 33958  019712  6EFE               	movwf	tosh,c
 33959  019714  512A               	movf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 33960  019716  6EFF               	movwf	tosu,c
 33961  019718  50FA               	movf	pclath,w,c
 33962  01971A  0012               	return		;indir
 33963  01971C                     __end_of_TMR4_CallBack:
 33964                           	opt stack 0
 33965                           tosu	equ	0xFFF
 33966                           tosh	equ	0xFFE
 33967                           tosl	equ	0xFFD
 33968                           pclatu	equ	0xFFB
 33969                           pclath	equ	0xFFA
 33970                           tblptru	equ	0xFF8
 33971                           tblptrh	equ	0xFF7
 33972                           tblptrl	equ	0xFF6
 33973                           tablat	equ	0xFF5
 33974                           prodh	equ	0xFF4
 33975                           prodl	equ	0xFF3
 33976                           intcon	equ	0xFF2
 33977                           indf0	equ	0xFEF
 33978                           postinc0	equ	0xFEE
 33979                           fsr0h	equ	0xFEA
 33980                           fsr0l	equ	0xFE9
 33981                           wreg	equ	0xFE8
 33982                           indf1	equ	0xFE7
 33983                           postdec1	equ	0xFE5
 33984                           plusw1	equ	0xFE3
 33985                           fsr1h	equ	0xFE2
 33986                           fsr1l	equ	0xFE1
 33987                           bsr	equ	0xFE0
 33988                           indf2	equ	0xFDF
 33989                           postinc2	equ	0xFDE
 33990                           postdec2	equ	0xFDD
 33991                           plusw2	equ	0xFDB
 33992                           fsr2h	equ	0xFDA
 33993                           fsr2l	equ	0xFD9
 33994                           status	equ	0xFD8
 33995                           
 33996 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 33997 ;; Defined at:
 33998 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 33999 ;; Parameters:    Size  Location     Type
 34000 ;;		None
 34001 ;; Auto vars:     Size  Location     Type
 34002 ;;		None
 34003 ;; Return value:  Size  Location     Type
 34004 ;;                  1    wreg      void 
 34005 ;; Registers used:
 34006 ;;		None
 34007 ;; Tracked objects:
 34008 ;;		On entry : 0/0
 34009 ;;		On exit  : 0/0
 34010 ;;		Unchanged: 0/0
 34011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34016 ;;Total ram usage:        0 bytes
 34017 ;; Hardware stack levels used:    1
 34018 ;; This function calls:
 34019 ;;		Nothing
 34020 ;; This function is called by:
 34021 ;;		_TMR4_Initialize
 34022 ;;		_TMR4_CallBack
 34023 ;; This function uses a non-reentrant model
 34024 ;;
 34025                           
 34026                           	psect	text97
 34027  019A10                     __ptext97:
 34028                           	opt stack 0
 34029  019A10                     _TMR4_DefaultInterruptHandler:
 34030                           	opt stack 16
 34031                           
 34032                           ;incstack = 0
 34033  019A10  0012               	return		;funcret
 34034  019A12                     __end_of_TMR4_DefaultInterruptHandler:
 34035                           	opt stack 0
 34036                           tosu	equ	0xFFF
 34037                           tosh	equ	0xFFE
 34038                           tosl	equ	0xFFD
 34039                           pclatu	equ	0xFFB
 34040                           pclath	equ	0xFFA
 34041                           tblptru	equ	0xFF8
 34042                           tblptrh	equ	0xFF7
 34043                           tblptrl	equ	0xFF6
 34044                           tablat	equ	0xFF5
 34045                           prodh	equ	0xFF4
 34046                           prodl	equ	0xFF3
 34047                           intcon	equ	0xFF2
 34048                           indf0	equ	0xFEF
 34049                           postinc0	equ	0xFEE
 34050                           fsr0h	equ	0xFEA
 34051                           fsr0l	equ	0xFE9
 34052                           wreg	equ	0xFE8
 34053                           indf1	equ	0xFE7
 34054                           postdec1	equ	0xFE5
 34055                           plusw1	equ	0xFE3
 34056                           fsr1h	equ	0xFE2
 34057                           fsr1l	equ	0xFE1
 34058                           bsr	equ	0xFE0
 34059                           indf2	equ	0xFDF
 34060                           postinc2	equ	0xFDE
 34061                           postdec2	equ	0xFDD
 34062                           plusw2	equ	0xFDB
 34063                           fsr2h	equ	0xFDA
 34064                           fsr2l	equ	0xFD9
 34065                           status	equ	0xFD8
 34066                           
 34067 ;; *************** function _writeEnergyToEEPROMCallback *****************
 34068 ;; Defined at:
 34069 ;;		line 476 in file "main.c"
 34070 ;; Parameters:    Size  Location     Type
 34071 ;;		None
 34072 ;; Auto vars:     Size  Location     Type
 34073 ;;  current_valu    4   63[COMRAM] void 
 34074 ;; Return value:  Size  Location     Type
 34075 ;;                  1    wreg      void 
 34076 ;; Registers used:
 34077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34078 ;; Tracked objects:
 34079 ;;		On entry : 0/0
 34080 ;;		On exit  : 0/0
 34081 ;;		Unchanged: 0/0
 34082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34084 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34087 ;;Total ram usage:        4 bytes
 34088 ;; Hardware stack levels used:    1
 34089 ;; Hardware stack levels required when called:    2
 34090 ;; This function calls:
 34091 ;;		i2___flge
 34092 ;;		i2_readDoubleFromEEPROM
 34093 ;;		i2_writeDoubleToEEPROM
 34094 ;; This function is called by:
 34095 ;;		_main
 34096 ;;		_TMR4_CallBack
 34097 ;; This function uses a non-reentrant model
 34098 ;;
 34099                           
 34100                           	psect	text98
 34101  01873C                     __ptext98:
 34102                           	opt stack 0
 34103  01873C                     _writeEnergyToEEPROMCallback:
 34104                           	opt stack 14
 34105                           
 34106                           ;main.c: 478: double current_value = readDoubleFromEEPROM(Total_Energy_address);
 34107                           
 34108                           ;incstack = 0
 34109  01873C  0E1B               	movlw	low _Total_Energy_address
 34110  01873E  6EF6               	movwf	tblptrl,c
 34111  018740                     	if	1	;There is more than 1 active tblptr byte
 34112  018740  0ED5               	movlw	high _Total_Energy_address
 34113  018742  6EF7               	movwf	tblptrh,c
 34114  018744                     	endif
 34115  018744                     	if	1	;There are 3 active tblptr bytes
 34116  018744  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 34117  018746  6EF8               	movwf	tblptru,c
 34118  018748                     	endif
 34119  018748  0009               	tblrd		*+
 34120  01874A  CFF5 F003          	movff	tablat,i2readDoubleFromEEPROM@starting_address
 34121  01874E  000A               	tblrd		*-
 34122  018750  CFF5 F004          	movff	tablat,i2readDoubleFromEEPROM@starting_address+1
 34123  018754  EC93  F0C7         	call	i2_readDoubleFromEEPROM	;wreg free
 34124  018758  C003  F040         	movff	?i2_readDoubleFromEEPROM,writeEnergyToEEPROMCallback@current_value
 34125  01875C  C004  F041         	movff	?i2_readDoubleFromEEPROM+1,writeEnergyToEEPROMCallback@current_value+1
 34126  018760  C005  F042         	movff	?i2_readDoubleFromEEPROM+2,writeEnergyToEEPROMCallback@current_value+2
 34127  018764  C006  F043         	movff	?i2_readDoubleFromEEPROM+3,writeEnergyToEEPROMCallback@current_value+3
 34128                           
 34129                           ;main.c: 480: if (Total_Energy > current_value) {
 34130  018768  C040  F034         	movff	writeEnergyToEEPROMCallback@current_value,i2___flge@ff1
 34131  01876C  C041  F035         	movff	writeEnergyToEEPROMCallback@current_value+1,i2___flge@ff1+1
 34132  018770  C042  F036         	movff	writeEnergyToEEPROMCallback@current_value+2,i2___flge@ff1+2
 34133  018774  C043  F037         	movff	writeEnergyToEEPROMCallback@current_value+3,i2___flge@ff1+3
 34134  018778  C0F6  F038         	movff	_Total_Energy,i2___flge@ff2	;volatile
 34135  01877C  C0F7  F039         	movff	_Total_Energy+1,i2___flge@ff2+1	;volatile
 34136  018780  C0F8  F03A         	movff	_Total_Energy+2,i2___flge@ff2+2	;volatile
 34137  018784  C0F9  F03B         	movff	_Total_Energy+3,i2___flge@ff2+3	;volatile
 34138  018788  EC89  F0BD         	call	i2___flge	;wreg free
 34139  01878C  B0D8               	btfsc	status,0,c
 34140  01878E  0012               	return	
 34141                           
 34142                           ;main.c: 482: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 34143  018790  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 34144  018794  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 34145  018798  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 34146  01879C  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 34147  0187A0  0E1B               	movlw	low _Total_Energy_address
 34148  0187A2  6EF6               	movwf	tblptrl,c
 34149  0187A4                     	if	1	;There is more than 1 active tblptr byte
 34150  0187A4  0ED5               	movlw	high _Total_Energy_address
 34151  0187A6  6EF7               	movwf	tblptrh,c
 34152  0187A8                     	endif
 34153  0187A8                     	if	1	;There are 3 active tblptr bytes
 34154  0187A8  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 34155  0187AA  6EF8               	movwf	tblptru,c
 34156  0187AC                     	endif
 34157  0187AC  0009               	tblrd		*+
 34158  0187AE  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 34159  0187B2  000A               	tblrd		*-
 34160  0187B4  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 34161  0187B8  EC06  F0C8         	call	i2_writeDoubleToEEPROM	;wreg free
 34162  0187BC  0012               	return	
 34163  0187BE                     __end_of_writeEnergyToEEPROMCallback:
 34164                           	opt stack 0
 34165                           tosu	equ	0xFFF
 34166                           tosh	equ	0xFFE
 34167                           tosl	equ	0xFFD
 34168                           pclatu	equ	0xFFB
 34169                           pclath	equ	0xFFA
 34170                           tblptru	equ	0xFF8
 34171                           tblptrh	equ	0xFF7
 34172                           tblptrl	equ	0xFF6
 34173                           tablat	equ	0xFF5
 34174                           prodh	equ	0xFF4
 34175                           prodl	equ	0xFF3
 34176                           intcon	equ	0xFF2
 34177                           indf0	equ	0xFEF
 34178                           postinc0	equ	0xFEE
 34179                           fsr0h	equ	0xFEA
 34180                           fsr0l	equ	0xFE9
 34181                           wreg	equ	0xFE8
 34182                           indf1	equ	0xFE7
 34183                           postdec1	equ	0xFE5
 34184                           plusw1	equ	0xFE3
 34185                           fsr1h	equ	0xFE2
 34186                           fsr1l	equ	0xFE1
 34187                           bsr	equ	0xFE0
 34188                           indf2	equ	0xFDF
 34189                           postinc2	equ	0xFDE
 34190                           postdec2	equ	0xFDD
 34191                           plusw2	equ	0xFDB
 34192                           fsr2h	equ	0xFDA
 34193                           fsr2l	equ	0xFD9
 34194                           status	equ	0xFD8
 34195                           
 34196 ;; *************** function i2_readDoubleFromEEPROM *****************
 34197 ;; Defined at:
 34198 ;;		line 22 in file "double_to_EEPROM.c"
 34199 ;; Parameters:    Size  Location     Type
 34200 ;;  starting_add    2    2[COMRAM] unsigned int 
 34201 ;; Auto vars:     Size  Location     Type
 34202 ;;  readDoubleFr    4    6[COMRAM] struct .
 34203 ;;  readDoubleFr    2   10[COMRAM] int 
 34204 ;; Return value:  Size  Location     Type
 34205 ;;                  4    2[COMRAM] int 
 34206 ;; Registers used:
 34207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34208 ;; Tracked objects:
 34209 ;;		On entry : 0/0
 34210 ;;		On exit  : 0/0
 34211 ;;		Unchanged: 0/0
 34212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34214 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34216 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34217 ;;Total ram usage:       10 bytes
 34218 ;; Hardware stack levels used:    1
 34219 ;; Hardware stack levels required when called:    1
 34220 ;; This function calls:
 34221 ;;		i2_DATAEE_ReadByte
 34222 ;; This function is called by:
 34223 ;;		_writeEnergyToEEPROMCallback
 34224 ;; This function uses a non-reentrant model
 34225 ;;
 34226                           
 34227                           	psect	text99
 34228  018F26                     __ptext99:
 34229                           	opt stack 0
 34230  018F26                     i2_readDoubleFromEEPROM:
 34231                           	opt stack 14
 34232                           
 34233                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 34234                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 34235                           
 34236                           ;incstack = 0
 34237  018F26  0E00               	movlw	0
 34238  018F28  6E0C               	movwf	i2readDoubleFromEEPROM@byte_index+1,c
 34239  018F2A  0E00               	movlw	0
 34240  018F2C  6E0B               	movwf	i2readDoubleFromEEPROM@byte_index,c
 34241  018F2E  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 34242  018F30  E118               	bnz	i2l1605
 34243  018F32  D013               	goto	L16
 34244  018F34                     
 34245                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 34246  018F34  0E07               	movlw	low i2readDoubleFromEEPROM@output_data
 34247  018F36  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 34248  018F38  6ED9               	movwf	fsr2l,c
 34249  018F3A  0E00               	movlw	high i2readDoubleFromEEPROM@output_data
 34250  018F3C  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 34251  018F3E  6EDA               	movwf	fsr2h,c
 34252  018F40  5003               	movf	i2readDoubleFromEEPROM@starting_address,w,c
 34253  018F42  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 34254  018F44  6E01               	movwf	i2DATAEE_ReadByte@bAdd,c
 34255  018F46  5004               	movf	i2readDoubleFromEEPROM@starting_address+1,w,c
 34256  018F48  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 34257  018F4A  6E02               	movwf	i2DATAEE_ReadByte@bAdd+1,c
 34258  018F4C  EC2F  F0CC         	call	i2_DATAEE_ReadByte	;wreg free
 34259  018F50  6EDF               	movwf	indf2,c
 34260  018F52  4A0B               	infsnz	i2readDoubleFromEEPROM@byte_index,f,c
 34261  018F54  2A0C               	incf	i2readDoubleFromEEPROM@byte_index+1,f,c
 34262  018F56  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 34263  018F58  E104               	bnz	i2u1050_40
 34264  018F5A                     L16:
 34265  018F5A  0E04               	movlw	4
 34266  018F5C  5C0B               	subwf	i2readDoubleFromEEPROM@byte_index,w,c
 34267  018F5E  A0D8               	btfss	status,0,c
 34268  018F60  D7E9               	goto	i2l1604
 34269  018F62                     i2u1050_40:
 34270  018F62                     i2l1605:
 34271                           
 34272                           ;double_to_EEPROM.c: 32: }
 34273                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 34274  018F62  C007  F003         	movff	i2readDoubleFromEEPROM@output_data,?i2_readDoubleFromEEPROM
 34275  018F66  C008  F004         	movff	i2readDoubleFromEEPROM@output_data+1,?i2_readDoubleFromEEPROM+1
 34276  018F6A  C009  F005         	movff	i2readDoubleFromEEPROM@output_data+2,?i2_readDoubleFromEEPROM+2
 34277  018F6E  C00A  F006         	movff	i2readDoubleFromEEPROM@output_data+3,?i2_readDoubleFromEEPROM+3
 34278  018F72  0012               	return		;funcret
 34279  018F74                     __end_ofi2_readDoubleFromEEPROM:
 34280                           	opt stack 0
 34281                           tosu	equ	0xFFF
 34282                           tosh	equ	0xFFE
 34283                           tosl	equ	0xFFD
 34284                           pclatu	equ	0xFFB
 34285                           pclath	equ	0xFFA
 34286                           tblptru	equ	0xFF8
 34287                           tblptrh	equ	0xFF7
 34288                           tblptrl	equ	0xFF6
 34289                           tablat	equ	0xFF5
 34290                           prodh	equ	0xFF4
 34291                           prodl	equ	0xFF3
 34292                           intcon	equ	0xFF2
 34293                           indf0	equ	0xFEF
 34294                           postinc0	equ	0xFEE
 34295                           fsr0h	equ	0xFEA
 34296                           fsr0l	equ	0xFE9
 34297                           wreg	equ	0xFE8
 34298                           indf1	equ	0xFE7
 34299                           postdec1	equ	0xFE5
 34300                           plusw1	equ	0xFE3
 34301                           fsr1h	equ	0xFE2
 34302                           fsr1l	equ	0xFE1
 34303                           bsr	equ	0xFE0
 34304                           indf2	equ	0xFDF
 34305                           postinc2	equ	0xFDE
 34306                           postdec2	equ	0xFDD
 34307                           plusw2	equ	0xFDB
 34308                           fsr2h	equ	0xFDA
 34309                           fsr2l	equ	0xFD9
 34310                           status	equ	0xFD8
 34311                           
 34312 ;; *************** function i2_DATAEE_ReadByte *****************
 34313 ;; Defined at:
 34314 ;;		line 190 in file "mcc_generated_files/memory.c"
 34315 ;; Parameters:    Size  Location     Type
 34316 ;;  bAdd            2    0[COMRAM] unsigned int 
 34317 ;; Auto vars:     Size  Location     Type
 34318 ;;		None
 34319 ;; Return value:  Size  Location     Type
 34320 ;;                  1    wreg      unsigned char 
 34321 ;; Registers used:
 34322 ;;		wreg, status,2, status,0
 34323 ;; Tracked objects:
 34324 ;;		On entry : 0/0
 34325 ;;		On exit  : 0/0
 34326 ;;		Unchanged: 0/0
 34327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34332 ;;Total ram usage:        2 bytes
 34333 ;; Hardware stack levels used:    1
 34334 ;; This function calls:
 34335 ;;		Nothing
 34336 ;; This function is called by:
 34337 ;;		i2_readDoubleFromEEPROM
 34338 ;; This function uses a non-reentrant model
 34339 ;;
 34340                           
 34341                           	psect	text100
 34342  01985E                     __ptext100:
 34343                           	opt stack 0
 34344  01985E                     i2_DATAEE_ReadByte:
 34345                           	opt stack 14
 34346                           
 34347                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 34348                           
 34349                           ;incstack = 0
 34350  01985E  5002               	movf	i2DATAEE_ReadByte@bAdd+1,w,c
 34351  019860  0B03               	andlw	3
 34352  019862  6E75               	movwf	3957,c	;volatile
 34353                           
 34354                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 34355  019864  C001  FF74         	movff	i2DATAEE_ReadByte@bAdd,3956	;volatile
 34356                           
 34357                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 34358  019868  0E3F               	movlw	-193
 34359  01986A  1677               	andwf	3959,f,c	;volsfr
 34360                           
 34361                           ;memory.c: 195: NVMCON1bits.RD = 1;
 34362  01986C  8077               	bsf	3959,0,c	;volsfr
 34363                           
 34364                           ;memory.c: 196: __nop();
 34365  01986E  F000               	nop	
 34366                           
 34367                           ;memory.c: 197: __nop();
 34368  019870  F000               	nop	
 34369                           
 34370                           ;memory.c: 199: return (NVMDAT);
 34371  019872  5076               	movf	3958,w,c	;volatile
 34372  019874  0012               	return	
 34373  019876                     __end_ofi2_DATAEE_ReadByte:
 34374                           	opt stack 0
 34375                           tosu	equ	0xFFF
 34376                           tosh	equ	0xFFE
 34377                           tosl	equ	0xFFD
 34378                           pclatu	equ	0xFFB
 34379                           pclath	equ	0xFFA
 34380                           tblptru	equ	0xFF8
 34381                           tblptrh	equ	0xFF7
 34382                           tblptrl	equ	0xFF6
 34383                           tablat	equ	0xFF5
 34384                           prodh	equ	0xFF4
 34385                           prodl	equ	0xFF3
 34386                           intcon	equ	0xFF2
 34387                           indf0	equ	0xFEF
 34388                           postinc0	equ	0xFEE
 34389                           fsr0h	equ	0xFEA
 34390                           fsr0l	equ	0xFE9
 34391                           wreg	equ	0xFE8
 34392                           indf1	equ	0xFE7
 34393                           postdec1	equ	0xFE5
 34394                           plusw1	equ	0xFE3
 34395                           fsr1h	equ	0xFE2
 34396                           fsr1l	equ	0xFE1
 34397                           bsr	equ	0xFE0
 34398                           indf2	equ	0xFDF
 34399                           postinc2	equ	0xFDE
 34400                           postdec2	equ	0xFDD
 34401                           plusw2	equ	0xFDB
 34402                           fsr2h	equ	0xFDA
 34403                           fsr2l	equ	0xFD9
 34404                           status	equ	0xFD8
 34405                           
 34406 ;; *************** function _INT0_ISR *****************
 34407 ;; Defined at:
 34408 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 34409 ;; Parameters:    Size  Location     Type
 34410 ;;		None
 34411 ;; Auto vars:     Size  Location     Type
 34412 ;;		None
 34413 ;; Return value:  Size  Location     Type
 34414 ;;                  1    wreg      void 
 34415 ;; Registers used:
 34416 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34417 ;; Tracked objects:
 34418 ;;		On entry : 0/0
 34419 ;;		On exit  : 0/0
 34420 ;;		Unchanged: 0/0
 34421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34426 ;;Total ram usage:        0 bytes
 34427 ;; Hardware stack levels used:    1
 34428 ;; Hardware stack levels required when called:    3
 34429 ;; This function calls:
 34430 ;;		_INT0_CallBack
 34431 ;; This function is called by:
 34432 ;;		_INTERRUPT_InterruptManagerHigh
 34433 ;; This function uses a non-reentrant model
 34434 ;;
 34435                           
 34436                           	psect	text101
 34437  0199BE                     __ptext101:
 34438                           	opt stack 0
 34439  0199BE                     _INT0_ISR:
 34440                           	opt stack 15
 34441                           
 34442                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 34443                           
 34444                           ;incstack = 0
 34445  0199BE  010E               	movlb	14	; () banked
 34446  0199C0  9133               	bcf	51,0,b	;volatile
 34447                           
 34448                           ; BSR set to: 14
 34449                           ;ext_int.c: 37: INT0_CallBack();
 34450  0199C2  EC8E  F0CB         	call	_INT0_CallBack	;wreg free
 34451  0199C6  0012               	return		;funcret
 34452  0199C8                     __end_of_INT0_ISR:
 34453                           	opt stack 0
 34454                           tosu	equ	0xFFF
 34455                           tosh	equ	0xFFE
 34456                           tosl	equ	0xFFD
 34457                           pclatu	equ	0xFFB
 34458                           pclath	equ	0xFFA
 34459                           tblptru	equ	0xFF8
 34460                           tblptrh	equ	0xFF7
 34461                           tblptrl	equ	0xFF6
 34462                           tablat	equ	0xFF5
 34463                           prodh	equ	0xFF4
 34464                           prodl	equ	0xFF3
 34465                           intcon	equ	0xFF2
 34466                           indf0	equ	0xFEF
 34467                           postinc0	equ	0xFEE
 34468                           fsr0h	equ	0xFEA
 34469                           fsr0l	equ	0xFE9
 34470                           wreg	equ	0xFE8
 34471                           indf1	equ	0xFE7
 34472                           postdec1	equ	0xFE5
 34473                           plusw1	equ	0xFE3
 34474                           fsr1h	equ	0xFE2
 34475                           fsr1l	equ	0xFE1
 34476                           bsr	equ	0xFE0
 34477                           indf2	equ	0xFDF
 34478                           postinc2	equ	0xFDE
 34479                           postdec2	equ	0xFDD
 34480                           plusw2	equ	0xFDB
 34481                           fsr2h	equ	0xFDA
 34482                           fsr2l	equ	0xFD9
 34483                           status	equ	0xFD8
 34484                           
 34485 ;; *************** function _INT0_CallBack *****************
 34486 ;; Defined at:
 34487 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 34488 ;; Parameters:    Size  Location     Type
 34489 ;;		None
 34490 ;; Auto vars:     Size  Location     Type
 34491 ;;		None
 34492 ;; Return value:  Size  Location     Type
 34493 ;;                  1    wreg      void 
 34494 ;; Registers used:
 34495 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34496 ;; Tracked objects:
 34497 ;;		On entry : 0/0
 34498 ;;		On exit  : 0/0
 34499 ;;		Unchanged: 0/0
 34500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34505 ;;Total ram usage:        0 bytes
 34506 ;; Hardware stack levels used:    1
 34507 ;; Hardware stack levels required when called:    2
 34508 ;; This function calls:
 34509 ;;		Absolute function
 34510 ;;		_INT0_DefaultInterruptHandler
 34511 ;;		_dimmingOffTimeCallback
 34512 ;; This function is called by:
 34513 ;;		_INT0_ISR
 34514 ;; This function uses a non-reentrant model
 34515 ;;
 34516                           
 34517                           	psect	text102
 34518  01971C                     __ptext102:
 34519                           	opt stack 0
 34520  01971C                     _INT0_CallBack:
 34521                           	opt stack 15
 34522                           
 34523                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 34524                           
 34525                           ;incstack = 0
 34526  01971C  0102               	movlb	2	; () banked
 34527  01971E  512B               	movf	_INT0_InterruptHandler& (0+255),w,b
 34528  019720  112C               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34529  019722  112D               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34530  019724  B4D8               	btfsc	status,2,c
 34531  019726  0012               	return	
 34532                           
 34533                           ; BSR set to: 2
 34534                           ;ext_int.c: 45: {
 34535                           ;ext_int.c: 46: INT0_InterruptHandler();
 34536  019728  D801               	call	i2u2682_48
 34537  01972A  0012               	return	
 34538  01972C                     i2u2682_48:
 34539  01972C  0005               	push	
 34540  01972E  6EFA               	movwf	pclath,c
 34541  019730  512B               	movf	_INT0_InterruptHandler& (0+255),w,b
 34542  019732  6EFD               	movwf	tosl,c
 34543  019734  512C               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34544  019736  6EFE               	movwf	tosh,c
 34545  019738  512D               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34546  01973A  6EFF               	movwf	tosu,c
 34547  01973C  50FA               	movf	pclath,w,c
 34548  01973E  0012               	return		;indir
 34549  019740                     __end_of_INT0_CallBack:
 34550                           	opt stack 0
 34551                           tosu	equ	0xFFF
 34552                           tosh	equ	0xFFE
 34553                           tosl	equ	0xFFD
 34554                           pclatu	equ	0xFFB
 34555                           pclath	equ	0xFFA
 34556                           tblptru	equ	0xFF8
 34557                           tblptrh	equ	0xFF7
 34558                           tblptrl	equ	0xFF6
 34559                           tablat	equ	0xFF5
 34560                           prodh	equ	0xFF4
 34561                           prodl	equ	0xFF3
 34562                           intcon	equ	0xFF2
 34563                           indf0	equ	0xFEF
 34564                           postinc0	equ	0xFEE
 34565                           fsr0h	equ	0xFEA
 34566                           fsr0l	equ	0xFE9
 34567                           wreg	equ	0xFE8
 34568                           indf1	equ	0xFE7
 34569                           postdec1	equ	0xFE5
 34570                           plusw1	equ	0xFE3
 34571                           fsr1h	equ	0xFE2
 34572                           fsr1l	equ	0xFE1
 34573                           bsr	equ	0xFE0
 34574                           indf2	equ	0xFDF
 34575                           postinc2	equ	0xFDE
 34576                           postdec2	equ	0xFDD
 34577                           plusw2	equ	0xFDB
 34578                           fsr2h	equ	0xFDA
 34579                           fsr2l	equ	0xFD9
 34580                           status	equ	0xFD8
 34581                           
 34582 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34583 ;; Defined at:
 34584 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 34585 ;; Parameters:    Size  Location     Type
 34586 ;;		None
 34587 ;; Auto vars:     Size  Location     Type
 34588 ;;		None
 34589 ;; Return value:  Size  Location     Type
 34590 ;;                  1    wreg      void 
 34591 ;; Registers used:
 34592 ;;		None
 34593 ;; Tracked objects:
 34594 ;;		On entry : 0/0
 34595 ;;		On exit  : 0/0
 34596 ;;		Unchanged: 0/0
 34597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34602 ;;Total ram usage:        0 bytes
 34603 ;; Hardware stack levels used:    1
 34604 ;; This function calls:
 34605 ;;		Nothing
 34606 ;; This function is called by:
 34607 ;;		_EXT_INT_Initialize
 34608 ;;		_INT0_CallBack
 34609 ;; This function uses a non-reentrant model
 34610 ;;
 34611                           
 34612                           	psect	text103
 34613  019A12                     __ptext103:
 34614                           	opt stack 0
 34615  019A12                     _INT0_DefaultInterruptHandler:
 34616                           	opt stack 16
 34617                           
 34618                           ;incstack = 0
 34619  019A12  0012               	return		;funcret
 34620  019A14                     __end_of_INT0_DefaultInterruptHandler:
 34621                           	opt stack 0
 34622                           tosu	equ	0xFFF
 34623                           tosh	equ	0xFFE
 34624                           tosl	equ	0xFFD
 34625                           pclatu	equ	0xFFB
 34626                           pclath	equ	0xFFA
 34627                           tblptru	equ	0xFF8
 34628                           tblptrh	equ	0xFF7
 34629                           tblptrl	equ	0xFF6
 34630                           tablat	equ	0xFF5
 34631                           prodh	equ	0xFF4
 34632                           prodl	equ	0xFF3
 34633                           intcon	equ	0xFF2
 34634                           indf0	equ	0xFEF
 34635                           postinc0	equ	0xFEE
 34636                           fsr0h	equ	0xFEA
 34637                           fsr0l	equ	0xFE9
 34638                           wreg	equ	0xFE8
 34639                           indf1	equ	0xFE7
 34640                           postdec1	equ	0xFE5
 34641                           plusw1	equ	0xFE3
 34642                           fsr1h	equ	0xFE2
 34643                           fsr1l	equ	0xFE1
 34644                           bsr	equ	0xFE0
 34645                           indf2	equ	0xFDF
 34646                           postinc2	equ	0xFDE
 34647                           postdec2	equ	0xFDD
 34648                           plusw2	equ	0xFDB
 34649                           fsr2h	equ	0xFDA
 34650                           fsr2l	equ	0xFD9
 34651                           status	equ	0xFD8
 34652                           
 34653 ;; *************** function _dimmingOffTimeCallback *****************
 34654 ;; Defined at:
 34655 ;;		line 444 in file "main.c"
 34656 ;; Parameters:    Size  Location     Type
 34657 ;;		None
 34658 ;; Auto vars:     Size  Location     Type
 34659 ;;		None
 34660 ;; Return value:  Size  Location     Type
 34661 ;;                  1    wreg      void 
 34662 ;; Registers used:
 34663 ;;		wreg, status,2, cstack
 34664 ;; Tracked objects:
 34665 ;;		On entry : 0/0
 34666 ;;		On exit  : 0/0
 34667 ;;		Unchanged: 0/0
 34668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34673 ;;Total ram usage:        0 bytes
 34674 ;; Hardware stack levels used:    1
 34675 ;; Hardware stack levels required when called:    1
 34676 ;; This function calls:
 34677 ;;		_TMR5_StartTimer
 34678 ;;		_TMR5_WriteTimer
 34679 ;; This function is called by:
 34680 ;;		_main
 34681 ;;		_INT0_CallBack
 34682 ;; This function uses a non-reentrant model
 34683 ;;
 34684                           
 34685                           	psect	text104
 34686  019876                     __ptext104:
 34687                           	opt stack 0
 34688  019876                     _dimmingOffTimeCallback:
 34689                           	opt stack 15
 34690                           
 34691                           ;main.c: 447: LATGbits.LATG1 = 0;
 34692                           
 34693                           ;incstack = 0
 34694  019876  927F               	bcf	3967,1,c	;volatile
 34695                           
 34696                           ;main.c: 450: TMR5_WriteTimer(dimming_period);
 34697  019878  C0F0  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 34698  01987C  C0F1  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 34699  019880  ECFB  F0CB         	call	_TMR5_WriteTimer	;wreg free
 34700                           
 34701                           ;main.c: 451: TMR5_StartTimer();
 34702  019884  EC01  F0CD         	call	_TMR5_StartTimer	;wreg free
 34703                           
 34704                           ;main.c: 454: PIE5bits.TMR5IE = 1;
 34705  019888  010E               	movlb	14	; () banked
 34706  01988A  892E               	bsf	46,4,b	;volatile
 34707                           
 34708                           ; BSR set to: 14
 34709  01988C  0012               	return		;funcret
 34710  01988E                     __end_of_dimmingOffTimeCallback:
 34711                           	opt stack 0
 34712                           tosu	equ	0xFFF
 34713                           tosh	equ	0xFFE
 34714                           tosl	equ	0xFFD
 34715                           pclatu	equ	0xFFB
 34716                           pclath	equ	0xFFA
 34717                           tblptru	equ	0xFF8
 34718                           tblptrh	equ	0xFF7
 34719                           tblptrl	equ	0xFF6
 34720                           tablat	equ	0xFF5
 34721                           prodh	equ	0xFF4
 34722                           prodl	equ	0xFF3
 34723                           intcon	equ	0xFF2
 34724                           indf0	equ	0xFEF
 34725                           postinc0	equ	0xFEE
 34726                           fsr0h	equ	0xFEA
 34727                           fsr0l	equ	0xFE9
 34728                           wreg	equ	0xFE8
 34729                           indf1	equ	0xFE7
 34730                           postdec1	equ	0xFE5
 34731                           plusw1	equ	0xFE3
 34732                           fsr1h	equ	0xFE2
 34733                           fsr1l	equ	0xFE1
 34734                           bsr	equ	0xFE0
 34735                           indf2	equ	0xFDF
 34736                           postinc2	equ	0xFDE
 34737                           postdec2	equ	0xFDD
 34738                           plusw2	equ	0xFDB
 34739                           fsr2h	equ	0xFDA
 34740                           fsr2l	equ	0xFD9
 34741                           status	equ	0xFD8
 34742                           
 34743 ;; *************** function _TMR5_WriteTimer *****************
 34744 ;; Defined at:
 34745 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 34746 ;; Parameters:    Size  Location     Type
 34747 ;;  timerVal        2    0[COMRAM] unsigned int 
 34748 ;; Auto vars:     Size  Location     Type
 34749 ;;		None
 34750 ;; Return value:  Size  Location     Type
 34751 ;;                  1    wreg      void 
 34752 ;; Registers used:
 34753 ;;		wreg, status,2
 34754 ;; Tracked objects:
 34755 ;;		On entry : 0/0
 34756 ;;		On exit  : 0/0
 34757 ;;		Unchanged: 0/0
 34758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34763 ;;Total ram usage:        2 bytes
 34764 ;; Hardware stack levels used:    1
 34765 ;; This function calls:
 34766 ;;		Nothing
 34767 ;; This function is called by:
 34768 ;;		_TMR5_ISR
 34769 ;;		_dimmingOffTimeCallback
 34770 ;;		_TMR5_Reload
 34771 ;; This function uses a non-reentrant model
 34772 ;;
 34773                           
 34774                           	psect	text105
 34775  0197F6                     __ptext105:
 34776                           	opt stack 0
 34777  0197F6                     _TMR5_WriteTimer:
 34778                           	opt stack 17
 34779                           
 34780                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 34781                           
 34782                           ; BSR set to: 14
 34783                           ;incstack = 0
 34784  0197F6  A4C3               	btfss	4035,2,c	;volatile
 34785  0197F8  D007               	goto	i2l734
 34786                           
 34787                           ;tmr5.c: 130: {
 34788                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 34789  0197FA  90C3               	bcf	4035,0,c	;volatile
 34790                           
 34791                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 34792  0197FC  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 34793  0197FE  6EC2               	movwf	4034,c	;volatile
 34794                           
 34795                           ;tmr5.c: 136: TMR5L = timerVal;
 34796  019800  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 34797                           
 34798                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 34799  019804  80C3               	bsf	4035,0,c	;volatile
 34800                           
 34801                           ;tmr5.c: 140: }
 34802  019806  0012               	return	
 34803  019808                     i2l734:
 34804                           
 34805                           ;tmr5.c: 141: else
 34806                           ;tmr5.c: 142: {
 34807                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 34808  019808  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 34809  01980A  6EC2               	movwf	4034,c	;volatile
 34810                           
 34811                           ;tmr5.c: 145: TMR5L = timerVal;
 34812  01980C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 34813  019810  0012               	return	
 34814  019812                     __end_of_TMR5_WriteTimer:
 34815                           	opt stack 0
 34816                           tosu	equ	0xFFF
 34817                           tosh	equ	0xFFE
 34818                           tosl	equ	0xFFD
 34819                           pclatu	equ	0xFFB
 34820                           pclath	equ	0xFFA
 34821                           tblptru	equ	0xFF8
 34822                           tblptrh	equ	0xFF7
 34823                           tblptrl	equ	0xFF6
 34824                           tablat	equ	0xFF5
 34825                           prodh	equ	0xFF4
 34826                           prodl	equ	0xFF3
 34827                           intcon	equ	0xFF2
 34828                           indf0	equ	0xFEF
 34829                           postinc0	equ	0xFEE
 34830                           fsr0h	equ	0xFEA
 34831                           fsr0l	equ	0xFE9
 34832                           wreg	equ	0xFE8
 34833                           indf1	equ	0xFE7
 34834                           postdec1	equ	0xFE5
 34835                           plusw1	equ	0xFE3
 34836                           fsr1h	equ	0xFE2
 34837                           fsr1l	equ	0xFE1
 34838                           bsr	equ	0xFE0
 34839                           indf2	equ	0xFDF
 34840                           postinc2	equ	0xFDE
 34841                           postdec2	equ	0xFDD
 34842                           plusw2	equ	0xFDB
 34843                           fsr2h	equ	0xFDA
 34844                           fsr2l	equ	0xFD9
 34845                           status	equ	0xFD8
 34846                           
 34847 ;; *************** function _TMR5_StartTimer *****************
 34848 ;; Defined at:
 34849 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 34850 ;; Parameters:    Size  Location     Type
 34851 ;;		None
 34852 ;; Auto vars:     Size  Location     Type
 34853 ;;		None
 34854 ;; Return value:  Size  Location     Type
 34855 ;;                  1    wreg      void 
 34856 ;; Registers used:
 34857 ;;		None
 34858 ;; Tracked objects:
 34859 ;;		On entry : 0/0
 34860 ;;		On exit  : 0/0
 34861 ;;		Unchanged: 0/0
 34862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34867 ;;Total ram usage:        0 bytes
 34868 ;; Hardware stack levels used:    1
 34869 ;; This function calls:
 34870 ;;		Nothing
 34871 ;; This function is called by:
 34872 ;;		_dimmingOffTimeCallback
 34873 ;; This function uses a non-reentrant model
 34874 ;;
 34875                           
 34876                           	psect	text106
 34877  019A02                     __ptext106:
 34878                           	opt stack 0
 34879  019A02                     _TMR5_StartTimer:
 34880                           	opt stack 15
 34881                           
 34882                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 34883                           
 34884                           ;incstack = 0
 34885  019A02  80C3               	bsf	4035,0,c	;volatile
 34886  019A04  0012               	return		;funcret
 34887  019A06                     __end_of_TMR5_StartTimer:
 34888                           	opt stack 0
 34889                           tosu	equ	0xFFF
 34890                           tosh	equ	0xFFE
 34891                           tosl	equ	0xFFD
 34892                           pclatu	equ	0xFFB
 34893                           pclath	equ	0xFFA
 34894                           tblptru	equ	0xFF8
 34895                           tblptrh	equ	0xFF7
 34896                           tblptrl	equ	0xFF6
 34897                           tablat	equ	0xFF5
 34898                           prodh	equ	0xFF4
 34899                           prodl	equ	0xFF3
 34900                           intcon	equ	0xFF2
 34901                           indf0	equ	0xFEF
 34902                           postinc0	equ	0xFEE
 34903                           fsr0h	equ	0xFEA
 34904                           fsr0l	equ	0xFE9
 34905                           wreg	equ	0xFE8
 34906                           indf1	equ	0xFE7
 34907                           postdec1	equ	0xFE5
 34908                           plusw1	equ	0xFE3
 34909                           fsr1h	equ	0xFE2
 34910                           fsr1l	equ	0xFE1
 34911                           bsr	equ	0xFE0
 34912                           indf2	equ	0xFDF
 34913                           postinc2	equ	0xFDE
 34914                           postdec2	equ	0xFDD
 34915                           plusw2	equ	0xFDB
 34916                           fsr2h	equ	0xFDA
 34917                           fsr2l	equ	0xFD9
 34918                           status	equ	0xFD8
 34919                           
 34920 ;; *************** function _HLVD_ISR *****************
 34921 ;; Defined at:
 34922 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 34923 ;; Parameters:    Size  Location     Type
 34924 ;;		None
 34925 ;; Auto vars:     Size  Location     Type
 34926 ;;		None
 34927 ;; Return value:  Size  Location     Type
 34928 ;;                  1    wreg      void 
 34929 ;; Registers used:
 34930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34931 ;; Tracked objects:
 34932 ;;		On entry : 0/0
 34933 ;;		On exit  : 0/0
 34934 ;;		Unchanged: 0/0
 34935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34940 ;;Total ram usage:        0 bytes
 34941 ;; Hardware stack levels used:    1
 34942 ;; Hardware stack levels required when called:    2
 34943 ;; This function calls:
 34944 ;;		i2_writeDoubleToEEPROM
 34945 ;; This function is called by:
 34946 ;;		_INTERRUPT_InterruptManagerHigh
 34947 ;; This function uses a non-reentrant model
 34948 ;;
 34949                           
 34950                           	psect	text107
 34951  019368                     __ptext107:
 34952                           	opt stack 0
 34953  019368                     _HLVD_ISR:
 34954                           	opt stack 16
 34955                           
 34956                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 34957                           
 34958                           ;incstack = 0
 34959  019368  010E               	movlb	14	; () banked
 34960  01936A  9F35               	bcf	53,7,b	;volatile
 34961                           
 34962                           ;hlvd.c: 127: SBOREN = 0;
 34963  01936C  9F4B               	bcf	75,7,b	;volatile
 34964                           
 34965                           ; BSR set to: 14
 34966                           ;hlvd.c: 130: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 34967  01936E  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 34968  019372  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 34969  019376  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 34970  01937A  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 34971  01937E  0E1B               	movlw	low _Total_Energy_address
 34972  019380  6EF6               	movwf	tblptrl,c
 34973  019382                     	if	1	;There is more than 1 active tblptr byte
 34974  019382  0ED5               	movlw	high _Total_Energy_address
 34975  019384  6EF7               	movwf	tblptrh,c
 34976  019386                     	endif
 34977  019386                     	if	1	;There are 3 active tblptr bytes
 34978  019386  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 34979  019388  6EF8               	movwf	tblptru,c
 34980  01938A                     	endif
 34981  01938A  0009               	tblrd		*+
 34982  01938C  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 34983  019390  000A               	tblrd		*-
 34984  019392  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 34985  019396  EC06  F0C8         	call	i2_writeDoubleToEEPROM	;wreg free
 34986                           
 34987                           ;hlvd.c: 133: SBOREN = 1;
 34988  01939A  010E               	movlb	14	; () banked
 34989  01939C  8F4B               	bsf	75,7,b	;volatile
 34990                           
 34991                           ; BSR set to: 14
 34992  01939E  0012               	return		;funcret
 34993  0193A0                     __end_of_HLVD_ISR:
 34994                           	opt stack 0
 34995                           tosu	equ	0xFFF
 34996                           tosh	equ	0xFFE
 34997                           tosl	equ	0xFFD
 34998                           pclatu	equ	0xFFB
 34999                           pclath	equ	0xFFA
 35000                           tblptru	equ	0xFF8
 35001                           tblptrh	equ	0xFF7
 35002                           tblptrl	equ	0xFF6
 35003                           tablat	equ	0xFF5
 35004                           prodh	equ	0xFF4
 35005                           prodl	equ	0xFF3
 35006                           intcon	equ	0xFF2
 35007                           indf0	equ	0xFEF
 35008                           postinc0	equ	0xFEE
 35009                           fsr0h	equ	0xFEA
 35010                           fsr0l	equ	0xFE9
 35011                           wreg	equ	0xFE8
 35012                           indf1	equ	0xFE7
 35013                           postdec1	equ	0xFE5
 35014                           plusw1	equ	0xFE3
 35015                           fsr1h	equ	0xFE2
 35016                           fsr1l	equ	0xFE1
 35017                           bsr	equ	0xFE0
 35018                           indf2	equ	0xFDF
 35019                           postinc2	equ	0xFDE
 35020                           postdec2	equ	0xFDD
 35021                           plusw2	equ	0xFDB
 35022                           fsr2h	equ	0xFDA
 35023                           fsr2l	equ	0xFD9
 35024                           status	equ	0xFD8
 35025                           
 35026 ;; *************** function i2_writeDoubleToEEPROM *****************
 35027 ;; Defined at:
 35028 ;;		line 6 in file "double_to_EEPROM.c"
 35029 ;; Parameters:    Size  Location     Type
 35030 ;;  input_double    4    4[COMRAM] void 
 35031 ;;  starting_add    2    8[COMRAM] unsigned int 
 35032 ;; Auto vars:     Size  Location     Type
 35033 ;;  writeDoubleT    4   10[COMRAM] struct .
 35034 ;;  writeDoubleT    2   14[COMRAM] int 
 35035 ;; Return value:  Size  Location     Type
 35036 ;;                  1    wreg      void 
 35037 ;; Registers used:
 35038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35039 ;; Tracked objects:
 35040 ;;		On entry : 0/0
 35041 ;;		On exit  : 0/0
 35042 ;;		Unchanged: 0/0
 35043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35044 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35045 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35047 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35048 ;;Total ram usage:       12 bytes
 35049 ;; Hardware stack levels used:    1
 35050 ;; Hardware stack levels required when called:    1
 35051 ;; This function calls:
 35052 ;;		i2_DATAEE_WriteByte
 35053 ;; This function is called by:
 35054 ;;		_HLVD_ISR
 35055 ;;		_writeEnergyToEEPROMCallback
 35056 ;; This function uses a non-reentrant model
 35057 ;;
 35058                           
 35059                           	psect	text108
 35060  01900C                     __ptext108:
 35061                           	opt stack 0
 35062  01900C                     i2_writeDoubleToEEPROM:
 35063                           	opt stack 14
 35064                           
 35065                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 35066                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 35067                           
 35068                           ; BSR set to: 14
 35069                           ;incstack = 0
 35070  01900C  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 35071  019010  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 35072  019014  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 35073  019018  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 35074                           
 35075                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 35076  01901C  0E00               	movlw	0
 35077  01901E  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 35078  019020  0E00               	movlw	0
 35079  019022  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 35080  019024                     i2l9669:
 35081  019024  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 35082  019026  E117               	bnz	i2l1601
 35083  019028  0E04               	movlw	4
 35084  01902A  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 35085  01902C  B0D8               	btfsc	status,0,c
 35086  01902E  0012               	return	
 35087                           
 35088                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 35089  019030  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 35090  019032  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 35091  019034  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 35092  019036  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 35093  019038  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 35094  01903A  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 35095  01903C  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 35096  01903E  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 35097  019040  6ED9               	movwf	fsr2l,c
 35098  019042  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 35099  019044  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 35100  019046  6EDA               	movwf	fsr2h,c
 35101  019048  50DF               	movf	indf2,w,c
 35102  01904A  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 35103  01904C  EC7B  F0C9         	call	i2_DATAEE_WriteByte	;wreg free
 35104  019050  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 35105  019052  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 35106  019054  D7E7               	goto	i2l9669
 35107  019056                     i2l1601:
 35108  019056  0012               	return		;funcret
 35109  019058                     __end_ofi2_writeDoubleToEEPROM:
 35110                           	opt stack 0
 35111                           tosu	equ	0xFFF
 35112                           tosh	equ	0xFFE
 35113                           tosl	equ	0xFFD
 35114                           pclatu	equ	0xFFB
 35115                           pclath	equ	0xFFA
 35116                           tblptru	equ	0xFF8
 35117                           tblptrh	equ	0xFF7
 35118                           tblptrl	equ	0xFF6
 35119                           tablat	equ	0xFF5
 35120                           prodh	equ	0xFF4
 35121                           prodl	equ	0xFF3
 35122                           intcon	equ	0xFF2
 35123                           indf0	equ	0xFEF
 35124                           postinc0	equ	0xFEE
 35125                           fsr0h	equ	0xFEA
 35126                           fsr0l	equ	0xFE9
 35127                           wreg	equ	0xFE8
 35128                           indf1	equ	0xFE7
 35129                           postdec1	equ	0xFE5
 35130                           plusw1	equ	0xFE3
 35131                           fsr1h	equ	0xFE2
 35132                           fsr1l	equ	0xFE1
 35133                           bsr	equ	0xFE0
 35134                           indf2	equ	0xFDF
 35135                           postinc2	equ	0xFDE
 35136                           postdec2	equ	0xFDD
 35137                           plusw2	equ	0xFDB
 35138                           fsr2h	equ	0xFDA
 35139                           fsr2l	equ	0xFD9
 35140                           status	equ	0xFD8
 35141                           
 35142 ;; *************** function i2_DATAEE_WriteByte *****************
 35143 ;; Defined at:
 35144 ;;		line 168 in file "mcc_generated_files/memory.c"
 35145 ;; Parameters:    Size  Location     Type
 35146 ;;  bAdd            2    0[COMRAM] unsigned int 
 35147 ;;  bData           1    2[COMRAM] unsigned char 
 35148 ;; Auto vars:     Size  Location     Type
 35149 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 35150 ;; Return value:  Size  Location     Type
 35151 ;;                  1    wreg      void 
 35152 ;; Registers used:
 35153 ;;		wreg, status,2, status,0
 35154 ;; Tracked objects:
 35155 ;;		On entry : 0/0
 35156 ;;		On exit  : 0/0
 35157 ;;		Unchanged: 0/0
 35158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35159 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35163 ;;Total ram usage:        4 bytes
 35164 ;; Hardware stack levels used:    1
 35165 ;; This function calls:
 35166 ;;		Nothing
 35167 ;; This function is called by:
 35168 ;;		i2_writeDoubleToEEPROM
 35169 ;; This function uses a non-reentrant model
 35170 ;;
 35171                           
 35172                           	psect	text109
 35173  0192F6                     __ptext109:
 35174                           	opt stack 0
 35175  0192F6                     i2_DATAEE_WriteByte:
 35176                           	opt stack 14
 35177                           
 35178                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 35179                           
 35180                           ;incstack = 0
 35181  0192F6  0E00               	movlw	0
 35182  0192F8  BEF2               	btfsc	intcon,7,c	;volatile
 35183  0192FA  0E01               	movlw	1
 35184  0192FC  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 35185                           
 35186                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 35187  0192FE  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 35188  019300  0B03               	andlw	3
 35189  019302  6E75               	movwf	3957,c	;volatile
 35190                           
 35191                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 35192  019304  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 35193                           
 35194                           ;memory.c: 174: NVMDAT = bData;
 35195  019308  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 35196                           
 35197                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 35198  01930C  0E3F               	movlw	-193
 35199  01930E  1677               	andwf	3959,f,c	;volsfr
 35200                           
 35201                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 35202  019310  8477               	bsf	3959,2,c	;volsfr
 35203                           
 35204                           ;memory.c: 177: INTCONbits.GIE = 0;
 35205  019312  9EF2               	bcf	intcon,7,c	;volatile
 35206                           
 35207                           ;memory.c: 178: NVMCON2 = 0x55;
 35208  019314  0E55               	movlw	85
 35209  019316  6E78               	movwf	3960,c	;volsfr
 35210                           
 35211                           ;memory.c: 179: NVMCON2 = 0xAA;
 35212  019318  0EAA               	movlw	170
 35213  01931A  6E78               	movwf	3960,c	;volsfr
 35214                           
 35215                           ;memory.c: 180: NVMCON1bits.WR = 1;
 35216  01931C  8277               	bsf	3959,1,c	;volsfr
 35217  01931E                     
 35218                           ;memory.c: 183: {
 35219  01931E  B277               	btfsc	3959,1,c	;volsfr
 35220  019320  D7FE               	goto	i2l809
 35221                           
 35222                           ;memory.c: 184: }
 35223                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 35224  019322  9477               	bcf	3959,2,c	;volsfr
 35225                           
 35226                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 35227  019324  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 35228  019326  D002               	bra	i2u1027_45
 35229  019328  9EF2               	bcf	intcon,7,c	;volatile
 35230  01932A  D001               	bra	i2u1027_46
 35231  01932C                     i2u1027_45:
 35232  01932C  8EF2               	bsf	intcon,7,c	;volatile
 35233  01932E                     i2u1027_46:
 35234  01932E  0012               	return		;funcret
 35235  019330                     __end_ofi2_DATAEE_WriteByte:
 35236                           	opt stack 0
 35237                           tosu	equ	0xFFF
 35238                           tosh	equ	0xFFE
 35239                           tosl	equ	0xFFD
 35240                           pclatu	equ	0xFFB
 35241                           pclath	equ	0xFFA
 35242                           tblptru	equ	0xFF8
 35243                           tblptrh	equ	0xFF7
 35244                           tblptrl	equ	0xFF6
 35245                           tablat	equ	0xFF5
 35246                           prodh	equ	0xFF4
 35247                           prodl	equ	0xFF3
 35248                           intcon	equ	0xFF2
 35249                           indf0	equ	0xFEF
 35250                           postinc0	equ	0xFEE
 35251                           fsr0h	equ	0xFEA
 35252                           fsr0l	equ	0xFE9
 35253                           wreg	equ	0xFE8
 35254                           indf1	equ	0xFE7
 35255                           postdec1	equ	0xFE5
 35256                           plusw1	equ	0xFE3
 35257                           fsr1h	equ	0xFE2
 35258                           fsr1l	equ	0xFE1
 35259                           bsr	equ	0xFE0
 35260                           indf2	equ	0xFDF
 35261                           postinc2	equ	0xFDE
 35262                           postdec2	equ	0xFDD
 35263                           plusw2	equ	0xFDB
 35264                           fsr2h	equ	0xFDA
 35265                           fsr2l	equ	0xFD9
 35266                           status	equ	0xFD8
 35267                           
 35268 ;; *************** function _EUSART2_Receive_ISR *****************
 35269 ;; Defined at:
 35270 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 35271 ;; Parameters:    Size  Location     Type
 35272 ;;		None
 35273 ;; Auto vars:     Size  Location     Type
 35274 ;;		None
 35275 ;; Return value:  Size  Location     Type
 35276 ;;                  1    wreg      void 
 35277 ;; Registers used:
 35278 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35279 ;; Tracked objects:
 35280 ;;		On entry : 0/0
 35281 ;;		On exit  : 0/0
 35282 ;;		Unchanged: 0/0
 35283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35288 ;;Total ram usage:        0 bytes
 35289 ;; Hardware stack levels used:    1
 35290 ;; Hardware stack levels required when called:    3
 35291 ;; This function calls:
 35292 ;;		i2_printf
 35293 ;; This function is called by:
 35294 ;;		_EUSART2_Initialize
 35295 ;;		_INTERRUPT_InterruptManagerHigh
 35296 ;; This function uses a non-reentrant model
 35297 ;;
 35298                           
 35299                           	psect	text110
 35300  018352                     __ptext110:
 35301                           	opt stack 0
 35302  018352                     _EUSART2_Receive_ISR:
 35303                           	opt stack 15
 35304                           
 35305                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 35306                           
 35307                           ;incstack = 0
 35308  018352  010E               	movlb	14	; () banked
 35309  018354  A3F5               	btfss	245,1,b	;volatile
 35310  018356  D003               	goto	i2l429
 35311                           
 35312                           ; BSR set to: 14
 35313                           ;eusart2.c: 221: {
 35314                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 35315  018358  99F5               	bcf	245,4,b	;volatile
 35316                           
 35317                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 35318  01835A  89F5               	bsf	245,4,b	;volatile
 35319                           
 35320                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 35321  01835C  827E               	bsf	3966,1,c	;volatile
 35322  01835E                     i2l429:
 35323                           
 35324                           ; BSR set to: 14
 35325                           ;eusart2.c: 227: }
 35326                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 35327  01835E  927E               	bcf	3966,1,c	;volatile
 35328                           
 35329                           ; BSR set to: 14
 35330                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 35331  018360  0100               	movlb	0	; () banked
 35332  018362  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 35333  018364  0D01               	mullw	1
 35334  018366  0E80               	movlw	low _eusart2RxBuffer
 35335  018368  24F3               	addwf	prodl,w,c
 35336  01836A  6ED9               	movwf	fsr2l,c
 35337  01836C  0E03               	movlw	high _eusart2RxBuffer
 35338  01836E  20F4               	addwfc	prodh,w,c
 35339  018370  6EDA               	movwf	fsr2h,c
 35340  018372  CEF1 FFDF          	movff	3825,indf2	;volatile
 35341                           
 35342                           ; BSR set to: 0
 35343  018376  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 35344                           
 35345                           ; BSR set to: 0
 35346                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 35347  018378  0E3F               	movlw	63
 35348  01837A  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 35349  01837C  D002               	goto	i2l430
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;eusart2.c: 234: {
 35353                           ;eusart2.c: 235: eusart2RxHead = 0;
 35354  01837E  0E00               	movlw	0
 35355  018380  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 35356  018382                     i2l430:
 35357                           
 35358                           ; BSR set to: 0
 35359                           ;eusart2.c: 236: }
 35360                           ;eusart2.c: 237: eusart2RxCount++;
 35361                           
 35362                           ; BSR set to: 0
 35363  018382  0101               	movlb	1	; () banked
 35364  018384  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 35365                           
 35366                           ; BSR set to: 1
 35367                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 35368  018386  0E0A               	movlw	10
 35369  018388  010E               	movlb	14	; () banked
 35370  01838A  19F1               	xorwf	241,w,b	;volatile
 35371  01838C  B4D8               	btfsc	status,2,c
 35372  01838E  D004               	goto	i2u1975_40
 35373                           
 35374                           ; BSR set to: 14
 35375  018390  0E0D               	movlw	13
 35376  018392  19F1               	xorwf	241,w,b	;volatile
 35377  018394  A4D8               	btfss	status,2,c
 35378  018396  D006               	goto	i2l431
 35379  018398                     i2u1975_40:
 35380                           
 35381                           ; BSR set to: 14
 35382                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 35383  018398  0100               	movlb	0	; () banked
 35384  01839A  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 35385                           
 35386                           ; BSR set to: 0
 35387                           ;eusart2.c: 248: RC2REG = 0;
 35388  01839C  0E00               	movlw	0
 35389  01839E  010E               	movlb	14	; () banked
 35390  0183A0  6FF1               	movwf	241,b	;volatile
 35391                           
 35392                           ;eusart2.c: 250: }
 35393  0183A2  D002               	goto	i2l434
 35394  0183A4                     i2l431:
 35395                           
 35396                           ; BSR set to: 14
 35397                           ;eusart2.c: 252: else {
 35398                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 35399  0183A4  0100               	movlb	0	; () banked
 35400  0183A6  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 35401  0183A8                     i2l434:
 35402                           
 35403                           ;eusart2.c: 256: }
 35404                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 35405                           
 35406                           ; BSR set to: 0
 35407  0183A8  0E08               	movlw	8
 35408  0183AA  010E               	movlb	14	; () banked
 35409  0183AC  19F1               	xorwf	241,w,b	;volatile
 35410  0183AE  A4D8               	btfss	status,2,c
 35411  0183B0  0012               	return	
 35412                           
 35413                           ; BSR set to: 14
 35414                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 35415  0183B2  0100               	movlb	0	; () banked
 35416  0183B4  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 35417  0183B6  0D01               	mullw	1
 35418  0183B8  0E80               	movlw	low _eusart2RxBuffer
 35419  0183BA  24F3               	addwf	prodl,w,c
 35420  0183BC  6ED9               	movwf	fsr2l,c
 35421  0183BE  0E03               	movlw	high _eusart2RxBuffer
 35422  0183C0  20F4               	addwfc	prodh,w,c
 35423  0183C2  6EDA               	movwf	fsr2h,c
 35424  0183C4  0E00               	movlw	0
 35425  0183C6  6EDF               	movwf	indf2,c
 35426                           
 35427                           ; BSR set to: 0
 35428                           ;eusart2.c: 262: eusart2RxHead--;
 35429  0183C8  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 35430                           
 35431                           ; BSR set to: 0
 35432                           ;eusart2.c: 265: printf("\033[K");
 35433  0183CA  0EC5               	movlw	low STR_1
 35434  0183CC  6F88               	movwf	i2printf@f& (0+255),b
 35435  0183CE  0EFF               	movlw	high STR_1
 35436  0183D0  6F89               	movwf	(i2printf@f+1)& (0+255),b
 35437  0183D2  ECB4  F091         	call	i2_printf	;wreg free
 35438                           
 35439                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 35440  0183D6  0101               	movlb	1	; () banked
 35441  0183D8  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 35442  0183DA  0100               	movlb	0	; () banked
 35443  0183DC  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 35444  0183DE  B4D8               	btfsc	status,2,c
 35445  0183E0  D00B               	goto	i2l436
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 35449  0183E2  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 35450  0183E4  0D01               	mullw	1
 35451  0183E6  0E80               	movlw	low _eusart2RxBuffer
 35452  0183E8  24F3               	addwf	prodl,w,c
 35453  0183EA  6ED9               	movwf	fsr2l,c
 35454  0183EC  0E03               	movlw	high _eusart2RxBuffer
 35455  0183EE  20F4               	addwfc	prodh,w,c
 35456  0183F0  6EDA               	movwf	fsr2h,c
 35457  0183F2  0E00               	movlw	0
 35458  0183F4  6EDF               	movwf	indf2,c
 35459                           
 35460                           ; BSR set to: 0
 35461                           ;eusart2.c: 270: eusart2RxHead--;
 35462  0183F6  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 35463  0183F8                     i2l436:
 35464                           
 35465                           ; BSR set to: 0
 35466                           ;eusart2.c: 272: }
 35467                           ;eusart2.c: 274: RC2REG = 0;
 35468                           
 35469                           ; BSR set to: 0
 35470  0183F8  0E00               	movlw	0
 35471  0183FA  010E               	movlb	14	; () banked
 35472  0183FC  6FF1               	movwf	241,b	;volatile
 35473  0183FE  0012               	return	
 35474  018400                     __end_of_EUSART2_Receive_ISR:
 35475                           	opt stack 0
 35476                           tosu	equ	0xFFF
 35477                           tosh	equ	0xFFE
 35478                           tosl	equ	0xFFD
 35479                           pclatu	equ	0xFFB
 35480                           pclath	equ	0xFFA
 35481                           tblptru	equ	0xFF8
 35482                           tblptrh	equ	0xFF7
 35483                           tblptrl	equ	0xFF6
 35484                           tablat	equ	0xFF5
 35485                           prodh	equ	0xFF4
 35486                           prodl	equ	0xFF3
 35487                           intcon	equ	0xFF2
 35488                           indf0	equ	0xFEF
 35489                           postinc0	equ	0xFEE
 35490                           fsr0h	equ	0xFEA
 35491                           fsr0l	equ	0xFE9
 35492                           wreg	equ	0xFE8
 35493                           indf1	equ	0xFE7
 35494                           postdec1	equ	0xFE5
 35495                           plusw1	equ	0xFE3
 35496                           fsr1h	equ	0xFE2
 35497                           fsr1l	equ	0xFE1
 35498                           bsr	equ	0xFE0
 35499                           indf2	equ	0xFDF
 35500                           postinc2	equ	0xFDE
 35501                           postdec2	equ	0xFDD
 35502                           plusw2	equ	0xFDB
 35503                           fsr2h	equ	0xFDA
 35504                           fsr2l	equ	0xFD9
 35505                           status	equ	0xFD8
 35506                           
 35507 ;; *************** function i2_printf *****************
 35508 ;; Defined at:
 35509 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 35510 ;; Parameters:    Size  Location     Type
 35511 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 35512 ;;		 -> STR_162(13), STR_161(31), STR_160(26), STR_159(28), 
 35513 ;;		 -> STR_158(426), STR_156(30), STR_155(46), STR_154(39), 
 35514 ;;		 -> STR_153(62), STR_152(55), STR_151(470), STR_149(2954), 
 35515 ;;		 -> STR_147(492), STR_145(748), STR_143(720), STR_141(842), 
 35516 ;;		 -> STR_139(54), STR_137(54), STR_135(45), STR_133(51), 
 35517 ;;		 -> STR_131(52), STR_129(46), STR_127(51), STR_125(53), 
 35518 ;;		 -> STR_123(58), STR_121(71), STR_120(63), STR_119(37), 
 35519 ;;		 -> STR_118(46), STR_117(102), STR_116(86), STR_114(25), 
 35520 ;;		 -> STR_112(42), STR_111(53), STR_110(31), STR_108(29), 
 35521 ;;		 -> STR_107(28), STR_105(42), STR_103(41), STR_101(34), 
 35522 ;;		 -> STR_99(53), STR_98(52), STR_97(105), STR_96(105), 
 35523 ;;		 -> STR_94(59), STR_92(73), STR_90(56), STR_88(34), 
 35524 ;;		 -> STR_86(34), STR_84(32), STR_82(37), STR_80(58), 
 35525 ;;		 -> STR_78(36), STR_76(36), STR_74(37), STR_72(21), 
 35526 ;;		 -> STR_70(24), STR_69(48), STR_59(54), STR_58(64), 
 35527 ;;		 -> STR_56(59), STR_54(85), STR_52(47), STR_51(17), 
 35528 ;;		 -> STR_48(52), STR_46(4), STR_45(5), STR_43(4), 
 35529 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 35530 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 35531 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 35532 ;;		 -> STR_1(4), 
 35533 ;; Auto vars:     Size  Location     Type
 35534 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 35535 ;;  printf          4   65[BANK0 ] unsigned long 
 35536 ;;  printf          4   59[BANK0 ] struct .
 35537 ;;  printf          2   77[BANK0 ] int 
 35538 ;;  printf          2   75[BANK0 ] int 
 35539 ;;  printf          2   73[BANK0 ] unsigned short 
 35540 ;;  printf          2   63[BANK0 ] int 
 35541 ;;  printf          2   57[BANK0 ] PTR void [1]
 35542 ;;		 -> ?i2_printf(2), ?_printf(2), 
 35543 ;;  printf          2   55[BANK0 ] unsigned int 
 35544 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 35545 ;;		 -> STR_176(7), printf@c(1), STR_175(16), STR_174(22), 
 35546 ;;		 -> STR_173(21), STR_172(27), STR_171(41), STR_170(32), 
 35547 ;;		 -> STR_169(19), STR_168(16), STR_167(15), STR_166(16), 
 35548 ;;		 -> STR_165(10), STR_164(13), STR_163(12), ringBufferLUT@channel_name(22), 
 35549 ;;		 -> TRIAC_Firing_Angle(4), 
 35550 ;;  printf          1   79[BANK0 ] char 
 35551 ;;  printf          1   52[BANK0 ] unsigned char 
 35552 ;;  printf          1    0        unsigned char 
 35553 ;; Return value:  Size  Location     Type
 35554 ;;                  2   40[BANK0 ] int 
 35555 ;; Registers used:
 35556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35557 ;; Tracked objects:
 35558 ;;		On entry : 0/0
 35559 ;;		On exit  : 0/0
 35560 ;;		Unchanged: 0/0
 35561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35563 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35564 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35565 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35566 ;;Total ram usage:       40 bytes
 35567 ;; Hardware stack levels used:    1
 35568 ;; Hardware stack levels required when called:    2
 35569 ;; This function calls:
 35570 ;;		i2___awdiv
 35571 ;;		i2___fladd
 35572 ;;		i2___flge
 35573 ;;		i2___flmul
 35574 ;;		i2___flneg
 35575 ;;		i2___flsub
 35576 ;;		i2___fltol
 35577 ;;		i2___lldiv
 35578 ;;		i2___llmod
 35579 ;;		i2___wmul
 35580 ;;		i2___xxtofl
 35581 ;;		i2__div_to_l_
 35582 ;;		i2__tdiv_to_l_
 35583 ;;		i2_fround
 35584 ;;		i2_isdigit
 35585 ;;		i2_putch
 35586 ;;		i2_scale
 35587 ;; This function is called by:
 35588 ;;		_EUSART2_Receive_ISR
 35589 ;; This function uses a non-reentrant model
 35590 ;;
 35591                           
 35592                           	psect	text111
 35593  012368                     __ptext111:
 35594                           	opt stack 0
 35595  012368                     i2_printf:
 35596                           	opt stack 15
 35597                           
 35598                           ;doprnt.c: 466: va_list ap;
 35599                           ;doprnt.c: 499: signed char c;
 35600                           ;doprnt.c: 501: int width;
 35601                           ;doprnt.c: 504: int prec;
 35602                           ;doprnt.c: 508: unsigned short flag;
 35603                           ;doprnt.c: 515: char d;
 35604                           ;doprnt.c: 516: double fval;
 35605                           ;doprnt.c: 517: int exp;
 35606                           ;doprnt.c: 523: union {
 35607                           ;doprnt.c: 524: unsigned long vd;
 35608                           ;doprnt.c: 525: double integ;
 35609                           ;doprnt.c: 526: } tmpval;
 35610                           ;doprnt.c: 528: unsigned long val;
 35611                           ;doprnt.c: 529: unsigned len;
 35612                           ;doprnt.c: 530: const char * cp;
 35613                           ;doprnt.c: 533: *ap = __va_start();
 35614                           
 35615                           ; BSR set to: 14
 35616                           ;incstack = 0
 35617  012368  0E8A               	movlw	low (?i2_printf+2)
 35618  01236A  0100               	movlb	0	; () banked
 35619  01236C  6F99               	movwf	i2printf@ap& (0+255),b
 35620  01236E  0E00               	movlw	high (?i2_printf+2)
 35621  012370  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 35622                           
 35623                           ;doprnt.c: 536: while(c = *f++) {
 35624  012372  EF77  F098         	goto	i2u1960_40
 35625  012376                     
 35626                           ; BSR set to: 0
 35627                           ;doprnt.c: 538: if(c != '%')
 35628                           
 35629                           ; BSR set to: 0
 35630  012376  0E25               	movlw	37
 35631  012378  19AF               	xorwf	i2printf@c& (0+255),w,b
 35632  01237A  B4D8               	btfsc	status,2,c
 35633  01237C  D005               	goto	i2l1647
 35634                           
 35635                           ; BSR set to: 0
 35636                           ;doprnt.c: 540: {
 35637                           ;doprnt.c: 541: (putch(c) );
 35638  01237E  51AF               	movf	i2printf@c& (0+255),w,b
 35639  012380  ECE4  F0CC         	call	i2_putch
 35640                           
 35641                           ;doprnt.c: 542: continue;
 35642  012384  EF77  F098         	goto	i2u1960_40
 35643  012388                     i2l1647:
 35644                           
 35645                           ;doprnt.c: 543: }
 35646                           ;doprnt.c: 546: width = 0;
 35647  012388  0E00               	movlw	0
 35648  01238A  0100               	movlb	0	; () banked
 35649  01238C  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 35650  01238E  0E00               	movlw	0
 35651  012390  6FAB               	movwf	i2printf@width& (0+255),b
 35652                           
 35653                           ;doprnt.c: 548: flag = 0;
 35654  012392  0E00               	movlw	0
 35655  012394  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 35656  012396  0E00               	movlw	0
 35657  012398  6FA9               	movwf	i2printf@flag& (0+255),b
 35658                           
 35659                           ; BSR set to: 0
 35660                           ;doprnt.c: 551: switch(*f) {
 35661                           
 35662                           ;doprnt.c: 550: for(;;) {
 35663  01239A  D004               	goto	i2l1649
 35664  01239C                     
 35665                           ;doprnt.c: 580: flag |= 0x04;
 35666                           
 35667                           ; BSR set to: 0
 35668  01239C  0100               	movlb	0	; () banked
 35669  01239E  85A9               	bsf	i2printf@flag& (0+255),2,b
 35670                           
 35671                           ;doprnt.c: 581: f++;
 35672  0123A0  4B88               	infsnz	i2printf@f& (0+255),f,b
 35673  0123A2  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 35674  0123A4                     i2l1649:
 35675                           
 35676                           ; BSR set to: 0
 35677  0123A4  C088  FFF6         	movff	i2printf@f,tblptrl
 35678  0123A8  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35679  0123AC  0E00               	movlw	low (__mediumconst shr (0+16))
 35680  0123AE  6EF8               	movwf	tblptru,c
 35681  0123B0  0E0D               	movlw	(high __ramtop+-1)
 35682  0123B2  64F7               	cpfsgt	tblptrh,c
 35683  0123B4  D003               	bra	i2u1886_47
 35684  0123B6  0008               	tblrd		*
 35685  0123B8  50F5               	movf	tablat,w,c
 35686  0123BA  D005               	bra	i2u1886_40
 35687  0123BC                     i2u1886_47:
 35688  0123BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 35689  0123C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 35690  0123C4  50EF               	movf	indf0,w,c
 35691  0123C6                     i2u1886_40:
 35692                           
 35693                           ; Switch size 1, requested type "space"
 35694                           ; Number of cases is 1, Range of values is 48 to 48
 35695                           ; switch strategies available:
 35696                           ; Name         Instructions Cycles
 35697                           ; simple_byte            4     3 (average)
 35698                           ;	Chosen strategy is simple_byte
 35699  0123C6  0A30               	xorlw	48	; case 48
 35700  0123C8  B4D8               	btfsc	status,2,c
 35701  0123CA  D7E8               	goto	i2l1650
 35702                           
 35703                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 35704                           
 35705                           ;doprnt.c: 586: }
 35706                           
 35707                           ;doprnt.c: 585: break;
 35708  0123CC  C088  FFF6         	movff	i2printf@f,tblptrl
 35709  0123D0  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35710  0123D4  0E00               	movlw	low (__mediumconst shr (0+16))
 35711  0123D6  6EF8               	movwf	tblptru,c
 35712  0123D8  0E0D               	movlw	(high __ramtop+-1)
 35713  0123DA  64F7               	cpfsgt	tblptrh,c
 35714  0123DC  D003               	bra	i2u1887_47
 35715  0123DE  0008               	tblrd		*
 35716  0123E0  50F5               	movf	tablat,w,c
 35717  0123E2  D005               	bra	i2u1887_40
 35718  0123E4                     i2u1887_47:
 35719  0123E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 35720  0123E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 35721  0123EC  50EF               	movf	indf0,w,c
 35722  0123EE                     i2u1887_40:
 35723  0123EE  ECD0  F0CB         	call	i2_isdigit
 35724  0123F2  A0D8               	btfss	status,0,c
 35725  0123F4  D04B               	goto	i2u1891_40
 35726                           
 35727                           ;doprnt.c: 598: width = 0;
 35728  0123F6  0E00               	movlw	0
 35729  0123F8  0100               	movlb	0	; () banked
 35730  0123FA  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 35731  0123FC  0E00               	movlw	0
 35732  0123FE  6FAB               	movwf	i2printf@width& (0+255),b
 35733  012400                     
 35734                           ;doprnt.c: 600: width *= 10;
 35735                           
 35736                           ; BSR set to: 0
 35737  012400  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 35738  012404  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 35739  012408  0E00               	movlw	0
 35740  01240A  6E04               	movwf	i2___wmul@multiplicand+1,c
 35741  01240C  0E0A               	movlw	10
 35742  01240E  6E03               	movwf	i2___wmul@multiplicand,c
 35743  012410  EC57  F0CB         	call	i2___wmul	;wreg free
 35744  012414  C001  F0AB         	movff	?i2___wmul,i2printf@width
 35745  012418  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 35746                           
 35747                           ;doprnt.c: 601: width += *f++ - '0';
 35748  01241C  0ED0               	movlw	208
 35749  01241E  0100               	movlb	0	; () banked
 35750  012420  6F8A               	movwf	??i2_printf& (0+255),b
 35751  012422  0EFF               	movlw	255
 35752  012424  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35753  012426  C088  FFF6         	movff	i2printf@f,tblptrl
 35754  01242A  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35755  01242E  0E00               	movlw	low (__mediumconst shr (0+16))
 35756  012430  6EF8               	movwf	tblptru,c
 35757  012432  0E0D               	movlw	(high __ramtop+-1)
 35758  012434  64F7               	cpfsgt	tblptrh,c
 35759  012436  D003               	bra	i2u1889_47
 35760  012438  0008               	tblrd		*
 35761  01243A  50F5               	movf	tablat,w,c
 35762  01243C  D005               	bra	i2u1889_40
 35763  01243E                     i2u1889_47:
 35764  01243E  CFF6 FFE9          	movff	tblptrl,fsr0l
 35765  012442  CFF7 FFEA          	movff	tblptrh,fsr0h
 35766  012446  50EF               	movf	indf0,w,c
 35767  012448                     i2u1889_40:
 35768  012448  0100               	movlb	0	; () banked
 35769  01244A  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 35770  01244C  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 35771  01244E  518A               	movf	??i2_printf& (0+255),w,b
 35772  012450  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 35773  012452  518B               	movf	(??i2_printf+1)& (0+255),w,b
 35774  012454  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 35775  012456  518C               	movf	(??i2_printf+2)& (0+255),w,b
 35776  012458  27AB               	addwf	i2printf@width& (0+255),f,b
 35777  01245A  518D               	movf	(??i2_printf+3)& (0+255),w,b
 35778  01245C  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 35779                           
 35780                           ; BSR set to: 0
 35781  01245E  4B88               	infsnz	i2printf@f& (0+255),f,b
 35782  012460  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 35783                           
 35784                           ; BSR set to: 0
 35785                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 35786  012462  C088  FFF6         	movff	i2printf@f,tblptrl
 35787  012466  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35788  01246A  0E00               	movlw	low (__mediumconst shr (0+16))
 35789  01246C  6EF8               	movwf	tblptru,c
 35790  01246E  0E0D               	movlw	(high __ramtop+-1)
 35791  012470  64F7               	cpfsgt	tblptrh,c
 35792  012472  D003               	bra	i2u1890_47
 35793  012474  0008               	tblrd		*
 35794  012476  50F5               	movf	tablat,w,c
 35795  012478  D005               	bra	i2u1890_40
 35796  01247A                     i2u1890_47:
 35797  01247A  CFF6 FFE9          	movff	tblptrl,fsr0l
 35798  01247E  CFF7 FFEA          	movff	tblptrh,fsr0h
 35799  012482  50EF               	movf	indf0,w,c
 35800  012484                     i2u1890_40:
 35801  012484  ECD0  F0CB         	call	i2_isdigit
 35802  012488  B0D8               	btfsc	status,0,c
 35803  01248A  D7BA               	goto	i2l1655
 35804  01248C                     i2u1891_40:
 35805                           
 35806                           ;doprnt.c: 608: }
 35807                           ;doprnt.c: 611: if(*f == '.') {
 35808  01248C  C088  FFF6         	movff	i2printf@f,tblptrl
 35809  012490  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35810  012494  0E00               	movlw	low (__mediumconst shr (0+16))
 35811  012496  6EF8               	movwf	tblptru,c
 35812  012498  0E0D               	movlw	(high __ramtop+-1)
 35813  01249A  64F7               	cpfsgt	tblptrh,c
 35814  01249C  D003               	bra	i2u1892_47
 35815  01249E  0008               	tblrd		*
 35816  0124A0  50F5               	movf	tablat,w,c
 35817  0124A2  D005               	bra	i2u1892_40
 35818  0124A4                     i2u1892_47:
 35819  0124A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 35820  0124A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 35821  0124AC  50EF               	movf	indf0,w,c
 35822  0124AE                     i2u1892_40:
 35823  0124AE  0A2E               	xorlw	46
 35824  0124B0  A4D8               	btfss	status,2,c
 35825  0124B2  D048               	goto	i2l1657
 35826                           
 35827                           ;doprnt.c: 612: flag |= 0x4000;
 35828  0124B4  0100               	movlb	0	; () banked
 35829  0124B6  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 35830                           
 35831                           ;doprnt.c: 613: f++;
 35832  0124B8  4B88               	infsnz	i2printf@f& (0+255),f,b
 35833  0124BA  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 35834                           
 35835                           ; BSR set to: 0
 35836                           ;doprnt.c: 620: {
 35837                           ;doprnt.c: 621: prec = 0;
 35838  0124BC  0E00               	movlw	0
 35839  0124BE  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 35840  0124C0  0E00               	movlw	0
 35841  0124C2  6FAD               	movwf	i2printf@prec& (0+255),b
 35842                           
 35843                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 35844  0124C4  D029               	goto	i2l1658
 35845  0124C6                     
 35846                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 35847                           
 35848                           ; BSR set to: 0
 35849  0124C6  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 35850  0124CA  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 35851  0124CE  0E00               	movlw	0
 35852  0124D0  6E04               	movwf	i2___wmul@multiplicand+1,c
 35853  0124D2  0E0A               	movlw	10
 35854  0124D4  6E03               	movwf	i2___wmul@multiplicand,c
 35855  0124D6  EC57  F0CB         	call	i2___wmul	;wreg free
 35856  0124DA  C088  FFF6         	movff	i2printf@f,tblptrl
 35857  0124DE  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35858  0124E2  0E00               	movlw	low (__mediumconst shr (0+16))
 35859  0124E4  6EF8               	movwf	tblptru,c
 35860  0124E6  0E0D               	movlw	(high __ramtop+-1)
 35861  0124E8  64F7               	cpfsgt	tblptrh,c
 35862  0124EA  D003               	bra	i2u1894_47
 35863  0124EC  0008               	tblrd		*
 35864  0124EE  50F5               	movf	tablat,w,c
 35865  0124F0  D005               	bra	i2u1894_40
 35866  0124F2                     i2u1894_47:
 35867  0124F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 35868  0124F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 35869  0124FA  50EF               	movf	indf0,w,c
 35870  0124FC                     i2u1894_40:
 35871  0124FC  0100               	movlb	0	; () banked
 35872  0124FE  6F8A               	movwf	??i2_printf& (0+255),b
 35873  012500  518A               	movf	??i2_printf& (0+255),w,b
 35874  012502  2601               	addwf	?i2___wmul,f,c
 35875  012504  0E00               	movlw	0
 35876  012506  2202               	addwfc	?i2___wmul+1,f,c
 35877  012508  0ED0               	movlw	208
 35878  01250A  2401               	addwf	?i2___wmul,w,c
 35879  01250C  6FAD               	movwf	i2printf@prec& (0+255),b
 35880  01250E  0EFF               	movlw	255
 35881  012510  2002               	addwfc	?i2___wmul+1,w,c
 35882  012512  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 35883                           
 35884                           ; BSR set to: 0
 35885  012514  4B88               	infsnz	i2printf@f& (0+255),f,b
 35886  012516  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 35887  012518                     i2l1658:
 35888                           
 35889                           ; BSR set to: 0
 35890                           
 35891                           ; BSR set to: 0
 35892  012518  C088  FFF6         	movff	i2printf@f,tblptrl
 35893  01251C  C089  FFF7         	movff	i2printf@f+1,tblptrh
 35894  012520  0E00               	movlw	low (__mediumconst shr (0+16))
 35895  012522  6EF8               	movwf	tblptru,c
 35896  012524  0E0D               	movlw	(high __ramtop+-1)
 35897  012526  64F7               	cpfsgt	tblptrh,c
 35898  012528  D003               	bra	i2u1895_47
 35899  01252A  0008               	tblrd		*
 35900  01252C  50F5               	movf	tablat,w,c
 35901  01252E  D005               	bra	i2u1895_40
 35902  012530                     i2u1895_47:
 35903  012530  CFF6 FFE9          	movff	tblptrl,fsr0l
 35904  012534  CFF7 FFEA          	movff	tblptrh,fsr0h
 35905  012538  50EF               	movf	indf0,w,c
 35906  01253A                     i2u1895_40:
 35907  01253A  ECD0  F0CB         	call	i2_isdigit
 35908  01253E  A0D8               	btfss	status,0,c
 35909  012540  D0A4               	goto	i2l1662
 35910  012542  D7C1               	goto	i2l1659
 35911  012544                     i2l1657:
 35912                           
 35913                           ;doprnt.c: 626: prec = 0;
 35914  012544  0E00               	movlw	0
 35915  012546  0100               	movlb	0	; () banked
 35916  012548  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 35917  01254A  0E00               	movlw	0
 35918  01254C  6FAD               	movwf	i2printf@prec& (0+255),b
 35919                           
 35920                           ; BSR set to: 0
 35921                           ;doprnt.c: 628: flag |= 0x1000;
 35922  01254E  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 35923                           
 35924                           ; BSR set to: 0
 35925                           ;doprnt.c: 630: }
 35926                           ;doprnt.c: 635: switch(c = *f++) {
 35927  012550  D09C               	goto	i2l1662
 35928  012552                     
 35929                           ; BSR set to: 0
 35930                           ;doprnt.c: 663: flag |= 0x400;
 35931                           
 35932                           ; BSR set to: 0
 35933  012552  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 35934                           
 35935                           ; BSR set to: 0
 35936                           ;doprnt.c: 698: case 'i':
 35937                           ;doprnt.c: 699: break;
 35938                           
 35939                           ; BSR set to: 0
 35940                           
 35941                           ;doprnt.c: 697: case 'd':
 35942                           
 35943                           ;doprnt.c: 664: break;
 35944  012554  D0D1               	goto	i2l1666
 35945  012556                     
 35946                           ; BSR set to: 0
 35947                           ;doprnt.c: 718: case 'x':
 35948                           ;doprnt.c: 721: flag |= 0x80;
 35949                           
 35950                           ; BSR set to: 0
 35951                           
 35952                           ; BSR set to: 0
 35953  012556  8FA9               	bsf	i2printf@flag& (0+255),7,b
 35954                           
 35955                           ;doprnt.c: 723: break;
 35956  012558  D0CF               	goto	i2l1666
 35957  01255A                     
 35958                           ; BSR set to: 0
 35959                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 35960                           
 35961                           ; BSR set to: 0
 35962  01255A  C099  FFD9         	movff	i2printf@ap,fsr2l
 35963  01255E  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 35964  012562  CFDE F095          	movff	postinc2,i2printf@cp
 35965  012566  CFDD F096          	movff	postdec2,i2printf@cp+1
 35966                           
 35967                           ; BSR set to: 0
 35968  01256A  0E02               	movlw	2
 35969  01256C  2799               	addwf	i2printf@ap& (0+255),f,b
 35970  01256E  0E00               	movlw	0
 35971  012570  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 35972                           
 35973                           ; BSR set to: 0
 35974                           ;doprnt.c: 740: if(!cp)
 35975  012572  5195               	movf	i2printf@cp& (0+255),w,b
 35976  012574  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 35977  012576  A4D8               	btfss	status,2,c
 35978  012578  D004               	goto	i2l1672
 35979                           
 35980                           ; BSR set to: 0
 35981                           ;doprnt.c: 741: cp = "(null)";
 35982  01257A  0E86               	movlw	low STR_176
 35983  01257C  6F95               	movwf	i2printf@cp& (0+255),b
 35984  01257E  0EFF               	movlw	high STR_176
 35985  012580  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 35986  012582                     i2l1672:
 35987                           
 35988                           ; BSR set to: 0
 35989                           ;doprnt.c: 745: len = 0;
 35990                           
 35991                           ; BSR set to: 0
 35992  012582  0E00               	movlw	0
 35993  012584  6F98               	movwf	(i2printf@len+1)& (0+255),b
 35994  012586  0E00               	movlw	0
 35995  012588  6F97               	movwf	i2printf@len& (0+255),b
 35996                           
 35997                           ;doprnt.c: 746: while(cp[len])
 35998  01258A  D003               	goto	i2l1673
 35999  01258C                     
 36000                           ;doprnt.c: 747: len++;
 36001                           
 36002                           ; BSR set to: 0
 36003  01258C  0100               	movlb	0	; () banked
 36004  01258E  4B97               	infsnz	i2printf@len& (0+255),f,b
 36005  012590  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 36006  012592                     i2l1673:
 36007                           
 36008                           ; BSR set to: 0
 36009                           
 36010                           ; BSR set to: 0
 36011  012592  5197               	movf	i2printf@len& (0+255),w,b
 36012  012594  2595               	addwf	i2printf@cp& (0+255),w,b
 36013  012596  6F8A               	movwf	??i2_printf& (0+255),b
 36014  012598  5198               	movf	(i2printf@len+1)& (0+255),w,b
 36015  01259A  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 36016  01259C  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 36017  01259E  C08A  FFF6         	movff	??i2_printf,tblptrl
 36018  0125A2  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 36019  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 36020  0125A8  6EF8               	movwf	tblptru,c
 36021  0125AA  0E0D               	movlw	(high __ramtop+-1)
 36022  0125AC  64F7               	cpfsgt	tblptrh,c
 36023  0125AE  D003               	bra	i2u1898_47
 36024  0125B0  0008               	tblrd		*
 36025  0125B2  50F5               	movf	tablat,w,c
 36026  0125B4  D005               	bra	i2u1898_40
 36027  0125B6                     i2u1898_47:
 36028  0125B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 36029  0125BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 36030  0125BE  50EF               	movf	indf0,w,c
 36031  0125C0                     i2u1898_40:
 36032  0125C0  0900               	iorlw	0
 36033  0125C2  A4D8               	btfss	status,2,c
 36034  0125C4  D7E3               	goto	i2l1674
 36035  0125C6                     i2u1899_40:
 36036                           
 36037                           ;doprnt.c: 753: if(prec && prec < len)
 36038                           
 36039                           ;doprnt.c: 750: dostring:
 36040  0125C6  0100               	movlb	0	; () banked
 36041  0125C8  51AD               	movf	i2printf@prec& (0+255),w,b
 36042  0125CA  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 36043  0125CC  B4D8               	btfsc	status,2,c
 36044  0125CE  D00A               	goto	i2l1677
 36045                           
 36046                           ; BSR set to: 0
 36047  0125D0  5197               	movf	i2printf@len& (0+255),w,b
 36048  0125D2  5DAD               	subwf	i2printf@prec& (0+255),w,b
 36049  0125D4  5198               	movf	(i2printf@len+1)& (0+255),w,b
 36050  0125D6  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 36051  0125D8  B0D8               	btfsc	status,0,c
 36052  0125DA  D004               	goto	i2l1677
 36053                           
 36054                           ; BSR set to: 0
 36055                           ;doprnt.c: 754: len = prec;
 36056  0125DC  C0AD  F097         	movff	i2printf@prec,i2printf@len
 36057  0125E0  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 36058  0125E4                     i2l1677:
 36059                           
 36060                           ; BSR set to: 0
 36061                           ;doprnt.c: 757: if(width > len)
 36062                           
 36063                           ; BSR set to: 0
 36064  0125E4  51AB               	movf	i2printf@width& (0+255),w,b
 36065  0125E6  5D97               	subwf	i2printf@len& (0+255),w,b
 36066  0125E8  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 36067  0125EA  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 36068  0125EC  B0D8               	btfsc	status,0,c
 36069  0125EE  D005               	goto	i2l1678
 36070                           
 36071                           ; BSR set to: 0
 36072                           ;doprnt.c: 758: width -= len;
 36073  0125F0  5197               	movf	i2printf@len& (0+255),w,b
 36074  0125F2  5FAB               	subwf	i2printf@width& (0+255),f,b
 36075  0125F4  5198               	movf	(i2printf@len+1)& (0+255),w,b
 36076  0125F6  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 36077  0125F8  D008               	goto	i2l1680
 36078  0125FA                     i2l1678:
 36079                           
 36080                           ; BSR set to: 0
 36081                           ;doprnt.c: 759: else
 36082                           ;doprnt.c: 760: width = 0;
 36083                           
 36084                           ; BSR set to: 0
 36085  0125FA  0E00               	movlw	0
 36086  0125FC  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 36087  0125FE  0E00               	movlw	0
 36088  012600  6FAB               	movwf	i2printf@width& (0+255),b
 36089                           
 36090                           ; BSR set to: 0
 36091                           ;doprnt.c: 764: while(width--)
 36092  012602  D003               	goto	i2l1680
 36093  012604                     i2l15495:
 36094                           
 36095                           ; BSR set to: 0
 36096                           ;doprnt.c: 765: (putch(' ') );
 36097  012604  0E20               	movlw	32
 36098  012606  ECE4  F0CC         	call	i2_putch
 36099  01260A                     i2l1680:
 36100  01260A  0100               	movlb	0	; () banked
 36101  01260C  07AB               	decf	i2printf@width& (0+255),f,b
 36102  01260E  A0D8               	btfss	status,0,c
 36103  012610  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 36104  012612  29AB               	incf	i2printf@width& (0+255),w,b
 36105  012614  E1F7               	bnz	i2l15495
 36106  012616  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 36107  012618  B4D8               	btfsc	status,2,c
 36108  01261A  D017               	goto	i2l1683
 36109  01261C  D7F3               	goto	i2l1681
 36110  01261E                     i2l15499:
 36111                           
 36112                           ; BSR set to: 0
 36113                           ;doprnt.c: 768: (putch(*cp++) );
 36114  01261E  C095  FFF6         	movff	i2printf@cp,tblptrl
 36115  012622  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 36116  012626  0E00               	movlw	low (__mediumconst shr (0+16))
 36117  012628  6EF8               	movwf	tblptru,c
 36118  01262A  0E0D               	movlw	(high __ramtop+-1)
 36119  01262C  64F7               	cpfsgt	tblptrh,c
 36120  01262E  D003               	bra	i2u1904_47
 36121  012630  0008               	tblrd		*
 36122  012632  50F5               	movf	tablat,w,c
 36123  012634  D005               	bra	i2u1904_40
 36124  012636                     i2u1904_47:
 36125  012636  CFF6 FFE9          	movff	tblptrl,fsr0l
 36126  01263A  CFF7 FFEA          	movff	tblptrh,fsr0h
 36127  01263E  50EF               	movf	indf0,w,c
 36128  012640                     i2u1904_40:
 36129  012640  ECE4  F0CC         	call	i2_putch
 36130  012644  0100               	movlb	0	; () banked
 36131  012646  4B95               	infsnz	i2printf@cp& (0+255),f,b
 36132  012648  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 36133  01264A                     i2l1683:
 36134                           
 36135                           ; BSR set to: 0
 36136                           
 36137                           ; BSR set to: 0
 36138  01264A  0797               	decf	i2printf@len& (0+255),f,b
 36139  01264C  A0D8               	btfss	status,0,c
 36140  01264E  0798               	decf	(i2printf@len+1)& (0+255),f,b
 36141  012650  2997               	incf	i2printf@len& (0+255),w,b
 36142  012652  E1E5               	bnz	i2l15499
 36143  012654  2998               	incf	(i2printf@len+1)& (0+255),w,b
 36144  012656  B4D8               	btfsc	status,2,c
 36145  012658  EF77  F098         	goto	i2u1960_40
 36146  01265C  D7E0               	goto	i2l1684
 36147  01265E                     
 36148                           ; BSR set to: 0
 36149                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 36150                           
 36151                           ; BSR set to: 0
 36152  01265E  C099  FFD9         	movff	i2printf@ap,fsr2l
 36153  012662  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 36154  012666  50DF               	movf	indf2,w,c
 36155  012668  6FAF               	movwf	i2printf@c& (0+255),b
 36156                           
 36157                           ; BSR set to: 0
 36158  01266A  0E02               	movlw	2
 36159  01266C  2799               	addwf	i2printf@ap& (0+255),f,b
 36160  01266E  0E00               	movlw	0
 36161  012670  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 36162  012672                     
 36163                           ; BSR set to: 0
 36164                           ;doprnt.c: 805: cp = (char *)&c;
 36165                           
 36166                           ; BSR set to: 0
 36167  012672  0EAF               	movlw	low i2printf@c
 36168  012674  6F95               	movwf	i2printf@cp& (0+255),b
 36169  012676  0E00               	movlw	high i2printf@c
 36170  012678  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 36171                           
 36172                           ; BSR set to: 0
 36173                           ;doprnt.c: 806: len = 1;
 36174  01267A  0E00               	movlw	0
 36175  01267C  6F98               	movwf	(i2printf@len+1)& (0+255),b
 36176  01267E  0E01               	movlw	1
 36177  012680  6F97               	movwf	i2printf@len& (0+255),b
 36178                           
 36179                           ;doprnt.c: 807: goto dostring;
 36180  012682  D7A1               	goto	i2u1899_40
 36181  012684                     
 36182                           ; BSR set to: 0
 36183                           ;doprnt.c: 818: flag |= 0xC0;
 36184                           
 36185                           ; BSR set to: 0
 36186  012684  0EC0               	movlw	192
 36187  012686  13A9               	iorwf	i2printf@flag& (0+255),f,b
 36188                           
 36189                           ; BSR set to: 0
 36190                           ;doprnt.c: 822: }
 36191                           
 36192                           ;doprnt.c: 819: break;
 36193  012688  D037               	goto	i2l1666
 36194  01268A                     i2l1662:
 36195                           
 36196                           ; BSR set to: 0
 36197  01268A  0100               	movlb	0	; () banked
 36198  01268C  5188               	movf	i2printf@f& (0+255),w,b
 36199  01268E  6F8A               	movwf	??i2_printf& (0+255),b
 36200  012690  5189               	movf	(i2printf@f+1)& (0+255),w,b
 36201  012692  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 36202  012694  4B88               	infsnz	i2printf@f& (0+255),f,b
 36203  012696  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 36204  012698  C08A  FFF6         	movff	??i2_printf,tblptrl
 36205  01269C  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 36206  0126A0  0E00               	movlw	low (__mediumconst shr (0+16))
 36207  0126A2  6EF8               	movwf	tblptru,c
 36208  0126A4  0E0D               	movlw	(high __ramtop+-1)
 36209  0126A6  64F7               	cpfsgt	tblptrh,c
 36210  0126A8  D003               	bra	i2u1906_47
 36211  0126AA  0008               	tblrd		*
 36212  0126AC  50F5               	movf	tablat,w,c
 36213  0126AE  D005               	bra	i2u1906_40
 36214  0126B0                     i2u1906_47:
 36215  0126B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 36216  0126B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 36217  0126B8  50EF               	movf	indf0,w,c
 36218  0126BA                     i2u1906_40:
 36219  0126BA  0100               	movlb	0	; () banked
 36220  0126BC  6FAF               	movwf	i2printf@c& (0+255),b
 36221  0126BE  51AF               	movf	i2printf@c& (0+255),w,b
 36222                           
 36223                           ; Switch size 1, requested type "space"
 36224                           ; Number of cases is 9, Range of values is 0 to 120
 36225                           ; switch strategies available:
 36226                           ; Name         Instructions Cycles
 36227                           ; simple_byte           28    15 (average)
 36228                           ;	Chosen strategy is simple_byte
 36229  0126C0  0A00               	xorlw	0	; case 0
 36230  0126C2  B4D8               	btfsc	status,2,c
 36231  0126C4  0012               	return	
 36232  0126C6  0A58               	xorlw	88	; case 88
 36233  0126C8  B4D8               	btfsc	status,2,c
 36234  0126CA  D745               	goto	i2l1669
 36235  0126CC  0A3B               	xorlw	59	; case 99
 36236  0126CE  B4D8               	btfsc	status,2,c
 36237  0126D0  D7C6               	goto	i2l1686
 36238  0126D2  0A07               	xorlw	7	; case 100
 36239  0126D4  B4D8               	btfsc	status,2,c
 36240  0126D6  D010               	goto	i2l1666
 36241  0126D8  0A02               	xorlw	2	; case 102
 36242  0126DA  B4D8               	btfsc	status,2,c
 36243  0126DC  D73A               	goto	i2l1665
 36244  0126DE  0A0F               	xorlw	15	; case 105
 36245  0126E0  B4D8               	btfsc	status,2,c
 36246  0126E2  D00A               	goto	i2l1666
 36247  0126E4  0A1A               	xorlw	26	; case 115
 36248  0126E6  B4D8               	btfsc	status,2,c
 36249  0126E8  D738               	goto	i2l1671
 36250  0126EA  0A06               	xorlw	6	; case 117
 36251  0126EC  B4D8               	btfsc	status,2,c
 36252  0126EE  D7CA               	goto	i2l1688
 36253  0126F0  0A0D               	xorlw	13	; case 120
 36254  0126F2  B4D8               	btfsc	status,2,c
 36255  0126F4  D730               	goto	i2l1669
 36256  0126F6  D7BD               	goto	i2l1687
 36257  0126F8                     i2l1666:
 36258                           
 36259                           ; BSR set to: 0
 36260                           ;doprnt.c: 825: if(flag & (0x700)) {
 36261                           
 36262                           ; BSR set to: 0
 36263  0126F8  0E07               	movlw	7
 36264  0126FA  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 36265  0126FC  B4D8               	btfsc	status,2,c
 36266  0126FE  D33B               	goto	i2l1689
 36267                           
 36268                           ; BSR set to: 0
 36269                           ;doprnt.c: 827: if(flag & 0x1000)
 36270  012700  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 36271  012702  D004               	goto	i2l1690
 36272                           
 36273                           ; BSR set to: 0
 36274                           ;doprnt.c: 829: prec = 6;
 36275  012704  0E00               	movlw	0
 36276  012706  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 36277  012708  0E06               	movlw	6
 36278  01270A  6FAD               	movwf	i2printf@prec& (0+255),b
 36279  01270C                     i2l1690:
 36280                           
 36281                           ; BSR set to: 0
 36282                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 36283                           
 36284                           ; BSR set to: 0
 36285  01270C  C099  FFD9         	movff	i2printf@ap,fsr2l
 36286  012710  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 36287  012714  CFDE F0A5          	movff	postinc2,i2printf@fval
 36288  012718  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 36289  01271C  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 36290  012720  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 36291                           
 36292                           ; BSR set to: 0
 36293  012724  0E04               	movlw	4
 36294  012726  2799               	addwf	i2printf@ap& (0+255),f,b
 36295  012728  0E00               	movlw	0
 36296  01272A  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 36297                           
 36298                           ; BSR set to: 0
 36299                           ;doprnt.c: 831: if(fval < 0.0) {
 36300  01272C  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 36301  01272E  D015               	goto	i2l1691
 36302                           
 36303                           ; BSR set to: 0
 36304                           ;doprnt.c: 832: fval = -fval;
 36305  012730  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 36306  012734  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 36307  012738  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 36308  01273C  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 36309  012740  ECB6  F0CA         	call	i2___flneg	;wreg free
 36310  012744  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 36311  012748  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 36312  01274C  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 36313  012750  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 36314                           
 36315                           ;doprnt.c: 833: flag |= 0x03;
 36316  012754  0E03               	movlw	3
 36317  012756  0100               	movlb	0	; () banked
 36318  012758  13A9               	iorwf	i2printf@flag& (0+255),f,b
 36319  01275A                     i2l1691:
 36320                           
 36321                           ; BSR set to: 0
 36322                           ;doprnt.c: 834: }
 36323                           ;doprnt.c: 835: exp = 0;
 36324                           
 36325                           ; BSR set to: 0
 36326  01275A  0E00               	movlw	0
 36327  01275C  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 36328  01275E  0E00               	movlw	0
 36329  012760  6F9F               	movwf	i2printf@exp& (0+255),b
 36330                           
 36331                           ; BSR set to: 0
 36332                           ;doprnt.c: 836: if( fval!=0) {
 36333  012762  51A5               	movf	i2printf@fval& (0+255),w,b
 36334  012764  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 36335  012766  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 36336  012768  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 36337  01276A  B4D8               	btfsc	status,2,c
 36338  01276C  D082               	goto	i2l1696
 36339                           
 36340                           ; BSR set to: 0
 36341                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 36342  01276E  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 36343  012770  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 36344  012772  0F82               	addlw	130
 36345  012774  6F9F               	movwf	i2printf@exp& (0+255),b
 36346  012776  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 36347  012778  0EFF               	movlw	255
 36348  01277A  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 36349                           
 36350                           ; BSR set to: 0
 36351                           ;doprnt.c: 838: exp--;
 36352  01277C  079F               	decf	i2printf@exp& (0+255),f,b
 36353  01277E  A0D8               	btfss	status,0,c
 36354  012780  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 36355                           
 36356                           ; BSR set to: 0
 36357                           ;doprnt.c: 839: exp *= 3;
 36358  012782  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 36359  012786  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 36360  01278A  0E00               	movlw	0
 36361  01278C  6E04               	movwf	i2___wmul@multiplicand+1,c
 36362  01278E  0E03               	movlw	3
 36363  012790  6E03               	movwf	i2___wmul@multiplicand,c
 36364  012792  EC57  F0CB         	call	i2___wmul	;wreg free
 36365  012796  C001  F09F         	movff	?i2___wmul,i2printf@exp
 36366  01279A  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 36367                           
 36368                           ;doprnt.c: 840: exp /= 10;
 36369  01279E  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 36370  0127A2  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 36371  0127A6  0E00               	movlw	0
 36372  0127A8  6E0A               	movwf	i2___awdiv@divisor+1,c
 36373  0127AA  0E0A               	movlw	10
 36374  0127AC  6E09               	movwf	i2___awdiv@divisor,c
 36375  0127AE  EC5C  F0C3         	call	i2___awdiv	;wreg free
 36376  0127B2  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 36377  0127B6  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 36378                           
 36379                           ;doprnt.c: 841: if(exp < 0)
 36380  0127BA  0100               	movlb	0	; () banked
 36381  0127BC  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 36382  0127BE  D003               	goto	i2l1693
 36383                           
 36384                           ; BSR set to: 0
 36385                           ;doprnt.c: 842: exp--;
 36386  0127C0  079F               	decf	i2printf@exp& (0+255),f,b
 36387  0127C2  A0D8               	btfss	status,0,c
 36388  0127C4  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 36389  0127C6                     i2l1693:
 36390                           
 36391                           ; BSR set to: 0
 36392                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 36393                           
 36394                           ; BSR set to: 0
 36395  0127C6  519F               	movf	i2printf@exp& (0+255),w,b
 36396  0127C8  0800               	sublw	0
 36397  0127CA  EC55  F0A0         	call	i2_scale
 36398  0127CE  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 36399  0127D2  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 36400  0127D6  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 36401  0127DA  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 36402                           
 36403                           ;doprnt.c: 847: tmpval.integ *= fval;
 36404  0127DE  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 36405  0127E2  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 36406  0127E6  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 36407  0127EA  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 36408  0127EE  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 36409  0127F2  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 36410  0127F6  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 36411  0127FA  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 36412  0127FE  ECF2  F0A5         	call	i2___flmul	;wreg free
 36413  012802  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 36414  012806  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 36415  01280A  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 36416  01280E  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 36417                           
 36418                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 36419  012812  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 36420  012816  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 36421  01281A  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 36422  01281E  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 36423  012822  0E00               	movlw	0
 36424  012824  6E38               	movwf	i2___flge@ff2,c
 36425  012826  0E00               	movlw	0
 36426  012828  6E39               	movwf	i2___flge@ff2+1,c
 36427  01282A  0E80               	movlw	128
 36428  01282C  6E3A               	movwf	i2___flge@ff2+2,c
 36429  01282E  0E3F               	movlw	63
 36430  012830  6E3B               	movwf	i2___flge@ff2+3,c
 36431  012832  EC89  F0BD         	call	i2___flge	;wreg free
 36432  012836  B0D8               	btfsc	status,0,c
 36433  012838  D005               	goto	i2l1694
 36434                           
 36435                           ;doprnt.c: 849: exp--;
 36436  01283A  0100               	movlb	0	; () banked
 36437  01283C  079F               	decf	i2printf@exp& (0+255),f,b
 36438  01283E  A0D8               	btfss	status,0,c
 36439  012840  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 36440  012842  D017               	goto	i2l1696
 36441  012844                     i2l1694:
 36442                           
 36443                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 36444                           
 36445                           ; BSR set to: 0
 36446  012844  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 36447  012848  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 36448  01284C  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 36449  012850  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 36450  012854  0E00               	movlw	0
 36451  012856  6E38               	movwf	i2___flge@ff2,c
 36452  012858  0E00               	movlw	0
 36453  01285A  6E39               	movwf	i2___flge@ff2+1,c
 36454  01285C  0E20               	movlw	32
 36455  01285E  6E3A               	movwf	i2___flge@ff2+2,c
 36456  012860  0E41               	movlw	65
 36457  012862  6E3B               	movwf	i2___flge@ff2+3,c
 36458  012864  EC89  F0BD         	call	i2___flge	;wreg free
 36459  012868  A0D8               	btfss	status,0,c
 36460  01286A  D003               	goto	i2l1696
 36461                           
 36462                           ;doprnt.c: 851: exp++;
 36463  01286C  0100               	movlb	0	; () banked
 36464  01286E  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 36465  012870  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 36466  012872                     i2l1696:
 36467                           
 36468                           ;doprnt.c: 852: }
 36469                           ;doprnt.c: 1112: if(prec <= 12)
 36470                           
 36471                           ; BSR set to: 0
 36472                           
 36473                           ; BSR set to: 0
 36474                           
 36475                           ; BSR set to: 0
 36476  012872  0100               	movlb	0	; () banked
 36477  012874  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 36478  012876  D006               	goto	i2u1914_40
 36479  012878  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 36480  01287A  E121               	bnz	i2l15567
 36481  01287C  0E0D               	movlw	13
 36482  01287E  5DAD               	subwf	i2printf@prec& (0+255),w,b
 36483  012880  B0D8               	btfsc	status,0,c
 36484  012882  D01D               	goto	i2l1697
 36485  012884                     i2u1914_40:
 36486                           
 36487                           ; BSR set to: 0
 36488                           ;doprnt.c: 1113: fval += fround(prec);
 36489  012884  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 36490  012888  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 36491  01288C  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 36492  012890  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 36493  012894  51AD               	movf	i2printf@prec& (0+255),w,b
 36494  012896  EC53  F0B3         	call	i2_fround
 36495  01289A  C049  F05A         	movff	?i2_fround,i2___fladd@a
 36496  01289E  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 36497  0128A2  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 36498  0128A6  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 36499  0128AA  EC39  F0A9         	call	i2___fladd	;wreg free
 36500  0128AE  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 36501  0128B2  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 36502  0128B6  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 36503  0128BA  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 36504  0128BE                     i2l1697:
 36505  0128BE                     i2l15567:
 36506                           
 36507                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 36508  0128BE  0100               	movlb	0	; () banked
 36509  0128C0  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 36510  0128C2  D006               	goto	i2u1915_40
 36511  0128C4  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 36512  0128C6  E122               	bnz	i2l15575
 36513  0128C8  0E0A               	movlw	10
 36514  0128CA  5D9F               	subwf	i2printf@exp& (0+255),w,b
 36515  0128CC  B0D8               	btfsc	status,0,c
 36516  0128CE  D01E               	goto	i2u1918_40
 36517  0128D0                     i2u1915_40:
 36518                           
 36519                           ; BSR set to: 0
 36520  0128D0  51A5               	movf	i2printf@fval& (0+255),w,b
 36521  0128D2  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 36522  0128D4  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 36523  0128D6  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 36524  0128D8  B4D8               	btfsc	status,2,c
 36525  0128DA  D063               	goto	i2l1698
 36526                           
 36527                           ; BSR set to: 0
 36528  0128DC  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 36529  0128E0  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 36530  0128E4  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 36531  0128E8  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 36532  0128EC  EC09  F0C0         	call	i2___fltol	;wreg free
 36533  0128F0  0100               	movlb	0	; () banked
 36534  0128F2  516C               	movf	?i2___fltol& (0+255),w,b
 36535  0128F4  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 36536  0128F6  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 36537  0128F8  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 36538  0128FA  B4D8               	btfsc	status,2,c
 36539                           
 36540                           ; BSR set to: 0
 36541  0128FC  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 36542  0128FE  D051               	goto	i2l1698
 36543  012900  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 36544  012902  E104               	bnz	i2l15575
 36545  012904  0E02               	movlw	2
 36546  012906  5D9F               	subwf	i2printf@exp& (0+255),w,b
 36547  012908  A0D8               	btfss	status,0,c
 36548  01290A  D04B               	goto	i2l1698
 36549  01290C                     i2u1918_40:
 36550  01290C                     i2l15575:
 36551                           
 36552                           ; BSR set to: 0
 36553                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 36554  01290C  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 36555  012910  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 36556  012914  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 36557  012918  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 36558  01291C  0E5F               	movlw	95
 36559  01291E  6E38               	movwf	i2___flge@ff2,c
 36560  012920  0E70               	movlw	112
 36561  012922  6E39               	movwf	i2___flge@ff2+1,c
 36562  012924  0E89               	movlw	137
 36563  012926  6E3A               	movwf	i2___flge@ff2+2,c
 36564  012928  0E40               	movlw	64
 36565  01292A  6E3B               	movwf	i2___flge@ff2+3,c
 36566  01292C  EC89  F0BD         	call	i2___flge	;wreg free
 36567  012930  B0D8               	btfsc	status,0,c
 36568  012932  D003               	goto	i2l1701
 36569                           
 36570                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 36571  012934  0100               	movlb	0	; () banked
 36572  012936  0EF7               	movlw	247
 36573  012938  D002               	goto	L17
 36574  01293A                     i2l1701:
 36575                           
 36576                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 36577                           
 36578                           ; BSR set to: 0
 36579  01293A  0100               	movlb	0	; () banked
 36580  01293C  0EF8               	movlw	248
 36581  01293E                     L17:
 36582  01293E  279F               	addwf	i2printf@exp& (0+255),f,b
 36583  012940  0EFF               	movlw	255
 36584  012942  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 36585                           
 36586                           ; BSR set to: 0
 36587                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 36588                           
 36589                           ; BSR set to: 0
 36590  012944  519F               	movf	i2printf@exp& (0+255),w,b
 36591  012946  EC55  F0A0         	call	i2_scale
 36592  01294A  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 36593  01294E  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 36594  012952  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 36595  012956  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 36596  01295A  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 36597  01295E  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 36598  012962  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 36599  012966  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 36600  01296A  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 36601  01296E  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 36602  012972  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 36603  012976  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 36604  01297A  ECD2  F0BB         	call	i2__div_to_l_	;wreg free
 36605  01297E  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 36606  012982  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 36607  012986  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 36608  01298A  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 36609                           
 36610                           ;doprnt.c: 1129: fval = 0.0;
 36611  01298E  0E00               	movlw	0
 36612  012990  0100               	movlb	0	; () banked
 36613  012992  6FA5               	movwf	i2printf@fval& (0+255),b
 36614  012994  0E00               	movlw	0
 36615  012996  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 36616  012998  0E00               	movlw	0
 36617  01299A  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 36618  01299C  0E00               	movlw	0
 36619  01299E  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 36620                           
 36621                           ;doprnt.c: 1130: } else {
 36622  0129A0  D03C               	goto	i2l1707
 36623  0129A2                     i2l1698:
 36624                           
 36625                           ; BSR set to: 0
 36626                           ;doprnt.c: 1131: val = (unsigned long)fval;
 36627                           
 36628                           ; BSR set to: 0
 36629  0129A2  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 36630  0129A6  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 36631  0129AA  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 36632  0129AE  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 36633  0129B2  EC09  F0C0         	call	i2___fltol	;wreg free
 36634  0129B6  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 36635  0129BA  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 36636  0129BE  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 36637  0129C2  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 36638                           
 36639                           ;doprnt.c: 1132: fval -= (double)val;
 36640  0129C6  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 36641  0129CA  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 36642  0129CE  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 36643  0129D2  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 36644  0129D6  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 36645  0129DA  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 36646  0129DE  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 36647  0129E2  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 36648  0129E6  0E00               	movlw	0
 36649  0129E8  ECC7  F0B8         	call	i2___xxtofl
 36650  0129EC  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 36651  0129F0  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 36652  0129F4  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 36653  0129F8  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 36654  0129FC  EC99  F0C8         	call	i2___flsub	;wreg free
 36655  012A00  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 36656  012A04  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 36657  012A08  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 36658  012A0C  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 36659                           
 36660                           ;doprnt.c: 1133: exp = 0;
 36661  012A10  0E00               	movlw	0
 36662  012A12  0100               	movlb	0	; () banked
 36663  012A14  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 36664  012A16  0E00               	movlw	0
 36665  012A18  6F9F               	movwf	i2printf@exp& (0+255),b
 36666  012A1A                     i2l1707:
 36667                           
 36668                           ; BSR set to: 0
 36669                           ;doprnt.c: 1134: }
 36670                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 36671                           
 36672                           ; BSR set to: 0
 36673  012A1A  0E01               	movlw	1
 36674  012A1C  6FAF               	movwf	i2printf@c& (0+255),b
 36675  012A1E                     i2l15595:
 36676                           
 36677                           ; BSR set to: 0
 36678  012A1E  0E0A               	movlw	10
 36679  012A20  19AF               	xorwf	i2printf@c& (0+255),w,b
 36680  012A22  B4D8               	btfsc	status,2,c
 36681  012A24  D01B               	goto	i2u1922_40
 36682                           
 36683                           ; BSR set to: 0
 36684                           ;doprnt.c: 1137: if(val < dpowers[c])
 36685                           
 36686                           ; BSR set to: 0
 36687                           
 36688                           ; BSR set to: 0
 36689  012A26  51AF               	movf	i2printf@c& (0+255),w,b
 36690  012A28  0D04               	mullw	4
 36691  012A2A  0EC7               	movlw	low _dpowers
 36692  012A2C  24F3               	addwf	prodl,w,c
 36693  012A2E  6EF6               	movwf	tblptrl,c
 36694  012A30  0ED4               	movlw	high _dpowers
 36695  012A32  20F4               	addwfc	prodh,w,c
 36696  012A34  6EF7               	movwf	tblptrh,c
 36697  012A36                     	if	1	;There are 3 active tblptr bytes
 36698  012A36  6AF8               	clrf	tblptru,c
 36699  012A38  0E00               	movlw	low (__mediumconst shr (0+16))
 36700  012A3A  22F8               	addwfc	tblptru,f,c
 36701  012A3C                     	endif
 36702  012A3C  0009               	tblrd		*+
 36703  012A3E  50F5               	movf	tablat,w,c
 36704  012A40  5DA1               	subwf	i2printf@val& (0+255),w,b
 36705  012A42  0009               	tblrd		*+
 36706  012A44  50F5               	movf	tablat,w,c
 36707  012A46  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 36708  012A48  0009               	tblrd		*+
 36709  012A4A  50F5               	movf	tablat,w,c
 36710  012A4C  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 36711  012A4E  0009               	tblrd		*+
 36712  012A50  50F5               	movf	tablat,w,c
 36713  012A52  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 36714  012A54  A0D8               	btfss	status,0,c
 36715  012A56  D002               	goto	i2u1922_40
 36716                           
 36717                           ; BSR set to: 0
 36718                           
 36719                           ; BSR set to: 0
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;doprnt.c: 1138: break;
 36723  012A58  2BAF               	incf	i2printf@c& (0+255),f,b
 36724  012A5A  D7E1               	goto	i2l15595
 36725  012A5C                     i2u1922_40:
 36726                           
 36727                           ; BSR set to: 0
 36728                           ;doprnt.c: 1142: width -= prec + c + exp;
 36729                           
 36730                           ; BSR set to: 0
 36731  012A5C  C0AF  F08A         	movff	i2printf@c,??i2_printf
 36732  012A60  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 36733  012A62  BF8A               	btfsc	??i2_printf& (0+255),7,b
 36734  012A64  078B               	decf	(??i2_printf+1)& (0+255),f,b
 36735  012A66  51AD               	movf	i2printf@prec& (0+255),w,b
 36736  012A68  278A               	addwf	??i2_printf& (0+255),f,b
 36737  012A6A  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 36738  012A6C  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 36739  012A6E  519F               	movf	i2printf@exp& (0+255),w,b
 36740  012A70  278A               	addwf	??i2_printf& (0+255),f,b
 36741  012A72  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 36742  012A74  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 36743  012A76  518A               	movf	??i2_printf& (0+255),w,b
 36744  012A78  5FAB               	subwf	i2printf@width& (0+255),f,b
 36745  012A7A  518B               	movf	(??i2_printf+1)& (0+255),w,b
 36746  012A7C  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 36747                           
 36748                           ;doprnt.c: 1143: if(
 36749                           ;doprnt.c: 1147: prec)
 36750  012A7E  51AD               	movf	i2printf@prec& (0+255),w,b
 36751  012A80  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 36752  012A82  B4D8               	btfsc	status,2,c
 36753  012A84  D003               	goto	i2l1711
 36754                           
 36755                           ; BSR set to: 0
 36756                           ;doprnt.c: 1148: width--;
 36757  012A86  07AB               	decf	i2printf@width& (0+255),f,b
 36758  012A88  A0D8               	btfss	status,0,c
 36759  012A8A  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 36760  012A8C                     i2l1711:
 36761                           
 36762                           ; BSR set to: 0
 36763                           ;doprnt.c: 1149: if(flag & 0x03)
 36764                           
 36765                           ; BSR set to: 0
 36766  012A8C  0E03               	movlw	3
 36767  012A8E  15A9               	andwf	i2printf@flag& (0+255),w,b
 36768  012A90  6F8A               	movwf	??i2_printf& (0+255),b
 36769  012A92  0E00               	movlw	0
 36770  012A94  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 36771  012A96  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 36772  012A98  518A               	movf	??i2_printf& (0+255),w,b
 36773  012A9A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 36774  012A9C  B4D8               	btfsc	status,2,c
 36775  012A9E  D003               	goto	i2l1712
 36776                           
 36777                           ; BSR set to: 0
 36778                           ;doprnt.c: 1150: width--;
 36779  012AA0  07AB               	decf	i2printf@width& (0+255),f,b
 36780  012AA2  A0D8               	btfss	status,0,c
 36781  012AA4  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 36782  012AA6                     i2l1712:
 36783                           
 36784                           ; BSR set to: 0
 36785                           ;doprnt.c: 1153: if(flag & 0x04) {
 36786                           
 36787                           ; BSR set to: 0
 36788  012AA6  A5A9               	btfss	i2printf@flag& (0+255),2,b
 36789  012AA8  D025               	goto	i2l1719
 36790                           
 36791                           ; BSR set to: 0
 36792                           ;doprnt.c: 1157: if(flag & 0x03)
 36793  012AAA  0E03               	movlw	3
 36794  012AAC  15A9               	andwf	i2printf@flag& (0+255),w,b
 36795  012AAE  6F8A               	movwf	??i2_printf& (0+255),b
 36796  012AB0  0E00               	movlw	0
 36797  012AB2  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 36798  012AB4  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 36799  012AB6  518A               	movf	??i2_printf& (0+255),w,b
 36800  012AB8  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 36801  012ABA  B4D8               	btfsc	status,2,c
 36802  012ABC  D00B               	goto	i2l1715
 36803                           
 36804                           ; BSR set to: 0
 36805                           ;doprnt.c: 1159: (putch('-') );
 36806  012ABE  0E2D               	movlw	45
 36807  012AC0  ECE4  F0CC         	call	i2_putch
 36808                           
 36809                           ;doprnt.c: 1168: while(width > 0) {
 36810  012AC4  D007               	goto	i2l1715
 36811  012AC6                     i2l15621:
 36812                           
 36813                           ;doprnt.c: 1169: (putch('0') );
 36814  012AC6  0E30               	movlw	48
 36815  012AC8  ECE4  F0CC         	call	i2_putch
 36816                           
 36817                           ;doprnt.c: 1170: width--;
 36818  012ACC  0100               	movlb	0	; () banked
 36819  012ACE  07AB               	decf	i2printf@width& (0+255),f,b
 36820  012AD0  A0D8               	btfss	status,0,c
 36821  012AD2  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 36822  012AD4                     i2l1715:
 36823                           
 36824                           ; BSR set to: 0
 36825  012AD4  0100               	movlb	0	; () banked
 36826  012AD6  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 36827  012AD8  D06B               	goto	i2l1723
 36828  012ADA  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 36829  012ADC  E1F4               	bnz	i2l15621
 36830  012ADE  05AB               	decf	i2printf@width& (0+255),w,b
 36831  012AE0  A0D8               	btfss	status,0,c
 36832  012AE2  D066               	goto	i2l1723
 36833  012AE4  D7F0               	goto	i2l1716
 36834  012AE6                     i2l15627:
 36835                           
 36836                           ; BSR set to: 0
 36837                           ;doprnt.c: 1181: (putch(' ') );
 36838  012AE6  0E20               	movlw	32
 36839  012AE8  ECE4  F0CC         	call	i2_putch
 36840                           
 36841                           ;doprnt.c: 1182: width--;
 36842  012AEC  0100               	movlb	0	; () banked
 36843  012AEE  07AB               	decf	i2printf@width& (0+255),f,b
 36844  012AF0  A0D8               	btfss	status,0,c
 36845  012AF2  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 36846  012AF4                     i2l1719:
 36847                           
 36848                           ; BSR set to: 0
 36849                           
 36850                           ; BSR set to: 0
 36851  012AF4  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 36852  012AF6  D005               	goto	i2u1928_40
 36853  012AF8  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 36854  012AFA  E1F5               	bnz	i2l15627
 36855  012AFC  05AB               	decf	i2printf@width& (0+255),w,b
 36856  012AFE  B0D8               	btfsc	status,0,c
 36857  012B00  D7F2               	goto	i2l1720
 36858  012B02                     i2u1928_40:
 36859                           
 36860                           ; BSR set to: 0
 36861                           ;doprnt.c: 1183: }
 36862                           ;doprnt.c: 1188: if(flag & 0x03)
 36863                           
 36864                           ; BSR set to: 0
 36865  012B02  0E03               	movlw	3
 36866  012B04  15A9               	andwf	i2printf@flag& (0+255),w,b
 36867  012B06  6F8A               	movwf	??i2_printf& (0+255),b
 36868  012B08  0E00               	movlw	0
 36869  012B0A  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 36870  012B0C  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 36871  012B0E  518A               	movf	??i2_printf& (0+255),w,b
 36872  012B10  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 36873  012B12  B4D8               	btfsc	status,2,c
 36874  012B14  D04D               	goto	i2l1723
 36875                           
 36876                           ; BSR set to: 0
 36877                           ;doprnt.c: 1190: (putch('-') );
 36878  012B16  0E2D               	movlw	45
 36879  012B18  ECE4  F0CC         	call	i2_putch
 36880                           
 36881                           ;doprnt.c: 1195: }
 36882                           ;doprnt.c: 1196: while(c--) {
 36883  012B1C  D049               	goto	i2l1723
 36884  012B1E                     
 36885                           ;doprnt.c: 1200: {
 36886                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 36887  012B1E  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 36888  012B22  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 36889  012B26  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 36890  012B2A  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 36891  012B2E  0100               	movlb	0	; () banked
 36892  012B30  51AF               	movf	i2printf@c& (0+255),w,b
 36893  012B32  0D04               	mullw	4
 36894  012B34  0EC7               	movlw	low _dpowers
 36895  012B36  24F3               	addwf	prodl,w,c
 36896  012B38  6EF6               	movwf	tblptrl,c
 36897  012B3A  0ED4               	movlw	high _dpowers
 36898  012B3C  20F4               	addwfc	prodh,w,c
 36899  012B3E  6EF7               	movwf	tblptrh,c
 36900  012B40                     	if	1	;There are 3 active tblptr bytes
 36901  012B40  6AF8               	clrf	tblptru,c
 36902  012B42  0E00               	movlw	low (__mediumconst shr (0+16))
 36903  012B44  22F8               	addwfc	tblptru,f,c
 36904  012B46                     	endif
 36905  012B46  0009               	tblrd		*+
 36906  012B48  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 36907  012B4C  0009               	tblrd		*+
 36908  012B4E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 36909  012B52  0009               	tblrd		*+
 36910  012B54  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 36911  012B58  000A               	tblrd		*-
 36912  012B5A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 36913  012B5E  ECDF  F0C3         	call	i2___lldiv	;wreg free
 36914  012B62  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 36915  012B66  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 36916  012B6A  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 36917  012B6E  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 36918                           
 36919                           ;doprnt.c: 1202: tmpval.vd %= 10;
 36920  012B72  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 36921  012B76  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 36922  012B7A  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 36923  012B7E  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 36924  012B82  0E0A               	movlw	10
 36925  012B84  6E12               	movwf	i2___llmod@divisor,c
 36926  012B86  0E00               	movlw	0
 36927  012B88  6E13               	movwf	i2___llmod@divisor+1,c
 36928  012B8A  0E00               	movlw	0
 36929  012B8C  6E14               	movwf	i2___llmod@divisor+2,c
 36930  012B8E  0E00               	movlw	0
 36931  012B90  6E15               	movwf	i2___llmod@divisor+3,c
 36932  012B92  ECE0  F0C5         	call	i2___llmod	;wreg free
 36933  012B96  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 36934  012B9A  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 36935  012B9E  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 36936  012BA2  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 36937                           
 36938                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 36939  012BA6  0100               	movlb	0	; () banked
 36940  012BA8  519B               	movf	i2printf@tmpval& (0+255),w,b
 36941  012BAA  0F30               	addlw	48
 36942  012BAC  ECE4  F0CC         	call	i2_putch
 36943  012BB0                     i2l1723:
 36944  012BB0  0100               	movlb	0	; () banked
 36945  012BB2  07AF               	decf	i2printf@c& (0+255),f,b
 36946  012BB4  29AF               	incf	i2printf@c& (0+255),w,b
 36947  012BB6  B4D8               	btfsc	status,2,c
 36948  012BB8  D008               	goto	i2l1726
 36949  012BBA  D7B1               	goto	i2l1724
 36950  012BBC                     i2l15645:
 36951                           
 36952                           ; BSR set to: 0
 36953                           ;doprnt.c: 1208: (putch('0') );
 36954  012BBC  0E30               	movlw	48
 36955  012BBE  ECE4  F0CC         	call	i2_putch
 36956                           
 36957                           ;doprnt.c: 1209: exp--;
 36958  012BC2  0100               	movlb	0	; () banked
 36959  012BC4  079F               	decf	i2printf@exp& (0+255),f,b
 36960  012BC6  A0D8               	btfss	status,0,c
 36961  012BC8  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 36962  012BCA                     i2l1726:
 36963                           
 36964                           ; BSR set to: 0
 36965                           
 36966                           ; BSR set to: 0
 36967  012BCA  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 36968  012BCC  D005               	goto	i2u1931_40
 36969  012BCE  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 36970  012BD0  E1F5               	bnz	i2l15645
 36971  012BD2  059F               	decf	i2printf@exp& (0+255),w,b
 36972  012BD4  B0D8               	btfsc	status,0,c
 36973  012BD6  D7F2               	goto	i2l1727
 36974  012BD8                     i2u1931_40:
 36975                           
 36976                           ; BSR set to: 0
 36977                           ;doprnt.c: 1210: }
 36978                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 36979                           
 36980                           ; BSR set to: 0
 36981  012BD8  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 36982  012BDA  D009               	goto	i2l1729
 36983  012BDC  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 36984  012BDE  E104               	bnz	i2u1932_40
 36985  012BE0  0E09               	movlw	9
 36986  012BE2  5DAD               	subwf	i2printf@prec& (0+255),w,b
 36987  012BE4  A0D8               	btfss	status,0,c
 36988  012BE6  D003               	goto	i2l1729
 36989  012BE8                     i2u1932_40:
 36990                           
 36991                           ; BSR set to: 0
 36992                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 36993  012BE8  0E08               	movlw	8
 36994  012BEA  6FAF               	movwf	i2printf@c& (0+255),b
 36995  012BEC  D002               	goto	i2l1730
 36996  012BEE                     i2l1729:
 36997                           
 36998                           ; BSR set to: 0
 36999                           ;doprnt.c: 1213: else
 37000                           ;doprnt.c: 1214: c = prec;
 37001  012BEE  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 37002  012BF2                     i2l1730:
 37003                           
 37004                           ; BSR set to: 0
 37005                           ;doprnt.c: 1215: prec -= c;
 37006                           
 37007                           ; BSR set to: 0
 37008  012BF2  51AF               	movf	i2printf@c& (0+255),w,b
 37009  012BF4  5FAD               	subwf	i2printf@prec& (0+255),f,b
 37010  012BF6  0E00               	movlw	0
 37011  012BF8  BFAF               	btfsc	i2printf@c& (0+255),7,b
 37012  012BFA  0EFF               	movlw	255
 37013  012BFC  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 37014                           
 37015                           ; BSR set to: 0
 37016                           ;doprnt.c: 1219: if(c)
 37017  012BFE  51AF               	movf	i2printf@c& (0+255),w,b
 37018  012C00  B4D8               	btfsc	status,2,c
 37019  012C02  D003               	goto	i2l1731
 37020                           
 37021                           ; BSR set to: 0
 37022                           ;doprnt.c: 1221: (putch('.') );
 37023  012C04  0E2E               	movlw	46
 37024  012C06  ECE4  F0CC         	call	i2_putch
 37025  012C0A                     i2l1731:
 37026                           
 37027                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 37028  012C0A  0100               	movlb	0	; () banked
 37029  012C0C  51AF               	movf	i2printf@c& (0+255),w,b
 37030  012C0E  EC55  F0A0         	call	i2_scale
 37031  012C12  C049  F090         	movff	?i2_scale,i2_printf$4738
 37032  012C16  C04A  F091         	movff	?i2_scale+1,i2_printf$4738+1
 37033  012C1A  C04B  F092         	movff	?i2_scale+2,i2_printf$4738+2
 37034  012C1E  C04C  F093         	movff	?i2_scale+3,i2_printf$4738+3
 37035                           
 37036                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 37037  012C22  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 37038  012C26  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 37039  012C2A  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 37040  012C2E  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 37041  012C32  C090  F030         	movff	i2_printf$4738,i2___flmul@b
 37042  012C36  C091  F031         	movff	i2_printf$4738+1,i2___flmul@b+1
 37043  012C3A  C092  F032         	movff	i2_printf$4738+2,i2___flmul@b+2
 37044  012C3E  C093  F033         	movff	i2_printf$4738+3,i2___flmul@b+3
 37045  012C42  ECF2  F0A5         	call	i2___flmul	;wreg free
 37046  012C46  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 37047  012C4A  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 37048  012C4E  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 37049  012C52  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 37050  012C56  EC09  F0C0         	call	i2___fltol	;wreg free
 37051  012C5A  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 37052  012C5E  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 37053  012C62  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 37054  012C66  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 37055                           
 37056                           ;doprnt.c: 1228: while(c--) {
 37057  012C6A  D073               	goto	i2l1732
 37058  012C6C                     
 37059                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 37060  012C6C  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 37061  012C70  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 37062  012C74  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 37063  012C78  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 37064  012C7C  0100               	movlb	0	; () banked
 37065  012C7E  51AF               	movf	i2printf@c& (0+255),w,b
 37066  012C80  0D04               	mullw	4
 37067  012C82  0EC7               	movlw	low _dpowers
 37068  012C84  24F3               	addwf	prodl,w,c
 37069  012C86  6EF6               	movwf	tblptrl,c
 37070  012C88  0ED4               	movlw	high _dpowers
 37071  012C8A  20F4               	addwfc	prodh,w,c
 37072  012C8C  6EF7               	movwf	tblptrh,c
 37073  012C8E                     	if	1	;There are 3 active tblptr bytes
 37074  012C8E  6AF8               	clrf	tblptru,c
 37075  012C90  0E00               	movlw	low (__mediumconst shr (0+16))
 37076  012C92  22F8               	addwfc	tblptru,f,c
 37077  012C94                     	endif
 37078  012C94  0009               	tblrd		*+
 37079  012C96  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 37080  012C9A  0009               	tblrd		*+
 37081  012C9C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 37082  012CA0  0009               	tblrd		*+
 37083  012CA2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 37084  012CA6  000A               	tblrd		*-
 37085  012CA8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 37086  012CAC  ECDF  F0C3         	call	i2___lldiv	;wreg free
 37087  012CB0  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 37088  012CB4  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 37089  012CB8  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 37090  012CBC  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 37091                           
 37092                           ;doprnt.c: 1230: tmpval.vd %= 10;
 37093  012CC0  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 37094  012CC4  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 37095  012CC8  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 37096  012CCC  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 37097  012CD0  0E0A               	movlw	10
 37098  012CD2  6E12               	movwf	i2___llmod@divisor,c
 37099  012CD4  0E00               	movlw	0
 37100  012CD6  6E13               	movwf	i2___llmod@divisor+1,c
 37101  012CD8  0E00               	movlw	0
 37102  012CDA  6E14               	movwf	i2___llmod@divisor+2,c
 37103  012CDC  0E00               	movlw	0
 37104  012CDE  6E15               	movwf	i2___llmod@divisor+3,c
 37105  012CE0  ECE0  F0C5         	call	i2___llmod	;wreg free
 37106  012CE4  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 37107  012CE8  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 37108  012CEC  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 37109  012CF0  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 37110                           
 37111                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 37112  012CF4  0100               	movlb	0	; () banked
 37113  012CF6  519B               	movf	i2printf@tmpval& (0+255),w,b
 37114  012CF8  0F30               	addlw	48
 37115  012CFA  ECE4  F0CC         	call	i2_putch
 37116                           
 37117                           ;doprnt.c: 1232: val %= dpowers[c];
 37118  012CFE  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 37119  012D02  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 37120  012D06  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 37121  012D0A  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 37122  012D0E  0100               	movlb	0	; () banked
 37123  012D10  51AF               	movf	i2printf@c& (0+255),w,b
 37124  012D12  0D04               	mullw	4
 37125  012D14  0EC7               	movlw	low _dpowers
 37126  012D16  24F3               	addwf	prodl,w,c
 37127  012D18  6EF6               	movwf	tblptrl,c
 37128  012D1A  0ED4               	movlw	high _dpowers
 37129  012D1C  20F4               	addwfc	prodh,w,c
 37130  012D1E  6EF7               	movwf	tblptrh,c
 37131  012D20                     	if	1	;There are 3 active tblptr bytes
 37132  012D20  6AF8               	clrf	tblptru,c
 37133  012D22  0E00               	movlw	low (__mediumconst shr (0+16))
 37134  012D24  22F8               	addwfc	tblptru,f,c
 37135  012D26                     	endif
 37136  012D26  0009               	tblrd		*+
 37137  012D28  CFF5 F012          	movff	tablat,i2___llmod@divisor
 37138  012D2C  0009               	tblrd		*+
 37139  012D2E  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 37140  012D32  0009               	tblrd		*+
 37141  012D34  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 37142  012D38  000A               	tblrd		*-
 37143  012D3A  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 37144  012D3E  ECE0  F0C5         	call	i2___llmod	;wreg free
 37145  012D42  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 37146  012D46  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 37147  012D4A  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 37148  012D4E  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 37149  012D52                     i2l1732:
 37150  012D52  0100               	movlb	0	; () banked
 37151  012D54  07AF               	decf	i2printf@c& (0+255),f,b
 37152  012D56  29AF               	incf	i2printf@c& (0+255),w,b
 37153  012D58  B4D8               	btfsc	status,2,c
 37154  012D5A  D008               	goto	i2l1735
 37155  012D5C  D787               	goto	i2l1733
 37156  012D5E                     
 37157                           ; BSR set to: 0
 37158                           ;doprnt.c: 1236: (putch('0') );
 37159                           
 37160                           ; BSR set to: 0
 37161  012D5E  0E30               	movlw	48
 37162  012D60  ECE4  F0CC         	call	i2_putch
 37163                           
 37164                           ;doprnt.c: 1237: prec--;
 37165  012D64  0100               	movlb	0	; () banked
 37166  012D66  07AD               	decf	i2printf@prec& (0+255),f,b
 37167  012D68  A0D8               	btfss	status,0,c
 37168  012D6A  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 37169  012D6C                     i2l1735:
 37170                           
 37171                           ; BSR set to: 0
 37172                           
 37173                           ; BSR set to: 0
 37174  012D6C  51AD               	movf	i2printf@prec& (0+255),w,b
 37175  012D6E  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 37176  012D70  B4D8               	btfsc	status,2,c
 37177  012D72  D1BD               	goto	i2u1960_40
 37178  012D74  D7F4               	goto	i2l1736
 37179  012D76                     i2l1689:
 37180                           
 37181                           ; BSR set to: 0
 37182                           ;doprnt.c: 1246: }
 37183                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 37184                           
 37185                           ; BSR set to: 0
 37186  012D76  0EC0               	movlw	192
 37187  012D78  15A9               	andwf	i2printf@flag& (0+255),w,b
 37188  012D7A  6F8A               	movwf	??i2_printf& (0+255),b
 37189  012D7C  0E00               	movlw	0
 37190  012D7E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 37191  012D80  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 37192  012D82  518A               	movf	??i2_printf& (0+255),w,b
 37193  012D84  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 37194  012D86  A4D8               	btfss	status,2,c
 37195  012D88  D01E               	goto	i2l1738
 37196                           
 37197                           ; BSR set to: 0
 37198                           ;doprnt.c: 1253: {
 37199                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 37200  012D8A  C099  FFD9         	movff	i2printf@ap,fsr2l
 37201  012D8E  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 37202  012D92  CFDE F0A1          	movff	postinc2,i2printf@val
 37203  012D96  CFDD F0A2          	movff	postdec2,i2printf@val+1
 37204  012D9A  0E00               	movlw	0
 37205  012D9C  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 37206  012D9E  0EFF               	movlw	-1
 37207  012DA0  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 37208  012DA2  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 37209                           
 37210                           ; BSR set to: 0
 37211  012DA4  0E02               	movlw	2
 37212  012DA6  2799               	addwf	i2printf@ap& (0+255),f,b
 37213  012DA8  0E00               	movlw	0
 37214  012DAA  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 37215                           
 37216                           ; BSR set to: 0
 37217                           ;doprnt.c: 1261: if((long)val < 0) {
 37218  012DAC  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 37219  012DAE  D01D               	goto	i2l1740
 37220                           
 37221                           ; BSR set to: 0
 37222                           ;doprnt.c: 1262: flag |= 0x03;
 37223  012DB0  0E03               	movlw	3
 37224  012DB2  13A9               	iorwf	i2printf@flag& (0+255),f,b
 37225                           
 37226                           ; BSR set to: 0
 37227                           ;doprnt.c: 1263: val = -val;
 37228  012DB4  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 37229  012DB6  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 37230  012DB8  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 37231  012DBA  6DA1               	negf	i2printf@val& (0+255),b
 37232  012DBC  0E00               	movlw	0
 37233  012DBE  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 37234  012DC0  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 37235  012DC2  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 37236                           
 37237                           ; BSR set to: 0
 37238                           ;doprnt.c: 1264: }
 37239                           ;doprnt.c: 1266: }
 37240  012DC4  D012               	goto	i2l1740
 37241  012DC6                     i2l1738:
 37242                           
 37243                           ; BSR set to: 0
 37244                           ;doprnt.c: 1268: else
 37245                           ;doprnt.c: 1273: {
 37246                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 37247                           
 37248                           ; BSR set to: 0
 37249  012DC6  C099  FFD9         	movff	i2printf@ap,fsr2l
 37250  012DCA  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 37251  012DCE  CFDE F08A          	movff	postinc2,??i2_printf
 37252  012DD2  CFDD F08B          	movff	postdec2,??i2_printf+1
 37253  012DD6  C08A  F0A1         	movff	??i2_printf,i2printf@val
 37254  012DDA  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 37255  012DDE  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 37256  012DE0  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 37257                           
 37258                           ; BSR set to: 0
 37259  012DE2  0E02               	movlw	2
 37260  012DE4  2799               	addwf	i2printf@ap& (0+255),f,b
 37261  012DE6  0E00               	movlw	0
 37262  012DE8  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 37263  012DEA                     i2l1740:
 37264                           
 37265                           ; BSR set to: 0
 37266                           ;doprnt.c: 1287: }
 37267                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 37268                           
 37269                           ; BSR set to: 0
 37270  012DEA  51AD               	movf	i2printf@prec& (0+255),w,b
 37271  012DEC  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 37272  012DEE  A4D8               	btfss	status,2,c
 37273  012DF0  D04B               	goto	i2l1742
 37274                           
 37275                           ; BSR set to: 0
 37276  012DF2  51A1               	movf	i2printf@val& (0+255),w,b
 37277  012DF4  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 37278  012DF6  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 37279  012DF8  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 37280  012DFA  A4D8               	btfss	status,2,c
 37281  012DFC  D045               	goto	i2l1742
 37282                           
 37283                           ; BSR set to: 0
 37284                           ;doprnt.c: 1291: prec++;
 37285  012DFE  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 37286  012E00  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 37287                           
 37288                           ; BSR set to: 0
 37289                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 37290  012E02  D042               	goto	i2l1742
 37291  012E04                     
 37292                           ; BSR set to: 0
 37293                           ;doprnt.c: 1302: case 0xC0:
 37294                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 37295                           
 37296                           ; BSR set to: 0
 37297                           
 37298                           ; BSR set to: 0
 37299  012E04  0E01               	movlw	1
 37300  012E06  6FAF               	movwf	i2printf@c& (0+255),b
 37301  012E08                     i2l15705:
 37302                           
 37303                           ; BSR set to: 0
 37304  012E08  0E0A               	movlw	10
 37305  012E0A  19AF               	xorwf	i2printf@c& (0+255),w,b
 37306  012E0C  B4D8               	btfsc	status,2,c
 37307  012E0E  D047               	goto	i2l1748
 37308                           
 37309                           ; BSR set to: 0
 37310                           ;doprnt.c: 1306: if(val < dpowers[c])
 37311                           
 37312                           ; BSR set to: 0
 37313                           
 37314                           ; BSR set to: 0
 37315  012E10  51AF               	movf	i2printf@c& (0+255),w,b
 37316  012E12  0D04               	mullw	4
 37317  012E14  0EC7               	movlw	low _dpowers
 37318  012E16  24F3               	addwf	prodl,w,c
 37319  012E18  6EF6               	movwf	tblptrl,c
 37320  012E1A  0ED4               	movlw	high _dpowers
 37321  012E1C  20F4               	addwfc	prodh,w,c
 37322  012E1E  6EF7               	movwf	tblptrh,c
 37323  012E20                     	if	1	;There are 3 active tblptr bytes
 37324  012E20  6AF8               	clrf	tblptru,c
 37325  012E22  0E00               	movlw	low (__mediumconst shr (0+16))
 37326  012E24  22F8               	addwfc	tblptru,f,c
 37327  012E26                     	endif
 37328  012E26  0009               	tblrd		*+
 37329  012E28  50F5               	movf	tablat,w,c
 37330  012E2A  5DA1               	subwf	i2printf@val& (0+255),w,b
 37331  012E2C  0009               	tblrd		*+
 37332  012E2E  50F5               	movf	tablat,w,c
 37333  012E30  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 37334  012E32  0009               	tblrd		*+
 37335  012E34  50F5               	movf	tablat,w,c
 37336  012E36  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 37337  012E38  0009               	tblrd		*+
 37338  012E3A  50F5               	movf	tablat,w,c
 37339  012E3C  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 37340  012E3E  A0D8               	btfss	status,0,c
 37341  012E40  D02E               	goto	i2l1748
 37342                           
 37343                           ; BSR set to: 0
 37344                           
 37345                           ; BSR set to: 0
 37346                           
 37347                           ; BSR set to: 0
 37348                           ;doprnt.c: 1307: break;
 37349  012E42  2BAF               	incf	i2printf@c& (0+255),f,b
 37350  012E44  D7E1               	goto	i2l15705
 37351  012E46                     
 37352                           ; BSR set to: 0
 37353                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 37354                           
 37355                           ; BSR set to: 0
 37356  012E46  0E01               	movlw	1
 37357  012E48  6FAF               	movwf	i2printf@c& (0+255),b
 37358  012E4A                     i2l15719:
 37359                           
 37360                           ; BSR set to: 0
 37361  012E4A  0E08               	movlw	8
 37362  012E4C  19AF               	xorwf	i2printf@c& (0+255),w,b
 37363  012E4E  B4D8               	btfsc	status,2,c
 37364  012E50  D026               	goto	i2l1748
 37365                           
 37366                           ; BSR set to: 0
 37367                           ;doprnt.c: 1317: if(val < hexpowers[c])
 37368                           
 37369                           ; BSR set to: 0
 37370                           
 37371                           ; BSR set to: 0
 37372  012E52  51AF               	movf	i2printf@c& (0+255),w,b
 37373  012E54  0D04               	mullw	4
 37374  012E56  0EEF               	movlw	low _hexpowers
 37375  012E58  24F3               	addwf	prodl,w,c
 37376  012E5A  6EF6               	movwf	tblptrl,c
 37377  012E5C  0ED4               	movlw	high _hexpowers
 37378  012E5E  20F4               	addwfc	prodh,w,c
 37379  012E60  6EF7               	movwf	tblptrh,c
 37380  012E62                     	if	1	;There are 3 active tblptr bytes
 37381  012E62  6AF8               	clrf	tblptru,c
 37382  012E64  0E00               	movlw	low (__mediumconst shr (0+16))
 37383  012E66  22F8               	addwfc	tblptru,f,c
 37384  012E68                     	endif
 37385  012E68  0009               	tblrd		*+
 37386  012E6A  50F5               	movf	tablat,w,c
 37387  012E6C  5DA1               	subwf	i2printf@val& (0+255),w,b
 37388  012E6E  0009               	tblrd		*+
 37389  012E70  50F5               	movf	tablat,w,c
 37390  012E72  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 37391  012E74  0009               	tblrd		*+
 37392  012E76  50F5               	movf	tablat,w,c
 37393  012E78  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 37394  012E7A  0009               	tblrd		*+
 37395  012E7C  50F5               	movf	tablat,w,c
 37396  012E7E  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 37397  012E80  A0D8               	btfss	status,0,c
 37398  012E82  D00D               	goto	i2l1748
 37399                           
 37400                           ; BSR set to: 0
 37401                           
 37402                           ; BSR set to: 0
 37403                           
 37404                           ; BSR set to: 0
 37405                           ;doprnt.c: 1318: break;
 37406  012E84  2BAF               	incf	i2printf@c& (0+255),f,b
 37407  012E86  D7E1               	goto	i2l15719
 37408  012E88                     i2l1742:
 37409                           
 37410                           ; BSR set to: 0
 37411                           
 37412                           ; BSR set to: 0
 37413  012E88  51A9               	movf	i2printf@flag& (0+255),w,b
 37414  012E8A  0BC0               	andlw	192
 37415                           
 37416                           ; Switch size 1, requested type "space"
 37417                           ; Number of cases is 3, Range of values is 0 to 192
 37418                           ; switch strategies available:
 37419                           ; Name         Instructions Cycles
 37420                           ; simple_byte           10     6 (average)
 37421                           ;	Chosen strategy is simple_byte
 37422  012E8C  0A00               	xorlw	0	; case 0
 37423  012E8E  B4D8               	btfsc	status,2,c
 37424  012E90  D7B9               	goto	i2l1743
 37425  012E92  0A80               	xorlw	128	; case 128
 37426  012E94  B4D8               	btfsc	status,2,c
 37427  012E96  D7D7               	goto	i2l1749
 37428  012E98  0A40               	xorlw	64	; case 192
 37429  012E9A  B4D8               	btfsc	status,2,c
 37430  012E9C  D7B3               	goto	i2l1743
 37431  012E9E                     i2l1748:
 37432                           
 37433                           ; BSR set to: 0
 37434                           ;doprnt.c: 1339: if(c < prec)
 37435                           
 37436                           ; BSR set to: 0
 37437  012E9E  0E80               	movlw	128
 37438  012EA0  BFAF               	btfsc	i2printf@c& (0+255),7,b
 37439  012EA2  0E7F               	movlw	127
 37440  012EA4  6F8A               	movwf	??i2_printf& (0+255),b
 37441  012EA6  51AD               	movf	i2printf@prec& (0+255),w,b
 37442  012EA8  5DAF               	subwf	i2printf@c& (0+255),w,b
 37443  012EAA  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 37444  012EAC  0A80               	xorlw	128
 37445  012EAE  598A               	subwfb	??i2_printf& (0+255),w,b
 37446  012EB0  B0D8               	btfsc	status,0,c
 37447  012EB2  D003               	goto	i2l1753
 37448                           
 37449                           ; BSR set to: 0
 37450                           ;doprnt.c: 1340: c = prec;
 37451  012EB4  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 37452  012EB8  D010               	goto	i2l1755
 37453  012EBA                     i2l1753:
 37454                           
 37455                           ; BSR set to: 0
 37456                           ;doprnt.c: 1341: else if(prec < c)
 37457                           
 37458                           ; BSR set to: 0
 37459  012EBA  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 37460  012EBC  0A80               	xorlw	128
 37461  012EBE  6F8A               	movwf	??i2_printf& (0+255),b
 37462  012EC0  51AF               	movf	i2printf@c& (0+255),w,b
 37463  012EC2  5DAD               	subwf	i2printf@prec& (0+255),w,b
 37464  012EC4  0E80               	movlw	128
 37465  012EC6  BFAF               	btfsc	i2printf@c& (0+255),7,b
 37466  012EC8  0E7F               	movlw	127
 37467  012ECA  598A               	subwfb	??i2_printf& (0+255),w,b
 37468  012ECC  B0D8               	btfsc	status,0,c
 37469  012ECE  D005               	goto	i2l1755
 37470                           
 37471                           ; BSR set to: 0
 37472                           ;doprnt.c: 1342: prec = c;
 37473  012ED0  51AF               	movf	i2printf@c& (0+255),w,b
 37474  012ED2  6FAD               	movwf	i2printf@prec& (0+255),b
 37475  012ED4  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 37476  012ED6  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 37477  012ED8  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 37478  012EDA                     i2l1755:
 37479                           
 37480                           ; BSR set to: 0
 37481                           ;doprnt.c: 1345: if(width && flag & 0x03)
 37482                           
 37483                           ; BSR set to: 0
 37484                           
 37485                           ; BSR set to: 0
 37486  012EDA  51AB               	movf	i2printf@width& (0+255),w,b
 37487  012EDC  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 37488  012EDE  B4D8               	btfsc	status,2,c
 37489  012EE0  D00D               	goto	i2l1756
 37490                           
 37491                           ; BSR set to: 0
 37492  012EE2  0E03               	movlw	3
 37493  012EE4  15A9               	andwf	i2printf@flag& (0+255),w,b
 37494  012EE6  6F8A               	movwf	??i2_printf& (0+255),b
 37495  012EE8  0E00               	movlw	0
 37496  012EEA  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 37497  012EEC  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 37498  012EEE  518A               	movf	??i2_printf& (0+255),w,b
 37499  012EF0  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 37500  012EF2  B4D8               	btfsc	status,2,c
 37501  012EF4  D003               	goto	i2l1756
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;doprnt.c: 1346: width--;
 37505  012EF6  07AB               	decf	i2printf@width& (0+255),f,b
 37506  012EF8  A0D8               	btfss	status,0,c
 37507  012EFA  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 37508  012EFC                     i2l1756:
 37509                           
 37510                           ; BSR set to: 0
 37511                           ;doprnt.c: 1348: if(flag & 0x4000) {
 37512                           
 37513                           ; BSR set to: 0
 37514  012EFC  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 37515  012EFE  D013               	goto	i2l1759
 37516                           
 37517                           ; BSR set to: 0
 37518                           ;doprnt.c: 1349: if(width > prec)
 37519  012F00  51AB               	movf	i2printf@width& (0+255),w,b
 37520  012F02  5DAD               	subwf	i2printf@prec& (0+255),w,b
 37521  012F04  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 37522  012F06  0A80               	xorlw	128
 37523  012F08  6F8A               	movwf	??i2_printf& (0+255),b
 37524  012F0A  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 37525  012F0C  0A80               	xorlw	128
 37526  012F0E  598A               	subwfb	??i2_printf& (0+255),w,b
 37527  012F10  B0D8               	btfsc	status,0,c
 37528  012F12  D005               	goto	i2l1758
 37529                           
 37530                           ; BSR set to: 0
 37531                           ;doprnt.c: 1350: width -= prec;
 37532  012F14  51AD               	movf	i2printf@prec& (0+255),w,b
 37533  012F16  5FAB               	subwf	i2printf@width& (0+255),f,b
 37534  012F18  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 37535  012F1A  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 37536  012F1C  D004               	goto	i2l1759
 37537  012F1E                     i2l1758:
 37538                           
 37539                           ; BSR set to: 0
 37540                           ;doprnt.c: 1351: else
 37541                           ;doprnt.c: 1352: width = 0;
 37542                           
 37543                           ; BSR set to: 0
 37544  012F1E  0E00               	movlw	0
 37545  012F20  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 37546  012F22  0E00               	movlw	0
 37547  012F24  6FAB               	movwf	i2printf@width& (0+255),b
 37548  012F26                     i2l1759:
 37549                           
 37550                           ; BSR set to: 0
 37551                           ;doprnt.c: 1353: }
 37552                           ;doprnt.c: 1381: if(width > c)
 37553                           
 37554                           ; BSR set to: 0
 37555                           
 37556                           ; BSR set to: 0
 37557  012F26  0E80               	movlw	128
 37558  012F28  BFAF               	btfsc	i2printf@c& (0+255),7,b
 37559  012F2A  0E7F               	movlw	127
 37560  012F2C  6F8A               	movwf	??i2_printf& (0+255),b
 37561  012F2E  51AB               	movf	i2printf@width& (0+255),w,b
 37562  012F30  5DAF               	subwf	i2printf@c& (0+255),w,b
 37563  012F32  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 37564  012F34  0A80               	xorlw	128
 37565  012F36  598A               	subwfb	??i2_printf& (0+255),w,b
 37566  012F38  B0D8               	btfsc	status,0,c
 37567  012F3A  D007               	goto	i2l1760
 37568                           
 37569                           ; BSR set to: 0
 37570                           ;doprnt.c: 1382: width -= c;
 37571  012F3C  51AF               	movf	i2printf@c& (0+255),w,b
 37572  012F3E  5FAB               	subwf	i2printf@width& (0+255),f,b
 37573  012F40  0E00               	movlw	0
 37574  012F42  BFAF               	btfsc	i2printf@c& (0+255),7,b
 37575  012F44  0EFF               	movlw	255
 37576  012F46  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 37577  012F48  D004               	goto	i2l1761
 37578  012F4A                     i2l1760:
 37579                           
 37580                           ; BSR set to: 0
 37581                           ;doprnt.c: 1383: else
 37582                           ;doprnt.c: 1384: width = 0;
 37583                           
 37584                           ; BSR set to: 0
 37585  012F4A  0E00               	movlw	0
 37586  012F4C  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 37587  012F4E  0E00               	movlw	0
 37588  012F50  6FAB               	movwf	i2printf@width& (0+255),b
 37589  012F52                     i2l1761:
 37590                           
 37591                           ; BSR set to: 0
 37592                           ;doprnt.c: 1387: if(flag & 0x04) {
 37593                           
 37594                           ; BSR set to: 0
 37595  012F52  A5A9               	btfss	i2printf@flag& (0+255),2,b
 37596  012F54  D01A               	goto	i2l1762
 37597                           
 37598                           ; BSR set to: 0
 37599                           ;doprnt.c: 1392: if(flag & 0x03)
 37600  012F56  0E03               	movlw	3
 37601  012F58  15A9               	andwf	i2printf@flag& (0+255),w,b
 37602  012F5A  6F8A               	movwf	??i2_printf& (0+255),b
 37603  012F5C  0E00               	movlw	0
 37604  012F5E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 37605  012F60  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 37606  012F62  518A               	movf	??i2_printf& (0+255),w,b
 37607  012F64  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 37608  012F66  B4D8               	btfsc	status,2,c
 37609  012F68  D003               	goto	i2l1763
 37610                           
 37611                           ; BSR set to: 0
 37612                           ;doprnt.c: 1393: (putch('-') );
 37613  012F6A  0E2D               	movlw	45
 37614  012F6C  ECE4  F0CC         	call	i2_putch
 37615  012F70                     i2l1763:
 37616                           
 37617                           ;doprnt.c: 1415: if(width)
 37618  012F70  0100               	movlb	0	; () banked
 37619  012F72  51AB               	movf	i2printf@width& (0+255),w,b
 37620  012F74  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 37621  012F76  B4D8               	btfsc	status,2,c
 37622  012F78  D0B1               	goto	i2l1772
 37623                           
 37624                           ; BSR set to: 0
 37625                           ;doprnt.c: 1417: (putch('0') );
 37626                           
 37627                           ; BSR set to: 0
 37628                           
 37629                           ;doprnt.c: 1416: do
 37630  012F7A  0E30               	movlw	48
 37631  012F7C  ECE4  F0CC         	call	i2_putch
 37632                           
 37633                           ;doprnt.c: 1418: while(--width);
 37634  012F80  0100               	movlb	0	; () banked
 37635  012F82  07AB               	decf	i2printf@width& (0+255),f,b
 37636  012F84  A0D8               	btfss	status,0,c
 37637  012F86  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 37638  012F88  D7F4               	goto	L27
 37639  012F8A                     i2l1762:
 37640                           
 37641                           ; BSR set to: 0
 37642                           ;doprnt.c: 1422: {
 37643                           ;doprnt.c: 1424: if(width
 37644                           ;doprnt.c: 1428: )
 37645                           
 37646                           ; BSR set to: 0
 37647  012F8A  51AB               	movf	i2printf@width& (0+255),w,b
 37648  012F8C  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 37649  012F8E  B4D8               	btfsc	status,2,c
 37650  012F90  D00B               	goto	i2u1958_40
 37651  012F92                     i2u1957_40:
 37652                           
 37653                           ; BSR set to: 0
 37654                           ;doprnt.c: 1430: (putch(' ') );
 37655                           
 37656                           ; BSR set to: 0
 37657                           
 37658                           ;doprnt.c: 1429: do
 37659  012F92  0E20               	movlw	32
 37660  012F94  ECE4  F0CC         	call	i2_putch
 37661                           
 37662                           ;doprnt.c: 1431: while(--width);
 37663  012F98  0100               	movlb	0	; () banked
 37664  012F9A  07AB               	decf	i2printf@width& (0+255),f,b
 37665  012F9C  A0D8               	btfss	status,0,c
 37666  012F9E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 37667  012FA0  51AB               	movf	i2printf@width& (0+255),w,b
 37668  012FA2  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 37669  012FA4  A4D8               	btfss	status,2,c
 37670  012FA6  D7F5               	goto	i2u1957_40
 37671  012FA8                     i2u1958_40:
 37672                           
 37673                           ; BSR set to: 0
 37674                           ;doprnt.c: 1438: if(flag & 0x03)
 37675                           
 37676                           ; BSR set to: 0
 37677                           
 37678                           ; BSR set to: 0
 37679  012FA8  0E03               	movlw	3
 37680  012FAA  15A9               	andwf	i2printf@flag& (0+255),w,b
 37681  012FAC  6F8A               	movwf	??i2_printf& (0+255),b
 37682  012FAE  0E00               	movlw	0
 37683  012FB0  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 37684  012FB2  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 37685  012FB4  518A               	movf	??i2_printf& (0+255),w,b
 37686  012FB6  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 37687  012FB8  B4D8               	btfsc	status,2,c
 37688  012FBA  D090               	goto	i2l1772
 37689                           
 37690                           ; BSR set to: 0
 37691                           ;doprnt.c: 1439: (putch('-') );
 37692  012FBC  0E2D               	movlw	45
 37693  012FBE  ECE4  F0CC         	call	i2_putch
 37694                           
 37695                           ;doprnt.c: 1469: }
 37696                           ;doprnt.c: 1474: while(prec--) {
 37697  012FC2  D08C               	goto	i2l1772
 37698  012FC4                     
 37699                           ;doprnt.c: 1486: case 0xC0:
 37700                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 37701  012FC4  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 37702  012FC8  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 37703  012FCC  0100               	movlb	0	; () banked
 37704  012FCE  90D8               	bcf	status,0,c
 37705  012FD0  378A               	rlcf	??i2_printf& (0+255),f,b
 37706  012FD2  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 37707  012FD4  90D8               	bcf	status,0,c
 37708  012FD6  378A               	rlcf	??i2_printf& (0+255),f,b
 37709  012FD8  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 37710  012FDA  0EC7               	movlw	low _dpowers
 37711  012FDC  258A               	addwf	??i2_printf& (0+255),w,b
 37712  012FDE  6EF6               	movwf	tblptrl,c
 37713  012FE0  0ED4               	movlw	high _dpowers
 37714  012FE2  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 37715  012FE4  6EF7               	movwf	tblptrh,c
 37716  012FE6                     	if	1	;There are 3 active tblptr bytes
 37717  012FE6  6AF8               	clrf	tblptru,c
 37718  012FE8  0E00               	movlw	low (__mediumconst shr (0+16))
 37719  012FEA  22F8               	addwfc	tblptru,f,c
 37720  012FEC                     	endif
 37721  012FEC  0009               	tblrd		*+
 37722  012FEE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 37723  012FF2  0009               	tblrd		*+
 37724  012FF4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 37725  012FF8  0009               	tblrd		*+
 37726  012FFA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 37727  012FFE  000A               	tblrd		*-
 37728  013000  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 37729  013004  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 37730  013008  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 37731  01300C  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 37732  013010  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 37733  013014  ECDF  F0C3         	call	i2___lldiv	;wreg free
 37734  013018  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 37735  01301C  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 37736  013020  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 37737  013024  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 37738  013028  0E0A               	movlw	10
 37739  01302A  6E12               	movwf	i2___llmod@divisor,c
 37740  01302C  0E00               	movlw	0
 37741  01302E  6E13               	movwf	i2___llmod@divisor+1,c
 37742  013030  0E00               	movlw	0
 37743  013032  6E14               	movwf	i2___llmod@divisor+2,c
 37744  013034  0E00               	movlw	0
 37745  013036  6E15               	movwf	i2___llmod@divisor+3,c
 37746  013038  ECE0  F0C5         	call	i2___llmod	;wreg free
 37747  01303C  500E               	movf	?i2___llmod,w,c
 37748  01303E  0F30               	addlw	48
 37749  013040  0100               	movlb	0	; () banked
 37750  013042  6FAF               	movwf	i2printf@c& (0+255),b
 37751                           
 37752                           ;doprnt.c: 1491: break;
 37753  013044  D048               	goto	i2l1777
 37754  013046                     
 37755                           ; BSR set to: 0
 37756                           ;doprnt.c: 1499: {
 37757                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 37758                           
 37759                           ; BSR set to: 0
 37760  013046  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 37761  01304A  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 37762  01304E  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 37763  013052  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 37764  013056  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 37765  01305A  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 37766  01305E  90D8               	bcf	status,0,c
 37767  013060  378A               	rlcf	??i2_printf& (0+255),f,b
 37768  013062  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 37769  013064  90D8               	bcf	status,0,c
 37770  013066  378A               	rlcf	??i2_printf& (0+255),f,b
 37771  013068  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 37772  01306A  0EEF               	movlw	low _hexpowers
 37773  01306C  258A               	addwf	??i2_printf& (0+255),w,b
 37774  01306E  6EF6               	movwf	tblptrl,c
 37775  013070  0ED4               	movlw	high _hexpowers
 37776  013072  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 37777  013074  6EF7               	movwf	tblptrh,c
 37778  013076                     	if	1	;There are 3 active tblptr bytes
 37779  013076  6AF8               	clrf	tblptru,c
 37780  013078  0E00               	movlw	low (__mediumconst shr (0+16))
 37781  01307A  22F8               	addwfc	tblptru,f,c
 37782  01307C                     	endif
 37783  01307C  0009               	tblrd		*+
 37784  01307E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 37785  013082  0009               	tblrd		*+
 37786  013084  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 37787  013088  0009               	tblrd		*+
 37788  01308A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 37789  01308E  000A               	tblrd		*-
 37790  013090  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 37791  013094  ECDF  F0C3         	call	i2___lldiv	;wreg free
 37792  013098  5001               	movf	?i2___lldiv,w,c
 37793  01309A  0B0F               	andlw	15
 37794  01309C  0100               	movlb	0	; () banked
 37795  01309E  6F94               	movwf	i2printf@idx& (0+255),b
 37796                           
 37797                           ; BSR set to: 0
 37798                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 37799  0130A0  5194               	movf	i2printf@idx& (0+255),w,b
 37800  0130A2  0D01               	mullw	1
 37801  0130A4  0E42               	movlw	low STR_177
 37802  0130A6  24F3               	addwf	prodl,w,c
 37803  0130A8  6EF6               	movwf	tblptrl,c
 37804  0130AA  0EFD               	movlw	high STR_177
 37805  0130AC  20F4               	addwfc	prodh,w,c
 37806  0130AE  6EF7               	movwf	tblptrh,c
 37807  0130B0                     	if	1	;There are 3 active tblptr bytes
 37808  0130B0  6AF8               	clrf	tblptru,c
 37809  0130B2  0E00               	movlw	low (__mediumconst shr (0+16))
 37810  0130B4  22F8               	addwfc	tblptru,f,c
 37811  0130B6                     	endif
 37812  0130B6  0008               	tblrd		*
 37813  0130B8  CFF5 F0AF          	movff	tablat,i2printf@c
 37814                           
 37815                           ; BSR set to: 0
 37816                           ;doprnt.c: 1523: }
 37817                           
 37818                           ;doprnt.c: 1508: }
 37819                           ;doprnt.c: 1510: break;
 37820  0130BC  D00C               	goto	i2l1777
 37821  0130BE                     i2l15793:
 37822  0130BE  0100               	movlb	0	; () banked
 37823  0130C0  51A9               	movf	i2printf@flag& (0+255),w,b
 37824  0130C2  0BC0               	andlw	192
 37825                           
 37826                           ; Switch size 1, requested type "space"
 37827                           ; Number of cases is 3, Range of values is 0 to 192
 37828                           ; switch strategies available:
 37829                           ; Name         Instructions Cycles
 37830                           ; simple_byte           10     6 (average)
 37831                           ;	Chosen strategy is simple_byte
 37832  0130C4  0A00               	xorlw	0	; case 0
 37833  0130C6  B4D8               	btfsc	status,2,c
 37834  0130C8  D77D               	goto	i2l1775
 37835  0130CA  0A80               	xorlw	128	; case 128
 37836  0130CC  B4D8               	btfsc	status,2,c
 37837  0130CE  D7BB               	goto	i2l1778
 37838  0130D0  0A40               	xorlw	64	; case 192
 37839  0130D2  B4D8               	btfsc	status,2,c
 37840  0130D4  D777               	goto	i2l1775
 37841  0130D6                     i2l1777:
 37842                           
 37843                           ; BSR set to: 0
 37844                           ;doprnt.c: 1524: (putch(c) );
 37845                           
 37846                           ; BSR set to: 0
 37847  0130D6  51AF               	movf	i2printf@c& (0+255),w,b
 37848  0130D8  ECE4  F0CC         	call	i2_putch
 37849  0130DC                     i2l1772:
 37850  0130DC  0100               	movlb	0	; () banked
 37851  0130DE  07AD               	decf	i2printf@prec& (0+255),f,b
 37852  0130E0  A0D8               	btfss	status,0,c
 37853  0130E2  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 37854  0130E4  29AD               	incf	i2printf@prec& (0+255),w,b
 37855  0130E6  E1EB               	bnz	i2l15793
 37856  0130E8  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 37857  0130EA  A4D8               	btfss	status,2,c
 37858  0130EC  D7E8               	goto	i2l1774
 37859  0130EE                     i2u1960_40:
 37860                           
 37861                           ; BSR set to: 0
 37862                           
 37863                           ; BSR set to: 0
 37864  0130EE  0100               	movlb	0	; () banked
 37865  0130F0  5188               	movf	i2printf@f& (0+255),w,b
 37866  0130F2  6F8A               	movwf	??i2_printf& (0+255),b
 37867  0130F4  5189               	movf	(i2printf@f+1)& (0+255),w,b
 37868  0130F6  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 37869  0130F8  4B88               	infsnz	i2printf@f& (0+255),f,b
 37870  0130FA  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 37871  0130FC  C08A  FFF6         	movff	??i2_printf,tblptrl
 37872  013100  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 37873  013104  0E00               	movlw	low (__mediumconst shr (0+16))
 37874  013106  6EF8               	movwf	tblptru,c
 37875  013108  0E0D               	movlw	(high __ramtop+-1)
 37876  01310A  64F7               	cpfsgt	tblptrh,c
 37877  01310C  D003               	bra	i2u1961_47
 37878  01310E  0008               	tblrd		*
 37879  013110  50F5               	movf	tablat,w,c
 37880  013112  D005               	bra	i2u1961_40
 37881  013114                     i2u1961_47:
 37882  013114  CFF6 FFE9          	movff	tblptrl,fsr0l
 37883  013118  CFF7 FFEA          	movff	tblptrh,fsr0h
 37884  01311C  50EF               	movf	indf0,w,c
 37885  01311E                     i2u1961_40:
 37886  01311E  0100               	movlb	0	; () banked
 37887  013120  6FAF               	movwf	i2printf@c& (0+255),b
 37888  013122  51AF               	movf	i2printf@c& (0+255),w,b
 37889  013124  B4D8               	btfsc	status,2,c
 37890  013126  0012               	return	
 37891  013128  EFBB  F091         	goto	i2l1646
 37892  01312C                     __end_ofi2_printf:
 37893                           	opt stack 0
 37894                           tosu	equ	0xFFF
 37895                           tosh	equ	0xFFE
 37896                           tosl	equ	0xFFD
 37897                           pclatu	equ	0xFFB
 37898                           pclath	equ	0xFFA
 37899                           tblptru	equ	0xFF8
 37900                           tblptrh	equ	0xFF7
 37901                           tblptrl	equ	0xFF6
 37902                           tablat	equ	0xFF5
 37903                           prodh	equ	0xFF4
 37904                           prodl	equ	0xFF3
 37905                           intcon	equ	0xFF2
 37906                           indf0	equ	0xFEF
 37907                           postinc0	equ	0xFEE
 37908                           fsr0h	equ	0xFEA
 37909                           fsr0l	equ	0xFE9
 37910                           wreg	equ	0xFE8
 37911                           indf1	equ	0xFE7
 37912                           postdec1	equ	0xFE5
 37913                           plusw1	equ	0xFE3
 37914                           fsr1h	equ	0xFE2
 37915                           fsr1l	equ	0xFE1
 37916                           bsr	equ	0xFE0
 37917                           indf2	equ	0xFDF
 37918                           postinc2	equ	0xFDE
 37919                           postdec2	equ	0xFDD
 37920                           plusw2	equ	0xFDB
 37921                           fsr2h	equ	0xFDA
 37922                           fsr2l	equ	0xFD9
 37923                           status	equ	0xFD8
 37924                           
 37925 ;; *************** function i2_scale *****************
 37926 ;; Defined at:
 37927 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 37928 ;; Parameters:    Size  Location     Type
 37929 ;;  scl             1    wreg     char 
 37930 ;; Auto vars:     Size  Location     Type
 37931 ;;  scl             1   80[COMRAM] char 
 37932 ;; Return value:  Size  Location     Type
 37933 ;;                  4   72[COMRAM] char 
 37934 ;; Registers used:
 37935 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37936 ;; Tracked objects:
 37937 ;;		On entry : 0/0
 37938 ;;		On exit  : 0/0
 37939 ;;		Unchanged: 0/0
 37940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37942 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37944 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37945 ;;Total ram usage:        9 bytes
 37946 ;; Hardware stack levels used:    1
 37947 ;; Hardware stack levels required when called:    1
 37948 ;; This function calls:
 37949 ;;		i2___awdiv
 37950 ;;		i2___awmod
 37951 ;;		i2___flmul
 37952 ;; This function is called by:
 37953 ;;		i2_printf
 37954 ;; This function uses a non-reentrant model
 37955 ;;
 37956                           
 37957                           	psect	text112
 37958  0140AA                     __ptext112:
 37959                           	opt stack 0
 37960  0140AA                     i2_scale:
 37961                           	opt stack 15
 37962                           
 37963                           ; BSR set to: 0
 37964                           ;incstack = 0
 37965                           ;i2scale@scl stored from wreg
 37966  0140AA  6E51               	movwf	i2scale@scl,c
 37967                           
 37968                           ;doprnt.c: 428: if(scl < 0) {
 37969  0140AC  AE51               	btfss	i2scale@scl,7,c
 37970  0140AE  D11F               	goto	i2l1635
 37971                           
 37972                           ;doprnt.c: 429: scl = -scl;
 37973  0140B0  6C51               	negf	i2scale@scl,c
 37974                           
 37975                           ;doprnt.c: 430: if(scl>=110)
 37976  0140B2  5051               	movf	i2scale@scl,w,c
 37977  0140B4  0A80               	xorlw	128
 37978  0140B6  0F12               	addlw	-238
 37979  0140B8  A0D8               	btfss	status,0,c
 37980  0140BA  D0A1               	goto	i2l1636
 37981                           
 37982                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 37983  0140BC  0E00               	movlw	0
 37984  0140BE  6E0A               	movwf	i2___awdiv@divisor+1,c
 37985  0140C0  0E0A               	movlw	10
 37986  0140C2  6E09               	movwf	i2___awdiv@divisor,c
 37987  0140C4  0E00               	movlw	0
 37988  0140C6  6E04               	movwf	i2___awmod@divisor+1,c
 37989  0140C8  0E64               	movlw	100
 37990  0140CA  6E03               	movwf	i2___awmod@divisor,c
 37991  0140CC  5051               	movf	i2scale@scl,w,c
 37992  0140CE  6E01               	movwf	i2___awmod@dividend,c
 37993  0140D0  6A02               	clrf	i2___awmod@dividend+1,c
 37994  0140D2  BE01               	btfsc	i2___awmod@dividend,7,c
 37995  0140D4  0602               	decf	i2___awmod@dividend+1,f,c
 37996  0140D6  ECD4  F0C4         	call	i2___awmod	;wreg free
 37997  0140DA  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 37998  0140DE  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 37999  0140E2  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38000  0140E6  90D8               	bcf	status,0,c
 38001  0140E8  3607               	rlcf	?i2___awdiv,f,c
 38002  0140EA  3608               	rlcf	?i2___awdiv+1,f,c
 38003  0140EC  90D8               	bcf	status,0,c
 38004  0140EE  3607               	rlcf	?i2___awdiv,f,c
 38005  0140F0  3608               	rlcf	?i2___awdiv+1,f,c
 38006  0140F2  0E24               	movlw	36
 38007  0140F4  2607               	addwf	?i2___awdiv,f,c
 38008  0140F6  0E00               	movlw	0
 38009  0140F8  2208               	addwfc	?i2___awdiv+1,f,c
 38010  0140FA  0E93               	movlw	low __npowers_
 38011  0140FC  2407               	addwf	?i2___awdiv,w,c
 38012  0140FE  6EF6               	movwf	tblptrl,c
 38013  014100  0ED4               	movlw	high __npowers_
 38014  014102  2008               	addwfc	?i2___awdiv+1,w,c
 38015  014104  6EF7               	movwf	tblptrh,c
 38016  014106                     	if	1	;There are 3 active tblptr bytes
 38017  014106  6AF8               	clrf	tblptru,c
 38018  014108  0E00               	movlw	low (__mediumconst shr (0+16))
 38019  01410A  22F8               	addwfc	tblptru,f,c
 38020  01410C                     	endif
 38021  01410C  0009               	tblrd		*+
 38022  01410E  CFF5 F034          	movff	tablat,i2___flmul@a
 38023  014112  0009               	tblrd		*+
 38024  014114  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38025  014118  0009               	tblrd		*+
 38026  01411A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38027  01411E  000A               	tblrd		*-
 38028  014120  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38029  014124  0E00               	movlw	0
 38030  014126  6E0A               	movwf	i2___awdiv@divisor+1,c
 38031  014128  0E64               	movlw	100
 38032  01412A  6E09               	movwf	i2___awdiv@divisor,c
 38033  01412C  5051               	movf	i2scale@scl,w,c
 38034  01412E  6E07               	movwf	i2___awdiv@dividend,c
 38035  014130  6A08               	clrf	i2___awdiv@dividend+1,c
 38036  014132  BE07               	btfsc	i2___awdiv@dividend,7,c
 38037  014134  0608               	decf	i2___awdiv@dividend+1,f,c
 38038  014136  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38039  01413A  90D8               	bcf	status,0,c
 38040  01413C  3607               	rlcf	?i2___awdiv,f,c
 38041  01413E  3608               	rlcf	?i2___awdiv+1,f,c
 38042  014140  90D8               	bcf	status,0,c
 38043  014142  3607               	rlcf	?i2___awdiv,f,c
 38044  014144  3608               	rlcf	?i2___awdiv+1,f,c
 38045  014146  0E48               	movlw	72
 38046  014148  2607               	addwf	?i2___awdiv,f,c
 38047  01414A  0E00               	movlw	0
 38048  01414C  2208               	addwfc	?i2___awdiv+1,f,c
 38049  01414E  0E93               	movlw	low __npowers_
 38050  014150  2407               	addwf	?i2___awdiv,w,c
 38051  014152  6EF6               	movwf	tblptrl,c
 38052  014154  0ED4               	movlw	high __npowers_
 38053  014156  2008               	addwfc	?i2___awdiv+1,w,c
 38054  014158  6EF7               	movwf	tblptrh,c
 38055  01415A                     	if	1	;There are 3 active tblptr bytes
 38056  01415A  6AF8               	clrf	tblptru,c
 38057  01415C  0E00               	movlw	low (__mediumconst shr (0+16))
 38058  01415E  22F8               	addwfc	tblptru,f,c
 38059  014160                     	endif
 38060  014160  0009               	tblrd		*+
 38061  014162  CFF5 F030          	movff	tablat,i2___flmul@b
 38062  014166  0009               	tblrd		*+
 38063  014168  CFF5 F031          	movff	tablat,i2___flmul@b+1
 38064  01416C  0009               	tblrd		*+
 38065  01416E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 38066  014172  000A               	tblrd		*-
 38067  014174  CFF5 F033          	movff	tablat,i2___flmul@b+3
 38068  014178  ECF2  F0A5         	call	i2___flmul	;wreg free
 38069  01417C  C030  F04D         	movff	?i2___flmul,i2_scale$4737
 38070  014180  C031  F04E         	movff	?i2___flmul+1,i2_scale$4737+1
 38071  014184  C032  F04F         	movff	?i2___flmul+2,i2_scale$4737+2
 38072  014188  C033  F050         	movff	?i2___flmul+3,i2_scale$4737+3
 38073                           
 38074                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 38075  01418C  C04D  F030         	movff	i2_scale$4737,i2___flmul@b
 38076  014190  C04E  F031         	movff	i2_scale$4737+1,i2___flmul@b+1
 38077  014194  C04F  F032         	movff	i2_scale$4737+2,i2___flmul@b+2
 38078  014198  C050  F033         	movff	i2_scale$4737+3,i2___flmul@b+3
 38079  01419C  0E00               	movlw	0
 38080  01419E  6E04               	movwf	i2___awmod@divisor+1,c
 38081  0141A0  0E0A               	movlw	10
 38082  0141A2  6E03               	movwf	i2___awmod@divisor,c
 38083  0141A4  5051               	movf	i2scale@scl,w,c
 38084  0141A6  6E01               	movwf	i2___awmod@dividend,c
 38085  0141A8  6A02               	clrf	i2___awmod@dividend+1,c
 38086  0141AA  BE01               	btfsc	i2___awmod@dividend,7,c
 38087  0141AC  0602               	decf	i2___awmod@dividend+1,f,c
 38088  0141AE  ECD4  F0C4         	call	i2___awmod	;wreg free
 38089  0141B2  90D8               	bcf	status,0,c
 38090  0141B4  3601               	rlcf	?i2___awmod,f,c
 38091  0141B6  3602               	rlcf	?i2___awmod+1,f,c
 38092  0141B8  90D8               	bcf	status,0,c
 38093  0141BA  3601               	rlcf	?i2___awmod,f,c
 38094  0141BC  3602               	rlcf	?i2___awmod+1,f,c
 38095  0141BE  0E93               	movlw	low __npowers_
 38096  0141C0  2401               	addwf	?i2___awmod,w,c
 38097  0141C2  6EF6               	movwf	tblptrl,c
 38098  0141C4  0ED4               	movlw	high __npowers_
 38099  0141C6  2002               	addwfc	?i2___awmod+1,w,c
 38100  0141C8  6EF7               	movwf	tblptrh,c
 38101  0141CA                     	if	1	;There are 3 active tblptr bytes
 38102  0141CA  6AF8               	clrf	tblptru,c
 38103  0141CC  0E00               	movlw	low (__mediumconst shr (0+16))
 38104  0141CE  22F8               	addwfc	tblptru,f,c
 38105  0141D0                     	endif
 38106  0141D0  0009               	tblrd		*+
 38107  0141D2  CFF5 F034          	movff	tablat,i2___flmul@a
 38108  0141D6  0009               	tblrd		*+
 38109  0141D8  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38110  0141DC  0009               	tblrd		*+
 38111  0141DE  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38112  0141E2  000A               	tblrd		*-
 38113  0141E4  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38114  0141E8  ECF2  F0A5         	call	i2___flmul	;wreg free
 38115  0141EC  C030  F049         	movff	?i2___flmul,?i2_scale
 38116  0141F0  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 38117  0141F4  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 38118  0141F8  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 38119  0141FC  0012               	return	
 38120  0141FE                     i2l1636:
 38121                           
 38122                           ;doprnt.c: 432: else if(scl > 10)
 38123  0141FE  5051               	movf	i2scale@scl,w,c
 38124  014200  0A80               	xorlw	128
 38125  014202  0F75               	addlw	-139
 38126  014204  A0D8               	btfss	status,0,c
 38127  014206  D05B               	goto	i2l1639
 38128                           
 38129                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 38130  014208  0E00               	movlw	0
 38131  01420A  6E0A               	movwf	i2___awdiv@divisor+1,c
 38132  01420C  0E0A               	movlw	10
 38133  01420E  6E09               	movwf	i2___awdiv@divisor,c
 38134  014210  5051               	movf	i2scale@scl,w,c
 38135  014212  6E07               	movwf	i2___awdiv@dividend,c
 38136  014214  6A08               	clrf	i2___awdiv@dividend+1,c
 38137  014216  BE07               	btfsc	i2___awdiv@dividend,7,c
 38138  014218  0608               	decf	i2___awdiv@dividend+1,f,c
 38139  01421A  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38140  01421E  90D8               	bcf	status,0,c
 38141  014220  3607               	rlcf	?i2___awdiv,f,c
 38142  014222  3608               	rlcf	?i2___awdiv+1,f,c
 38143  014224  90D8               	bcf	status,0,c
 38144  014226  3607               	rlcf	?i2___awdiv,f,c
 38145  014228  3608               	rlcf	?i2___awdiv+1,f,c
 38146  01422A  0E24               	movlw	36
 38147  01422C  2607               	addwf	?i2___awdiv,f,c
 38148  01422E  0E00               	movlw	0
 38149  014230  2208               	addwfc	?i2___awdiv+1,f,c
 38150  014232  0E93               	movlw	low __npowers_
 38151  014234  2407               	addwf	?i2___awdiv,w,c
 38152  014236  6EF6               	movwf	tblptrl,c
 38153  014238  0ED4               	movlw	high __npowers_
 38154  01423A  2008               	addwfc	?i2___awdiv+1,w,c
 38155  01423C  6EF7               	movwf	tblptrh,c
 38156  01423E                     	if	1	;There are 3 active tblptr bytes
 38157  01423E  6AF8               	clrf	tblptru,c
 38158  014240  0E00               	movlw	low (__mediumconst shr (0+16))
 38159  014242  22F8               	addwfc	tblptru,f,c
 38160  014244                     	endif
 38161  014244  0009               	tblrd		*+
 38162  014246  CFF5 F030          	movff	tablat,i2___flmul@b
 38163  01424A  0009               	tblrd		*+
 38164  01424C  CFF5 F031          	movff	tablat,i2___flmul@b+1
 38165  014250  0009               	tblrd		*+
 38166  014252  CFF5 F032          	movff	tablat,i2___flmul@b+2
 38167  014256  000A               	tblrd		*-
 38168  014258  CFF5 F033          	movff	tablat,i2___flmul@b+3
 38169  01425C  0E00               	movlw	0
 38170  01425E  6E04               	movwf	i2___awmod@divisor+1,c
 38171  014260  0E0A               	movlw	10
 38172  014262  6E03               	movwf	i2___awmod@divisor,c
 38173  014264  5051               	movf	i2scale@scl,w,c
 38174  014266  6E01               	movwf	i2___awmod@dividend,c
 38175  014268  6A02               	clrf	i2___awmod@dividend+1,c
 38176  01426A  BE01               	btfsc	i2___awmod@dividend,7,c
 38177  01426C  0602               	decf	i2___awmod@dividend+1,f,c
 38178  01426E  ECD4  F0C4         	call	i2___awmod	;wreg free
 38179  014272  90D8               	bcf	status,0,c
 38180  014274  3601               	rlcf	?i2___awmod,f,c
 38181  014276  3602               	rlcf	?i2___awmod+1,f,c
 38182  014278  90D8               	bcf	status,0,c
 38183  01427A  3601               	rlcf	?i2___awmod,f,c
 38184  01427C  3602               	rlcf	?i2___awmod+1,f,c
 38185  01427E  0E93               	movlw	low __npowers_
 38186  014280  2401               	addwf	?i2___awmod,w,c
 38187  014282  6EF6               	movwf	tblptrl,c
 38188  014284  0ED4               	movlw	high __npowers_
 38189  014286  2002               	addwfc	?i2___awmod+1,w,c
 38190  014288  6EF7               	movwf	tblptrh,c
 38191  01428A                     	if	1	;There are 3 active tblptr bytes
 38192  01428A  6AF8               	clrf	tblptru,c
 38193  01428C  0E00               	movlw	low (__mediumconst shr (0+16))
 38194  01428E  22F8               	addwfc	tblptru,f,c
 38195  014290                     	endif
 38196  014290  0009               	tblrd		*+
 38197  014292  CFF5 F034          	movff	tablat,i2___flmul@a
 38198  014296  0009               	tblrd		*+
 38199  014298  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38200  01429C  0009               	tblrd		*+
 38201  01429E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38202  0142A2  000A               	tblrd		*-
 38203  0142A4  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38204  0142A8  ECF2  F0A5         	call	i2___flmul	;wreg free
 38205  0142AC  C030  F049         	movff	?i2___flmul,?i2_scale
 38206  0142B0  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 38207  0142B4  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 38208  0142B8  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 38209  0142BC  0012               	return	
 38210  0142BE                     i2l1639:
 38211                           
 38212                           ;doprnt.c: 434: return _npowers_[scl];
 38213  0142BE  5051               	movf	i2scale@scl,w,c
 38214  0142C0  0D04               	mullw	4
 38215  0142C2  0E93               	movlw	low __npowers_
 38216  0142C4  24F3               	addwf	prodl,w,c
 38217  0142C6  6EF6               	movwf	tblptrl,c
 38218  0142C8  0ED4               	movlw	high __npowers_
 38219  0142CA  20F4               	addwfc	prodh,w,c
 38220  0142CC  6EF7               	movwf	tblptrh,c
 38221  0142CE                     	if	1	;There are 3 active tblptr bytes
 38222  0142CE  6AF8               	clrf	tblptru,c
 38223  0142D0  0E00               	movlw	low (__mediumconst shr (0+16))
 38224  0142D2  22F8               	addwfc	tblptru,f,c
 38225  0142D4                     	endif
 38226  0142D4  0009               	tblrd		*+
 38227  0142D6  CFF5 F049          	movff	tablat,?i2_scale
 38228  0142DA  0009               	tblrd		*+
 38229  0142DC  CFF5 F04A          	movff	tablat,?i2_scale+1
 38230  0142E0  0009               	tblrd		*+
 38231  0142E2  CFF5 F04B          	movff	tablat,?i2_scale+2
 38232  0142E6  000A               	tblrd		*-
 38233  0142E8  CFF5 F04C          	movff	tablat,?i2_scale+3
 38234  0142EC  0012               	return	
 38235  0142EE                     i2l1635:
 38236                           
 38237                           ;doprnt.c: 435: }
 38238                           ;doprnt.c: 436: if(scl>=110)
 38239  0142EE  5051               	movf	i2scale@scl,w,c
 38240  0142F0  0A80               	xorlw	128
 38241  0142F2  0F12               	addlw	-238
 38242  0142F4  A0D8               	btfss	status,0,c
 38243  0142F6  D0A1               	goto	i2l1640
 38244                           
 38245                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 38246  0142F8  0E00               	movlw	0
 38247  0142FA  6E0A               	movwf	i2___awdiv@divisor+1,c
 38248  0142FC  0E0A               	movlw	10
 38249  0142FE  6E09               	movwf	i2___awdiv@divisor,c
 38250  014300  0E00               	movlw	0
 38251  014302  6E04               	movwf	i2___awmod@divisor+1,c
 38252  014304  0E64               	movlw	100
 38253  014306  6E03               	movwf	i2___awmod@divisor,c
 38254  014308  5051               	movf	i2scale@scl,w,c
 38255  01430A  6E01               	movwf	i2___awmod@dividend,c
 38256  01430C  6A02               	clrf	i2___awmod@dividend+1,c
 38257  01430E  BE01               	btfsc	i2___awmod@dividend,7,c
 38258  014310  0602               	decf	i2___awmod@dividend+1,f,c
 38259  014312  ECD4  F0C4         	call	i2___awmod	;wreg free
 38260  014316  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 38261  01431A  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 38262  01431E  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38263  014322  90D8               	bcf	status,0,c
 38264  014324  3607               	rlcf	?i2___awdiv,f,c
 38265  014326  3608               	rlcf	?i2___awdiv+1,f,c
 38266  014328  90D8               	bcf	status,0,c
 38267  01432A  3607               	rlcf	?i2___awdiv,f,c
 38268  01432C  3608               	rlcf	?i2___awdiv+1,f,c
 38269  01432E  0E24               	movlw	36
 38270  014330  2607               	addwf	?i2___awdiv,f,c
 38271  014332  0E00               	movlw	0
 38272  014334  2208               	addwfc	?i2___awdiv+1,f,c
 38273  014336  0E5F               	movlw	low __powers_
 38274  014338  2407               	addwf	?i2___awdiv,w,c
 38275  01433A  6EF6               	movwf	tblptrl,c
 38276  01433C  0ED4               	movlw	high __powers_
 38277  01433E  2008               	addwfc	?i2___awdiv+1,w,c
 38278  014340  6EF7               	movwf	tblptrh,c
 38279  014342                     	if	1	;There are 3 active tblptr bytes
 38280  014342  6AF8               	clrf	tblptru,c
 38281  014344  0E00               	movlw	low (__mediumconst shr (0+16))
 38282  014346  22F8               	addwfc	tblptru,f,c
 38283  014348                     	endif
 38284  014348  0009               	tblrd		*+
 38285  01434A  CFF5 F034          	movff	tablat,i2___flmul@a
 38286  01434E  0009               	tblrd		*+
 38287  014350  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38288  014354  0009               	tblrd		*+
 38289  014356  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38290  01435A  000A               	tblrd		*-
 38291  01435C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38292  014360  0E00               	movlw	0
 38293  014362  6E0A               	movwf	i2___awdiv@divisor+1,c
 38294  014364  0E64               	movlw	100
 38295  014366  6E09               	movwf	i2___awdiv@divisor,c
 38296  014368  5051               	movf	i2scale@scl,w,c
 38297  01436A  6E07               	movwf	i2___awdiv@dividend,c
 38298  01436C  6A08               	clrf	i2___awdiv@dividend+1,c
 38299  01436E  BE07               	btfsc	i2___awdiv@dividend,7,c
 38300  014370  0608               	decf	i2___awdiv@dividend+1,f,c
 38301  014372  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38302  014376  90D8               	bcf	status,0,c
 38303  014378  3607               	rlcf	?i2___awdiv,f,c
 38304  01437A  3608               	rlcf	?i2___awdiv+1,f,c
 38305  01437C  90D8               	bcf	status,0,c
 38306  01437E  3607               	rlcf	?i2___awdiv,f,c
 38307  014380  3608               	rlcf	?i2___awdiv+1,f,c
 38308  014382  0E48               	movlw	72
 38309  014384  2607               	addwf	?i2___awdiv,f,c
 38310  014386  0E00               	movlw	0
 38311  014388  2208               	addwfc	?i2___awdiv+1,f,c
 38312  01438A  0E5F               	movlw	low __powers_
 38313  01438C  2407               	addwf	?i2___awdiv,w,c
 38314  01438E  6EF6               	movwf	tblptrl,c
 38315  014390  0ED4               	movlw	high __powers_
 38316  014392  2008               	addwfc	?i2___awdiv+1,w,c
 38317  014394  6EF7               	movwf	tblptrh,c
 38318  014396                     	if	1	;There are 3 active tblptr bytes
 38319  014396  6AF8               	clrf	tblptru,c
 38320  014398  0E00               	movlw	low (__mediumconst shr (0+16))
 38321  01439A  22F8               	addwfc	tblptru,f,c
 38322  01439C                     	endif
 38323  01439C  0009               	tblrd		*+
 38324  01439E  CFF5 F030          	movff	tablat,i2___flmul@b
 38325  0143A2  0009               	tblrd		*+
 38326  0143A4  CFF5 F031          	movff	tablat,i2___flmul@b+1
 38327  0143A8  0009               	tblrd		*+
 38328  0143AA  CFF5 F032          	movff	tablat,i2___flmul@b+2
 38329  0143AE  000A               	tblrd		*-
 38330  0143B0  CFF5 F033          	movff	tablat,i2___flmul@b+3
 38331  0143B4  ECF2  F0A5         	call	i2___flmul	;wreg free
 38332  0143B8  C030  F04D         	movff	?i2___flmul,i2_scale$4737
 38333  0143BC  C031  F04E         	movff	?i2___flmul+1,i2_scale$4737+1
 38334  0143C0  C032  F04F         	movff	?i2___flmul+2,i2_scale$4737+2
 38335  0143C4  C033  F050         	movff	?i2___flmul+3,i2_scale$4737+3
 38336                           
 38337                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 38338  0143C8  C04D  F030         	movff	i2_scale$4737,i2___flmul@b
 38339  0143CC  C04E  F031         	movff	i2_scale$4737+1,i2___flmul@b+1
 38340  0143D0  C04F  F032         	movff	i2_scale$4737+2,i2___flmul@b+2
 38341  0143D4  C050  F033         	movff	i2_scale$4737+3,i2___flmul@b+3
 38342  0143D8  0E00               	movlw	0
 38343  0143DA  6E04               	movwf	i2___awmod@divisor+1,c
 38344  0143DC  0E0A               	movlw	10
 38345  0143DE  6E03               	movwf	i2___awmod@divisor,c
 38346  0143E0  5051               	movf	i2scale@scl,w,c
 38347  0143E2  6E01               	movwf	i2___awmod@dividend,c
 38348  0143E4  6A02               	clrf	i2___awmod@dividend+1,c
 38349  0143E6  BE01               	btfsc	i2___awmod@dividend,7,c
 38350  0143E8  0602               	decf	i2___awmod@dividend+1,f,c
 38351  0143EA  ECD4  F0C4         	call	i2___awmod	;wreg free
 38352  0143EE  90D8               	bcf	status,0,c
 38353  0143F0  3601               	rlcf	?i2___awmod,f,c
 38354  0143F2  3602               	rlcf	?i2___awmod+1,f,c
 38355  0143F4  90D8               	bcf	status,0,c
 38356  0143F6  3601               	rlcf	?i2___awmod,f,c
 38357  0143F8  3602               	rlcf	?i2___awmod+1,f,c
 38358  0143FA  0E5F               	movlw	low __powers_
 38359  0143FC  2401               	addwf	?i2___awmod,w,c
 38360  0143FE  6EF6               	movwf	tblptrl,c
 38361  014400  0ED4               	movlw	high __powers_
 38362  014402  2002               	addwfc	?i2___awmod+1,w,c
 38363  014404  6EF7               	movwf	tblptrh,c
 38364  014406                     	if	1	;There are 3 active tblptr bytes
 38365  014406  6AF8               	clrf	tblptru,c
 38366  014408  0E00               	movlw	low (__mediumconst shr (0+16))
 38367  01440A  22F8               	addwfc	tblptru,f,c
 38368  01440C                     	endif
 38369  01440C  0009               	tblrd		*+
 38370  01440E  CFF5 F034          	movff	tablat,i2___flmul@a
 38371  014412  0009               	tblrd		*+
 38372  014414  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38373  014418  0009               	tblrd		*+
 38374  01441A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38375  01441E  000A               	tblrd		*-
 38376  014420  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38377  014424  ECF2  F0A5         	call	i2___flmul	;wreg free
 38378  014428  C030  F049         	movff	?i2___flmul,?i2_scale
 38379  01442C  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 38380  014430  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 38381  014434  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 38382  014438  0012               	return	
 38383  01443A                     i2l1640:
 38384                           
 38385                           ;doprnt.c: 438: else if(scl > 10)
 38386  01443A  5051               	movf	i2scale@scl,w,c
 38387  01443C  0A80               	xorlw	128
 38388  01443E  0F75               	addlw	-139
 38389  014440  A0D8               	btfss	status,0,c
 38390  014442  D05B               	goto	i2l1642
 38391                           
 38392                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 38393  014444  0E00               	movlw	0
 38394  014446  6E0A               	movwf	i2___awdiv@divisor+1,c
 38395  014448  0E0A               	movlw	10
 38396  01444A  6E09               	movwf	i2___awdiv@divisor,c
 38397  01444C  5051               	movf	i2scale@scl,w,c
 38398  01444E  6E07               	movwf	i2___awdiv@dividend,c
 38399  014450  6A08               	clrf	i2___awdiv@dividend+1,c
 38400  014452  BE07               	btfsc	i2___awdiv@dividend,7,c
 38401  014454  0608               	decf	i2___awdiv@dividend+1,f,c
 38402  014456  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38403  01445A  90D8               	bcf	status,0,c
 38404  01445C  3607               	rlcf	?i2___awdiv,f,c
 38405  01445E  3608               	rlcf	?i2___awdiv+1,f,c
 38406  014460  90D8               	bcf	status,0,c
 38407  014462  3607               	rlcf	?i2___awdiv,f,c
 38408  014464  3608               	rlcf	?i2___awdiv+1,f,c
 38409  014466  0E24               	movlw	36
 38410  014468  2607               	addwf	?i2___awdiv,f,c
 38411  01446A  0E00               	movlw	0
 38412  01446C  2208               	addwfc	?i2___awdiv+1,f,c
 38413  01446E  0E5F               	movlw	low __powers_
 38414  014470  2407               	addwf	?i2___awdiv,w,c
 38415  014472  6EF6               	movwf	tblptrl,c
 38416  014474  0ED4               	movlw	high __powers_
 38417  014476  2008               	addwfc	?i2___awdiv+1,w,c
 38418  014478  6EF7               	movwf	tblptrh,c
 38419  01447A                     	if	1	;There are 3 active tblptr bytes
 38420  01447A  6AF8               	clrf	tblptru,c
 38421  01447C  0E00               	movlw	low (__mediumconst shr (0+16))
 38422  01447E  22F8               	addwfc	tblptru,f,c
 38423  014480                     	endif
 38424  014480  0009               	tblrd		*+
 38425  014482  CFF5 F030          	movff	tablat,i2___flmul@b
 38426  014486  0009               	tblrd		*+
 38427  014488  CFF5 F031          	movff	tablat,i2___flmul@b+1
 38428  01448C  0009               	tblrd		*+
 38429  01448E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 38430  014492  000A               	tblrd		*-
 38431  014494  CFF5 F033          	movff	tablat,i2___flmul@b+3
 38432  014498  0E00               	movlw	0
 38433  01449A  6E04               	movwf	i2___awmod@divisor+1,c
 38434  01449C  0E0A               	movlw	10
 38435  01449E  6E03               	movwf	i2___awmod@divisor,c
 38436  0144A0  5051               	movf	i2scale@scl,w,c
 38437  0144A2  6E01               	movwf	i2___awmod@dividend,c
 38438  0144A4  6A02               	clrf	i2___awmod@dividend+1,c
 38439  0144A6  BE01               	btfsc	i2___awmod@dividend,7,c
 38440  0144A8  0602               	decf	i2___awmod@dividend+1,f,c
 38441  0144AA  ECD4  F0C4         	call	i2___awmod	;wreg free
 38442  0144AE  90D8               	bcf	status,0,c
 38443  0144B0  3601               	rlcf	?i2___awmod,f,c
 38444  0144B2  3602               	rlcf	?i2___awmod+1,f,c
 38445  0144B4  90D8               	bcf	status,0,c
 38446  0144B6  3601               	rlcf	?i2___awmod,f,c
 38447  0144B8  3602               	rlcf	?i2___awmod+1,f,c
 38448  0144BA  0E5F               	movlw	low __powers_
 38449  0144BC  2401               	addwf	?i2___awmod,w,c
 38450  0144BE  6EF6               	movwf	tblptrl,c
 38451  0144C0  0ED4               	movlw	high __powers_
 38452  0144C2  2002               	addwfc	?i2___awmod+1,w,c
 38453  0144C4  6EF7               	movwf	tblptrh,c
 38454  0144C6                     	if	1	;There are 3 active tblptr bytes
 38455  0144C6  6AF8               	clrf	tblptru,c
 38456  0144C8  0E00               	movlw	low (__mediumconst shr (0+16))
 38457  0144CA  22F8               	addwfc	tblptru,f,c
 38458  0144CC                     	endif
 38459  0144CC  0009               	tblrd		*+
 38460  0144CE  CFF5 F034          	movff	tablat,i2___flmul@a
 38461  0144D2  0009               	tblrd		*+
 38462  0144D4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38463  0144D8  0009               	tblrd		*+
 38464  0144DA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38465  0144DE  000A               	tblrd		*-
 38466  0144E0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38467  0144E4  ECF2  F0A5         	call	i2___flmul	;wreg free
 38468  0144E8  C030  F049         	movff	?i2___flmul,?i2_scale
 38469  0144EC  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 38470  0144F0  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 38471  0144F4  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 38472  0144F8  0012               	return	
 38473  0144FA                     i2l1642:
 38474                           
 38475                           ;doprnt.c: 440: return _powers_[scl];
 38476  0144FA  5051               	movf	i2scale@scl,w,c
 38477  0144FC  0D04               	mullw	4
 38478  0144FE  0E5F               	movlw	low __powers_
 38479  014500  24F3               	addwf	prodl,w,c
 38480  014502  6EF6               	movwf	tblptrl,c
 38481  014504  0ED4               	movlw	high __powers_
 38482  014506  20F4               	addwfc	prodh,w,c
 38483  014508  6EF7               	movwf	tblptrh,c
 38484  01450A                     	if	1	;There are 3 active tblptr bytes
 38485  01450A  6AF8               	clrf	tblptru,c
 38486  01450C  0E00               	movlw	low (__mediumconst shr (0+16))
 38487  01450E  22F8               	addwfc	tblptru,f,c
 38488  014510                     	endif
 38489  014510  0009               	tblrd		*+
 38490  014512  CFF5 F049          	movff	tablat,?i2_scale
 38491  014516  0009               	tblrd		*+
 38492  014518  CFF5 F04A          	movff	tablat,?i2_scale+1
 38493  01451C  0009               	tblrd		*+
 38494  01451E  CFF5 F04B          	movff	tablat,?i2_scale+2
 38495  014522  000A               	tblrd		*-
 38496  014524  CFF5 F04C          	movff	tablat,?i2_scale+3
 38497  014528  0012               	return	
 38498  01452A                     __end_ofi2_scale:
 38499                           	opt stack 0
 38500                           tosu	equ	0xFFF
 38501                           tosh	equ	0xFFE
 38502                           tosl	equ	0xFFD
 38503                           pclatu	equ	0xFFB
 38504                           pclath	equ	0xFFA
 38505                           tblptru	equ	0xFF8
 38506                           tblptrh	equ	0xFF7
 38507                           tblptrl	equ	0xFF6
 38508                           tablat	equ	0xFF5
 38509                           prodh	equ	0xFF4
 38510                           prodl	equ	0xFF3
 38511                           intcon	equ	0xFF2
 38512                           indf0	equ	0xFEF
 38513                           postinc0	equ	0xFEE
 38514                           fsr0h	equ	0xFEA
 38515                           fsr0l	equ	0xFE9
 38516                           wreg	equ	0xFE8
 38517                           indf1	equ	0xFE7
 38518                           postdec1	equ	0xFE5
 38519                           plusw1	equ	0xFE3
 38520                           fsr1h	equ	0xFE2
 38521                           fsr1l	equ	0xFE1
 38522                           bsr	equ	0xFE0
 38523                           indf2	equ	0xFDF
 38524                           postinc2	equ	0xFDE
 38525                           postdec2	equ	0xFDD
 38526                           plusw2	equ	0xFDB
 38527                           fsr2h	equ	0xFDA
 38528                           fsr2l	equ	0xFD9
 38529                           status	equ	0xFD8
 38530                           
 38531 ;; *************** function i2_putch *****************
 38532 ;; Defined at:
 38533 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 38534 ;; Parameters:    Size  Location     Type
 38535 ;;  txData          1    wreg     unsigned char 
 38536 ;; Auto vars:     Size  Location     Type
 38537 ;;  txData          1    1[COMRAM] unsigned char 
 38538 ;; Return value:  Size  Location     Type
 38539 ;;                  1    wreg      void 
 38540 ;; Registers used:
 38541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38542 ;; Tracked objects:
 38543 ;;		On entry : 0/0
 38544 ;;		On exit  : 0/0
 38545 ;;		Unchanged: 0/0
 38546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38551 ;;Total ram usage:        1 bytes
 38552 ;; Hardware stack levels used:    1
 38553 ;; Hardware stack levels required when called:    1
 38554 ;; This function calls:
 38555 ;;		i2_EUSART2_Write
 38556 ;; This function is called by:
 38557 ;;		i2_printf
 38558 ;; This function uses a non-reentrant model
 38559 ;;
 38560                           
 38561                           	psect	text113
 38562  0199C8                     __ptext113:
 38563                           	opt stack 0
 38564  0199C8                     i2_putch:
 38565                           	opt stack 15
 38566                           
 38567                           ;incstack = 0
 38568                           ;i2putch@txData stored from wreg
 38569  0199C8  6E02               	movwf	i2putch@txData,c
 38570                           
 38571                           ;eusart2.c: 195: EUSART2_Write(txData);
 38572  0199CA  5002               	movf	i2putch@txData,w,c
 38573  0199CC  EC2C  F0C8         	call	i2_EUSART2_Write
 38574  0199D0  0012               	return		;funcret
 38575  0199D2                     __end_ofi2_putch:
 38576                           	opt stack 0
 38577                           tosu	equ	0xFFF
 38578                           tosh	equ	0xFFE
 38579                           tosl	equ	0xFFD
 38580                           pclatu	equ	0xFFB
 38581                           pclath	equ	0xFFA
 38582                           tblptru	equ	0xFF8
 38583                           tblptrh	equ	0xFF7
 38584                           tblptrl	equ	0xFF6
 38585                           tablat	equ	0xFF5
 38586                           prodh	equ	0xFF4
 38587                           prodl	equ	0xFF3
 38588                           intcon	equ	0xFF2
 38589                           indf0	equ	0xFEF
 38590                           postinc0	equ	0xFEE
 38591                           fsr0h	equ	0xFEA
 38592                           fsr0l	equ	0xFE9
 38593                           wreg	equ	0xFE8
 38594                           indf1	equ	0xFE7
 38595                           postdec1	equ	0xFE5
 38596                           plusw1	equ	0xFE3
 38597                           fsr1h	equ	0xFE2
 38598                           fsr1l	equ	0xFE1
 38599                           bsr	equ	0xFE0
 38600                           indf2	equ	0xFDF
 38601                           postinc2	equ	0xFDE
 38602                           postdec2	equ	0xFDD
 38603                           plusw2	equ	0xFDB
 38604                           fsr2h	equ	0xFDA
 38605                           fsr2l	equ	0xFD9
 38606                           status	equ	0xFD8
 38607                           
 38608 ;; *************** function i2_EUSART2_Write *****************
 38609 ;; Defined at:
 38610 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 38611 ;; Parameters:    Size  Location     Type
 38612 ;;  txData          1    wreg     unsigned char 
 38613 ;; Auto vars:     Size  Location     Type
 38614 ;;  txData          1    0[COMRAM] unsigned char 
 38615 ;; Return value:  Size  Location     Type
 38616 ;;                  1    wreg      void 
 38617 ;; Registers used:
 38618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38619 ;; Tracked objects:
 38620 ;;		On entry : 0/0
 38621 ;;		On exit  : 0/0
 38622 ;;		Unchanged: 0/0
 38623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38628 ;;Total ram usage:        1 bytes
 38629 ;; Hardware stack levels used:    1
 38630 ;; This function calls:
 38631 ;;		Nothing
 38632 ;; This function is called by:
 38633 ;;		i2_putch
 38634 ;; This function uses a non-reentrant model
 38635 ;;
 38636                           
 38637                           	psect	text114
 38638  019058                     __ptext114:
 38639                           	opt stack 0
 38640  019058                     i2_EUSART2_Write:
 38641                           	opt stack 15
 38642                           
 38643                           ;incstack = 0
 38644                           ;i2EUSART2_Write@txData stored from wreg
 38645  019058  6E01               	movwf	i2EUSART2_Write@txData,c
 38646                           
 38647                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 38648  01905A  D002               	goto	i2l408
 38649  01905C                     i2l409:
 38650                           
 38651                           ; BSR set to: 1
 38652  01905C  0004               	clrwdt		;# 
 38653                           
 38654                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 38655  01905E  827E               	bsf	3966,1,c	;volatile
 38656  019060                     i2l408:
 38657  019060  0101               	movlb	1	; () banked
 38658  019062  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 38659  019064  B4D8               	btfsc	status,2,c
 38660  019066  D7FA               	goto	i2l409
 38661                           
 38662                           ; BSR set to: 1
 38663                           ;eusart2.c: 167: }
 38664                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 38665  019068  927E               	bcf	3966,1,c	;volatile
 38666                           
 38667                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 38668  01906A  010E               	movlb	14	; () banked
 38669  01906C  BD2C               	btfsc	44,6,b	;volatile
 38670  01906E  D003               	goto	i2l411
 38671                           
 38672                           ; BSR set to: 14
 38673                           ;eusart2.c: 172: {
 38674                           ;eusart2.c: 173: TX2REG = txData;
 38675  019070  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 38676                           
 38677                           ;eusart2.c: 174: }
 38678  019074  D013               	goto	i2l412
 38679  019076                     i2l411:
 38680                           
 38681                           ; BSR set to: 14
 38682                           ;eusart2.c: 175: else
 38683                           ;eusart2.c: 176: {
 38684                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 38685  019076  9D2C               	bcf	44,6,b	;volatile
 38686                           
 38687                           ; BSR set to: 14
 38688                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 38689  019078  0101               	movlb	1	; () banked
 38690  01907A  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 38691  01907C  0D01               	mullw	1
 38692  01907E  0E00               	movlw	low _eusart2TxBuffer
 38693  019080  24F3               	addwf	prodl,w,c
 38694  019082  6ED9               	movwf	fsr2l,c
 38695  019084  0E03               	movlw	high _eusart2TxBuffer
 38696  019086  20F4               	addwfc	prodh,w,c
 38697  019088  6EDA               	movwf	fsr2h,c
 38698  01908A  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 38699                           
 38700                           ; BSR set to: 1
 38701  01908E  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 38702                           
 38703                           ; BSR set to: 1
 38704                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 38705  019090  0E7F               	movlw	127
 38706  019092  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 38707  019094  D002               	goto	i2l413
 38708                           
 38709                           ; BSR set to: 1
 38710                           ;eusart2.c: 180: {
 38711                           ;eusart2.c: 181: eusart2TxHead = 0;
 38712  019096  0E00               	movlw	0
 38713  019098  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 38714  01909A                     i2l413:
 38715                           
 38716                           ; BSR set to: 1
 38717                           ;eusart2.c: 182: }
 38718                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 38719                           
 38720                           ; BSR set to: 1
 38721  01909A  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 38722  01909C                     i2l412:
 38723                           
 38724                           ;eusart2.c: 184: }
 38725                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 38726                           
 38727                           ; BSR set to: 1
 38728  01909C  010E               	movlb	14	; () banked
 38729  01909E  8D2C               	bsf	44,6,b	;volatile
 38730                           
 38731                           ; BSR set to: 14
 38732  0190A0  0012               	return		;funcret
 38733  0190A2                     __end_ofi2_EUSART2_Write:
 38734                           	opt stack 0
 38735                           tosu	equ	0xFFF
 38736                           tosh	equ	0xFFE
 38737                           tosl	equ	0xFFD
 38738                           pclatu	equ	0xFFB
 38739                           pclath	equ	0xFFA
 38740                           tblptru	equ	0xFF8
 38741                           tblptrh	equ	0xFF7
 38742                           tblptrl	equ	0xFF6
 38743                           tablat	equ	0xFF5
 38744                           prodh	equ	0xFF4
 38745                           prodl	equ	0xFF3
 38746                           intcon	equ	0xFF2
 38747                           indf0	equ	0xFEF
 38748                           postinc0	equ	0xFEE
 38749                           fsr0h	equ	0xFEA
 38750                           fsr0l	equ	0xFE9
 38751                           wreg	equ	0xFE8
 38752                           indf1	equ	0xFE7
 38753                           postdec1	equ	0xFE5
 38754                           plusw1	equ	0xFE3
 38755                           fsr1h	equ	0xFE2
 38756                           fsr1l	equ	0xFE1
 38757                           bsr	equ	0xFE0
 38758                           indf2	equ	0xFDF
 38759                           postinc2	equ	0xFDE
 38760                           postdec2	equ	0xFDD
 38761                           plusw2	equ	0xFDB
 38762                           fsr2h	equ	0xFDA
 38763                           fsr2l	equ	0xFD9
 38764                           status	equ	0xFD8
 38765                           
 38766 ;; *************** function i2_isdigit *****************
 38767 ;; Defined at:
 38768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 38769 ;; Parameters:    Size  Location     Type
 38770 ;;  c               1    wreg     unsigned char 
 38771 ;; Auto vars:     Size  Location     Type
 38772 ;;  c               1    2[COMRAM] unsigned char 
 38773 ;; Return value:  Size  Location     Type
 38774 ;;		None               void
 38775 ;; Registers used:
 38776 ;;		wreg, status,2, status,0
 38777 ;; Tracked objects:
 38778 ;;		On entry : 0/0
 38779 ;;		On exit  : 0/0
 38780 ;;		Unchanged: 0/0
 38781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38786 ;;Total ram usage:        3 bytes
 38787 ;; Hardware stack levels used:    1
 38788 ;; This function calls:
 38789 ;;		Nothing
 38790 ;; This function is called by:
 38791 ;;		i2_printf
 38792 ;; This function uses a non-reentrant model
 38793 ;;
 38794                           
 38795                           	psect	text115
 38796  0197A0                     __ptext115:
 38797                           	opt stack 0
 38798  0197A0                     i2_isdigit:
 38799                           	opt stack 16
 38800                           
 38801                           ; BSR set to: 14
 38802                           ;incstack = 0
 38803                           ;i2isdigit@c stored from wreg
 38804  0197A0  6E03               	movwf	i2isdigit@c,c
 38805  0197A2  0E00               	movlw	0
 38806  0197A4  6E02               	movwf	i2_isdigit$3742,c
 38807  0197A6  0E3A               	movlw	58
 38808  0197A8  6003               	cpfslt	i2isdigit@c,c
 38809  0197AA  D005               	goto	i2l2213
 38810  0197AC  0E2F               	movlw	47
 38811  0197AE  6403               	cpfsgt	i2isdigit@c,c
 38812  0197B0  D002               	goto	i2l2213
 38813  0197B2  0E01               	movlw	1
 38814  0197B4  6E02               	movwf	i2_isdigit$3742,c
 38815  0197B6                     i2l2213:
 38816  0197B6  C002  F001         	movff	i2_isdigit$3742,??i2_isdigit
 38817  0197BA  3001               	rrcf	??i2_isdigit,w,c
 38818  0197BC  0012               	return	
 38819  0197BE                     __end_ofi2_isdigit:
 38820                           	opt stack 0
 38821                           tosu	equ	0xFFF
 38822                           tosh	equ	0xFFE
 38823                           tosl	equ	0xFFD
 38824                           pclatu	equ	0xFFB
 38825                           pclath	equ	0xFFA
 38826                           tblptru	equ	0xFF8
 38827                           tblptrh	equ	0xFF7
 38828                           tblptrl	equ	0xFF6
 38829                           tablat	equ	0xFF5
 38830                           prodh	equ	0xFF4
 38831                           prodl	equ	0xFF3
 38832                           intcon	equ	0xFF2
 38833                           indf0	equ	0xFEF
 38834                           postinc0	equ	0xFEE
 38835                           fsr0h	equ	0xFEA
 38836                           fsr0l	equ	0xFE9
 38837                           wreg	equ	0xFE8
 38838                           indf1	equ	0xFE7
 38839                           postdec1	equ	0xFE5
 38840                           plusw1	equ	0xFE3
 38841                           fsr1h	equ	0xFE2
 38842                           fsr1l	equ	0xFE1
 38843                           bsr	equ	0xFE0
 38844                           indf2	equ	0xFDF
 38845                           postinc2	equ	0xFDE
 38846                           postdec2	equ	0xFDD
 38847                           plusw2	equ	0xFDB
 38848                           fsr2h	equ	0xFDA
 38849                           fsr2l	equ	0xFD9
 38850                           status	equ	0xFD8
 38851                           
 38852 ;; *************** function i2_fround *****************
 38853 ;; Defined at:
 38854 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 38855 ;; Parameters:    Size  Location     Type
 38856 ;;  prec            1    wreg     unsigned char 
 38857 ;; Auto vars:     Size  Location     Type
 38858 ;;  prec            1   84[COMRAM] unsigned char 
 38859 ;; Return value:  Size  Location     Type
 38860 ;;                  4   72[COMRAM] unsigned char 
 38861 ;; Registers used:
 38862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38863 ;; Tracked objects:
 38864 ;;		On entry : 0/0
 38865 ;;		On exit  : 0/0
 38866 ;;		Unchanged: 0/0
 38867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38869 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38871 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38872 ;;Total ram usage:       13 bytes
 38873 ;; Hardware stack levels used:    1
 38874 ;; Hardware stack levels required when called:    1
 38875 ;; This function calls:
 38876 ;;		i2___awdiv
 38877 ;;		i2___awmod
 38878 ;;		i2___flmul
 38879 ;; This function is called by:
 38880 ;;		i2_printf
 38881 ;; This function uses a non-reentrant model
 38882 ;;
 38883                           
 38884                           	psect	text116
 38885  0166A6                     __ptext116:
 38886                           	opt stack 0
 38887  0166A6                     i2_fround:
 38888                           	opt stack 15
 38889                           
 38890                           ;incstack = 0
 38891                           ;i2fround@prec stored from wreg
 38892  0166A6  6E55               	movwf	i2fround@prec,c
 38893                           
 38894                           ;doprnt.c: 413: if(prec>=110)
 38895  0166A8  0E6D               	movlw	109
 38896  0166AA  6455               	cpfsgt	i2fround@prec,c
 38897  0166AC  D0B5               	goto	i2l1629
 38898                           
 38899                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 38900  0166AE  0E00               	movlw	0
 38901  0166B0  6E0A               	movwf	i2___awdiv@divisor+1,c
 38902  0166B2  0E0A               	movlw	10
 38903  0166B4  6E09               	movwf	i2___awdiv@divisor,c
 38904  0166B6  0E00               	movlw	0
 38905  0166B8  6E04               	movwf	i2___awmod@divisor+1,c
 38906  0166BA  0E64               	movlw	100
 38907  0166BC  6E03               	movwf	i2___awmod@divisor,c
 38908  0166BE  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 38909  0166C2  6A02               	clrf	i2___awmod@dividend+1,c
 38910  0166C4  ECD4  F0C4         	call	i2___awmod	;wreg free
 38911  0166C8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 38912  0166CC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 38913  0166D0  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38914  0166D4  90D8               	bcf	status,0,c
 38915  0166D6  3607               	rlcf	?i2___awdiv,f,c
 38916  0166D8  3608               	rlcf	?i2___awdiv+1,f,c
 38917  0166DA  90D8               	bcf	status,0,c
 38918  0166DC  3607               	rlcf	?i2___awdiv,f,c
 38919  0166DE  3608               	rlcf	?i2___awdiv+1,f,c
 38920  0166E0  0E24               	movlw	36
 38921  0166E2  2607               	addwf	?i2___awdiv,f,c
 38922  0166E4  0E00               	movlw	0
 38923  0166E6  2208               	addwfc	?i2___awdiv+1,f,c
 38924  0166E8  0E93               	movlw	low __npowers_
 38925  0166EA  2407               	addwf	?i2___awdiv,w,c
 38926  0166EC  6EF6               	movwf	tblptrl,c
 38927  0166EE  0ED4               	movlw	high __npowers_
 38928  0166F0  2008               	addwfc	?i2___awdiv+1,w,c
 38929  0166F2  6EF7               	movwf	tblptrh,c
 38930  0166F4                     	if	1	;There are 3 active tblptr bytes
 38931  0166F4  6AF8               	clrf	tblptru,c
 38932  0166F6  0E00               	movlw	low (__mediumconst shr (0+16))
 38933  0166F8  22F8               	addwfc	tblptru,f,c
 38934  0166FA                     	endif
 38935  0166FA  0009               	tblrd		*+
 38936  0166FC  CFF5 F034          	movff	tablat,i2___flmul@a
 38937  016700  0009               	tblrd		*+
 38938  016702  CFF5 F035          	movff	tablat,i2___flmul@a+1
 38939  016706  0009               	tblrd		*+
 38940  016708  CFF5 F036          	movff	tablat,i2___flmul@a+2
 38941  01670C  000A               	tblrd		*-
 38942  01670E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 38943  016712  0E00               	movlw	0
 38944  016714  6E0A               	movwf	i2___awdiv@divisor+1,c
 38945  016716  0E64               	movlw	100
 38946  016718  6E09               	movwf	i2___awdiv@divisor,c
 38947  01671A  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 38948  01671E  6A08               	clrf	i2___awdiv@dividend+1,c
 38949  016720  EC5C  F0C3         	call	i2___awdiv	;wreg free
 38950  016724  90D8               	bcf	status,0,c
 38951  016726  3607               	rlcf	?i2___awdiv,f,c
 38952  016728  3608               	rlcf	?i2___awdiv+1,f,c
 38953  01672A  90D8               	bcf	status,0,c
 38954  01672C  3607               	rlcf	?i2___awdiv,f,c
 38955  01672E  3608               	rlcf	?i2___awdiv+1,f,c
 38956  016730  0E48               	movlw	72
 38957  016732  2607               	addwf	?i2___awdiv,f,c
 38958  016734  0E00               	movlw	0
 38959  016736  2208               	addwfc	?i2___awdiv+1,f,c
 38960  016738  0E93               	movlw	low __npowers_
 38961  01673A  2407               	addwf	?i2___awdiv,w,c
 38962  01673C  6EF6               	movwf	tblptrl,c
 38963  01673E  0ED4               	movlw	high __npowers_
 38964  016740  2008               	addwfc	?i2___awdiv+1,w,c
 38965  016742  6EF7               	movwf	tblptrh,c
 38966  016744                     	if	1	;There are 3 active tblptr bytes
 38967  016744  6AF8               	clrf	tblptru,c
 38968  016746  0E00               	movlw	low (__mediumconst shr (0+16))
 38969  016748  22F8               	addwfc	tblptru,f,c
 38970  01674A                     	endif
 38971  01674A  0009               	tblrd		*+
 38972  01674C  CFF5 F030          	movff	tablat,i2___flmul@b
 38973  016750  0009               	tblrd		*+
 38974  016752  CFF5 F031          	movff	tablat,i2___flmul@b+1
 38975  016756  0009               	tblrd		*+
 38976  016758  CFF5 F032          	movff	tablat,i2___flmul@b+2
 38977  01675C  000A               	tblrd		*-
 38978  01675E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 38979  016762  ECF2  F0A5         	call	i2___flmul	;wreg free
 38980  016766  C030  F051         	movff	?i2___flmul,i2_fround$4735
 38981  01676A  C031  F052         	movff	?i2___flmul+1,i2_fround$4735+1
 38982  01676E  C032  F053         	movff	?i2___flmul+2,i2_fround$4735+2
 38983  016772  C033  F054         	movff	?i2___flmul+3,i2_fround$4735+3
 38984                           
 38985                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 38986  016776  0E00               	movlw	0
 38987  016778  6E04               	movwf	i2___awmod@divisor+1,c
 38988  01677A  0E0A               	movlw	10
 38989  01677C  6E03               	movwf	i2___awmod@divisor,c
 38990  01677E  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 38991  016782  6A02               	clrf	i2___awmod@dividend+1,c
 38992  016784  ECD4  F0C4         	call	i2___awmod	;wreg free
 38993  016788  90D8               	bcf	status,0,c
 38994  01678A  3601               	rlcf	?i2___awmod,f,c
 38995  01678C  3602               	rlcf	?i2___awmod+1,f,c
 38996  01678E  90D8               	bcf	status,0,c
 38997  016790  3601               	rlcf	?i2___awmod,f,c
 38998  016792  3602               	rlcf	?i2___awmod+1,f,c
 38999  016794  0E93               	movlw	low __npowers_
 39000  016796  2401               	addwf	?i2___awmod,w,c
 39001  016798  6EF6               	movwf	tblptrl,c
 39002  01679A  0ED4               	movlw	high __npowers_
 39003  01679C  2002               	addwfc	?i2___awmod+1,w,c
 39004  01679E  6EF7               	movwf	tblptrh,c
 39005  0167A0                     	if	1	;There are 3 active tblptr bytes
 39006  0167A0  6AF8               	clrf	tblptru,c
 39007  0167A2  0E00               	movlw	low (__mediumconst shr (0+16))
 39008  0167A4  22F8               	addwfc	tblptru,f,c
 39009  0167A6                     	endif
 39010  0167A6  0009               	tblrd		*+
 39011  0167A8  CFF5 F034          	movff	tablat,i2___flmul@a
 39012  0167AC  0009               	tblrd		*+
 39013  0167AE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 39014  0167B2  0009               	tblrd		*+
 39015  0167B4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 39016  0167B8  000A               	tblrd		*-
 39017  0167BA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 39018  0167BE  C051  F030         	movff	i2_fround$4735,i2___flmul@b
 39019  0167C2  C052  F031         	movff	i2_fround$4735+1,i2___flmul@b+1
 39020  0167C6  C053  F032         	movff	i2_fround$4735+2,i2___flmul@b+2
 39021  0167CA  C054  F033         	movff	i2_fround$4735+3,i2___flmul@b+3
 39022  0167CE  ECF2  F0A5         	call	i2___flmul	;wreg free
 39023  0167D2  C030  F04D         	movff	?i2___flmul,i2_fround$4736
 39024  0167D6  C031  F04E         	movff	?i2___flmul+1,i2_fround$4736+1
 39025  0167DA  C032  F04F         	movff	?i2___flmul+2,i2_fround$4736+2
 39026  0167DE  C033  F050         	movff	?i2___flmul+3,i2_fround$4736+3
 39027                           
 39028                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 39029  0167E2  C04D  F030         	movff	i2_fround$4736,i2___flmul@b
 39030  0167E6  C04E  F031         	movff	i2_fround$4736+1,i2___flmul@b+1
 39031  0167EA  C04F  F032         	movff	i2_fround$4736+2,i2___flmul@b+2
 39032  0167EE  C050  F033         	movff	i2_fround$4736+3,i2___flmul@b+3
 39033  0167F2  0E00               	movlw	0
 39034  0167F4  6E34               	movwf	i2___flmul@a,c
 39035  0167F6  0E00               	movlw	0
 39036  0167F8  6E35               	movwf	i2___flmul@a+1,c
 39037  0167FA  0E00               	movlw	0
 39038  0167FC  6E36               	movwf	i2___flmul@a+2,c
 39039  0167FE  0E3F               	movlw	63
 39040  016800  6E37               	movwf	i2___flmul@a+3,c
 39041  016802  ECF2  F0A5         	call	i2___flmul	;wreg free
 39042  016806  C030  F049         	movff	?i2___flmul,?i2_fround
 39043  01680A  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 39044  01680E  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 39045  016812  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 39046  016816  0012               	return	
 39047  016818                     i2l1629:
 39048                           
 39049                           ;doprnt.c: 415: else if(prec > 10)
 39050  016818  0E0A               	movlw	10
 39051  01681A  6455               	cpfsgt	i2fround@prec,c
 39052  01681C  D071               	goto	i2l1632
 39053                           
 39054                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 39055  01681E  0E00               	movlw	0
 39056  016820  6E04               	movwf	i2___awmod@divisor+1,c
 39057  016822  0E0A               	movlw	10
 39058  016824  6E03               	movwf	i2___awmod@divisor,c
 39059  016826  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 39060  01682A  6A02               	clrf	i2___awmod@dividend+1,c
 39061  01682C  ECD4  F0C4         	call	i2___awmod	;wreg free
 39062  016830  90D8               	bcf	status,0,c
 39063  016832  3601               	rlcf	?i2___awmod,f,c
 39064  016834  3602               	rlcf	?i2___awmod+1,f,c
 39065  016836  90D8               	bcf	status,0,c
 39066  016838  3601               	rlcf	?i2___awmod,f,c
 39067  01683A  3602               	rlcf	?i2___awmod+1,f,c
 39068  01683C  0E93               	movlw	low __npowers_
 39069  01683E  2401               	addwf	?i2___awmod,w,c
 39070  016840  6EF6               	movwf	tblptrl,c
 39071  016842  0ED4               	movlw	high __npowers_
 39072  016844  2002               	addwfc	?i2___awmod+1,w,c
 39073  016846  6EF7               	movwf	tblptrh,c
 39074  016848                     	if	1	;There are 3 active tblptr bytes
 39075  016848  6AF8               	clrf	tblptru,c
 39076  01684A  0E00               	movlw	low (__mediumconst shr (0+16))
 39077  01684C  22F8               	addwfc	tblptru,f,c
 39078  01684E                     	endif
 39079  01684E  0009               	tblrd		*+
 39080  016850  CFF5 F034          	movff	tablat,i2___flmul@a
 39081  016854  0009               	tblrd		*+
 39082  016856  CFF5 F035          	movff	tablat,i2___flmul@a+1
 39083  01685A  0009               	tblrd		*+
 39084  01685C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 39085  016860  000A               	tblrd		*-
 39086  016862  CFF5 F037          	movff	tablat,i2___flmul@a+3
 39087  016866  0E00               	movlw	0
 39088  016868  6E0A               	movwf	i2___awdiv@divisor+1,c
 39089  01686A  0E0A               	movlw	10
 39090  01686C  6E09               	movwf	i2___awdiv@divisor,c
 39091  01686E  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 39092  016872  6A08               	clrf	i2___awdiv@dividend+1,c
 39093  016874  EC5C  F0C3         	call	i2___awdiv	;wreg free
 39094  016878  90D8               	bcf	status,0,c
 39095  01687A  3607               	rlcf	?i2___awdiv,f,c
 39096  01687C  3608               	rlcf	?i2___awdiv+1,f,c
 39097  01687E  90D8               	bcf	status,0,c
 39098  016880  3607               	rlcf	?i2___awdiv,f,c
 39099  016882  3608               	rlcf	?i2___awdiv+1,f,c
 39100  016884  0E24               	movlw	36
 39101  016886  2607               	addwf	?i2___awdiv,f,c
 39102  016888  0E00               	movlw	0
 39103  01688A  2208               	addwfc	?i2___awdiv+1,f,c
 39104  01688C  0E93               	movlw	low __npowers_
 39105  01688E  2407               	addwf	?i2___awdiv,w,c
 39106  016890  6EF6               	movwf	tblptrl,c
 39107  016892  0ED4               	movlw	high __npowers_
 39108  016894  2008               	addwfc	?i2___awdiv+1,w,c
 39109  016896  6EF7               	movwf	tblptrh,c
 39110  016898                     	if	1	;There are 3 active tblptr bytes
 39111  016898  6AF8               	clrf	tblptru,c
 39112  01689A  0E00               	movlw	low (__mediumconst shr (0+16))
 39113  01689C  22F8               	addwfc	tblptru,f,c
 39114  01689E                     	endif
 39115  01689E  0009               	tblrd		*+
 39116  0168A0  CFF5 F030          	movff	tablat,i2___flmul@b
 39117  0168A4  0009               	tblrd		*+
 39118  0168A6  CFF5 F031          	movff	tablat,i2___flmul@b+1
 39119  0168AA  0009               	tblrd		*+
 39120  0168AC  CFF5 F032          	movff	tablat,i2___flmul@b+2
 39121  0168B0  000A               	tblrd		*-
 39122  0168B2  CFF5 F033          	movff	tablat,i2___flmul@b+3
 39123  0168B6  ECF2  F0A5         	call	i2___flmul	;wreg free
 39124  0168BA  C030  F051         	movff	?i2___flmul,i2_fround$4735
 39125  0168BE  C031  F052         	movff	?i2___flmul+1,i2_fround$4735+1
 39126  0168C2  C032  F053         	movff	?i2___flmul+2,i2_fround$4735+2
 39127  0168C6  C033  F054         	movff	?i2___flmul+3,i2_fround$4735+3
 39128                           
 39129                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 39130  0168CA  C051  F030         	movff	i2_fround$4735,i2___flmul@b
 39131  0168CE  C052  F031         	movff	i2_fround$4735+1,i2___flmul@b+1
 39132  0168D2  C053  F032         	movff	i2_fround$4735+2,i2___flmul@b+2
 39133  0168D6  C054  F033         	movff	i2_fround$4735+3,i2___flmul@b+3
 39134  0168DA  0E00               	movlw	0
 39135  0168DC  6E34               	movwf	i2___flmul@a,c
 39136  0168DE  0E00               	movlw	0
 39137  0168E0  6E35               	movwf	i2___flmul@a+1,c
 39138  0168E2  0E00               	movlw	0
 39139  0168E4  6E36               	movwf	i2___flmul@a+2,c
 39140  0168E6  0E3F               	movlw	63
 39141  0168E8  6E37               	movwf	i2___flmul@a+3,c
 39142  0168EA  ECF2  F0A5         	call	i2___flmul	;wreg free
 39143  0168EE  C030  F049         	movff	?i2___flmul,?i2_fround
 39144  0168F2  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 39145  0168F6  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 39146  0168FA  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 39147  0168FE  0012               	return	
 39148  016900                     i2l1632:
 39149                           
 39150                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 39151  016900  5055               	movf	i2fround@prec,w,c
 39152  016902  0D04               	mullw	4
 39153  016904  0E93               	movlw	low __npowers_
 39154  016906  24F3               	addwf	prodl,w,c
 39155  016908  6EF6               	movwf	tblptrl,c
 39156  01690A  0ED4               	movlw	high __npowers_
 39157  01690C  20F4               	addwfc	prodh,w,c
 39158  01690E  6EF7               	movwf	tblptrh,c
 39159  016910                     	if	1	;There are 3 active tblptr bytes
 39160  016910  6AF8               	clrf	tblptru,c
 39161  016912  0E00               	movlw	low (__mediumconst shr (0+16))
 39162  016914  22F8               	addwfc	tblptru,f,c
 39163  016916                     	endif
 39164  016916  0009               	tblrd		*+
 39165  016918  CFF5 F030          	movff	tablat,i2___flmul@b
 39166  01691C  0009               	tblrd		*+
 39167  01691E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 39168  016922  0009               	tblrd		*+
 39169  016924  CFF5 F032          	movff	tablat,i2___flmul@b+2
 39170  016928  000A               	tblrd		*-
 39171  01692A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 39172  01692E  0E00               	movlw	0
 39173  016930  6E34               	movwf	i2___flmul@a,c
 39174  016932  0E00               	movlw	0
 39175  016934  6E35               	movwf	i2___flmul@a+1,c
 39176  016936  0E00               	movlw	0
 39177  016938  6E36               	movwf	i2___flmul@a+2,c
 39178  01693A  0E3F               	movlw	63
 39179  01693C  6E37               	movwf	i2___flmul@a+3,c
 39180  01693E  ECF2  F0A5         	call	i2___flmul	;wreg free
 39181  016942  C030  F049         	movff	?i2___flmul,?i2_fround
 39182  016946  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 39183  01694A  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 39184  01694E  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 39185  016952  0012               	return	
 39186  016954                     __end_ofi2_fround:
 39187                           	opt stack 0
 39188                           tosu	equ	0xFFF
 39189                           tosh	equ	0xFFE
 39190                           tosl	equ	0xFFD
 39191                           pclatu	equ	0xFFB
 39192                           pclath	equ	0xFFA
 39193                           tblptru	equ	0xFF8
 39194                           tblptrh	equ	0xFF7
 39195                           tblptrl	equ	0xFF6
 39196                           tablat	equ	0xFF5
 39197                           prodh	equ	0xFF4
 39198                           prodl	equ	0xFF3
 39199                           intcon	equ	0xFF2
 39200                           indf0	equ	0xFEF
 39201                           postinc0	equ	0xFEE
 39202                           fsr0h	equ	0xFEA
 39203                           fsr0l	equ	0xFE9
 39204                           wreg	equ	0xFE8
 39205                           indf1	equ	0xFE7
 39206                           postdec1	equ	0xFE5
 39207                           plusw1	equ	0xFE3
 39208                           fsr1h	equ	0xFE2
 39209                           fsr1l	equ	0xFE1
 39210                           bsr	equ	0xFE0
 39211                           indf2	equ	0xFDF
 39212                           postinc2	equ	0xFDE
 39213                           postdec2	equ	0xFDD
 39214                           plusw2	equ	0xFDB
 39215                           fsr2h	equ	0xFDA
 39216                           fsr2l	equ	0xFD9
 39217                           status	equ	0xFD8
 39218                           
 39219 ;; *************** function i2___awmod *****************
 39220 ;; Defined at:
 39221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 39222 ;; Parameters:    Size  Location     Type
 39223 ;;  dividend        2    0[COMRAM] int 
 39224 ;;  divisor         2    2[COMRAM] int 
 39225 ;; Auto vars:     Size  Location     Type
 39226 ;;  __awmod         1    5[COMRAM] unsigned char 
 39227 ;;  __awmod         1    4[COMRAM] unsigned char 
 39228 ;; Return value:  Size  Location     Type
 39229 ;;                  2    0[COMRAM] int 
 39230 ;; Registers used:
 39231 ;;		wreg, status,2, status,0
 39232 ;; Tracked objects:
 39233 ;;		On entry : 0/0
 39234 ;;		On exit  : 0/0
 39235 ;;		Unchanged: 0/0
 39236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39240 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39241 ;;Total ram usage:        6 bytes
 39242 ;; Hardware stack levels used:    1
 39243 ;; This function calls:
 39244 ;;		Nothing
 39245 ;; This function is called by:
 39246 ;;		i2_fround
 39247 ;;		i2_scale
 39248 ;; This function uses a non-reentrant model
 39249 ;;
 39250                           
 39251                           	psect	text117
 39252  0189A8                     __ptext117:
 39253                           	opt stack 0
 39254  0189A8                     i2___awmod:
 39255                           	opt stack 15
 39256                           
 39257                           ;incstack = 0
 39258  0189A8  0E00               	movlw	0
 39259  0189AA  6E06               	movwf	i2___awmod@sign,c
 39260  0189AC  AE02               	btfss	i2___awmod@dividend+1,7,c
 39261  0189AE  D006               	goto	i2l2018
 39262  0189B0  6C01               	negf	i2___awmod@dividend,c
 39263  0189B2  1E02               	comf	i2___awmod@dividend+1,f,c
 39264  0189B4  B0D8               	btfsc	status,0,c
 39265  0189B6  2A02               	incf	i2___awmod@dividend+1,f,c
 39266  0189B8  0E01               	movlw	1
 39267  0189BA  6E06               	movwf	i2___awmod@sign,c
 39268  0189BC                     i2l2018:
 39269  0189BC  AE04               	btfss	i2___awmod@divisor+1,7,c
 39270  0189BE  D004               	goto	i2l2019
 39271  0189C0  6C03               	negf	i2___awmod@divisor,c
 39272  0189C2  1E04               	comf	i2___awmod@divisor+1,f,c
 39273  0189C4  B0D8               	btfsc	status,0,c
 39274  0189C6  2A04               	incf	i2___awmod@divisor+1,f,c
 39275  0189C8                     i2l2019:
 39276  0189C8  5003               	movf	i2___awmod@divisor,w,c
 39277  0189CA  1004               	iorwf	i2___awmod@divisor+1,w,c
 39278  0189CC  B4D8               	btfsc	status,2,c
 39279  0189CE  D018               	goto	i2l2026
 39280  0189D0  0E01               	movlw	1
 39281  0189D2  6E05               	movwf	i2___awmod@counter,c
 39282  0189D4  D004               	goto	i2l2021
 39283  0189D6  90D8               	bcf	status,0,c
 39284  0189D8  3603               	rlcf	i2___awmod@divisor,f,c
 39285  0189DA  3604               	rlcf	i2___awmod@divisor+1,f,c
 39286  0189DC  2A05               	incf	i2___awmod@counter,f,c
 39287  0189DE                     i2l2021:
 39288  0189DE  AE04               	btfss	i2___awmod@divisor+1,7,c
 39289  0189E0  D7FA               	goto	i2l2022
 39290  0189E2                     i2u1727_40:
 39291  0189E2  5003               	movf	i2___awmod@divisor,w,c
 39292  0189E4  5C01               	subwf	i2___awmod@dividend,w,c
 39293  0189E6  5004               	movf	i2___awmod@divisor+1,w,c
 39294  0189E8  5802               	subwfb	i2___awmod@dividend+1,w,c
 39295  0189EA  A0D8               	btfss	status,0,c
 39296  0189EC  D004               	goto	i2l2025
 39297  0189EE  5003               	movf	i2___awmod@divisor,w,c
 39298  0189F0  5E01               	subwf	i2___awmod@dividend,f,c
 39299  0189F2  5004               	movf	i2___awmod@divisor+1,w,c
 39300  0189F4  5A02               	subwfb	i2___awmod@dividend+1,f,c
 39301  0189F6                     i2l2025:
 39302  0189F6  90D8               	bcf	status,0,c
 39303  0189F8  3204               	rrcf	i2___awmod@divisor+1,f,c
 39304  0189FA  3203               	rrcf	i2___awmod@divisor,f,c
 39305  0189FC  2E05               	decfsz	i2___awmod@counter,f,c
 39306  0189FE  D7F1               	goto	i2u1727_40
 39307  018A00                     i2l2026:
 39308  018A00  5006               	movf	i2___awmod@sign,w,c
 39309  018A02  B4D8               	btfsc	status,2,c
 39310  018A04  D004               	goto	i2l2027
 39311  018A06  6C01               	negf	i2___awmod@dividend,c
 39312  018A08  1E02               	comf	i2___awmod@dividend+1,f,c
 39313  018A0A  B0D8               	btfsc	status,0,c
 39314  018A0C  2A02               	incf	i2___awmod@dividend+1,f,c
 39315  018A0E                     i2l2027:
 39316  018A0E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 39317  018A12  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 39318  018A16  0012               	return	
 39319  018A18                     __end_ofi2___awmod:
 39320                           	opt stack 0
 39321                           tosu	equ	0xFFF
 39322                           tosh	equ	0xFFE
 39323                           tosl	equ	0xFFD
 39324                           pclatu	equ	0xFFB
 39325                           pclath	equ	0xFFA
 39326                           tblptru	equ	0xFF8
 39327                           tblptrh	equ	0xFF7
 39328                           tblptrl	equ	0xFF6
 39329                           tablat	equ	0xFF5
 39330                           prodh	equ	0xFF4
 39331                           prodl	equ	0xFF3
 39332                           intcon	equ	0xFF2
 39333                           indf0	equ	0xFEF
 39334                           postinc0	equ	0xFEE
 39335                           fsr0h	equ	0xFEA
 39336                           fsr0l	equ	0xFE9
 39337                           wreg	equ	0xFE8
 39338                           indf1	equ	0xFE7
 39339                           postdec1	equ	0xFE5
 39340                           plusw1	equ	0xFE3
 39341                           fsr1h	equ	0xFE2
 39342                           fsr1l	equ	0xFE1
 39343                           bsr	equ	0xFE0
 39344                           indf2	equ	0xFDF
 39345                           postinc2	equ	0xFDE
 39346                           postdec2	equ	0xFDD
 39347                           plusw2	equ	0xFDB
 39348                           fsr2h	equ	0xFDA
 39349                           fsr2l	equ	0xFD9
 39350                           status	equ	0xFD8
 39351                           
 39352 ;; *************** function i2___awdiv *****************
 39353 ;; Defined at:
 39354 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 39355 ;; Parameters:    Size  Location     Type
 39356 ;;  dividend        2    6[COMRAM] int 
 39357 ;;  divisor         2    8[COMRAM] int 
 39358 ;; Auto vars:     Size  Location     Type
 39359 ;;  __awdiv         2   12[COMRAM] int 
 39360 ;;  __awdiv         1   11[COMRAM] unsigned char 
 39361 ;;  __awdiv         1   10[COMRAM] unsigned char 
 39362 ;; Return value:  Size  Location     Type
 39363 ;;                  2    6[COMRAM] int 
 39364 ;; Registers used:
 39365 ;;		wreg, status,2, status,0
 39366 ;; Tracked objects:
 39367 ;;		On entry : 0/0
 39368 ;;		On exit  : 0/0
 39369 ;;		Unchanged: 0/0
 39370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39372 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39374 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39375 ;;Total ram usage:        8 bytes
 39376 ;; Hardware stack levels used:    1
 39377 ;; This function calls:
 39378 ;;		Nothing
 39379 ;; This function is called by:
 39380 ;;		i2_fround
 39381 ;;		i2_scale
 39382 ;;		i2_printf
 39383 ;; This function uses a non-reentrant model
 39384 ;;
 39385                           
 39386                           	psect	text118
 39387  0186B8                     __ptext118:
 39388                           	opt stack 0
 39389  0186B8                     i2___awdiv:
 39390                           	opt stack 15
 39391                           
 39392                           ;incstack = 0
 39393  0186B8  0E00               	movlw	0
 39394  0186BA  6E0C               	movwf	i2___awdiv@sign,c
 39395  0186BC  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 39396  0186BE  D006               	goto	i2l2005
 39397  0186C0  6C09               	negf	i2___awdiv@divisor,c
 39398  0186C2  1E0A               	comf	i2___awdiv@divisor+1,f,c
 39399  0186C4  B0D8               	btfsc	status,0,c
 39400  0186C6  2A0A               	incf	i2___awdiv@divisor+1,f,c
 39401  0186C8  0E01               	movlw	1
 39402  0186CA  6E0C               	movwf	i2___awdiv@sign,c
 39403  0186CC                     i2l2005:
 39404  0186CC  AE08               	btfss	i2___awdiv@dividend+1,7,c
 39405  0186CE  D006               	goto	i2l2006
 39406  0186D0  6C07               	negf	i2___awdiv@dividend,c
 39407  0186D2  1E08               	comf	i2___awdiv@dividend+1,f,c
 39408  0186D4  B0D8               	btfsc	status,0,c
 39409  0186D6  2A08               	incf	i2___awdiv@dividend+1,f,c
 39410  0186D8  0E01               	movlw	1
 39411  0186DA  1A0C               	xorwf	i2___awdiv@sign,f,c
 39412  0186DC                     i2l2006:
 39413  0186DC  0E00               	movlw	0
 39414  0186DE  6E0E               	movwf	i2___awdiv@quotient+1,c
 39415  0186E0  0E00               	movlw	0
 39416  0186E2  6E0D               	movwf	i2___awdiv@quotient,c
 39417  0186E4  5009               	movf	i2___awdiv@divisor,w,c
 39418  0186E6  100A               	iorwf	i2___awdiv@divisor+1,w,c
 39419  0186E8  B4D8               	btfsc	status,2,c
 39420  0186EA  D01C               	goto	i2l2013
 39421  0186EC  0E01               	movlw	1
 39422  0186EE  6E0B               	movwf	i2___awdiv@counter,c
 39423  0186F0  D004               	goto	i2l2008
 39424  0186F2  90D8               	bcf	status,0,c
 39425  0186F4  3609               	rlcf	i2___awdiv@divisor,f,c
 39426  0186F6  360A               	rlcf	i2___awdiv@divisor+1,f,c
 39427  0186F8  2A0B               	incf	i2___awdiv@counter,f,c
 39428  0186FA                     i2l2008:
 39429  0186FA  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 39430  0186FC  D7FA               	goto	i2l2009
 39431  0186FE                     i2u1721_40:
 39432  0186FE  90D8               	bcf	status,0,c
 39433  018700  360D               	rlcf	i2___awdiv@quotient,f,c
 39434  018702  360E               	rlcf	i2___awdiv@quotient+1,f,c
 39435  018704  5009               	movf	i2___awdiv@divisor,w,c
 39436  018706  5C07               	subwf	i2___awdiv@dividend,w,c
 39437  018708  500A               	movf	i2___awdiv@divisor+1,w,c
 39438  01870A  5808               	subwfb	i2___awdiv@dividend+1,w,c
 39439  01870C  A0D8               	btfss	status,0,c
 39440  01870E  D005               	goto	i2l2012
 39441  018710  5009               	movf	i2___awdiv@divisor,w,c
 39442  018712  5E07               	subwf	i2___awdiv@dividend,f,c
 39443  018714  500A               	movf	i2___awdiv@divisor+1,w,c
 39444  018716  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 39445  018718  800D               	bsf	i2___awdiv@quotient,0,c
 39446  01871A                     i2l2012:
 39447  01871A  90D8               	bcf	status,0,c
 39448  01871C  320A               	rrcf	i2___awdiv@divisor+1,f,c
 39449  01871E  3209               	rrcf	i2___awdiv@divisor,f,c
 39450  018720  2E0B               	decfsz	i2___awdiv@counter,f,c
 39451  018722  D7ED               	goto	i2u1721_40
 39452  018724                     i2l2013:
 39453  018724  500C               	movf	i2___awdiv@sign,w,c
 39454  018726  B4D8               	btfsc	status,2,c
 39455  018728  D004               	goto	i2l2014
 39456  01872A  6C0D               	negf	i2___awdiv@quotient,c
 39457  01872C  1E0E               	comf	i2___awdiv@quotient+1,f,c
 39458  01872E  B0D8               	btfsc	status,0,c
 39459  018730  2A0E               	incf	i2___awdiv@quotient+1,f,c
 39460  018732                     i2l2014:
 39461  018732  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 39462  018736  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 39463  01873A  0012               	return	
 39464  01873C                     __end_ofi2___awdiv:
 39465                           	opt stack 0
 39466                           tosu	equ	0xFFF
 39467                           tosh	equ	0xFFE
 39468                           tosl	equ	0xFFD
 39469                           pclatu	equ	0xFFB
 39470                           pclath	equ	0xFFA
 39471                           tblptru	equ	0xFF8
 39472                           tblptrh	equ	0xFF7
 39473                           tblptrl	equ	0xFF6
 39474                           tablat	equ	0xFF5
 39475                           prodh	equ	0xFF4
 39476                           prodl	equ	0xFF3
 39477                           intcon	equ	0xFF2
 39478                           indf0	equ	0xFEF
 39479                           postinc0	equ	0xFEE
 39480                           fsr0h	equ	0xFEA
 39481                           fsr0l	equ	0xFE9
 39482                           wreg	equ	0xFE8
 39483                           indf1	equ	0xFE7
 39484                           postdec1	equ	0xFE5
 39485                           plusw1	equ	0xFE3
 39486                           fsr1h	equ	0xFE2
 39487                           fsr1l	equ	0xFE1
 39488                           bsr	equ	0xFE0
 39489                           indf2	equ	0xFDF
 39490                           postinc2	equ	0xFDE
 39491                           postdec2	equ	0xFDD
 39492                           plusw2	equ	0xFDB
 39493                           fsr2h	equ	0xFDA
 39494                           fsr2l	equ	0xFD9
 39495                           status	equ	0xFD8
 39496                           
 39497 ;; *************** function i2__tdiv_to_l_ *****************
 39498 ;; Defined at:
 39499 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 39500 ;; Parameters:    Size  Location     Type
 39501 ;;  f1              3    0[COMRAM] float 
 39502 ;;  f2              3    3[COMRAM] float 
 39503 ;; Auto vars:     Size  Location     Type
 39504 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 39505 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 39506 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 39507 ;; Return value:  Size  Location     Type
 39508 ;;                  4    0[COMRAM] unsigned long 
 39509 ;; Registers used:
 39510 ;;		wreg, status,2, status,0
 39511 ;; Tracked objects:
 39512 ;;		On entry : 0/0
 39513 ;;		On exit  : 0/0
 39514 ;;		Unchanged: 0/0
 39515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39517 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39518 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39519 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39520 ;;Total ram usage:       15 bytes
 39521 ;; Hardware stack levels used:    1
 39522 ;; This function calls:
 39523 ;;		Nothing
 39524 ;; This function is called by:
 39525 ;;		i2_printf
 39526 ;; This function uses a non-reentrant model
 39527 ;;
 39528                           
 39529                           	psect	text119
 39530  017548                     __ptext119:
 39531                           	opt stack 0
 39532  017548                     i2__tdiv_to_l_:
 39533                           	opt stack 16
 39534                           
 39535                           ;incstack = 0
 39536  017548  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 39537  01754C  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 39538  01754E  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 39539  017550  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 39540  017552  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 39541  017554  E301               	bnc	u1789_41
 39542  017556  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 39543  017558                     u1789_41:
 39544  017558  5007               	movf	??i2__tdiv_to_l_,w,c
 39545  01755A  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 39546  01755C  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 39547  01755E  A4D8               	btfss	status,2,c
 39548  017560  D009               	goto	i2l2153
 39549  017562  0E00               	movlw	0
 39550  017564  6E01               	movwf	?i2__tdiv_to_l_,c
 39551  017566  0E00               	movlw	0
 39552  017568  6E02               	movwf	?i2__tdiv_to_l_+1,c
 39553  01756A  0E00               	movlw	0
 39554  01756C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 39555  01756E  0E00               	movlw	0
 39556  017570  6E04               	movwf	?i2__tdiv_to_l_+3,c
 39557  017572  0012               	return	
 39558  017574                     i2l2153:
 39559  017574  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 39560  017578  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 39561  01757A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 39562  01757C  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 39563  01757E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 39564  017580  E301               	bnc	u1791_41
 39565  017582  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 39566  017584                     u1791_41:
 39567  017584  5007               	movf	??i2__tdiv_to_l_,w,c
 39568  017586  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 39569  017588  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 39570  01758A  A4D8               	btfss	status,2,c
 39571  01758C  D009               	goto	i2l2155
 39572  01758E  0E00               	movlw	0
 39573  017590  6E01               	movwf	?i2__tdiv_to_l_,c
 39574  017592  0E00               	movlw	0
 39575  017594  6E02               	movwf	?i2__tdiv_to_l_+1,c
 39576  017596  0E00               	movlw	0
 39577  017598  6E03               	movwf	?i2__tdiv_to_l_+2,c
 39578  01759A  0E00               	movlw	0
 39579  01759C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 39580  01759E  0012               	return	
 39581  0175A0                     i2l2155:
 39582  0175A0  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 39583  0175A2  0EFF               	movlw	255
 39584  0175A4  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 39585  0175A6  0EFF               	movlw	255
 39586  0175A8  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 39587  0175AA  0E00               	movlw	0
 39588  0175AC  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 39589  0175AE  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 39590  0175B0  0EFF               	movlw	255
 39591  0175B2  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 39592  0175B4  0EFF               	movlw	255
 39593  0175B6  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 39594  0175B8  0E00               	movlw	0
 39595  0175BA  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 39596  0175BC  0E00               	movlw	0
 39597  0175BE  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 39598  0175C0  0E00               	movlw	0
 39599  0175C2  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 39600  0175C4  0E00               	movlw	0
 39601  0175C6  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 39602  0175C8  0E00               	movlw	0
 39603  0175CA  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 39604  0175CC  0E7F               	movlw	127
 39605  0175CE  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 39606  0175D0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 39607  0175D2  0F98               	addlw	152
 39608  0175D4  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 39609  0175D6  0E18               	movlw	24
 39610  0175D8  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 39611  0175DA                     i2l2156:
 39612  0175DA  90D8               	bcf	status,0,c
 39613  0175DC  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 39614  0175DE  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 39615  0175E0  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 39616  0175E2  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 39617  0175E4  5004               	movf	i2__tdiv_to_l_@f2,w,c
 39618  0175E6  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 39619  0175E8  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 39620  0175EA  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 39621  0175EC  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 39622  0175EE  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 39623  0175F0  A0D8               	btfss	status,0,c
 39624  0175F2  D007               	goto	i2l2157
 39625  0175F4  5004               	movf	i2__tdiv_to_l_@f2,w,c
 39626  0175F6  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 39627  0175F8  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 39628  0175FA  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 39629  0175FC  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 39630  0175FE  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 39631  017600  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 39632  017602                     i2l2157:
 39633  017602  90D8               	bcf	status,0,c
 39634  017604  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 39635  017606  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 39636  017608  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 39637  01760A  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 39638  01760C  D7E6               	goto	i2l2156
 39639  01760E  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 39640  017610  D016               	goto	i2l2159
 39641  017612  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 39642  017614  0A80               	xorlw	128
 39643  017616  0F97               	addlw	151
 39644  017618  B0D8               	btfsc	status,0,c
 39645  01761A  D009               	goto	i2l2160
 39646  01761C  0E00               	movlw	0
 39647  01761E  6E01               	movwf	?i2__tdiv_to_l_,c
 39648  017620  0E00               	movlw	0
 39649  017622  6E02               	movwf	?i2__tdiv_to_l_+1,c
 39650  017624  0E00               	movlw	0
 39651  017626  6E03               	movwf	?i2__tdiv_to_l_+2,c
 39652  017628  0E00               	movlw	0
 39653  01762A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 39654  01762C  0012               	return	
 39655  01762E                     i2l2160:
 39656  01762E  90D8               	bcf	status,0,c
 39657  017630  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 39658  017632  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 39659  017634  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 39660  017636  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 39661  017638  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 39662  01763A  D7F9               	goto	i2l2160
 39663  01763C  D015               	goto	i2u1797_40
 39664  01763E                     i2l2159:
 39665  01763E  0E17               	movlw	23
 39666  017640  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 39667  017642  D00F               	goto	i2l2165
 39668  017644  0E00               	movlw	0
 39669  017646  6E01               	movwf	?i2__tdiv_to_l_,c
 39670  017648  0E00               	movlw	0
 39671  01764A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 39672  01764C  0E00               	movlw	0
 39673  01764E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 39674  017650  0E00               	movlw	0
 39675  017652  6E04               	movwf	?i2__tdiv_to_l_+3,c
 39676  017654  0012               	return	
 39677  017656  90D8               	bcf	status,0,c
 39678  017658  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 39679  01765A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 39680  01765C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 39681  01765E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 39682  017660  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 39683  017662                     i2l2165:
 39684  017662  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 39685  017664  A4D8               	btfss	status,2,c
 39686  017666  D7F7               	goto	i2l2166
 39687  017668                     i2u1797_40:
 39688  017668  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 39689  01766C  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 39690  017670  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 39691  017674  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 39692  017678  0012               	return		;funcret
 39693  01767A                     __end_ofi2__tdiv_to_l_:
 39694                           	opt stack 0
 39695                           tosu	equ	0xFFF
 39696                           tosh	equ	0xFFE
 39697                           tosl	equ	0xFFD
 39698                           pclatu	equ	0xFFB
 39699                           pclath	equ	0xFFA
 39700                           tblptru	equ	0xFF8
 39701                           tblptrh	equ	0xFF7
 39702                           tblptrl	equ	0xFF6
 39703                           tablat	equ	0xFF5
 39704                           prodh	equ	0xFF4
 39705                           prodl	equ	0xFF3
 39706                           intcon	equ	0xFF2
 39707                           indf0	equ	0xFEF
 39708                           postinc0	equ	0xFEE
 39709                           fsr0h	equ	0xFEA
 39710                           fsr0l	equ	0xFE9
 39711                           wreg	equ	0xFE8
 39712                           indf1	equ	0xFE7
 39713                           postdec1	equ	0xFE5
 39714                           plusw1	equ	0xFE3
 39715                           fsr1h	equ	0xFE2
 39716                           fsr1l	equ	0xFE1
 39717                           bsr	equ	0xFE0
 39718                           indf2	equ	0xFDF
 39719                           postinc2	equ	0xFDE
 39720                           postdec2	equ	0xFDD
 39721                           plusw2	equ	0xFDB
 39722                           fsr2h	equ	0xFDA
 39723                           fsr2l	equ	0xFD9
 39724                           status	equ	0xFD8
 39725                           
 39726 ;; *************** function i2__div_to_l_ *****************
 39727 ;; Defined at:
 39728 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 39729 ;; Parameters:    Size  Location     Type
 39730 ;;  f1              4    0[COMRAM] unsigned long 
 39731 ;;  f2              4    4[COMRAM] unsigned long 
 39732 ;; Auto vars:     Size  Location     Type
 39733 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 39734 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 39735 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 39736 ;; Return value:  Size  Location     Type
 39737 ;;                  4    0[COMRAM] unsigned long 
 39738 ;; Registers used:
 39739 ;;		wreg, status,2, status,0
 39740 ;; Tracked objects:
 39741 ;;		On entry : 0/0
 39742 ;;		On exit  : 0/0
 39743 ;;		Unchanged: 0/0
 39744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39745 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39746 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39748 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39749 ;;Total ram usage:       14 bytes
 39750 ;; Hardware stack levels used:    1
 39751 ;; This function calls:
 39752 ;;		Nothing
 39753 ;; This function is called by:
 39754 ;;		i2_printf
 39755 ;; This function uses a non-reentrant model
 39756 ;;
 39757                           
 39758                           	psect	text120
 39759  0177A4                     __ptext120:
 39760                           	opt stack 0
 39761  0177A4                     i2__div_to_l_:
 39762                           	opt stack 16
 39763                           
 39764                           ;incstack = 0
 39765  0177A4  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 39766  0177A6  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 39767  0177A8  6E0E               	movwf	i2__div_to_l_@exp1,c
 39768  0177AA  500E               	movf	i2__div_to_l_@exp1,w,c
 39769  0177AC  A4D8               	btfss	status,2,c
 39770  0177AE  D009               	goto	i2l2049
 39771  0177B0  0E00               	movlw	0
 39772  0177B2  6E01               	movwf	?i2__div_to_l_,c
 39773  0177B4  0E00               	movlw	0
 39774  0177B6  6E02               	movwf	?i2__div_to_l_+1,c
 39775  0177B8  0E00               	movlw	0
 39776  0177BA  6E03               	movwf	?i2__div_to_l_+2,c
 39777  0177BC  0E00               	movlw	0
 39778  0177BE  6E04               	movwf	?i2__div_to_l_+3,c
 39779  0177C0  0012               	return	
 39780  0177C2                     i2l2049:
 39781  0177C2  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 39782  0177C4  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 39783  0177C6  6E0D               	movwf	i2__div_to_l_@cntr,c
 39784  0177C8  500D               	movf	i2__div_to_l_@cntr,w,c
 39785  0177CA  A4D8               	btfss	status,2,c
 39786  0177CC  D009               	goto	i2l2051
 39787  0177CE  0E00               	movlw	0
 39788  0177D0  6E01               	movwf	?i2__div_to_l_,c
 39789  0177D2  0E00               	movlw	0
 39790  0177D4  6E02               	movwf	?i2__div_to_l_+1,c
 39791  0177D6  0E00               	movlw	0
 39792  0177D8  6E03               	movwf	?i2__div_to_l_+2,c
 39793  0177DA  0E00               	movlw	0
 39794  0177DC  6E04               	movwf	?i2__div_to_l_+3,c
 39795  0177DE  0012               	return	
 39796  0177E0                     i2l2051:
 39797  0177E0  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 39798  0177E2  0EFF               	movlw	255
 39799  0177E4  1601               	andwf	i2__div_to_l_@f1,f,c
 39800  0177E6  0EFF               	movlw	255
 39801  0177E8  1602               	andwf	i2__div_to_l_@f1+1,f,c
 39802  0177EA  0EFF               	movlw	255
 39803  0177EC  1603               	andwf	i2__div_to_l_@f1+2,f,c
 39804  0177EE  0E00               	movlw	0
 39805  0177F0  1604               	andwf	i2__div_to_l_@f1+3,f,c
 39806  0177F2  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 39807  0177F4  0EFF               	movlw	255
 39808  0177F6  1605               	andwf	i2__div_to_l_@f2,f,c
 39809  0177F8  0EFF               	movlw	255
 39810  0177FA  1606               	andwf	i2__div_to_l_@f2+1,f,c
 39811  0177FC  0EFF               	movlw	255
 39812  0177FE  1607               	andwf	i2__div_to_l_@f2+2,f,c
 39813  017800  0E00               	movlw	0
 39814  017802  1608               	andwf	i2__div_to_l_@f2+3,f,c
 39815  017804  0E00               	movlw	0
 39816  017806  6E09               	movwf	i2__div_to_l_@quot,c
 39817  017808  0E00               	movlw	0
 39818  01780A  6E0A               	movwf	i2__div_to_l_@quot+1,c
 39819  01780C  0E00               	movlw	0
 39820  01780E  6E0B               	movwf	i2__div_to_l_@quot+2,c
 39821  017810  0E00               	movlw	0
 39822  017812  6E0C               	movwf	i2__div_to_l_@quot+3,c
 39823  017814  0E7F               	movlw	127
 39824  017816  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 39825  017818  500D               	movf	i2__div_to_l_@cntr,w,c
 39826  01781A  0FA0               	addlw	160
 39827  01781C  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 39828  01781E  0E20               	movlw	32
 39829  017820  6E0D               	movwf	i2__div_to_l_@cntr,c
 39830  017822  90D8               	bcf	status,0,c
 39831  017824  3609               	rlcf	i2__div_to_l_@quot,f,c
 39832  017826  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 39833  017828  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 39834  01782A  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 39835  01782C  5005               	movf	i2__div_to_l_@f2,w,c
 39836  01782E  5C01               	subwf	i2__div_to_l_@f1,w,c
 39837  017830  5006               	movf	i2__div_to_l_@f2+1,w,c
 39838  017832  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 39839  017834  5007               	movf	i2__div_to_l_@f2+2,w,c
 39840  017836  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 39841  017838  5008               	movf	i2__div_to_l_@f2+3,w,c
 39842  01783A  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 39843  01783C  A0D8               	btfss	status,0,c
 39844  01783E  D009               	goto	i2l2053
 39845  017840  5005               	movf	i2__div_to_l_@f2,w,c
 39846  017842  5E01               	subwf	i2__div_to_l_@f1,f,c
 39847  017844  5006               	movf	i2__div_to_l_@f2+1,w,c
 39848  017846  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 39849  017848  5007               	movf	i2__div_to_l_@f2+2,w,c
 39850  01784A  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 39851  01784C  5008               	movf	i2__div_to_l_@f2+3,w,c
 39852  01784E  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 39853  017850  8009               	bsf	i2__div_to_l_@quot,0,c
 39854  017852                     i2l2053:
 39855  017852  90D8               	bcf	status,0,c
 39856  017854  3601               	rlcf	i2__div_to_l_@f1,f,c
 39857  017856  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 39858  017858  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 39859  01785A  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 39860  01785C  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 39861  01785E  D7E1               	goto	i2l2052
 39862  017860  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 39863  017862  D016               	goto	i2l2055
 39864  017864  500E               	movf	i2__div_to_l_@exp1,w,c
 39865  017866  0A80               	xorlw	128
 39866  017868  0F9F               	addlw	159
 39867  01786A  B0D8               	btfsc	status,0,c
 39868  01786C  D009               	goto	i2l2056
 39869  01786E  0E00               	movlw	0
 39870  017870  6E01               	movwf	?i2__div_to_l_,c
 39871  017872  0E00               	movlw	0
 39872  017874  6E02               	movwf	?i2__div_to_l_+1,c
 39873  017876  0E00               	movlw	0
 39874  017878  6E03               	movwf	?i2__div_to_l_+2,c
 39875  01787A  0E00               	movlw	0
 39876  01787C  6E04               	movwf	?i2__div_to_l_+3,c
 39877  01787E  0012               	return	
 39878  017880                     i2l2056:
 39879  017880  90D8               	bcf	status,0,c
 39880  017882  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 39881  017884  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 39882  017886  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 39883  017888  3209               	rrcf	i2__div_to_l_@quot,f,c
 39884  01788A  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 39885  01788C  D7F9               	goto	i2l2056
 39886  01788E  D015               	goto	i2u1788_40
 39887  017890                     i2l2055:
 39888  017890  0E1F               	movlw	31
 39889  017892  640E               	cpfsgt	i2__div_to_l_@exp1,c
 39890  017894  D00F               	goto	i2l2061
 39891  017896  0E00               	movlw	0
 39892  017898  6E01               	movwf	?i2__div_to_l_,c
 39893  01789A  0E00               	movlw	0
 39894  01789C  6E02               	movwf	?i2__div_to_l_+1,c
 39895  01789E  0E00               	movlw	0
 39896  0178A0  6E03               	movwf	?i2__div_to_l_+2,c
 39897  0178A2  0E00               	movlw	0
 39898  0178A4  6E04               	movwf	?i2__div_to_l_+3,c
 39899  0178A6  0012               	return	
 39900  0178A8  90D8               	bcf	status,0,c
 39901  0178AA  3609               	rlcf	i2__div_to_l_@quot,f,c
 39902  0178AC  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 39903  0178AE  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 39904  0178B0  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 39905  0178B2  060E               	decf	i2__div_to_l_@exp1,f,c
 39906  0178B4                     i2l2061:
 39907  0178B4  500E               	movf	i2__div_to_l_@exp1,w,c
 39908  0178B6  A4D8               	btfss	status,2,c
 39909  0178B8  D7F7               	goto	i2l2062
 39910  0178BA                     i2u1788_40:
 39911  0178BA  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 39912  0178BE  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 39913  0178C2  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 39914  0178C6  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 39915  0178CA  0012               	return		;funcret
 39916  0178CC                     __end_ofi2__div_to_l_:
 39917                           	opt stack 0
 39918                           tosu	equ	0xFFF
 39919                           tosh	equ	0xFFE
 39920                           tosl	equ	0xFFD
 39921                           pclatu	equ	0xFFB
 39922                           pclath	equ	0xFFA
 39923                           tblptru	equ	0xFF8
 39924                           tblptrh	equ	0xFF7
 39925                           tblptrl	equ	0xFF6
 39926                           tablat	equ	0xFF5
 39927                           prodh	equ	0xFF4
 39928                           prodl	equ	0xFF3
 39929                           intcon	equ	0xFF2
 39930                           indf0	equ	0xFEF
 39931                           postinc0	equ	0xFEE
 39932                           fsr0h	equ	0xFEA
 39933                           fsr0l	equ	0xFE9
 39934                           wreg	equ	0xFE8
 39935                           indf1	equ	0xFE7
 39936                           postdec1	equ	0xFE5
 39937                           plusw1	equ	0xFE3
 39938                           fsr1h	equ	0xFE2
 39939                           fsr1l	equ	0xFE1
 39940                           bsr	equ	0xFE0
 39941                           indf2	equ	0xFDF
 39942                           postinc2	equ	0xFDE
 39943                           postdec2	equ	0xFDD
 39944                           plusw2	equ	0xFDB
 39945                           fsr2h	equ	0xFDA
 39946                           fsr2l	equ	0xFD9
 39947                           status	equ	0xFD8
 39948                           
 39949 ;; *************** function i2___wmul *****************
 39950 ;; Defined at:
 39951 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 39952 ;; Parameters:    Size  Location     Type
 39953 ;;  multiplier      2    0[COMRAM] unsigned int 
 39954 ;;  multiplicand    2    2[COMRAM] unsigned int 
 39955 ;; Auto vars:     Size  Location     Type
 39956 ;;  __wmul          2    4[COMRAM] unsigned int 
 39957 ;; Return value:  Size  Location     Type
 39958 ;;                  2    0[COMRAM] unsigned int 
 39959 ;; Registers used:
 39960 ;;		wreg, status,2, status,0, prodl, prodh
 39961 ;; Tracked objects:
 39962 ;;		On entry : 0/0
 39963 ;;		On exit  : 0/0
 39964 ;;		Unchanged: 0/0
 39965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39970 ;;Total ram usage:        6 bytes
 39971 ;; Hardware stack levels used:    1
 39972 ;; This function calls:
 39973 ;;		Nothing
 39974 ;; This function is called by:
 39975 ;;		i2_printf
 39976 ;; This function uses a non-reentrant model
 39977 ;;
 39978                           
 39979                           	psect	text121
 39980  0196AE                     __ptext121:
 39981                           	opt stack 0
 39982  0196AE                     i2___wmul:
 39983                           	opt stack 16
 39984                           
 39985                           ;incstack = 0
 39986  0196AE  5001               	movf	i2___wmul@multiplier,w,c
 39987  0196B0  0203               	mulwf	i2___wmul@multiplicand,c
 39988  0196B2  CFF3 F005          	movff	prodl,i2___wmul@product
 39989  0196B6  CFF4 F006          	movff	prodh,i2___wmul@product+1
 39990  0196BA  5001               	movf	i2___wmul@multiplier,w,c
 39991  0196BC  0204               	mulwf	i2___wmul@multiplicand+1,c
 39992  0196BE  50F3               	movf	prodl,w,c
 39993  0196C0  2606               	addwf	i2___wmul@product+1,f,c
 39994  0196C2  5002               	movf	i2___wmul@multiplier+1,w,c
 39995  0196C4  0203               	mulwf	i2___wmul@multiplicand,c
 39996  0196C6  50F3               	movf	prodl,w,c
 39997  0196C8  2606               	addwf	i2___wmul@product+1,f,c
 39998  0196CA  C005  F001         	movff	i2___wmul@product,?i2___wmul
 39999  0196CE  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 40000  0196D2  0012               	return	
 40001  0196D4                     __end_ofi2___wmul:
 40002                           	opt stack 0
 40003                           tosu	equ	0xFFF
 40004                           tosh	equ	0xFFE
 40005                           tosl	equ	0xFFD
 40006                           pclatu	equ	0xFFB
 40007                           pclath	equ	0xFFA
 40008                           tblptru	equ	0xFF8
 40009                           tblptrh	equ	0xFF7
 40010                           tblptrl	equ	0xFF6
 40011                           tablat	equ	0xFF5
 40012                           prodh	equ	0xFF4
 40013                           prodl	equ	0xFF3
 40014                           intcon	equ	0xFF2
 40015                           indf0	equ	0xFEF
 40016                           postinc0	equ	0xFEE
 40017                           fsr0h	equ	0xFEA
 40018                           fsr0l	equ	0xFE9
 40019                           wreg	equ	0xFE8
 40020                           indf1	equ	0xFE7
 40021                           postdec1	equ	0xFE5
 40022                           plusw1	equ	0xFE3
 40023                           fsr1h	equ	0xFE2
 40024                           fsr1l	equ	0xFE1
 40025                           bsr	equ	0xFE0
 40026                           indf2	equ	0xFDF
 40027                           postinc2	equ	0xFDE
 40028                           postdec2	equ	0xFDD
 40029                           plusw2	equ	0xFDB
 40030                           fsr2h	equ	0xFDA
 40031                           fsr2l	equ	0xFD9
 40032                           status	equ	0xFD8
 40033                           
 40034 ;; *************** function i2___llmod *****************
 40035 ;; Defined at:
 40036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 40037 ;; Parameters:    Size  Location     Type
 40038 ;;  dividend        4   13[COMRAM] unsigned long 
 40039 ;;  divisor         4   17[COMRAM] unsigned long 
 40040 ;; Auto vars:     Size  Location     Type
 40041 ;;  __llmod         1   21[COMRAM] unsigned char 
 40042 ;; Return value:  Size  Location     Type
 40043 ;;                  4   13[COMRAM] unsigned long 
 40044 ;; Registers used:
 40045 ;;		wreg, status,2, status,0
 40046 ;; Tracked objects:
 40047 ;;		On entry : 0/0
 40048 ;;		On exit  : 0/0
 40049 ;;		Unchanged: 0/0
 40050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40051 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40054 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40055 ;;Total ram usage:        9 bytes
 40056 ;; Hardware stack levels used:    1
 40057 ;; This function calls:
 40058 ;;		Nothing
 40059 ;; This function is called by:
 40060 ;;		i2_printf
 40061 ;; This function uses a non-reentrant model
 40062 ;;
 40063                           
 40064                           	psect	text122
 40065  018BC0                     __ptext122:
 40066                           	opt stack 0
 40067  018BC0                     i2___llmod:
 40068                           	opt stack 16
 40069                           
 40070                           ;incstack = 0
 40071  018BC0  5012               	movf	i2___llmod@divisor,w,c
 40072  018BC2  1013               	iorwf	i2___llmod@divisor+1,w,c
 40073  018BC4  1014               	iorwf	i2___llmod@divisor+2,w,c
 40074  018BC6  1015               	iorwf	i2___llmod@divisor+3,w,c
 40075  018BC8  B4D8               	btfsc	status,2,c
 40076  018BCA  D024               	goto	i2l2254
 40077  018BCC  0E01               	movlw	1
 40078  018BCE  6E16               	movwf	i2___llmod@counter,c
 40079  018BD0  D006               	goto	i2l2249
 40080  018BD2  90D8               	bcf	status,0,c
 40081  018BD4  3612               	rlcf	i2___llmod@divisor,f,c
 40082  018BD6  3613               	rlcf	i2___llmod@divisor+1,f,c
 40083  018BD8  3614               	rlcf	i2___llmod@divisor+2,f,c
 40084  018BDA  3615               	rlcf	i2___llmod@divisor+3,f,c
 40085  018BDC  2A16               	incf	i2___llmod@counter,f,c
 40086  018BDE                     i2l2249:
 40087  018BDE  AE15               	btfss	i2___llmod@divisor+3,7,c
 40088  018BE0  D7F8               	goto	i2l2250
 40089  018BE2                     i2u1804_40:
 40090  018BE2  5012               	movf	i2___llmod@divisor,w,c
 40091  018BE4  5C0E               	subwf	i2___llmod@dividend,w,c
 40092  018BE6  5013               	movf	i2___llmod@divisor+1,w,c
 40093  018BE8  580F               	subwfb	i2___llmod@dividend+1,w,c
 40094  018BEA  5014               	movf	i2___llmod@divisor+2,w,c
 40095  018BEC  5810               	subwfb	i2___llmod@dividend+2,w,c
 40096  018BEE  5015               	movf	i2___llmod@divisor+3,w,c
 40097  018BF0  5811               	subwfb	i2___llmod@dividend+3,w,c
 40098  018BF2  A0D8               	btfss	status,0,c
 40099  018BF4  D008               	goto	i2l2253
 40100  018BF6  5012               	movf	i2___llmod@divisor,w,c
 40101  018BF8  5E0E               	subwf	i2___llmod@dividend,f,c
 40102  018BFA  5013               	movf	i2___llmod@divisor+1,w,c
 40103  018BFC  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 40104  018BFE  5014               	movf	i2___llmod@divisor+2,w,c
 40105  018C00  5A10               	subwfb	i2___llmod@dividend+2,f,c
 40106  018C02  5015               	movf	i2___llmod@divisor+3,w,c
 40107  018C04  5A11               	subwfb	i2___llmod@dividend+3,f,c
 40108  018C06                     i2l2253:
 40109  018C06  90D8               	bcf	status,0,c
 40110  018C08  3215               	rrcf	i2___llmod@divisor+3,f,c
 40111  018C0A  3214               	rrcf	i2___llmod@divisor+2,f,c
 40112  018C0C  3213               	rrcf	i2___llmod@divisor+1,f,c
 40113  018C0E  3212               	rrcf	i2___llmod@divisor,f,c
 40114  018C10  2E16               	decfsz	i2___llmod@counter,f,c
 40115  018C12  D7E7               	goto	i2u1804_40
 40116  018C14                     i2l2254:
 40117  018C14  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 40118  018C18  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 40119  018C1C  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 40120  018C20  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 40121  018C24  0012               	return		;funcret
 40122  018C26                     __end_ofi2___llmod:
 40123                           	opt stack 0
 40124                           tosu	equ	0xFFF
 40125                           tosh	equ	0xFFE
 40126                           tosl	equ	0xFFD
 40127                           pclatu	equ	0xFFB
 40128                           pclath	equ	0xFFA
 40129                           tblptru	equ	0xFF8
 40130                           tblptrh	equ	0xFF7
 40131                           tblptrl	equ	0xFF6
 40132                           tablat	equ	0xFF5
 40133                           prodh	equ	0xFF4
 40134                           prodl	equ	0xFF3
 40135                           intcon	equ	0xFF2
 40136                           indf0	equ	0xFEF
 40137                           postinc0	equ	0xFEE
 40138                           fsr0h	equ	0xFEA
 40139                           fsr0l	equ	0xFE9
 40140                           wreg	equ	0xFE8
 40141                           indf1	equ	0xFE7
 40142                           postdec1	equ	0xFE5
 40143                           plusw1	equ	0xFE3
 40144                           fsr1h	equ	0xFE2
 40145                           fsr1l	equ	0xFE1
 40146                           bsr	equ	0xFE0
 40147                           indf2	equ	0xFDF
 40148                           postinc2	equ	0xFDE
 40149                           postdec2	equ	0xFDD
 40150                           plusw2	equ	0xFDB
 40151                           fsr2h	equ	0xFDA
 40152                           fsr2l	equ	0xFD9
 40153                           status	equ	0xFD8
 40154                           
 40155 ;; *************** function i2___lldiv *****************
 40156 ;; Defined at:
 40157 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 40158 ;; Parameters:    Size  Location     Type
 40159 ;;  dividend        4    0[COMRAM] unsigned long 
 40160 ;;  divisor         4    4[COMRAM] unsigned long 
 40161 ;; Auto vars:     Size  Location     Type
 40162 ;;  __lldiv         4    8[COMRAM] unsigned long 
 40163 ;;  __lldiv         1   12[COMRAM] unsigned char 
 40164 ;; Return value:  Size  Location     Type
 40165 ;;                  4    0[COMRAM] unsigned long 
 40166 ;; Registers used:
 40167 ;;		wreg, status,2, status,0
 40168 ;; Tracked objects:
 40169 ;;		On entry : 0/0
 40170 ;;		On exit  : 0/0
 40171 ;;		Unchanged: 0/0
 40172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40173 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40174 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40176 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40177 ;;Total ram usage:       13 bytes
 40178 ;; Hardware stack levels used:    1
 40179 ;; This function calls:
 40180 ;;		Nothing
 40181 ;; This function is called by:
 40182 ;;		i2_printf
 40183 ;; This function uses a non-reentrant model
 40184 ;;
 40185                           
 40186                           	psect	text123
 40187  0187BE                     __ptext123:
 40188                           	opt stack 0
 40189  0187BE                     i2___lldiv:
 40190                           	opt stack 16
 40191                           
 40192                           ;incstack = 0
 40193  0187BE  0E00               	movlw	0
 40194  0187C0  6E09               	movwf	i2___lldiv@quotient,c
 40195  0187C2  0E00               	movlw	0
 40196  0187C4  6E0A               	movwf	i2___lldiv@quotient+1,c
 40197  0187C6  0E00               	movlw	0
 40198  0187C8  6E0B               	movwf	i2___lldiv@quotient+2,c
 40199  0187CA  0E00               	movlw	0
 40200  0187CC  6E0C               	movwf	i2___lldiv@quotient+3,c
 40201  0187CE  5005               	movf	i2___lldiv@divisor,w,c
 40202  0187D0  1006               	iorwf	i2___lldiv@divisor+1,w,c
 40203  0187D2  1007               	iorwf	i2___lldiv@divisor+2,w,c
 40204  0187D4  1008               	iorwf	i2___lldiv@divisor+3,w,c
 40205  0187D6  B4D8               	btfsc	status,2,c
 40206  0187D8  D02A               	goto	i2l2244
 40207  0187DA  0E01               	movlw	1
 40208  0187DC  6E0D               	movwf	i2___lldiv@counter,c
 40209  0187DE  D006               	goto	i2l2239
 40210  0187E0  90D8               	bcf	status,0,c
 40211  0187E2  3605               	rlcf	i2___lldiv@divisor,f,c
 40212  0187E4  3606               	rlcf	i2___lldiv@divisor+1,f,c
 40213  0187E6  3607               	rlcf	i2___lldiv@divisor+2,f,c
 40214  0187E8  3608               	rlcf	i2___lldiv@divisor+3,f,c
 40215  0187EA  2A0D               	incf	i2___lldiv@counter,f,c
 40216  0187EC                     i2l2239:
 40217  0187EC  AE08               	btfss	i2___lldiv@divisor+3,7,c
 40218  0187EE  D7F8               	goto	i2l2240
 40219  0187F0                     i2u1801_40:
 40220  0187F0  90D8               	bcf	status,0,c
 40221  0187F2  3609               	rlcf	i2___lldiv@quotient,f,c
 40222  0187F4  360A               	rlcf	i2___lldiv@quotient+1,f,c
 40223  0187F6  360B               	rlcf	i2___lldiv@quotient+2,f,c
 40224  0187F8  360C               	rlcf	i2___lldiv@quotient+3,f,c
 40225  0187FA  5005               	movf	i2___lldiv@divisor,w,c
 40226  0187FC  5C01               	subwf	i2___lldiv@dividend,w,c
 40227  0187FE  5006               	movf	i2___lldiv@divisor+1,w,c
 40228  018800  5802               	subwfb	i2___lldiv@dividend+1,w,c
 40229  018802  5007               	movf	i2___lldiv@divisor+2,w,c
 40230  018804  5803               	subwfb	i2___lldiv@dividend+2,w,c
 40231  018806  5008               	movf	i2___lldiv@divisor+3,w,c
 40232  018808  5804               	subwfb	i2___lldiv@dividend+3,w,c
 40233  01880A  A0D8               	btfss	status,0,c
 40234  01880C  D009               	goto	i2l2243
 40235  01880E  5005               	movf	i2___lldiv@divisor,w,c
 40236  018810  5E01               	subwf	i2___lldiv@dividend,f,c
 40237  018812  5006               	movf	i2___lldiv@divisor+1,w,c
 40238  018814  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 40239  018816  5007               	movf	i2___lldiv@divisor+2,w,c
 40240  018818  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 40241  01881A  5008               	movf	i2___lldiv@divisor+3,w,c
 40242  01881C  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 40243  01881E  8009               	bsf	i2___lldiv@quotient,0,c
 40244  018820                     i2l2243:
 40245  018820  90D8               	bcf	status,0,c
 40246  018822  3208               	rrcf	i2___lldiv@divisor+3,f,c
 40247  018824  3207               	rrcf	i2___lldiv@divisor+2,f,c
 40248  018826  3206               	rrcf	i2___lldiv@divisor+1,f,c
 40249  018828  3205               	rrcf	i2___lldiv@divisor,f,c
 40250  01882A  2E0D               	decfsz	i2___lldiv@counter,f,c
 40251  01882C  D7E1               	goto	i2u1801_40
 40252  01882E                     i2l2244:
 40253  01882E  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 40254  018832  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 40255  018836  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 40256  01883A  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 40257  01883E  0012               	return		;funcret
 40258  018840                     __end_ofi2___lldiv:
 40259                           	opt stack 0
 40260                           tosu	equ	0xFFF
 40261                           tosh	equ	0xFFE
 40262                           tosl	equ	0xFFD
 40263                           pclatu	equ	0xFFB
 40264                           pclath	equ	0xFFA
 40265                           tblptru	equ	0xFF8
 40266                           tblptrh	equ	0xFF7
 40267                           tblptrl	equ	0xFF6
 40268                           tablat	equ	0xFF5
 40269                           prodh	equ	0xFF4
 40270                           prodl	equ	0xFF3
 40271                           intcon	equ	0xFF2
 40272                           indf0	equ	0xFEF
 40273                           postinc0	equ	0xFEE
 40274                           fsr0h	equ	0xFEA
 40275                           fsr0l	equ	0xFE9
 40276                           wreg	equ	0xFE8
 40277                           indf1	equ	0xFE7
 40278                           postdec1	equ	0xFE5
 40279                           plusw1	equ	0xFE3
 40280                           fsr1h	equ	0xFE2
 40281                           fsr1l	equ	0xFE1
 40282                           bsr	equ	0xFE0
 40283                           indf2	equ	0xFDF
 40284                           postinc2	equ	0xFDE
 40285                           postdec2	equ	0xFDD
 40286                           plusw2	equ	0xFDB
 40287                           fsr2h	equ	0xFDA
 40288                           fsr2l	equ	0xFD9
 40289                           status	equ	0xFD8
 40290                           
 40291 ;; *************** function _ADCC_ThresholdISR *****************
 40292 ;; Defined at:
 40293 ;;		line 298 in file "mcc_generated_files/adcc.c"
 40294 ;; Parameters:    Size  Location     Type
 40295 ;;		None
 40296 ;; Auto vars:     Size  Location     Type
 40297 ;;		None
 40298 ;; Return value:  Size  Location     Type
 40299 ;;                  1    wreg      void 
 40300 ;; Registers used:
 40301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40302 ;; Tracked objects:
 40303 ;;		On entry : 0/0
 40304 ;;		On exit  : 0/0
 40305 ;;		Unchanged: 0/0
 40306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40311 ;;Total ram usage:        0 bytes
 40312 ;; Hardware stack levels used:    1
 40313 ;; Hardware stack levels required when called:    7
 40314 ;; This function calls:
 40315 ;;		Absolute function
 40316 ;;		_ADCC_DefaultInterruptHandler
 40317 ;;		_ADCPostProcessingCallback
 40318 ;; This function is called by:
 40319 ;;		_INTERRUPT_InterruptManagerHigh
 40320 ;; This function uses a non-reentrant model
 40321 ;;
 40322                           
 40323                           	psect	text124
 40324  019614                     __ptext124:
 40325                           	opt stack 0
 40326  019614                     _ADCC_ThresholdISR:
 40327                           	opt stack 11
 40328                           
 40329                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 40330                           
 40331                           ;incstack = 0
 40332  019614  010E               	movlb	14	; () banked
 40333  019616  9334               	bcf	52,1,b	;volatile
 40334                           
 40335                           ; BSR set to: 14
 40336                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 40337  019618  0102               	movlb	2	; () banked
 40338  01961A  5134               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 40339  01961C  1135               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 40340  01961E  1136               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 40341  019620  B4D8               	btfsc	status,2,c
 40342  019622  0012               	return	
 40343                           
 40344                           ; BSR set to: 2
 40345                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 40346  019624  D801               	call	i2u2745_48
 40347  019626  0012               	return	
 40348  019628                     i2u2745_48:
 40349  019628  0005               	push	
 40350  01962A  6EFA               	movwf	pclath,c
 40351  01962C  5134               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 40352  01962E  6EFD               	movwf	tosl,c
 40353  019630  5135               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 40354  019632  6EFE               	movwf	tosh,c
 40355  019634  5136               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 40356  019636  6EFF               	movwf	tosu,c
 40357  019638  50FA               	movf	pclath,w,c
 40358  01963A  0012               	return		;indir
 40359  01963C                     __end_of_ADCC_ThresholdISR:
 40360                           	opt stack 0
 40361                           tosu	equ	0xFFF
 40362                           tosh	equ	0xFFE
 40363                           tosl	equ	0xFFD
 40364                           pclatu	equ	0xFFB
 40365                           pclath	equ	0xFFA
 40366                           tblptru	equ	0xFF8
 40367                           tblptrh	equ	0xFF7
 40368                           tblptrl	equ	0xFF6
 40369                           tablat	equ	0xFF5
 40370                           prodh	equ	0xFF4
 40371                           prodl	equ	0xFF3
 40372                           intcon	equ	0xFF2
 40373                           indf0	equ	0xFEF
 40374                           postinc0	equ	0xFEE
 40375                           fsr0h	equ	0xFEA
 40376                           fsr0l	equ	0xFE9
 40377                           wreg	equ	0xFE8
 40378                           indf1	equ	0xFE7
 40379                           postdec1	equ	0xFE5
 40380                           plusw1	equ	0xFE3
 40381                           fsr1h	equ	0xFE2
 40382                           fsr1l	equ	0xFE1
 40383                           bsr	equ	0xFE0
 40384                           indf2	equ	0xFDF
 40385                           postinc2	equ	0xFDE
 40386                           postdec2	equ	0xFDD
 40387                           plusw2	equ	0xFDB
 40388                           fsr2h	equ	0xFDA
 40389                           fsr2l	equ	0xFD9
 40390                           status	equ	0xFD8
 40391                           
 40392 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 40393 ;; Defined at:
 40394 ;;		line 310 in file "mcc_generated_files/adcc.c"
 40395 ;; Parameters:    Size  Location     Type
 40396 ;;		None
 40397 ;; Auto vars:     Size  Location     Type
 40398 ;;		None
 40399 ;; Return value:  Size  Location     Type
 40400 ;;                  1    wreg      void 
 40401 ;; Registers used:
 40402 ;;		None
 40403 ;; Tracked objects:
 40404 ;;		On entry : 0/0
 40405 ;;		On exit  : 0/0
 40406 ;;		Unchanged: 0/0
 40407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40412 ;;Total ram usage:        0 bytes
 40413 ;; Hardware stack levels used:    1
 40414 ;; This function calls:
 40415 ;;		Nothing
 40416 ;; This function is called by:
 40417 ;;		_ADCC_Initialize
 40418 ;;		_ADCC_ThresholdISR
 40419 ;; This function uses a non-reentrant model
 40420 ;;
 40421                           
 40422                           	psect	text125
 40423  019A14                     __ptext125:
 40424                           	opt stack 0
 40425  019A14                     _ADCC_DefaultInterruptHandler:
 40426                           	opt stack 17
 40427                           
 40428                           ;incstack = 0
 40429  019A14  0012               	return		;funcret
 40430  019A16                     __end_of_ADCC_DefaultInterruptHandler:
 40431                           	opt stack 0
 40432                           tosu	equ	0xFFF
 40433                           tosh	equ	0xFFE
 40434                           tosl	equ	0xFFD
 40435                           pclatu	equ	0xFFB
 40436                           pclath	equ	0xFFA
 40437                           tblptru	equ	0xFF8
 40438                           tblptrh	equ	0xFF7
 40439                           tblptrl	equ	0xFF6
 40440                           tablat	equ	0xFF5
 40441                           prodh	equ	0xFF4
 40442                           prodl	equ	0xFF3
 40443                           intcon	equ	0xFF2
 40444                           indf0	equ	0xFEF
 40445                           postinc0	equ	0xFEE
 40446                           fsr0h	equ	0xFEA
 40447                           fsr0l	equ	0xFE9
 40448                           wreg	equ	0xFE8
 40449                           indf1	equ	0xFE7
 40450                           postdec1	equ	0xFE5
 40451                           plusw1	equ	0xFE3
 40452                           fsr1h	equ	0xFE2
 40453                           fsr1l	equ	0xFE1
 40454                           bsr	equ	0xFE0
 40455                           indf2	equ	0xFDF
 40456                           postinc2	equ	0xFDE
 40457                           postdec2	equ	0xFDD
 40458                           plusw2	equ	0xFDB
 40459                           fsr2h	equ	0xFDA
 40460                           fsr2l	equ	0xFD9
 40461                           status	equ	0xFD8
 40462                           
 40463 ;; *************** function _ADCPostProcessingCallback *****************
 40464 ;; Defined at:
 40465 ;;		line 230 in file "main.c"
 40466 ;; Parameters:    Size  Location     Type
 40467 ;;		None
 40468 ;; Auto vars:     Size  Location     Type
 40469 ;;  current_adc_    1  117[BANK0 ] enum E17501
 40470 ;; Return value:  Size  Location     Type
 40471 ;;                  1    wreg      void 
 40472 ;; Registers used:
 40473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40474 ;; Tracked objects:
 40475 ;;		On entry : 0/0
 40476 ;;		On exit  : 0/0
 40477 ;;		Unchanged: 0/0
 40478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40480 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40482 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40483 ;;Total ram usage:       21 bytes
 40484 ;; Hardware stack levels used:    1
 40485 ;; Hardware stack levels required when called:    6
 40486 ;; This function calls:
 40487 ;;		_ADCC_GetConversionResult
 40488 ;;		_ADCC_GetFilterValue
 40489 ;;		_ADCC_HasAccumulatorOverflowed
 40490 ;;		_ADCC_StopConversion
 40491 ;;		_abs
 40492 ;;		_currentMeasuredToPeak
 40493 ;;		_peakToRMS
 40494 ;;		i2_TMR7_StopTimer
 40495 ;;		i2___fladd
 40496 ;;		i2___fldiv
 40497 ;;		i2___flge
 40498 ;;		i2___flmul
 40499 ;;		i2___flneg
 40500 ;;		i2___fltol
 40501 ;;		i2___xxtofl
 40502 ;; This function is called by:
 40503 ;;		_main
 40504 ;;		_ADCC_ThresholdISR
 40505 ;; This function uses a non-reentrant model
 40506 ;;
 40507                           
 40508                           	psect	text126
 40509  01312C                     __ptext126:
 40510                           	opt stack 0
 40511  01312C                     _ADCPostProcessingCallback:
 40512                           	opt stack 11
 40513                           
 40514                           ;main.c: 233: ADCC_StopConversion();
 40515                           
 40516                           ;incstack = 0
 40517  01312C  EC03  F0CD         	call	_ADCC_StopConversion	;wreg free
 40518                           
 40519                           ;main.c: 236: adcc_channel_t current_adc_channel = ADPCH;
 40520  013130  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 40521                           
 40522                           ;main.c: 239: switch (current_adc_channel) {
 40523  013134  EFEA  F09D         	goto	i2l1154
 40524  013138                     
 40525                           ;main.c: 243: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 40526  013138  EC51  F0CC         	call	_ADCC_GetConversionResult	;wreg free
 40527  01313C  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 40528  013140  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 40529  013144  6A07               	clrf	i2___xxtofl@val+2,c
 40530  013146  6A08               	clrf	i2___xxtofl@val+3,c
 40531  013148  0E00               	movlw	0
 40532  01314A  ECC7  F0B8         	call	i2___xxtofl
 40533  01314E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 40534  013152  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 40535  013156  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 40536  01315A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 40537  01315E  0E0D               	movlw	13
 40538  013160  6E34               	movwf	i2___flmul@a,c
 40539  013162  0E68               	movlw	104
 40540  013164  6E35               	movwf	i2___flmul@a+1,c
 40541  013166  0E53               	movlw	83
 40542  013168  6E36               	movwf	i2___flmul@a+2,c
 40543  01316A  0E3B               	movlw	59
 40544  01316C  6E37               	movwf	i2___flmul@a+3,c
 40545  01316E  ECF2  F0A5         	call	i2___flmul	;wreg free
 40546  013172  C030  F1DB         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 40547  013176  C031  F1DC         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 40548  01317A  C032  F1DD         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 40549  01317E  C033  F1DE         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 40550                           
 40551                           ;main.c: 245: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 40552  013182  0E0A               	movlw	10
 40553  013184  6E34               	movwf	i2___flge@ff1,c
 40554  013186  0ED7               	movlw	215
 40555  013188  6E35               	movwf	i2___flge@ff1+1,c
 40556  01318A  0E23               	movlw	35
 40557  01318C  6E36               	movwf	i2___flge@ff1+2,c
 40558  01318E  0E3C               	movlw	60
 40559  013190  6E37               	movwf	i2___flge@ff1+3,c
 40560  013192  C1DB  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 40561  013196  C1DC  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 40562  01319A  C1DD  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 40563  01319E  C1DE  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 40564  0131A2  EC89  F0BD         	call	i2___flge	;wreg free
 40565  0131A6  A0D8               	btfss	status,0,c
 40566  0131A8  D005               	goto	i2u1814_40
 40567  0131AA  ECD9  F0CC         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 40568  0131AE  0900               	iorlw	0
 40569  0131B0  B4D8               	btfsc	status,2,c
 40570  0131B2  D007               	goto	i2l1156
 40571  0131B4                     i2u1814_40:
 40572                           
 40573                           ;main.c: 247: LATFbits.LATF3 = 1;
 40574  0131B4  867E               	bsf	3966,3,c	;volatile
 40575                           
 40576                           ;main.c: 248: adc_error_flag = 1;
 40577  0131B6  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 40578                           
 40579                           ;main.c: 250: PIE5bits.TMR7IE = 0;
 40580  0131B8  010E               	movlb	14	; () banked
 40581  0131BA  9D2E               	bcf	46,6,b	;volatile
 40582                           
 40583                           ; BSR set to: 14
 40584                           ;main.c: 251: TMR7_StopTimer();
 40585  0131BC  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 40586                           
 40587                           ;main.c: 252: return;
 40588  0131C0  0012               	return	
 40589  0131C2                     i2l1156:
 40590                           
 40591                           ;main.c: 254: }
 40592                           ;main.c: 256: next_channel = channel_FVR_buf1;
 40593  0131C2  0E3F               	movlw	63
 40594  0131C4  0101               	movlb	1	; () banked
 40595  0131C6  6FE8               	movwf	_next_channel& (0+255),b
 40596                           
 40597                           ;main.c: 258: break;
 40598  0131C8  0012               	return	
 40599  0131CA                     
 40600                           ;main.c: 263: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 40601                           
 40602                           ; BSR set to: 1
 40603  0131CA  0E0D               	movlw	13
 40604  0131CC  6E34               	movwf	i2___flmul@a,c
 40605  0131CE  0E68               	movlw	104
 40606  0131D0  6E35               	movwf	i2___flmul@a+1,c
 40607  0131D2  0E53               	movlw	83
 40608  0131D4  6E36               	movwf	i2___flmul@a+2,c
 40609  0131D6  0E3B               	movlw	59
 40610  0131D8  6E37               	movwf	i2___flmul@a+3,c
 40611  0131DA  EC51  F0CC         	call	_ADCC_GetConversionResult	;wreg free
 40612  0131DE  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 40613  0131E2  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 40614  0131E6  6A07               	clrf	i2___xxtofl@val+2,c
 40615  0131E8  6A08               	clrf	i2___xxtofl@val+3,c
 40616  0131EA  0E00               	movlw	0
 40617  0131EC  ECC7  F0B8         	call	i2___xxtofl
 40618  0131F0  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 40619  0131F4  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 40620  0131F8  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 40621  0131FC  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 40622  013200  ECF2  F0A5         	call	i2___flmul	;wreg free
 40623  013204  C030  F056         	movff	?i2___flmul,i2___fladd@b
 40624  013208  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 40625  01320C  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 40626  013210  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 40627  013214  C1DB  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 40628  013218  C1DC  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 40629  01321C  C1DD  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 40630  013220  C1DE  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 40631  013224  EC39  F0A9         	call	i2___fladd	;wreg free
 40632  013228  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 40633  01322C  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 40634  013230  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 40635  013234  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 40636                           
 40637                           ;main.c: 264: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 40638  013238  0E6F               	movlw	111
 40639  01323A  6E13               	movwf	i2___fldiv@b,c
 40640  01323C  0E12               	movlw	18
 40641  01323E  6E14               	movwf	i2___fldiv@b+1,c
 40642  013240  0E03               	movlw	3
 40643  013242  6E15               	movwf	i2___fldiv@b+2,c
 40644  013244  0E40               	movlw	64
 40645  013246  6E16               	movwf	i2___fldiv@b+3,c
 40646  013248  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 40647  01324C  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 40648  013250  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 40649  013254  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 40650  013258  ECF9  F0B1         	call	i2___fldiv	;wreg free
 40651  01325C  C013  F224         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 40652  013260  C014  F225         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 40653  013264  C015  F226         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 40654  013268  C016  F227         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 40655                           
 40656                           ;main.c: 266: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 40657  01326C  0E00               	movlw	0
 40658  01326E  6E34               	movwf	i2___flge@ff1,c
 40659  013270  0E00               	movlw	0
 40660  013272  6E35               	movwf	i2___flge@ff1+1,c
 40661  013274  0E20               	movlw	32
 40662  013276  6E36               	movwf	i2___flge@ff1+2,c
 40663  013278  0E40               	movlw	64
 40664  01327A  6E37               	movwf	i2___flge@ff1+3,c
 40665  01327C  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 40666  013280  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 40667  013284  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 40668  013288  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 40669  01328C  EC89  F0BD         	call	i2___flge	;wreg free
 40670  013290  A0D8               	btfss	status,0,c
 40671  013292  D019               	goto	i2u1817_40
 40672  013294  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 40673  013298  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 40674  01329C  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 40675  0132A0  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 40676  0132A4  0E00               	movlw	0
 40677  0132A6  6E38               	movwf	i2___flge@ff2,c
 40678  0132A8  0E00               	movlw	0
 40679  0132AA  6E39               	movwf	i2___flge@ff2+1,c
 40680  0132AC  0E00               	movlw	0
 40681  0132AE  6E3A               	movwf	i2___flge@ff2+2,c
 40682  0132B0  0E40               	movlw	64
 40683  0132B2  6E3B               	movwf	i2___flge@ff2+3,c
 40684  0132B4  EC89  F0BD         	call	i2___flge	;wreg free
 40685  0132B8  A0D8               	btfss	status,0,c
 40686  0132BA  D005               	goto	i2u1817_40
 40687  0132BC  ECD9  F0CC         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 40688  0132C0  0900               	iorlw	0
 40689  0132C2  B4D8               	btfsc	status,2,c
 40690  0132C4  D007               	goto	i2l1162
 40691  0132C6                     i2u1817_40:
 40692                           
 40693                           ;main.c: 268: LATFbits.LATF3 = 1;
 40694  0132C6  867E               	bsf	3966,3,c	;volatile
 40695                           
 40696                           ;main.c: 269: adc_error_flag = 1;
 40697  0132C8  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 40698                           
 40699                           ;main.c: 271: PIE5bits.TMR7IE = 0;
 40700  0132CA  010E               	movlb	14	; () banked
 40701  0132CC  9D2E               	bcf	46,6,b	;volatile
 40702                           
 40703                           ; BSR set to: 14
 40704                           ;main.c: 272: TMR7_StopTimer();
 40705  0132CE  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 40706                           
 40707                           ;main.c: 273: return;
 40708  0132D2  0012               	return	
 40709  0132D4                     i2l1162:
 40710                           
 40711                           ;main.c: 275: }
 40712                           ;main.c: 277: next_channel = POS3P3_ADC;
 40713  0132D4  0E22               	movlw	34
 40714  0132D6  0101               	movlb	1	; () banked
 40715  0132D8  6FE8               	movwf	_next_channel& (0+255),b
 40716                           
 40717                           ;main.c: 279: break;
 40718  0132DA  0012               	return	
 40719  0132DC                     
 40720                           ;main.c: 284: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 40721                           
 40722                           ; BSR set to: 1
 40723  0132DC  C224  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 40724  0132E0  C225  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 40725  0132E4  C226  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 40726  0132E8  C227  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 40727  0132EC  EC47  F0CC         	call	_ADCC_GetFilterValue	;wreg free
 40728  0132F0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 40729  0132F4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 40730  0132F8  6A07               	clrf	i2___xxtofl@val+2,c
 40731  0132FA  6A08               	clrf	i2___xxtofl@val+3,c
 40732  0132FC  0E00               	movlw	0
 40733  0132FE  ECC7  F0B8         	call	i2___xxtofl
 40734  013302  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 40735  013306  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 40736  01330A  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 40737  01330E  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 40738  013312  ECF2  F0A5         	call	i2___flmul	;wreg free
 40739  013316  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4725
 40740  01331A  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4725+1
 40741  01331E  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4725+2
 40742  013322  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4725+3
 40743                           
 40744                           ;main.c: 284: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 40745  013326  C0D6  F030         	movff	_ADCPostProcessingCallback$4725,i2___flmul@b
 40746  01332A  C0D7  F031         	movff	_ADCPostProcessingCallback$4725+1,i2___flmul@b+1
 40747  01332E  C0D8  F032         	movff	_ADCPostProcessingCallback$4725+2,i2___flmul@b+2
 40748  013332  C0D9  F033         	movff	_ADCPostProcessingCallback$4725+3,i2___flmul@b+3
 40749  013336  0E0D               	movlw	13
 40750  013338  6E34               	movwf	i2___flmul@a,c
 40751  01333A  0E68               	movlw	104
 40752  01333C  6E35               	movwf	i2___flmul@a+1,c
 40753  01333E  0ED3               	movlw	211
 40754  013340  6E36               	movwf	i2___flmul@a+2,c
 40755  013342  0E3B               	movlw	59
 40756  013344  6E37               	movwf	i2___flmul@a+3,c
 40757  013346  ECF2  F0A5         	call	i2___flmul	;wreg free
 40758  01334A  C030  F1D7         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 40759  01334E  C031  F1D8         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 40760  013352  C032  F1D9         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 40761  013356  C033  F1DA         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 40762                           
 40763                           ;main.c: 286: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 40764  01335A  0E00               	movlw	0
 40765  01335C  6E34               	movwf	i2___flge@ff1,c
 40766  01335E  0E00               	movlw	0
 40767  013360  6E35               	movwf	i2___flge@ff1+1,c
 40768  013362  0E60               	movlw	96
 40769  013364  6E36               	movwf	i2___flge@ff1+2,c
 40770  013366  0E40               	movlw	64
 40771  013368  6E37               	movwf	i2___flge@ff1+3,c
 40772  01336A  C1D7  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 40773  01336E  C1D8  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 40774  013372  C1D9  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 40775  013376  C1DA  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 40776  01337A  EC89  F0BD         	call	i2___flge	;wreg free
 40777  01337E  A0D8               	btfss	status,0,c
 40778  013380  D005               	goto	i2u1819_40
 40779  013382  ECD9  F0CC         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 40780  013386  0900               	iorlw	0
 40781  013388  B4D8               	btfsc	status,2,c
 40782  01338A  D007               	goto	i2l1166
 40783  01338C                     i2u1819_40:
 40784                           
 40785                           ;main.c: 288: LATFbits.LATF3 = 1;
 40786  01338C  867E               	bsf	3966,3,c	;volatile
 40787                           
 40788                           ;main.c: 289: adc_error_flag = 1;
 40789  01338E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 40790                           
 40791                           ;main.c: 291: PIE5bits.TMR7IE = 0;
 40792  013390  010E               	movlb	14	; () banked
 40793  013392  9D2E               	bcf	46,6,b	;volatile
 40794                           
 40795                           ; BSR set to: 14
 40796                           ;main.c: 292: TMR7_StopTimer();
 40797  013394  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 40798                           
 40799                           ;main.c: 293: return;
 40800  013398  0012               	return	
 40801  01339A                     i2l1166:
 40802                           
 40803                           ;main.c: 295: }
 40804                           ;main.c: 297: next_channel = ISNS_ADC;
 40805  01339A  0E00               	movlw	0
 40806  01339C  0101               	movlb	1	; () banked
 40807  01339E  6FE8               	movwf	_next_channel& (0+255),b
 40808                           
 40809                           ;main.c: 299: break;
 40810  0133A0  0012               	return	
 40811  0133A2                     
 40812                           ;main.c: 304: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 40813                           
 40814                           ; BSR set to: 1
 40815  0133A2  0E00               	movlw	0
 40816  0133A4  6E17               	movwf	i2___fldiv@a,c
 40817  0133A6  0EC0               	movlw	192
 40818  0133A8  6E18               	movwf	i2___fldiv@a+1,c
 40819  0133AA  0E7F               	movlw	127
 40820  0133AC  6E19               	movwf	i2___fldiv@a+2,c
 40821  0133AE  0E44               	movlw	68
 40822  0133B0  6E1A               	movwf	i2___fldiv@a+3,c
 40823  0133B2  C1D7  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 40824  0133B6  C1D8  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 40825  0133BA  C1D9  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 40826  0133BE  C1DA  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 40827  0133C2  ECF9  F0B1         	call	i2___fldiv	;wreg free
 40828  0133C6  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 40829  0133CA  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 40830  0133CE  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 40831  0133D2  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 40832  0133D6  EC47  F0CC         	call	_ADCC_GetFilterValue	;wreg free
 40833  0133DA  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 40834  0133DE  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 40835  0133E2  6A07               	clrf	i2___xxtofl@val+2,c
 40836  0133E4  6A08               	clrf	i2___xxtofl@val+3,c
 40837  0133E6  0E00               	movlw	0
 40838  0133E8  ECC7  F0B8         	call	i2___xxtofl
 40839  0133EC  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 40840  0133F0  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 40841  0133F4  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 40842  0133F8  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 40843  0133FC  ECF2  F0A5         	call	i2___flmul	;wreg free
 40844  013400  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4725
 40845  013404  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4725+1
 40846  013408  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4725+2
 40847  01340C  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4725+3
 40848                           
 40849                           ;main.c: 304: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 40850  013410  C0D6  F030         	movff	_ADCPostProcessingCallback$4725,i2___flmul@b
 40851  013414  C0D7  F031         	movff	_ADCPostProcessingCallback$4725+1,i2___flmul@b+1
 40852  013418  C0D8  F032         	movff	_ADCPostProcessingCallback$4725+2,i2___flmul@b+2
 40853  01341C  C0D9  F033         	movff	_ADCPostProcessingCallback$4725+3,i2___flmul@b+3
 40854  013420  0E35               	movlw	53
 40855  013422  6E34               	movwf	i2___flmul@a,c
 40856  013424  0E5E               	movlw	94
 40857  013426  6E35               	movwf	i2___flmul@a+1,c
 40858  013428  0EF2               	movlw	242
 40859  01342A  6E36               	movwf	i2___flmul@a+2,c
 40860  01342C  0E3F               	movlw	63
 40861  01342E  6E37               	movwf	i2___flmul@a+3,c
 40862  013430  ECF2  F0A5         	call	i2___flmul	;wreg free
 40863  013434  C030  F1C7         	movff	?i2___flmul,_Imeas	;volatile
 40864  013438  C031  F1C8         	movff	?i2___flmul+1,_Imeas+1	;volatile
 40865  01343C  C032  F1C9         	movff	?i2___flmul+2,_Imeas+2	;volatile
 40866  013440  C033  F1CA         	movff	?i2___flmul+3,_Imeas+3	;volatile
 40867                           
 40868                           ;main.c: 308: if (LATGbits.LATG0 != 1) {
 40869  013444  B07F               	btfsc	3967,0,c	;volatile
 40870  013446  D166               	goto	i2l1170
 40871                           
 40872                           ;main.c: 313: if (load_enable) {
 40873  013448  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 40874  01344A  D0CD               	goto	i2l1171
 40875                           
 40876                           ;main.c: 316: if (dimming_period < 0x7FEE) {
 40877  01344C  0EEE               	movlw	238
 40878  01344E  0100               	movlb	0	; () banked
 40879  013450  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 40880  013452  0E7F               	movlw	127
 40881  013454  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 40882  013456  B0D8               	btfsc	status,0,c
 40883  013458  D052               	goto	i2l1172
 40884                           
 40885                           ; BSR set to: 0
 40886                           ;main.c: 318: Ipk = Imeas;
 40887  01345A  C1C7  F1CB         	movff	_Imeas,_Ipk	;volatile
 40888  01345E  C1C8  F1CC         	movff	_Imeas+1,_Ipk+1	;volatile
 40889  013462  C1C9  F1CD         	movff	_Imeas+2,_Ipk+2	;volatile
 40890  013466  C1CA  F1CE         	movff	_Imeas+3,_Ipk+3	;volatile
 40891                           
 40892                           ; BSR set to: 0
 40893                           ;main.c: 319: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 40894  01346A  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 40895  01346E  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 40896  013472  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 40897  013476  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 40898  01347A  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 40899  01347E  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 40900  013482  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 40901  013486  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 40902  01348A  ECDD  F0B5         	call	_peakToRMS	;wreg free
 40903  01348E  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4726
 40904  013492  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4726+1
 40905  013496  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4726+2
 40906  01349A  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4726+3
 40907                           
 40908                           ;main.c: 319: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 40909  01349E  C2F1  F05A         	movff	_Irms_offset,i2___fladd@a
 40910  0134A2  C2F2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 40911  0134A6  C2F3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 40912  0134AA  C2F4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 40913  0134AE  C0DA  F056         	movff	_ADCPostProcessingCallback$4726,i2___fladd@b
 40914  0134B2  C0DB  F057         	movff	_ADCPostProcessingCallback$4726+1,i2___fladd@b+1
 40915  0134B6  C0DC  F058         	movff	_ADCPostProcessingCallback$4726+2,i2___fladd@b+2
 40916  0134BA  C0DD  F059         	movff	_ADCPostProcessingCallback$4726+3,i2___fladd@b+3
 40917  0134BE  EC39  F0A9         	call	i2___fladd	;wreg free
 40918  0134C2  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 40919  0134C6  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 40920  0134CA  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 40921  0134CE  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 40922  0134D2  EC09  F0C0         	call	i2___fltol	;wreg free
 40923  0134D6  C06C  F076         	movff	?i2___fltol,abs@a
 40924  0134DA  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 40925  0134DE  ECCD  F0CA         	call	_abs	;wreg free
 40926  0134E2  0100               	movlb	0	; () banked
 40927  0134E4  C076  F005         	movff	?_abs,i2___xxtofl@val
 40928  0134E8  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 40929  0134EC  0E00               	movlw	0
 40930  0134EE  BE06               	btfsc	i2___xxtofl@val+1,7,c
 40931  0134F0  0EFF               	movlw	-1
 40932  0134F2  6E07               	movwf	i2___xxtofl@val+2,c
 40933  0134F4  6E08               	movwf	i2___xxtofl@val+3,c
 40934  0134F6  0E01               	movlw	1
 40935  0134F8  ECC7  F0B8         	call	i2___xxtofl
 40936  0134FC  D063               	goto	L19
 40937  0134FE                     i2l1172:
 40938                           
 40939                           ;main.c: 324: else {
 40940                           ;main.c: 326: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 40941  0134FE  C1C7  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 40942  013502  C1C8  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 40943  013506  C1C9  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 40944  01350A  C1CA  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 40945  01350E  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 40946  013512  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 40947  013516  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 40948  01351A  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 40949  01351E  EC20  F0C4         	call	_currentMeasuredToPeak	;wreg free
 40950  013522  C099  F1CB         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 40951  013526  C09A  F1CC         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 40952  01352A  C09B  F1CD         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 40953  01352E  C09C  F1CE         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 40954                           
 40955                           ;main.c: 327: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 40956  013532  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 40957  013536  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 40958  01353A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 40959  01353E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 40960  013542  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 40961  013546  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 40962  01354A  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 40963  01354E  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 40964  013552  ECDD  F0B5         	call	_peakToRMS	;wreg free
 40965  013556  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4726
 40966  01355A  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4726+1
 40967  01355E  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4726+2
 40968  013562  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4726+3
 40969                           
 40970                           ;main.c: 327: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 40971  013566  C2F1  F05A         	movff	_Irms_offset,i2___fladd@a
 40972  01356A  C2F2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 40973  01356E  C2F3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 40974  013572  C2F4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 40975  013576  C0DA  F056         	movff	_ADCPostProcessingCallback$4726,i2___fladd@b
 40976  01357A  C0DB  F057         	movff	_ADCPostProcessingCallback$4726+1,i2___fladd@b+1
 40977  01357E  C0DC  F058         	movff	_ADCPostProcessingCallback$4726+2,i2___fladd@b+2
 40978  013582  C0DD  F059         	movff	_ADCPostProcessingCallback$4726+3,i2___fladd@b+3
 40979  013586  EC39  F0A9         	call	i2___fladd	;wreg free
 40980  01358A  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 40981  01358E  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 40982  013592  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 40983  013596  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 40984  01359A  EC09  F0C0         	call	i2___fltol	;wreg free
 40985  01359E  C06C  F076         	movff	?i2___fltol,abs@a
 40986  0135A2  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 40987  0135A6  ECCD  F0CA         	call	_abs	;wreg free
 40988  0135AA  0100               	movlb	0	; () banked
 40989  0135AC  C076  F005         	movff	?_abs,i2___xxtofl@val
 40990  0135B0  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 40991  0135B4  0E00               	movlw	0
 40992  0135B6  BE06               	btfsc	i2___xxtofl@val+1,7,c
 40993  0135B8  0EFF               	movlw	-1
 40994  0135BA  6E07               	movwf	i2___xxtofl@val+2,c
 40995  0135BC  6E08               	movwf	i2___xxtofl@val+3,c
 40996  0135BE  0E01               	movlw	1
 40997  0135C0  ECC7  F0B8         	call	i2___xxtofl
 40998  0135C4                     L19:
 40999  0135C4  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 41000  0135C8  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 41001  0135CC  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 41002  0135D0  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 41003                           
 41004                           ;main.c: 329: }
 41005                           ;main.c: 331: Vpk = Vpk_const;
 41006  0135D4  C2F5  F220         	movff	_Vpk_const,_Vpk	;volatile
 41007  0135D8  C2F6  F221         	movff	_Vpk_const+1,_Vpk+1	;volatile
 41008  0135DC  C2F7  F222         	movff	_Vpk_const+2,_Vpk+2	;volatile
 41009  0135E0  C2F8  F223         	movff	_Vpk_const+3,_Vpk+3	;volatile
 41010                           
 41011                           ;main.c: 333: }
 41012  0135E4  D02C               	goto	i2l1174
 41013  0135E6                     i2l1171:
 41014                           
 41015                           ;main.c: 335: else {
 41016                           ;main.c: 337: Ipk = 0.0;
 41017  0135E6  0E00               	movlw	0
 41018  0135E8  0101               	movlb	1	; () banked
 41019  0135EA  6FCB               	movwf	_Ipk& (0+255),b	;volatile
 41020  0135EC  0E00               	movlw	0
 41021  0135EE  6FCC               	movwf	(_Ipk+1)& (0+255),b	;volatile
 41022  0135F0  0E00               	movlw	0
 41023  0135F2  6FCD               	movwf	(_Ipk+2)& (0+255),b	;volatile
 41024  0135F4  0E00               	movlw	0
 41025  0135F6  6FCE               	movwf	(_Ipk+3)& (0+255),b	;volatile
 41026                           
 41027                           ;main.c: 338: Vpk = 0.0;
 41028  0135F8  0E00               	movlw	0
 41029  0135FA  0102               	movlb	2	; () banked
 41030  0135FC  6F20               	movwf	_Vpk& (0+255),b	;volatile
 41031  0135FE  0E00               	movlw	0
 41032  013600  6F21               	movwf	(_Vpk+1)& (0+255),b	;volatile
 41033  013602  0E00               	movlw	0
 41034  013604  6F22               	movwf	(_Vpk+2)& (0+255),b	;volatile
 41035  013606  0E00               	movlw	0
 41036  013608  6F23               	movwf	(_Vpk+3)& (0+255),b	;volatile
 41037                           
 41038                           ; BSR set to: 2
 41039                           ;main.c: 339: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 41040  01360A  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 41041  01360E  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 41042  013612  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 41043  013616  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 41044  01361A  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 41045  01361E  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 41046  013622  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 41047  013626  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 41048  01362A  ECDD  F0B5         	call	_peakToRMS	;wreg free
 41049  01362E  C0B1  F1C3         	movff	?_peakToRMS,_Irms	;volatile
 41050  013632  C0B2  F1C4         	movff	?_peakToRMS+1,_Irms+1	;volatile
 41051  013636  C0B3  F1C5         	movff	?_peakToRMS+2,_Irms+2	;volatile
 41052  01363A  C0B4  F1C6         	movff	?_peakToRMS+3,_Irms+3	;volatile
 41053  01363E                     i2l1174:
 41054                           
 41055                           ;main.c: 341: }
 41056                           ;main.c: 343: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 41057  01363E  C220  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 41058  013642  C221  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 41059  013646  C222  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 41060  01364A  C223  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 41061  01364E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 41062  013652  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 41063  013656  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 41064  01365A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 41065  01365E  ECDD  F0B5         	call	_peakToRMS	;wreg free
 41066  013662  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 41067  013666  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 41068  01366A  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 41069  01366E  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 41070                           
 41071                           ;main.c: 344: Avg_Power = Vrms * Irms;
 41072  013672  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 41073  013676  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 41074  01367A  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 41075  01367E  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 41076  013682  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 41077  013686  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 41078  01368A  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 41079  01368E  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 41080  013692  ECF2  F0A5         	call	i2___flmul	;wreg free
 41081  013696  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 41082  01369A  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 41083  01369E  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 41084  0136A2  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 41085                           
 41086                           ;main.c: 345: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 41087  0136A6  0E00               	movlw	0
 41088  0136A8  6E17               	movwf	i2___fldiv@a,c
 41089  0136AA  0E00               	movlw	0
 41090  0136AC  6E18               	movwf	i2___fldiv@a+1,c
 41091  0136AE  0E61               	movlw	97
 41092  0136B0  6E19               	movwf	i2___fldiv@a+2,c
 41093  0136B2  0E45               	movlw	69
 41094  0136B4  6E1A               	movwf	i2___fldiv@a+3,c
 41095  0136B6  0E29               	movlw	41
 41096  0136B8  6E34               	movwf	i2___flmul@a,c
 41097  0136BA  0E5C               	movlw	92
 41098  0136BC  6E35               	movwf	i2___flmul@a+1,c
 41099  0136BE  0E8F               	movlw	143
 41100  0136C0  6E36               	movwf	i2___flmul@a+2,c
 41101  0136C2  0E3D               	movlw	61
 41102  0136C4  6E37               	movwf	i2___flmul@a+3,c
 41103  0136C6  C1BB  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 41104  0136CA  C1BC  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 41105  0136CE  C1BD  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 41106  0136D2  C1BE  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 41107  0136D6  ECF2  F0A5         	call	i2___flmul	;wreg free
 41108  0136DA  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 41109  0136DE  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 41110  0136E2  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 41111  0136E6  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 41112  0136EA  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41113  0136EE  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 41114  0136F2  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 41115  0136F6  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 41116  0136FA  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 41117  0136FE  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 41118  013702  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 41119  013706  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 41120  01370A  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 41121  01370E  EC39  F0A9         	call	i2___fladd	;wreg free
 41122  013712  D0C5               	goto	L18
 41123  013714                     i2l1170:
 41124                           
 41125                           ;main.c: 350: else {
 41126                           ;main.c: 352: Ipk = Imeas;
 41127  013714  C1C7  F1CB         	movff	_Imeas,_Ipk	;volatile
 41128  013718  C1C8  F1CC         	movff	_Imeas+1,_Ipk+1	;volatile
 41129  01371C  C1C9  F1CD         	movff	_Imeas+2,_Ipk+2	;volatile
 41130  013720  C1CA  F1CE         	movff	_Imeas+3,_Ipk+3	;volatile
 41131                           
 41132                           ;main.c: 353: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 41133  013724  0E00               	movlw	0
 41134  013726  0100               	movlb	0	; () banked
 41135  013728  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 41136  01372A  0E00               	movlw	0
 41137  01372C  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 41138  01372E  0E00               	movlw	0
 41139  013730  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 41140  013732  0E00               	movlw	0
 41141  013734  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 41142  013736  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 41143  01373A  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 41144  01373E  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 41145  013742  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 41146  013746  ECDD  F0B5         	call	_peakToRMS	;wreg free
 41147  01374A  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4726
 41148  01374E  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4726+1
 41149  013752  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4726+2
 41150  013756  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4726+3
 41151                           
 41152                           ;main.c: 353: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 41153  01375A  C2F1  F05A         	movff	_Irms_offset,i2___fladd@a
 41154  01375E  C2F2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 41155  013762  C2F3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 41156  013766  C2F4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 41157  01376A  C0DA  F056         	movff	_ADCPostProcessingCallback$4726,i2___fladd@b
 41158  01376E  C0DB  F057         	movff	_ADCPostProcessingCallback$4726+1,i2___fladd@b+1
 41159  013772  C0DC  F058         	movff	_ADCPostProcessingCallback$4726+2,i2___fladd@b+2
 41160  013776  C0DD  F059         	movff	_ADCPostProcessingCallback$4726+3,i2___fladd@b+3
 41161  01377A  EC39  F0A9         	call	i2___fladd	;wreg free
 41162  01377E  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 41163  013782  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 41164  013786  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 41165  01378A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 41166  01378E  EC09  F0C0         	call	i2___fltol	;wreg free
 41167  013792  C06C  F076         	movff	?i2___fltol,abs@a
 41168  013796  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 41169  01379A  ECCD  F0CA         	call	_abs	;wreg free
 41170  01379E  0100               	movlb	0	; () banked
 41171  0137A0  C076  F005         	movff	?_abs,i2___xxtofl@val
 41172  0137A4  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 41173  0137A8  0E00               	movlw	0
 41174  0137AA  BE06               	btfsc	i2___xxtofl@val+1,7,c
 41175  0137AC  0EFF               	movlw	-1
 41176  0137AE  6E07               	movwf	i2___xxtofl@val+2,c
 41177  0137B0  6E08               	movwf	i2___xxtofl@val+3,c
 41178  0137B2  0E01               	movlw	1
 41179  0137B4  ECC7  F0B8         	call	i2___xxtofl
 41180  0137B8  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 41181  0137BC  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 41182  0137C0  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 41183  0137C4  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 41184                           
 41185                           ;main.c: 354: Vrms = peakToRMS(Vpk_const, 0.0);
 41186  0137C8  C2F5  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 41187  0137CC  C2F6  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 41188  0137D0  C2F7  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 41189  0137D4  C2F8  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 41190  0137D8  0E00               	movlw	0
 41191  0137DA  0100               	movlb	0	; () banked
 41192  0137DC  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 41193  0137DE  0E00               	movlw	0
 41194  0137E0  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 41195  0137E2  0E00               	movlw	0
 41196  0137E4  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 41197  0137E6  0E00               	movlw	0
 41198  0137E8  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 41199  0137EA  ECDD  F0B5         	call	_peakToRMS	;wreg free
 41200  0137EE  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 41201  0137F2  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 41202  0137F6  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 41203  0137FA  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 41204                           
 41205                           ;main.c: 355: Avg_Power = Vrms * Irms;
 41206  0137FE  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 41207  013802  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 41208  013806  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 41209  01380A  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 41210  01380E  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 41211  013812  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 41212  013816  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 41213  01381A  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 41214  01381E  ECF2  F0A5         	call	i2___flmul	;wreg free
 41215  013822  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 41216  013826  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 41217  01382A  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 41218  01382E  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 41219                           
 41220                           ;main.c: 356: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 41221  013832  0E00               	movlw	0
 41222  013834  6E17               	movwf	i2___fldiv@a,c
 41223  013836  0E00               	movlw	0
 41224  013838  6E18               	movwf	i2___fldiv@a+1,c
 41225  01383A  0E61               	movlw	97
 41226  01383C  6E19               	movwf	i2___fldiv@a+2,c
 41227  01383E  0E45               	movlw	69
 41228  013840  6E1A               	movwf	i2___fldiv@a+3,c
 41229  013842  0E29               	movlw	41
 41230  013844  6E34               	movwf	i2___flmul@a,c
 41231  013846  0E5C               	movlw	92
 41232  013848  6E35               	movwf	i2___flmul@a+1,c
 41233  01384A  0E8F               	movlw	143
 41234  01384C  6E36               	movwf	i2___flmul@a+2,c
 41235  01384E  0E3D               	movlw	61
 41236  013850  6E37               	movwf	i2___flmul@a+3,c
 41237  013852  C1BB  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 41238  013856  C1BC  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 41239  01385A  C1BD  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 41240  01385E  C1BE  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 41241  013862  ECF2  F0A5         	call	i2___flmul	;wreg free
 41242  013866  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 41243  01386A  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 41244  01386E  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 41245  013872  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 41246  013876  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41247  01387A  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 41248  01387E  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 41249  013882  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 41250  013886  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 41251  01388A  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 41252  01388E  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 41253  013892  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 41254  013896  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 41255  01389A  EC39  F0A9         	call	i2___fladd	;wreg free
 41256  01389E                     L18:
 41257  01389E  C056  F0F6         	movff	?i2___fladd,_Total_Energy	;volatile
 41258  0138A2  C057  F0F7         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 41259  0138A6  C058  F0F8         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 41260  0138AA  C059  F0F9         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 41261                           
 41262                           ;main.c: 358: }
 41263                           ;main.c: 360: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 41264  0138AE  0E00               	movlw	0
 41265  0138B0  6E34               	movwf	i2___flge@ff1,c
 41266  0138B2  0E00               	movlw	0
 41267  0138B4  6E35               	movwf	i2___flge@ff1+1,c
 41268  0138B6  0EA0               	movlw	160
 41269  0138B8  6E36               	movwf	i2___flge@ff1+2,c
 41270  0138BA  0E40               	movlw	64
 41271  0138BC  6E37               	movwf	i2___flge@ff1+3,c
 41272  0138BE  C1C3  F038         	movff	_Irms,i2___flge@ff2	;volatile
 41273  0138C2  C1C4  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 41274  0138C6  C1C5  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 41275  0138CA  C1C6  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 41276  0138CE  EC89  F0BD         	call	i2___flge	;wreg free
 41277  0138D2  A0D8               	btfss	status,0,c
 41278  0138D4  D005               	goto	i2u1824_40
 41279  0138D6  ECD9  F0CC         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 41280  0138DA  0900               	iorlw	0
 41281  0138DC  B4D8               	btfsc	status,2,c
 41282  0138DE  D007               	goto	i2l1176
 41283  0138E0                     i2u1824_40:
 41284                           
 41285                           ;main.c: 362: LATFbits.LATF3 = 1;
 41286  0138E0  867E               	bsf	3966,3,c	;volatile
 41287                           
 41288                           ;main.c: 363: adc_error_flag = 1;
 41289  0138E2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 41290                           
 41291                           ;main.c: 365: PIE5bits.TMR7IE = 0;
 41292  0138E4  010E               	movlb	14	; () banked
 41293  0138E6  9D2E               	bcf	46,6,b	;volatile
 41294                           
 41295                           ; BSR set to: 14
 41296                           ;main.c: 366: TMR7_StopTimer();
 41297  0138E8  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 41298                           
 41299                           ;main.c: 367: return;
 41300  0138EC  0012               	return	
 41301  0138EE                     i2l1176:
 41302                           
 41303                           ;main.c: 369: }
 41304                           ;main.c: 371: next_channel = POS12_ADC;
 41305  0138EE  0E04               	movlw	4
 41306  0138F0  0101               	movlb	1	; () banked
 41307  0138F2  6FE8               	movwf	_next_channel& (0+255),b
 41308                           
 41309                           ;main.c: 373: break;
 41310  0138F4  0012               	return	
 41311  0138F6                     
 41312                           ;main.c: 378: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 41313                           
 41314                           ; BSR set to: 1
 41315  0138F6  0E00               	movlw	0
 41316  0138F8  6E17               	movwf	i2___fldiv@a,c
 41317  0138FA  0EC0               	movlw	192
 41318  0138FC  6E18               	movwf	i2___fldiv@a+1,c
 41319  0138FE  0E7F               	movlw	127
 41320  013900  6E19               	movwf	i2___fldiv@a+2,c
 41321  013902  0E44               	movlw	68
 41322  013904  6E1A               	movwf	i2___fldiv@a+3,c
 41323  013906  C1D7  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 41324  01390A  C1D8  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 41325  01390E  C1D9  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 41326  013912  C1DA  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 41327  013916  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41328  01391A  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 41329  01391E  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 41330  013922  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 41331  013926  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 41332  01392A  EC47  F0CC         	call	_ADCC_GetFilterValue	;wreg free
 41333  01392E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 41334  013932  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 41335  013936  6A07               	clrf	i2___xxtofl@val+2,c
 41336  013938  6A08               	clrf	i2___xxtofl@val+3,c
 41337  01393A  0E00               	movlw	0
 41338  01393C  ECC7  F0B8         	call	i2___xxtofl
 41339  013940  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 41340  013944  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 41341  013948  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 41342  01394C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 41343  013950  ECF2  F0A5         	call	i2___flmul	;wreg free
 41344  013954  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4725
 41345  013958  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4725+1
 41346  01395C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4725+2
 41347  013960  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4725+3
 41348                           
 41349                           ;main.c: 378: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 41350  013964  C0D6  F030         	movff	_ADCPostProcessingCallback$4725,i2___flmul@b
 41351  013968  C0D7  F031         	movff	_ADCPostProcessingCallback$4725+1,i2___flmul@b+1
 41352  01396C  C0D8  F032         	movff	_ADCPostProcessingCallback$4725+2,i2___flmul@b+2
 41353  013970  C0D9  F033         	movff	_ADCPostProcessingCallback$4725+3,i2___flmul@b+3
 41354  013974  0E3E               	movlw	62
 41355  013976  6E34               	movwf	i2___flmul@a,c
 41356  013978  0EF8               	movlw	248
 41357  01397A  6E35               	movwf	i2___flmul@a+1,c
 41358  01397C  0E80               	movlw	128
 41359  01397E  6E36               	movwf	i2___flmul@a+2,c
 41360  013980  0E40               	movlw	64
 41361  013982  6E37               	movwf	i2___flmul@a+3,c
 41362  013984  ECF2  F0A5         	call	i2___flmul	;wreg free
 41363  013988  C030  F1D3         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 41364  01398C  C031  F1D4         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 41365  013990  C032  F1D5         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 41366  013994  C033  F1D6         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 41367                           
 41368                           ;main.c: 380: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 41369  013998  0E9A               	movlw	154
 41370  01399A  6E34               	movwf	i2___flge@ff1,c
 41371  01399C  0E99               	movlw	153
 41372  01399E  6E35               	movwf	i2___flge@ff1+1,c
 41373  0139A0  0E59               	movlw	89
 41374  0139A2  6E36               	movwf	i2___flge@ff1+2,c
 41375  0139A4  0E41               	movlw	65
 41376  0139A6  6E37               	movwf	i2___flge@ff1+3,c
 41377  0139A8  C1D3  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 41378  0139AC  C1D4  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 41379  0139B0  C1D5  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 41380  0139B4  C1D6  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 41381  0139B8  EC89  F0BD         	call	i2___flge	;wreg free
 41382  0139BC  A0D8               	btfss	status,0,c
 41383  0139BE  D005               	goto	i2u1826_40
 41384  0139C0  ECD9  F0CC         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 41385  0139C4  0900               	iorlw	0
 41386  0139C6  B4D8               	btfsc	status,2,c
 41387  0139C8  D007               	goto	i2l1180
 41388  0139CA                     i2u1826_40:
 41389                           
 41390                           ;main.c: 382: LATFbits.LATF3 = 1;
 41391  0139CA  867E               	bsf	3966,3,c	;volatile
 41392                           
 41393                           ;main.c: 383: adc_error_flag = 1;
 41394  0139CC  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 41395                           
 41396                           ;main.c: 385: PIE5bits.TMR7IE = 0;
 41397  0139CE  010E               	movlb	14	; () banked
 41398  0139D0  9D2E               	bcf	46,6,b	;volatile
 41399                           
 41400                           ; BSR set to: 14
 41401                           ;main.c: 386: TMR7_StopTimer();
 41402  0139D2  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 41403                           
 41404                           ;main.c: 387: return;
 41405  0139D6  0012               	return	
 41406  0139D8                     i2l1180:
 41407                           
 41408                           ;main.c: 389: }
 41409                           ;main.c: 391: next_channel = channel_Temp;
 41410  0139D8  0E3D               	movlw	61
 41411  0139DA  0101               	movlb	1	; () banked
 41412  0139DC  6FE8               	movwf	_next_channel& (0+255),b
 41413                           
 41414                           ;main.c: 393: break;
 41415  0139DE  0012               	return	
 41416  0139E0                     
 41417                           ;main.c: 398: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 41418                           
 41419                           ; BSR set to: 1
 41420  0139E0  0E00               	movlw	0
 41421  0139E2  6E17               	movwf	i2___fldiv@a,c
 41422  0139E4  0E00               	movlw	0
 41423  0139E6  6E18               	movwf	i2___fldiv@a+1,c
 41424  0139E8  0E00               	movlw	0
 41425  0139EA  6E19               	movwf	i2___fldiv@a+2,c
 41426  0139EC  0E40               	movlw	64
 41427  0139EE  6E1A               	movwf	i2___fldiv@a+3,c
 41428  0139F0  C1D7  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 41429  0139F4  C1D8  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 41430  0139F8  C1D9  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 41431  0139FC  C1DA  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 41432  013A00  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41433  013A04  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 41434  013A08  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 41435  013A0C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 41436  013A10  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 41437  013A14  0E00               	movlw	0
 41438  013A16  6E5A               	movwf	i2___fladd@a,c
 41439  013A18  0E00               	movlw	0
 41440  013A1A  6E5B               	movwf	i2___fladd@a+1,c
 41441  013A1C  0E80               	movlw	128
 41442  013A1E  6E5C               	movwf	i2___fladd@a+2,c
 41443  013A20  0E3F               	movlw	63
 41444  013A22  6E5D               	movwf	i2___fladd@a+3,c
 41445  013A24  0E00               	movlw	0
 41446  013A26  6E17               	movwf	i2___fldiv@a,c
 41447  013A28  0EC0               	movlw	192
 41448  013A2A  6E18               	movwf	i2___fldiv@a+1,c
 41449  013A2C  0E7F               	movlw	127
 41450  013A2E  6E19               	movwf	i2___fldiv@a+2,c
 41451  013A30  0E44               	movlw	68
 41452  013A32  6E1A               	movwf	i2___fldiv@a+3,c
 41453  013A34  EC51  F0CC         	call	_ADCC_GetConversionResult	;wreg free
 41454  013A38  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 41455  013A3C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 41456  013A40  6A07               	clrf	i2___xxtofl@val+2,c
 41457  013A42  6A08               	clrf	i2___xxtofl@val+3,c
 41458  013A44  0E00               	movlw	0
 41459  013A46  ECC7  F0B8         	call	i2___xxtofl
 41460  013A4A  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 41461  013A4E  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 41462  013A52  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 41463  013A56  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 41464  013A5A  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41465  013A5E  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 41466  013A62  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 41467  013A66  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 41468  013A6A  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 41469  013A6E  ECB6  F0CA         	call	i2___flneg	;wreg free
 41470  013A72  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 41471  013A76  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 41472  013A7A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 41473  013A7E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 41474  013A82  EC39  F0A9         	call	i2___fladd	;wreg free
 41475  013A86  C056  F030         	movff	?i2___fladd,i2___flmul@b
 41476  013A8A  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 41477  013A8E  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 41478  013A92  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 41479  013A96  ECF2  F0A5         	call	i2___flmul	;wreg free
 41480  013A9A  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4727
 41481  013A9E  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4727+1
 41482  013AA2  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4727+2
 41483  013AA6  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4727+3
 41484                           
 41485                           ;main.c: 398: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 41486  013AAA  0EDA               	movlw	218
 41487  013AAC  6E17               	movwf	i2___fldiv@a,c
 41488  013AAE  0E03               	movlw	3
 41489  013AB0  6E18               	movwf	i2___fldiv@a+1,c
 41490  013AB2  0EAD               	movlw	173
 41491  013AB4  6E19               	movwf	i2___fldiv@a+2,c
 41492  013AB6  0E3A               	movlw	58
 41493  013AB8  6E1A               	movwf	i2___fldiv@a+3,c
 41494  013ABA  0E39               	movlw	57
 41495  013ABC  6E5A               	movwf	i2___fladd@a,c
 41496  013ABE  0EB4               	movlw	180
 41497  013AC0  6E5B               	movwf	i2___fladd@a+1,c
 41498  013AC2  0E28               	movlw	40
 41499  013AC4  6E5C               	movwf	i2___fladd@a+2,c
 41500  013AC6  0E3F               	movlw	63
 41501  013AC8  6E5D               	movwf	i2___fladd@a+3,c
 41502  013ACA  C0C9  F02C         	movff	_ADCPostProcessingCallback$4727,i2___flneg@f1
 41503  013ACE  C0CA  F02D         	movff	_ADCPostProcessingCallback$4727+1,i2___flneg@f1+1
 41504  013AD2  C0CB  F02E         	movff	_ADCPostProcessingCallback$4727+2,i2___flneg@f1+2
 41505  013AD6  C0CC  F02F         	movff	_ADCPostProcessingCallback$4727+3,i2___flneg@f1+3
 41506  013ADA  ECB6  F0CA         	call	i2___flneg	;wreg free
 41507  013ADE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 41508  013AE2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 41509  013AE6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 41510  013AEA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 41511  013AEE  EC39  F0A9         	call	i2___fladd	;wreg free
 41512  013AF2  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 41513  013AF6  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 41514  013AFA  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 41515  013AFE  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 41516  013B02  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41517  013B06  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4728
 41518  013B0A  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4728+1
 41519  013B0E  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4728+2
 41520  013B12  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4728+3
 41521                           
 41522                           ;main.c: 398: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 41523  013B16  C2F9  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 41524  013B1A  C2FA  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 41525  013B1E  C2FB  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 41526  013B22  C2FC  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 41527  013B26  C0CD  F056         	movff	_ADCPostProcessingCallback$4728,i2___fladd@b
 41528  013B2A  C0CE  F057         	movff	_ADCPostProcessingCallback$4728+1,i2___fladd@b+1
 41529  013B2E  C0CF  F058         	movff	_ADCPostProcessingCallback$4728+2,i2___fladd@b+2
 41530  013B32  C0D0  F059         	movff	_ADCPostProcessingCallback$4728+3,i2___fladd@b+3
 41531  013B36  EC39  F0A9         	call	i2___fladd	;wreg free
 41532  013B3A  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4729
 41533  013B3E  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4729+1
 41534  013B42  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4729+2
 41535  013B46  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4729+3
 41536                           
 41537                           ;main.c: 398: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 41538  013B4A  C0D1  F056         	movff	_ADCPostProcessingCallback$4729,i2___fladd@b
 41539  013B4E  C0D2  F057         	movff	_ADCPostProcessingCallback$4729+1,i2___fladd@b+1
 41540  013B52  C0D3  F058         	movff	_ADCPostProcessingCallback$4729+2,i2___fladd@b+2
 41541  013B56  C0D4  F059         	movff	_ADCPostProcessingCallback$4729+3,i2___fladd@b+3
 41542  013B5A  0E00               	movlw	0
 41543  013B5C  6E5A               	movwf	i2___fladd@a,c
 41544  013B5E  0E00               	movlw	0
 41545  013B60  6E5B               	movwf	i2___fladd@a+1,c
 41546  013B62  0E20               	movlw	32
 41547  013B64  6E5C               	movwf	i2___fladd@a+2,c
 41548  013B66  0EC2               	movlw	194
 41549  013B68  6E5D               	movwf	i2___fladd@a+3,c
 41550  013B6A  EC39  F0A9         	call	i2___fladd	;wreg free
 41551  013B6E  C056  F1CF         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 41552  013B72  C057  F1D0         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 41553  013B76  C058  F1D1         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 41554  013B7A  C059  F1D2         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 41555                           
 41556                           ;main.c: 400: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 41557  013B7E  0E00               	movlw	0
 41558  013B80  6E34               	movwf	i2___flge@ff1,c
 41559  013B82  0E00               	movlw	0
 41560  013B84  6E35               	movwf	i2___flge@ff1+1,c
 41561  013B86  0E20               	movlw	32
 41562  013B88  6E36               	movwf	i2___flge@ff1+2,c
 41563  013B8A  0E42               	movlw	66
 41564  013B8C  6E37               	movwf	i2___flge@ff1+3,c
 41565  013B8E  C1CF  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 41566  013B92  C1D0  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 41567  013B96  C1D1  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 41568  013B9A  C1D2  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 41569  013B9E  EC89  F0BD         	call	i2___flge	;wreg free
 41570  013BA2  A0D8               	btfss	status,0,c
 41571  013BA4  D005               	goto	i2u1828_40
 41572  013BA6  ECD9  F0CC         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 41573  013BAA  0900               	iorlw	0
 41574  013BAC  B4D8               	btfsc	status,2,c
 41575  013BAE  D007               	goto	i2l1184
 41576  013BB0                     i2u1828_40:
 41577                           
 41578                           ;main.c: 402: LATFbits.LATF3 = 1;
 41579  013BB0  867E               	bsf	3966,3,c	;volatile
 41580                           
 41581                           ;main.c: 403: adc_error_flag = 1;
 41582  013BB2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 41583                           
 41584                           ;main.c: 405: PIE5bits.TMR7IE = 0;
 41585  013BB4  010E               	movlb	14	; () banked
 41586  013BB6  9D2E               	bcf	46,6,b	;volatile
 41587                           
 41588                           ; BSR set to: 14
 41589                           ;main.c: 406: TMR7_StopTimer();
 41590  013BB8  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 41591                           
 41592                           ;main.c: 407: return;
 41593  013BBC  0012               	return	
 41594  013BBE                     i2l1184:
 41595                           
 41596                           ;main.c: 409: }
 41597                           ;main.c: 411: next_channel = channel_VSS;
 41598  013BBE  0E3C               	movlw	60
 41599  013BC0  0101               	movlb	1	; () banked
 41600  013BC2  6FE8               	movwf	_next_channel& (0+255),b
 41601                           
 41602                           ;main.c: 413: break;
 41603  013BC4  0012               	return	
 41604  013BC6                     i2l1187:
 41605                           
 41606                           ; BSR set to: 0
 41607                           ;main.c: 418: LATFbits.LATF3 = 1;
 41608  013BC6  867E               	bsf	3966,3,c	;volatile
 41609                           
 41610                           ;main.c: 419: adc_error_flag = 1;
 41611  013BC8  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 41612                           
 41613                           ; BSR set to: 0
 41614                           ;main.c: 421: PIE5bits.TMR7IE == 0;
 41615  013BCA  010E               	movlb	14	; () banked
 41616  013BCC  512E               	movf	46,w,b	;volatile
 41617                           
 41618                           ; BSR set to: 14
 41619                           ;main.c: 422: TMR7_StopTimer();
 41620  013BCE  ECFA  F0CC         	call	i2_TMR7_StopTimer	;wreg free
 41621                           
 41622                           ;main.c: 425: }
 41623                           
 41624                           ;main.c: 423: break;
 41625  013BD2  0012               	return	
 41626  013BD4                     i2l1154:
 41627  013BD4  0100               	movlb	0	; () banked
 41628  013BD6  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 41629                           
 41630                           ; Switch size 1, requested type "space"
 41631                           ; Number of cases is 6, Range of values is 0 to 63
 41632                           ; switch strategies available:
 41633                           ; Name         Instructions Cycles
 41634                           ; simple_byte           19    10 (average)
 41635                           ;	Chosen strategy is simple_byte
 41636  013BD8  0A00               	xorlw	0	; case 0
 41637  013BDA  B4D8               	btfsc	status,2,c
 41638  013BDC  EFD1  F099         	goto	i2l1169
 41639  013BE0  0A04               	xorlw	4	; case 4
 41640  013BE2  B4D8               	btfsc	status,2,c
 41641  013BE4  D688               	goto	i2l1179
 41642  013BE6  0A26               	xorlw	38	; case 34
 41643  013BE8  B4D8               	btfsc	status,2,c
 41644  013BEA  EF6E  F099         	goto	i2l1165
 41645  013BEE  0A1E               	xorlw	30	; case 60
 41646  013BF0  B4D8               	btfsc	status,2,c
 41647  013BF2  EF9C  F098         	goto	i2l1155
 41648  013BF6  0A01               	xorlw	1	; case 61
 41649  013BF8  B4D8               	btfsc	status,2,c
 41650  013BFA  D6F2               	goto	i2l1183
 41651  013BFC  0A02               	xorlw	2	; case 63
 41652  013BFE  B4D8               	btfsc	status,2,c
 41653  013C00  EFE5  F098         	goto	i2l1161
 41654  013C04  D7E0               	goto	i2l1187
 41655  013C06                     __end_of_ADCPostProcessingCallback:
 41656                           	opt stack 0
 41657                           tosu	equ	0xFFF
 41658                           tosh	equ	0xFFE
 41659                           tosl	equ	0xFFD
 41660                           pclatu	equ	0xFFB
 41661                           pclath	equ	0xFFA
 41662                           tblptru	equ	0xFF8
 41663                           tblptrh	equ	0xFF7
 41664                           tblptrl	equ	0xFF6
 41665                           tablat	equ	0xFF5
 41666                           prodh	equ	0xFF4
 41667                           prodl	equ	0xFF3
 41668                           intcon	equ	0xFF2
 41669                           indf0	equ	0xFEF
 41670                           postinc0	equ	0xFEE
 41671                           fsr0h	equ	0xFEA
 41672                           fsr0l	equ	0xFE9
 41673                           wreg	equ	0xFE8
 41674                           indf1	equ	0xFE7
 41675                           postdec1	equ	0xFE5
 41676                           plusw1	equ	0xFE3
 41677                           fsr1h	equ	0xFE2
 41678                           fsr1l	equ	0xFE1
 41679                           bsr	equ	0xFE0
 41680                           indf2	equ	0xFDF
 41681                           postinc2	equ	0xFDE
 41682                           postdec2	equ	0xFDD
 41683                           plusw2	equ	0xFDB
 41684                           fsr2h	equ	0xFDA
 41685                           fsr2l	equ	0xFD9
 41686                           status	equ	0xFD8
 41687                           
 41688 ;; *************** function i2_TMR7_StopTimer *****************
 41689 ;; Defined at:
 41690 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 41691 ;; Parameters:    Size  Location     Type
 41692 ;;		None
 41693 ;; Auto vars:     Size  Location     Type
 41694 ;;		None
 41695 ;; Return value:  Size  Location     Type
 41696 ;;                  1    wreg      void 
 41697 ;; Registers used:
 41698 ;;		None
 41699 ;; Tracked objects:
 41700 ;;		On entry : 0/0
 41701 ;;		On exit  : 0/0
 41702 ;;		Unchanged: 0/0
 41703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41708 ;;Total ram usage:        0 bytes
 41709 ;; Hardware stack levels used:    1
 41710 ;; This function calls:
 41711 ;;		Nothing
 41712 ;; This function is called by:
 41713 ;;		_ADCPostProcessingCallback
 41714 ;; This function uses a non-reentrant model
 41715 ;;
 41716                           
 41717                           	psect	text127
 41718  0199F4                     __ptext127:
 41719                           	opt stack 0
 41720  0199F4                     i2_TMR7_StopTimer:
 41721                           	opt stack 16
 41722                           
 41723                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 41724                           
 41725                           ;incstack = 0
 41726  0199F4  010F               	movlb	15	; () banked
 41727  0199F6  9130               	bcf	48,0,b	;volatile
 41728                           
 41729                           ; BSR set to: 15
 41730  0199F8  0012               	return		;funcret
 41731  0199FA                     __end_ofi2_TMR7_StopTimer:
 41732                           	opt stack 0
 41733                           tosu	equ	0xFFF
 41734                           tosh	equ	0xFFE
 41735                           tosl	equ	0xFFD
 41736                           pclatu	equ	0xFFB
 41737                           pclath	equ	0xFFA
 41738                           tblptru	equ	0xFF8
 41739                           tblptrh	equ	0xFF7
 41740                           tblptrl	equ	0xFF6
 41741                           tablat	equ	0xFF5
 41742                           prodh	equ	0xFF4
 41743                           prodl	equ	0xFF3
 41744                           intcon	equ	0xFF2
 41745                           indf0	equ	0xFEF
 41746                           postinc0	equ	0xFEE
 41747                           fsr0h	equ	0xFEA
 41748                           fsr0l	equ	0xFE9
 41749                           wreg	equ	0xFE8
 41750                           indf1	equ	0xFE7
 41751                           postdec1	equ	0xFE5
 41752                           plusw1	equ	0xFE3
 41753                           fsr1h	equ	0xFE2
 41754                           fsr1l	equ	0xFE1
 41755                           bsr	equ	0xFE0
 41756                           indf2	equ	0xFDF
 41757                           postinc2	equ	0xFDE
 41758                           postdec2	equ	0xFDD
 41759                           plusw2	equ	0xFDB
 41760                           fsr2h	equ	0xFDA
 41761                           fsr2l	equ	0xFD9
 41762                           status	equ	0xFD8
 41763                           
 41764 ;; *************** function _peakToRMS *****************
 41765 ;; Defined at:
 41766 ;;		line 124 in file "main.c"
 41767 ;; Parameters:    Size  Location     Type
 41768 ;;  Peak            4   81[BANK0 ] void 
 41769 ;;  Angle           4   85[BANK0 ] void 
 41770 ;; Auto vars:     Size  Location     Type
 41771 ;;  RMS             4  101[BANK0 ] void 
 41772 ;; Return value:  Size  Location     Type
 41773 ;;                  4   81[BANK0 ] void 
 41774 ;; Registers used:
 41775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41776 ;; Tracked objects:
 41777 ;;		On entry : 0/0
 41778 ;;		On exit  : 0/0
 41779 ;;		Unchanged: 0/0
 41780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41781 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41782 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41784 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41785 ;;Total ram usage:       24 bytes
 41786 ;; Hardware stack levels used:    1
 41787 ;; Hardware stack levels required when called:    5
 41788 ;; This function calls:
 41789 ;;		_acos
 41790 ;;		_sin
 41791 ;;		_sqrt
 41792 ;;		i2___fladd
 41793 ;;		i2___fldiv
 41794 ;;		i2___flmul
 41795 ;;		i2___flneg
 41796 ;; This function is called by:
 41797 ;;		_ADCPostProcessingCallback
 41798 ;; This function uses a non-reentrant model
 41799 ;;
 41800                           
 41801                           	psect	text128
 41802  016BBA                     __ptext128:
 41803                           	opt stack 0
 41804  016BBA                     _peakToRMS:
 41805                           	opt stack 11
 41806                           
 41807                           ;main.c: 127: double RMS = 0.0;
 41808                           
 41809                           ; BSR set to: 15
 41810                           ;incstack = 0
 41811  016BBA  0E00               	movlw	0
 41812  016BBC  0100               	movlb	0	; () banked
 41813  016BBE  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 41814  016BC0  0E00               	movlw	0
 41815  016BC2  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 41816  016BC4  0E00               	movlw	0
 41817  016BC6  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 41818  016BC8  0E00               	movlw	0
 41819  016BCA  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 41820                           
 41821                           ; BSR set to: 0
 41822                           ;main.c: 130: RMS = 2.0 * acos(-1.0);
 41823  016BCC  0E00               	movlw	0
 41824  016BCE  6FA9               	movwf	acos@x& (0+255),b
 41825  016BD0  0E00               	movlw	0
 41826  016BD2  6FAA               	movwf	(acos@x+1)& (0+255),b
 41827  016BD4  0E80               	movlw	128
 41828  016BD6  6FAB               	movwf	(acos@x+2)& (0+255),b
 41829  016BD8  0EBF               	movlw	191
 41830  016BDA  6FAC               	movwf	(acos@x+3)& (0+255),b
 41831  016BDC  EC0C  F0C5         	call	_acos	;wreg free
 41832  016BE0  C0A9  F0C1         	movff	?_acos,_peakToRMS$4722
 41833  016BE4  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4722+1
 41834  016BE8  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4722+2
 41835  016BEC  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4722+3
 41836                           
 41837                           ;main.c: 130: RMS = 2.0 * acos(-1.0);
 41838  016BF0  C0C1  F030         	movff	_peakToRMS$4722,i2___flmul@b
 41839  016BF4  C0C2  F031         	movff	_peakToRMS$4722+1,i2___flmul@b+1
 41840  016BF8  C0C3  F032         	movff	_peakToRMS$4722+2,i2___flmul@b+2
 41841  016BFC  C0C4  F033         	movff	_peakToRMS$4722+3,i2___flmul@b+3
 41842  016C00  0E00               	movlw	0
 41843  016C02  6E34               	movwf	i2___flmul@a,c
 41844  016C04  0E00               	movlw	0
 41845  016C06  6E35               	movwf	i2___flmul@a+1,c
 41846  016C08  0E00               	movlw	0
 41847  016C0A  6E36               	movwf	i2___flmul@a+2,c
 41848  016C0C  0E40               	movlw	64
 41849  016C0E  6E37               	movwf	i2___flmul@a+3,c
 41850  016C10  ECF2  F0A5         	call	i2___flmul	;wreg free
 41851  016C14  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 41852  016C18  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 41853  016C1C  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 41854  016C20  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 41855                           
 41856                           ;main.c: 131: RMS = RMS - (2.0 * Angle);
 41857  016C24  0E00               	movlw	0
 41858  016C26  6E34               	movwf	i2___flmul@a,c
 41859  016C28  0E00               	movlw	0
 41860  016C2A  6E35               	movwf	i2___flmul@a+1,c
 41861  016C2C  0E00               	movlw	0
 41862  016C2E  6E36               	movwf	i2___flmul@a+2,c
 41863  016C30  0E40               	movlw	64
 41864  016C32  6E37               	movwf	i2___flmul@a+3,c
 41865  016C34  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 41866  016C38  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 41867  016C3C  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 41868  016C40  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 41869  016C44  ECF2  F0A5         	call	i2___flmul	;wreg free
 41870  016C48  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 41871  016C4C  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 41872  016C50  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 41873  016C54  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 41874  016C58  ECB6  F0CA         	call	i2___flneg	;wreg free
 41875  016C5C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 41876  016C60  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 41877  016C64  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 41878  016C68  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 41879  016C6C  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 41880  016C70  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 41881  016C74  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 41882  016C78  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 41883  016C7C  EC39  F0A9         	call	i2___fladd	;wreg free
 41884  016C80  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 41885  016C84  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 41886  016C88  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 41887  016C8C  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 41888                           
 41889                           ;main.c: 132: RMS = RMS + sin(2.0 * Angle);
 41890  016C90  0E00               	movlw	0
 41891  016C92  6E34               	movwf	i2___flmul@a,c
 41892  016C94  0E00               	movlw	0
 41893  016C96  6E35               	movwf	i2___flmul@a+1,c
 41894  016C98  0E00               	movlw	0
 41895  016C9A  6E36               	movwf	i2___flmul@a+2,c
 41896  016C9C  0E40               	movlw	64
 41897  016C9E  6E37               	movwf	i2___flmul@a+3,c
 41898  016CA0  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 41899  016CA4  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 41900  016CA8  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 41901  016CAC  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 41902  016CB0  ECF2  F0A5         	call	i2___flmul	;wreg free
 41903  016CB4  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4723
 41904  016CB8  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4723+1
 41905  016CBC  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4723+2
 41906  016CC0  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4723+3
 41907                           
 41908                           ;main.c: 132: RMS = RMS + sin(2.0 * Angle);
 41909  016CC4  C0B9  F088         	movff	_peakToRMS$4723,sin@f
 41910  016CC8  C0BA  F089         	movff	_peakToRMS$4723+1,sin@f+1
 41911  016CCC  C0BB  F08A         	movff	_peakToRMS$4723+2,sin@f+2
 41912  016CD0  C0BC  F08B         	movff	_peakToRMS$4723+3,sin@f+3
 41913  016CD4  EC5A  F0AC         	call	_sin	;wreg free
 41914  016CD8  C088  F0BD         	movff	?_sin,_peakToRMS$4724
 41915  016CDC  C089  F0BE         	movff	?_sin+1,_peakToRMS$4724+1
 41916  016CE0  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4724+2
 41917  016CE4  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4724+3
 41918                           
 41919                           ;main.c: 132: RMS = RMS + sin(2.0 * Angle);
 41920  016CE8  C0BD  F056         	movff	_peakToRMS$4724,i2___fladd@b
 41921  016CEC  C0BE  F057         	movff	_peakToRMS$4724+1,i2___fladd@b+1
 41922  016CF0  C0BF  F058         	movff	_peakToRMS$4724+2,i2___fladd@b+2
 41923  016CF4  C0C0  F059         	movff	_peakToRMS$4724+3,i2___fladd@b+3
 41924  016CF8  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 41925  016CFC  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 41926  016D00  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 41927  016D04  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 41928  016D08  EC39  F0A9         	call	i2___fladd	;wreg free
 41929  016D0C  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 41930  016D10  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 41931  016D14  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 41932  016D18  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 41933                           
 41934                           ;main.c: 133: RMS = RMS / (4.0 * acos(-1.0));
 41935  016D1C  0E00               	movlw	0
 41936  016D1E  0100               	movlb	0	; () banked
 41937  016D20  6FA9               	movwf	acos@x& (0+255),b
 41938  016D22  0E00               	movlw	0
 41939  016D24  6FAA               	movwf	(acos@x+1)& (0+255),b
 41940  016D26  0E80               	movlw	128
 41941  016D28  6FAB               	movwf	(acos@x+2)& (0+255),b
 41942  016D2A  0EBF               	movlw	191
 41943  016D2C  6FAC               	movwf	(acos@x+3)& (0+255),b
 41944  016D2E  EC0C  F0C5         	call	_acos	;wreg free
 41945  016D32  C0A9  F0C1         	movff	?_acos,_peakToRMS$4722
 41946  016D36  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4722+1
 41947  016D3A  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4722+2
 41948  016D3E  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4722+3
 41949                           
 41950                           ;main.c: 133: RMS = RMS / (4.0 * acos(-1.0));
 41951  016D42  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 41952  016D46  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 41953  016D4A  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 41954  016D4E  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 41955  016D52  0E00               	movlw	0
 41956  016D54  6E34               	movwf	i2___flmul@a,c
 41957  016D56  0E00               	movlw	0
 41958  016D58  6E35               	movwf	i2___flmul@a+1,c
 41959  016D5A  0E80               	movlw	128
 41960  016D5C  6E36               	movwf	i2___flmul@a+2,c
 41961  016D5E  0E40               	movlw	64
 41962  016D60  6E37               	movwf	i2___flmul@a+3,c
 41963  016D62  C0C1  F030         	movff	_peakToRMS$4722,i2___flmul@b
 41964  016D66  C0C2  F031         	movff	_peakToRMS$4722+1,i2___flmul@b+1
 41965  016D6A  C0C3  F032         	movff	_peakToRMS$4722+2,i2___flmul@b+2
 41966  016D6E  C0C4  F033         	movff	_peakToRMS$4722+3,i2___flmul@b+3
 41967  016D72  ECF2  F0A5         	call	i2___flmul	;wreg free
 41968  016D76  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 41969  016D7A  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 41970  016D7E  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 41971  016D82  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 41972  016D86  ECF9  F0B1         	call	i2___fldiv	;wreg free
 41973  016D8A  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 41974  016D8E  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 41975  016D92  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 41976  016D96  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 41977                           
 41978                           ;main.c: 134: RMS = sqrt(RMS);
 41979  016D9A  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 41980  016D9E  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 41981  016DA2  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 41982  016DA6  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 41983  016DAA  ECD7  F0AD         	call	_sqrt	;wreg free
 41984  016DAE  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 41985  016DB2  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 41986  016DB6  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 41987  016DBA  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 41988                           
 41989                           ;main.c: 135: RMS = Peak * RMS;
 41990  016DBE  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 41991  016DC2  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 41992  016DC6  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 41993  016DCA  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 41994  016DCE  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 41995  016DD2  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 41996  016DD6  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 41997  016DDA  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 41998  016DDE  ECF2  F0A5         	call	i2___flmul	;wreg free
 41999  016DE2  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 42000  016DE6  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 42001  016DEA  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 42002  016DEE  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 42003                           
 42004                           ;main.c: 136: return RMS;
 42005  016DF2  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 42006  016DF6  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 42007  016DFA  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 42008  016DFE  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 42009  016E02  0012               	return	
 42010  016E04                     __end_of_peakToRMS:
 42011                           	opt stack 0
 42012                           tosu	equ	0xFFF
 42013                           tosh	equ	0xFFE
 42014                           tosl	equ	0xFFD
 42015                           pclatu	equ	0xFFB
 42016                           pclath	equ	0xFFA
 42017                           tblptru	equ	0xFF8
 42018                           tblptrh	equ	0xFF7
 42019                           tblptrl	equ	0xFF6
 42020                           tablat	equ	0xFF5
 42021                           prodh	equ	0xFF4
 42022                           prodl	equ	0xFF3
 42023                           intcon	equ	0xFF2
 42024                           indf0	equ	0xFEF
 42025                           postinc0	equ	0xFEE
 42026                           fsr0h	equ	0xFEA
 42027                           fsr0l	equ	0xFE9
 42028                           wreg	equ	0xFE8
 42029                           indf1	equ	0xFE7
 42030                           postdec1	equ	0xFE5
 42031                           plusw1	equ	0xFE3
 42032                           fsr1h	equ	0xFE2
 42033                           fsr1l	equ	0xFE1
 42034                           bsr	equ	0xFE0
 42035                           indf2	equ	0xFDF
 42036                           postinc2	equ	0xFDE
 42037                           postdec2	equ	0xFDD
 42038                           plusw2	equ	0xFDB
 42039                           fsr2h	equ	0xFDA
 42040                           fsr2l	equ	0xFD9
 42041                           status	equ	0xFD8
 42042                           
 42043 ;; *************** function _acos *****************
 42044 ;; Defined at:
 42045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 42046 ;; Parameters:    Size  Location     Type
 42047 ;;  x               4   73[BANK0 ] void 
 42048 ;; Auto vars:     Size  Location     Type
 42049 ;;		None
 42050 ;; Return value:  Size  Location     Type
 42051 ;;                  4   73[BANK0 ] void 
 42052 ;; Registers used:
 42053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42054 ;; Tracked objects:
 42055 ;;		On entry : 0/0
 42056 ;;		On exit  : 0/0
 42057 ;;		Unchanged: 0/0
 42058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42060 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42062 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42063 ;;Total ram usage:        8 bytes
 42064 ;; Hardware stack levels used:    1
 42065 ;; Hardware stack levels required when called:    4
 42066 ;; This function calls:
 42067 ;;		_asin
 42068 ;;		i2___fladd
 42069 ;;		i2___flneg
 42070 ;; This function is called by:
 42071 ;;		_peakToRMS
 42072 ;; This function uses a non-reentrant model
 42073 ;;
 42074                           
 42075                           	psect	text129
 42076  018A18                     __ptext129:
 42077                           	opt stack 0
 42078  018A18                     _acos:
 42079                           	opt stack 11
 42080                           
 42081                           ;incstack = 0
 42082  018A18  C0A9  F091         	movff	acos@x,asin@x
 42083  018A1C  C0AA  F092         	movff	acos@x+1,asin@x+1
 42084  018A20  C0AB  F093         	movff	acos@x+2,asin@x+2
 42085  018A24  C0AC  F094         	movff	acos@x+3,asin@x+3
 42086  018A28  ECD8  F0AA         	call	_asin	;wreg free
 42087  018A2C  C091  F0AD         	movff	?_asin,_acos$4730
 42088  018A30  C092  F0AE         	movff	?_asin+1,_acos$4730+1
 42089  018A34  C093  F0AF         	movff	?_asin+2,_acos$4730+2
 42090  018A38  C094  F0B0         	movff	?_asin+3,_acos$4730+3
 42091  018A3C  C0AD  F02C         	movff	_acos$4730,i2___flneg@f1
 42092  018A40  C0AE  F02D         	movff	_acos$4730+1,i2___flneg@f1+1
 42093  018A44  C0AF  F02E         	movff	_acos$4730+2,i2___flneg@f1+2
 42094  018A48  C0B0  F02F         	movff	_acos$4730+3,i2___flneg@f1+3
 42095  018A4C  ECB6  F0CA         	call	i2___flneg	;wreg free
 42096  018A50  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 42097  018A54  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 42098  018A58  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 42099  018A5C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 42100  018A60  0EDB               	movlw	219
 42101  018A62  6E5A               	movwf	i2___fladd@a,c
 42102  018A64  0E0F               	movlw	15
 42103  018A66  6E5B               	movwf	i2___fladd@a+1,c
 42104  018A68  0EC9               	movlw	201
 42105  018A6A  6E5C               	movwf	i2___fladd@a+2,c
 42106  018A6C  0E3F               	movlw	63
 42107  018A6E  6E5D               	movwf	i2___fladd@a+3,c
 42108  018A70  EC39  F0A9         	call	i2___fladd	;wreg free
 42109  018A74  C056  F0A9         	movff	?i2___fladd,?_acos
 42110  018A78  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 42111  018A7C  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 42112  018A80  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 42113  018A84  0012               	return	
 42114  018A86                     __end_of_acos:
 42115                           	opt stack 0
 42116                           tosu	equ	0xFFF
 42117                           tosh	equ	0xFFE
 42118                           tosl	equ	0xFFD
 42119                           pclatu	equ	0xFFB
 42120                           pclath	equ	0xFFA
 42121                           tblptru	equ	0xFF8
 42122                           tblptrh	equ	0xFF7
 42123                           tblptrl	equ	0xFF6
 42124                           tablat	equ	0xFF5
 42125                           prodh	equ	0xFF4
 42126                           prodl	equ	0xFF3
 42127                           intcon	equ	0xFF2
 42128                           indf0	equ	0xFEF
 42129                           postinc0	equ	0xFEE
 42130                           fsr0h	equ	0xFEA
 42131                           fsr0l	equ	0xFE9
 42132                           wreg	equ	0xFE8
 42133                           indf1	equ	0xFE7
 42134                           postdec1	equ	0xFE5
 42135                           plusw1	equ	0xFE3
 42136                           fsr1h	equ	0xFE2
 42137                           fsr1l	equ	0xFE1
 42138                           bsr	equ	0xFE0
 42139                           indf2	equ	0xFDF
 42140                           postinc2	equ	0xFDE
 42141                           postdec2	equ	0xFDD
 42142                           plusw2	equ	0xFDB
 42143                           fsr2h	equ	0xFDA
 42144                           fsr2l	equ	0xFD9
 42145                           status	equ	0xFD8
 42146                           
 42147 ;; *************** function _asin *****************
 42148 ;; Defined at:
 42149 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 42150 ;; Parameters:    Size  Location     Type
 42151 ;;  x               4   49[BANK0 ] void 
 42152 ;; Auto vars:     Size  Location     Type
 42153 ;;  y               4   65[BANK0 ] void 
 42154 ;;  sgn             4   53[BANK0 ] void 
 42155 ;; Return value:  Size  Location     Type
 42156 ;;                  4   49[BANK0 ] void 
 42157 ;; Registers used:
 42158 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42159 ;; Tracked objects:
 42160 ;;		On entry : 0/0
 42161 ;;		On exit  : 0/0
 42162 ;;		Unchanged: 0/0
 42163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42165 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42167 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42168 ;;Total ram usage:       24 bytes
 42169 ;; Hardware stack levels used:    1
 42170 ;; Hardware stack levels required when called:    3
 42171 ;; This function calls:
 42172 ;;		_atan
 42173 ;;		_fabs
 42174 ;;		_sqrt
 42175 ;;		i2___fladd
 42176 ;;		i2___fldiv
 42177 ;;		i2___flge
 42178 ;;		i2___flmul
 42179 ;;		i2___flneg
 42180 ;; This function is called by:
 42181 ;;		_acos
 42182 ;; This function uses a non-reentrant model
 42183 ;;
 42184                           
 42185                           	psect	text130
 42186  0155B0                     __ptext130:
 42187                           	opt stack 0
 42188  0155B0                     _asin:
 42189                           	opt stack 11
 42190                           
 42191                           ;incstack = 0
 42192  0155B0  0E00               	movlw	0
 42193  0155B2  6E34               	movwf	i2___flge@ff1,c
 42194  0155B4  0E00               	movlw	0
 42195  0155B6  6E35               	movwf	i2___flge@ff1+1,c
 42196  0155B8  0E80               	movlw	128
 42197  0155BA  6E36               	movwf	i2___flge@ff1+2,c
 42198  0155BC  0E3F               	movlw	63
 42199  0155BE  6E37               	movwf	i2___flge@ff1+3,c
 42200  0155C0  C091  F030         	movff	asin@x,fabs@d
 42201  0155C4  C092  F031         	movff	asin@x+1,fabs@d+1
 42202  0155C8  C093  F032         	movff	asin@x+2,fabs@d+2
 42203  0155CC  C094  F033         	movff	asin@x+3,fabs@d+3
 42204  0155D0  EC5D  F0C9         	call	_fabs	;wreg free
 42205  0155D4  C030  F038         	movff	?_fabs,i2___flge@ff2
 42206  0155D8  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 42207  0155DC  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 42208  0155E0  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 42209  0155E4  EC89  F0BD         	call	i2___flge	;wreg free
 42210  0155E8  B0D8               	btfsc	status,0,c
 42211  0155EA  D00F               	goto	i2l1929
 42212  0155EC  0E00               	movlw	0
 42213  0155EE  0102               	movlb	2	; () banked
 42214  0155F0  6F41               	movwf	(_errno+1)& (0+255),b
 42215  0155F2  0E21               	movlw	33
 42216  0155F4  6F40               	movwf	_errno& (0+255),b
 42217  0155F6  0E00               	movlw	0
 42218  0155F8  0100               	movlb	0	; () banked
 42219  0155FA  6F91               	movwf	?_asin& (0+255),b
 42220  0155FC  0E00               	movlw	0
 42221  0155FE  6F92               	movwf	(?_asin+1)& (0+255),b
 42222  015600  0E00               	movlw	0
 42223  015602  6F93               	movwf	(?_asin+2)& (0+255),b
 42224  015604  0E00               	movlw	0
 42225  015606  6F94               	movwf	(?_asin+3)& (0+255),b
 42226                           
 42227                           ; BSR set to: 0
 42228  015608  0012               	return	
 42229  01560A                     i2l1929:
 42230                           
 42231                           ; BSR set to: 0
 42232  01560A  0E00               	movlw	0
 42233  01560C  0100               	movlb	0	; () banked
 42234  01560E  6F95               	movwf	asin@sgn& (0+255),b
 42235  015610  0E00               	movlw	0
 42236  015612  6F96               	movwf	(asin@sgn+1)& (0+255),b
 42237  015614  0E80               	movlw	128
 42238  015616  6F97               	movwf	(asin@sgn+2)& (0+255),b
 42239  015618  0E3F               	movlw	63
 42240  01561A  6F98               	movwf	(asin@sgn+3)& (0+255),b
 42241                           
 42242                           ; BSR set to: 0
 42243  01561C  C091  F034         	movff	asin@x,i2___flmul@a
 42244  015620  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 42245  015624  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 42246  015628  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 42247  01562C  C091  F030         	movff	asin@x,i2___flmul@b
 42248  015630  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 42249  015634  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 42250  015638  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 42251  01563C  ECF2  F0A5         	call	i2___flmul	;wreg free
 42252  015640  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 42253  015644  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 42254  015648  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 42255  01564C  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 42256  015650  ECB6  F0CA         	call	i2___flneg	;wreg free
 42257  015654  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 42258  015658  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 42259  01565C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 42260  015660  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 42261  015664  0E00               	movlw	0
 42262  015666  6E5A               	movwf	i2___fladd@a,c
 42263  015668  0E00               	movlw	0
 42264  01566A  6E5B               	movwf	i2___fladd@a+1,c
 42265  01566C  0E80               	movlw	128
 42266  01566E  6E5C               	movwf	i2___fladd@a+2,c
 42267  015670  0E3F               	movlw	63
 42268  015672  6E5D               	movwf	i2___fladd@a+3,c
 42269  015674  EC39  F0A9         	call	i2___fladd	;wreg free
 42270  015678  C056  F06C         	movff	?i2___fladd,sqrt@a
 42271  01567C  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 42272  015680  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 42273  015684  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 42274  015688  ECD7  F0AD         	call	_sqrt	;wreg free
 42275  01568C  C06C  F0A1         	movff	?_sqrt,asin@y
 42276  015690  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 42277  015694  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 42278  015698  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 42279  01569C  C091  F030         	movff	asin@x,fabs@d
 42280  0156A0  C092  F031         	movff	asin@x+1,fabs@d+1
 42281  0156A4  C093  F032         	movff	asin@x+2,fabs@d+2
 42282  0156A8  C094  F033         	movff	asin@x+3,fabs@d+3
 42283  0156AC  EC5D  F0C9         	call	_fabs	;wreg free
 42284  0156B0  C030  F034         	movff	?_fabs,i2___flge@ff1
 42285  0156B4  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 42286  0156B8  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 42287  0156BC  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 42288  0156C0  0E8F               	movlw	143
 42289  0156C2  6E38               	movwf	i2___flge@ff2,c
 42290  0156C4  0EC2               	movlw	194
 42291  0156C6  6E39               	movwf	i2___flge@ff2+1,c
 42292  0156C8  0E35               	movlw	53
 42293  0156CA  6E3A               	movwf	i2___flge@ff2+2,c
 42294  0156CC  0E3F               	movlw	63
 42295  0156CE  6E3B               	movwf	i2___flge@ff2+3,c
 42296  0156D0  EC89  F0BD         	call	i2___flge	;wreg free
 42297  0156D4  B0D8               	btfsc	status,0,c
 42298  0156D6  D02D               	goto	i2l1931
 42299  0156D8  C091  F013         	movff	asin@x,i2___fldiv@b
 42300  0156DC  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 42301  0156E0  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 42302  0156E4  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 42303  0156E8  C0A1  F017         	movff	asin@y,i2___fldiv@a
 42304  0156EC  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 42305  0156F0  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 42306  0156F4  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 42307  0156F8  ECF9  F0B1         	call	i2___fldiv	;wreg free
 42308  0156FC  C013  F0A5         	movff	?i2___fldiv,_asin$4731
 42309  015700  C014  F0A6         	movff	?i2___fldiv+1,_asin$4731+1
 42310  015704  C015  F0A7         	movff	?i2___fldiv+2,_asin$4731+2
 42311  015708  C016  F0A8         	movff	?i2___fldiv+3,_asin$4731+3
 42312  01570C  C0A5  F07C         	movff	_asin$4731,atan@f
 42313  015710  C0A6  F07D         	movff	_asin$4731+1,atan@f+1
 42314  015714  C0A7  F07E         	movff	_asin$4731+2,atan@f+2
 42315  015718  C0A8  F07F         	movff	_asin$4731+3,atan@f+3
 42316  01571C  EC02  F0B7         	call	_atan	;wreg free
 42317  015720  C07C  F091         	movff	?_atan,?_asin
 42318  015724  C07D  F092         	movff	?_atan+1,?_asin+1
 42319  015728  C07E  F093         	movff	?_atan+2,?_asin+2
 42320  01572C  C07F  F094         	movff	?_atan+3,?_asin+3
 42321  015730  0012               	return	
 42322  015732                     i2l1931:
 42323  015732  0100               	movlb	0	; () banked
 42324  015734  AF94               	btfss	(asin@x+3)& (0+255),7,b
 42325  015736  D06D               	goto	i2l1932
 42326                           
 42327                           ; BSR set to: 0
 42328  015738  C091  F017         	movff	asin@x,i2___fldiv@a
 42329  01573C  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 42330  015740  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 42331  015744  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 42332  015748  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 42333  01574C  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 42334  015750  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 42335  015754  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 42336  015758  ECB6  F0CA         	call	i2___flneg	;wreg free
 42337  01575C  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 42338  015760  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 42339  015764  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 42340  015768  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 42341  01576C  ECF9  F0B1         	call	i2___fldiv	;wreg free
 42342  015770  C013  F0A5         	movff	?i2___fldiv,_asin$4731
 42343  015774  C014  F0A6         	movff	?i2___fldiv+1,_asin$4731+1
 42344  015778  C015  F0A7         	movff	?i2___fldiv+2,_asin$4731+2
 42345  01577C  C016  F0A8         	movff	?i2___fldiv+3,_asin$4731+3
 42346  015780  C0A5  F07C         	movff	_asin$4731,atan@f
 42347  015784  C0A6  F07D         	movff	_asin$4731+1,atan@f+1
 42348  015788  C0A7  F07E         	movff	_asin$4731+2,atan@f+2
 42349  01578C  C0A8  F07F         	movff	_asin$4731+3,atan@f+3
 42350  015790  EC02  F0B7         	call	_atan	;wreg free
 42351  015794  C07C  F09D         	movff	?_atan,_asin$4732
 42352  015798  C07D  F09E         	movff	?_atan+1,_asin$4732+1
 42353  01579C  C07E  F09F         	movff	?_atan+2,_asin$4732+2
 42354  0157A0  C07F  F0A0         	movff	?_atan+3,_asin$4732+3
 42355  0157A4  0EDB               	movlw	219
 42356  0157A6  6E5A               	movwf	i2___fladd@a,c
 42357  0157A8  0E0F               	movlw	15
 42358  0157AA  6E5B               	movwf	i2___fladd@a+1,c
 42359  0157AC  0EC9               	movlw	201
 42360  0157AE  6E5C               	movwf	i2___fladd@a+2,c
 42361  0157B0  0E3F               	movlw	63
 42362  0157B2  6E5D               	movwf	i2___fladd@a+3,c
 42363  0157B4  C09D  F02C         	movff	_asin$4732,i2___flneg@f1
 42364  0157B8  C09E  F02D         	movff	_asin$4732+1,i2___flneg@f1+1
 42365  0157BC  C09F  F02E         	movff	_asin$4732+2,i2___flneg@f1+2
 42366  0157C0  C0A0  F02F         	movff	_asin$4732+3,i2___flneg@f1+3
 42367  0157C4  ECB6  F0CA         	call	i2___flneg	;wreg free
 42368  0157C8  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 42369  0157CC  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 42370  0157D0  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 42371  0157D4  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 42372  0157D8  EC39  F0A9         	call	i2___fladd	;wreg free
 42373  0157DC  C056  F099         	movff	?i2___fladd,_asin$4733
 42374  0157E0  C057  F09A         	movff	?i2___fladd+1,_asin$4733+1
 42375  0157E4  C058  F09B         	movff	?i2___fladd+2,_asin$4733+2
 42376  0157E8  C059  F09C         	movff	?i2___fladd+3,_asin$4733+3
 42377  0157EC  C099  F02C         	movff	_asin$4733,i2___flneg@f1
 42378  0157F0  C09A  F02D         	movff	_asin$4733+1,i2___flneg@f1+1
 42379  0157F4  C09B  F02E         	movff	_asin$4733+2,i2___flneg@f1+2
 42380  0157F8  C09C  F02F         	movff	_asin$4733+3,i2___flneg@f1+3
 42381  0157FC  ECB6  F0CA         	call	i2___flneg	;wreg free
 42382  015800  C02C  F091         	movff	?i2___flneg,?_asin
 42383  015804  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 42384  015808  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 42385  01580C  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 42386  015810  0012               	return	
 42387  015812                     i2l1932:
 42388  015812  C091  F017         	movff	asin@x,i2___fldiv@a
 42389  015816  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 42390  01581A  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 42391  01581E  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 42392  015822  C0A1  F013         	movff	asin@y,i2___fldiv@b
 42393  015826  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 42394  01582A  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 42395  01582E  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 42396  015832  ECF9  F0B1         	call	i2___fldiv	;wreg free
 42397  015836  C013  F0A5         	movff	?i2___fldiv,_asin$4731
 42398  01583A  C014  F0A6         	movff	?i2___fldiv+1,_asin$4731+1
 42399  01583E  C015  F0A7         	movff	?i2___fldiv+2,_asin$4731+2
 42400  015842  C016  F0A8         	movff	?i2___fldiv+3,_asin$4731+3
 42401  015846  C0A5  F07C         	movff	_asin$4731,atan@f
 42402  01584A  C0A6  F07D         	movff	_asin$4731+1,atan@f+1
 42403  01584E  C0A7  F07E         	movff	_asin$4731+2,atan@f+2
 42404  015852  C0A8  F07F         	movff	_asin$4731+3,atan@f+3
 42405  015856  EC02  F0B7         	call	_atan	;wreg free
 42406  01585A  C07C  F09D         	movff	?_atan,_asin$4732
 42407  01585E  C07D  F09E         	movff	?_atan+1,_asin$4732+1
 42408  015862  C07E  F09F         	movff	?_atan+2,_asin$4732+2
 42409  015866  C07F  F0A0         	movff	?_atan+3,_asin$4732+3
 42410  01586A  C09D  F02C         	movff	_asin$4732,i2___flneg@f1
 42411  01586E  C09E  F02D         	movff	_asin$4732+1,i2___flneg@f1+1
 42412  015872  C09F  F02E         	movff	_asin$4732+2,i2___flneg@f1+2
 42413  015876  C0A0  F02F         	movff	_asin$4732+3,i2___flneg@f1+3
 42414  01587A  ECB6  F0CA         	call	i2___flneg	;wreg free
 42415  01587E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 42416  015882  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 42417  015886  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 42418  01588A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 42419  01588E  0EDB               	movlw	219
 42420  015890  6E5A               	movwf	i2___fladd@a,c
 42421  015892  0E0F               	movlw	15
 42422  015894  6E5B               	movwf	i2___fladd@a+1,c
 42423  015896  0EC9               	movlw	201
 42424  015898  6E5C               	movwf	i2___fladd@a+2,c
 42425  01589A  0E3F               	movlw	63
 42426  01589C  6E5D               	movwf	i2___fladd@a+3,c
 42427  01589E  EC39  F0A9         	call	i2___fladd	;wreg free
 42428  0158A2  C056  F091         	movff	?i2___fladd,?_asin
 42429  0158A6  C057  F092         	movff	?i2___fladd+1,?_asin+1
 42430  0158AA  C058  F093         	movff	?i2___fladd+2,?_asin+2
 42431  0158AE  C059  F094         	movff	?i2___fladd+3,?_asin+3
 42432  0158B2  0012               	return	
 42433  0158B4                     __end_of_asin:
 42434                           	opt stack 0
 42435                           tosu	equ	0xFFF
 42436                           tosh	equ	0xFFE
 42437                           tosl	equ	0xFFD
 42438                           pclatu	equ	0xFFB
 42439                           pclath	equ	0xFFA
 42440                           tblptru	equ	0xFF8
 42441                           tblptrh	equ	0xFF7
 42442                           tblptrl	equ	0xFF6
 42443                           tablat	equ	0xFF5
 42444                           prodh	equ	0xFF4
 42445                           prodl	equ	0xFF3
 42446                           intcon	equ	0xFF2
 42447                           indf0	equ	0xFEF
 42448                           postinc0	equ	0xFEE
 42449                           fsr0h	equ	0xFEA
 42450                           fsr0l	equ	0xFE9
 42451                           wreg	equ	0xFE8
 42452                           indf1	equ	0xFE7
 42453                           postdec1	equ	0xFE5
 42454                           plusw1	equ	0xFE3
 42455                           fsr1h	equ	0xFE2
 42456                           fsr1l	equ	0xFE1
 42457                           bsr	equ	0xFE0
 42458                           indf2	equ	0xFDF
 42459                           postinc2	equ	0xFDE
 42460                           postdec2	equ	0xFDD
 42461                           plusw2	equ	0xFDB
 42462                           fsr2h	equ	0xFDA
 42463                           fsr2l	equ	0xFD9
 42464                           status	equ	0xFD8
 42465                           
 42466 ;; *************** function _sqrt *****************
 42467 ;; Defined at:
 42468 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 42469 ;; Parameters:    Size  Location     Type
 42470 ;;  a               4   12[BANK0 ] void 
 42471 ;; Auto vars:     Size  Location     Type
 42472 ;;  frac            4   37[BANK0 ] unsigned long 
 42473 ;;  root            4   33[BANK0 ] struct .
 42474 ;;  grs             4   27[BANK0 ] unsigned long 
 42475 ;;  tfrac           4   22[BANK0 ] unsigned long 
 42476 ;;  exp             2   31[BANK0 ] int 
 42477 ;;  p               1   26[BANK0 ] unsigned char 
 42478 ;;  i               1   21[BANK0 ] unsigned char 
 42479 ;;  sign            1   20[BANK0 ] unsigned char 
 42480 ;; Return value:  Size  Location     Type
 42481 ;;                  4   12[BANK0 ] unsigned char 
 42482 ;; Registers used:
 42483 ;;		wreg, status,2, status,0
 42484 ;; Tracked objects:
 42485 ;;		On entry : 0/0
 42486 ;;		On exit  : 0/0
 42487 ;;		Unchanged: 0/0
 42488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42490 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42491 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42492 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42493 ;;Total ram usage:       29 bytes
 42494 ;; Hardware stack levels used:    1
 42495 ;; This function calls:
 42496 ;;		Nothing
 42497 ;; This function is called by:
 42498 ;;		_peakToRMS
 42499 ;;		_asin
 42500 ;; This function uses a non-reentrant model
 42501 ;;
 42502                           
 42503                           	psect	text131
 42504  015BAE                     __ptext131:
 42505                           	opt stack 0
 42506  015BAE                     _sqrt:
 42507                           	opt stack 15
 42508                           
 42509                           ;incstack = 0
 42510  015BAE  0100               	movlb	0	; () banked
 42511  015BB0  516F               	movf	(sqrt@a+3)& (0+255),w,b
 42512  015BB2  0B80               	andlw	128
 42513  015BB4  6F74               	movwf	sqrt@sign& (0+255),b
 42514  015BB6  516F               	movf	(sqrt@a+3)& (0+255),w,b
 42515  015BB8  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 42516  015BBA  6F7A               	movwf	sqrt@p& (0+255),b
 42517                           
 42518                           ; BSR set to: 0
 42519  015BBC  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 42520                           
 42521                           ; BSR set to: 0
 42522  015BBE  817A               	bsf	sqrt@p& (0+255),0,b
 42523                           
 42524                           ; BSR set to: 0
 42525                           
 42526                           ; BSR set to: 0
 42527  015BC0  C07A  F07F         	movff	sqrt@p,sqrt@exp
 42528  015BC4  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 42529                           
 42530                           ; BSR set to: 0
 42531  015BC6  0EFF               	movlw	255
 42532  015BC8  156C               	andwf	sqrt@a& (0+255),w,b
 42533  015BCA  6F85               	movwf	sqrt@frac& (0+255),b
 42534  015BCC  0EFF               	movlw	255
 42535  015BCE  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 42536  015BD0  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 42537  015BD2  0E7F               	movlw	127
 42538  015BD4  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 42539  015BD6  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 42540  015BD8  0E00               	movlw	0
 42541  015BDA  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 42542  015BDC  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 42543                           
 42544                           ; BSR set to: 0
 42545  015BDE  517F               	movf	sqrt@exp& (0+255),w,b
 42546  015BE0  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 42547  015BE2  B4D8               	btfsc	status,2,c
 42548  015BE4  D005               	goto	i2l2458
 42549                           
 42550                           ; BSR set to: 0
 42551  015BE6  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 42552                           
 42553                           ; BSR set to: 0
 42554  015BE8  297F               	incf	sqrt@exp& (0+255),w,b
 42555  015BEA  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 42556  015BEC  A4D8               	btfss	status,2,c
 42557  015BEE  D008               	goto	i2l2460
 42558  015BF0                     i2l2458:
 42559                           
 42560                           ; BSR set to: 0
 42561                           
 42562                           ; BSR set to: 0
 42563  015BF0  0E00               	movlw	0
 42564  015BF2  6F85               	movwf	sqrt@frac& (0+255),b
 42565  015BF4  0E00               	movlw	0
 42566  015BF6  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 42567  015BF8  0E00               	movlw	0
 42568  015BFA  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 42569  015BFC  0E00               	movlw	0
 42570  015BFE  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 42571  015C00                     i2l2460:
 42572                           
 42573                           ; BSR set to: 0
 42574                           
 42575                           ; BSR set to: 0
 42576  015C00  517F               	movf	sqrt@exp& (0+255),w,b
 42577  015C02  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 42578  015C04  A4D8               	btfss	status,2,c
 42579  015C06  D009               	goto	i2l2461
 42580                           
 42581                           ; BSR set to: 0
 42582  015C08  0E00               	movlw	0
 42583  015C0A  6F6C               	movwf	?_sqrt& (0+255),b
 42584  015C0C  0E00               	movlw	0
 42585  015C0E  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 42586  015C10  0E00               	movlw	0
 42587  015C12  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 42588  015C14  0E00               	movlw	0
 42589  015C16  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 42590                           
 42591                           ; BSR set to: 0
 42592  015C18  0012               	return	
 42593  015C1A                     i2l2461:
 42594                           
 42595                           ; BSR set to: 0
 42596                           
 42597                           ; BSR set to: 0
 42598  015C1A  5174               	movf	sqrt@sign& (0+255),w,b
 42599  015C1C  B4D8               	btfsc	status,2,c
 42600  015C1E  D01A               	goto	i2l2463
 42601                           
 42602                           ; BSR set to: 0
 42603  015C20  0E00               	movlw	0
 42604  015C22  6F81               	movwf	sqrt@root& (0+255),b
 42605  015C24  0E00               	movlw	0
 42606  015C26  6F82               	movwf	(sqrt@root+1)& (0+255),b
 42607  015C28  0E40               	movlw	64
 42608  015C2A  6F83               	movwf	(sqrt@root+2)& (0+255),b
 42609  015C2C  0E00               	movlw	0
 42610  015C2E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 42611                           
 42612                           ; BSR set to: 0
 42613  015C30  0E80               	movlw	128
 42614  015C32  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 42615  015C34  0EFF               	movlw	255
 42616  015C36  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 42617                           
 42618                           ; BSR set to: 0
 42619  015C38  0E00               	movlw	0
 42620  015C3A  0102               	movlb	2	; () banked
 42621  015C3C  6F41               	movwf	(_errno+1)& (0+255),b
 42622  015C3E  0E21               	movlw	33
 42623  015C40  6F40               	movwf	_errno& (0+255),b
 42624                           
 42625                           ; BSR set to: 2
 42626  015C42  C081  F06C         	movff	sqrt@root,?_sqrt
 42627  015C46  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 42628  015C4A  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 42629  015C4E  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 42630                           
 42631                           ; BSR set to: 2
 42632  015C52  0012               	return	
 42633  015C54                     i2l2463:
 42634                           
 42635                           ; BSR set to: 2
 42636  015C54  0100               	movlb	0	; () banked
 42637  015C56  297F               	incf	sqrt@exp& (0+255),w,b
 42638  015C58  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 42639  015C5A  A4D8               	btfss	status,2,c
 42640  015C5C  D011               	goto	i2l2464
 42641                           
 42642                           ; BSR set to: 0
 42643  015C5E  0E00               	movlw	0
 42644  015C60  6F81               	movwf	sqrt@root& (0+255),b
 42645  015C62  0E00               	movlw	0
 42646  015C64  6F82               	movwf	(sqrt@root+1)& (0+255),b
 42647  015C66  0E80               	movlw	128
 42648  015C68  6F83               	movwf	(sqrt@root+2)& (0+255),b
 42649  015C6A  0E7F               	movlw	127
 42650  015C6C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 42651                           
 42652                           ; BSR set to: 0
 42653  015C6E  C081  F06C         	movff	sqrt@root,?_sqrt
 42654  015C72  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 42655  015C76  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 42656  015C7A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 42657                           
 42658                           ; BSR set to: 0
 42659  015C7E  0012               	return	
 42660  015C80                     i2l2464:
 42661                           
 42662                           ; BSR set to: 0
 42663                           
 42664                           ; BSR set to: 0
 42665  015C80  0E81               	movlw	129
 42666  015C82  277F               	addwf	sqrt@exp& (0+255),f,b
 42667  015C84  0EFF               	movlw	255
 42668  015C86  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 42669  015C88  517F               	movf	sqrt@exp& (0+255),w,b
 42670  015C8A  0B01               	andlw	1
 42671  015C8C  6F7A               	movwf	sqrt@p& (0+255),b
 42672  015C8E  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 42673  015C90  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 42674  015C92  337F               	rrcf	sqrt@exp& (0+255),f,b
 42675  015C94  0E7F               	movlw	127
 42676  015C96  277F               	addwf	sqrt@exp& (0+255),f,b
 42677  015C98  0E00               	movlw	0
 42678  015C9A  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 42679  015C9C  90D8               	bcf	status,0,c
 42680  015C9E  3585               	rlcf	sqrt@frac& (0+255),w,b
 42681  015CA0  6F76               	movwf	sqrt@tfrac& (0+255),b
 42682  015CA2  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 42683  015CA4  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 42684  015CA6  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 42685  015CA8  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 42686  015CAA  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 42687  015CAC  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 42688                           
 42689                           ; BSR set to: 0
 42690  015CAE  0E00               	movlw	0
 42691  015CB0  6F85               	movwf	sqrt@frac& (0+255),b
 42692  015CB2  0E00               	movlw	0
 42693  015CB4  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 42694  015CB6  0E00               	movlw	0
 42695  015CB8  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 42696  015CBA  0E00               	movlw	0
 42697  015CBC  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 42698                           
 42699                           ; BSR set to: 0
 42700  015CBE  0E00               	movlw	0
 42701  015CC0  6F7B               	movwf	sqrt@grs& (0+255),b
 42702  015CC2  0E00               	movlw	0
 42703  015CC4  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 42704  015CC6  0E00               	movlw	0
 42705  015CC8  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 42706  015CCA  0E01               	movlw	1
 42707  015CCC  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 42708                           
 42709                           ; BSR set to: 0
 42710  015CCE  517A               	movf	sqrt@p& (0+255),w,b
 42711  015CD0  B4D8               	btfsc	status,2,c
 42712  015CD2  D005               	goto	i2l2465
 42713                           
 42714                           ; BSR set to: 0
 42715  015CD4  90D8               	bcf	status,0,c
 42716  015CD6  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 42717  015CD8  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 42718  015CDA  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 42719  015CDC  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 42720  015CDE                     i2l2465:
 42721                           
 42722                           ; BSR set to: 0
 42723                           
 42724                           ; BSR set to: 0
 42725  015CDE  0E00               	movlw	0
 42726  015CE0  6F75               	movwf	sqrt@i& (0+255),b
 42727  015CE2  D052               	goto	i2l2466
 42728  015CE4                     
 42729                           ; BSR set to: 0
 42730                           
 42731                           ; BSR set to: 0
 42732  015CE4  517B               	movf	sqrt@grs& (0+255),w,b
 42733  015CE6  1385               	iorwf	sqrt@frac& (0+255),f,b
 42734  015CE8  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 42735  015CEA  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 42736  015CEC  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 42737  015CEE  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 42738  015CF0  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 42739  015CF2  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 42740  015CF4  5185               	movf	sqrt@frac& (0+255),w,b
 42741  015CF6  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 42742  015CF8  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 42743  015CFA  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 42744  015CFC  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 42745  015CFE  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 42746  015D00  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 42747  015D02  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 42748  015D04  A0D8               	btfss	status,0,c
 42749  015D06  D011               	goto	i2l2468
 42750                           
 42751                           ; BSR set to: 0
 42752  015D08  5185               	movf	sqrt@frac& (0+255),w,b
 42753  015D0A  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 42754  015D0C  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 42755  015D0E  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 42756  015D10  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 42757  015D12  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 42758  015D14  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 42759  015D16  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 42760  015D18  517B               	movf	sqrt@grs& (0+255),w,b
 42761  015D1A  2785               	addwf	sqrt@frac& (0+255),f,b
 42762  015D1C  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 42763  015D1E  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 42764  015D20  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 42765  015D22  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 42766  015D24  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 42767  015D26  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 42768  015D28  D014               	goto	i2l2469
 42769  015D2A                     i2l2468:
 42770                           
 42771                           ; BSR set to: 0
 42772                           
 42773                           ; BSR set to: 0
 42774  015D2A  C07B  F070         	movff	sqrt@grs,??_sqrt
 42775  015D2E  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 42776  015D32  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 42777  015D36  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 42778  015D3A  1F70               	comf	??_sqrt& (0+255),f,b
 42779  015D3C  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 42780  015D3E  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 42781  015D40  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 42782  015D42  5170               	movf	??_sqrt& (0+255),w,b
 42783  015D44  1785               	andwf	sqrt@frac& (0+255),f,b
 42784  015D46  5171               	movf	(??_sqrt+1)& (0+255),w,b
 42785  015D48  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 42786  015D4A  5172               	movf	(??_sqrt+2)& (0+255),w,b
 42787  015D4C  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 42788  015D4E  5173               	movf	(??_sqrt+3)& (0+255),w,b
 42789  015D50  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 42790  015D52                     i2l2469:
 42791                           
 42792                           ; BSR set to: 0
 42793                           
 42794                           ; BSR set to: 0
 42795  015D52  C07B  F070         	movff	sqrt@grs,??_sqrt
 42796  015D56  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 42797  015D5A  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 42798  015D5E  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 42799  015D62  90D8               	bcf	status,0,c
 42800  015D64  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 42801  015D66  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 42802  015D68  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 42803  015D6A  3370               	rrcf	??_sqrt& (0+255),f,b
 42804  015D6C  C070  F07B         	movff	??_sqrt,sqrt@grs
 42805  015D70  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 42806  015D74  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 42807  015D78  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 42808                           
 42809                           ; BSR set to: 0
 42810  015D7C  90D8               	bcf	status,0,c
 42811  015D7E  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 42812  015D80  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 42813  015D82  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 42814  015D84  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 42815                           
 42816                           ; BSR set to: 0
 42817  015D86  2B75               	incf	sqrt@i& (0+255),f,b
 42818  015D88                     i2l2466:
 42819                           
 42820                           ; BSR set to: 0
 42821                           
 42822                           ; BSR set to: 0
 42823  015D88  0E18               	movlw	24
 42824  015D8A  6575               	cpfsgt	sqrt@i& (0+255),b
 42825  015D8C  D7AB               	goto	i2l2467
 42826                           
 42827                           ; BSR set to: 0
 42828                           
 42829                           ; BSR set to: 0
 42830  015D8E  C085  F070         	movff	sqrt@frac,??_sqrt
 42831  015D92  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 42832  015D96  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 42833  015D9A  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 42834  015D9E  90D8               	bcf	status,0,c
 42835  015DA0  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 42836  015DA2  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 42837  015DA4  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 42838  015DA6  3370               	rrcf	??_sqrt& (0+255),f,b
 42839  015DA8  C070  F085         	movff	??_sqrt,sqrt@frac
 42840  015DAC  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 42841  015DB0  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 42842  015DB4  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 42843                           
 42844                           ; BSR set to: 0
 42845  015DB8  0E01               	movlw	1
 42846  015DBA  1585               	andwf	sqrt@frac& (0+255),w,b
 42847  015DBC  6F7B               	movwf	sqrt@grs& (0+255),b
 42848  015DBE  0E00               	movlw	0
 42849  015DC0  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 42850  015DC2  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 42851  015DC4  0E00               	movlw	0
 42852  015DC6  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 42853  015DC8  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 42854  015DCA  0E00               	movlw	0
 42855  015DCC  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 42856  015DCE  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 42857                           
 42858                           ; BSR set to: 0
 42859  015DD0  C085  F070         	movff	sqrt@frac,??_sqrt
 42860  015DD4  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 42861  015DD8  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 42862  015DDC  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 42863  015DE0  90D8               	bcf	status,0,c
 42864  015DE2  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 42865  015DE4  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 42866  015DE6  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 42867  015DE8  3370               	rrcf	??_sqrt& (0+255),f,b
 42868  015DEA  C070  F085         	movff	??_sqrt,sqrt@frac
 42869  015DEE  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 42870  015DF2  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 42871  015DF6  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 42872  015DFA  517B               	movf	sqrt@grs& (0+255),w,b
 42873  015DFC  2785               	addwf	sqrt@frac& (0+255),f,b
 42874  015DFE  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 42875  015E00  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 42876  015E02  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 42877  015E04  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 42878  015E06  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 42879  015E08  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 42880                           
 42881                           ; BSR set to: 0
 42882  015E0A  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 42883  015E0C  D017               	goto	i2l2471
 42884                           
 42885                           ; BSR set to: 0
 42886  015E0E  C085  F070         	movff	sqrt@frac,??_sqrt
 42887  015E12  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 42888  015E16  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 42889  015E1A  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 42890  015E1E  90D8               	bcf	status,0,c
 42891  015E20  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 42892  015E22  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 42893  015E24  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 42894  015E26  3370               	rrcf	??_sqrt& (0+255),f,b
 42895  015E28  C070  F085         	movff	??_sqrt,sqrt@frac
 42896  015E2C  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 42897  015E30  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 42898  015E34  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 42899  015E38  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 42900  015E3A  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 42901  015E3C                     i2l2471:
 42902                           
 42903                           ; BSR set to: 0
 42904                           
 42905                           ; BSR set to: 0
 42906  015E3C  0EFF               	movlw	255
 42907  015E3E  1585               	andwf	sqrt@frac& (0+255),w,b
 42908  015E40  6F81               	movwf	sqrt@root& (0+255),b
 42909  015E42  0EFF               	movlw	255
 42910  015E44  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 42911  015E46  6F82               	movwf	(sqrt@root+1)& (0+255),b
 42912  015E48  0E7F               	movlw	127
 42913  015E4A  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 42914  015E4C  6F83               	movwf	(sqrt@root+2)& (0+255),b
 42915  015E4E  0E00               	movlw	0
 42916  015E50  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 42917  015E52  6F84               	movwf	(sqrt@root+3)& (0+255),b
 42918                           
 42919                           ; BSR set to: 0
 42920  015E54  C07F  F07A         	movff	sqrt@exp,sqrt@p
 42921                           
 42922                           ; BSR set to: 0
 42923  015E58  B17A               	btfsc	sqrt@p& (0+255),0,b
 42924                           
 42925                           ; BSR set to: 0
 42926  015E5A  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 42927                           
 42928                           ; BSR set to: 0
 42929                           
 42930                           ; BSR set to: 0
 42931  015E5C  90D8               	bcf	status,0,c
 42932  015E5E  317A               	rrcf	sqrt@p& (0+255),w,b
 42933  015E60  6F84               	movwf	(sqrt@root+3)& (0+255),b
 42934                           
 42935                           ; BSR set to: 0
 42936  015E62  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 42937                           
 42938                           ; BSR set to: 0
 42939  015E64  C081  F06C         	movff	sqrt@root,?_sqrt
 42940  015E68  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 42941  015E6C  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 42942  015E70  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 42943  015E74  0012               	return	
 42944  015E76                     __end_of_sqrt:
 42945                           	opt stack 0
 42946                           tosu	equ	0xFFF
 42947                           tosh	equ	0xFFE
 42948                           tosl	equ	0xFFD
 42949                           pclatu	equ	0xFFB
 42950                           pclath	equ	0xFFA
 42951                           tblptru	equ	0xFF8
 42952                           tblptrh	equ	0xFF7
 42953                           tblptrl	equ	0xFF6
 42954                           tablat	equ	0xFF5
 42955                           prodh	equ	0xFF4
 42956                           prodl	equ	0xFF3
 42957                           intcon	equ	0xFF2
 42958                           indf0	equ	0xFEF
 42959                           postinc0	equ	0xFEE
 42960                           fsr0h	equ	0xFEA
 42961                           fsr0l	equ	0xFE9
 42962                           wreg	equ	0xFE8
 42963                           indf1	equ	0xFE7
 42964                           postdec1	equ	0xFE5
 42965                           plusw1	equ	0xFE3
 42966                           fsr1h	equ	0xFE2
 42967                           fsr1l	equ	0xFE1
 42968                           bsr	equ	0xFE0
 42969                           indf2	equ	0xFDF
 42970                           postinc2	equ	0xFDE
 42971                           postdec2	equ	0xFDD
 42972                           plusw2	equ	0xFDB
 42973                           fsr2h	equ	0xFDA
 42974                           fsr2l	equ	0xFD9
 42975                           status	equ	0xFD8
 42976                           
 42977 ;; *************** function _atan *****************
 42978 ;; Defined at:
 42979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 42980 ;; Parameters:    Size  Location     Type
 42981 ;;  f               4   28[BANK0 ] unsigned char 
 42982 ;; Auto vars:     Size  Location     Type
 42983 ;;  val             4   45[BANK0 ] unsigned char 
 42984 ;;  val_squared     4   41[BANK0 ] unsigned char 
 42985 ;;  x               4   36[BANK0 ] unsigned char 
 42986 ;;  y               4   32[BANK0 ] unsigned char 
 42987 ;;  recip           1   40[BANK0 ] unsigned char 
 42988 ;; Return value:  Size  Location     Type
 42989 ;;                  4   28[BANK0 ] unsigned char 
 42990 ;; Registers used:
 42991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42992 ;; Tracked objects:
 42993 ;;		On entry : 0/0
 42994 ;;		On exit  : 0/0
 42995 ;;		Unchanged: 0/0
 42996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42998 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43000 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43001 ;;Total ram usage:       21 bytes
 43002 ;; Hardware stack levels used:    1
 43003 ;; Hardware stack levels required when called:    2
 43004 ;; This function calls:
 43005 ;;		_eval_poly
 43006 ;;		_fabs
 43007 ;;		i2___fladd
 43008 ;;		i2___fldiv
 43009 ;;		i2___flge
 43010 ;;		i2___flmul
 43011 ;;		i2___flneg
 43012 ;; This function is called by:
 43013 ;;		_asin
 43014 ;; This function uses a non-reentrant model
 43015 ;;
 43016                           
 43017                           	psect	text132
 43018  016E04                     __ptext132:
 43019                           	opt stack 0
 43020  016E04                     _atan:
 43021                           	opt stack 11
 43022                           
 43023                           ;incstack = 0
 43024  016E04  C07C  F030         	movff	atan@f,fabs@d
 43025  016E08  C07D  F031         	movff	atan@f+1,fabs@d+1
 43026  016E0C  C07E  F032         	movff	atan@f+2,fabs@d+2
 43027  016E10  C07F  F033         	movff	atan@f+3,fabs@d+3
 43028  016E14  EC5D  F0C9         	call	_fabs	;wreg free
 43029  016E18  C030  F08D         	movff	?_fabs,atan@val
 43030  016E1C  C031  F08E         	movff	?_fabs+1,atan@val+1
 43031  016E20  C032  F08F         	movff	?_fabs+2,atan@val+2
 43032  016E24  C033  F090         	movff	?_fabs+3,atan@val+3
 43033  016E28  0100               	movlb	0	; () banked
 43034  016E2A  518D               	movf	atan@val& (0+255),w,b
 43035  016E2C  118E               	iorwf	(atan@val+1)& (0+255),w,b
 43036  016E2E  118F               	iorwf	(atan@val+2)& (0+255),w,b
 43037  016E30  1190               	iorwf	(atan@val+3)& (0+255),w,b
 43038  016E32  A4D8               	btfss	status,2,c
 43039  016E34  D009               	goto	i2l1948
 43040                           
 43041                           ; BSR set to: 0
 43042  016E36  0E00               	movlw	0
 43043  016E38  6F7C               	movwf	?_atan& (0+255),b
 43044  016E3A  0E00               	movlw	0
 43045  016E3C  6F7D               	movwf	(?_atan+1)& (0+255),b
 43046  016E3E  0E00               	movlw	0
 43047  016E40  6F7E               	movwf	(?_atan+2)& (0+255),b
 43048  016E42  0E00               	movlw	0
 43049  016E44  6F7F               	movwf	(?_atan+3)& (0+255),b
 43050                           
 43051                           ; BSR set to: 0
 43052  016E46  0012               	return	
 43053  016E48                     i2l1948:
 43054                           
 43055                           ; BSR set to: 0
 43056                           
 43057                           ; BSR set to: 0
 43058  016E48  0E00               	movlw	0
 43059  016E4A  6E34               	movwf	i2___flge@ff1,c
 43060  016E4C  0E00               	movlw	0
 43061  016E4E  6E35               	movwf	i2___flge@ff1+1,c
 43062  016E50  0E80               	movlw	128
 43063  016E52  6E36               	movwf	i2___flge@ff1+2,c
 43064  016E54  0E3F               	movlw	63
 43065  016E56  6E37               	movwf	i2___flge@ff1+3,c
 43066  016E58  C08D  F038         	movff	atan@val,i2___flge@ff2
 43067  016E5C  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 43068  016E60  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 43069  016E64  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 43070  016E68  EC89  F0BD         	call	i2___flge	;wreg free
 43071  016E6C  B0D8               	btfsc	status,0,c
 43072  016E6E  D002               	goto	i2u1557_40
 43073  016E70  0E01               	movlw	1
 43074  016E72  D001               	goto	i2u1558_40
 43075  016E74                     i2u1557_40:
 43076  016E74  0E00               	movlw	0
 43077  016E76                     i2u1558_40:
 43078  016E76  0100               	movlb	0	; () banked
 43079  016E78  6F88               	movwf	atan@recip& (0+255),b
 43080  016E7A  5188               	movf	atan@recip& (0+255),w,b
 43081  016E7C  B4D8               	btfsc	status,2,c
 43082  016E7E  D01A               	goto	i2l1950
 43083                           
 43084                           ; BSR set to: 0
 43085  016E80  0E00               	movlw	0
 43086  016E82  6E13               	movwf	i2___fldiv@b,c
 43087  016E84  0E00               	movlw	0
 43088  016E86  6E14               	movwf	i2___fldiv@b+1,c
 43089  016E88  0E80               	movlw	128
 43090  016E8A  6E15               	movwf	i2___fldiv@b+2,c
 43091  016E8C  0E3F               	movlw	63
 43092  016E8E  6E16               	movwf	i2___fldiv@b+3,c
 43093  016E90  C08D  F017         	movff	atan@val,i2___fldiv@a
 43094  016E94  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 43095  016E98  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 43096  016E9C  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 43097  016EA0  ECF9  F0B1         	call	i2___fldiv	;wreg free
 43098  016EA4  C013  F08D         	movff	?i2___fldiv,atan@val
 43099  016EA8  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 43100  016EAC  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 43101  016EB0  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 43102  016EB4                     i2l1950:
 43103  016EB4  C08D  F030         	movff	atan@val,i2___flmul@b
 43104  016EB8  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 43105  016EBC  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 43106  016EC0  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 43107  016EC4  C08D  F034         	movff	atan@val,i2___flmul@a
 43108  016EC8  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 43109  016ECC  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 43110  016ED0  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 43111  016ED4  ECF2  F0A5         	call	i2___flmul	;wreg free
 43112  016ED8  C030  F089         	movff	?i2___flmul,atan@val_squared
 43113  016EDC  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 43114  016EE0  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 43115  016EE4  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 43116  016EE8  C089  F06C         	movff	atan@val_squared,eval_poly@x
 43117  016EEC  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 43118  016EF0  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 43119  016EF4  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 43120  016EF8  0E49               	movlw	low atan@coeff_b
 43121  016EFA  0100               	movlb	0	; () banked
 43122  016EFC  6F70               	movwf	eval_poly@d& (0+255),b
 43123  016EFE  0ED5               	movlw	high atan@coeff_b
 43124  016F00  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 43125  016F02  0E00               	movlw	0
 43126  016F04  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 43127  016F06  0E04               	movlw	4
 43128  016F08  6F72               	movwf	eval_poly@n& (0+255),b
 43129  016F0A  ECA2  F0BE         	call	_eval_poly	;wreg free
 43130  016F0E  C06C  F080         	movff	?_eval_poly,atan@y
 43131  016F12  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 43132  016F16  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 43133  016F1A  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 43134  016F1E  C089  F06C         	movff	atan@val_squared,eval_poly@x
 43135  016F22  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 43136  016F26  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 43137  016F2A  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 43138  016F2E  0E1D               	movlw	low atan@coeff_a
 43139  016F30  0100               	movlb	0	; () banked
 43140  016F32  6F70               	movwf	eval_poly@d& (0+255),b
 43141  016F34  0ED5               	movlw	high atan@coeff_a
 43142  016F36  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 43143  016F38  0E00               	movlw	0
 43144  016F3A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 43145  016F3C  0E05               	movlw	5
 43146  016F3E  6F72               	movwf	eval_poly@n& (0+255),b
 43147  016F40  ECA2  F0BE         	call	_eval_poly	;wreg free
 43148  016F44  C06C  F084         	movff	?_eval_poly,atan@x
 43149  016F48  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 43150  016F4C  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 43151  016F50  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 43152  016F54  C08D  F030         	movff	atan@val,i2___flmul@b
 43153  016F58  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 43154  016F5C  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 43155  016F60  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 43156  016F64  C080  F017         	movff	atan@y,i2___fldiv@a
 43157  016F68  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 43158  016F6C  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 43159  016F70  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 43160  016F74  C084  F013         	movff	atan@x,i2___fldiv@b
 43161  016F78  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 43162  016F7C  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 43163  016F80  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 43164  016F84  ECF9  F0B1         	call	i2___fldiv	;wreg free
 43165  016F88  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 43166  016F8C  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 43167  016F90  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 43168  016F94  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 43169  016F98  ECF2  F0A5         	call	i2___flmul	;wreg free
 43170  016F9C  C030  F08D         	movff	?i2___flmul,atan@val
 43171  016FA0  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 43172  016FA4  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 43173  016FA8  C033  F090         	movff	?i2___flmul+3,atan@val+3
 43174  016FAC  0100               	movlb	0	; () banked
 43175  016FAE  5188               	movf	atan@recip& (0+255),w,b
 43176  016FB0  B4D8               	btfsc	status,2,c
 43177  016FB2  D024               	goto	i2l1951
 43178                           
 43179                           ; BSR set to: 0
 43180  016FB4  C08D  F02C         	movff	atan@val,i2___flneg@f1
 43181  016FB8  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 43182  016FBC  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 43183  016FC0  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 43184  016FC4  ECB6  F0CA         	call	i2___flneg	;wreg free
 43185  016FC8  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 43186  016FCC  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 43187  016FD0  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 43188  016FD4  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 43189  016FD8  0EDB               	movlw	219
 43190  016FDA  6E5A               	movwf	i2___fladd@a,c
 43191  016FDC  0E0F               	movlw	15
 43192  016FDE  6E5B               	movwf	i2___fladd@a+1,c
 43193  016FE0  0EC9               	movlw	201
 43194  016FE2  6E5C               	movwf	i2___fladd@a+2,c
 43195  016FE4  0E3F               	movlw	63
 43196  016FE6  6E5D               	movwf	i2___fladd@a+3,c
 43197  016FE8  EC39  F0A9         	call	i2___fladd	;wreg free
 43198  016FEC  C056  F08D         	movff	?i2___fladd,atan@val
 43199  016FF0  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 43200  016FF4  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 43201  016FF8  C059  F090         	movff	?i2___fladd+3,atan@val+3
 43202  016FFC                     i2l1951:
 43203  016FFC  0100               	movlb	0	; () banked
 43204  016FFE  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 43205  017000  D009               	goto	i2l1953
 43206                           
 43207                           ; BSR set to: 0
 43208  017002  C08D  F07C         	movff	atan@val,?_atan
 43209  017006  C08E  F07D         	movff	atan@val+1,?_atan+1
 43210  01700A  C08F  F07E         	movff	atan@val+2,?_atan+2
 43211  01700E  C090  F07F         	movff	atan@val+3,?_atan+3
 43212  017012  0012               	return	
 43213  017014                     i2l1953:
 43214                           
 43215                           ; BSR set to: 0
 43216                           
 43217                           ; BSR set to: 0
 43218  017014  C08D  F02C         	movff	atan@val,i2___flneg@f1
 43219  017018  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 43220  01701C  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 43221  017020  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 43222  017024  ECB6  F0CA         	call	i2___flneg	;wreg free
 43223  017028  C02C  F07C         	movff	?i2___flneg,?_atan
 43224  01702C  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 43225  017030  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 43226  017034  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 43227  017038  0012               	return	
 43228  01703A                     __end_of_atan:
 43229                           	opt stack 0
 43230                           tosu	equ	0xFFF
 43231                           tosh	equ	0xFFE
 43232                           tosl	equ	0xFFD
 43233                           pclatu	equ	0xFFB
 43234                           pclath	equ	0xFFA
 43235                           tblptru	equ	0xFF8
 43236                           tblptrh	equ	0xFF7
 43237                           tblptrl	equ	0xFF6
 43238                           tablat	equ	0xFF5
 43239                           prodh	equ	0xFF4
 43240                           prodl	equ	0xFF3
 43241                           intcon	equ	0xFF2
 43242                           indf0	equ	0xFEF
 43243                           postinc0	equ	0xFEE
 43244                           fsr0h	equ	0xFEA
 43245                           fsr0l	equ	0xFE9
 43246                           wreg	equ	0xFE8
 43247                           indf1	equ	0xFE7
 43248                           postdec1	equ	0xFE5
 43249                           plusw1	equ	0xFE3
 43250                           fsr1h	equ	0xFE2
 43251                           fsr1l	equ	0xFE1
 43252                           bsr	equ	0xFE0
 43253                           indf2	equ	0xFDF
 43254                           postinc2	equ	0xFDE
 43255                           postdec2	equ	0xFDD
 43256                           plusw2	equ	0xFDB
 43257                           fsr2h	equ	0xFDA
 43258                           fsr2l	equ	0xFD9
 43259                           status	equ	0xFD8
 43260                           
 43261 ;; *************** function _fabs *****************
 43262 ;; Defined at:
 43263 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 43264 ;; Parameters:    Size  Location     Type
 43265 ;;  d               4   47[COMRAM] unsigned char 
 43266 ;; Auto vars:     Size  Location     Type
 43267 ;;		None
 43268 ;; Return value:  Size  Location     Type
 43269 ;;                  4   47[COMRAM] unsigned char 
 43270 ;; Registers used:
 43271 ;;		wreg, status,2, status,0, cstack
 43272 ;; Tracked objects:
 43273 ;;		On entry : 0/0
 43274 ;;		On exit  : 0/0
 43275 ;;		Unchanged: 0/0
 43276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43281 ;;Total ram usage:        4 bytes
 43282 ;; Hardware stack levels used:    1
 43283 ;; Hardware stack levels required when called:    1
 43284 ;; This function calls:
 43285 ;;		i2___flneg
 43286 ;; This function is called by:
 43287 ;;		_asin
 43288 ;;		_atan
 43289 ;; This function uses a non-reentrant model
 43290 ;;
 43291                           
 43292                           	psect	text133
 43293  0192BA                     __ptext133:
 43294                           	opt stack 0
 43295  0192BA                     _fabs:
 43296                           	opt stack 12
 43297                           
 43298                           ;incstack = 0
 43299  0192BA  AE33               	btfss	fabs@d+3,7,c
 43300  0192BC  D013               	goto	i2l2045
 43301  0192BE  C030  F02C         	movff	fabs@d,i2___flneg@f1
 43302  0192C2  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 43303  0192C6  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 43304  0192CA  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 43305  0192CE  ECB6  F0CA         	call	i2___flneg	;wreg free
 43306  0192D2  C02C  F030         	movff	?i2___flneg,?_fabs
 43307  0192D6  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 43308  0192DA  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 43309  0192DE  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 43310  0192E2  0012               	return	
 43311  0192E4                     i2l2045:
 43312  0192E4  C030  F030         	movff	fabs@d,?_fabs
 43313  0192E8  C031  F031         	movff	fabs@d+1,?_fabs+1
 43314  0192EC  C032  F032         	movff	fabs@d+2,?_fabs+2
 43315  0192F0  C033  F033         	movff	fabs@d+3,?_fabs+3
 43316  0192F4  0012               	return		;funcret
 43317  0192F6                     __end_of_fabs:
 43318                           	opt stack 0
 43319                           tosu	equ	0xFFF
 43320                           tosh	equ	0xFFE
 43321                           tosl	equ	0xFFD
 43322                           pclatu	equ	0xFFB
 43323                           pclath	equ	0xFFA
 43324                           tblptru	equ	0xFF8
 43325                           tblptrh	equ	0xFF7
 43326                           tblptrl	equ	0xFF6
 43327                           tablat	equ	0xFF5
 43328                           prodh	equ	0xFF4
 43329                           prodl	equ	0xFF3
 43330                           intcon	equ	0xFF2
 43331                           indf0	equ	0xFEF
 43332                           postinc0	equ	0xFEE
 43333                           fsr0h	equ	0xFEA
 43334                           fsr0l	equ	0xFE9
 43335                           wreg	equ	0xFE8
 43336                           indf1	equ	0xFE7
 43337                           postdec1	equ	0xFE5
 43338                           plusw1	equ	0xFE3
 43339                           fsr1h	equ	0xFE2
 43340                           fsr1l	equ	0xFE1
 43341                           bsr	equ	0xFE0
 43342                           indf2	equ	0xFDF
 43343                           postinc2	equ	0xFDE
 43344                           postdec2	equ	0xFDD
 43345                           plusw2	equ	0xFDB
 43346                           fsr2h	equ	0xFDA
 43347                           fsr2l	equ	0xFD9
 43348                           status	equ	0xFD8
 43349                           
 43350 ;; *************** function _currentMeasuredToPeak *****************
 43351 ;; Defined at:
 43352 ;;		line 141 in file "main.c"
 43353 ;; Parameters:    Size  Location     Type
 43354 ;;  Measured        4   57[BANK0 ] unsigned char 
 43355 ;;  Angle           4   61[BANK0 ] unsigned char 
 43356 ;; Auto vars:     Size  Location     Type
 43357 ;;  Peak            4   65[BANK0 ] unsigned char 
 43358 ;; Return value:  Size  Location     Type
 43359 ;;                  4   57[BANK0 ] unsigned char 
 43360 ;; Registers used:
 43361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43362 ;; Tracked objects:
 43363 ;;		On entry : 0/0
 43364 ;;		On exit  : 0/0
 43365 ;;		Unchanged: 0/0
 43366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43367 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43368 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43370 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43371 ;;Total ram usage:       12 bytes
 43372 ;; Hardware stack levels used:    1
 43373 ;; Hardware stack levels required when called:    3
 43374 ;; This function calls:
 43375 ;;		_sin
 43376 ;;		i2___fldiv
 43377 ;; This function is called by:
 43378 ;;		_ADCPostProcessingCallback
 43379 ;; This function uses a non-reentrant model
 43380 ;;
 43381                           
 43382                           	psect	text134
 43383  018840                     __ptext134:
 43384                           	opt stack 0
 43385  018840                     _currentMeasuredToPeak:
 43386                           	opt stack 13
 43387                           
 43388                           ;main.c: 144: double Peak = 0.0;
 43389                           
 43390                           ;incstack = 0
 43391  018840  0E00               	movlw	0
 43392  018842  0100               	movlb	0	; () banked
 43393  018844  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 43394  018846  0E00               	movlw	0
 43395  018848  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 43396  01884A  0E00               	movlw	0
 43397  01884C  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 43398  01884E  0E00               	movlw	0
 43399  018850  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 43400                           
 43401                           ; BSR set to: 0
 43402                           ;main.c: 147: Peak = sin(Angle);
 43403  018852  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 43404  018856  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 43405  01885A  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 43406  01885E  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 43407  018862  EC5A  F0AC         	call	_sin	;wreg free
 43408  018866  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 43409  01886A  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 43410  01886E  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 43411  018872  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 43412                           
 43413                           ;main.c: 148: Peak = Measured / Peak;
 43414  018876  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 43415  01887A  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 43416  01887E  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 43417  018882  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 43418  018886  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 43419  01888A  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 43420  01888E  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 43421  018892  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 43422  018896  ECF9  F0B1         	call	i2___fldiv	;wreg free
 43423  01889A  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 43424  01889E  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 43425  0188A2  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 43426  0188A6  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 43427                           
 43428                           ;main.c: 149: return Peak;
 43429  0188AA  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 43430  0188AE  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 43431  0188B2  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 43432  0188B6  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 43433  0188BA  0012               	return	
 43434  0188BC                     __end_of_currentMeasuredToPeak:
 43435                           	opt stack 0
 43436                           tosu	equ	0xFFF
 43437                           tosh	equ	0xFFE
 43438                           tosl	equ	0xFFD
 43439                           pclatu	equ	0xFFB
 43440                           pclath	equ	0xFFA
 43441                           tblptru	equ	0xFF8
 43442                           tblptrh	equ	0xFF7
 43443                           tblptrl	equ	0xFF6
 43444                           tablat	equ	0xFF5
 43445                           prodh	equ	0xFF4
 43446                           prodl	equ	0xFF3
 43447                           intcon	equ	0xFF2
 43448                           indf0	equ	0xFEF
 43449                           postinc0	equ	0xFEE
 43450                           fsr0h	equ	0xFEA
 43451                           fsr0l	equ	0xFE9
 43452                           wreg	equ	0xFE8
 43453                           indf1	equ	0xFE7
 43454                           postdec1	equ	0xFE5
 43455                           plusw1	equ	0xFE3
 43456                           fsr1h	equ	0xFE2
 43457                           fsr1l	equ	0xFE1
 43458                           bsr	equ	0xFE0
 43459                           indf2	equ	0xFDF
 43460                           postinc2	equ	0xFDE
 43461                           postdec2	equ	0xFDD
 43462                           plusw2	equ	0xFDB
 43463                           fsr2h	equ	0xFDA
 43464                           fsr2l	equ	0xFD9
 43465                           status	equ	0xFD8
 43466                           
 43467 ;; *************** function _sin *****************
 43468 ;; Defined at:
 43469 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 43470 ;; Parameters:    Size  Location     Type
 43471 ;;  f               4   40[BANK0 ] unsigned char 
 43472 ;; Auto vars:     Size  Location     Type
 43473 ;;  x2              4   52[BANK0 ] unsigned char 
 43474 ;;  y               4   44[BANK0 ] unsigned char 
 43475 ;;  sgn             1   56[BANK0 ] unsigned char 
 43476 ;; Return value:  Size  Location     Type
 43477 ;;                  4   40[BANK0 ] unsigned char 
 43478 ;; Registers used:
 43479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43480 ;; Tracked objects:
 43481 ;;		On entry : 0/0
 43482 ;;		On exit  : 0/0
 43483 ;;		Unchanged: 0/0
 43484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43486 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43488 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43489 ;;Total ram usage:       17 bytes
 43490 ;; Hardware stack levels used:    1
 43491 ;; Hardware stack levels required when called:    2
 43492 ;; This function calls:
 43493 ;;		_eval_poly
 43494 ;;		_floor
 43495 ;;		i2___fladd
 43496 ;;		i2___fldiv
 43497 ;;		i2___flge
 43498 ;;		i2___flmul
 43499 ;;		i2___flneg
 43500 ;;		i2___flsub
 43501 ;; This function is called by:
 43502 ;;		_peakToRMS
 43503 ;;		_currentMeasuredToPeak
 43504 ;; This function uses a non-reentrant model
 43505 ;;
 43506                           
 43507                           	psect	text135
 43508  0158B4                     __ptext135:
 43509                           	opt stack 0
 43510  0158B4                     _sin:
 43511                           	opt stack 13
 43512                           
 43513                           ;incstack = 0
 43514  0158B4  0E00               	movlw	0
 43515  0158B6  0100               	movlb	0	; () banked
 43516  0158B8  6F98               	movwf	sin@sgn& (0+255),b
 43517                           
 43518                           ; BSR set to: 0
 43519  0158BA  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 43520  0158BC  D015               	goto	i2l2328
 43521                           
 43522                           ; BSR set to: 0
 43523  0158BE  C088  F02C         	movff	sin@f,i2___flneg@f1
 43524  0158C2  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 43525  0158C6  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 43526  0158CA  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 43527  0158CE  ECB6  F0CA         	call	i2___flneg	;wreg free
 43528  0158D2  C02C  F088         	movff	?i2___flneg,sin@f
 43529  0158D6  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 43530  0158DA  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 43531  0158DE  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 43532  0158E2  0E01               	movlw	1
 43533  0158E4  0100               	movlb	0	; () banked
 43534  0158E6  6F98               	movwf	sin@sgn& (0+255),b
 43535  0158E8                     i2l2328:
 43536                           
 43537                           ; BSR set to: 0
 43538                           
 43539                           ; BSR set to: 0
 43540  0158E8  C088  F030         	movff	sin@f,i2___flmul@b
 43541  0158EC  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 43542  0158F0  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 43543  0158F4  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 43544  0158F8  0E83               	movlw	131
 43545  0158FA  6E34               	movwf	i2___flmul@a,c
 43546  0158FC  0EF9               	movlw	249
 43547  0158FE  6E35               	movwf	i2___flmul@a+1,c
 43548  015900  0E22               	movlw	34
 43549  015902  6E36               	movwf	i2___flmul@a+2,c
 43550  015904  0E3E               	movlw	62
 43551  015906  6E37               	movwf	i2___flmul@a+3,c
 43552  015908  ECF2  F0A5         	call	i2___flmul	;wreg free
 43553  01590C  C030  F088         	movff	?i2___flmul,sin@f
 43554  015910  C031  F089         	movff	?i2___flmul+1,sin@f+1
 43555  015914  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 43556  015918  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 43557  01591C  C088  F080         	movff	sin@f,i2___flsub@b
 43558  015920  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 43559  015924  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 43560  015928  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 43561  01592C  C088  F076         	movff	sin@f,floor@x
 43562  015930  C089  F077         	movff	sin@f+1,floor@x+1
 43563  015934  C08A  F078         	movff	sin@f+2,floor@x+2
 43564  015938  C08B  F079         	movff	sin@f+3,floor@x+3
 43565  01593C  EC19  F0BE         	call	_floor	;wreg free
 43566  015940  C076  F084         	movff	?_floor,i2___flsub@a
 43567  015944  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 43568  015948  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 43569  01594C  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 43570  015950  EC99  F0C8         	call	i2___flsub	;wreg free
 43571  015954  C080  F088         	movff	?i2___flsub,sin@f
 43572  015958  C081  F089         	movff	?i2___flsub+1,sin@f+1
 43573  01595C  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 43574  015960  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 43575  015964  C088  F030         	movff	sin@f,i2___flmul@b
 43576  015968  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 43577  01596C  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 43578  015970  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 43579  015974  0E00               	movlw	0
 43580  015976  6E34               	movwf	i2___flmul@a,c
 43581  015978  0E00               	movlw	0
 43582  01597A  6E35               	movwf	i2___flmul@a+1,c
 43583  01597C  0E80               	movlw	128
 43584  01597E  6E36               	movwf	i2___flmul@a+2,c
 43585  015980  0E40               	movlw	64
 43586  015982  6E37               	movwf	i2___flmul@a+3,c
 43587  015984  ECF2  F0A5         	call	i2___flmul	;wreg free
 43588  015988  C030  F088         	movff	?i2___flmul,sin@f
 43589  01598C  C031  F089         	movff	?i2___flmul+1,sin@f+1
 43590  015990  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 43591  015994  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 43592  015998  0E00               	movlw	0
 43593  01599A  6E34               	movwf	i2___flge@ff1,c
 43594  01599C  0E00               	movlw	0
 43595  01599E  6E35               	movwf	i2___flge@ff1+1,c
 43596  0159A0  0E00               	movlw	0
 43597  0159A2  6E36               	movwf	i2___flge@ff1+2,c
 43598  0159A4  0E40               	movlw	64
 43599  0159A6  6E37               	movwf	i2___flge@ff1+3,c
 43600  0159A8  C088  F038         	movff	sin@f,i2___flge@ff2
 43601  0159AC  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 43602  0159B0  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 43603  0159B4  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 43604  0159B8  EC89  F0BD         	call	i2___flge	;wreg free
 43605  0159BC  B0D8               	btfsc	status,0,c
 43606  0159BE  D023               	goto	i2l2329
 43607  0159C0  C088  F080         	movff	sin@f,i2___flsub@b
 43608  0159C4  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 43609  0159C8  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 43610  0159CC  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 43611  0159D0  0E00               	movlw	0
 43612  0159D2  0100               	movlb	0	; () banked
 43613  0159D4  6F84               	movwf	i2___flsub@a& (0+255),b
 43614  0159D6  0E00               	movlw	0
 43615  0159D8  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 43616  0159DA  0E00               	movlw	0
 43617  0159DC  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 43618  0159DE  0E40               	movlw	64
 43619  0159E0  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 43620  0159E2  EC99  F0C8         	call	i2___flsub	;wreg free
 43621  0159E6  C080  F088         	movff	?i2___flsub,sin@f
 43622  0159EA  C081  F089         	movff	?i2___flsub+1,sin@f+1
 43623  0159EE  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 43624  0159F2  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 43625  0159F6  0100               	movlb	0	; () banked
 43626  0159F8  5198               	movf	sin@sgn& (0+255),w,b
 43627  0159FA  A4D8               	btfss	status,2,c
 43628  0159FC  D002               	goto	i2u1704_40
 43629  0159FE  0E01               	movlw	1
 43630  015A00  D001               	goto	i2u1705_40
 43631  015A02                     i2u1704_40:
 43632  015A02  0E00               	movlw	0
 43633  015A04                     i2u1705_40:
 43634  015A04  6F98               	movwf	sin@sgn& (0+255),b
 43635  015A06                     i2l2329:
 43636                           
 43637                           ; BSR set to: 0
 43638  015A06  0E00               	movlw	0
 43639  015A08  6E34               	movwf	i2___flge@ff1,c
 43640  015A0A  0E00               	movlw	0
 43641  015A0C  6E35               	movwf	i2___flge@ff1+1,c
 43642  015A0E  0E80               	movlw	128
 43643  015A10  6E36               	movwf	i2___flge@ff1+2,c
 43644  015A12  0E3F               	movlw	63
 43645  015A14  6E37               	movwf	i2___flge@ff1+3,c
 43646  015A16  C088  F038         	movff	sin@f,i2___flge@ff2
 43647  015A1A  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 43648  015A1E  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 43649  015A22  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 43650  015A26  EC89  F0BD         	call	i2___flge	;wreg free
 43651  015A2A  B0D8               	btfsc	status,0,c
 43652  015A2C  D024               	goto	i2l2330
 43653  015A2E  C088  F02C         	movff	sin@f,i2___flneg@f1
 43654  015A32  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 43655  015A36  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 43656  015A3A  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 43657  015A3E  ECB6  F0CA         	call	i2___flneg	;wreg free
 43658  015A42  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 43659  015A46  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 43660  015A4A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 43661  015A4E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 43662  015A52  0E00               	movlw	0
 43663  015A54  6E5A               	movwf	i2___fladd@a,c
 43664  015A56  0E00               	movlw	0
 43665  015A58  6E5B               	movwf	i2___fladd@a+1,c
 43666  015A5A  0E00               	movlw	0
 43667  015A5C  6E5C               	movwf	i2___fladd@a+2,c
 43668  015A5E  0E40               	movlw	64
 43669  015A60  6E5D               	movwf	i2___fladd@a+3,c
 43670  015A62  EC39  F0A9         	call	i2___fladd	;wreg free
 43671  015A66  C056  F088         	movff	?i2___fladd,sin@f
 43672  015A6A  C057  F089         	movff	?i2___fladd+1,sin@f+1
 43673  015A6E  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 43674  015A72  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 43675  015A76                     i2l2330:
 43676  015A76  C088  F030         	movff	sin@f,i2___flmul@b
 43677  015A7A  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 43678  015A7E  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 43679  015A82  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 43680  015A86  C088  F034         	movff	sin@f,i2___flmul@a
 43681  015A8A  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 43682  015A8E  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 43683  015A92  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 43684  015A96  ECF2  F0A5         	call	i2___flmul	;wreg free
 43685  015A9A  C030  F094         	movff	?i2___flmul,sin@x2
 43686  015A9E  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 43687  015AA2  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 43688  015AA6  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 43689  015AAA  C094  F06C         	movff	sin@x2,eval_poly@x
 43690  015AAE  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 43691  015AB2  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 43692  015AB6  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 43693  015ABA  0E5D               	movlw	low sin@coeff_b
 43694  015ABC  0100               	movlb	0	; () banked
 43695  015ABE  6F70               	movwf	eval_poly@d& (0+255),b
 43696  015AC0  0ED5               	movlw	high sin@coeff_b
 43697  015AC2  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 43698  015AC4  0E00               	movlw	0
 43699  015AC6  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 43700  015AC8  0E03               	movlw	3
 43701  015ACA  6F72               	movwf	eval_poly@n& (0+255),b
 43702  015ACC  ECA2  F0BE         	call	_eval_poly	;wreg free
 43703  015AD0  C06C  F08C         	movff	?_eval_poly,sin@y
 43704  015AD4  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 43705  015AD8  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 43706  015ADC  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 43707  015AE0  C08C  F017         	movff	sin@y,i2___fldiv@a
 43708  015AE4  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 43709  015AE8  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 43710  015AEC  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 43711  015AF0  0E00               	movlw	0
 43712  015AF2  0100               	movlb	0	; () banked
 43713  015AF4  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 43714  015AF6  0E04               	movlw	4
 43715  015AF8  6F72               	movwf	eval_poly@n& (0+255),b
 43716  015AFA  0E35               	movlw	low sin@coeff_a
 43717  015AFC  6F70               	movwf	eval_poly@d& (0+255),b
 43718  015AFE  0ED5               	movlw	high sin@coeff_a
 43719  015B00  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 43720  015B02  C094  F06C         	movff	sin@x2,eval_poly@x
 43721  015B06  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 43722  015B0A  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 43723  015B0E  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 43724  015B12  ECA2  F0BE         	call	_eval_poly	;wreg free
 43725  015B16  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 43726  015B1A  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 43727  015B1E  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 43728  015B22  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 43729  015B26  ECF9  F0B1         	call	i2___fldiv	;wreg free
 43730  015B2A  C013  F090         	movff	?i2___fldiv,_sin$4734
 43731  015B2E  C014  F091         	movff	?i2___fldiv+1,_sin$4734+1
 43732  015B32  C015  F092         	movff	?i2___fldiv+2,_sin$4734+2
 43733  015B36  C016  F093         	movff	?i2___fldiv+3,_sin$4734+3
 43734  015B3A  C088  F030         	movff	sin@f,i2___flmul@b
 43735  015B3E  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 43736  015B42  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 43737  015B46  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 43738  015B4A  C090  F034         	movff	_sin$4734,i2___flmul@a
 43739  015B4E  C091  F035         	movff	_sin$4734+1,i2___flmul@a+1
 43740  015B52  C092  F036         	movff	_sin$4734+2,i2___flmul@a+2
 43741  015B56  C093  F037         	movff	_sin$4734+3,i2___flmul@a+3
 43742  015B5A  ECF2  F0A5         	call	i2___flmul	;wreg free
 43743  015B5E  C030  F088         	movff	?i2___flmul,sin@f
 43744  015B62  C031  F089         	movff	?i2___flmul+1,sin@f+1
 43745  015B66  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 43746  015B6A  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 43747  015B6E  0100               	movlb	0	; () banked
 43748  015B70  5198               	movf	sin@sgn& (0+255),w,b
 43749  015B72  B4D8               	btfsc	status,2,c
 43750  015B74  D013               	goto	i2l2331
 43751                           
 43752                           ; BSR set to: 0
 43753  015B76  C088  F02C         	movff	sin@f,i2___flneg@f1
 43754  015B7A  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 43755  015B7E  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 43756  015B82  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 43757  015B86  ECB6  F0CA         	call	i2___flneg	;wreg free
 43758  015B8A  C02C  F088         	movff	?i2___flneg,?_sin
 43759  015B8E  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 43760  015B92  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 43761  015B96  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 43762  015B9A  0012               	return	
 43763  015B9C                     i2l2331:
 43764                           
 43765                           ; BSR set to: 0
 43766  015B9C  C088  F088         	movff	sin@f,?_sin
 43767  015BA0  C089  F089         	movff	sin@f+1,?_sin+1
 43768  015BA4  C08A  F08A         	movff	sin@f+2,?_sin+2
 43769  015BA8  C08B  F08B         	movff	sin@f+3,?_sin+3
 43770  015BAC  0012               	return		;funcret
 43771  015BAE                     __end_of_sin:
 43772                           	opt stack 0
 43773                           tosu	equ	0xFFF
 43774                           tosh	equ	0xFFE
 43775                           tosl	equ	0xFFD
 43776                           pclatu	equ	0xFFB
 43777                           pclath	equ	0xFFA
 43778                           tblptru	equ	0xFF8
 43779                           tblptrh	equ	0xFF7
 43780                           tblptrl	equ	0xFF6
 43781                           tablat	equ	0xFF5
 43782                           prodh	equ	0xFF4
 43783                           prodl	equ	0xFF3
 43784                           intcon	equ	0xFF2
 43785                           indf0	equ	0xFEF
 43786                           postinc0	equ	0xFEE
 43787                           fsr0h	equ	0xFEA
 43788                           fsr0l	equ	0xFE9
 43789                           wreg	equ	0xFE8
 43790                           indf1	equ	0xFE7
 43791                           postdec1	equ	0xFE5
 43792                           plusw1	equ	0xFE3
 43793                           fsr1h	equ	0xFE2
 43794                           fsr1l	equ	0xFE1
 43795                           bsr	equ	0xFE0
 43796                           indf2	equ	0xFDF
 43797                           postinc2	equ	0xFDE
 43798                           postdec2	equ	0xFDD
 43799                           plusw2	equ	0xFDB
 43800                           fsr2h	equ	0xFDA
 43801                           fsr2l	equ	0xFD9
 43802                           status	equ	0xFD8
 43803                           
 43804 ;; *************** function i2___flsub *****************
 43805 ;; Defined at:
 43806 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 43807 ;; Parameters:    Size  Location     Type
 43808 ;;  b               4   32[BANK0 ] unsigned char 
 43809 ;;  a               4   36[BANK0 ] unsigned char 
 43810 ;; Auto vars:     Size  Location     Type
 43811 ;;		None
 43812 ;; Return value:  Size  Location     Type
 43813 ;;                  4   32[BANK0 ] unsigned char 
 43814 ;; Registers used:
 43815 ;;		wreg, status,2, status,0, cstack
 43816 ;; Tracked objects:
 43817 ;;		On entry : 0/0
 43818 ;;		On exit  : 0/0
 43819 ;;		Unchanged: 0/0
 43820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43821 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43824 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43825 ;;Total ram usage:        8 bytes
 43826 ;; Hardware stack levels used:    1
 43827 ;; Hardware stack levels required when called:    1
 43828 ;; This function calls:
 43829 ;;		i2___fladd
 43830 ;; This function is called by:
 43831 ;;		_sin
 43832 ;;		i2_printf
 43833 ;; This function uses a non-reentrant model
 43834 ;;
 43835                           
 43836                           	psect	text136
 43837  019132                     __ptext136:
 43838                           	opt stack 0
 43839  019132                     i2___flsub:
 43840                           	opt stack 15
 43841                           
 43842                           ;incstack = 0
 43843  019132  0E00               	movlw	0
 43844  019134  0100               	movlb	0	; () banked
 43845  019136  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 43846  019138  0E00               	movlw	0
 43847  01913A  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 43848  01913C  0E00               	movlw	0
 43849  01913E  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 43850  019140  0E80               	movlw	128
 43851  019142  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 43852                           
 43853                           ; BSR set to: 0
 43854  019144  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 43855  019148  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 43856  01914C  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 43857  019150  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 43858  019154  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 43859  019158  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 43860  01915C  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 43861  019160  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 43862  019164  EC39  F0A9         	call	i2___fladd	;wreg free
 43863  019168  C056  F080         	movff	?i2___fladd,?i2___flsub
 43864  01916C  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 43865  019170  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 43866  019174  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 43867  019178  0012               	return	
 43868  01917A                     __end_ofi2___flsub:
 43869                           	opt stack 0
 43870                           tosu	equ	0xFFF
 43871                           tosh	equ	0xFFE
 43872                           tosl	equ	0xFFD
 43873                           pclatu	equ	0xFFB
 43874                           pclath	equ	0xFFA
 43875                           tblptru	equ	0xFF8
 43876                           tblptrh	equ	0xFF7
 43877                           tblptrl	equ	0xFF6
 43878                           tablat	equ	0xFF5
 43879                           prodh	equ	0xFF4
 43880                           prodl	equ	0xFF3
 43881                           intcon	equ	0xFF2
 43882                           indf0	equ	0xFEF
 43883                           postinc0	equ	0xFEE
 43884                           fsr0h	equ	0xFEA
 43885                           fsr0l	equ	0xFE9
 43886                           wreg	equ	0xFE8
 43887                           indf1	equ	0xFE7
 43888                           postdec1	equ	0xFE5
 43889                           plusw1	equ	0xFE3
 43890                           fsr1h	equ	0xFE2
 43891                           fsr1l	equ	0xFE1
 43892                           bsr	equ	0xFE0
 43893                           indf2	equ	0xFDF
 43894                           postinc2	equ	0xFDE
 43895                           postdec2	equ	0xFDD
 43896                           plusw2	equ	0xFDB
 43897                           fsr2h	equ	0xFDA
 43898                           fsr2l	equ	0xFD9
 43899                           status	equ	0xFD8
 43900                           
 43901 ;; *************** function i2___flneg *****************
 43902 ;; Defined at:
 43903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 43904 ;; Parameters:    Size  Location     Type
 43905 ;;  f1              4   43[COMRAM] unsigned char 
 43906 ;; Auto vars:     Size  Location     Type
 43907 ;;		None
 43908 ;; Return value:  Size  Location     Type
 43909 ;;                  4   43[COMRAM] unsigned char 
 43910 ;; Registers used:
 43911 ;;		wreg, status,2, status,0
 43912 ;; Tracked objects:
 43913 ;;		On entry : 0/0
 43914 ;;		On exit  : 0/0
 43915 ;;		Unchanged: 0/0
 43916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43921 ;;Total ram usage:        4 bytes
 43922 ;; Hardware stack levels used:    1
 43923 ;; This function calls:
 43924 ;;		Nothing
 43925 ;; This function is called by:
 43926 ;;		_peakToRMS
 43927 ;;		_ADCPostProcessingCallback
 43928 ;;		_acos
 43929 ;;		_asin
 43930 ;;		_atan
 43931 ;;		_fabs
 43932 ;;		_sin
 43933 ;;		i2_printf
 43934 ;; This function uses a non-reentrant model
 43935 ;;
 43936                           
 43937                           	psect	text137
 43938  01956C                     __ptext137:
 43939                           	opt stack 0
 43940  01956C                     i2___flneg:
 43941                           	opt stack 16
 43942                           
 43943                           ;incstack = 0
 43944  01956C  502C               	movf	i2___flneg@f1,w,c
 43945  01956E  102D               	iorwf	i2___flneg@f1+1,w,c
 43946  019570  102E               	iorwf	i2___flneg@f1+2,w,c
 43947  019572  102F               	iorwf	i2___flneg@f1+3,w,c
 43948  019574  B4D8               	btfsc	status,2,c
 43949  019576  D008               	goto	i2l2073
 43950  019578  0E00               	movlw	0
 43951  01957A  1A2C               	xorwf	i2___flneg@f1,f,c
 43952  01957C  0E00               	movlw	0
 43953  01957E  1A2D               	xorwf	i2___flneg@f1+1,f,c
 43954  019580  0E00               	movlw	0
 43955  019582  1A2E               	xorwf	i2___flneg@f1+2,f,c
 43956  019584  0E80               	movlw	128
 43957  019586  1A2F               	xorwf	i2___flneg@f1+3,f,c
 43958  019588                     i2l2073:
 43959  019588  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 43960  01958C  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 43961  019590  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 43962  019594  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 43963  019598  0012               	return	
 43964  01959A                     __end_ofi2___flneg:
 43965                           	opt stack 0
 43966                           tosu	equ	0xFFF
 43967                           tosh	equ	0xFFE
 43968                           tosl	equ	0xFFD
 43969                           pclatu	equ	0xFFB
 43970                           pclath	equ	0xFFA
 43971                           tblptru	equ	0xFF8
 43972                           tblptrh	equ	0xFF7
 43973                           tblptrl	equ	0xFF6
 43974                           tablat	equ	0xFF5
 43975                           prodh	equ	0xFF4
 43976                           prodl	equ	0xFF3
 43977                           intcon	equ	0xFF2
 43978                           indf0	equ	0xFEF
 43979                           postinc0	equ	0xFEE
 43980                           fsr0h	equ	0xFEA
 43981                           fsr0l	equ	0xFE9
 43982                           wreg	equ	0xFE8
 43983                           indf1	equ	0xFE7
 43984                           postdec1	equ	0xFE5
 43985                           plusw1	equ	0xFE3
 43986                           fsr1h	equ	0xFE2
 43987                           fsr1l	equ	0xFE1
 43988                           bsr	equ	0xFE0
 43989                           indf2	equ	0xFDF
 43990                           postinc2	equ	0xFDE
 43991                           postdec2	equ	0xFDD
 43992                           plusw2	equ	0xFDB
 43993                           fsr2h	equ	0xFDA
 43994                           fsr2l	equ	0xFD9
 43995                           status	equ	0xFD8
 43996                           
 43997 ;; *************** function i2___fldiv *****************
 43998 ;; Defined at:
 43999 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 44000 ;; Parameters:    Size  Location     Type
 44001 ;;  b               4   18[COMRAM] unsigned char 
 44002 ;;  a               4   22[COMRAM] unsigned char 
 44003 ;; Auto vars:     Size  Location     Type
 44004 ;;  __fldiv         4   37[COMRAM] unsigned long 
 44005 ;;  __fldiv         4   31[COMRAM] unsigned long 
 44006 ;;  __fldiv         2   35[COMRAM] int 
 44007 ;;  __fldiv         1   42[COMRAM] unsigned char 
 44008 ;;  __fldiv         1   41[COMRAM] unsigned char 
 44009 ;;  __fldiv         1   30[COMRAM] unsigned char 
 44010 ;; Return value:  Size  Location     Type
 44011 ;;                  4   18[COMRAM] unsigned char 
 44012 ;; Registers used:
 44013 ;;		wreg, status,2, status,0
 44014 ;; Tracked objects:
 44015 ;;		On entry : 0/0
 44016 ;;		On exit  : 0/0
 44017 ;;		Unchanged: 0/0
 44018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44019 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44020 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44022 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44023 ;;Total ram usage:       25 bytes
 44024 ;; Hardware stack levels used:    1
 44025 ;; This function calls:
 44026 ;;		Nothing
 44027 ;; This function is called by:
 44028 ;;		_peakToRMS
 44029 ;;		_currentMeasuredToPeak
 44030 ;;		_ADCPostProcessingCallback
 44031 ;;		_asin
 44032 ;;		_atan
 44033 ;;		_sin
 44034 ;; This function uses a non-reentrant model
 44035 ;;
 44036                           
 44037                           	psect	text138
 44038  0163F2                     __ptext138:
 44039                           	opt stack 0
 44040  0163F2                     i2___fldiv:
 44041                           	opt stack 16
 44042                           
 44043                           ;incstack = 0
 44044  0163F2  5016               	movf	i2___fldiv@b+3,w,c
 44045  0163F4  0B80               	andlw	128
 44046  0163F6  6E1F               	movwf	i2___fldiv@sign,c
 44047  0163F8  5016               	movf	i2___fldiv@b+3,w,c
 44048  0163FA  2416               	addwf	i2___fldiv@b+3,w,c
 44049  0163FC  6E2A               	movwf	i2___fldiv@bexp,c
 44050  0163FE  BE15               	btfsc	i2___fldiv@b+2,7,c
 44051  016400  802A               	bsf	i2___fldiv@bexp,0,c
 44052  016402  502A               	movf	i2___fldiv@bexp,w,c
 44053  016404  B4D8               	btfsc	status,2,c
 44054  016406  D00D               	goto	i2l2393
 44055  016408  282A               	incf	i2___fldiv@bexp,w,c
 44056  01640A  A4D8               	btfss	status,2,c
 44057  01640C  D008               	goto	i2l2394
 44058  01640E  0E00               	movlw	0
 44059  016410  6E13               	movwf	i2___fldiv@b,c
 44060  016412  0E00               	movlw	0
 44061  016414  6E14               	movwf	i2___fldiv@b+1,c
 44062  016416  0E00               	movlw	0
 44063  016418  6E15               	movwf	i2___fldiv@b+2,c
 44064  01641A  0E00               	movlw	0
 44065  01641C  6E16               	movwf	i2___fldiv@b+3,c
 44066  01641E                     i2l2394:
 44067  01641E  8E15               	bsf	i2___fldiv@b+2,7,c
 44068  016420  D006               	goto	L20
 44069  016422                     i2l2393:
 44070  016422  0E00               	movlw	0
 44071  016424  6E13               	movwf	i2___fldiv@b,c
 44072  016426  0E00               	movlw	0
 44073  016428  6E14               	movwf	i2___fldiv@b+1,c
 44074  01642A  0E00               	movlw	0
 44075  01642C  6E15               	movwf	i2___fldiv@b+2,c
 44076  01642E                     L20:
 44077  01642E  0E00               	movlw	0
 44078  016430  6E16               	movwf	i2___fldiv@b+3,c
 44079  016432  501A               	movf	i2___fldiv@a+3,w,c
 44080  016434  0B80               	andlw	128
 44081  016436  1A1F               	xorwf	i2___fldiv@sign,f,c
 44082  016438  501A               	movf	i2___fldiv@a+3,w,c
 44083  01643A  241A               	addwf	i2___fldiv@a+3,w,c
 44084  01643C  6E2B               	movwf	i2___fldiv@aexp,c
 44085  01643E  BE19               	btfsc	i2___fldiv@a+2,7,c
 44086  016440  802B               	bsf	i2___fldiv@aexp,0,c
 44087  016442  502B               	movf	i2___fldiv@aexp,w,c
 44088  016444  B4D8               	btfsc	status,2,c
 44089  016446  D00D               	goto	i2l2397
 44090  016448  282B               	incf	i2___fldiv@aexp,w,c
 44091  01644A  A4D8               	btfss	status,2,c
 44092  01644C  D008               	goto	i2l2398
 44093  01644E  0E00               	movlw	0
 44094  016450  6E17               	movwf	i2___fldiv@a,c
 44095  016452  0E00               	movlw	0
 44096  016454  6E18               	movwf	i2___fldiv@a+1,c
 44097  016456  0E00               	movlw	0
 44098  016458  6E19               	movwf	i2___fldiv@a+2,c
 44099  01645A  0E00               	movlw	0
 44100  01645C  6E1A               	movwf	i2___fldiv@a+3,c
 44101  01645E                     i2l2398:
 44102  01645E  8E19               	bsf	i2___fldiv@a+2,7,c
 44103  016460  D006               	goto	L21
 44104  016462                     i2l2397:
 44105  016462  0E00               	movlw	0
 44106  016464  6E17               	movwf	i2___fldiv@a,c
 44107  016466  0E00               	movlw	0
 44108  016468  6E18               	movwf	i2___fldiv@a+1,c
 44109  01646A  0E00               	movlw	0
 44110  01646C  6E19               	movwf	i2___fldiv@a+2,c
 44111  01646E                     L21:
 44112  01646E  0E00               	movlw	0
 44113  016470  6E1A               	movwf	i2___fldiv@a+3,c
 44114  016472  5017               	movf	i2___fldiv@a,w,c
 44115  016474  1018               	iorwf	i2___fldiv@a+1,w,c
 44116  016476  1019               	iorwf	i2___fldiv@a+2,w,c
 44117  016478  101A               	iorwf	i2___fldiv@a+3,w,c
 44118  01647A  A4D8               	btfss	status,2,c
 44119  01647C  D015               	goto	i2l2400
 44120  01647E  0E00               	movlw	0
 44121  016480  6E13               	movwf	i2___fldiv@b,c
 44122  016482  0E00               	movlw	0
 44123  016484  6E14               	movwf	i2___fldiv@b+1,c
 44124  016486  0E00               	movlw	0
 44125  016488  6E15               	movwf	i2___fldiv@b+2,c
 44126  01648A  0E00               	movlw	0
 44127  01648C  6E16               	movwf	i2___fldiv@b+3,c
 44128  01648E  0E80               	movlw	128
 44129  016490  1215               	iorwf	i2___fldiv@b+2,f,c
 44130  016492  0E7F               	movlw	127
 44131  016494  1216               	iorwf	i2___fldiv@b+3,f,c
 44132  016496  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 44133  01649A  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 44134  01649E  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 44135  0164A2  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 44136  0164A6  0012               	return	
 44137  0164A8                     i2l2400:
 44138  0164A8  502A               	movf	i2___fldiv@bexp,w,c
 44139  0164AA  A4D8               	btfss	status,2,c
 44140  0164AC  D011               	goto	i2l2402
 44141  0164AE  0E00               	movlw	0
 44142  0164B0  6E13               	movwf	i2___fldiv@b,c
 44143  0164B2  0E00               	movlw	0
 44144  0164B4  6E14               	movwf	i2___fldiv@b+1,c
 44145  0164B6  0E00               	movlw	0
 44146  0164B8  6E15               	movwf	i2___fldiv@b+2,c
 44147  0164BA  0E00               	movlw	0
 44148  0164BC  6E16               	movwf	i2___fldiv@b+3,c
 44149  0164BE  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 44150  0164C2  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 44151  0164C6  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 44152  0164CA  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 44153  0164CE  0012               	return	
 44154  0164D0                     i2l2402:
 44155  0164D0  502B               	movf	i2___fldiv@aexp,w,c
 44156  0164D2  6E1B               	movwf	??i2___fldiv& (0+255),c
 44157  0164D4  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 44158  0164D6  1E1B               	comf	??i2___fldiv,f,c
 44159  0164D8  1E1C               	comf	??i2___fldiv+1,f,c
 44160  0164DA  4A1B               	infsnz	??i2___fldiv,f,c
 44161  0164DC  2A1C               	incf	??i2___fldiv+1,f,c
 44162  0164DE  502A               	movf	i2___fldiv@bexp,w,c
 44163  0164E0  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 44164  0164E2  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 44165  0164E4  501B               	movf	??i2___fldiv,w,c
 44166  0164E6  261D               	addwf	??i2___fldiv+2,f,c
 44167  0164E8  501C               	movf	??i2___fldiv+1,w,c
 44168  0164EA  221E               	addwfc	??i2___fldiv+3,f,c
 44169  0164EC  0E7F               	movlw	127
 44170  0164EE  241D               	addwf	??i2___fldiv+2,w,c
 44171  0164F0  6E24               	movwf	i2___fldiv@new_exp,c
 44172  0164F2  0E00               	movlw	0
 44173  0164F4  201E               	addwfc	??i2___fldiv+3,w,c
 44174  0164F6  6E25               	movwf	i2___fldiv@new_exp+1,c
 44175  0164F8  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 44176  0164FC  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 44177  016500  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 44178  016504  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 44179  016508  0E00               	movlw	0
 44180  01650A  6E13               	movwf	i2___fldiv@b,c
 44181  01650C  0E00               	movlw	0
 44182  01650E  6E14               	movwf	i2___fldiv@b+1,c
 44183  016510  0E00               	movlw	0
 44184  016512  6E15               	movwf	i2___fldiv@b+2,c
 44185  016514  0E00               	movlw	0
 44186  016516  6E16               	movwf	i2___fldiv@b+3,c
 44187  016518  0E00               	movlw	0
 44188  01651A  6E26               	movwf	i2___fldiv@grs,c
 44189  01651C  0E00               	movlw	0
 44190  01651E  6E27               	movwf	i2___fldiv@grs+1,c
 44191  016520  0E00               	movlw	0
 44192  016522  6E28               	movwf	i2___fldiv@grs+2,c
 44193  016524  0E00               	movlw	0
 44194  016526  6E29               	movwf	i2___fldiv@grs+3,c
 44195  016528  0E00               	movlw	0
 44196  01652A  6E2B               	movwf	i2___fldiv@aexp,c
 44197  01652C  D028               	goto	i2l2403
 44198  01652E  502B               	movf	i2___fldiv@aexp,w,c
 44199  016530  B4D8               	btfsc	status,2,c
 44200  016532  D011               	goto	i2l2405
 44201  016534  90D8               	bcf	status,0,c
 44202  016536  3620               	rlcf	i2___fldiv@rem,f,c
 44203  016538  3621               	rlcf	i2___fldiv@rem+1,f,c
 44204  01653A  3622               	rlcf	i2___fldiv@rem+2,f,c
 44205  01653C  3623               	rlcf	i2___fldiv@rem+3,f,c
 44206  01653E  90D8               	bcf	status,0,c
 44207  016540  3613               	rlcf	i2___fldiv@b,f,c
 44208  016542  3614               	rlcf	i2___fldiv@b+1,f,c
 44209  016544  3615               	rlcf	i2___fldiv@b+2,f,c
 44210  016546  3616               	rlcf	i2___fldiv@b+3,f,c
 44211  016548  BE29               	btfsc	i2___fldiv@grs+3,7,c
 44212  01654A  8013               	bsf	i2___fldiv@b,0,c
 44213  01654C  90D8               	bcf	status,0,c
 44214  01654E  3626               	rlcf	i2___fldiv@grs,f,c
 44215  016550  3627               	rlcf	i2___fldiv@grs+1,f,c
 44216  016552  3628               	rlcf	i2___fldiv@grs+2,f,c
 44217  016554  3629               	rlcf	i2___fldiv@grs+3,f,c
 44218  016556                     i2l2405:
 44219  016556  5017               	movf	i2___fldiv@a,w,c
 44220  016558  5C20               	subwf	i2___fldiv@rem,w,c
 44221  01655A  5018               	movf	i2___fldiv@a+1,w,c
 44222  01655C  5821               	subwfb	i2___fldiv@rem+1,w,c
 44223  01655E  5019               	movf	i2___fldiv@a+2,w,c
 44224  016560  5822               	subwfb	i2___fldiv@rem+2,w,c
 44225  016562  501A               	movf	i2___fldiv@a+3,w,c
 44226  016564  5823               	subwfb	i2___fldiv@rem+3,w,c
 44227  016566  A0D8               	btfss	status,0,c
 44228  016568  D009               	goto	i2l2407
 44229  01656A  8C29               	bsf	i2___fldiv@grs+3,6,c
 44230  01656C  5017               	movf	i2___fldiv@a,w,c
 44231  01656E  5E20               	subwf	i2___fldiv@rem,f,c
 44232  016570  5018               	movf	i2___fldiv@a+1,w,c
 44233  016572  5A21               	subwfb	i2___fldiv@rem+1,f,c
 44234  016574  5019               	movf	i2___fldiv@a+2,w,c
 44235  016576  5A22               	subwfb	i2___fldiv@rem+2,f,c
 44236  016578  501A               	movf	i2___fldiv@a+3,w,c
 44237  01657A  5A23               	subwfb	i2___fldiv@rem+3,f,c
 44238  01657C                     i2l2407:
 44239  01657C  2A2B               	incf	i2___fldiv@aexp,f,c
 44240  01657E                     i2l2403:
 44241  01657E  0E19               	movlw	25
 44242  016580  642B               	cpfsgt	i2___fldiv@aexp,c
 44243  016582  D7D5               	goto	i2l2404
 44244  016584  5020               	movf	i2___fldiv@rem,w,c
 44245  016586  1021               	iorwf	i2___fldiv@rem+1,w,c
 44246  016588  1022               	iorwf	i2___fldiv@rem+2,w,c
 44247  01658A  1023               	iorwf	i2___fldiv@rem+3,w,c
 44248  01658C  B4D8               	btfsc	status,2,c
 44249  01658E  D011               	goto	i2l2410
 44250  016590  8026               	bsf	i2___fldiv@grs,0,c
 44251  016592  D00F               	goto	i2l2410
 44252  016594  90D8               	bcf	status,0,c
 44253  016596  3613               	rlcf	i2___fldiv@b,f,c
 44254  016598  3614               	rlcf	i2___fldiv@b+1,f,c
 44255  01659A  3615               	rlcf	i2___fldiv@b+2,f,c
 44256  01659C  3616               	rlcf	i2___fldiv@b+3,f,c
 44257  01659E  BE29               	btfsc	i2___fldiv@grs+3,7,c
 44258  0165A0  8013               	bsf	i2___fldiv@b,0,c
 44259  0165A2  90D8               	bcf	status,0,c
 44260  0165A4  3626               	rlcf	i2___fldiv@grs,f,c
 44261  0165A6  3627               	rlcf	i2___fldiv@grs+1,f,c
 44262  0165A8  3628               	rlcf	i2___fldiv@grs+2,f,c
 44263  0165AA  3629               	rlcf	i2___fldiv@grs+3,f,c
 44264  0165AC  0624               	decf	i2___fldiv@new_exp,f,c
 44265  0165AE  A0D8               	btfss	status,0,c
 44266  0165B0  0625               	decf	i2___fldiv@new_exp+1,f,c
 44267  0165B2                     i2l2410:
 44268  0165B2  AE15               	btfss	i2___fldiv@b+2,7,c
 44269  0165B4  D7EF               	goto	i2l2411
 44270  0165B6  0E00               	movlw	0
 44271  0165B8  6E2B               	movwf	i2___fldiv@aexp,c
 44272  0165BA  AE29               	btfss	i2___fldiv@grs+3,7,c
 44273  0165BC  D016               	goto	i2l2417
 44274  0165BE  0EFF               	movlw	255
 44275  0165C0  1426               	andwf	i2___fldiv@grs,w,c
 44276  0165C2  6E1B               	movwf	??i2___fldiv& (0+255),c
 44277  0165C4  0EFF               	movlw	255
 44278  0165C6  1427               	andwf	i2___fldiv@grs+1,w,c
 44279  0165C8  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 44280  0165CA  0EFF               	movlw	255
 44281  0165CC  1428               	andwf	i2___fldiv@grs+2,w,c
 44282  0165CE  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 44283  0165D0  0E7F               	movlw	127
 44284  0165D2  1429               	andwf	i2___fldiv@grs+3,w,c
 44285  0165D4  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 44286  0165D6  501B               	movf	??i2___fldiv,w,c
 44287  0165D8  101C               	iorwf	??i2___fldiv+1,w,c
 44288  0165DA  101D               	iorwf	??i2___fldiv+2,w,c
 44289  0165DC  101E               	iorwf	??i2___fldiv+3,w,c
 44290  0165DE  A4D8               	btfss	status,2,c
 44291  0165E0  D002               	goto	i2u1514_40
 44292  0165E2  A013               	btfss	i2___fldiv@b,0,c
 44293  0165E4  D002               	goto	i2l2417
 44294  0165E6                     i2u1514_40:
 44295  0165E6  0E01               	movlw	1
 44296  0165E8  6E2B               	movwf	i2___fldiv@aexp,c
 44297  0165EA                     i2l2417:
 44298  0165EA  502B               	movf	i2___fldiv@aexp,w,c
 44299  0165EC  B4D8               	btfsc	status,2,c
 44300  0165EE  D01F               	goto	i2l2419
 44301  0165F0  0E01               	movlw	1
 44302  0165F2  2613               	addwf	i2___fldiv@b,f,c
 44303  0165F4  0E00               	movlw	0
 44304  0165F6  2214               	addwfc	i2___fldiv@b+1,f,c
 44305  0165F8  2215               	addwfc	i2___fldiv@b+2,f,c
 44306  0165FA  2216               	addwfc	i2___fldiv@b+3,f,c
 44307  0165FC  A016               	btfss	i2___fldiv@b+3,0,c
 44308  0165FE  D017               	goto	i2l2419
 44309  016600  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 44310  016604  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 44311  016608  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 44312  01660C  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 44313  016610  341E               	rlcf	??i2___fldiv+3,w,c
 44314  016612  321E               	rrcf	??i2___fldiv+3,f,c
 44315  016614  321D               	rrcf	??i2___fldiv+2,f,c
 44316  016616  321C               	rrcf	??i2___fldiv+1,f,c
 44317  016618  321B               	rrcf	??i2___fldiv,f,c
 44318  01661A  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 44319  01661E  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 44320  016622  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 44321  016626  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 44322  01662A  4A24               	infsnz	i2___fldiv@new_exp,f,c
 44323  01662C  2A25               	incf	i2___fldiv@new_exp+1,f,c
 44324  01662E                     i2l2419:
 44325  01662E  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 44326  016630  D010               	goto	i2l2420
 44327  016632  5025               	movf	i2___fldiv@new_exp+1,w,c
 44328  016634  E103               	bnz	i2u1517_40
 44329  016636  2824               	incf	i2___fldiv@new_exp,w,c
 44330  016638  A0D8               	btfss	status,0,c
 44331  01663A  D00B               	goto	i2l2420
 44332  01663C                     i2u1517_40:
 44333  01663C  0E00               	movlw	0
 44334  01663E  6E25               	movwf	i2___fldiv@new_exp+1,c
 44335  016640  6824               	setf	i2___fldiv@new_exp,c
 44336  016642  0E00               	movlw	0
 44337  016644  6E13               	movwf	i2___fldiv@b,c
 44338  016646  0E00               	movlw	0
 44339  016648  6E14               	movwf	i2___fldiv@b+1,c
 44340  01664A  0E00               	movlw	0
 44341  01664C  6E15               	movwf	i2___fldiv@b+2,c
 44342  01664E  0E00               	movlw	0
 44343  016650  6E16               	movwf	i2___fldiv@b+3,c
 44344  016652                     i2l2420:
 44345  016652  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 44346  016654  D005               	goto	i2u1518_40
 44347  016656  5025               	movf	i2___fldiv@new_exp+1,w,c
 44348  016658  E111               	bnz	i2l12775
 44349  01665A  0424               	decf	i2___fldiv@new_exp,w,c
 44350  01665C  B0D8               	btfsc	status,0,c
 44351  01665E  D00E               	goto	i2l2421
 44352  016660                     i2u1518_40:
 44353  016660  0E00               	movlw	0
 44354  016662  6E25               	movwf	i2___fldiv@new_exp+1,c
 44355  016664  0E00               	movlw	0
 44356  016666  6E24               	movwf	i2___fldiv@new_exp,c
 44357  016668  0E00               	movlw	0
 44358  01666A  6E13               	movwf	i2___fldiv@b,c
 44359  01666C  0E00               	movlw	0
 44360  01666E  6E14               	movwf	i2___fldiv@b+1,c
 44361  016670  0E00               	movlw	0
 44362  016672  6E15               	movwf	i2___fldiv@b+2,c
 44363  016674  0E00               	movlw	0
 44364  016676  6E16               	movwf	i2___fldiv@b+3,c
 44365  016678  0E00               	movlw	0
 44366  01667A  6E1F               	movwf	i2___fldiv@sign,c
 44367  01667C                     i2l2421:
 44368  01667C                     i2l12775:
 44369  01667C  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 44370  016680  A02A               	btfss	i2___fldiv@bexp,0,c
 44371  016682  D002               	goto	i2l2422
 44372  016684  8E15               	bsf	i2___fldiv@b+2,7,c
 44373  016686  D001               	goto	i2l2423
 44374  016688                     i2l2422:
 44375  016688  9E15               	bcf	i2___fldiv@b+2,7,c
 44376  01668A                     i2l2423:
 44377  01668A  90D8               	bcf	status,0,c
 44378  01668C  302A               	rrcf	i2___fldiv@bexp,w,c
 44379  01668E  6E16               	movwf	i2___fldiv@b+3,c
 44380  016690  501F               	movf	i2___fldiv@sign,w,c
 44381  016692  1216               	iorwf	i2___fldiv@b+3,f,c
 44382  016694  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 44383  016698  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 44384  01669C  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 44385  0166A0  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 44386  0166A4  0012               	return	
 44387  0166A6                     __end_ofi2___fldiv:
 44388                           	opt stack 0
 44389                           tosu	equ	0xFFF
 44390                           tosh	equ	0xFFE
 44391                           tosl	equ	0xFFD
 44392                           pclatu	equ	0xFFB
 44393                           pclath	equ	0xFFA
 44394                           tblptru	equ	0xFF8
 44395                           tblptrh	equ	0xFF7
 44396                           tblptrl	equ	0xFF6
 44397                           tablat	equ	0xFF5
 44398                           prodh	equ	0xFF4
 44399                           prodl	equ	0xFF3
 44400                           intcon	equ	0xFF2
 44401                           indf0	equ	0xFEF
 44402                           postinc0	equ	0xFEE
 44403                           fsr0h	equ	0xFEA
 44404                           fsr0l	equ	0xFE9
 44405                           wreg	equ	0xFE8
 44406                           indf1	equ	0xFE7
 44407                           postdec1	equ	0xFE5
 44408                           plusw1	equ	0xFE3
 44409                           fsr1h	equ	0xFE2
 44410                           fsr1l	equ	0xFE1
 44411                           bsr	equ	0xFE0
 44412                           indf2	equ	0xFDF
 44413                           postinc2	equ	0xFDE
 44414                           postdec2	equ	0xFDD
 44415                           plusw2	equ	0xFDB
 44416                           fsr2h	equ	0xFDA
 44417                           fsr2l	equ	0xFD9
 44418                           status	equ	0xFD8
 44419                           
 44420 ;; *************** function _floor *****************
 44421 ;; Defined at:
 44422 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 44423 ;; Parameters:    Size  Location     Type
 44424 ;;  x               4   22[BANK0 ] unsigned char 
 44425 ;; Auto vars:     Size  Location     Type
 44426 ;;  i               4   26[BANK0 ] unsigned char 
 44427 ;;  expon           2   30[BANK0 ] int 
 44428 ;; Return value:  Size  Location     Type
 44429 ;;                  4   22[BANK0 ] int 
 44430 ;; Registers used:
 44431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44432 ;; Tracked objects:
 44433 ;;		On entry : 0/0
 44434 ;;		On exit  : 0/0
 44435 ;;		Unchanged: 0/0
 44436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44438 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44440 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44441 ;;Total ram usage:       10 bytes
 44442 ;; Hardware stack levels used:    1
 44443 ;; Hardware stack levels required when called:    1
 44444 ;; This function calls:
 44445 ;;		_frexp
 44446 ;;		i2___fladd
 44447 ;;		i2___flge
 44448 ;;		i2___fltol
 44449 ;;		i2___xxtofl
 44450 ;; This function is called by:
 44451 ;;		_sin
 44452 ;; This function uses a non-reentrant model
 44453 ;;
 44454                           
 44455                           	psect	text139
 44456  017C32                     __ptext139:
 44457                           	opt stack 0
 44458  017C32                     _floor:
 44459                           	opt stack 13
 44460                           
 44461                           ;incstack = 0
 44462  017C32  C076  F001         	movff	floor@x,frexp@value
 44463  017C36  C077  F002         	movff	floor@x+1,frexp@value+1
 44464  017C3A  C078  F003         	movff	floor@x+2,frexp@value+2
 44465  017C3E  C079  F004         	movff	floor@x+3,frexp@value+3
 44466  017C42  0E7E               	movlw	low floor@expon
 44467  017C44  6E05               	movwf	frexp@eptr,c
 44468  017C46  0E00               	movlw	high floor@expon
 44469  017C48  6E06               	movwf	frexp@eptr+1,c
 44470  017C4A  EC5E  F0C4         	call	_frexp	;wreg free
 44471  017C4E  0100               	movlb	0	; () banked
 44472  017C50  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 44473  017C52  D014               	goto	i2l2550
 44474                           
 44475                           ; BSR set to: 0
 44476  017C54  AF79               	btfss	(floor@x+3)& (0+255),7,b
 44477  017C56  D009               	goto	i2l2551
 44478                           
 44479                           ; BSR set to: 0
 44480  017C58  0E00               	movlw	0
 44481  017C5A  6F76               	movwf	?_floor& (0+255),b
 44482  017C5C  0E00               	movlw	0
 44483  017C5E  6F77               	movwf	(?_floor+1)& (0+255),b
 44484  017C60  0E80               	movlw	128
 44485  017C62  6F78               	movwf	(?_floor+2)& (0+255),b
 44486  017C64  0EBF               	movlw	191
 44487  017C66  6F79               	movwf	(?_floor+3)& (0+255),b
 44488                           
 44489                           ; BSR set to: 0
 44490  017C68  0012               	return	
 44491  017C6A                     i2l2551:
 44492                           
 44493                           ; BSR set to: 0
 44494                           
 44495                           ; BSR set to: 0
 44496  017C6A  0E00               	movlw	0
 44497  017C6C  6F76               	movwf	?_floor& (0+255),b
 44498  017C6E  0E00               	movlw	0
 44499  017C70  6F77               	movwf	(?_floor+1)& (0+255),b
 44500  017C72  0E00               	movlw	0
 44501  017C74  6F78               	movwf	(?_floor+2)& (0+255),b
 44502  017C76  0E00               	movlw	0
 44503  017C78  6F79               	movwf	(?_floor+3)& (0+255),b
 44504                           
 44505                           ; BSR set to: 0
 44506  017C7A  0012               	return	
 44507  017C7C                     i2l2550:
 44508                           
 44509                           ; BSR set to: 0
 44510                           
 44511                           ; BSR set to: 0
 44512  017C7C  517F               	movf	(floor@expon+1)& (0+255),w,b
 44513  017C7E  E104               	bnz	i2u1698_40
 44514  017C80  0E1D               	movlw	29
 44515  017C82  5D7E               	subwf	floor@expon& (0+255),w,b
 44516  017C84  A0D8               	btfss	status,0,c
 44517  017C86  D009               	goto	i2l2553
 44518  017C88                     i2u1698_40:
 44519                           
 44520                           ; BSR set to: 0
 44521  017C88  C076  F076         	movff	floor@x,?_floor
 44522  017C8C  C077  F077         	movff	floor@x+1,?_floor+1
 44523  017C90  C078  F078         	movff	floor@x+2,?_floor+2
 44524  017C94  C079  F079         	movff	floor@x+3,?_floor+3
 44525  017C98  0012               	return	
 44526  017C9A                     i2l2553:
 44527                           
 44528                           ; BSR set to: 0
 44529                           
 44530                           ; BSR set to: 0
 44531  017C9A  C076  F06C         	movff	floor@x,i2___fltol@f1
 44532  017C9E  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 44533  017CA2  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 44534  017CA6  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 44535  017CAA  EC09  F0C0         	call	i2___fltol	;wreg free
 44536  017CAE  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 44537  017CB2  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 44538  017CB6  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 44539  017CBA  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 44540  017CBE  0E01               	movlw	1
 44541  017CC0  ECC7  F0B8         	call	i2___xxtofl
 44542  017CC4  C005  F07A         	movff	?i2___xxtofl,floor@i
 44543  017CC8  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 44544  017CCC  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 44545  017CD0  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 44546  017CD4  C076  F034         	movff	floor@x,i2___flge@ff1
 44547  017CD8  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 44548  017CDC  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 44549  017CE0  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 44550  017CE4  C07A  F038         	movff	floor@i,i2___flge@ff2
 44551  017CE8  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 44552  017CEC  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 44553  017CF0  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 44554  017CF4  EC89  F0BD         	call	i2___flge	;wreg free
 44555  017CF8  B0D8               	btfsc	status,0,c
 44556  017CFA  D01B               	goto	i2l2554
 44557  017CFC  C07A  F056         	movff	floor@i,i2___fladd@b
 44558  017D00  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 44559  017D04  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 44560  017D08  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 44561  017D0C  0E00               	movlw	0
 44562  017D0E  6E5A               	movwf	i2___fladd@a,c
 44563  017D10  0E00               	movlw	0
 44564  017D12  6E5B               	movwf	i2___fladd@a+1,c
 44565  017D14  0E80               	movlw	128
 44566  017D16  6E5C               	movwf	i2___fladd@a+2,c
 44567  017D18  0EBF               	movlw	191
 44568  017D1A  6E5D               	movwf	i2___fladd@a+3,c
 44569  017D1C  EC39  F0A9         	call	i2___fladd	;wreg free
 44570  017D20  C056  F076         	movff	?i2___fladd,?_floor
 44571  017D24  C057  F077         	movff	?i2___fladd+1,?_floor+1
 44572  017D28  C058  F078         	movff	?i2___fladd+2,?_floor+2
 44573  017D2C  C059  F079         	movff	?i2___fladd+3,?_floor+3
 44574  017D30  0012               	return	
 44575  017D32                     i2l2554:
 44576  017D32  C07A  F076         	movff	floor@i,?_floor
 44577  017D36  C07B  F077         	movff	floor@i+1,?_floor+1
 44578  017D3A  C07C  F078         	movff	floor@i+2,?_floor+2
 44579  017D3E  C07D  F079         	movff	floor@i+3,?_floor+3
 44580  017D42  0012               	return		;funcret
 44581  017D44                     __end_of_floor:
 44582                           	opt stack 0
 44583                           tosu	equ	0xFFF
 44584                           tosh	equ	0xFFE
 44585                           tosl	equ	0xFFD
 44586                           pclatu	equ	0xFFB
 44587                           pclath	equ	0xFFA
 44588                           tblptru	equ	0xFF8
 44589                           tblptrh	equ	0xFF7
 44590                           tblptrl	equ	0xFF6
 44591                           tablat	equ	0xFF5
 44592                           prodh	equ	0xFF4
 44593                           prodl	equ	0xFF3
 44594                           intcon	equ	0xFF2
 44595                           indf0	equ	0xFEF
 44596                           postinc0	equ	0xFEE
 44597                           fsr0h	equ	0xFEA
 44598                           fsr0l	equ	0xFE9
 44599                           wreg	equ	0xFE8
 44600                           indf1	equ	0xFE7
 44601                           postdec1	equ	0xFE5
 44602                           plusw1	equ	0xFE3
 44603                           fsr1h	equ	0xFE2
 44604                           fsr1l	equ	0xFE1
 44605                           bsr	equ	0xFE0
 44606                           indf2	equ	0xFDF
 44607                           postinc2	equ	0xFDE
 44608                           postdec2	equ	0xFDD
 44609                           plusw2	equ	0xFDB
 44610                           fsr2h	equ	0xFDA
 44611                           fsr2l	equ	0xFD9
 44612                           status	equ	0xFD8
 44613                           
 44614 ;; *************** function i2___xxtofl *****************
 44615 ;; Defined at:
 44616 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 44617 ;; Parameters:    Size  Location     Type
 44618 ;;  sign            1    wreg     unsigned char 
 44619 ;;  val             4    4[COMRAM] long 
 44620 ;; Auto vars:     Size  Location     Type
 44621 ;;  sign            1   12[COMRAM] unsigned char 
 44622 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 44623 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 44624 ;; Return value:  Size  Location     Type
 44625 ;;                  4    4[COMRAM] unsigned char 
 44626 ;; Registers used:
 44627 ;;		wreg, status,2, status,0
 44628 ;; Tracked objects:
 44629 ;;		On entry : 0/0
 44630 ;;		On exit  : 0/0
 44631 ;;		Unchanged: 0/0
 44632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44634 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44636 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44637 ;;Total ram usage:       14 bytes
 44638 ;; Hardware stack levels used:    1
 44639 ;; This function calls:
 44640 ;;		Nothing
 44641 ;; This function is called by:
 44642 ;;		_ADCPostProcessingCallback
 44643 ;;		_floor
 44644 ;;		i2_printf
 44645 ;; This function uses a non-reentrant model
 44646 ;;
 44647                           
 44648                           	psect	text140
 44649  01718E                     __ptext140:
 44650                           	opt stack 0
 44651  01718E                     i2___xxtofl:
 44652                           	opt stack 16
 44653                           
 44654                           ;incstack = 0
 44655                           ;i2___xxtofl@sign stored from wreg
 44656  01718E  6E0D               	movwf	i2___xxtofl@sign,c
 44657  017190  500D               	movf	i2___xxtofl@sign,w,c
 44658  017192  A4D8               	btfss	status,2,c
 44659  017194  AE08               	btfss	i2___xxtofl@val+3,7,c
 44660  017196  D01A               	goto	i2l2529
 44661  017198  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 44662  01719C  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 44663  0171A0  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 44664  0171A4  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 44665  0171A8  1E09               	comf	??i2___xxtofl,f,c
 44666  0171AA  1E0A               	comf	??i2___xxtofl+1,f,c
 44667  0171AC  1E0B               	comf	??i2___xxtofl+2,f,c
 44668  0171AE  1E0C               	comf	??i2___xxtofl+3,f,c
 44669  0171B0  2A09               	incf	??i2___xxtofl,f,c
 44670  0171B2  0E00               	movlw	0
 44671  0171B4  220A               	addwfc	??i2___xxtofl+1,f,c
 44672  0171B6  220B               	addwfc	??i2___xxtofl+2,f,c
 44673  0171B8  220C               	addwfc	??i2___xxtofl+3,f,c
 44674  0171BA  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 44675  0171BE  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 44676  0171C2  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 44677  0171C6  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 44678  0171CA  D008               	goto	i2l2530
 44679  0171CC                     i2l2529:
 44680  0171CC  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 44681  0171D0  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 44682  0171D4  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 44683  0171D8  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 44684  0171DC                     i2l2530:
 44685  0171DC  5005               	movf	i2___xxtofl@val,w,c
 44686  0171DE  1006               	iorwf	i2___xxtofl@val+1,w,c
 44687  0171E0  1007               	iorwf	i2___xxtofl@val+2,w,c
 44688  0171E2  1008               	iorwf	i2___xxtofl@val+3,w,c
 44689  0171E4  A4D8               	btfss	status,2,c
 44690  0171E6  D009               	goto	i2l2531
 44691  0171E8  0E00               	movlw	0
 44692  0171EA  6E05               	movwf	?i2___xxtofl,c
 44693  0171EC  0E00               	movlw	0
 44694  0171EE  6E06               	movwf	?i2___xxtofl+1,c
 44695  0171F0  0E00               	movlw	0
 44696  0171F2  6E07               	movwf	?i2___xxtofl+2,c
 44697  0171F4  0E00               	movlw	0
 44698  0171F6  6E08               	movwf	?i2___xxtofl+3,c
 44699  0171F8  0012               	return	
 44700  0171FA                     i2l2531:
 44701  0171FA  0E96               	movlw	150
 44702  0171FC  6E0E               	movwf	i2___xxtofl@exp,c
 44703  0171FE  D006               	goto	i2l2533
 44704  017200  2A0E               	incf	i2___xxtofl@exp,f,c
 44705  017202  90D8               	bcf	status,0,c
 44706  017204  3212               	rrcf	i2___xxtofl@arg+3,f,c
 44707  017206  3211               	rrcf	i2___xxtofl@arg+2,f,c
 44708  017208  3210               	rrcf	i2___xxtofl@arg+1,f,c
 44709  01720A  320F               	rrcf	i2___xxtofl@arg,f,c
 44710  01720C                     i2l2533:
 44711  01720C  0E00               	movlw	0
 44712  01720E  140F               	andwf	i2___xxtofl@arg,w,c
 44713  017210  6E09               	movwf	??i2___xxtofl& (0+255),c
 44714  017212  0E00               	movlw	0
 44715  017214  1410               	andwf	i2___xxtofl@arg+1,w,c
 44716  017216  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 44717  017218  0E00               	movlw	0
 44718  01721A  1411               	andwf	i2___xxtofl@arg+2,w,c
 44719  01721C  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 44720  01721E  0EFE               	movlw	254
 44721  017220  1412               	andwf	i2___xxtofl@arg+3,w,c
 44722  017222  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 44723  017224  5009               	movf	??i2___xxtofl,w,c
 44724  017226  100A               	iorwf	??i2___xxtofl+1,w,c
 44725  017228  100B               	iorwf	??i2___xxtofl+2,w,c
 44726  01722A  100C               	iorwf	??i2___xxtofl+3,w,c
 44727  01722C  B4D8               	btfsc	status,2,c
 44728  01722E  D00D               	goto	i2l2536
 44729  017230  D7E7               	goto	i2l2534
 44730  017232  2A0E               	incf	i2___xxtofl@exp,f,c
 44731  017234  0E01               	movlw	1
 44732  017236  260F               	addwf	i2___xxtofl@arg,f,c
 44733  017238  0E00               	movlw	0
 44734  01723A  2210               	addwfc	i2___xxtofl@arg+1,f,c
 44735  01723C  2211               	addwfc	i2___xxtofl@arg+2,f,c
 44736  01723E  2212               	addwfc	i2___xxtofl@arg+3,f,c
 44737  017240  90D8               	bcf	status,0,c
 44738  017242  3212               	rrcf	i2___xxtofl@arg+3,f,c
 44739  017244  3211               	rrcf	i2___xxtofl@arg+2,f,c
 44740  017246  3210               	rrcf	i2___xxtofl@arg+1,f,c
 44741  017248  320F               	rrcf	i2___xxtofl@arg,f,c
 44742  01724A                     i2l2536:
 44743  01724A  0E00               	movlw	0
 44744  01724C  140F               	andwf	i2___xxtofl@arg,w,c
 44745  01724E  6E09               	movwf	??i2___xxtofl& (0+255),c
 44746  017250  0E00               	movlw	0
 44747  017252  1410               	andwf	i2___xxtofl@arg+1,w,c
 44748  017254  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 44749  017256  0E00               	movlw	0
 44750  017258  1411               	andwf	i2___xxtofl@arg+2,w,c
 44751  01725A  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 44752  01725C  0EFF               	movlw	255
 44753  01725E  1412               	andwf	i2___xxtofl@arg+3,w,c
 44754  017260  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 44755  017262  5009               	movf	??i2___xxtofl,w,c
 44756  017264  100A               	iorwf	??i2___xxtofl+1,w,c
 44757  017266  100B               	iorwf	??i2___xxtofl+2,w,c
 44758  017268  100C               	iorwf	??i2___xxtofl+3,w,c
 44759  01726A  B4D8               	btfsc	status,2,c
 44760  01726C  D007               	goto	i2l2539
 44761  01726E  D7E1               	goto	i2l2537
 44762  017270  060E               	decf	i2___xxtofl@exp,f,c
 44763  017272  90D8               	bcf	status,0,c
 44764  017274  360F               	rlcf	i2___xxtofl@arg,f,c
 44765  017276  3610               	rlcf	i2___xxtofl@arg+1,f,c
 44766  017278  3611               	rlcf	i2___xxtofl@arg+2,f,c
 44767  01727A  3612               	rlcf	i2___xxtofl@arg+3,f,c
 44768  01727C                     i2l2539:
 44769  01727C  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 44770  01727E  D003               	goto	i2u1606_40
 44771  017280  0E02               	movlw	2
 44772  017282  600E               	cpfslt	i2___xxtofl@exp,c
 44773  017284  D7F5               	goto	i2l2540
 44774  017286                     i2u1606_40:
 44775  017286  B00E               	btfsc	i2___xxtofl@exp,0,c
 44776  017288  D008               	goto	i2l2544
 44777  01728A  0EFF               	movlw	255
 44778  01728C  160F               	andwf	i2___xxtofl@arg,f,c
 44779  01728E  0EFF               	movlw	255
 44780  017290  1610               	andwf	i2___xxtofl@arg+1,f,c
 44781  017292  0E7F               	movlw	127
 44782  017294  1611               	andwf	i2___xxtofl@arg+2,f,c
 44783  017296  0EFF               	movlw	255
 44784  017298  1612               	andwf	i2___xxtofl@arg+3,f,c
 44785  01729A                     i2l2544:
 44786  01729A  90D8               	bcf	status,0,c
 44787  01729C  320E               	rrcf	i2___xxtofl@exp,f,c
 44788  01729E  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 44789  0172A2  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 44790  0172A4  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 44791  0172A6  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 44792  0172A8  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 44793  0172AC  6A0B               	clrf	??i2___xxtofl+2,c
 44794  0172AE  6A0A               	clrf	??i2___xxtofl+1,c
 44795  0172B0  6A09               	clrf	??i2___xxtofl,c
 44796  0172B2  5009               	movf	??i2___xxtofl,w,c
 44797  0172B4  120F               	iorwf	i2___xxtofl@arg,f,c
 44798  0172B6  500A               	movf	??i2___xxtofl+1,w,c
 44799  0172B8  1210               	iorwf	i2___xxtofl@arg+1,f,c
 44800  0172BA  500B               	movf	??i2___xxtofl+2,w,c
 44801  0172BC  1211               	iorwf	i2___xxtofl@arg+2,f,c
 44802  0172BE  500C               	movf	??i2___xxtofl+3,w,c
 44803  0172C0  1212               	iorwf	i2___xxtofl@arg+3,f,c
 44804  0172C2  500D               	movf	i2___xxtofl@sign,w,c
 44805  0172C4  A4D8               	btfss	status,2,c
 44806  0172C6  AE08               	btfss	i2___xxtofl@val+3,7,c
 44807  0172C8  D001               	goto	i2l2545
 44808  0172CA  8E12               	bsf	i2___xxtofl@arg+3,7,c
 44809  0172CC                     i2l2545:
 44810  0172CC  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 44811  0172D0  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 44812  0172D4  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 44813  0172D8  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 44814  0172DC  0012               	return	
 44815  0172DE                     __end_ofi2___xxtofl:
 44816                           	opt stack 0
 44817                           tosu	equ	0xFFF
 44818                           tosh	equ	0xFFE
 44819                           tosl	equ	0xFFD
 44820                           pclatu	equ	0xFFB
 44821                           pclath	equ	0xFFA
 44822                           tblptru	equ	0xFF8
 44823                           tblptrh	equ	0xFF7
 44824                           tblptrl	equ	0xFF6
 44825                           tablat	equ	0xFF5
 44826                           prodh	equ	0xFF4
 44827                           prodl	equ	0xFF3
 44828                           intcon	equ	0xFF2
 44829                           indf0	equ	0xFEF
 44830                           postinc0	equ	0xFEE
 44831                           fsr0h	equ	0xFEA
 44832                           fsr0l	equ	0xFE9
 44833                           wreg	equ	0xFE8
 44834                           indf1	equ	0xFE7
 44835                           postdec1	equ	0xFE5
 44836                           plusw1	equ	0xFE3
 44837                           fsr1h	equ	0xFE2
 44838                           fsr1l	equ	0xFE1
 44839                           bsr	equ	0xFE0
 44840                           indf2	equ	0xFDF
 44841                           postinc2	equ	0xFDE
 44842                           postdec2	equ	0xFDD
 44843                           plusw2	equ	0xFDB
 44844                           fsr2h	equ	0xFDA
 44845                           fsr2l	equ	0xFD9
 44846                           status	equ	0xFD8
 44847                           
 44848 ;; *************** function i2___fltol *****************
 44849 ;; Defined at:
 44850 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 44851 ;; Parameters:    Size  Location     Type
 44852 ;;  f1              4   12[BANK0 ] unsigned char 
 44853 ;; Auto vars:     Size  Location     Type
 44854 ;;  __fltol         1   21[BANK0 ] unsigned char 
 44855 ;;  __fltol         1   20[BANK0 ] unsigned char 
 44856 ;; Return value:  Size  Location     Type
 44857 ;;                  4   12[BANK0 ] long 
 44858 ;; Registers used:
 44859 ;;		wreg, status,2, status,0
 44860 ;; Tracked objects:
 44861 ;;		On entry : 0/0
 44862 ;;		On exit  : 0/0
 44863 ;;		Unchanged: 0/0
 44864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44866 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44868 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44869 ;;Total ram usage:       10 bytes
 44870 ;; Hardware stack levels used:    1
 44871 ;; This function calls:
 44872 ;;		Nothing
 44873 ;; This function is called by:
 44874 ;;		_ADCPostProcessingCallback
 44875 ;;		_floor
 44876 ;;		i2_printf
 44877 ;; This function uses a non-reentrant model
 44878 ;;
 44879                           
 44880                           	psect	text141
 44881  018012                     __ptext141:
 44882                           	opt stack 0
 44883  018012                     i2___fltol:
 44884                           	opt stack 16
 44885                           
 44886                           ;incstack = 0
 44887  018012  0100               	movlb	0	; () banked
 44888  018014  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 44889  018016  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 44890  018018  6F75               	movwf	i2___fltol@exp1& (0+255),b
 44891  01801A  5175               	movf	i2___fltol@exp1& (0+255),w,b
 44892  01801C  A4D8               	btfss	status,2,c
 44893  01801E  D009               	goto	i2l2096
 44894                           
 44895                           ; BSR set to: 0
 44896  018020  0E00               	movlw	0
 44897  018022  6F6C               	movwf	?i2___fltol& (0+255),b
 44898  018024  0E00               	movlw	0
 44899  018026  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 44900  018028  0E00               	movlw	0
 44901  01802A  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 44902  01802C  0E00               	movlw	0
 44903  01802E  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 44904                           
 44905                           ; BSR set to: 0
 44906  018030  0012               	return	
 44907  018032                     i2l2096:
 44908                           
 44909                           ; BSR set to: 0
 44910                           
 44911                           ; BSR set to: 0
 44912  018032  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 44913  018036  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 44914  01803A  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 44915  01803E  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 44916  018042  0E20               	movlw	32
 44917  018044  D005               	goto	i2u1594_40
 44918  018046                     i2u1594_45:
 44919  018046  90D8               	bcf	status,0,c
 44920  018048  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 44921  01804A  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 44922  01804C  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 44923  01804E  3370               	rrcf	??i2___fltol& (0+255),f,b
 44924  018050                     i2u1594_40:
 44925  018050  2EE8               	decfsz	wreg,f,c
 44926  018052  D7F9               	goto	i2u1594_45
 44927  018054  5170               	movf	??i2___fltol& (0+255),w,b
 44928  018056  6F74               	movwf	i2___fltol@sign1& (0+255),b
 44929                           
 44930                           ; BSR set to: 0
 44931  018058  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 44932                           
 44933                           ; BSR set to: 0
 44934  01805A  0EFF               	movlw	255
 44935  01805C  176C               	andwf	i2___fltol@f1& (0+255),f,b
 44936  01805E  0EFF               	movlw	255
 44937  018060  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 44938  018062  0EFF               	movlw	255
 44939  018064  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 44940  018066  0E00               	movlw	0
 44941  018068  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 44942                           
 44943                           ; BSR set to: 0
 44944  01806A  0E96               	movlw	150
 44945  01806C  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 44946                           
 44947                           ; BSR set to: 0
 44948  01806E  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 44949  018070  D016               	goto	i2l2098
 44950                           
 44951                           ; BSR set to: 0
 44952  018072  5175               	movf	i2___fltol@exp1& (0+255),w,b
 44953  018074  0A80               	xorlw	128
 44954  018076  0F97               	addlw	151
 44955  018078  B0D8               	btfsc	status,0,c
 44956  01807A  D009               	goto	i2l2099
 44957                           
 44958                           ; BSR set to: 0
 44959  01807C  0E00               	movlw	0
 44960  01807E  6F6C               	movwf	?i2___fltol& (0+255),b
 44961  018080  0E00               	movlw	0
 44962  018082  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 44963  018084  0E00               	movlw	0
 44964  018086  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 44965  018088  0E00               	movlw	0
 44966  01808A  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 44967                           
 44968                           ; BSR set to: 0
 44969  01808C  0012               	return	
 44970  01808E                     i2l2099:
 44971                           
 44972                           ; BSR set to: 0
 44973                           
 44974                           ; BSR set to: 0
 44975                           
 44976                           ; BSR set to: 0
 44977  01808E  90D8               	bcf	status,0,c
 44978  018090  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 44979  018092  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 44980  018094  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 44981  018096  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 44982                           
 44983                           ; BSR set to: 0
 44984  018098  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 44985  01809A  D7F9               	goto	i2l2099
 44986                           
 44987                           ; BSR set to: 0
 44988  01809C  D015               	goto	i2u1598_40
 44989  01809E                     i2l2098:
 44990                           
 44991                           ; BSR set to: 0
 44992                           
 44993                           ; BSR set to: 0
 44994  01809E  0E1F               	movlw	31
 44995  0180A0  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 44996  0180A2  D00F               	goto	i2l2104
 44997                           
 44998                           ; BSR set to: 0
 44999  0180A4  0E00               	movlw	0
 45000  0180A6  6F6C               	movwf	?i2___fltol& (0+255),b
 45001  0180A8  0E00               	movlw	0
 45002  0180AA  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 45003  0180AC  0E00               	movlw	0
 45004  0180AE  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 45005  0180B0  0E00               	movlw	0
 45006  0180B2  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 45007                           
 45008                           ; BSR set to: 0
 45009  0180B4  0012               	return	
 45010  0180B6                     
 45011                           ; BSR set to: 0
 45012                           
 45013                           ; BSR set to: 0
 45014  0180B6  90D8               	bcf	status,0,c
 45015  0180B8  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 45016  0180BA  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 45017  0180BC  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 45018  0180BE  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 45019  0180C0  0775               	decf	i2___fltol@exp1& (0+255),f,b
 45020  0180C2                     i2l2104:
 45021                           
 45022                           ; BSR set to: 0
 45023                           
 45024                           ; BSR set to: 0
 45025  0180C2  5175               	movf	i2___fltol@exp1& (0+255),w,b
 45026  0180C4  A4D8               	btfss	status,2,c
 45027  0180C6  D7F7               	goto	i2l2105
 45028  0180C8                     i2u1598_40:
 45029                           
 45030                           ; BSR set to: 0
 45031                           
 45032                           ; BSR set to: 0
 45033                           
 45034                           ; BSR set to: 0
 45035  0180C8  5174               	movf	i2___fltol@sign1& (0+255),w,b
 45036  0180CA  B4D8               	btfsc	status,2,c
 45037  0180CC  D008               	goto	i2l2107
 45038                           
 45039                           ; BSR set to: 0
 45040  0180CE  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 45041  0180D0  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 45042  0180D2  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 45043  0180D4  6D6C               	negf	i2___fltol@f1& (0+255),b
 45044  0180D6  0E00               	movlw	0
 45045  0180D8  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 45046  0180DA  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 45047  0180DC  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 45048  0180DE                     i2l2107:
 45049                           
 45050                           ; BSR set to: 0
 45051                           
 45052                           ; BSR set to: 0
 45053  0180DE  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 45054  0180E2  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 45055  0180E6  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 45056  0180EA  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 45057  0180EE  0012               	return	
 45058  0180F0                     __end_ofi2___fltol:
 45059                           	opt stack 0
 45060                           tosu	equ	0xFFF
 45061                           tosh	equ	0xFFE
 45062                           tosl	equ	0xFFD
 45063                           pclatu	equ	0xFFB
 45064                           pclath	equ	0xFFA
 45065                           tblptru	equ	0xFF8
 45066                           tblptrh	equ	0xFF7
 45067                           tblptrl	equ	0xFF6
 45068                           tablat	equ	0xFF5
 45069                           prodh	equ	0xFF4
 45070                           prodl	equ	0xFF3
 45071                           intcon	equ	0xFF2
 45072                           indf0	equ	0xFEF
 45073                           postinc0	equ	0xFEE
 45074                           fsr0h	equ	0xFEA
 45075                           fsr0l	equ	0xFE9
 45076                           wreg	equ	0xFE8
 45077                           indf1	equ	0xFE7
 45078                           postdec1	equ	0xFE5
 45079                           plusw1	equ	0xFE3
 45080                           fsr1h	equ	0xFE2
 45081                           fsr1l	equ	0xFE1
 45082                           bsr	equ	0xFE0
 45083                           indf2	equ	0xFDF
 45084                           postinc2	equ	0xFDE
 45085                           postdec2	equ	0xFDD
 45086                           plusw2	equ	0xFDB
 45087                           fsr2h	equ	0xFDA
 45088                           fsr2l	equ	0xFD9
 45089                           status	equ	0xFD8
 45090                           
 45091 ;; *************** function i2___flge *****************
 45092 ;; Defined at:
 45093 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 45094 ;; Parameters:    Size  Location     Type
 45095 ;;  ff1             4   51[COMRAM] long 
 45096 ;;  ff2             4   55[COMRAM] long 
 45097 ;; Auto vars:     Size  Location     Type
 45098 ;;		None
 45099 ;; Return value:  Size  Location     Type
 45100 ;;		None               void
 45101 ;; Registers used:
 45102 ;;		wreg, status,2, status,0
 45103 ;; Tracked objects:
 45104 ;;		On entry : 0/0
 45105 ;;		On exit  : 0/0
 45106 ;;		Unchanged: 0/0
 45107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45111 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45112 ;;Total ram usage:       12 bytes
 45113 ;; Hardware stack levels used:    1
 45114 ;; This function calls:
 45115 ;;		Nothing
 45116 ;; This function is called by:
 45117 ;;		_ADCPostProcessingCallback
 45118 ;;		_writeEnergyToEEPROMCallback
 45119 ;;		_asin
 45120 ;;		_atan
 45121 ;;		_sin
 45122 ;;		_floor
 45123 ;;		i2_printf
 45124 ;; This function uses a non-reentrant model
 45125 ;;
 45126                           
 45127                           	psect	text142
 45128  017B12                     __ptext142:
 45129                           	opt stack 0
 45130  017B12                     i2___flge:
 45131                           	opt stack 15
 45132                           
 45133                           ; BSR set to: 0
 45134                           ;incstack = 0
 45135  017B12  0E00               	movlw	0
 45136  017B14  1434               	andwf	i2___flge@ff1,w,c
 45137  017B16  6E3C               	movwf	??i2___flge& (0+255),c
 45138  017B18  0E00               	movlw	0
 45139  017B1A  1435               	andwf	i2___flge@ff1+1,w,c
 45140  017B1C  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 45141  017B1E  0E80               	movlw	128
 45142  017B20  1436               	andwf	i2___flge@ff1+2,w,c
 45143  017B22  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 45144  017B24  0E7F               	movlw	127
 45145  017B26  1437               	andwf	i2___flge@ff1+3,w,c
 45146  017B28  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 45147  017B2A  503C               	movf	??i2___flge,w,c
 45148  017B2C  103D               	iorwf	??i2___flge+1,w,c
 45149  017B2E  103E               	iorwf	??i2___flge+2,w,c
 45150  017B30  103F               	iorwf	??i2___flge+3,w,c
 45151  017B32  A4D8               	btfss	status,2,c
 45152  017B34  D008               	goto	i2l2066
 45153  017B36  0E00               	movlw	0
 45154  017B38  6E34               	movwf	i2___flge@ff1,c
 45155  017B3A  0E00               	movlw	0
 45156  017B3C  6E35               	movwf	i2___flge@ff1+1,c
 45157  017B3E  0E00               	movlw	0
 45158  017B40  6E36               	movwf	i2___flge@ff1+2,c
 45159  017B42  0E00               	movlw	0
 45160  017B44  6E37               	movwf	i2___flge@ff1+3,c
 45161  017B46                     i2l2066:
 45162  017B46  0E00               	movlw	0
 45163  017B48  1438               	andwf	i2___flge@ff2,w,c
 45164  017B4A  6E3C               	movwf	??i2___flge& (0+255),c
 45165  017B4C  0E00               	movlw	0
 45166  017B4E  1439               	andwf	i2___flge@ff2+1,w,c
 45167  017B50  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 45168  017B52  0E80               	movlw	128
 45169  017B54  143A               	andwf	i2___flge@ff2+2,w,c
 45170  017B56  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 45171  017B58  0E7F               	movlw	127
 45172  017B5A  143B               	andwf	i2___flge@ff2+3,w,c
 45173  017B5C  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 45174  017B5E  503C               	movf	??i2___flge,w,c
 45175  017B60  103D               	iorwf	??i2___flge+1,w,c
 45176  017B62  103E               	iorwf	??i2___flge+2,w,c
 45177  017B64  103F               	iorwf	??i2___flge+3,w,c
 45178  017B66  A4D8               	btfss	status,2,c
 45179  017B68  D008               	goto	i2l2067
 45180  017B6A  0E00               	movlw	0
 45181  017B6C  6E38               	movwf	i2___flge@ff2,c
 45182  017B6E  0E00               	movlw	0
 45183  017B70  6E39               	movwf	i2___flge@ff2+1,c
 45184  017B72  0E00               	movlw	0
 45185  017B74  6E3A               	movwf	i2___flge@ff2+2,c
 45186  017B76  0E00               	movlw	0
 45187  017B78  6E3B               	movwf	i2___flge@ff2+3,c
 45188  017B7A                     i2l2067:
 45189  017B7A  AE37               	btfss	i2___flge@ff1+3,7,c
 45190  017B7C  D01D               	goto	i2l2068
 45191  017B7E  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 45192  017B82  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 45193  017B86  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 45194  017B8A  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 45195  017B8E  1E3C               	comf	??i2___flge,f,c
 45196  017B90  1E3D               	comf	??i2___flge+1,f,c
 45197  017B92  1E3E               	comf	??i2___flge+2,f,c
 45198  017B94  1E3F               	comf	??i2___flge+3,f,c
 45199  017B96  2A3C               	incf	??i2___flge,f,c
 45200  017B98  0E00               	movlw	0
 45201  017B9A  223D               	addwfc	??i2___flge+1,f,c
 45202  017B9C  223E               	addwfc	??i2___flge+2,f,c
 45203  017B9E  223F               	addwfc	??i2___flge+3,f,c
 45204  017BA0  0E00               	movlw	0
 45205  017BA2  243C               	addwf	??i2___flge,w,c
 45206  017BA4  6E34               	movwf	i2___flge@ff1,c
 45207  017BA6  0E00               	movlw	0
 45208  017BA8  203D               	addwfc	??i2___flge+1,w,c
 45209  017BAA  6E35               	movwf	i2___flge@ff1+1,c
 45210  017BAC  0E00               	movlw	0
 45211  017BAE  203E               	addwfc	??i2___flge+2,w,c
 45212  017BB0  6E36               	movwf	i2___flge@ff1+2,c
 45213  017BB2  0E80               	movlw	128
 45214  017BB4  203F               	addwfc	??i2___flge+3,w,c
 45215  017BB6  6E37               	movwf	i2___flge@ff1+3,c
 45216  017BB8                     i2l2068:
 45217  017BB8  AE3B               	btfss	i2___flge@ff2+3,7,c
 45218  017BBA  D01D               	goto	i2l2069
 45219  017BBC  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 45220  017BC0  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 45221  017BC4  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 45222  017BC8  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 45223  017BCC  1E3C               	comf	??i2___flge,f,c
 45224  017BCE  1E3D               	comf	??i2___flge+1,f,c
 45225  017BD0  1E3E               	comf	??i2___flge+2,f,c
 45226  017BD2  1E3F               	comf	??i2___flge+3,f,c
 45227  017BD4  2A3C               	incf	??i2___flge,f,c
 45228  017BD6  0E00               	movlw	0
 45229  017BD8  223D               	addwfc	??i2___flge+1,f,c
 45230  017BDA  223E               	addwfc	??i2___flge+2,f,c
 45231  017BDC  223F               	addwfc	??i2___flge+3,f,c
 45232  017BDE  0E00               	movlw	0
 45233  017BE0  243C               	addwf	??i2___flge,w,c
 45234  017BE2  6E38               	movwf	i2___flge@ff2,c
 45235  017BE4  0E00               	movlw	0
 45236  017BE6  203D               	addwfc	??i2___flge+1,w,c
 45237  017BE8  6E39               	movwf	i2___flge@ff2+1,c
 45238  017BEA  0E00               	movlw	0
 45239  017BEC  203E               	addwfc	??i2___flge+2,w,c
 45240  017BEE  6E3A               	movwf	i2___flge@ff2+2,c
 45241  017BF0  0E80               	movlw	128
 45242  017BF2  203F               	addwfc	??i2___flge+3,w,c
 45243  017BF4  6E3B               	movwf	i2___flge@ff2+3,c
 45244  017BF6                     i2l2069:
 45245  017BF6  0E00               	movlw	0
 45246  017BF8  1A34               	xorwf	i2___flge@ff1,f,c
 45247  017BFA  0E00               	movlw	0
 45248  017BFC  1A35               	xorwf	i2___flge@ff1+1,f,c
 45249  017BFE  0E00               	movlw	0
 45250  017C00  1A36               	xorwf	i2___flge@ff1+2,f,c
 45251  017C02  0E80               	movlw	128
 45252  017C04  1A37               	xorwf	i2___flge@ff1+3,f,c
 45253  017C06  0E00               	movlw	0
 45254  017C08  1A38               	xorwf	i2___flge@ff2,f,c
 45255  017C0A  0E00               	movlw	0
 45256  017C0C  1A39               	xorwf	i2___flge@ff2+1,f,c
 45257  017C0E  0E00               	movlw	0
 45258  017C10  1A3A               	xorwf	i2___flge@ff2+2,f,c
 45259  017C12  0E80               	movlw	128
 45260  017C14  1A3B               	xorwf	i2___flge@ff2+3,f,c
 45261  017C16  5038               	movf	i2___flge@ff2,w,c
 45262  017C18  5C34               	subwf	i2___flge@ff1,w,c
 45263  017C1A  5039               	movf	i2___flge@ff2+1,w,c
 45264  017C1C  5835               	subwfb	i2___flge@ff1+1,w,c
 45265  017C1E  503A               	movf	i2___flge@ff2+2,w,c
 45266  017C20  5836               	subwfb	i2___flge@ff1+2,w,c
 45267  017C22  503B               	movf	i2___flge@ff2+3,w,c
 45268  017C24  5837               	subwfb	i2___flge@ff1+3,w,c
 45269  017C26  B0D8               	btfsc	status,0,c
 45270  017C28  D002               	goto	i2l11847
 45271  017C2A  90D8               	bcf	status,0,c
 45272  017C2C  0012               	return	
 45273  017C2E                     i2l11847:
 45274  017C2E  80D8               	bsf	status,0,c
 45275  017C30  0012               	return	
 45276  017C32                     __end_ofi2___flge:
 45277                           	opt stack 0
 45278                           tosu	equ	0xFFF
 45279                           tosh	equ	0xFFE
 45280                           tosl	equ	0xFFD
 45281                           pclatu	equ	0xFFB
 45282                           pclath	equ	0xFFA
 45283                           tblptru	equ	0xFF8
 45284                           tblptrh	equ	0xFF7
 45285                           tblptrl	equ	0xFF6
 45286                           tablat	equ	0xFF5
 45287                           prodh	equ	0xFF4
 45288                           prodl	equ	0xFF3
 45289                           intcon	equ	0xFF2
 45290                           indf0	equ	0xFEF
 45291                           postinc0	equ	0xFEE
 45292                           fsr0h	equ	0xFEA
 45293                           fsr0l	equ	0xFE9
 45294                           wreg	equ	0xFE8
 45295                           indf1	equ	0xFE7
 45296                           postdec1	equ	0xFE5
 45297                           plusw1	equ	0xFE3
 45298                           fsr1h	equ	0xFE2
 45299                           fsr1l	equ	0xFE1
 45300                           bsr	equ	0xFE0
 45301                           indf2	equ	0xFDF
 45302                           postinc2	equ	0xFDE
 45303                           postdec2	equ	0xFDD
 45304                           plusw2	equ	0xFDB
 45305                           fsr2h	equ	0xFDA
 45306                           fsr2l	equ	0xFD9
 45307                           status	equ	0xFD8
 45308                           
 45309 ;; *************** function _frexp *****************
 45310 ;; Defined at:
 45311 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 45312 ;; Parameters:    Size  Location     Type
 45313 ;;  value           4    0[COMRAM] long 
 45314 ;;  eptr            2    4[COMRAM] PTR int 
 45315 ;;		 -> floor@expon(2), 
 45316 ;; Auto vars:     Size  Location     Type
 45317 ;;		None
 45318 ;; Return value:  Size  Location     Type
 45319 ;;                  4    0[COMRAM] PTR int 
 45320 ;; Registers used:
 45321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45322 ;; Tracked objects:
 45323 ;;		On entry : 0/0
 45324 ;;		On exit  : 0/0
 45325 ;;		Unchanged: 0/0
 45326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45330 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45331 ;;Total ram usage:        8 bytes
 45332 ;; Hardware stack levels used:    1
 45333 ;; This function calls:
 45334 ;;		Nothing
 45335 ;; This function is called by:
 45336 ;;		_floor
 45337 ;; This function uses a non-reentrant model
 45338 ;;
 45339                           
 45340                           	psect	text143
 45341  0188BC                     __ptext143:
 45342                           	opt stack 0
 45343  0188BC                     _frexp:
 45344                           	opt stack 13
 45345                           
 45346                           ;incstack = 0
 45347  0188BC  5001               	movf	frexp@value,w,c
 45348  0188BE  1002               	iorwf	frexp@value+1,w,c
 45349  0188C0  1003               	iorwf	frexp@value+2,w,c
 45350  0188C2  1004               	iorwf	frexp@value+3,w,c
 45351  0188C4  A4D8               	btfss	status,2,c
 45352  0188C6  D009               	goto	i2l2559
 45353  0188C8  C005  FFD9         	movff	frexp@eptr,fsr2l
 45354  0188CC  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 45355  0188D0  0E00               	movlw	0
 45356  0188D2  6EDE               	movwf	postinc2,c
 45357  0188D4  0E00               	movlw	0
 45358  0188D6  6EDD               	movwf	postdec2,c
 45359                           
 45360                           ;	Return value of _frexp is never used
 45361  0188D8  0012               	return	
 45362  0188DA                     i2l2559:
 45363  0188DA  5004               	movf	frexp@value+3,w,c
 45364  0188DC  0B7F               	andlw	127
 45365  0188DE  6E07               	movwf	??_frexp& (0+255),c
 45366  0188E0  6A08               	clrf	(??_frexp+1)& (0+255),c
 45367  0188E2  90D8               	bcf	status,0,c
 45368  0188E4  3607               	rlcf	??_frexp,f,c
 45369  0188E6  3608               	rlcf	??_frexp+1,f,c
 45370  0188E8  C005  FFD9         	movff	frexp@eptr,fsr2l
 45371  0188EC  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 45372  0188F0  C007  FFDE         	movff	??_frexp,postinc2
 45373  0188F4  C008  FFDD         	movff	??_frexp+1,postdec2
 45374  0188F8  AE03               	btfss	frexp@value+2,7,c
 45375  0188FA  D003               	goto	i2u1592_40
 45376  0188FC  6A07               	clrf	??_frexp& (0+255),c
 45377  0188FE  2A07               	incf	??_frexp& (0+255),f,c
 45378  018900  D001               	goto	i2u1592_48
 45379  018902                     i2u1592_40:
 45380  018902  6A07               	clrf	??_frexp& (0+255),c
 45381  018904                     i2u1592_48:
 45382  018904  5007               	movf	??_frexp,w,c
 45383  018906  C005  FFD9         	movff	frexp@eptr,fsr2l
 45384  01890A  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 45385  01890E  12DE               	iorwf	postinc2,f,c
 45386  018910  0E00               	movlw	0
 45387  018912  12DD               	iorwf	postdec2,f,c
 45388  018914  C005  FFD9         	movff	frexp@eptr,fsr2l
 45389  018918  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 45390  01891C  0E82               	movlw	130
 45391  01891E  26DE               	addwf	postinc2,f,c
 45392  018920  0EFF               	movlw	255
 45393  018922  22DD               	addwfc	postdec2,f,c
 45394  018924  8004               	bsf	frexp@value+3,0,c
 45395  018926  8204               	bsf	frexp@value+3,1,c
 45396  018928  8404               	bsf	frexp@value+3,2,c
 45397  01892A  8604               	bsf	frexp@value+3,3,c
 45398  01892C  8804               	bsf	frexp@value+3,4,c
 45399  01892E  8A04               	bsf	frexp@value+3,5,c
 45400  018930  9C04               	bcf	frexp@value+3,6,c
 45401  018932  9E03               	bcf	frexp@value+2,7,c
 45402  018934  0012               	return	
 45403  018936                     __end_of_frexp:
 45404                           	opt stack 0
 45405                           tosu	equ	0xFFF
 45406                           tosh	equ	0xFFE
 45407                           tosl	equ	0xFFD
 45408                           pclatu	equ	0xFFB
 45409                           pclath	equ	0xFFA
 45410                           tblptru	equ	0xFF8
 45411                           tblptrh	equ	0xFF7
 45412                           tblptrl	equ	0xFF6
 45413                           tablat	equ	0xFF5
 45414                           prodh	equ	0xFF4
 45415                           prodl	equ	0xFF3
 45416                           intcon	equ	0xFF2
 45417                           indf0	equ	0xFEF
 45418                           postinc0	equ	0xFEE
 45419                           fsr0h	equ	0xFEA
 45420                           fsr0l	equ	0xFE9
 45421                           wreg	equ	0xFE8
 45422                           indf1	equ	0xFE7
 45423                           postdec1	equ	0xFE5
 45424                           plusw1	equ	0xFE3
 45425                           fsr1h	equ	0xFE2
 45426                           fsr1l	equ	0xFE1
 45427                           bsr	equ	0xFE0
 45428                           indf2	equ	0xFDF
 45429                           postinc2	equ	0xFDE
 45430                           postdec2	equ	0xFDD
 45431                           plusw2	equ	0xFDB
 45432                           fsr2h	equ	0xFDA
 45433                           fsr2l	equ	0xFD9
 45434                           status	equ	0xFD8
 45435                           
 45436 ;; *************** function _eval_poly *****************
 45437 ;; Defined at:
 45438 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 45439 ;; Parameters:    Size  Location     Type
 45440 ;;  x               4   12[BANK0 ] PTR int 
 45441 ;;  d               2   16[BANK0 ] PTR const 
 45442 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 45443 ;;  n               2   18[BANK0 ] int 
 45444 ;; Auto vars:     Size  Location     Type
 45445 ;;  res             4   24[BANK0 ] int 
 45446 ;; Return value:  Size  Location     Type
 45447 ;;                  4   12[BANK0 ] int 
 45448 ;; Registers used:
 45449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45450 ;; Tracked objects:
 45451 ;;		On entry : 0/0
 45452 ;;		On exit  : 0/0
 45453 ;;		Unchanged: 0/0
 45454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45455 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45456 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45457 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45458 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45459 ;;Total ram usage:       16 bytes
 45460 ;; Hardware stack levels used:    1
 45461 ;; Hardware stack levels required when called:    1
 45462 ;; This function calls:
 45463 ;;		i2___fladd
 45464 ;;		i2___flmul
 45465 ;; This function is called by:
 45466 ;;		_atan
 45467 ;;		_sin
 45468 ;; This function uses a non-reentrant model
 45469 ;;
 45470                           
 45471                           	psect	text144
 45472  017D44                     __ptext144:
 45473                           	opt stack 0
 45474  017D44                     _eval_poly:
 45475                           	opt stack 13
 45476                           
 45477                           ;incstack = 0
 45478  017D44  C072  F074         	movff	eval_poly@n,??_eval_poly
 45479  017D48  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 45480  017D4C  0100               	movlb	0	; () banked
 45481  017D4E  90D8               	bcf	status,0,c
 45482  017D50  3774               	rlcf	??_eval_poly& (0+255),f,b
 45483  017D52  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 45484  017D54  90D8               	bcf	status,0,c
 45485  017D56  3774               	rlcf	??_eval_poly& (0+255),f,b
 45486  017D58  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 45487  017D5A  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 45488  017D5E  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 45489  017D62  5174               	movf	??_eval_poly& (0+255),w,b
 45490  017D64  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 45491  017D66  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 45492  017D68  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 45493  017D6A  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 45494  017D6E  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 45495  017D72                     	if	0	;tblptru may be non-zero
 45496  017D72                     	endif
 45497  017D72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45498  017D72  0E00               	movlw	low (__mediumconst shr (0+16))
 45499  017D74  6EF8               	movwf	tblptru,c
 45500  017D76                     	endif
 45501  017D76  0009               	tblrd		*+
 45502  017D78  CFF5 F078          	movff	tablat,eval_poly@res
 45503  017D7C  0009               	tblrd		*+
 45504  017D7E  CFF5 F079          	movff	tablat,eval_poly@res+1
 45505  017D82  0009               	tblrd		*+
 45506  017D84  CFF5 F07A          	movff	tablat,eval_poly@res+2
 45507  017D88  000A               	tblrd		*-
 45508  017D8A  CFF5 F07B          	movff	tablat,eval_poly@res+3
 45509  017D8E  D04C               	goto	i2l2039
 45510  017D90                     
 45511                           ; BSR set to: 0
 45512                           
 45513                           ; BSR set to: 0
 45514  017D90  C078  F034         	movff	eval_poly@res,i2___flmul@a
 45515  017D94  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 45516  017D98  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 45517  017D9C  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 45518  017DA0  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 45519  017DA4  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 45520  017DA8  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 45521  017DAC  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 45522  017DB0  ECF2  F0A5         	call	i2___flmul	;wreg free
 45523  017DB4  C030  F056         	movff	?i2___flmul,i2___fladd@b
 45524  017DB8  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 45525  017DBC  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 45526  017DC0  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 45527  017DC4  0100               	movlb	0	; () banked
 45528  017DC6  0772               	decf	eval_poly@n& (0+255),f,b
 45529  017DC8  A0D8               	btfss	status,0,c
 45530  017DCA  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 45531  017DCC  C072  F074         	movff	eval_poly@n,??_eval_poly
 45532  017DD0  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 45533  017DD4  90D8               	bcf	status,0,c
 45534  017DD6  3774               	rlcf	??_eval_poly& (0+255),f,b
 45535  017DD8  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 45536  017DDA  90D8               	bcf	status,0,c
 45537  017DDC  3774               	rlcf	??_eval_poly& (0+255),f,b
 45538  017DDE  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 45539  017DE0  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 45540  017DE4  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 45541  017DE8  5174               	movf	??_eval_poly& (0+255),w,b
 45542  017DEA  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 45543  017DEC  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 45544  017DEE  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 45545  017DF0  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 45546  017DF4  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 45547  017DF8                     	if	0	;tblptru may be non-zero
 45548  017DF8                     	endif
 45549  017DF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45550  017DF8  0E00               	movlw	low (__mediumconst shr (0+16))
 45551  017DFA  6EF8               	movwf	tblptru,c
 45552  017DFC                     	endif
 45553  017DFC  0009               	tblrd		*+
 45554  017DFE  CFF5 F05A          	movff	tablat,i2___fladd@a
 45555  017E02  0009               	tblrd		*+
 45556  017E04  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 45557  017E08  0009               	tblrd		*+
 45558  017E0A  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 45559  017E0E  000A               	tblrd		*-
 45560  017E10  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 45561  017E14  EC39  F0A9         	call	i2___fladd	;wreg free
 45562  017E18  C056  F078         	movff	?i2___fladd,eval_poly@res
 45563  017E1C  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 45564  017E20  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 45565  017E24  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 45566  017E28                     i2l2039:
 45567  017E28  0100               	movlb	0	; () banked
 45568  017E2A  5172               	movf	eval_poly@n& (0+255),w,b
 45569  017E2C  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 45570  017E2E  A4D8               	btfss	status,2,c
 45571  017E30  D7AF               	goto	i2l2040
 45572                           
 45573                           ; BSR set to: 0
 45574  017E32  C078  F06C         	movff	eval_poly@res,?_eval_poly
 45575  017E36  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 45576  017E3A  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 45577  017E3E  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 45578                           
 45579                           ; BSR set to: 0
 45580  017E42  0012               	return		;funcret
 45581  017E44                     __end_of_eval_poly:
 45582                           	opt stack 0
 45583                           tosu	equ	0xFFF
 45584                           tosh	equ	0xFFE
 45585                           tosl	equ	0xFFD
 45586                           pclatu	equ	0xFFB
 45587                           pclath	equ	0xFFA
 45588                           tblptru	equ	0xFF8
 45589                           tblptrh	equ	0xFF7
 45590                           tblptrl	equ	0xFF6
 45591                           tablat	equ	0xFF5
 45592                           prodh	equ	0xFF4
 45593                           prodl	equ	0xFF3
 45594                           intcon	equ	0xFF2
 45595                           indf0	equ	0xFEF
 45596                           postinc0	equ	0xFEE
 45597                           fsr0h	equ	0xFEA
 45598                           fsr0l	equ	0xFE9
 45599                           wreg	equ	0xFE8
 45600                           indf1	equ	0xFE7
 45601                           postdec1	equ	0xFE5
 45602                           plusw1	equ	0xFE3
 45603                           fsr1h	equ	0xFE2
 45604                           fsr1l	equ	0xFE1
 45605                           bsr	equ	0xFE0
 45606                           indf2	equ	0xFDF
 45607                           postinc2	equ	0xFDE
 45608                           postdec2	equ	0xFDD
 45609                           plusw2	equ	0xFDB
 45610                           fsr2h	equ	0xFDA
 45611                           fsr2l	equ	0xFD9
 45612                           status	equ	0xFD8
 45613                           
 45614 ;; *************** function i2___flmul *****************
 45615 ;; Defined at:
 45616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 45617 ;; Parameters:    Size  Location     Type
 45618 ;;  b               4   47[COMRAM] int 
 45619 ;;  a               4   51[COMRAM] int 
 45620 ;; Auto vars:     Size  Location     Type
 45621 ;;  __flmul         4   66[COMRAM] struct .
 45622 ;;  __flmul         4   61[COMRAM] unsigned long 
 45623 ;;  __flmul         2   70[COMRAM] struct .
 45624 ;;  __flmul         1   65[COMRAM] unsigned char 
 45625 ;;  __flmul         1   60[COMRAM] unsigned char 
 45626 ;;  __flmul         1   59[COMRAM] unsigned char 
 45627 ;; Return value:  Size  Location     Type
 45628 ;;                  4   47[COMRAM] unsigned char 
 45629 ;; Registers used:
 45630 ;;		wreg, status,2, status,0, prodl, prodh
 45631 ;; Tracked objects:
 45632 ;;		On entry : 0/0
 45633 ;;		On exit  : 0/0
 45634 ;;		Unchanged: 0/0
 45635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45637 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45639 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45640 ;;Total ram usage:       25 bytes
 45641 ;; Hardware stack levels used:    1
 45642 ;; This function calls:
 45643 ;;		Nothing
 45644 ;; This function is called by:
 45645 ;;		_peakToRMS
 45646 ;;		_ADCPostProcessingCallback
 45647 ;;		_asin
 45648 ;;		_atan
 45649 ;;		_eval_poly
 45650 ;;		_sin
 45651 ;;		i2_fround
 45652 ;;		i2_scale
 45653 ;;		i2_printf
 45654 ;; This function uses a non-reentrant model
 45655 ;;
 45656                           
 45657                           	psect	text145
 45658  014BE4                     __ptext145:
 45659                           	opt stack 0
 45660  014BE4                     i2___flmul:
 45661                           	opt stack 15
 45662                           
 45663                           ; BSR set to: 0
 45664                           ;incstack = 0
 45665  014BE4  5033               	movf	i2___flmul@b+3,w,c
 45666  014BE6  0B80               	andlw	128
 45667  014BE8  6E3C               	movwf	i2___flmul@sign,c
 45668  014BEA  5033               	movf	i2___flmul@b+3,w,c
 45669  014BEC  2433               	addwf	i2___flmul@b+3,w,c
 45670  014BEE  6E42               	movwf	i2___flmul@bexp,c
 45671  014BF0  BE32               	btfsc	i2___flmul@b+2,7,c
 45672  014BF2  8042               	bsf	i2___flmul@bexp,0,c
 45673  014BF4  5042               	movf	i2___flmul@bexp,w,c
 45674  014BF6  B4D8               	btfsc	status,2,c
 45675  014BF8  D00D               	goto	i2l2427
 45676  014BFA  2842               	incf	i2___flmul@bexp,w,c
 45677  014BFC  A4D8               	btfss	status,2,c
 45678  014BFE  D008               	goto	i2l2428
 45679  014C00  0E00               	movlw	0
 45680  014C02  6E30               	movwf	i2___flmul@b,c
 45681  014C04  0E00               	movlw	0
 45682  014C06  6E31               	movwf	i2___flmul@b+1,c
 45683  014C08  0E00               	movlw	0
 45684  014C0A  6E32               	movwf	i2___flmul@b+2,c
 45685  014C0C  0E00               	movlw	0
 45686  014C0E  6E33               	movwf	i2___flmul@b+3,c
 45687  014C10                     i2l2428:
 45688  014C10  8E32               	bsf	i2___flmul@b+2,7,c
 45689  014C12  D008               	goto	i2l2429
 45690  014C14                     i2l2427:
 45691  014C14  0E00               	movlw	0
 45692  014C16  6E30               	movwf	i2___flmul@b,c
 45693  014C18  0E00               	movlw	0
 45694  014C1A  6E31               	movwf	i2___flmul@b+1,c
 45695  014C1C  0E00               	movlw	0
 45696  014C1E  6E32               	movwf	i2___flmul@b+2,c
 45697  014C20  0E00               	movlw	0
 45698  014C22  6E33               	movwf	i2___flmul@b+3,c
 45699  014C24                     i2l2429:
 45700  014C24  5037               	movf	i2___flmul@a+3,w,c
 45701  014C26  0B80               	andlw	128
 45702  014C28  1A3C               	xorwf	i2___flmul@sign,f,c
 45703  014C2A  5037               	movf	i2___flmul@a+3,w,c
 45704  014C2C  2437               	addwf	i2___flmul@a+3,w,c
 45705  014C2E  6E3D               	movwf	i2___flmul@aexp,c
 45706  014C30  BE36               	btfsc	i2___flmul@a+2,7,c
 45707  014C32  803D               	bsf	i2___flmul@aexp,0,c
 45708  014C34  503D               	movf	i2___flmul@aexp,w,c
 45709  014C36  B4D8               	btfsc	status,2,c
 45710  014C38  D00D               	goto	i2l2431
 45711  014C3A  283D               	incf	i2___flmul@aexp,w,c
 45712  014C3C  A4D8               	btfss	status,2,c
 45713  014C3E  D008               	goto	i2l2432
 45714  014C40  0E00               	movlw	0
 45715  014C42  6E34               	movwf	i2___flmul@a,c
 45716  014C44  0E00               	movlw	0
 45717  014C46  6E35               	movwf	i2___flmul@a+1,c
 45718  014C48  0E00               	movlw	0
 45719  014C4A  6E36               	movwf	i2___flmul@a+2,c
 45720  014C4C  0E00               	movlw	0
 45721  014C4E  6E37               	movwf	i2___flmul@a+3,c
 45722  014C50                     i2l2432:
 45723  014C50  8E36               	bsf	i2___flmul@a+2,7,c
 45724  014C52  D008               	goto	i2l2433
 45725  014C54                     i2l2431:
 45726  014C54  0E00               	movlw	0
 45727  014C56  6E34               	movwf	i2___flmul@a,c
 45728  014C58  0E00               	movlw	0
 45729  014C5A  6E35               	movwf	i2___flmul@a+1,c
 45730  014C5C  0E00               	movlw	0
 45731  014C5E  6E36               	movwf	i2___flmul@a+2,c
 45732  014C60  0E00               	movlw	0
 45733  014C62  6E37               	movwf	i2___flmul@a+3,c
 45734  014C64                     i2l2433:
 45735  014C64  503D               	movf	i2___flmul@aexp,w,c
 45736  014C66  B4D8               	btfsc	status,2,c
 45737  014C68  D003               	goto	i2u1405_40
 45738  014C6A  5042               	movf	i2___flmul@bexp,w,c
 45739  014C6C  A4D8               	btfss	status,2,c
 45740  014C6E  D009               	goto	i2l2434
 45741  014C70                     i2u1405_40:
 45742  014C70  0E00               	movlw	0
 45743  014C72  6E30               	movwf	?i2___flmul,c
 45744  014C74  0E00               	movlw	0
 45745  014C76  6E31               	movwf	?i2___flmul+1,c
 45746  014C78  0E00               	movlw	0
 45747  014C7A  6E32               	movwf	?i2___flmul+2,c
 45748  014C7C  0E00               	movlw	0
 45749  014C7E  6E33               	movwf	?i2___flmul+3,c
 45750  014C80  0012               	return	
 45751  014C82                     i2l2434:
 45752  014C82  5036               	movf	i2___flmul@a+2,w,c
 45753  014C84  0230               	mulwf	i2___flmul@b,c
 45754  014C86  CFF3 F047          	movff	prodl,i2___flmul@temp
 45755  014C8A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45756  014C8E  5047               	movf	i2___flmul@temp,w,c
 45757  014C90  6E3E               	movwf	i2___flmul@grs,c
 45758  014C92  6A3F               	clrf	i2___flmul@grs+1,c
 45759  014C94  6A40               	clrf	i2___flmul@grs+2,c
 45760  014C96  6A41               	clrf	i2___flmul@grs+3,c
 45761  014C98  5048               	movf	i2___flmul@temp+1,w,c
 45762  014C9A  6E43               	movwf	i2___flmul@prod,c
 45763  014C9C  6A44               	clrf	i2___flmul@prod+1,c
 45764  014C9E  6A45               	clrf	i2___flmul@prod+2,c
 45765  014CA0  6A46               	clrf	i2___flmul@prod+3,c
 45766  014CA2  5035               	movf	i2___flmul@a+1,w,c
 45767  014CA4  0231               	mulwf	i2___flmul@b+1,c
 45768  014CA6  CFF3 F047          	movff	prodl,i2___flmul@temp
 45769  014CAA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45770  014CAE  5047               	movf	i2___flmul@temp,w,c
 45771  014CB0  263E               	addwf	i2___flmul@grs,f,c
 45772  014CB2  0E00               	movlw	0
 45773  014CB4  223F               	addwfc	i2___flmul@grs+1,f,c
 45774  014CB6  2240               	addwfc	i2___flmul@grs+2,f,c
 45775  014CB8  2241               	addwfc	i2___flmul@grs+3,f,c
 45776  014CBA  5048               	movf	i2___flmul@temp+1,w,c
 45777  014CBC  2643               	addwf	i2___flmul@prod,f,c
 45778  014CBE  0E00               	movlw	0
 45779  014CC0  2244               	addwfc	i2___flmul@prod+1,f,c
 45780  014CC2  2245               	addwfc	i2___flmul@prod+2,f,c
 45781  014CC4  2246               	addwfc	i2___flmul@prod+3,f,c
 45782  014CC6  5034               	movf	i2___flmul@a,w,c
 45783  014CC8  0232               	mulwf	i2___flmul@b+2,c
 45784  014CCA  CFF3 F047          	movff	prodl,i2___flmul@temp
 45785  014CCE  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45786  014CD2  5047               	movf	i2___flmul@temp,w,c
 45787  014CD4  263E               	addwf	i2___flmul@grs,f,c
 45788  014CD6  0E00               	movlw	0
 45789  014CD8  223F               	addwfc	i2___flmul@grs+1,f,c
 45790  014CDA  2240               	addwfc	i2___flmul@grs+2,f,c
 45791  014CDC  2241               	addwfc	i2___flmul@grs+3,f,c
 45792  014CDE  5048               	movf	i2___flmul@temp+1,w,c
 45793  014CE0  2643               	addwf	i2___flmul@prod,f,c
 45794  014CE2  0E00               	movlw	0
 45795  014CE4  2244               	addwfc	i2___flmul@prod+1,f,c
 45796  014CE6  2245               	addwfc	i2___flmul@prod+2,f,c
 45797  014CE8  2246               	addwfc	i2___flmul@prod+3,f,c
 45798  014CEA  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 45799  014CEE  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 45800  014CF2  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 45801  014CF6  6A3E               	clrf	i2___flmul@grs,c
 45802  014CF8  5034               	movf	i2___flmul@a,w,c
 45803  014CFA  0231               	mulwf	i2___flmul@b+1,c
 45804  014CFC  CFF3 F047          	movff	prodl,i2___flmul@temp
 45805  014D00  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45806  014D04  5047               	movf	i2___flmul@temp,w,c
 45807  014D06  263E               	addwf	i2___flmul@grs,f,c
 45808  014D08  5048               	movf	i2___flmul@temp+1,w,c
 45809  014D0A  223F               	addwfc	i2___flmul@grs+1,f,c
 45810  014D0C  0E00               	movlw	0
 45811  014D0E  2240               	addwfc	i2___flmul@grs+2,f,c
 45812  014D10  0E00               	movlw	0
 45813  014D12  2241               	addwfc	i2___flmul@grs+3,f,c
 45814  014D14  5035               	movf	i2___flmul@a+1,w,c
 45815  014D16  0230               	mulwf	i2___flmul@b,c
 45816  014D18  CFF3 F047          	movff	prodl,i2___flmul@temp
 45817  014D1C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45818  014D20  5047               	movf	i2___flmul@temp,w,c
 45819  014D22  263E               	addwf	i2___flmul@grs,f,c
 45820  014D24  5048               	movf	i2___flmul@temp+1,w,c
 45821  014D26  223F               	addwfc	i2___flmul@grs+1,f,c
 45822  014D28  0E00               	movlw	0
 45823  014D2A  2240               	addwfc	i2___flmul@grs+2,f,c
 45824  014D2C  0E00               	movlw	0
 45825  014D2E  2241               	addwfc	i2___flmul@grs+3,f,c
 45826  014D30  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 45827  014D34  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 45828  014D38  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 45829  014D3C  6A3E               	clrf	i2___flmul@grs,c
 45830  014D3E  5034               	movf	i2___flmul@a,w,c
 45831  014D40  0230               	mulwf	i2___flmul@b,c
 45832  014D42  CFF3 F047          	movff	prodl,i2___flmul@temp
 45833  014D46  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45834  014D4A  5047               	movf	i2___flmul@temp,w,c
 45835  014D4C  263E               	addwf	i2___flmul@grs,f,c
 45836  014D4E  5048               	movf	i2___flmul@temp+1,w,c
 45837  014D50  223F               	addwfc	i2___flmul@grs+1,f,c
 45838  014D52  0E00               	movlw	0
 45839  014D54  2240               	addwfc	i2___flmul@grs+2,f,c
 45840  014D56  0E00               	movlw	0
 45841  014D58  2241               	addwfc	i2___flmul@grs+3,f,c
 45842  014D5A  5036               	movf	i2___flmul@a+2,w,c
 45843  014D5C  0231               	mulwf	i2___flmul@b+1,c
 45844  014D5E  CFF3 F047          	movff	prodl,i2___flmul@temp
 45845  014D62  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45846  014D66  5047               	movf	i2___flmul@temp,w,c
 45847  014D68  2643               	addwf	i2___flmul@prod,f,c
 45848  014D6A  5048               	movf	i2___flmul@temp+1,w,c
 45849  014D6C  2244               	addwfc	i2___flmul@prod+1,f,c
 45850  014D6E  0E00               	movlw	0
 45851  014D70  2245               	addwfc	i2___flmul@prod+2,f,c
 45852  014D72  0E00               	movlw	0
 45853  014D74  2246               	addwfc	i2___flmul@prod+3,f,c
 45854  014D76  5035               	movf	i2___flmul@a+1,w,c
 45855  014D78  0232               	mulwf	i2___flmul@b+2,c
 45856  014D7A  CFF3 F047          	movff	prodl,i2___flmul@temp
 45857  014D7E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45858  014D82  5047               	movf	i2___flmul@temp,w,c
 45859  014D84  2643               	addwf	i2___flmul@prod,f,c
 45860  014D86  5048               	movf	i2___flmul@temp+1,w,c
 45861  014D88  2244               	addwfc	i2___flmul@prod+1,f,c
 45862  014D8A  0E00               	movlw	0
 45863  014D8C  2245               	addwfc	i2___flmul@prod+2,f,c
 45864  014D8E  0E00               	movlw	0
 45865  014D90  2246               	addwfc	i2___flmul@prod+3,f,c
 45866  014D92  5036               	movf	i2___flmul@a+2,w,c
 45867  014D94  0232               	mulwf	i2___flmul@b+2,c
 45868  014D96  CFF3 F047          	movff	prodl,i2___flmul@temp
 45869  014D9A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 45870  014D9E  5047               	movf	i2___flmul@temp,w,c
 45871  014DA0  6E38               	movwf	??i2___flmul& (0+255),c
 45872  014DA2  5048               	movf	i2___flmul@temp+1,w,c
 45873  014DA4  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 45874  014DA6  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 45875  014DA8  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 45876  014DAA  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 45877  014DAE  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 45878  014DB2  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 45879  014DB6  6A38               	clrf	??i2___flmul,c
 45880  014DB8  5038               	movf	??i2___flmul,w,c
 45881  014DBA  2643               	addwf	i2___flmul@prod,f,c
 45882  014DBC  5039               	movf	??i2___flmul+1,w,c
 45883  014DBE  2244               	addwfc	i2___flmul@prod+1,f,c
 45884  014DC0  503A               	movf	??i2___flmul+2,w,c
 45885  014DC2  2245               	addwfc	i2___flmul@prod+2,f,c
 45886  014DC4  503B               	movf	??i2___flmul+3,w,c
 45887  014DC6  2246               	addwfc	i2___flmul@prod+3,f,c
 45888  014DC8  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 45889  014DCC  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 45890  014DD0  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 45891  014DD4  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 45892  014DD8  0E19               	movlw	25
 45893  014DDA  D005               	goto	i2u1406_40
 45894  014DDC                     i2u1406_45:
 45895  014DDC  90D8               	bcf	status,0,c
 45896  014DDE  323B               	rrcf	??i2___flmul+3,f,c
 45897  014DE0  323A               	rrcf	??i2___flmul+2,f,c
 45898  014DE2  3239               	rrcf	??i2___flmul+1,f,c
 45899  014DE4  3238               	rrcf	??i2___flmul,f,c
 45900  014DE6                     i2u1406_40:
 45901  014DE6  2EE8               	decfsz	wreg,f,c
 45902  014DE8  D7F9               	goto	i2u1406_45
 45903  014DEA  5038               	movf	??i2___flmul,w,c
 45904  014DEC  2643               	addwf	i2___flmul@prod,f,c
 45905  014DEE  5039               	movf	??i2___flmul+1,w,c
 45906  014DF0  2244               	addwfc	i2___flmul@prod+1,f,c
 45907  014DF2  503A               	movf	??i2___flmul+2,w,c
 45908  014DF4  2245               	addwfc	i2___flmul@prod+2,f,c
 45909  014DF6  503B               	movf	??i2___flmul+3,w,c
 45910  014DF8  2246               	addwfc	i2___flmul@prod+3,f,c
 45911  014DFA  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 45912  014DFE  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 45913  014E02  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 45914  014E06  6A3E               	clrf	i2___flmul@grs,c
 45915  014E08  503D               	movf	i2___flmul@aexp,w,c
 45916  014E0A  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 45917  014E0E  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 45918  014E10  2638               	addwf	??i2___flmul,f,c
 45919  014E12  0E00               	movlw	0
 45920  014E14  2239               	addwfc	??i2___flmul+1,f,c
 45921  014E16  0E82               	movlw	130
 45922  014E18  2438               	addwf	??i2___flmul,w,c
 45923  014E1A  6E47               	movwf	i2___flmul@temp,c
 45924  014E1C  0EFF               	movlw	255
 45925  014E1E  2039               	addwfc	??i2___flmul+1,w,c
 45926  014E20  6E48               	movwf	i2___flmul@temp+1,c
 45927  014E22  D00F               	goto	i2l2438
 45928  014E24  90D8               	bcf	status,0,c
 45929  014E26  3643               	rlcf	i2___flmul@prod,f,c
 45930  014E28  3644               	rlcf	i2___flmul@prod+1,f,c
 45931  014E2A  3645               	rlcf	i2___flmul@prod+2,f,c
 45932  014E2C  3646               	rlcf	i2___flmul@prod+3,f,c
 45933  014E2E  BE41               	btfsc	i2___flmul@grs+3,7,c
 45934  014E30  8043               	bsf	i2___flmul@prod,0,c
 45935  014E32  90D8               	bcf	status,0,c
 45936  014E34  363E               	rlcf	i2___flmul@grs,f,c
 45937  014E36  363F               	rlcf	i2___flmul@grs+1,f,c
 45938  014E38  3640               	rlcf	i2___flmul@grs+2,f,c
 45939  014E3A  3641               	rlcf	i2___flmul@grs+3,f,c
 45940  014E3C  0647               	decf	i2___flmul@temp,f,c
 45941  014E3E  A0D8               	btfss	status,0,c
 45942  014E40  0648               	decf	i2___flmul@temp+1,f,c
 45943  014E42                     i2l2438:
 45944  014E42  AE45               	btfss	i2___flmul@prod+2,7,c
 45945  014E44  D7EF               	goto	i2l2439
 45946  014E46  0E00               	movlw	0
 45947  014E48  6E3D               	movwf	i2___flmul@aexp,c
 45948  014E4A  AE41               	btfss	i2___flmul@grs+3,7,c
 45949  014E4C  D016               	goto	i2l2445
 45950  014E4E  0EFF               	movlw	255
 45951  014E50  143E               	andwf	i2___flmul@grs,w,c
 45952  014E52  6E38               	movwf	??i2___flmul& (0+255),c
 45953  014E54  0EFF               	movlw	255
 45954  014E56  143F               	andwf	i2___flmul@grs+1,w,c
 45955  014E58  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 45956  014E5A  0EFF               	movlw	255
 45957  014E5C  1440               	andwf	i2___flmul@grs+2,w,c
 45958  014E5E  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 45959  014E60  0E7F               	movlw	127
 45960  014E62  1441               	andwf	i2___flmul@grs+3,w,c
 45961  014E64  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 45962  014E66  5038               	movf	??i2___flmul,w,c
 45963  014E68  1039               	iorwf	??i2___flmul+1,w,c
 45964  014E6A  103A               	iorwf	??i2___flmul+2,w,c
 45965  014E6C  103B               	iorwf	??i2___flmul+3,w,c
 45966  014E6E  A4D8               	btfss	status,2,c
 45967  014E70  D002               	goto	i2u1411_40
 45968  014E72  A043               	btfss	i2___flmul@prod,0,c
 45969  014E74  D002               	goto	i2l2445
 45970  014E76                     i2u1411_40:
 45971  014E76  0E01               	movlw	1
 45972  014E78  6E3D               	movwf	i2___flmul@aexp,c
 45973  014E7A                     i2l2445:
 45974  014E7A  503D               	movf	i2___flmul@aexp,w,c
 45975  014E7C  B4D8               	btfsc	status,2,c
 45976  014E7E  D01F               	goto	i2l2447
 45977  014E80  0E01               	movlw	1
 45978  014E82  2643               	addwf	i2___flmul@prod,f,c
 45979  014E84  0E00               	movlw	0
 45980  014E86  2244               	addwfc	i2___flmul@prod+1,f,c
 45981  014E88  2245               	addwfc	i2___flmul@prod+2,f,c
 45982  014E8A  2246               	addwfc	i2___flmul@prod+3,f,c
 45983  014E8C  A046               	btfss	i2___flmul@prod+3,0,c
 45984  014E8E  D017               	goto	i2l2447
 45985  014E90  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 45986  014E94  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 45987  014E98  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 45988  014E9C  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 45989  014EA0  343B               	rlcf	??i2___flmul+3,w,c
 45990  014EA2  323B               	rrcf	??i2___flmul+3,f,c
 45991  014EA4  323A               	rrcf	??i2___flmul+2,f,c
 45992  014EA6  3239               	rrcf	??i2___flmul+1,f,c
 45993  014EA8  3238               	rrcf	??i2___flmul,f,c
 45994  014EAA  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 45995  014EAE  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 45996  014EB2  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 45997  014EB6  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 45998  014EBA  4A47               	infsnz	i2___flmul@temp,f,c
 45999  014EBC  2A48               	incf	i2___flmul@temp+1,f,c
 46000  014EBE                     i2l2447:
 46001  014EBE  BE48               	btfsc	i2___flmul@temp+1,7,c
 46002  014EC0  D00D               	goto	i2l2448
 46003  014EC2  5048               	movf	i2___flmul@temp+1,w,c
 46004  014EC4  E103               	bnz	i2u1414_40
 46005  014EC6  2847               	incf	i2___flmul@temp,w,c
 46006  014EC8  A0D8               	btfss	status,0,c
 46007  014ECA  D008               	goto	i2l2448
 46008  014ECC                     i2u1414_40:
 46009  014ECC  0E00               	movlw	0
 46010  014ECE  6E43               	movwf	i2___flmul@prod,c
 46011  014ED0  0E00               	movlw	0
 46012  014ED2  6E44               	movwf	i2___flmul@prod+1,c
 46013  014ED4  0E80               	movlw	128
 46014  014ED6  6E45               	movwf	i2___flmul@prod+2,c
 46015  014ED8  0E7F               	movlw	127
 46016  014EDA  D020               	goto	L22
 46017  014EDC                     i2l2448:
 46018  014EDC  BE48               	btfsc	i2___flmul@temp+1,7,c
 46019  014EDE  D005               	goto	i2u1415_40
 46020  014EE0  5048               	movf	i2___flmul@temp+1,w,c
 46021  014EE2  E10E               	bnz	i2l2450
 46022  014EE4  0447               	decf	i2___flmul@temp,w,c
 46023  014EE6  B0D8               	btfsc	status,0,c
 46024  014EE8  D00B               	goto	i2l2450
 46025  014EEA                     i2u1415_40:
 46026  014EEA  0E00               	movlw	0
 46027  014EEC  6E43               	movwf	i2___flmul@prod,c
 46028  014EEE  0E00               	movlw	0
 46029  014EF0  6E44               	movwf	i2___flmul@prod+1,c
 46030  014EF2  0E00               	movlw	0
 46031  014EF4  6E45               	movwf	i2___flmul@prod+2,c
 46032  014EF6  0E00               	movlw	0
 46033  014EF8  6E46               	movwf	i2___flmul@prod+3,c
 46034  014EFA  0E00               	movlw	0
 46035  014EFC  6E3C               	movwf	i2___flmul@sign,c
 46036  014EFE  D00F               	goto	i2l2451
 46037  014F00                     i2l2450:
 46038  014F00  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 46039  014F04  0EFF               	movlw	255
 46040  014F06  1643               	andwf	i2___flmul@prod,f,c
 46041  014F08  0EFF               	movlw	255
 46042  014F0A  1644               	andwf	i2___flmul@prod+1,f,c
 46043  014F0C  0E7F               	movlw	127
 46044  014F0E  1645               	andwf	i2___flmul@prod+2,f,c
 46045  014F10  0E00               	movlw	0
 46046  014F12  1646               	andwf	i2___flmul@prod+3,f,c
 46047  014F14  B042               	btfsc	i2___flmul@bexp,0,c
 46048  014F16  8E45               	bsf	i2___flmul@prod+2,7,c
 46049  014F18  90D8               	bcf	status,0,c
 46050  014F1A  3042               	rrcf	i2___flmul@bexp,w,c
 46051  014F1C                     L22:
 46052  014F1C  6E46               	movwf	i2___flmul@prod+3,c
 46053  014F1E                     i2l2451:
 46054  014F1E  503C               	movf	i2___flmul@sign,w,c
 46055  014F20  1246               	iorwf	i2___flmul@prod+3,f,c
 46056  014F22  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 46057  014F26  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 46058  014F2A  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 46059  014F2E  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 46060  014F32  0012               	return	
 46061  014F34                     __end_ofi2___flmul:
 46062                           	opt stack 0
 46063                           tosu	equ	0xFFF
 46064                           tosh	equ	0xFFE
 46065                           tosl	equ	0xFFD
 46066                           pclatu	equ	0xFFB
 46067                           pclath	equ	0xFFA
 46068                           tblptru	equ	0xFF8
 46069                           tblptrh	equ	0xFF7
 46070                           tblptrl	equ	0xFF6
 46071                           tablat	equ	0xFF5
 46072                           prodh	equ	0xFF4
 46073                           prodl	equ	0xFF3
 46074                           intcon	equ	0xFF2
 46075                           indf0	equ	0xFEF
 46076                           postinc0	equ	0xFEE
 46077                           fsr0h	equ	0xFEA
 46078                           fsr0l	equ	0xFE9
 46079                           wreg	equ	0xFE8
 46080                           indf1	equ	0xFE7
 46081                           postdec1	equ	0xFE5
 46082                           plusw1	equ	0xFE3
 46083                           fsr1h	equ	0xFE2
 46084                           fsr1l	equ	0xFE1
 46085                           bsr	equ	0xFE0
 46086                           indf2	equ	0xFDF
 46087                           postinc2	equ	0xFDE
 46088                           postdec2	equ	0xFDD
 46089                           plusw2	equ	0xFDB
 46090                           fsr2h	equ	0xFDA
 46091                           fsr2l	equ	0xFD9
 46092                           status	equ	0xFD8
 46093                           
 46094 ;; *************** function i2___fladd *****************
 46095 ;; Defined at:
 46096 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 46097 ;; Parameters:    Size  Location     Type
 46098 ;;  b               4   85[COMRAM] unsigned char 
 46099 ;;  a               4   89[COMRAM] unsigned char 
 46100 ;; Auto vars:     Size  Location     Type
 46101 ;;  __fladd         1   11[BANK0 ] unsigned char 
 46102 ;;  __fladd         1   10[BANK0 ] unsigned char 
 46103 ;;  __fladd         1    9[BANK0 ] unsigned char 
 46104 ;;  __fladd         1    8[BANK0 ] unsigned char 
 46105 ;; Return value:  Size  Location     Type
 46106 ;;                  4   85[COMRAM] unsigned char 
 46107 ;; Registers used:
 46108 ;;		wreg, status,2, status,0
 46109 ;; Tracked objects:
 46110 ;;		On entry : 0/0
 46111 ;;		On exit  : 0/0
 46112 ;;		Unchanged: 0/0
 46113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46114 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46115 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46116 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46117 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46118 ;;Total ram usage:       20 bytes
 46119 ;; Hardware stack levels used:    1
 46120 ;; This function calls:
 46121 ;;		Nothing
 46122 ;; This function is called by:
 46123 ;;		_peakToRMS
 46124 ;;		_ADCPostProcessingCallback
 46125 ;;		_acos
 46126 ;;		_asin
 46127 ;;		_atan
 46128 ;;		_eval_poly
 46129 ;;		_sin
 46130 ;;		_floor
 46131 ;;		i2_printf
 46132 ;;		i2___flsub
 46133 ;; This function uses a non-reentrant model
 46134 ;;
 46135                           
 46136                           	psect	text146
 46137  015272                     __ptext146:
 46138                           	opt stack 0
 46139  015272                     i2___fladd:
 46140                           	opt stack 15
 46141                           
 46142                           ;incstack = 0
 46143  015272  5059               	movf	i2___fladd@b+3,w,c
 46144  015274  0B80               	andlw	128
 46145  015276  0100               	movlb	0	; () banked
 46146  015278  6F68               	movwf	i2___fladd@signs& (0+255),b
 46147  01527A  5059               	movf	i2___fladd@b+3,w,c
 46148  01527C  2459               	addwf	i2___fladd@b+3,w,c
 46149  01527E  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 46150                           
 46151                           ; BSR set to: 0
 46152  015280  BE58               	btfsc	i2___fladd@b+2,7,c
 46153                           
 46154                           ; BSR set to: 0
 46155  015282  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 46156                           
 46157                           ; BSR set to: 0
 46158                           
 46159                           ; BSR set to: 0
 46160  015284  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46161  015286  B4D8               	btfsc	status,2,c
 46162  015288  D00D               	goto	i2l2336
 46163                           
 46164                           ; BSR set to: 0
 46165  01528A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 46166  01528C  A4D8               	btfss	status,2,c
 46167  01528E  D008               	goto	i2l2337
 46168                           
 46169                           ; BSR set to: 0
 46170  015290  0E00               	movlw	0
 46171  015292  6E56               	movwf	i2___fladd@b,c
 46172  015294  0E00               	movlw	0
 46173  015296  6E57               	movwf	i2___fladd@b+1,c
 46174  015298  0E00               	movlw	0
 46175  01529A  6E58               	movwf	i2___fladd@b+2,c
 46176  01529C  0E00               	movlw	0
 46177  01529E  6E59               	movwf	i2___fladd@b+3,c
 46178  0152A0                     i2l2337:
 46179                           
 46180                           ; BSR set to: 0
 46181                           
 46182                           ; BSR set to: 0
 46183  0152A0  8E58               	bsf	i2___fladd@b+2,7,c
 46184  0152A2  D006               	goto	L23
 46185  0152A4                     i2l2336:
 46186                           
 46187                           ; BSR set to: 0
 46188                           
 46189                           ; BSR set to: 0
 46190  0152A4  0E00               	movlw	0
 46191  0152A6  6E56               	movwf	i2___fladd@b,c
 46192  0152A8  0E00               	movlw	0
 46193  0152AA  6E57               	movwf	i2___fladd@b+1,c
 46194  0152AC  0E00               	movlw	0
 46195  0152AE  6E58               	movwf	i2___fladd@b+2,c
 46196  0152B0                     L23:
 46197  0152B0  0E00               	movlw	0
 46198  0152B2  6E59               	movwf	i2___fladd@b+3,c
 46199                           
 46200                           ; BSR set to: 0
 46201                           
 46202                           ; BSR set to: 0
 46203  0152B4  505D               	movf	i2___fladd@a+3,w,c
 46204  0152B6  0B80               	andlw	128
 46205  0152B8  6F69               	movwf	i2___fladd@aexp& (0+255),b
 46206                           
 46207                           ; BSR set to: 0
 46208  0152BA  5168               	movf	i2___fladd@signs& (0+255),w,b
 46209  0152BC  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 46210  0152BE  A4D8               	btfss	status,2,c
 46211                           
 46212                           ; BSR set to: 0
 46213  0152C0  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 46214                           
 46215                           ; BSR set to: 0
 46216                           
 46217                           ; BSR set to: 0
 46218  0152C2  505D               	movf	i2___fladd@a+3,w,c
 46219  0152C4  245D               	addwf	i2___fladd@a+3,w,c
 46220  0152C6  6F69               	movwf	i2___fladd@aexp& (0+255),b
 46221                           
 46222                           ; BSR set to: 0
 46223  0152C8  BE5C               	btfsc	i2___fladd@a+2,7,c
 46224                           
 46225                           ; BSR set to: 0
 46226  0152CA  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 46227                           
 46228                           ; BSR set to: 0
 46229                           
 46230                           ; BSR set to: 0
 46231  0152CC  5169               	movf	i2___fladd@aexp& (0+255),w,b
 46232  0152CE  B4D8               	btfsc	status,2,c
 46233  0152D0  D00D               	goto	i2l2341
 46234                           
 46235                           ; BSR set to: 0
 46236  0152D2  2969               	incf	i2___fladd@aexp& (0+255),w,b
 46237  0152D4  A4D8               	btfss	status,2,c
 46238  0152D6  D008               	goto	i2l2342
 46239                           
 46240                           ; BSR set to: 0
 46241  0152D8  0E00               	movlw	0
 46242  0152DA  6E5A               	movwf	i2___fladd@a,c
 46243  0152DC  0E00               	movlw	0
 46244  0152DE  6E5B               	movwf	i2___fladd@a+1,c
 46245  0152E0  0E00               	movlw	0
 46246  0152E2  6E5C               	movwf	i2___fladd@a+2,c
 46247  0152E4  0E00               	movlw	0
 46248  0152E6  6E5D               	movwf	i2___fladd@a+3,c
 46249  0152E8                     i2l2342:
 46250                           
 46251                           ; BSR set to: 0
 46252                           
 46253                           ; BSR set to: 0
 46254  0152E8  8E5C               	bsf	i2___fladd@a+2,7,c
 46255  0152EA  D006               	goto	L24
 46256  0152EC                     i2l2341:
 46257                           
 46258                           ; BSR set to: 0
 46259                           
 46260                           ; BSR set to: 0
 46261  0152EC  0E00               	movlw	0
 46262  0152EE  6E5A               	movwf	i2___fladd@a,c
 46263  0152F0  0E00               	movlw	0
 46264  0152F2  6E5B               	movwf	i2___fladd@a+1,c
 46265  0152F4  0E00               	movlw	0
 46266  0152F6  6E5C               	movwf	i2___fladd@a+2,c
 46267  0152F8                     L24:
 46268  0152F8  0E00               	movlw	0
 46269  0152FA  6E5D               	movwf	i2___fladd@a+3,c
 46270                           
 46271                           ; BSR set to: 0
 46272                           
 46273                           ; BSR set to: 0
 46274  0152FC  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46275  0152FE  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 46276  015300  B0D8               	btfsc	status,0,c
 46277  015302  D022               	goto	i2l2344
 46278                           
 46279                           ; BSR set to: 0
 46280  015304  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 46281  015306  D002               	goto	i2l2345
 46282                           
 46283                           ; BSR set to: 0
 46284  015308  0E80               	movlw	128
 46285  01530A  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 46286  01530C                     i2l2345:
 46287                           
 46288                           ; BSR set to: 0
 46289                           
 46290                           ; BSR set to: 0
 46291  01530C  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 46292                           
 46293                           ; BSR set to: 0
 46294  015310  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 46295                           
 46296                           ; BSR set to: 0
 46297  015314  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 46298                           
 46299                           ; BSR set to: 0
 46300  015318  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 46301                           
 46302                           ; BSR set to: 0
 46303  01531C  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 46304                           
 46305                           ; BSR set to: 0
 46306  015320  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 46307                           
 46308                           ; BSR set to: 0
 46309  015324  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 46310                           
 46311                           ; BSR set to: 0
 46312  015328  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 46313                           
 46314                           ; BSR set to: 0
 46315  01532C  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 46316                           
 46317                           ; BSR set to: 0
 46318  015330  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 46319                           
 46320                           ; BSR set to: 0
 46321  015334  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 46322                           
 46323                           ; BSR set to: 0
 46324  015338  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 46325                           
 46326                           ; BSR set to: 0
 46327  01533C  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 46328                           
 46329                           ; BSR set to: 0
 46330  015340  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 46331                           
 46332                           ; BSR set to: 0
 46333  015344  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 46334  015348                     i2l2344:
 46335                           
 46336                           ; BSR set to: 0
 46337                           
 46338                           ; BSR set to: 0
 46339  015348  0E00               	movlw	0
 46340  01534A  6F6B               	movwf	i2___fladd@grs& (0+255),b
 46341                           
 46342                           ; BSR set to: 0
 46343  01534C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46344  01534E  6F60               	movwf	??i2___fladd& (0+255),b
 46345  015350  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 46346  015352  1F60               	comf	??i2___fladd& (0+255),f,b
 46347  015354  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 46348  015356  4B60               	infsnz	??i2___fladd& (0+255),f,b
 46349  015358  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 46350  01535A  5169               	movf	i2___fladd@aexp& (0+255),w,b
 46351  01535C  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 46352  01535E  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 46353  015360  5160               	movf	??i2___fladd& (0+255),w,b
 46354  015362  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 46355  015364  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 46356  015366  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 46357  015368  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 46358  01536A  D02C               	goto	i2l2348
 46359  01536C  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 46360  01536E  E104               	bnz	i2u1368_40
 46361  015370  0E1A               	movlw	26
 46362  015372  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 46363  015374  A0D8               	btfss	status,0,c
 46364  015376  D026               	goto	i2l2348
 46365  015378                     i2u1368_40:
 46366                           
 46367                           ; BSR set to: 0
 46368  015378  5056               	movf	i2___fladd@b,w,c
 46369  01537A  1057               	iorwf	i2___fladd@b+1,w,c
 46370  01537C  1058               	iorwf	i2___fladd@b+2,w,c
 46371  01537E  1059               	iorwf	i2___fladd@b+3,w,c
 46372  015380  B4D8               	btfsc	status,2,c
 46373  015382  D002               	goto	i2u1369_40
 46374  015384  0E01               	movlw	1
 46375  015386  D001               	goto	i2u1370_40
 46376  015388                     i2u1369_40:
 46377  015388  0E00               	movlw	0
 46378  01538A                     i2u1370_40:
 46379  01538A  6F6B               	movwf	i2___fladd@grs& (0+255),b
 46380                           
 46381                           ; BSR set to: 0
 46382  01538C  0E00               	movlw	0
 46383  01538E  6E56               	movwf	i2___fladd@b,c
 46384  015390  0E00               	movlw	0
 46385  015392  6E57               	movwf	i2___fladd@b+1,c
 46386  015394  0E00               	movlw	0
 46387  015396  6E58               	movwf	i2___fladd@b+2,c
 46388  015398  0E00               	movlw	0
 46389  01539A  6E59               	movwf	i2___fladd@b+3,c
 46390                           
 46391                           ; BSR set to: 0
 46392  01539C  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 46393  0153A0  D015               	goto	i2u1373_40
 46394  0153A2                     i2l2349:
 46395                           
 46396                           ; BSR set to: 0
 46397  0153A2  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 46398  0153A4  D005               	goto	i2l2350
 46399                           
 46400                           ; BSR set to: 0
 46401  0153A6  90D8               	bcf	status,0,c
 46402  0153A8  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 46403  0153AA  0901               	iorlw	1
 46404  0153AC  6F6B               	movwf	i2___fladd@grs& (0+255),b
 46405  0153AE  D002               	goto	i2l2351
 46406  0153B0                     i2l2350:
 46407                           
 46408                           ; BSR set to: 0
 46409                           
 46410                           ; BSR set to: 0
 46411  0153B0  90D8               	bcf	status,0,c
 46412  0153B2  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 46413  0153B4                     i2l2351:
 46414                           
 46415                           ; BSR set to: 0
 46416                           
 46417                           ; BSR set to: 0
 46418  0153B4  B056               	btfsc	i2___fladd@b,0,c
 46419                           
 46420                           ; BSR set to: 0
 46421  0153B6  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 46422                           
 46423                           ; BSR set to: 0
 46424                           
 46425                           ; BSR set to: 0
 46426  0153B8  3459               	rlcf	i2___fladd@b+3,w,c
 46427  0153BA  3259               	rrcf	i2___fladd@b+3,f,c
 46428  0153BC  3258               	rrcf	i2___fladd@b+2,f,c
 46429  0153BE  3257               	rrcf	i2___fladd@b+1,f,c
 46430  0153C0  3256               	rrcf	i2___fladd@b,f,c
 46431                           
 46432                           ; BSR set to: 0
 46433  0153C2  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 46434  0153C4                     i2l2348:
 46435                           
 46436                           ; BSR set to: 0
 46437  0153C4  5169               	movf	i2___fladd@aexp& (0+255),w,b
 46438  0153C6  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 46439  0153C8  A0D8               	btfss	status,0,c
 46440  0153CA  D7EB               	goto	i2l2349
 46441  0153CC                     i2u1373_40:
 46442                           
 46443                           ; BSR set to: 0
 46444                           
 46445                           ; BSR set to: 0
 46446  0153CC  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 46447  0153CE  D029               	goto	i2l2354
 46448                           
 46449                           ; BSR set to: 0
 46450  0153D0  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46451  0153D2  A4D8               	btfss	status,2,c
 46452  0153D4  D009               	goto	i2l2355
 46453                           
 46454                           ; BSR set to: 0
 46455  0153D6  0E00               	movlw	0
 46456  0153D8  6E56               	movwf	?i2___fladd,c
 46457  0153DA  0E00               	movlw	0
 46458  0153DC  6E57               	movwf	?i2___fladd+1,c
 46459  0153DE  0E00               	movlw	0
 46460  0153E0  6E58               	movwf	?i2___fladd+2,c
 46461  0153E2  0E00               	movlw	0
 46462  0153E4  6E59               	movwf	?i2___fladd+3,c
 46463                           
 46464                           ; BSR set to: 0
 46465  0153E6  0012               	return	
 46466  0153E8                     i2l2355:
 46467                           
 46468                           ; BSR set to: 0
 46469                           
 46470                           ; BSR set to: 0
 46471  0153E8  505A               	movf	i2___fladd@a,w,c
 46472  0153EA  2656               	addwf	i2___fladd@b,f,c
 46473  0153EC  505B               	movf	i2___fladd@a+1,w,c
 46474  0153EE  2257               	addwfc	i2___fladd@b+1,f,c
 46475  0153F0  505C               	movf	i2___fladd@a+2,w,c
 46476  0153F2  2258               	addwfc	i2___fladd@b+2,f,c
 46477  0153F4  505D               	movf	i2___fladd@a+3,w,c
 46478  0153F6  2259               	addwfc	i2___fladd@b+3,f,c
 46479                           
 46480                           ; BSR set to: 0
 46481  0153F8  A059               	btfss	i2___fladd@b+3,0,c
 46482  0153FA  D083               	goto	i2u1386_40
 46483                           
 46484                           ; BSR set to: 0
 46485  0153FC  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 46486  0153FE  D006               	goto	i2l2358
 46487                           
 46488                           ; BSR set to: 0
 46489  015400  90D8               	bcf	status,0,c
 46490  015402  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 46491  015404  516B               	movf	i2___fladd@grs& (0+255),w,b
 46492  015406  0901               	iorlw	1
 46493  015408  6F6B               	movwf	i2___fladd@grs& (0+255),b
 46494  01540A  D002               	goto	i2l2359
 46495  01540C                     i2l2358:
 46496                           
 46497                           ; BSR set to: 0
 46498                           
 46499                           ; BSR set to: 0
 46500  01540C  90D8               	bcf	status,0,c
 46501  01540E  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 46502  015410                     i2l2359:
 46503                           
 46504                           ; BSR set to: 0
 46505                           
 46506                           ; BSR set to: 0
 46507  015410  B056               	btfsc	i2___fladd@b,0,c
 46508                           
 46509                           ; BSR set to: 0
 46510  015412  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 46511                           
 46512                           ; BSR set to: 0
 46513                           
 46514                           ; BSR set to: 0
 46515  015414  3459               	rlcf	i2___fladd@b+3,w,c
 46516  015416  3259               	rrcf	i2___fladd@b+3,f,c
 46517  015418  3258               	rrcf	i2___fladd@b+2,f,c
 46518  01541A  3257               	rrcf	i2___fladd@b+1,f,c
 46519  01541C  3256               	rrcf	i2___fladd@b,f,c
 46520                           
 46521                           ; BSR set to: 0
 46522  01541E  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 46523                           
 46524                           ; BSR set to: 0
 46525  015420  D070               	goto	i2u1386_40
 46526  015422                     i2l2354:
 46527                           
 46528                           ; BSR set to: 0
 46529                           
 46530                           ; BSR set to: 0
 46531  015422  505A               	movf	i2___fladd@a,w,c
 46532  015424  5C56               	subwf	i2___fladd@b,w,c
 46533  015426  505B               	movf	i2___fladd@a+1,w,c
 46534  015428  5857               	subwfb	i2___fladd@b+1,w,c
 46535  01542A  505C               	movf	i2___fladd@a+2,w,c
 46536  01542C  5858               	subwfb	i2___fladd@b+2,w,c
 46537  01542E  5059               	movf	i2___fladd@b+3,w,c
 46538  015430  0A80               	xorlw	128
 46539  015432  6F60               	movwf	??i2___fladd& (0+255),b
 46540  015434  505D               	movf	i2___fladd@a+3,w,c
 46541  015436  0A80               	xorlw	128
 46542  015438  5960               	subwfb	??i2___fladd& (0+255),w,b
 46543  01543A  B0D8               	btfsc	status,0,c
 46544  01543C  D036               	goto	i2l2362
 46545                           
 46546                           ; BSR set to: 0
 46547  01543E  C056  F060         	movff	i2___fladd@b,??i2___fladd
 46548  015442  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 46549  015446  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 46550  01544A  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 46551  01544E  1F60               	comf	??i2___fladd& (0+255),f,b
 46552  015450  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 46553  015452  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 46554  015454  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 46555  015456  2B60               	incf	??i2___fladd& (0+255),f,b
 46556  015458  0E00               	movlw	0
 46557  01545A  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 46558  01545C  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 46559  01545E  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 46560  015460  505A               	movf	i2___fladd@a,w,c
 46561  015462  2560               	addwf	??i2___fladd& (0+255),w,b
 46562  015464  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 46563  015466  505B               	movf	i2___fladd@a+1,w,c
 46564  015468  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 46565  01546A  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 46566  01546C  505C               	movf	i2___fladd@a+2,w,c
 46567  01546E  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 46568  015470  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 46569  015472  505D               	movf	i2___fladd@a+3,w,c
 46570  015474  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 46571  015476  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 46572  015478  0EFF               	movlw	255
 46573  01547A  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 46574  01547C  6E56               	movwf	i2___fladd@b,c
 46575  01547E  0EFF               	movlw	255
 46576  015480  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 46577  015482  6E57               	movwf	i2___fladd@b+1,c
 46578  015484  0EFF               	movlw	255
 46579  015486  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 46580  015488  6E58               	movwf	i2___fladd@b+2,c
 46581  01548A  0EFF               	movlw	255
 46582  01548C  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 46583  01548E  6E59               	movwf	i2___fladd@b+3,c
 46584  015490  0E80               	movlw	128
 46585  015492  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 46586                           
 46587                           ; BSR set to: 0
 46588  015494  6D6B               	negf	i2___fladd@grs& (0+255),b
 46589                           
 46590                           ; BSR set to: 0
 46591  015496  516B               	movf	i2___fladd@grs& (0+255),w,b
 46592  015498  A4D8               	btfss	status,2,c
 46593  01549A  D00F               	goto	i2l2364
 46594                           
 46595                           ; BSR set to: 0
 46596  01549C  0E01               	movlw	1
 46597  01549E  2656               	addwf	i2___fladd@b,f,c
 46598  0154A0  0E00               	movlw	0
 46599  0154A2  2257               	addwfc	i2___fladd@b+1,f,c
 46600  0154A4  2258               	addwfc	i2___fladd@b+2,f,c
 46601  0154A6  2259               	addwfc	i2___fladd@b+3,f,c
 46602                           
 46603                           ; BSR set to: 0
 46604  0154A8  D008               	goto	i2l2364
 46605  0154AA                     i2l2362:
 46606                           
 46607                           ; BSR set to: 0
 46608                           
 46609                           ; BSR set to: 0
 46610  0154AA  505A               	movf	i2___fladd@a,w,c
 46611  0154AC  5E56               	subwf	i2___fladd@b,f,c
 46612  0154AE  505B               	movf	i2___fladd@a+1,w,c
 46613  0154B0  5A57               	subwfb	i2___fladd@b+1,f,c
 46614  0154B2  505C               	movf	i2___fladd@a+2,w,c
 46615  0154B4  5A58               	subwfb	i2___fladd@b+2,f,c
 46616  0154B6  505D               	movf	i2___fladd@a+3,w,c
 46617  0154B8  5A59               	subwfb	i2___fladd@b+3,f,c
 46618  0154BA                     i2l2364:
 46619                           
 46620                           ; BSR set to: 0
 46621  0154BA  5056               	movf	i2___fladd@b,w,c
 46622  0154BC  1057               	iorwf	i2___fladd@b+1,w,c
 46623  0154BE  1058               	iorwf	i2___fladd@b+2,w,c
 46624  0154C0  1059               	iorwf	i2___fladd@b+3,w,c
 46625  0154C2  A4D8               	btfss	status,2,c
 46626  0154C4  D01C               	goto	i2l2371
 46627                           
 46628                           ; BSR set to: 0
 46629  0154C6  516B               	movf	i2___fladd@grs& (0+255),w,b
 46630  0154C8  A4D8               	btfss	status,2,c
 46631  0154CA  D019               	goto	i2l2371
 46632                           
 46633                           ; BSR set to: 0
 46634  0154CC  0E00               	movlw	0
 46635  0154CE  6E56               	movwf	?i2___fladd,c
 46636  0154D0  0E00               	movlw	0
 46637  0154D2  6E57               	movwf	?i2___fladd+1,c
 46638  0154D4  0E00               	movlw	0
 46639  0154D6  6E58               	movwf	?i2___fladd+2,c
 46640  0154D8  0E00               	movlw	0
 46641  0154DA  6E59               	movwf	?i2___fladd+3,c
 46642                           
 46643                           ; BSR set to: 0
 46644  0154DC  0012               	return	
 46645  0154DE                     
 46646                           ; BSR set to: 0
 46647                           
 46648                           ; BSR set to: 0
 46649  0154DE  90D8               	bcf	status,0,c
 46650  0154E0  3656               	rlcf	i2___fladd@b,f,c
 46651  0154E2  3657               	rlcf	i2___fladd@b+1,f,c
 46652  0154E4  3658               	rlcf	i2___fladd@b+2,f,c
 46653  0154E6  3659               	rlcf	i2___fladd@b+3,f,c
 46654                           
 46655                           ; BSR set to: 0
 46656  0154E8  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 46657                           
 46658                           ; BSR set to: 0
 46659  0154EA  8056               	bsf	i2___fladd@b,0,c
 46660                           
 46661                           ; BSR set to: 0
 46662                           
 46663                           ; BSR set to: 0
 46664  0154EC  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 46665  0154EE  D002               	goto	i2l2369
 46666                           
 46667                           ; BSR set to: 0
 46668  0154F0  80D8               	bsf	status,0,c
 46669  0154F2  D001               	goto	L25
 46670  0154F4                     i2l2369:
 46671                           
 46672                           ; BSR set to: 0
 46673                           
 46674                           ; BSR set to: 0
 46675  0154F4  90D8               	bcf	status,0,c
 46676  0154F6                     L25:
 46677  0154F6  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 46678                           
 46679                           ; BSR set to: 0
 46680                           
 46681                           ; BSR set to: 0
 46682  0154F8  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46683  0154FA  A4D8               	btfss	status,2,c
 46684                           
 46685                           ; BSR set to: 0
 46686  0154FC  076A               	decf	i2___fladd@bexp& (0+255),f,b
 46687  0154FE                     i2l2371:
 46688                           
 46689                           ; BSR set to: 0
 46690                           
 46691                           ; BSR set to: 0
 46692                           
 46693                           ; BSR set to: 0
 46694  0154FE  AE58               	btfss	i2___fladd@b+2,7,c
 46695  015500  D7EE               	goto	i2l2367
 46696  015502                     i2u1386_40:
 46697                           
 46698                           ; BSR set to: 0
 46699                           
 46700                           ; BSR set to: 0
 46701                           
 46702                           ; BSR set to: 0
 46703  015502  0E00               	movlw	0
 46704  015504  6F69               	movwf	i2___fladd@aexp& (0+255),b
 46705                           
 46706                           ; BSR set to: 0
 46707  015506  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 46708  015508  D00A               	goto	i2l2376
 46709                           
 46710                           ; BSR set to: 0
 46711  01550A  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 46712  01550E  0E7F               	movlw	127
 46713  015510  1760               	andwf	??i2___fladd& (0+255),f,b
 46714  015512  A4D8               	btfss	status,2,c
 46715  015514  D002               	goto	i2u1389_40
 46716                           
 46717                           ; BSR set to: 0
 46718                           
 46719                           ; BSR set to: 0
 46720  015516  A056               	btfss	i2___fladd@b,0,c
 46721  015518  D002               	goto	i2l2376
 46722  01551A                     i2u1389_40:
 46723                           
 46724                           ; BSR set to: 0
 46725  01551A  0E01               	movlw	1
 46726  01551C  6F69               	movwf	i2___fladd@aexp& (0+255),b
 46727  01551E                     i2l2376:
 46728                           
 46729                           ; BSR set to: 0
 46730                           
 46731                           ; BSR set to: 0
 46732                           
 46733                           ; BSR set to: 0
 46734  01551E  5169               	movf	i2___fladd@aexp& (0+255),w,b
 46735  015520  B4D8               	btfsc	status,2,c
 46736  015522  D020               	goto	i2l2379
 46737                           
 46738                           ; BSR set to: 0
 46739  015524  0E01               	movlw	1
 46740  015526  2656               	addwf	i2___fladd@b,f,c
 46741  015528  0E00               	movlw	0
 46742  01552A  2257               	addwfc	i2___fladd@b+1,f,c
 46743  01552C  2258               	addwfc	i2___fladd@b+2,f,c
 46744  01552E  2259               	addwfc	i2___fladd@b+3,f,c
 46745                           
 46746                           ; BSR set to: 0
 46747  015530  A059               	btfss	i2___fladd@b+3,0,c
 46748  015532  D018               	goto	i2l2379
 46749                           
 46750                           ; BSR set to: 0
 46751  015534  C056  F060         	movff	i2___fladd@b,??i2___fladd
 46752  015538  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 46753  01553C  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 46754  015540  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 46755  015544  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 46756  015546  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 46757  015548  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 46758  01554A  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 46759  01554C  3360               	rrcf	??i2___fladd& (0+255),f,b
 46760  01554E  C060  F056         	movff	??i2___fladd,i2___fladd@b
 46761  015552  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 46762  015556  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 46763  01555A  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 46764  01555E  296A               	incf	i2___fladd@bexp& (0+255),w,b
 46765  015560  A4D8               	btfss	status,2,c
 46766                           
 46767                           ; BSR set to: 0
 46768  015562  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 46769  015564                     i2l2379:
 46770                           
 46771                           ; BSR set to: 0
 46772                           
 46773                           ; BSR set to: 0
 46774                           
 46775                           ; BSR set to: 0
 46776                           
 46777                           ; BSR set to: 0
 46778  015564  296A               	incf	i2___fladd@bexp& (0+255),w,b
 46779  015566  B4D8               	btfsc	status,2,c
 46780  015568  D003               	goto	i2u1394_40
 46781                           
 46782                           ; BSR set to: 0
 46783  01556A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46784  01556C  A4D8               	btfss	status,2,c
 46785  01556E  D00D               	goto	i2l2383
 46786  015570                     i2u1394_40:
 46787                           
 46788                           ; BSR set to: 0
 46789                           
 46790                           ; BSR set to: 0
 46791  015570  0E00               	movlw	0
 46792  015572  6E56               	movwf	i2___fladd@b,c
 46793  015574  0E00               	movlw	0
 46794  015576  6E57               	movwf	i2___fladd@b+1,c
 46795  015578  0E00               	movlw	0
 46796  01557A  6E58               	movwf	i2___fladd@b+2,c
 46797  01557C  0E00               	movlw	0
 46798  01557E  6E59               	movwf	i2___fladd@b+3,c
 46799  015580  516A               	movf	i2___fladd@bexp& (0+255),w,b
 46800  015582  A4D8               	btfss	status,2,c
 46801  015584  D002               	goto	i2l2383
 46802                           
 46803                           ; BSR set to: 0
 46804  015586  0E00               	movlw	0
 46805  015588  6F68               	movwf	i2___fladd@signs& (0+255),b
 46806  01558A                     i2l2383:
 46807                           
 46808                           ; BSR set to: 0
 46809                           
 46810                           ; BSR set to: 0
 46811                           
 46812                           ; BSR set to: 0
 46813  01558A  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 46814  01558C  D002               	goto	i2l2384
 46815                           
 46816                           ; BSR set to: 0
 46817  01558E  8E58               	bsf	i2___fladd@b+2,7,c
 46818  015590  D001               	goto	i2l2385
 46819  015592                     i2l2384:
 46820                           
 46821                           ; BSR set to: 0
 46822                           
 46823                           ; BSR set to: 0
 46824  015592  9E58               	bcf	i2___fladd@b+2,7,c
 46825  015594                     i2l2385:
 46826                           
 46827                           ; BSR set to: 0
 46828                           
 46829                           ; BSR set to: 0
 46830  015594  90D8               	bcf	status,0,c
 46831  015596  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 46832  015598  6E59               	movwf	i2___fladd@b+3,c
 46833                           
 46834                           ; BSR set to: 0
 46835  01559A  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 46836                           
 46837                           ; BSR set to: 0
 46838  01559C  8E59               	bsf	i2___fladd@b+3,7,c
 46839                           
 46840                           ; BSR set to: 0
 46841                           
 46842                           ; BSR set to: 0
 46843  01559E  C056  F056         	movff	i2___fladd@b,?i2___fladd
 46844  0155A2  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 46845  0155A6  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 46846  0155AA  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 46847  0155AE  0012               	return	
 46848  0155B0                     __end_ofi2___fladd:
 46849                           	opt stack 0
 46850                           tosu	equ	0xFFF
 46851                           tosh	equ	0xFFE
 46852                           tosl	equ	0xFFD
 46853                           pclatu	equ	0xFFB
 46854                           pclath	equ	0xFFA
 46855                           tblptru	equ	0xFF8
 46856                           tblptrh	equ	0xFF7
 46857                           tblptrl	equ	0xFF6
 46858                           tablat	equ	0xFF5
 46859                           prodh	equ	0xFF4
 46860                           prodl	equ	0xFF3
 46861                           intcon	equ	0xFF2
 46862                           indf0	equ	0xFEF
 46863                           postinc0	equ	0xFEE
 46864                           fsr0h	equ	0xFEA
 46865                           fsr0l	equ	0xFE9
 46866                           wreg	equ	0xFE8
 46867                           indf1	equ	0xFE7
 46868                           postdec1	equ	0xFE5
 46869                           plusw1	equ	0xFE3
 46870                           fsr1h	equ	0xFE2
 46871                           fsr1l	equ	0xFE1
 46872                           bsr	equ	0xFE0
 46873                           indf2	equ	0xFDF
 46874                           postinc2	equ	0xFDE
 46875                           postdec2	equ	0xFDD
 46876                           plusw2	equ	0xFDB
 46877                           fsr2h	equ	0xFDA
 46878                           fsr2l	equ	0xFD9
 46879                           status	equ	0xFD8
 46880                           
 46881 ;; *************** function _abs *****************
 46882 ;; Defined at:
 46883 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 46884 ;; Parameters:    Size  Location     Type
 46885 ;;  a               2   22[BANK0 ] int 
 46886 ;; Auto vars:     Size  Location     Type
 46887 ;;		None
 46888 ;; Return value:  Size  Location     Type
 46889 ;;                  2   22[BANK0 ] int 
 46890 ;; Registers used:
 46891 ;;		wreg, status,2, status,0
 46892 ;; Tracked objects:
 46893 ;;		On entry : 0/0
 46894 ;;		On exit  : 0/0
 46895 ;;		Unchanged: 0/0
 46896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46900 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46901 ;;Total ram usage:        4 bytes
 46902 ;; Hardware stack levels used:    1
 46903 ;; This function calls:
 46904 ;;		Nothing
 46905 ;; This function is called by:
 46906 ;;		_ADCPostProcessingCallback
 46907 ;; This function uses a non-reentrant model
 46908 ;;
 46909                           
 46910                           	psect	text147
 46911  01959A                     __ptext147:
 46912                           	opt stack 0
 46913  01959A                     _abs:
 46914                           	opt stack 16
 46915                           
 46916                           ; BSR set to: 0
 46917                           ;incstack = 0
 46918  01959A  0100               	movlb	0	; () banked
 46919  01959C  AF77               	btfss	(abs@a+1)& (0+255),7,b
 46920  01959E  D00D               	goto	i2l1831
 46921                           
 46922                           ; BSR set to: 0
 46923  0195A0  C076  F078         	movff	abs@a,??_abs
 46924  0195A4  C077  F079         	movff	abs@a+1,??_abs+1
 46925  0195A8  1F78               	comf	??_abs& (0+255),f,b
 46926  0195AA  1F79               	comf	(??_abs+1)& (0+255),f,b
 46927  0195AC  4B78               	infsnz	??_abs& (0+255),f,b
 46928  0195AE  2B79               	incf	(??_abs+1)& (0+255),f,b
 46929  0195B0  C078  F076         	movff	??_abs,?_abs
 46930  0195B4  C079  F077         	movff	??_abs+1,?_abs+1
 46931  0195B8  0012               	return	
 46932  0195BA                     i2l1831:
 46933                           
 46934                           ; BSR set to: 0
 46935  0195BA  C076  F076         	movff	abs@a,?_abs
 46936  0195BE  C077  F077         	movff	abs@a+1,?_abs+1
 46937                           
 46938                           ; BSR set to: 0
 46939  0195C2  0012               	return		;funcret
 46940  0195C4                     __end_of_abs:
 46941                           	opt stack 0
 46942                           tosu	equ	0xFFF
 46943                           tosh	equ	0xFFE
 46944                           tosl	equ	0xFFD
 46945                           pclatu	equ	0xFFB
 46946                           pclath	equ	0xFFA
 46947                           tblptru	equ	0xFF8
 46948                           tblptrh	equ	0xFF7
 46949                           tblptrl	equ	0xFF6
 46950                           tablat	equ	0xFF5
 46951                           prodh	equ	0xFF4
 46952                           prodl	equ	0xFF3
 46953                           intcon	equ	0xFF2
 46954                           indf0	equ	0xFEF
 46955                           postinc0	equ	0xFEE
 46956                           fsr0h	equ	0xFEA
 46957                           fsr0l	equ	0xFE9
 46958                           wreg	equ	0xFE8
 46959                           indf1	equ	0xFE7
 46960                           postdec1	equ	0xFE5
 46961                           plusw1	equ	0xFE3
 46962                           fsr1h	equ	0xFE2
 46963                           fsr1l	equ	0xFE1
 46964                           bsr	equ	0xFE0
 46965                           indf2	equ	0xFDF
 46966                           postinc2	equ	0xFDE
 46967                           postdec2	equ	0xFDD
 46968                           plusw2	equ	0xFDB
 46969                           fsr2h	equ	0xFDA
 46970                           fsr2l	equ	0xFD9
 46971                           status	equ	0xFD8
 46972                           
 46973 ;; *************** function _ADCC_StopConversion *****************
 46974 ;; Defined at:
 46975 ;;		line 162 in file "mcc_generated_files/adcc.c"
 46976 ;; Parameters:    Size  Location     Type
 46977 ;;		None
 46978 ;; Auto vars:     Size  Location     Type
 46979 ;;		None
 46980 ;; Return value:  Size  Location     Type
 46981 ;;                  1    wreg      void 
 46982 ;; Registers used:
 46983 ;;		None
 46984 ;; Tracked objects:
 46985 ;;		On entry : 0/0
 46986 ;;		On exit  : 0/0
 46987 ;;		Unchanged: 0/0
 46988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46993 ;;Total ram usage:        0 bytes
 46994 ;; Hardware stack levels used:    1
 46995 ;; This function calls:
 46996 ;;		Nothing
 46997 ;; This function is called by:
 46998 ;;		_ADCPostProcessingCallback
 46999 ;; This function uses a non-reentrant model
 47000 ;;
 47001                           
 47002                           	psect	text148
 47003  019A06                     __ptext148:
 47004                           	opt stack 0
 47005  019A06                     _ADCC_StopConversion:
 47006                           	opt stack 16
 47007                           
 47008                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 47009                           
 47010                           ; BSR set to: 0
 47011                           ;incstack = 0
 47012  019A06  9060               	bcf	3936,0,c	;volatile
 47013  019A08  0012               	return		;funcret
 47014  019A0A                     __end_of_ADCC_StopConversion:
 47015                           	opt stack 0
 47016                           tosu	equ	0xFFF
 47017                           tosh	equ	0xFFE
 47018                           tosl	equ	0xFFD
 47019                           pclatu	equ	0xFFB
 47020                           pclath	equ	0xFFA
 47021                           tblptru	equ	0xFF8
 47022                           tblptrh	equ	0xFF7
 47023                           tblptrl	equ	0xFF6
 47024                           tablat	equ	0xFF5
 47025                           prodh	equ	0xFF4
 47026                           prodl	equ	0xFF3
 47027                           intcon	equ	0xFF2
 47028                           indf0	equ	0xFEF
 47029                           postinc0	equ	0xFEE
 47030                           fsr0h	equ	0xFEA
 47031                           fsr0l	equ	0xFE9
 47032                           wreg	equ	0xFE8
 47033                           indf1	equ	0xFE7
 47034                           postdec1	equ	0xFE5
 47035                           plusw1	equ	0xFE3
 47036                           fsr1h	equ	0xFE2
 47037                           fsr1l	equ	0xFE1
 47038                           bsr	equ	0xFE0
 47039                           indf2	equ	0xFDF
 47040                           postinc2	equ	0xFDE
 47041                           postdec2	equ	0xFDD
 47042                           plusw2	equ	0xFDB
 47043                           fsr2h	equ	0xFDA
 47044                           fsr2l	equ	0xFD9
 47045                           status	equ	0xFD8
 47046                           
 47047 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 47048 ;; Defined at:
 47049 ;;		line 216 in file "mcc_generated_files/adcc.c"
 47050 ;; Parameters:    Size  Location     Type
 47051 ;;		None
 47052 ;; Auto vars:     Size  Location     Type
 47053 ;;		None
 47054 ;; Return value:  Size  Location     Type
 47055 ;;                  1    wreg      unsigned char 
 47056 ;; Registers used:
 47057 ;;		wreg
 47058 ;; Tracked objects:
 47059 ;;		On entry : 0/0
 47060 ;;		On exit  : 0/0
 47061 ;;		Unchanged: 0/0
 47062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47067 ;;Total ram usage:        0 bytes
 47068 ;; Hardware stack levels used:    1
 47069 ;; This function calls:
 47070 ;;		Nothing
 47071 ;; This function is called by:
 47072 ;;		_ADCPostProcessingCallback
 47073 ;; This function uses a non-reentrant model
 47074 ;;
 47075                           
 47076                           	psect	text149
 47077  0199B2                     __ptext149:
 47078                           	opt stack 0
 47079  0199B2                     _ADCC_HasAccumulatorOverflowed:
 47080                           	opt stack 16
 47081                           
 47082                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 47083                           
 47084                           ;incstack = 0
 47085  0199B2  AE65               	btfss	3941,7,c	;volatile
 47086  0199B4  D002               	goto	i2u1730_40
 47087  0199B6  0E01               	movlw	1
 47088  0199B8  0012               	return	
 47089  0199BA                     i2u1730_40:
 47090  0199BA  0E00               	movlw	0
 47091  0199BC  0012               	return	
 47092  0199BE                     __end_of_ADCC_HasAccumulatorOverflowed:
 47093                           	opt stack 0
 47094                           tosu	equ	0xFFF
 47095                           tosh	equ	0xFFE
 47096                           tosl	equ	0xFFD
 47097                           pclatu	equ	0xFFB
 47098                           pclath	equ	0xFFA
 47099                           tblptru	equ	0xFF8
 47100                           tblptrh	equ	0xFF7
 47101                           tblptrl	equ	0xFF6
 47102                           tablat	equ	0xFF5
 47103                           prodh	equ	0xFF4
 47104                           prodl	equ	0xFF3
 47105                           intcon	equ	0xFF2
 47106                           indf0	equ	0xFEF
 47107                           postinc0	equ	0xFEE
 47108                           fsr0h	equ	0xFEA
 47109                           fsr0l	equ	0xFE9
 47110                           wreg	equ	0xFE8
 47111                           indf1	equ	0xFE7
 47112                           postdec1	equ	0xFE5
 47113                           plusw1	equ	0xFE3
 47114                           fsr1h	equ	0xFE2
 47115                           fsr1l	equ	0xFE1
 47116                           bsr	equ	0xFE0
 47117                           indf2	equ	0xFDF
 47118                           postinc2	equ	0xFDE
 47119                           postdec2	equ	0xFDD
 47120                           plusw2	equ	0xFDB
 47121                           fsr2h	equ	0xFDA
 47122                           fsr2l	equ	0xFD9
 47123                           status	equ	0xFD8
 47124                           
 47125 ;; *************** function _ADCC_GetFilterValue *****************
 47126 ;; Defined at:
 47127 ;;		line 222 in file "mcc_generated_files/adcc.c"
 47128 ;; Parameters:    Size  Location     Type
 47129 ;;		None
 47130 ;; Auto vars:     Size  Location     Type
 47131 ;;		None
 47132 ;; Return value:  Size  Location     Type
 47133 ;;                  2    0[COMRAM] unsigned int 
 47134 ;; Registers used:
 47135 ;;		wreg, status,2, status,0
 47136 ;; Tracked objects:
 47137 ;;		On entry : 0/0
 47138 ;;		On exit  : 0/0
 47139 ;;		Unchanged: 0/0
 47140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47145 ;;Total ram usage:        4 bytes
 47146 ;; Hardware stack levels used:    1
 47147 ;; This function calls:
 47148 ;;		Nothing
 47149 ;; This function is called by:
 47150 ;;		_ADCPostProcessingCallback
 47151 ;; This function uses a non-reentrant model
 47152 ;;
 47153                           
 47154                           	psect	text150
 47155  01988E                     __ptext150:
 47156                           	opt stack 0
 47157  01988E                     _ADCC_GetFilterValue:
 47158                           	opt stack 16
 47159                           
 47160                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 47161                           
 47162                           ;incstack = 0
 47163  01988E  5073               	movf	3955,w,c	;volatile
 47164  019890  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 47165  019892  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 47166  019894  5072               	movf	3954,w,c	;volatile
 47167  019896  2403               	addwf	??_ADCC_GetFilterValue,w,c
 47168  019898  6E01               	movwf	?_ADCC_GetFilterValue,c
 47169  01989A  0E00               	movlw	0
 47170  01989C  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 47171  01989E  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 47172  0198A0  0012               	return	
 47173  0198A2                     __end_of_ADCC_GetFilterValue:
 47174                           	opt stack 0
 47175                           tosu	equ	0xFFF
 47176                           tosh	equ	0xFFE
 47177                           tosl	equ	0xFFD
 47178                           pclatu	equ	0xFFB
 47179                           pclath	equ	0xFFA
 47180                           tblptru	equ	0xFF8
 47181                           tblptrh	equ	0xFF7
 47182                           tblptrl	equ	0xFF6
 47183                           tablat	equ	0xFF5
 47184                           prodh	equ	0xFF4
 47185                           prodl	equ	0xFF3
 47186                           intcon	equ	0xFF2
 47187                           indf0	equ	0xFEF
 47188                           postinc0	equ	0xFEE
 47189                           fsr0h	equ	0xFEA
 47190                           fsr0l	equ	0xFE9
 47191                           wreg	equ	0xFE8
 47192                           indf1	equ	0xFE7
 47193                           postdec1	equ	0xFE5
 47194                           plusw1	equ	0xFE3
 47195                           fsr1h	equ	0xFE2
 47196                           fsr1l	equ	0xFE1
 47197                           bsr	equ	0xFE0
 47198                           indf2	equ	0xFDF
 47199                           postinc2	equ	0xFDE
 47200                           postdec2	equ	0xFDD
 47201                           plusw2	equ	0xFDB
 47202                           fsr2h	equ	0xFDA
 47203                           fsr2l	equ	0xFD9
 47204                           status	equ	0xFD8
 47205                           
 47206 ;; *************** function _ADCC_GetConversionResult *****************
 47207 ;; Defined at:
 47208 ;;		line 130 in file "mcc_generated_files/adcc.c"
 47209 ;; Parameters:    Size  Location     Type
 47210 ;;		None
 47211 ;; Auto vars:     Size  Location     Type
 47212 ;;		None
 47213 ;; Return value:  Size  Location     Type
 47214 ;;                  2    0[COMRAM] unsigned int 
 47215 ;; Registers used:
 47216 ;;		wreg, status,2, status,0
 47217 ;; Tracked objects:
 47218 ;;		On entry : 0/0
 47219 ;;		On exit  : 0/0
 47220 ;;		Unchanged: 0/0
 47221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47226 ;;Total ram usage:        4 bytes
 47227 ;; Hardware stack levels used:    1
 47228 ;; This function calls:
 47229 ;;		Nothing
 47230 ;; This function is called by:
 47231 ;;		_ADCPostProcessingCallback
 47232 ;; This function uses a non-reentrant model
 47233 ;;
 47234                           
 47235                           	psect	text151
 47236  0198A2                     __ptext151:
 47237                           	opt stack 0
 47238  0198A2                     _ADCC_GetConversionResult:
 47239                           	opt stack 16
 47240                           
 47241                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 47242                           
 47243                           ;incstack = 0
 47244  0198A2  5064               	movf	3940,w,c	;volatile
 47245  0198A4  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 47246  0198A6  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 47247  0198A8  5063               	movf	3939,w,c	;volatile
 47248  0198AA  2403               	addwf	??_ADCC_GetConversionResult,w,c
 47249  0198AC  6E01               	movwf	?_ADCC_GetConversionResult,c
 47250  0198AE  0E00               	movlw	0
 47251  0198B0  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 47252  0198B2  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 47253  0198B4  0012               	return	
 47254  0198B6                     __end_of_ADCC_GetConversionResult:
 47255                           	opt stack 0
 47256                           tosu	equ	0xFFF
 47257                           tosh	equ	0xFFE
 47258                           tosl	equ	0xFFD
 47259                           pclatu	equ	0xFFB
 47260                           pclath	equ	0xFFA
 47261                           tblptru	equ	0xFF8
 47262                           tblptrh	equ	0xFF7
 47263                           tblptrl	equ	0xFF6
 47264                           tablat	equ	0xFF5
 47265                           prodh	equ	0xFF4
 47266                           prodl	equ	0xFF3
 47267                           intcon	equ	0xFF2
 47268                           indf0	equ	0xFEF
 47269                           postinc0	equ	0xFEE
 47270                           fsr0h	equ	0xFEA
 47271                           fsr0l	equ	0xFE9
 47272                           wreg	equ	0xFE8
 47273                           indf1	equ	0xFE7
 47274                           postdec1	equ	0xFE5
 47275                           plusw1	equ	0xFE3
 47276                           fsr1h	equ	0xFE2
 47277                           fsr1l	equ	0xFE1
 47278                           bsr	equ	0xFE0
 47279                           indf2	equ	0xFDF
 47280                           postinc2	equ	0xFDE
 47281                           postdec2	equ	0xFDD
 47282                           plusw2	equ	0xFDB
 47283                           fsr2h	equ	0xFDA
 47284                           fsr2l	equ	0xFD9
 47285                           status	equ	0xFD8
 47286                           tosu	equ	0xFFF
 47287                           tosh	equ	0xFFE
 47288                           tosl	equ	0xFFD
 47289                           pclatu	equ	0xFFB
 47290                           pclath	equ	0xFFA
 47291                           tblptru	equ	0xFF8
 47292                           tblptrh	equ	0xFF7
 47293                           tblptrl	equ	0xFF6
 47294                           tablat	equ	0xFF5
 47295                           prodh	equ	0xFF4
 47296                           prodl	equ	0xFF3
 47297                           intcon	equ	0xFF2
 47298                           indf0	equ	0xFEF
 47299                           postinc0	equ	0xFEE
 47300                           fsr0h	equ	0xFEA
 47301                           fsr0l	equ	0xFE9
 47302                           wreg	equ	0xFE8
 47303                           indf1	equ	0xFE7
 47304                           postdec1	equ	0xFE5
 47305                           plusw1	equ	0xFE3
 47306                           fsr1h	equ	0xFE2
 47307                           fsr1l	equ	0xFE1
 47308                           bsr	equ	0xFE0
 47309                           indf2	equ	0xFDF
 47310                           postinc2	equ	0xFDE
 47311                           postdec2	equ	0xFDD
 47312                           plusw2	equ	0xFDB
 47313                           fsr2h	equ	0xFDA
 47314                           fsr2l	equ	0xFD9
 47315                           status	equ	0xFD8
 47316                           
 47317                           	psect	text152
 47318  000000                     __ptext152:
 47319                           	opt stack 0
 47320                           tosu	equ	0xFFF
 47321                           tosh	equ	0xFFE
 47322                           tosl	equ	0xFFD
 47323                           pclatu	equ	0xFFB
 47324                           pclath	equ	0xFFA
 47325                           tblptru	equ	0xFF8
 47326                           tblptrh	equ	0xFF7
 47327                           tblptrl	equ	0xFF6
 47328                           tablat	equ	0xFF5
 47329                           prodh	equ	0xFF4
 47330                           prodl	equ	0xFF3
 47331                           intcon	equ	0xFF2
 47332                           indf0	equ	0xFEF
 47333                           postinc0	equ	0xFEE
 47334                           fsr0h	equ	0xFEA
 47335                           fsr0l	equ	0xFE9
 47336                           wreg	equ	0xFE8
 47337                           indf1	equ	0xFE7
 47338                           postdec1	equ	0xFE5
 47339                           plusw1	equ	0xFE3
 47340                           fsr1h	equ	0xFE2
 47341                           fsr1l	equ	0xFE1
 47342                           bsr	equ	0xFE0
 47343                           indf2	equ	0xFDF
 47344                           postinc2	equ	0xFDE
 47345                           postdec2	equ	0xFDD
 47346                           plusw2	equ	0xFDB
 47347                           fsr2h	equ	0xFDA
 47348                           fsr2l	equ	0xFD9
 47349                           status	equ	0xFD8
 47350                           
 47351                           	psect	rparam
 47352  0000                     tosu	equ	0xFFF
 47353                           tosh	equ	0xFFE
 47354                           tosl	equ	0xFFD
 47355                           pclatu	equ	0xFFB
 47356                           pclath	equ	0xFFA
 47357                           tblptru	equ	0xFF8
 47358                           tblptrh	equ	0xFF7
 47359                           tblptrl	equ	0xFF6
 47360                           tablat	equ	0xFF5
 47361                           prodh	equ	0xFF4
 47362                           prodl	equ	0xFF3
 47363                           intcon	equ	0xFF2
 47364                           indf0	equ	0xFEF
 47365                           postinc0	equ	0xFEE
 47366                           fsr0h	equ	0xFEA
 47367                           fsr0l	equ	0xFE9
 47368                           wreg	equ	0xFE8
 47369                           indf1	equ	0xFE7
 47370                           postdec1	equ	0xFE5
 47371                           plusw1	equ	0xFE3
 47372                           fsr1h	equ	0xFE2
 47373                           fsr1l	equ	0xFE1
 47374                           bsr	equ	0xFE0
 47375                           indf2	equ	0xFDF
 47376                           postinc2	equ	0xFDE
 47377                           postdec2	equ	0xFDD
 47378                           plusw2	equ	0xFDB
 47379                           fsr2h	equ	0xFDA
 47380                           fsr2l	equ	0xFD9
 47381                           status	equ	0xFD8
 47382                           
 47383                           	psect	temp
 47384  00005F                     btemp:
 47385                           	opt stack 0
 47386  00005F                     	ds	1
 47387  0000                     int$flags	set	btemp
 47388  0000                     wtemp6	set	btemp+1
 47389                           tosu	equ	0xFFF
 47390                           tosh	equ	0xFFE
 47391                           tosl	equ	0xFFD
 47392                           pclatu	equ	0xFFB
 47393                           pclath	equ	0xFFA
 47394                           tblptru	equ	0xFF8
 47395                           tblptrh	equ	0xFF7
 47396                           tblptrl	equ	0xFF6
 47397                           tablat	equ	0xFF5
 47398                           prodh	equ	0xFF4
 47399                           prodl	equ	0xFF3
 47400                           intcon	equ	0xFF2
 47401                           indf0	equ	0xFEF
 47402                           postinc0	equ	0xFEE
 47403                           fsr0h	equ	0xFEA
 47404                           fsr0l	equ	0xFE9
 47405                           wreg	equ	0xFE8
 47406                           indf1	equ	0xFE7
 47407                           postdec1	equ	0xFE5
 47408                           plusw1	equ	0xFE3
 47409                           fsr1h	equ	0xFE2
 47410                           fsr1l	equ	0xFE1
 47411                           bsr	equ	0xFE0
 47412                           indf2	equ	0xFDF
 47413                           postinc2	equ	0xFDE
 47414                           postdec2	equ	0xFDD
 47415                           plusw2	equ	0xFDB
 47416                           fsr2h	equ	0xFDA
 47417                           fsr2l	equ	0xFD9
 47418                           status	equ	0xFD8


Data Sizes:
    Strings     10898
    Constant    270
    Data        43
    BSS         382
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     77     254
    BANK3           256      6     198
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_115(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_115(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_115(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_115(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_157(CODE[11]), STR_150(CODE[5]), STR_148(CODE[9]), STR_146(CODE[29]), 
		 -> STR_144(CODE[34]), STR_142(CODE[33]), STR_140(CODE[29]), STR_138(CODE[17]), 
		 -> STR_136(CODE[17]), STR_134(CODE[14]), STR_132(CODE[19]), STR_130(CODE[20]), 
		 -> STR_128(CODE[11]), STR_126(CODE[17]), STR_124(CODE[14]), STR_122(CODE[16]), 
		 -> STR_113(CODE[13]), STR_109(CODE[17]), STR_106(CODE[14]), STR_104(CODE[12]), 
		 -> STR_102(CODE[16]), STR_100(CODE[17]), STR_95(CODE[15]), STR_93(CODE[13]), 
		 -> STR_91(CODE[16]), STR_89(CODE[15]), STR_87(CODE[21]), STR_85(CODE[21]), 
		 -> STR_83(CODE[26]), STR_81(CODE[14]), STR_79(CODE[13]), STR_77(CODE[18]), 
		 -> STR_75(CODE[15]), STR_73(CODE[16]), STR_71(CODE[16]), STR_60(CODE[11]), 
		 -> STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), 
		 -> STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_176(CODE[7]), printf@c(BANK1[1]), STR_175(CODE[16]), STR_174(CODE[22]), 
		 -> STR_173(CODE[21]), STR_172(CODE[27]), STR_171(CODE[41]), STR_170(CODE[32]), 
		 -> STR_169(CODE[19]), STR_168(CODE[16]), STR_167(CODE[15]), STR_166(CODE[16]), 
		 -> STR_165(CODE[10]), STR_164(CODE[13]), STR_163(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2954
		 -> STR_162(CODE[13]), STR_161(CODE[31]), STR_160(CODE[26]), STR_159(CODE[28]), 
		 -> STR_158(CODE[426]), STR_156(CODE[30]), STR_155(CODE[46]), STR_154(CODE[39]), 
		 -> STR_153(CODE[62]), STR_152(CODE[55]), STR_151(CODE[470]), STR_149(CODE[2954]), 
		 -> STR_147(CODE[492]), STR_145(CODE[748]), STR_143(CODE[720]), STR_141(CODE[842]), 
		 -> STR_139(CODE[54]), STR_137(CODE[54]), STR_135(CODE[45]), STR_133(CODE[51]), 
		 -> STR_131(CODE[52]), STR_129(CODE[46]), STR_127(CODE[51]), STR_125(CODE[53]), 
		 -> STR_123(CODE[58]), STR_121(CODE[71]), STR_120(CODE[63]), STR_119(CODE[37]), 
		 -> STR_118(CODE[46]), STR_117(CODE[102]), STR_116(CODE[86]), STR_114(CODE[25]), 
		 -> STR_112(CODE[42]), STR_111(CODE[53]), STR_110(CODE[31]), STR_108(CODE[29]), 
		 -> STR_107(CODE[28]), STR_105(CODE[42]), STR_103(CODE[41]), STR_101(CODE[34]), 
		 -> STR_99(CODE[53]), STR_98(CODE[52]), STR_97(CODE[105]), STR_96(CODE[105]), 
		 -> STR_94(CODE[59]), STR_92(CODE[73]), STR_90(CODE[56]), STR_88(CODE[34]), 
		 -> STR_86(CODE[34]), STR_84(CODE[32]), STR_82(CODE[37]), STR_80(CODE[58]), 
		 -> STR_78(CODE[36]), STR_76(CODE[36]), STR_74(CODE[37]), STR_72(CODE[21]), 
		 -> STR_70(CODE[24]), STR_69(CODE[48]), STR_59(CODE[54]), STR_58(CODE[64]), 
		 -> STR_56(CODE[59]), STR_54(CODE[85]), STR_52(CODE[47]), STR_51(CODE[17]), 
		 -> STR_48(CODE[52]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_174(CODE[22]), STR_173(CODE[21]), STR_172(CODE[27]), STR_171(CODE[41]), 
		 -> STR_170(CODE[32]), STR_169(CODE[19]), STR_168(CODE[16]), STR_167(CODE[15]), 
		 -> STR_166(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_165(CODE[10]), STR_164(CODE[13]), STR_163(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_165(CODE[10]), STR_164(CODE[13]), STR_163(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_165(CODE[10]), STR_164(CODE[13]), STR_163(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_175(CODE[16]), STR_174(CODE[22]), STR_173(CODE[21]), STR_172(CODE[27]), 
		 -> STR_171(CODE[41]), STR_170(CODE[32]), STR_169(CODE[19]), STR_168(CODE[16]), 
		 -> STR_167(CODE[15]), STR_166(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR4_CallBack->_writeEnergyToEEPROMCallback
    _writeEnergyToEEPROMCallback->i2___flge
    i2_readDoubleFromEEPROM->i2_DATAEE_ReadByte
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_ringBufferPull

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  919454
                                             75 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  108900
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  553968
                                            184 BANK1      3     3      0
                                              0 BANK3      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       63    61      2  552777
                                            180 BANK1      4     2      2
                                             16 BANK2     59    59      0
                     _TMR5_StopTimer
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  133313
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  133313
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  108900
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4   11162
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5836
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  108900
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  108900
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19536
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   19041
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   12024
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10282
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9486
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    9194
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    4642
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     478
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    4552
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    2350
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    2350
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1508
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  204781
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
                           _INT0_ISR
                           _TMR4_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (14) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    2144
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0    2144
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _writeEnergyToEEPROMCallback *
 ---------------------------------------------------------------------------------
 (15) _writeEnergyToEEPROMCallback                         4     4      0    2144
                                             63 COMRAM     4     4      0
                           i2___flge
             i2_readDoubleFromEEPROM
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (16) i2_readDoubleFromEEPROM                             10     6      4     252
                                              2 COMRAM    10     6      4
                  i2_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (17) i2_DATAEE_ReadByte                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (14) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _HLVD_ISR                                            0     0      0     402
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (16) i2_writeDoubleToEEPROM                              12     6      6     402
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (17) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   41235
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   41235
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  160368
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  160368
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8  102802
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   48817
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   43573
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   26409
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   41378
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   38390
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2675
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    8209
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___flge                                           12     4      8    1456
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _writeEnergyToEEPROMCallback *
         i2___flge
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2_readDoubleFromEEPROM
           i2_DATAEE_ReadByte
         i2_writeDoubleToEEPROM
           i2_DATAEE_WriteByte
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      6      C6      12       77.3%
BITBANK2           100      0       0       9        0.0%
BANK2              100     4D      FE      10       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A7       8        0.0%
DATA                 0      0     3A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Nov 09 00:37:34 2018

                           ??i2_TMR7_StopTimer 0001                 ringBufferLUT@max_voltage_print 02BE  
                     getDeviceIDString@strings 0128                                   ___fldiv@aexp 0155  
                                 ___fldiv@bexp 0154                   __end_of_readDoubleFromEEPROM 8DE4  
             __end_of_TMR5_SetInterruptHandler 9952                  ??_writeEnergyToEEPROMCallback 0040  
                                 ___fldiv@sign 0149                    __size_ofi2_DATAEE_WriteByte 003A  
                                  __CFG_CP$OFF 000000                                             l61 97F0  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 99DA  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 9240                                    __CFG_LVP$ON 000000  
                          _saveSRAMMaxToEEPROM 6954                                            l401 90AE  
                                          l402 90AA                                            l411 8FE0  
                                          l412 9006                                            l404 90D8  
                                          l413 9004                                            l408 8FCA  
                                          l409 8FC6                                            l809 926A  
                                          _PR4 000FB6                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                    i2___fladd@a 005A  
                                  i2___fladd@b 0056                     ??_INT0_SetInterruptHandler 011A  
                                          _Ipk 01CB                                            _Vpk 0220  
                                          _abs 959A                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString 8C86  
                                          _sin 58B4                     currentMeasuredToPeak@Angle 009D  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                 __CFG_IDLOC0$ 000000                                     i2___xxtofl 718E  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                      ?i2_readDoubleFromEEPROM 0003                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                  _INT0_CallBack 971C  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                             ??_TMR7_StopTimer 0117                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0164                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_ZCD$OFF 000000                                   ___fltol@exp1 0181  
                                         ?_abs 0076                                           l1140 6A86  
                                         l2012 8612                                           l1300 47D6  
                                         l1141 6AEC                                           l2013 861C  
                                         l2005 85C4                                           l2021 896E  
                                         l1301 47EE                                           l1205 8288  
                                         l1142 6B52                                           l2014 862A  
                                         l2006 85D4                                           l2022 8966  
                                         l1302 4806                                           l1303 481E  
                                         l2104 7FE4                                           l2008 85F2  
                                         l2105 7FD8                                           l2009 85EA  
                                         l2025 8986                                           l1138 69BA  
                                         l2026 8990                                           l2018 894C  
                                         l1250 794A                                           l1139 6A20  
                                         l2107 8000                                           l2051 76B8  
                                         l2027 899E                                           l2019 8958  
                                         l2052 76FA                                           l1244 78EC  
                                         l2061 778C                                           l2053 772A  
                                         l2213 975A                                           l1501 0B0E  
                                         l2062 7780                                           l1246 792A  
                                         l2055 7768                                           l1511 0DCE  
                                         l1503 0D7C                                           l1431 00FA  
                                         l1247 790C                                           l2240 8658  
                                         l2056 7758                                           l2160 74FC  
                                         l2400 61F4                                           l1280 45C6  
                                         l1504 0B48                                           l1601 8ED4  
                                         l2073 952A                                           l2049 769A  
                                         l2153 7442                                           l1273 45F6  
                                         l1281 45DE                                           l1521 1020  
                                         l1513 0E20                                           l1441 02CE  
                                         l1433 0168                                           l1249 7978  
                                         l2066 7A26                                           l2250 8B6C  
                                         l2410 62FE                                           l2402 621C  
                                         l1282 4710                                           l1290 46C8  
                                         l1274 454E                                           l1506 0C04  
                                         l1450 031E                                           l1442 0288  
                                         l2067 7A5A                                           l2243 8698  
                                         l2155 746E                                           l2411 62E0  
                                         l2403 62CA                                           l1291 46E0  
                                         l1283 4638                                           l1275 4620  
                                         l1531 135C                                           l1523 10A0  
                                         l1515 0EA0                                           l1451 0336  
                                         l1427 006C                                           l1604 8DA2  
                                         l2068 7A98                                           l2244 86A6  
                                         l2156 74A8                                           l2420 639E  
                                         l2404 627A                                           l1284 4746  
                                         l1292 46F8                                           l1276 4566  
                                         l1452 034E                                           l1605 8DD2  
                                         l2069 7AD6                                           l2341 4FAE  
                                         l2253 8BA0                                           l2165 7530  
                                         l2157 74D0                                           l1701 1B72  
                                         l2421 63C8                                           l2405 62A2  
                                         l1293 4836                                           l1285 4650  
                                         l1277 457E                                           l1533 139E  
                                         l1525 1120                                           l1517 0F20  
                                         l1461 04D8                                           l1445 0436  
                                         l1453 0366                                           l1437 01CE  
                                         l1429 00A8                                           l2350 5072  
                                         l2342 4FAA                                           l2254 8BAE  
                                         l2166 7524                                           l2422 63D4  
                                         l1294 475E                                           l1286 4668  
                                         l1278 4596                                           l1446 0412  
                                         l1454 037E                                           l2351 5076  
                                         l2239 8664                                           l2159 750C  
                                         l2431 4904                                           l1711 1CC2  
                                         l2423 63D6                                           l2407 62C8  
                                         l1295 486C                                           l1287 4680  
                                         l1279 45AE                                           l1535 13E0  
                                         l1527 12D8                                           l1519 0FA0  
                                         l1471 0672                                           l1463 052A  
                                         l1447 03C6                                           l1455 0396  
                                         l1439 0232                                           l2344 500A  
                                         l2336 4F66                                           l2096 7F54  
                                         l2432 4900                                           l1632 60E6  
                                         l1640 3FB2                                           l1720 1D1C  
                                         l1712 1CDC                                           l2520 858C  
                                         l1296 4776                                           l1288 4698  
                                         l1456 03AE                                           l1448 0306  
                                         l2345 4FCE                                           l2337 4F62  
                                         l2249 8B78                                           l2433 4914  
                                         l2417 6336                                           l2521 8524  
                                         l2505 8AFA                                           l1297 478E  
                                         l1289 46B0                                           l1537 1422  
                                         l1529 131A                                           l1481 083E  
                                         l1473 06C4                                           l1465 057C  
                                         l1449 03F6                                           l2362 516C  
                                         l2354 50E4                                           l2098 7FC0  
                                         l2530 708C                                           l2450 4BB0  
                                         l2434 4932                                           l1642 4078  
                                         l1730 1E2A                                           l1650 15CE  
                                         l1562 8C44                                           l2522 8560  
                                         l2506 8B2A                                           l1298 47A6  
                                         l1571 8DEC                                           l2371 51C0  
                                         l2355 50AA                                           l2099 7FB0  
                                         l2531 70AA                                           l2451 4BCE  
                                         l2427 48C4                                           l1635 3E5E  
                                         l1731 1E42                                           l1723 1DE8  
                                         l1715 1D0A                                           l1707 1C50  
                                         l2419 637A                                           l1563 8C4E  
                                         l1299 47BE                                           l1539 14E2  
                                         l1491 0A34                                           l1483 08EA  
                                         l1475 0716                                           l1467 05CE  
                                         l1459 0486                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l2364 517C                                           l2348 5086  
                                         l2540 7120                                           l2428 48C0  
                                         l1636 3D66                                           l1740 2024  
                                         l1732 1F8C                                           l1724 1D54  
                                         l1716 1CFC                                           l2508 8B46  
                                         l1492 0A10                                           l1581 8E14  
                                         l1573 8DF4                                           l2349 5064  
                                         l2533 70BC                                           l2445 4B2A  
                                         l2429 48D4                                           l1629 5FF6  
                                         l1733 1EA4                                           l2509 8B36  
                                         l1485 0934                                           l1477 0768  
                                         l1469 0620                                           l2358 50CE  
                                         l2534 70B0                                           l2438 4AF2  
                                         l1742 20C2                                           l1726 1E02  
                                         l1662 18C0                                           l1646 15A8  
                                         l1590 9502                                           l1558 8C58  
                                         l1583 8E1C                                           l1575 8DFC  
                                         l2383 524C                                           l2367 51A0  
                                         l2359 50D2                                           l2447 4B6E  
                                         l2439 4AD4                                           l1639 3E2C  
                                         l1743 203E                                           l1735 1FA6  
                                         l1727 1DF4                                           l1719 1D2A  
                                         l1671 1790                                           l1655 1632  
                                         l1647 15BA                                           l1559 8C3A  
                                         l1495 0AC6                                           l1487 0982  
                                         l1479 07BA                                           l2384 5254  
                                         l2376 51E0                                           l2544 714A  
                                         l2536 70FA                                           l2448 4B8C  
                                         l1760 2184                                           l1736 1F98  
                                         l1680 1840                                           l1672 17B8  
                                         l1496 0A7C                                           l1577 8E04  
                                         l2385 5256                                           l2369 51B6  
                                         l2545 717C                                           l2537 70E2  
                                         l2529 707C                                           l1761 218C  
                                         l1753 20F4                                           l1729 1E26  
                                         l1681 183A                                           l1673 17C8  
                                         l1665 1788                                           l1657 177A  
                                         l1649 15D6                                           l2393 616E  
                                         l1489 09CA                                           l1762 21C4  
                                         l1738 2000                                           l1690 1942  
                                         l1666 192E                                           l1674 17C2  
                                         l1658 174E                                           l2394 616A  
                                         l1498 0AA2                                           l1579 8E0C  
                                         l2379 5226                                           l2539 712C  
                                         l1763 21AA                                           l1755 2114  
                                         l1691 1990                                           l1683 1880  
                                         l1659 16FA                                           l2475 8F84  
                                         l1772 2318                                           l1756 2136  
                                         l1748 20D8                                           l1684 1854  
                                         l2484 8E42                                           l2492 93B4  
                                         l2580 8494                                           l2476 8F7E  
                                         l1749 2080                                           l1693 19FE  
                                         l1677 181A                                           l1669 178C  
                                         l2397 61AE                                           l2485 8E38  
                                         l2493 93AA                                           l2581 84FE  
                                         l1774 22FA                                           l1758 2158  
                                         l1694 1A7E                                           l1686 1894  
                                         l1678 1830                                           l2398 61AA  
                                         l2574 934C                                           l2478 8F9E  
                         _ADCC_StartConversion 9998                                           l1775 21FE  
                                         l1759 2160                                           l1687 18A8  
                                         l2479 8F94                                           l1696 1AAC  
                                         l1688 18BA                                           l1777 2312  
                                         l1689 1FB0                                           l1697 1AF6  
                                         l1778 2282                                           l1698 1BD8  
                                         l2498 8CF6                                           l2499 8CF0  
                                         l2579 8506                                           l1992 818A  
                                         l1993 814C                                           l1986 80F8  
                                         l1995 81BE                                           l1987 80F2  
                                         l1989 813A                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 EF69                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                         _T4PR 000FB6                                   printf@tmpval 019D  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _PLLR 007230  
                                         _TMR4 000FB5                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM 8E86                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 __CFG_WRT0$ON 000000                                   __CFG_WRT1$ON 000000  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                 __CFG_WRT2$ON 000000                                   __CFG_WRT3$ON 000000  
                                 __CFG_WRT4$ON 000000                                   __CFG_WRT5$ON 000000  
                                         _Irms 01C3                                   __CFG_WRT6$ON 000000  
                                 __CFG_WRT7$ON 000000                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 8FC0                ??_ADCC_HasAccumulatorOverflowed 0001  
                                 __CFG_WRTB$ON 000000                                           _Vrms 01BF  
                                 __CFG_WRTC$ON 000000                                           abs@a 0076  
                                         _acos 8A18                                           _fabs 92BA  
               ringBufferLUT@max_current_print 02B6                                           _atan 6E04  
                                         _asin 55B0                                           _atoi 80F0  
                                         _main 81C8                           ?_saveSRAMMaxToEEPROM 0001  
                                         _line 024C                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 5BAE  
                                 i2___flneg@f1 002C                  __end_of_ADCC_ClearAccumulator 99F4  
                                __CFG_BOREN$ON 000000                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              _timer5ReloadVal 0244                                   i2___fltol@f1 006C  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 452A  
                 __end_of_EUSART2_Transmit_ISR 9442                                __end_ofi2_putch 99D2  
                   ??_TMR4_SetInterruptHandler 011A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                          _dimmingOnTimeCallback 99A6  
            i2readDoubleFromEEPROM@output_data 0007                readDoubleFromEEPROM@output_data 011D  
                     __size_ofi2_EUSART2_Write 004A                                          ??_abs 0078  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 0246  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                             __end_of_INT0_ISR 99C8                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0124                               __end_of_HLVD_ISR 93A0  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 97F6  
                     ?_terminal_textAttributes 01B2                              ??_TMR7_WriteTimer 0102  
                                        l20119 8186                                          l20333 0278  
                                        l20247 63C8                                          l20343 02C8  
                                        l20515 0BB4                                          l20517 0C04  
                                        l20509 0B7E                                          l20733 78DC  
                                        l20743 7902                                          l20915 8C72  
                                        l20499 0B38                                          l20917 8C7C  
                                        ?_acos 00A9                                          ?_fabs 0030  
                                        l18605 7B0E                                          l19471 1854  
                                        l19617 1DF4                                          l19547 1B44  
                                        l19539 1AF6                                          l19467 183A  
                                        l19567 1C54                                  ___fltol@sign1 0180  
                                        l19593 1CFC                                          l19691 2084  
                                        l19765 22FA                                          l19677 2042  
                                        l19933 8494                                          l19599 1D1C  
                                        ?_atan 007C                                          l19793 8B36  
                                        l19969 8EA0                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 5272                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 63F2  
                                        _ADREF 000F58                                __end_of___awdiv 8634  
                              __end_of___flneg 953C                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FCA0                                          STR_21 FFCC  
                                        STR_30 FF2E                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 E9FA                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FDC3                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FD53  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF53  
                                        STR_52 F7D9                                __end_of___awmod 89A8  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF3D                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FC5E                                          STR_54 F26B  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FEF1                                          STR_71 FE29  
                                        STR_47 FDF9                                          STR_64 FEBB  
                                        STR_72 FCB7                                          STR_48 F6DB  
                                        STR_80 F4BD                                          STR_56 F40D  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF69                                          STR_65 FEC9  
                                        STR_81 FE83                                          STR_73 FDD9  
                                        STR_66 FE75                                          STR_74 F9B1  
                                        STR_82 F98C                                          STR_90 F4F7  
                                        STR_58 F350                                          STR_75 FE48  
                                        STR_91 FE09                                          STR_67 FC8C  
                                        STR_83 FC12                                          STR_59 F59C  
                                        STR_68 FF73                                          STR_84 FAEC  
                                        STR_76 FA1F                                          STR_92 F2C0  
                                        STR_93 FF18                                          STR_77 FD30  
                                        STR_85 FCE1                                          STR_69 F7A9  
                                        STR_86 FA65                                          STR_78 F9FB  
                                        STR_94 F448                                          STR_79 FEFE  
                                        STR_95 FE66                                          STR_87 FCCC  
                                        STR_88 FA87                                          STR_96 F0DD  
                              __end_of___flmul 4BE4                                          STR_89 FE57  
                                        STR_97 F146                                          STR_98 F6A7  
                                        STR_99 F608                                __end_of___flsub 9132  
                              __end_of___fltol 8012                                __end_of___lldiv 86B8  
                                        ?_sqrt 006C                                ___awdiv@divisor 011F  
                              __end_of___llmod 8BC0                                          _T5CLK 000FC6  
                                        _T4CON 000FB7                                          u25001 7426  
                                        u24300 503A                                          u25021 7452  
                                        u24310 504A                                          u24320 504C  
                                        _T5CON 000FC3                                          u25300 8668  
                                        u24510 51DC                                          u24350 508E  
                                        u25230 7F72                                          u25150 7792  
                                        _T7CLK 000F33                                          u25080 7536  
                                        u26200 232A                                          _T6CON 000FB1  
                                        u25330 8B7C                                          u25410 7136  
                                        u26210 235A                                          u25235 7F68  
                                        u25500 16B8                                          u26300 8D18  
                                        _T4HLT 000FB8                                          u25270 7FEA  
                                        u25510 16C0                                 __CFG_DEBUG$OFF 000000  
                                        u26400 8DD2                                          u24560 5232  
                                        u24480 51C4                                          u25520 16E2  
                                        _T7CON 000F30                                          u26217 2350  
                                        u24730 4B26                                          u26170 21CC  
                                        u26330 84C6                                          u25507 16AE  
                                        u26307 8D0E                                          u24820 85F6  
                                        u26180 21E2                                          u25540 1732  
                                        u25460 15F8                                          u26420 8E7A  
                                        u27220 0B7E                                          u24670 4920  
                                        u25550 1770                                          u25470 1620  
                                        u27230 0BA6                                          u25527 16D8  
                                        u24760 4B7C                                          u24680 4A96  
                                        u25640 1876                                          u27240 0BB4  
                                        u26441 8C30                                          u24770 4B9A  
                                        u25490 167C                                          u25547 1728  
                                        u25467 15EE                                          u25820 1C92  
                                        u25740 1ABC                                          u25660 18F0  
                                        u25580 17F6                                          _T6HLT 000FB2  
                                        u24685 4A8C                                          u25557 1766  
                                        u25477 1616                                          u25910 1E10  
                                        u25750 1B08                                          u25590 17FC  
                                        u26295 927A                                          u25647 186C  
                                        u26455 92AA                                          u26296 927C  
                                        u24880 8972                                          u25920 1E20  
                                        u25497 1672                     _ADCC_ADTI_InterruptHandler 0234  
                                        u26730 6332                                          u26490 85A4  
               __end_ofi2_readDoubleFromEEPROM 8F74                                          u25667 18E6  
                                        u25587 17EC                                          u25780 1B44  
                                        u25880 1D38                                          u26760 6388  
                                        u26770 63AC                                          u27570 7902  
                                        u26940 02C8                                          u26890 0138  
                                        i1l245 007C                                          i1l423 943C  
                                        i1l247 009C                                          u27847 81DC  
                                        i1l424 9438                                          i1l249 00A6  
                                        _T4TMR 000FB5                                          i2l230 7EA6  
                                        i2l232 7EB2                                          i2l234 7ED2  
                                        _T4RST 000FBA                                          i2l411 9076  
                                        i2l412 909C                                          i2l236 7EDE  
                                        i2l228 7E9A                                          i1l660 967A  
                                        i2l413 909A                                          i2l430 8382  
                                        i2l238 7EE8                                          i2l431 83A4  
                                        i2l408 9060                                          i2l409 905C  
                                        i2l434 83A8                                          i2l436 83F8  
                                        _T6TMR 000FAF                                          i2l429 835E  
                                        _T6RST 000FB4                                          i2l734 9808  
                                        i2l809 931E                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 77A4  
                                        _TRISA 000F81                                          _TRISB 000F82  
                               ?_INT0_CallBack 0001                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a D549  
                           __end_ofsin@coeff_b D56D                                _TMR4_Initialize 953C  
                                        _Imeas 01C7                                  __CFG_PWRTE$ON 000000  
                                i2___fladd@grs 006B              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                               __end_of_TMR4_ISR 96AE  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 94AA  
                             __end_of_TMR6_ISR 9614                               __end_of_TMR7_ISR 9476  
                              _DATAEE_ReadByte 982C                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01B8  
                              __end_of_dpowers D4EF                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 7C32          i2writeDoubleToEEPROM@starting_address 0009  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 88BC  
                                        _errno 0240                          ?_ADCC_StartConversion 0001  
                                        _scale 3C06                                __end_of_isdigit 9762  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 991A                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 7C32                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address D517  
                _max_POS3P3_ADC_Result_address D515                               __end_ofi2___wmul 96D4  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 8522  
                              __end_of_strncpy 8B58                               __end_ofi2_fround 6954  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 02C6  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                                  i2printf@width 00AB  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf 312C  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 997C         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 996E                                _TMR5_Initialize 8ED6  
                               __CFG_CSWEN$OFF 000000                                __initialization 8400  
                            i2___lldiv@divisor 0005                                   __end_of_acos 8A86  
                                 __end_of_fabs 92F6                                   __end_of_atan 703A  
                                 __end_of_asin 58B4                                   __end_of_atoi 81C8  
                                 __end_of_main 8296                              i2___lldiv@counter 000D  
                             _max_Irms_address D519                                   __end_of_sqrt 5E76  
                                   i2printf@ap 0099                                     i2printf@cp 0095  
                        ??_writeDoubleToEEPROM 0121                          __end_of_ringBufferLUT 159A  
                               __CFG_SCANE$OFF 000000                          _max_POS3P3_ADC_Result 020C  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                                         ??_acos 005E  
                                       ??_fabs 0034                                         ??_atan 005E  
                                       ??_asin 005E                                         ??_atoi 011F  
                                       ??_main 02D7               __end_of_recoverSRAMMaxFromEEPROM 7414  
                     _TMR5_SetInterruptHandler 9944                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0125                                _TMR6_Initialize 94AA  
                           _TRIAC_Firing_Angle 00F2                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 8AF0  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01E1                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FD97                                         _ADLTHL 000F6A  
                                       STR_101 FA43                                         STR_102 FE19  
                                       STR_110 FB0C                                         STR_103 F93C  
                                       STR_111 F63D                                         STR_104 FF31  
                                       STR_112 F8E9                                         STR_120 F390  
                                       STR_113 FF0B                                         STR_105 F8BF  
                                       STR_121 F309                                         STR_106 FE91  
                                       STR_122 FDE9                                         STR_130 FCF6  
                                       STR_114 FC2C                                         _ADRESH 000F64  
                                       STR_115 FC45                                         STR_107 FBDB  
                                       STR_131 F70F                                         STR_123 F483  
                                       STR_124 FE9F                                         STR_132 FD1D  
                                       STR_140 FB85                                         STR_108 FB68  
                                       STR_116 F215                                         STR_109 FD64  
                                       STR_133 F776                                         STR_125 F672  
                                       STR_117 F1AF                                         STR_141 E0F7  
                                       STR_150 FFAB                                         STR_134 FEAD  
                                       STR_126 FD86                                         STR_142 FACB  
                                       STR_118 F836                                         _ADRESL 000F63  
                                       STR_119 F9D6                                         STR_135 F892  
                                       STR_127 F743                                         STR_151 EBE9  
                                       STR_143 E72D                                         STR_160 F7EE  
                                       STR_128 FF48                                         STR_136 FD75  
                                       STR_144 FAA9                                         STR_152 F52F  
                                       STR_161 FB2B                                         STR_129 F864  
                                       STR_137 F5D2                                         STR_153 F3CF  
                                       STR_145 E441                                         STR_162 FEE4  
                                       STR_138 FDA8                                         STR_146 FBA2  
                                       STR_154 F965                                         STR_170 F91C  
                                       STR_155 F808                                         STR_139 F566  
                                       STR_147 E9FD                                         STR_163 FF25  
                                       STR_171 F913                                         STR_148 FF7D  
                                       STR_156 FB4A                                         STR_164 FED7  
                                       STR_172 FBF7                                         STR_157 FF5E  
                                       STR_149 D56D                                         STR_165 FF73  
                                       STR_173 FCA2                                         STR_158 EDBF  
                                       STR_174 FC76                                         STR_166 FDB9  
                                       STR_175 FDB9                                         STR_159 FBBF  
                                       STR_167 FE39                                         STR_176 FF86  
                                       STR_168 FDC9                                         STR_177 FD42  
                                       STR_169 FD0A                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                   __end_of_Total_Energy_address D51D  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                           _readDoubleFromEEPROM 8D92  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       i1l1150 923C                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l2012 871A  
                                       i2l2013 8724                                         i2l2005 86CC  
                                       i2l2021 89DE                                         i2l2014 8732  
                                       i2l2006 86DC                                         i2l2022 89D6  
                                       i2l2040 7D90                                         i2l2104 80C2  
                                       i2l2008 86FA                                         i2l2105 80B6  
                                       i2l1161 31CA                                         i2l2009 86F2  
                                       i2l2025 89F6                                         i2l1154 3BD4  
                                       i2l1170 3714                                         i2l1162 32D4  
                                       i2l2026 8A00                                         i2l2018 89BC  
                                       i2l2107 80DE                                         i2l1171 35E6  
                                       i2l1155 3138                                         i2l2051 77E0  
                                       i2l2027 8A0E                                         i2l2019 89C8  
                                       i2l1180 39D8                                         i2l1172 34FE  
                                       i2l1156 31C2                                         i2l2052 7822  
                                       i2l2045 92E4                                         i2l1165 32DC  
                                       i2l2061 78B4                                         i2l2053 7852  
                                       i2l2213 97B6                                         i2l1174 363E  
                                       i2l1166 339A                                         i2l2062 78A8  
                                       i2l2039 7E28                                         i2l1183 39E0  
                                       i2l2055 7890                                         i2l2400 64A8  
                                       i2l1184 3BBE                                         i2l1176 38EE  
                                       i2l2240 87E0                                         i2l2056 7880  
                                       i2l2160 762E                                         i2l2073 9588  
                                       i2l1169 33A2                                         i2l2049 77C2  
                                       i2l2153 7574                                         i2l1601 9056  
                                       i2l2066 7B46                                         i2l2410 65B2  
                                       i2l2402 64D0                                         i2l2330 5A76  
                                       i2l2250 8BD2                                         i2l2067 7B7A  
                                       i2l2411 6594                                         i2l2403 657E  
                                       i2l2331 5B9C                                         i2l1187 3BC6  
                                       i2l1179 38F6                                         i2l2243 8820  
                                       i2l2155 75A0                                         i2l2068 7BB8  
                                       i2l2420 6652                                         i2l2404 652E  
                                       i2l2244 882E                                         i2l2156 75DA  
                                       i2l1604 8F34                                         i2l2341 52EC  
                                       i2l2069 7BF6                                         i2l2421 667C  
                                       i2l2405 6556                                         i2l2253 8C06  
                                       i2l2165 7662                                         i2l2157 7602  
                                       i2l1701 293A                                         i2l1605 8F62  
                                       i2l2350 53B0                                         i2l2342 52E8  
                                       i2l2422 6688                                         i2l2254 8C14  
                                       i2l2166 7656                                         i2l2351 53B4  
                                       i2l2431 4C54                                         i2l2423 668A  
                                       i2l2407 657C                                         i2l2239 87EC  
                                       i2l2159 763E                                         i2l1711 2A8C  
                                       i2l2344 5348                                         i2l2336 52A4  
                                       i2l2432 4C50                                         i2l2096 8032  
                                       i2l2328 58E8                                         i2l1632 6900  
                                       i2l1640 443A                                         i2l1720 2AE6  
                                       i2l1712 2AA6                                         i2l2345 530C  
                                       i2l2337 52A0                                         i2l2433 4C64  
                                       i2l2417 65EA                                         i2l2329 5A06  
                                       i2l2249 8BDE                                         i2l2362 54AA  
                                       i2l2354 5422                                         i2l2450 4F00  
                                       i2l2434 4C82                                         i2l2098 809E  
                                       i2l2530 71DC                                         i2l1642 44FA  
                                       i2l1730 2BF2                                         i2l1650 239C  
                                       i2l2371 54FE                                         i2l2355 53E8  
                                       i2l2451 4F1E                                         i2l2427 4C14  
                                       i2l2099 808E                                         i2l2531 71FA  
                                       i2l2419 662E                                         i2l1635 42EE  
                                       i2l1731 2C0A                                         i2l1723 2BB0  
                                       i2l1715 2AD4                                         i2l1707 2A1A  
                                       i2l2364 54BA                                         i2l2348 53C4  
                                       i2l2428 4C10                                         i2l2540 7270  
                                       i2l2460 5C00                                         i2l1636 41FE  
                                       i2l1740 2DEA                                         i2l1732 2D52  
                                       i2l1724 2B1E                                         i2l1716 2AC6  
                                       i2l2349 53A2                                         i2l2445 4E7A  
                                       i2l2429 4C24                                         i2l2533 720C  
                                       i2l2461 5C1A                                         i2l1629 6818  
                                       i2l1733 2C6C                                         i2l2358 540C  
                                       i2l2438 4E42                                         i2l2534 7200  
                                       i2l2550 7C7C                                         i2l1742 2E88  
                                       i2l1726 2BCA                                         i2l1662 268A  
                                       i2l1646 2376                                         i2l1831 95BA  
                                       i2l2383 558A                                         i2l2367 54DE  
                                       i2l2359 5410                                         i2l2447 4EBE  
                                       i2l2439 4E24                                         i2l2551 7C6A  
                                       i2l2471 5E3C                                         i2l2463 5C54  
                                       i2l1639 42BE                                         i2l1743 2E04  
                                       i2l1735 2D6C                                         i2l1727 2BBC  
                                       i2l1719 2AF4                                         i2l1671 255A  
                                       i2l1655 2400                                         i2l1647 2388  
                                       i2l2384 5592                                         i2l2376 551E  
                                       i2l2448 4EDC                                         i2l2544 729A  
                                       i2l2536 724A                                         i2l2464 5C80  
                                       i2l1760 2F4A                                         i2l1736 2D5E  
                                       i2l1680 260A                                         i2l1672 2582  
                                       i2l2385 5594                                         i2l2369 54F4  
                                       i2l2545 72CC                                         i2l2537 7232  
                                       i2l2529 71CC                                         i2l2553 7C9A  
                                       i2l2393 6422                                         i2l2465 5CDE  
                                       i2l1761 2F52                                         i2l1753 2EBA  
                                       i2l1729 2BEE                                         i2l1681 2604  
                                       i2l1673 2592                                         i2l1665 2552  
                                       i2l1657 2544                                         i2l1649 23A4  
                                       i2l2554 7D32                                         i2l2394 641E  
                                       i2l2466 5D88                                         i2l2458 5BF0  
                                       i2l1762 2F8A                                         i2l1738 2DC6  
                                       i2l1690 270C                                         i2l1666 26F8  
                                       i2l1674 258C                                         i2l1658 2518  
                                       i2l2379 5564                                         i2l2539 727C  
                                       i2l2467 5CE4                                         i2l1931 5732  
                                       i2l1763 2F70                                         i2l1755 2EDA  
                                       i2l1691 275A                                         i2l1683 264A  
                                       i2l1659 24C6                                         i2l2468 5D2A  
                                       i2l1932 5812                                         i2l1772 30DC  
                                       i2l1756 2EFC                                         i2l1748 2E9E  
                                       i2l1684 261E                                         i2l2397 6462  
                                       i2l2469 5D52                                         i2l1749 2E46  
                                       i2l1693 27C6                                         i2l1677 25E4  
                                       i2l1669 2556                                         i2l2398 645E  
                                       i2l1950 6EB4                                         i2l1774 30BE  
                                       i2l1758 2F1E                                         i2l1694 2844  
                                       i2l1686 265E                                         i2l1678 25FA  
                                       i2l2559 88DA                                         i2l1951 6FFC  
                                       i2l1775 2FC4                                         i2l1759 2F26  
                                       i2l1687 2672                                         i2l1696 2872  
                                       i2l1688 2684                                         i2l1953 7014  
                                       i2l1929 560A                                         i2l1777 30D6  
                                       i2l1689 2D76                                         i2l1697 28BE  
                                       i2l1778 3046                                         i2l1698 29A2  
                                       i2l1948 6E48                                         _RG7PPS 000E89  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                         i2l9669 9024  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _SBOREN 00725F                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 718E  
        __end_of_ADCC_DischargeSampleCapacitor 99E2         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor 99DA                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A                         ?_dimmingOnTimeCallback 0001  
        __end_of_ADCC_HasAccumulatorOverflowed 99BE         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed 99B2                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 8D3E                               __end_of__powers_ D493  
                                 i2_scale$4737 004D                __end_of_terminal_ringBufferPull 79F0  
                                       ___flge 79F0                              _ADCC_ThresholdISR 9614  
                                    ??___fladd 0131                                         ___wmul 95C4  
                                    ??___fldiv 0145                                      ??___awdiv 0121  
                                    ??___flneg 0129                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___flmul 015E  
                                    ??___flsub 0145                                      ??___fltol 017C  
                                    ??___lldiv 011F                                      ??___llmod 012C  
                           ?_ADCC_ThresholdISR 0001       writeEnergyToEEPROMCallback@current_value 0040  
                      __end_of_TMR4_Initialize 956C                       ??_terminal_setCursorHome 01B2  
                                       _fround 5E76                                         clear_0 8458  
                                       clear_1 8464                                         clear_2 8470  
                         _eusart2RxStringReady 07D8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                              ___awmod@counter 011B                                         _printf 159A  
                              ??_INT0_CallBack 0003                                         _strcat 8F74  
                                       _strchr 9330                        __end_of_DATAEE_ReadByte 9846  
                                       _strcmp 8E36                                         _strcpy 93A0  
                                       _strlen 8CE6                                 i2___awdiv@sign 000C  
                                       _strstr 8522                                         floor@i 007A  
                                       floor@x 0076                   getCauseOfResetString@strings 02D9  
                             _background_color 0249                                _TMR5_StartTimer 9A02  
                              _ADCC_Initialize 8C86                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 312C           __end_of_TMR4_DefaultInterruptHandler 9A12  
        __size_of_TMR4_DefaultInterruptHandler 0002                   _TMR4_DefaultInterruptHandler 9A10  
                               _PMD_Initialize 97BE                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 55B0                                      ??_isdigit 0117  
                            __end_ofi2___fldiv 66A6                              __end_ofi2___awdiv 873C  
                            __end_ofi2___flneg 959A                              __end_ofi2___awmod 8A18  
                            __end_ofi2___flmul 4F34                              __end_ofi2___flsub 917A  
                            __end_ofi2___fltol 80F0                        ??i2_writeDoubleToEEPROM 000B  
                            __end_ofi2___lldiv 8840                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod 8C26  
                                 __mediumconst D45E                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion 9A06                           _EUSART2_Transmit_ISR 940C  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR4_SetInterruptHandler@InterruptHandler 0117  
     INT0_SetInterruptHandler@InterruptHandler 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                        ?_readDoubleFromEEPROM 0119                                 i2___flmul@aexp 003D  
                               i2___flmul@bexp 0042                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 01B2  
                               i2___flmul@sign 003C                                 i2___flmul@temp 0047  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 0018  
                              _eusart2RxBuffer 0380                                     ___flge@ff1 0117  
                                   ___flge@ff2 011B                        __end_of_TMR5_Initialize 8F26  
                                 ___xxtofl@arg 0121                              __end_ofi2_isdigit 97BE  
                                 ___xxtofl@exp 0120                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00DE                              _SYSTEM_Initialize 93D6  
                                 ___xxtofl@val 0117           __end_of_TMR7_DefaultInterruptHandler 9A0C  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 9A0A  
                              _eusart2TxBuffer 0300                                     __accesstop 0060  
                      __end_of__initialization 8488                                 i2___fltol@exp1 0075  
                                    ?_INT0_ISR 0001                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 009B  
                           ?_SYSTEM_Initialize 0001                      __size_ofi2_TMR5_StopTimer 0004  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
                                   ___fltol@f1 0178                                _TMR5_WriteTimer 97F6  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 000E                      __end_of_ADCC_ThresholdISR 963C  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000A              terminal_ringBufferPull@charNumber 03C0  
                          __size_ofi2___xxtofl 0150                     __end_of_getMajorRevisionID 92BA  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 01B2                          __end_of_TMR4_CallBack 971C  
                                 __pidataBANK0 99E2                                   __pidataBANK1 9A16  
                                 __pidataBANK2 96D4                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR4_ISR 0001                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte 9240                                  __end_of_floor 7D44  
                                __end_of_frexp 8936                                  __end_of_scale 40AA  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 9928  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01B2                                    i2printf@len 0097  
                                  i2printf@exp 009F                                    i2printf@val 00A1  
                      __end_of_TMR6_Initialize 94DC                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 97DA                          _getCauseOfResetString 94DC  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 90EA  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 7548  
                  __size_of_EXT_INT_Initialize 001E                                     __div_to_l_ 767A  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                  ?_TMR4_DefaultInterruptHandler 0001  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 940C  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E3  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01BB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01E0                                  _eusart2TxTail 01E2  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 8D92  
                           __size_of_peakToRMS 024A                          _INT0_InterruptHandler 022B  
                                   ??_INT0_ISR 0003                                     ??_HLVD_ISR 0011  
            __size_of_recoverSRAMMaxFromEEPROM 0136                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                          _TMR4_InterruptHandler 0228  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 9662  
                        ??_ADCC_StopConversion 0001                               ??_FVR_Initialize 0117  
                   __end_ofi2_DATAEE_WriteByte 9330                          ringBufferLUT@arg_buff 02CE  
                               _peakToRMS$4722 00C1                                 _peakToRMS$4723 00B9  
                               _peakToRMS$4724 00BD                                    _Irms_offset 02F1  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2870 03C2                                        ?___wmul 0117  
                        _currentMeasuredToPeak 8840                        __end_of_TMR5_StartTimer 9A06  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 9944  
                                   ??_TMR4_ISR 0044                        __end_of_ADCC_Initialize 8CE6  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02BA                           _Total_Energy_address D51B  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler 9998  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler 998A  
                             ?_TMR4_Initialize 0001                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0182                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue 988E                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 9812            ringBufferLUT@max_voltage_print_3221 02C2  
          ringBufferLUT@max_voltage_print_3227 02CA                                        ?_strstr 0126  
                             ?_DATAEE_ReadByte 0117                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 91BE                                        _INT0PPS 000DF0  
                                      i2l11847 7C2E                                        i2l12775 667C  
                                      i2l15621 2AC6                                        i2l15705 2E08  
                                      i2l15627 2AE6                                        i2l15645 2BBC  
                                      i2l15719 2E4A                                        i2l15575 290C  
                                      i2l15567 28BE                                        i2l15495 2604  
                                      i2l15595 2A1E                                        i2l15499 261E  
                                      i2l15793 30BE              i2writeDoubleToEEPROM@input_double 0005  
              writeDoubleToEEPROM@input_double 011B                                        u1791_41 7584  
                                      u1789_41 7558                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 8400  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 008A  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                       ??_readDoubleFromEEPROM 011D                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE            __end_of_max_Temp_ADC_Result_address D513  
                  _max_Temp_ADC_Result_address D511                       _acquisitionTimerCallback 98C8  
                     __end_of_max_Irms_address D51B                        __end_of_TMR5_WriteTimer 9812  
             __size_of_terminal_textAttributes 0368                                        i2_scale 40AA  
                             ?_TMR5_Initialize 0001                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch 99C8  
            __size_of_INT0_SetInterruptHandler 000E                          i2DATAEE_ReadByte@bAdd 0001  
                    ?_INT0_SetInterruptHandler 0117                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset 98C8          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 98B6                              __end_of__npowers_ D4C7  
                                      __Hparam 0000            __end_of_writeEnergyToEEPROMCallback 87BE  
                  _writeEnergyToEEPROMCallback 873C                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$4503 0173             __end_of_max_FVR_ADC_Result_address D511  
                   _max_FVR_ADC_Result_address D50F                                        __Lparam 0000  
                            __end_of_getUserID 91BE                          _ADCC_ClearAccumulator 99EE  
                   ??_TMR5_SetInterruptHandler 011A                       ??_dimmingOffTimeCallback 0003  
                               _adc_error_flag 02F0                                __size_of___flge 0122  
                                      ___fladd 4F34                                        ___fldiv 613C  
                                      ___awdiv 85AE                                        ___flneg 950C  
                                      ___awmod 8936                                        ___flmul 4892  
                                      ___flsub 90EA                                        ___fltol 7F34  
                                      ___lldiv 8634                                __size_of___wmul 0028  
                                      ___llmod 8B58                         __end_of_FLASH_ReadByte 982C  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 9200  
                                      __pcinit 8400                              __end_of_eval_poly 7E44  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 81C8               i2readDoubleFromEEPROM@byte_index 000B  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 98DA  
                                      __ptext2 78CC                                        __ptext3 0000  
                                      __ptext4 98B6                                        __ptext5 452A  
                                      __ptext6 8AF0                                        __ptext7 8F74  
                                      __ptext8 98EA                                        __ptext9 8522  
                            __end_of_peakToRMS 6E04                                __size_of_printf 0DCE  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02B2  
                ?_ADCC_SetADTIInterruptHandler 0117                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                  i2_fround$4735 0051  
                                i2_fround$4736 004D                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers D50F  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers D4C7  
                        _OSCILLATOR_Initialize 97DA                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit 9740                                atan@val_squared 0089  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                   ??___xxtofl 011B                               ___awmod@dividend 0117  
                                    _T4CONbits 000FB7                       ??_PIN_MANAGER_Initialize 0117  
            __size_of_TMR4_SetInterruptHandler 000E                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR4_SetInterruptHandler 0117  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T4HLTbits 000FB8  
                  __end_of_saveSRAMMaxToEEPROM 6BBA                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02D3                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 0036                          i2EUSART2_Write@txData 0001  
                                      _strncmp 8492                                 __pintcode_body 7E44  
                                      _strncpy 8AF0                           end_of_initialization 8488  
                      __end_of_TMR7_WriteTimer 9688                 ??_TMR4_DefaultInterruptHandler 0001  
                      getDeviceIDString@F17550 02EB                         _terminal_setCursorHome 98DA  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                                    _T4RSTbits 000FBA                               ?_TMR7_Initialize 0001  
                         _max_POS12_ADC_Result 0208                                      i1u1147_20 920C  
                      ??_dimmingOnTimeCallback 0001                                      i1u1148_28 9210  
                                      int_func 7E44                            i2___wmul@multiplier 0001  
                                    _T6RSTbits 000FB4                                      i2u1050_40 8F62  
                                    i2u1027_45 932C                                      i2u1027_46 932E  
                      __size_of_TMR7_StopTimer 0006                                      i2u1411_40 4E76  
                               i2___xxtofl@arg 000F                                      i1u2747_28 9600  
                             i2_TMR5_StopTimer 99FE                                      i2u1405_40 4C70  
                                    i1u2749_28 9462                                      i2u1414_40 4ECC  
                                    i2u1406_40 4DE6                                      i2u1406_45 4DDC  
                                    i2u1415_40 4EEA                                 i2___xxtofl@exp 000E  
                               i2___xxtofl@val 0005                                      i2u1370_40 538A  
                                    i2u1514_40 65E6                                      i1u2778_28 0086  
                                    i2u1373_40 53CC                                      i2u1517_40 663C  
                                    i2u1606_40 7286                                      i2u1518_40 6660  
                                    i2u1368_40 5378                                      i2u1704_40 5A02  
                                    i2u1369_40 5388                                      i2u1705_40 5A04  
                                    i2u1801_40 87F0                                      i2u1721_40 86FE  
                                    i2u1730_40 99BA                                      i2u1394_40 5570  
                                    i2u1386_40 5502                                      i2u1804_40 8BE2  
                                    i2u1389_40 551A                                      i2u1557_40 6E74  
                                    i2u1558_40 6E76                                      i2u1814_40 31B4  
                                    i2u1727_40 89E2                                      i2u1592_40 8902  
                                    i2u1824_40 38E0                                      i2u1904_40 2640  
                                    i2u1904_47 2636                                      i2u1592_48 8904  
                                    i2u1817_40 32C6                                      i2u1594_40 8050  
                                    i2u1826_40 39CA                                      i2u1922_40 2A5C  
                                    i2u1914_40 2884                                      i2u1906_40 26BA  
                                    i2u1594_45 8046                                      i2u1906_47 26B0  
                                    i2u1819_40 338C                                      i2u1931_40 2BD8  
                                    i2u1915_40 28D0                                      i2u1828_40 3BB0  
                                    i2u1932_40 2BE8                                      i2u2741_40 969E  
                                    i2u1598_40 80C8                                      i2u1918_40 290C  
                                    i2u1960_40 30EE                                      i2u1928_40 2B02  
                                    i2u2743_48 9496                                      i2u1961_40 311E  
                                    i2u1961_47 3114                                      i2u1698_40 7C88  
                                    i2u2745_48 9628                                      i2u1890_40 2484  
                              ___lldiv@divisor 011B                                      i2u1890_47 247A  
                                    i2u1891_40 248C                                      i2u2682_48 972C  
                                    i2u1788_40 78BA                                      i2u1892_40 24AE  
                                    i2u1892_47 24A4                                      i2u1797_40 7668  
                                    i2u1957_40 2F92                                      i2u2684_48 9708  
                  __end_of_writeDoubleToEEPROM 8ED6                                      i2u1958_40 2FA8  
                                    i2u1894_40 24FC                                      i2u1886_40 23C6  
                                    i2u1894_47 24F2                                      i2u1886_47 23BC  
                                    i2u1895_40 253A                                      i2u1887_40 23EE  
                                    i2u1975_40 8398                                      i2u1895_47 2530  
                                    i2u1887_47 23E4                                      i2u1889_40 2448  
                                    i2u1889_47 243E                                      i2u1898_40 25C0  
                                    i2u2769_48 7EBC                                      i2u1898_47 25B6  
                                    i2u1899_40 25C6                                ___lldiv@counter 011F  
                           _EUSART2_Initialize 8A86                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 9058                                  ??_getDeviceID 0124  
                                      printf@c 01B1                                        printf@f 0182  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 72DE  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
                             ?_TMR5_StartTimer 0001                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$4725 00D6                 _ADCPostProcessingCallback$4726 00DA  
               _ADCPostProcessingCallback$4727 00C9                                        sqrt@grs 007B  
               _ADCPostProcessingCallback$4728 00CD                                        sqrt@exp 007F  
               _ADCPostProcessingCallback$4729 00D1                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 03C4                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 9936  
                        _TMR5_InterruptHandler 022E                               i2_TMR7_StopTimer 99F4  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
               __size_ofi2_writeDoubleToEEPROM 004C                  __end_ofi2_writeDoubleToEEPROM 9058  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 5272  
                                    i2___fldiv 63F2                                      i2___awdiv 86B8  
                                    i2___flneg 956C                                      i2___awmod 89A8  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 4BE4  
                                    i2___flsub 9132                                      i2___fltol 8012  
                                    i2___lldiv 87BE                                      i2___llmod 8BC0  
                     __end_of_DATAEE_WriteByte 927E                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 98FA  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 159A  
                                  ___flmul@grs 0165                                    printf@width 01AD  
                                 _EUSART2_Read 90A2                             i2___llmod@dividend 000E  
                              _HLVD_Initialize 990A                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit 97A0  
                            __size_of_INT0_ISR 000A                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0038                             _max_FVR_ADC_Result 0200  
              __size_of_dimmingOffTimeCallback 0018                                      _Avg_Power 01BB  
                 __end_of_INTERRUPT_Initialize 985E                       ??i2_readDoubleFromEEPROM 0007  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 7B12           __end_of_INT0_DefaultInterruptHandler 9A14  
        __size_of_INT0_DefaultInterruptHandler 0002                   _INT0_DefaultInterruptHandler 9A12  
                __end_of_terminal_printNewline 98FA                                 __end_of___wmul 95EC  
                            __size_of_TMR4_ISR 0026                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 9782                                 __end_of_fround 613C  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 2368                                  i2_printf$4738 0090  
                        __end_of_INT0_CallBack 9740                             _getMajorRevisionID 927E  
                               __end_of_strcat 8FC0                                 __end_of_strchr 9368  
                               __end_of_strcmp 8E86                                   i2printf@flag 00A9  
                               __end_of_strcpy 93D6                                 __end_of_strlen 8D3E  
                                 i2printf@fval 00A5                                 __end_of_strstr 85AE  
                                 i2printf@prec 00AD                              __size_ofi2___flge 0120  
                          start_initialization 8400                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 9A10          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 9A0E                __size_of_PIN_MANAGER_Initialize 00BC  
                          __end_of__tdiv_to_l_ 7548                                    __end_of_abs 95C4  
                                  __end_of_sin 5BAE                                      i2printf@c 00AF  
                                    i2printf@f 0088                        _terminal_textAttributes 452A  
                                   ?i2___fladd 0056  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                                     ?i2___fldiv 0013  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 002C                                     ?i2___awmod 0001  
                                   ?i2___flmul 0030                                     ?i2___flsub 0080  
                                   ?i2___fltol 006C                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                  __size_of_ADCC_StartConversion 000E  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                            __size_ofi2_printf 0DC4                          __end_of_EUSART2_Write 900C  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 028D                        __end_ofi2_EUSART2_Write 90A2  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                          DATAEE_ReadByte@bAdd 0117                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 01E4                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F0  
                                  __pdataBANK1 01E8                                    __pdataBANK2 02D9  
                                     ??_fround 0173                                  _ringBufferLUT 0000  
                   __end_of_EXT_INT_Initialize 97A0                 ??_terminal_textAttributesReset 01B4  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 018C  
            getCauseOfReset@return_reset_cause 0117         i2readDoubleFromEEPROM@starting_address 0003  
         readDoubleFromEEPROM@starting_address 0119                              _POS3P3_ADC_Result 01D7  
                               _TMR5_StopTimer 99FA                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                   __end_of_getMinorRevisionID 9662                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02F5                                     fround@prec 017B  
                               _eusart2RxCount 01DF                                  ?i2__div_to_l_ 0001  
                           i2_DATAEE_WriteByte 92F6                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4730 00AD  
                        TMR4_ISR@CountCallBack 0242                                      ___flmul@a 015A  
                                    ___flmul@b 0156                                      ___flsub@a 0141  
                                    ___flsub@b 013D               __end_of_INT0_SetInterruptHandler 996E  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 028C                                  __pcstackBANK3 03C0  
                       _dimmingOffTimeCallback 9876                              __size_of___xxtofl 0154  
                                 _isdigit$3742 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 991A                            ?i2_DATAEE_WriteByte 0001  
                          EUSART2_Write@txData 0117                         __size_of_TMR4_CallBack 0024  
                                 _load_on_time 0218                    __end_of_ADCC_StopConversion 9A0A  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                     ?i2_putch 0001                                      _asin$4731 00A5  
                                    _asin$4732 009D                                      _asin$4733 0099  
                                   sin@coeff_a D535                                     sin@coeff_b D55D  
                               _TMR7_StopTimer 99E8                          _TMR6_InterruptHandler 0237  
                                    __pnvBANK2 02FD                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 8296                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 9762  
                                __pmediumconst D45E                                       ?___fladd 0129  
             __end_of_TMR4_SetInterruptHandler 9960                                       ?___fldiv 013D  
                                     ?___awdiv 011D                           ??i2_DATAEE_WriteByte 0004  
                                    __ptext100 985E                                      __ptext101 99BE  
                                    __ptext110 8352                                      __ptext102 971C  
                                     ?___flneg 0125                                      __ptext111 2368  
                                    __ptext103 9A12                                      __ptext120 77A4  
                                    __ptext112 40AA                                      __ptext104 9876  
                                    __ptext121 96AE                                      __ptext113 99C8  
                                    __ptext105 97F6                                      __ptext130 55B0  
                                    __ptext122 8BC0                                      __ptext114 9058  
                                    __ptext106 9A02                                      __ptext131 5BAE  
                                    __ptext123 87BE                                      __ptext115 97A0  
                                    __ptext107 9368                                      __ptext140 718E  
                                    __ptext132 6E04                                      __ptext124 9614  
                                    __ptext116 66A6                                      __ptext108 900C  
                                    __ptext141 8012                                      __ptext133 92BA  
                                    __ptext125 9A14                                      __ptext117 89A8  
                                    __ptext109 92F6                                      __ptext150 988E  
                                    __ptext142 7B12                                      __ptext134 8840  
                                    __ptext126 312C                                      __ptext118 86B8  
                                    __ptext151 98A2                                      __ptext143 88BC  
                                    __ptext135 58B4                                      __ptext127 99F4  
                                    __ptext119 7548                                      __ptext152 0000  
                                    __ptext144 7D44                                      __ptext136 9132  
                                    __ptext128 6BBA                                      __ptext145 4BE4  
                                    __ptext137 956C                                      __ptext129 8A18  
                                    __ptext146 5272                                      __ptext138 63F2  
                                    __ptext147 959A                                      __ptext139 7C32  
                                    __ptext148 9A06                                      __ptext149 99B2  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler 9936                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ D493  
                              _getCauseOfReset 8DE4                                 ?_ringBufferLUT 01B4  
              __size_ofi2_readDoubleFromEEPROM 004E                                      _getUserID 917A  
                       __end_of_TMR5_StopTimer 99FE              _EUSART2_TxDefaultInterruptHandler 023D  
                                  __pintcodelo 0018                                    __tdiv_to_l_ 7414  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01D3                                       _BAUD2CON 000EF7  
                     __end_ofi2_TMR5_StopTimer 9A02           __size_of_writeEnergyToEEPROMCallback 0082  
                                     ?_isdigit 0001                                    _dev_on_time 021C  
                                    _eval_poly 7D44                      ??_terminal_textAttributes 01B4  
                i2DATAEE_WriteByte@GIEBitValue 0004                                      _max_Power 0210  
                                    _attribute 024B                                      _peakToRMS 6BBA  
                             __CFG_WDTE$NSLEEP 000000                       __size_of_TMR4_Initialize 0030  
                      ?_terminal_setCursorHome 0001                                      _hexpowers D4EF  
                       _heartbeatTimerCallback 9200                                 _dimming_period 00F0  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                       __size_of_DATAEE_ReadByte 001A  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                                     _T4CLKCON 000FB9                  __size_of_readDoubleFromEEPROM 0052  
                     _recoverSRAMMaxFromEEPROM 72DE                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 9846                         __end_of_TMR7_StopTimer 99EE  
                                     _T6CLKCON 000FB3         terminal_textAttributes@input_attribute 01B3  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                       _INT0_ISR 99BE  
                               ___wmul@product 011B                      currentMeasuredToPeak@Peak 00A1  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR 9368  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR0bits 000E1F  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _PIE0bits 000E29                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 99FA  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
               __size_of_dimmingOnTimeCallback 000C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                  __end_of_dimmingOnTimeCallback 99B2  
                          _max_Temp_ADC_Result 0204                                       _PIR0bits 000E33  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 77A4  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                                     _PIR8bits 000E3B                               ??_FLASH_ReadWord 011F  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 0050  
                            i2___fldiv@new_exp 0024                                       _TMR4_ISR 9688  
                                _TMR4_CallBack 96F8                                       _TMR5_ISR 9476  
                                     _TMR6_ISR 95EC                                       _TMR7_ISR 9442  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                ?_TMR5_StopTimer 0001  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 7B12  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 96AE                        __size_of_FVR_Initialize 0008  
                                   printf@flag 01AB                                     printf@fval 01A3  
                                   printf@prec 01AF                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome 98EA                              i2___awdiv@divisor 0009  
                                     i2_fround 66A6                 ??_INT0_DefaultInterruptHandler 0001  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
              i2writeDoubleToEEPROM@byte_index 000F                  writeDoubleToEEPROM@byte_index 0125  
                            i2___awdiv@counter 000B                    __end_of_ADCC_GetFilterValue 98A2  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                        DATAEE_WriteByte@bData 0119                                       i2_printf 2368  
                          __end_ofatan@coeff_a D535                            __end_ofatan@coeff_b D55D  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                            _max_Power_address D517                         i2_readDoubleFromEEPROM 8F26  
                                    copy_data0 8414                                      copy_data1 8446  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 0248                       _INT0_SetInterruptHandler 9960  
                            i2_DATAEE_ReadByte 985E                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100                             ?i2_DATAEE_ReadByte 0001  
             __size_of_terminal_ringBufferPull 0124                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 01E8  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset 8E36                __end_of_terminal_textAttributes 4892  
              i2writeDoubleToEEPROM@input_data 000B                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 98B6  
         __end_of_max_POS12_ADC_Result_address D515                   _max_POS12_ADC_Result_address D513  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 998A  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 997C  
                                     __Lrparam 0000                            ??i2_DATAEE_ReadByte 0003  
                              ??_ringBufferLUT 01B6                       __size_of_TMR7_Initialize 0054  
                               ?_TMR4_CallBack 0001                               _foreground_color 024A  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F1  
             __end_of_acquisitionTimerCallback 98DA                                    _fround$4501 0177  
                                  _fround$4502 0173                          __end_ofi2__tdiv_to_l_ 767A  
                     _TMR4_SetInterruptHandler 9952                       _TMR7_SetInterruptHandler 9928  
                        _TMR7_InterruptHandler 0231                             _ADC_Result_Scaling 0224  
      terminal_textAttributes@foreground_color 028C                                       ___xxtofl 703A  
                     __size_of_TMR5_StartTimer 0004                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 990A                               __size_of_isdigit 0022  
                    __end_of_max_Power_address D519                      __end_ofi2_DATAEE_ReadByte 9876  
                                     __ptext10 8492                                       __ptext11 8CE6  
                                     __ptext20 91BE                                       __ptext12 9330  
                                     __ptext21 9812                                       __ptext13 93A0  
                                     __ptext30 3C06                                       __ptext22 94DC  
                                     __ptext14 8E36                                       __ptext31 991A  
                                     __ptext23 80F0                                       __ptext15 917A  
                                     __ptext40 703A                                       __ptext32 8FC0  
                                     __ptext24 613C                                       __ptext16 963C  
                                     __ptext41 95C4                                       __ptext33 9740  
                                     __ptext25 99E8                                       __ptext17 927E  
                                     __ptext50 9240                                       __ptext42 8B58  
                                     __ptext34 5E76                                       __ptext26 99FA  
                                     __ptext18 8C26                                       __ptext51 79F0  
                                     __ptext43 8634                                       __ptext35 4892  
                                     __ptext27 90A2                                       __ptext19 9762  
                                     __ptext60 9936                                       __ptext52 72DE  
                                     __ptext44 7F34                                       __ptext36 8936  
                                     __ptext28 98FA                                       __ptext61 8ED6  
                                     __ptext53 8D92                                       __ptext45 90EA  
                                     __ptext37 85AE                                       __ptext29 159A  
                                     __ptext70 99D2                                       __ptext62 9944  
                                     __ptext54 982C                                       __ptext46 4F34  
                                     __ptext38 7414                                       __ptext71 9782  
                                     __ptext63 953C                                       __ptext55 8DE4  
                                     __ptext47 950C                                       __ptext39 767A  
                                     __ptext80 9A0A                                       __ptext72 9960  
                                     __ptext64 9952                                       __ptext56 93D6  
                                     __ptext48 6954                                       __ptext81 98C8  
                                     __ptext73 8A86                                       __ptext65 97BE  
                                     __ptext57 8D3E                                       __ptext49 8E86  
                                     __ptext82 9998                                       __ptext74 996E  
                                     __ptext66 8296                                       __ptext58 9928  
                                     __ptext91 9476                                       __ptext83 99DA  
                                     __ptext75 997C                                       __ptext67 97DA  
                                     __ptext59 94AA                                       __ptext92 9A0E  
                                     __ptext84 99EE                                       __ptext76 8C86  
                                     __ptext68 9846                                       __ptext93 99A6  
                                     __ptext85 9662                                       __ptext77 998A  
                                     __ptext69 990A                                       __ptext94 99FE  
                                     __ptext86 95EC                                       __ptext95 9688  
                                     __ptext87 9A0C                                       __ptext79 9442  
                                     __ptext96 96F8                                       __ptext88 9200  
                                     __ptext97 9A10                                       __ptext89 940C  
                                     __ptext98 873C                                       __ptext99 8F26  
                                     _sin$4734 0090                                       __powers_ D45F  
                          ringBufferLUT@userID 02D5                                _Temp_ADC_Offset 02F9  
                        i2_writeDoubleToEEPROM 900C                    DATAEE_WriteByte@GIEBitValue 011A  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                                     _max_Irms 0214                                 i2_isdigit$3742 0002  
                              _Temp_ADC_Result 01CF                                  __size_of_acos 006E  
                                __size_of_fabs 003C                              ??_TMR4_Initialize 011A  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 00CE  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 0ADA                           __end_ofi2__div_to_l_ 78CC  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                            ??_DATAEE_ReadByte 0119                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 029C  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 99A6  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0196  
                                    printf@len 0199                                      printf@exp 01A1  
                                    printf@val 01A7                                    atan@coeff_a D51D  
                                  atan@coeff_b D549                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 98EA                              i2___awmod@divisor 0003  
                      ?_dimmingOffTimeCallback 0001                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076                             _EXT_INT_Initialize 9782  
         __end_of_TMR6_DefaultInterruptHandler 9A0E          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 9A0C           __end_of_ADCC_DefaultInterruptHandler 9A16  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 9A14  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 963C                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02D1  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                                    _reset_cause 02FD  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01DB  
            __end_of_ADCPostProcessingCallback 3C06                                ??_TMR4_CallBack 0044  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                         __size_of_INT0_CallBack 0024  
                     __size_of_TMR7_WriteTimer 0026                   ?_writeEnergyToEEPROMCallback 0001  
                                 ?_getDeviceID 0122                                       printf@ap 019B  
                                     printf@cp 0197                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 950C                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 98A2                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                 __end_of_dimmingOffTimeCallback 988E  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 8352  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 7F34  
      __size_of_INTERRUPT_InterruptManagerHigh 7F2C                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 99D2                                    _printf$4504 0192  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01B4  
                             ___lldiv@quotient 0120                        i2DATAEE_WriteByte@bData 0003  
                            ?i2_TMR5_StopTimer 0001                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 8C26  
                           ??i2_TMR5_StopTimer 0001                                       strstr@s1 0126  
                                     strstr@s2 0128                                   _Total_Energy 00F6  
                   __size_ofi2_DATAEE_ReadByte 0018                         ?i2_writeDoubleToEEPROM 0005  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
                            ??_TMR5_StartTimer 0001                 ??_ADCC_SetADTIInterruptHandler 011A  
               __end_of_PIN_MANAGER_Initialize 8352                              ??_ADCC_Initialize 011A  
                       i2DATAEE_WriteByte@bAdd 0001                              i2__div_to_l_@exp1 000E  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull 78CC  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 0012                                   ___fladd@aexp 013A  
                                 ___fladd@bexp 013B                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 023A  
               __size_of_currentMeasuredToPeak 007C                               ??_TMR5_StopTimer 0117  
                __end_of_currentMeasuredToPeak 88BC                   __size_of_ADCC_StopConversion 0004  
