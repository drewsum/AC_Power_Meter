

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 06 13:59:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   159                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   160  0000                     
   161                           ; Version 1.45 (B)
   162                           ; Generated 30/01/2018 GMT
   163                           ; 
   164                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   165                           ; All rights reserved.
   166                           ; 
   167                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   168                           ; 
   169                           ; Redistribution and use in source and binary forms, with or without modification, are
   170                           ; permitted provided that the following conditions are met:
   171                           ; 
   172                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   173                           ;        conditions and the following disclaimer.
   174                           ; 
   175                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   176                           ;        of conditions and the following disclaimer in the documentation and/or other
   177                           ;        materials provided with the distribution.
   178                           ; 
   179                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   180                           ;        software without specific prior written permission.
   181                           ; 
   182                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   183                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   184                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   185                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   186                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   187                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   188                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   189                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   190                           ; 
   191                           ; 
   192                           ; Code-generator required, PIC18LF67K40 Definitions
   193                           ; 
   194                           ; SFR Addresses
   195  0000                     
   196                           	psect	idataBANK0
   197  018CD4                     __pidataBANK0:
   198                           	opt stack 0
   199                           
   200                           ;initializer for _dimming_period
   201  018CD4  7FEE               	dw	32750
   202                           
   203                           ;initializer for _TRIAC_Firing_Angle
   204                           ;main.c: 72: volatile double FVR_ADC_Result;
   205                           ;main.c: 73: volatile double AVSS_ADC_Result;
   206                           ;main.c: 74: volatile double ADC_Result_Scaling;
   207                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   208                           ;main.c: 76: volatile double POS12_ADC_Result;
   209                           ;main.c: 77: volatile double Temp_ADC_Result;
   210                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   211                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   212                           ;main.c: 80: volatile double Vpk;
   213                           ;main.c: 81: volatile double Ipk;
   214                           ;main.c: 82: volatile double Imeas;
   215                           ;main.c: 83: double Irms_offset = -0.113;
   216  018CD6  0000               	dw	0
   217  018CD8  42B4               	dw	17076
   218                           
   219                           	psect	idataBANK1
   220  018CF8                     __pidataBANK1:
   221                           	opt stack 0
   222                           
   223                           ;initializer for _next_channel
   224  018CF8  3C                 	db	60
   225                           
   226                           	psect	idataBANK2
   227  018A8A                     __pidataBANK2:
   228                           	opt stack 0
   229                           
   230                           ;initializer for getCauseOfResetString@strings
   231  018A8A  05                 	db	low STR_136
   232  018A8B  FE                 	db	high STR_136
   233  018A8C  75                 	db	low STR_137
   234  018A8D  FE                 	db	high STR_137
   235  018A8E  15                 	db	low STR_138
   236  018A8F  FE                 	db	high STR_138
   237  018A90  7A                 	db	low STR_139
   238  018A91  FD                 	db	high STR_139
   239  018A92  31                 	db	low (STR_141+9)
   240  018A93  FA                 	db	high (STR_141+9)
   241  018A94  28                 	db	low STR_141
   242  018A95  FA                 	db	high STR_141
   243  018A96  7B                 	db	low STR_142
   244  018A97  FC                 	db	high STR_142
   245  018A98  26                 	db	low STR_143
   246  018A99  FD                 	db	high STR_143
   247  018A9A  FA                 	db	low STR_144
   248  018A9B  FC                 	db	high STR_144
   249                           
   250                           ;initializer for getDeviceIDString@F17550
   251  018A9C  39                 	db	low STR_133
   252  018A9D  FF                 	db	high STR_133
   253  018A9E  05                 	db	low STR_134
   254  018A9F  FF                 	db	high STR_134
   255  018AA0  7C                 	db	low STR_68
   256  018AA1  FF                 	db	high STR_68
   257                           
   258                           ;initializer for _Irms_offset
   259  018AA2  6C8B               	dw	27787
   260  018AA4  BDE7               	dw	48615
   261                           
   262                           ;initializer for _Vpk_const
   263                           ;main.c: 72: volatile double FVR_ADC_Result;
   264                           ;main.c: 73: volatile double AVSS_ADC_Result;
   265                           ;main.c: 74: volatile double ADC_Result_Scaling;
   266                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   267                           ;main.c: 76: volatile double POS12_ADC_Result;
   268                           ;main.c: 77: volatile double Temp_ADC_Result;
   269                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   270  018AA6  B4A4               	dw	46244
   271  018AA8  4329               	dw	17193
   272                           
   273                           ;initializer for _Temp_ADC_Offset
   274                           ;main.c: 72: volatile double FVR_ADC_Result;
   275                           ;main.c: 73: volatile double AVSS_ADC_Result;
   276                           ;main.c: 74: volatile double ADC_Result_Scaling;
   277                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   278                           ;main.c: 76: volatile double POS12_ADC_Result;
   279                           ;main.c: 77: volatile double Temp_ADC_Result;
   280  018AAA  FF99               	dw	65433
   281  018AAC  441D               	dw	17437
   282                           
   283                           	psect	mediumconst
   284  00E890                     __pmediumconst:
   285                           	opt stack 0
   286  00E890  00                 	db	0
   287  00E891                     __powers_:
   288                           	opt stack 0
   289  00E891  0000               	dw	0
   290  00E893  3F80               	dw	16256
   291  00E895  0000               	dw	0
   292  00E897  4120               	dw	16672
   293  00E899  0000               	dw	0
   294  00E89B  42C8               	dw	17096
   295  00E89D  0000               	dw	0
   296  00E89F  447A               	dw	17530
   297  00E8A1  4000               	dw	16384
   298  00E8A3  461C               	dw	17948
   299  00E8A5  5000               	dw	20480
   300  00E8A7  47C3               	dw	18371
   301  00E8A9  2400               	dw	9216
   302  00E8AB  4974               	dw	18804
   303  00E8AD  9680               	dw	38528
   304  00E8AF  4B18               	dw	19224
   305  00E8B1  BC20               	dw	48160
   306  00E8B3  4CBE               	dw	19646
   307  00E8B5  6B28               	dw	27432
   308  00E8B7  4E6E               	dw	20078
   309  00E8B9  02F9               	dw	761
   310  00E8BB  5015               	dw	20501
   311  00E8BD  78EC               	dw	30956
   312  00E8BF  60AD               	dw	24749
   313  00E8C1  F2CA               	dw	62154
   314  00E8C3  7149               	dw	29001
   315  00E8C5                     __end_of__powers_:
   316                           	opt stack 0
   317  00E8C5                     __npowers_:
   318                           	opt stack 0
   319  00E8C5  0000               	dw	0
   320  00E8C7  3F80               	dw	16256
   321  00E8C9  CCCD               	dw	52429
   322  00E8CB  3DCC               	dw	15820
   323  00E8CD  D70A               	dw	55050
   324  00E8CF  3C23               	dw	15395
   325  00E8D1  126F               	dw	4719
   326  00E8D3  3A83               	dw	14979
   327  00E8D5  B717               	dw	46871
   328  00E8D7  38D1               	dw	14545
   329  00E8D9  C5AC               	dw	50604
   330  00E8DB  3727               	dw	14119
   331  00E8DD  37BD               	dw	14269
   332  00E8DF  3586               	dw	13702
   333  00E8E1  BF95               	dw	49045
   334  00E8E3  33D6               	dw	13270
   335  00E8E5  CC77               	dw	52343
   336  00E8E7  322B               	dw	12843
   337  00E8E9  705F               	dw	28767
   338  00E8EB  3089               	dw	12425
   339  00E8ED  E6FF               	dw	59135
   340  00E8EF  2EDB               	dw	11995
   341  00E8F1  E508               	dw	58632
   342  00E8F3  1E3C               	dw	7740
   343  00E8F5  4260               	dw	16992
   344  00E8F7  0DA2               	dw	3490
   345  00E8F9                     __end_of__npowers_:
   346                           	opt stack 0
   347  00E8F9                     _dpowers:
   348                           	opt stack 0
   349  00E8F9  0001               	dw	1
   350  00E8FB  0000               	dw	0
   351  00E8FD  000A               	dw	10
   352  00E8FF  0000               	dw	0
   353  00E901  0064               	dw	100
   354  00E903  0000               	dw	0
   355  00E905  03E8               	dw	1000
   356  00E907  0000               	dw	0
   357  00E909  2710               	dw	10000
   358  00E90B  0000               	dw	0
   359  00E90D  86A0               	dw	34464
   360  00E90F  0001               	dw	1
   361  00E911  4240               	dw	16960
   362  00E913  000F               	dw	15
   363  00E915  9680               	dw	38528
   364  00E917  0098               	dw	152
   365  00E919  E100               	dw	57600
   366  00E91B  05F5               	dw	1525
   367  00E91D  CA00               	dw	51712
   368  00E91F  3B9A               	dw	15258
   369  00E921                     __end_of_dpowers:
   370                           	opt stack 0
   371  00E921                     _hexpowers:
   372                           	opt stack 0
   373  00E921  0001               	dw	1
   374  00E923  0000               	dw	0
   375  00E925  0010               	dw	16
   376  00E927  0000               	dw	0
   377  00E929  0100               	dw	256
   378  00E92B  0000               	dw	0
   379  00E92D  1000               	dw	4096
   380  00E92F  0000               	dw	0
   381  00E931  0000               	dw	0
   382  00E933  0001               	dw	1
   383  00E935  0000               	dw	0
   384  00E937  0010               	dw	16
   385  00E939  0000               	dw	0
   386  00E93B  0100               	dw	256
   387  00E93D  0000               	dw	0
   388  00E93F  1000               	dw	4096
   389  00E941                     __end_of_hexpowers:
   390                           	opt stack 0
   391  00E941                     _max_Power_address:
   392                           	opt stack 0
   393  00E941  0004               	dw	4
   394  00E943                     __end_of_max_Power_address:
   395                           	opt stack 0
   396  00E943                     _max_Irms_address:
   397                           	opt stack 0
   398  00E943  0000               	dw	0
   399  00E945                     __end_of_max_Irms_address:
   400                           	opt stack 0
   401  00E945                     atan@coeff_a:
   402                           	opt stack 0
   403  00E945  3C06               	dw	15366
   404  00E947  4204               	dw	16900
   405  00E949  9F7D               	dw	40829
   406  00E94B  426A               	dw	17002
   407  00E94D  905C               	dw	36956
   408  00E94F  4201               	dw	16897
   409  00E951  4D60               	dw	19808
   410  00E953  40BB               	dw	16571
   411  00E955  EC51               	dw	60497
   412  00E957  3E47               	dw	15943
   413  00E959  8DDE               	dw	36318
   414  00E95B  BB1F               	dw	47903
   415  00E95D                     __end_ofatan@coeff_a:
   416                           	opt stack 0
   417  00E95D                     sin@coeff_a:
   418                           	opt stack 0
   419  00E95D  F3EC               	dw	62444
   420  00E95F  484A               	dw	18506
   421  00E961  9535               	dw	38197
   422  00E963  C795               	dw	51093
   423  00E965  C117               	dw	49431
   424  00E967  45DC               	dw	17884
   425  00E969  DBFD               	dw	56317
   426  00E96B  C36D               	dw	50029
   427  00E96D  B372               	dw	45938
   428  00E96F  4033               	dw	16435
   429  00E971                     __end_ofsin@coeff_a:
   430                           	opt stack 0
   431  00E971                     atan@coeff_b:
   432                           	opt stack 0
   433  00E971  3C06               	dw	15366
   434  00E973  4204               	dw	16900
   435  00E975  59C0               	dw	22976
   436  00E977  428B               	dw	17035
   437  00E979  0474               	dw	1140
   438  00E97B  4244               	dw	16964
   439  00E97D  9BF9               	dw	39929
   440  00E97F  414F               	dw	16719
   441  00E981  0000               	dw	0
   442  00E983  3F80               	dw	16256
   443  00E985                     __end_ofatan@coeff_b:
   444                           	opt stack 0
   445  00E985                     sin@coeff_b:
   446                           	opt stack 0
   447  00E985  342B               	dw	13355
   448  00E987  4801               	dw	18433
   449  00E989  9D7F               	dw	40319
   450  00E98B  45B0               	dw	17840
   451  00E98D  FFE7               	dw	65511
   452  00E98F  42D9               	dw	17113
   453  00E991  0000               	dw	0
   454  00E993  3F80               	dw	16256
   455  00E995                     __end_ofsin@coeff_b:
   456                           	opt stack 0
   457  00E995                     STR_127:
   458  00E995  4C                 	db	76	;'L'
   459  00E996  69                 	db	105	;'i'
   460  00E997  73                 	db	115	;'s'
   461  00E998  74                 	db	116	;'t'
   462  00E999  20                 	db	32
   463  00E99A  6F                 	db	111	;'o'
   464  00E99B  66                 	db	102	;'f'
   465  00E99C  20                 	db	32
   466  00E99D  73                 	db	115	;'s'
   467  00E99E  75                 	db	117	;'u'
   468  00E99F  70                 	db	112	;'p'
   469  00E9A0  70                 	db	112	;'p'
   470  00E9A1  6F                 	db	111	;'o'
   471  00E9A2  72                 	db	114	;'r'
   472  00E9A3  74                 	db	116	;'t'
   473  00E9A4  65                 	db	101	;'e'
   474  00E9A5  64                 	db	100	;'d'
   475  00E9A6  20                 	db	32
   476  00E9A7  63                 	db	99	;'c'
   477  00E9A8  6F                 	db	111	;'o'
   478  00E9A9  6D                 	db	109	;'m'
   479  00E9AA  6D                 	db	109	;'m'
   480  00E9AB  61                 	db	97	;'a'
   481  00E9AC  6E                 	db	110	;'n'
   482  00E9AD  64                 	db	100	;'d'
   483  00E9AE  73                 	db	115	;'s'
   484  00E9AF  3A                 	db	58	;':'
   485  00E9B0  0A                 	db	10
   486  00E9B1  0D                 	db	13
   487  00E9B2  44                 	db	68	;'D'
   488  00E9B3  65                 	db	101	;'e'
   489  00E9B4  76                 	db	118	;'v'
   490  00E9B5  69                 	db	105	;'i'
   491  00E9B6  63                 	db	99	;'c'
   492  00E9B7  65                 	db	101	;'e'
   493  00E9B8  20                 	db	32
   494  00E9B9  43                 	db	67	;'C'
   495  00E9BA  6F                 	db	111	;'o'
   496  00E9BB  6D                 	db	109	;'m'
   497  00E9BC  6D                 	db	109	;'m'
   498  00E9BD  61                 	db	97	;'a'
   499  00E9BE  6E                 	db	110	;'n'
   500  00E9BF  64                 	db	100	;'d'
   501  00E9C0  73                 	db	115	;'s'
   502  00E9C1  3A                 	db	58	;':'
   503  00E9C2  0A                 	db	10
   504  00E9C3  0D                 	db	13
   505  00E9C4  20                 	db	32
   506  00E9C5  20                 	db	32
   507  00E9C6  20                 	db	32
   508  00E9C7  52                 	db	82	;'R'
   509  00E9C8  65                 	db	101	;'e'
   510  00E9C9  73                 	db	115	;'s'
   511  00E9CA  65                 	db	101	;'e'
   512  00E9CB  74                 	db	116	;'t'
   513  00E9CC  3A                 	db	58	;':'
   514  00E9CD  20                 	db	32
   515  00E9CE  43                 	db	67	;'C'
   516  00E9CF  6C                 	db	108	;'l'
   517  00E9D0  65                 	db	101	;'e'
   518  00E9D1  61                 	db	97	;'a'
   519  00E9D2  72                 	db	114	;'r'
   520  00E9D3  73                 	db	115	;'s'
   521  00E9D4  20                 	db	32
   522  00E9D5  74                 	db	116	;'t'
   523  00E9D6  68                 	db	104	;'h'
   524  00E9D7  65                 	db	101	;'e'
   525  00E9D8  20                 	db	32
   526  00E9D9  74                 	db	116	;'t'
   527  00E9DA  65                 	db	101	;'e'
   528  00E9DB  72                 	db	114	;'r'
   529  00E9DC  6D                 	db	109	;'m'
   530  00E9DD  69                 	db	105	;'i'
   531  00E9DE  6E                 	db	110	;'n'
   532  00E9DF  61                 	db	97	;'a'
   533  00E9E0  6C                 	db	108	;'l'
   534  00E9E1  20                 	db	32
   535  00E9E2  61                 	db	97	;'a'
   536  00E9E3  6E                 	db	110	;'n'
   537  00E9E4  64                 	db	100	;'d'
   538  00E9E5  20                 	db	32
   539  00E9E6  72                 	db	114	;'r'
   540  00E9E7  65                 	db	101	;'e'
   541  00E9E8  73                 	db	115	;'s'
   542  00E9E9  65                 	db	101	;'e'
   543  00E9EA  74                 	db	116	;'t'
   544  00E9EB  73                 	db	115	;'s'
   545  00E9EC  20                 	db	32
   546  00E9ED  74                 	db	116	;'t'
   547  00E9EE  68                 	db	104	;'h'
   548  00E9EF  65                 	db	101	;'e'
   549  00E9F0  20                 	db	32
   550  00E9F1  6D                 	db	109	;'m'
   551  00E9F2  69                 	db	105	;'i'
   552  00E9F3  63                 	db	99	;'c'
   553  00E9F4  72                 	db	114	;'r'
   554  00E9F5  6F                 	db	111	;'o'
   555  00E9F6  0A                 	db	10
   556  00E9F7  0D                 	db	13
   557  00E9F8  20                 	db	32
   558  00E9F9  20                 	db	32
   559  00E9FA  20                 	db	32
   560  00E9FB  43                 	db	67	;'C'
   561  00E9FC  6C                 	db	108	;'l'
   562  00E9FD  65                 	db	101	;'e'
   563  00E9FE  61                 	db	97	;'a'
   564  00E9FF  72                 	db	114	;'r'
   565  00EA00  3A                 	db	58	;':'
   566  00EA01  20                 	db	32
   567  00EA02  43                 	db	67	;'C'
   568  00EA03  6C                 	db	108	;'l'
   569  00EA04  65                 	db	101	;'e'
   570  00EA05  61                 	db	97	;'a'
   571  00EA06  72                 	db	114	;'r'
   572  00EA07  73                 	db	115	;'s'
   573  00EA08  20                 	db	32
   574  00EA09  74                 	db	116	;'t'
   575  00EA0A  68                 	db	104	;'h'
   576  00EA0B  65                 	db	101	;'e'
   577  00EA0C  20                 	db	32
   578  00EA0D  74                 	db	116	;'t'
   579  00EA0E  65                 	db	101	;'e'
   580  00EA0F  72                 	db	114	;'r'
   581  00EA10  6D                 	db	109	;'m'
   582  00EA11  69                 	db	105	;'i'
   583  00EA12  6E                 	db	110	;'n'
   584  00EA13  61                 	db	97	;'a'
   585  00EA14  6C                 	db	108	;'l'
   586  00EA15  20                 	db	32
   587  00EA16  62                 	db	98	;'b'
   588  00EA17  75                 	db	117	;'u'
   589  00EA18  74                 	db	116	;'t'
   590  00EA19  20                 	db	32
   591  00EA1A  64                 	db	100	;'d'
   592  00EA1B  6F                 	db	111	;'o'
   593  00EA1C  65                 	db	101	;'e'
   594  00EA1D  73                 	db	115	;'s'
   595  00EA1E  6E                 	db	110	;'n'
   596  00EA1F  27                 	db	39
   597  00EA20  74                 	db	116	;'t'
   598  00EA21  20                 	db	32
   599  00EA22  72                 	db	114	;'r'
   600  00EA23  65                 	db	101	;'e'
   601  00EA24  73                 	db	115	;'s'
   602  00EA25  65                 	db	101	;'e'
   603  00EA26  74                 	db	116	;'t'
   604  00EA27  20                 	db	32
   605  00EA28  74                 	db	116	;'t'
   606  00EA29  68                 	db	104	;'h'
   607  00EA2A  65                 	db	101	;'e'
   608  00EA2B  20                 	db	32
   609  00EA2C  6D                 	db	109	;'m'
   610  00EA2D  69                 	db	105	;'i'
   611  00EA2E  63                 	db	99	;'c'
   612  00EA2F  72                 	db	114	;'r'
   613  00EA30  6F                 	db	111	;'o'
   614  00EA31  0A                 	db	10
   615  00EA32  0D                 	db	13
   616  00EA33  20                 	db	32
   617  00EA34  20                 	db	32
   618  00EA35  20                 	db	32
   619  00EA36  43                 	db	67	;'C'
   620  00EA37  61                 	db	97	;'a'
   621  00EA38  75                 	db	117	;'u'
   622  00EA39  73                 	db	115	;'s'
   623  00EA3A  65                 	db	101	;'e'
   624  00EA3B  20                 	db	32
   625  00EA3C  6F                 	db	111	;'o'
   626  00EA3D  66                 	db	102	;'f'
   627  00EA3E  20                 	db	32
   628  00EA3F  52                 	db	82	;'R'
   629  00EA40  65                 	db	101	;'e'
   630  00EA41  73                 	db	115	;'s'
   631  00EA42  65                 	db	101	;'e'
   632  00EA43  74                 	db	116	;'t'
   633  00EA44  3F                 	db	63	;'?'
   634  00EA45  3A                 	db	58	;':'
   635  00EA46  20                 	db	32
   636  00EA47  52                 	db	82	;'R'
   637  00EA48  65                 	db	101	;'e'
   638  00EA49  74                 	db	116	;'t'
   639  00EA4A  75                 	db	117	;'u'
   640  00EA4B  72                 	db	114	;'r'
   641  00EA4C  6E                 	db	110	;'n'
   642  00EA4D  73                 	db	115	;'s'
   643  00EA4E  20                 	db	32
   644  00EA4F  74                 	db	116	;'t'
   645  00EA50  68                 	db	104	;'h'
   646  00EA51  65                 	db	101	;'e'
   647  00EA52  20                 	db	32
   648  00EA53  63                 	db	99	;'c'
   649  00EA54  61                 	db	97	;'a'
   650  00EA55  75                 	db	117	;'u'
   651  00EA56  73                 	db	115	;'s'
   652  00EA57  65                 	db	101	;'e'
   653  00EA58  20                 	db	32
   654  00EA59  6F                 	db	111	;'o'
   655  00EA5A  66                 	db	102	;'f'
   656  00EA5B  20                 	db	32
   657  00EA5C  74                 	db	116	;'t'
   658  00EA5D  68                 	db	104	;'h'
   659  00EA5E  65                 	db	101	;'e'
   660  00EA5F  20                 	db	32
   661  00EA60  6D                 	db	109	;'m'
   662  00EA61  6F                 	db	111	;'o'
   663  00EA62  73                 	db	115	;'s'
   664  00EA63  74                 	db	116	;'t'
   665  00EA64  20                 	db	32
   666  00EA65  72                 	db	114	;'r'
   667  00EA66  65                 	db	101	;'e'
   668  00EA67  63                 	db	99	;'c'
   669  00EA68  65                 	db	101	;'e'
   670  00EA69  6E                 	db	110	;'n'
   671  00EA6A  74                 	db	116	;'t'
   672  00EA6B  20                 	db	32
   673  00EA6C  64                 	db	100	;'d'
   674  00EA6D  65                 	db	101	;'e'
   675  00EA6E  76                 	db	118	;'v'
   676  00EA6F  69                 	db	105	;'i'
   677  00EA70  63                 	db	99	;'c'
   678  00EA71  65                 	db	101	;'e'
   679  00EA72  20                 	db	32
   680  00EA73  72                 	db	114	;'r'
   681  00EA74  65                 	db	101	;'e'
   682  00EA75  73                 	db	115	;'s'
   683  00EA76  65                 	db	101	;'e'
   684  00EA77  74                 	db	116	;'t'
   685  00EA78  0A                 	db	10
   686  00EA79  0D                 	db	13
   687  00EA7A  20                 	db	32
   688  00EA7B  20                 	db	32
   689  00EA7C  20                 	db	32
   690  00EA7D  2A                 	db	42
   691  00EA7E  49                 	db	73	;'I'
   692  00EA7F  44                 	db	68	;'D'
   693  00EA80  4E                 	db	78	;'N'
   694  00EA81  3F                 	db	63	;'?'
   695  00EA82  3A                 	db	58	;':'
   696  00EA83  20                 	db	32
   697  00EA84  52                 	db	82	;'R'
   698  00EA85  65                 	db	101	;'e'
   699  00EA86  74                 	db	116	;'t'
   700  00EA87  75                 	db	117	;'u'
   701  00EA88  72                 	db	114	;'r'
   702  00EA89  6E                 	db	110	;'n'
   703  00EA8A  73                 	db	115	;'s'
   704  00EA8B  20                 	db	32
   705  00EA8C  64                 	db	100	;'d'
   706  00EA8D  65                 	db	101	;'e'
   707  00EA8E  76                 	db	118	;'v'
   708  00EA8F  69                 	db	105	;'i'
   709  00EA90  63                 	db	99	;'c'
   710  00EA91  65                 	db	101	;'e'
   711  00EA92  20                 	db	32
   712  00EA93  69                 	db	105	;'i'
   713  00EA94  64                 	db	100	;'d'
   714  00EA95  65                 	db	101	;'e'
   715  00EA96  6E                 	db	110	;'n'
   716  00EA97  74                 	db	116	;'t'
   717  00EA98  69                 	db	105	;'i'
   718  00EA99  66                 	db	102	;'f'
   719  00EA9A  69                 	db	105	;'i'
   720  00EA9B  63                 	db	99	;'c'
   721  00EA9C  61                 	db	97	;'a'
   722  00EA9D  74                 	db	116	;'t'
   723  00EA9E  69                 	db	105	;'i'
   724  00EA9F  6F                 	db	111	;'o'
   725  00EAA0  6E                 	db	110	;'n'
   726  00EAA1  20                 	db	32
   727  00EAA2  73                 	db	115	;'s'
   728  00EAA3  74                 	db	116	;'t'
   729  00EAA4  72                 	db	114	;'r'
   730  00EAA5  69                 	db	105	;'i'
   731  00EAA6  6E                 	db	110	;'n'
   732  00EAA7  67                 	db	103	;'g'
   733  00EAA8  0A                 	db	10
   734  00EAA9  0D                 	db	13
   735  00EAAA  20                 	db	32
   736  00EAAB  20                 	db	32
   737  00EAAC  20                 	db	32
   738  00EAAD  44                 	db	68	;'D'
   739  00EAAE  65                 	db	101	;'e'
   740  00EAAF  76                 	db	118	;'v'
   741  00EAB0  69                 	db	105	;'i'
   742  00EAB1  63                 	db	99	;'c'
   743  00EAB2  65                 	db	101	;'e'
   744  00EAB3  20                 	db	32
   745  00EAB4  4F                 	db	79	;'O'
   746  00EAB5  6E                 	db	110	;'n'
   747  00EAB6  20                 	db	32
   748  00EAB7  54                 	db	84	;'T'
   749  00EAB8  69                 	db	105	;'i'
   750  00EAB9  6D                 	db	109	;'m'
   751  00EABA  65                 	db	101	;'e'
   752  00EABB  3F                 	db	63	;'?'
   753  00EABC  3A                 	db	58	;':'
   754  00EABD  20                 	db	32
   755  00EABE  52                 	db	82	;'R'
   756  00EABF  65                 	db	101	;'e'
   757  00EAC0  74                 	db	116	;'t'
   758  00EAC1  75                 	db	117	;'u'
   759  00EAC2  72                 	db	114	;'r'
   760  00EAC3  6E                 	db	110	;'n'
   761  00EAC4  73                 	db	115	;'s'
   762  00EAC5  20                 	db	32
   763  00EAC6  64                 	db	100	;'d'
   764  00EAC7  65                 	db	101	;'e'
   765  00EAC8  76                 	db	118	;'v'
   766  00EAC9  69                 	db	105	;'i'
   767  00EACA  63                 	db	99	;'c'
   768  00EACB  65                 	db	101	;'e'
   769  00EACC  20                 	db	32
   770  00EACD  6F                 	db	111	;'o'
   771  00EACE  6E                 	db	110	;'n'
   772  00EACF  20                 	db	32
   773  00EAD0  74                 	db	116	;'t'
   774  00EAD1  69                 	db	105	;'i'
   775  00EAD2  6D                 	db	109	;'m'
   776  00EAD3  65                 	db	101	;'e'
   777  00EAD4  20                 	db	32
   778  00EAD5  73                 	db	115	;'s'
   779  00EAD6  69                 	db	105	;'i'
   780  00EAD7  6E                 	db	110	;'n'
   781  00EAD8  63                 	db	99	;'c'
   782  00EAD9  65                 	db	101	;'e'
   783  00EADA  20                 	db	32
   784  00EADB  6C                 	db	108	;'l'
   785  00EADC  61                 	db	97	;'a'
   786  00EADD  73                 	db	115	;'s'
   787  00EADE  74                 	db	116	;'t'
   788  00EADF  20                 	db	32
   789  00EAE0  64                 	db	100	;'d'
   790  00EAE1  65                 	db	101	;'e'
   791  00EAE2  76                 	db	118	;'v'
   792  00EAE3  69                 	db	105	;'i'
   793  00EAE4  63                 	db	99	;'c'
   794  00EAE5  65                 	db	101	;'e'
   795  00EAE6  20                 	db	32
   796  00EAE7  72                 	db	114	;'r'
   797  00EAE8  65                 	db	101	;'e'
   798  00EAE9  73                 	db	115	;'s'
   799  00EAEA  65                 	db	101	;'e'
   800  00EAEB  74                 	db	116	;'t'
   801  00EAEC  0A                 	db	10
   802  00EAED  0D                 	db	13
   803  00EAEE  20                 	db	32
   804  00EAEF  20                 	db	32
   805  00EAF0  20                 	db	32
   806  00EAF1  44                 	db	68	;'D'
   807  00EAF2  65                 	db	101	;'e'
   808  00EAF3  76                 	db	118	;'v'
   809  00EAF4  69                 	db	105	;'i'
   810  00EAF5  63                 	db	99	;'c'
   811  00EAF6  65                 	db	101	;'e'
   812  00EAF7  20                 	db	32
   813  00EAF8  49                 	db	73	;'I'
   814  00EAF9  44                 	db	68	;'D'
   815  00EAFA  3F                 	db	63	;'?'
   816  00EAFB  3A                 	db	58	;':'
   817  00EAFC  20                 	db	32
   818  00EAFD  52                 	db	82	;'R'
   819  00EAFE  65                 	db	101	;'e'
   820  00EAFF  74                 	db	116	;'t'
   821  00EB00  75                 	db	117	;'u'
   822  00EB01  72                 	db	114	;'r'
   823  00EB02  6E                 	db	110	;'n'
   824  00EB03  73                 	db	115	;'s'
   825  00EB04  20                 	db	32
   826  00EB05  64                 	db	100	;'d'
   827  00EB06  65                 	db	101	;'e'
   828  00EB07  76                 	db	118	;'v'
   829  00EB08  69                 	db	105	;'i'
   830  00EB09  63                 	db	99	;'c'
   831  00EB0A  65                 	db	101	;'e'
   832  00EB0B  20                 	db	32
   833  00EB0C  49                 	db	73	;'I'
   834  00EB0D  44                 	db	68	;'D'
   835  00EB0E  20                 	db	32
   836  00EB0F  61                 	db	97	;'a'
   837  00EB10  73                 	db	115	;'s'
   838  00EB11  20                 	db	32
   839  00EB12  70                 	db	112	;'p'
   840  00EB13  72                 	db	114	;'r'
   841  00EB14  65                 	db	101	;'e'
   842  00EB15  2D                 	db	45
   843  00EB16  70                 	db	112	;'p'
   844  00EB17  72                 	db	114	;'r'
   845  00EB18  6F                 	db	111	;'o'
   846  00EB19  67                 	db	103	;'g'
   847  00EB1A  72                 	db	114	;'r'
   848  00EB1B  61                 	db	97	;'a'
   849  00EB1C  6D                 	db	109	;'m'
   850  00EB1D  6D                 	db	109	;'m'
   851  00EB1E  65                 	db	101	;'e'
   852  00EB1F  64                 	db	100	;'d'
   853  00EB20  20                 	db	32
   854  00EB21  69                 	db	105	;'i'
   855  00EB22  6E                 	db	110	;'n'
   856  00EB23  20                 	db	32
   857  00EB24  66                 	db	102	;'f'
   858  00EB25  6C                 	db	108	;'l'
   859  00EB26  61                 	db	97	;'a'
   860  00EB27  73                 	db	115	;'s'
   861  00EB28  68                 	db	104	;'h'
   862  00EB29  20                 	db	32
   863  00EB2A  6D                 	db	109	;'m'
   864  00EB2B  65                 	db	101	;'e'
   865  00EB2C  6D                 	db	109	;'m'
   866  00EB2D  6F                 	db	111	;'o'
   867  00EB2E  72                 	db	114	;'r'
   868  00EB2F  79                 	db	121	;'y'
   869  00EB30  0A                 	db	10
   870  00EB31  0D                 	db	13
   871  00EB32  20                 	db	32
   872  00EB33  20                 	db	32
   873  00EB34  20                 	db	32
   874  00EB35  52                 	db	82	;'R'
   875  00EB36  65                 	db	101	;'e'
   876  00EB37  76                 	db	118	;'v'
   877  00EB38  69                 	db	105	;'i'
   878  00EB39  73                 	db	115	;'s'
   879  00EB3A  69                 	db	105	;'i'
   880  00EB3B  6F                 	db	111	;'o'
   881  00EB3C  6E                 	db	110	;'n'
   882  00EB3D  20                 	db	32
   883  00EB3E  49                 	db	73	;'I'
   884  00EB3F  44                 	db	68	;'D'
   885  00EB40  3F                 	db	63	;'?'
   886  00EB41  3A                 	db	58	;':'
   887  00EB42  20                 	db	32
   888  00EB43  52                 	db	82	;'R'
   889  00EB44  65                 	db	101	;'e'
   890  00EB45  74                 	db	116	;'t'
   891  00EB46  75                 	db	117	;'u'
   892  00EB47  72                 	db	114	;'r'
   893  00EB48  6E                 	db	110	;'n'
   894  00EB49  73                 	db	115	;'s'
   895  00EB4A  20                 	db	32
   896  00EB4B  64                 	db	100	;'d'
   897  00EB4C  65                 	db	101	;'e'
   898  00EB4D  76                 	db	118	;'v'
   899  00EB4E  69                 	db	105	;'i'
   900  00EB4F  63                 	db	99	;'c'
   901  00EB50  65                 	db	101	;'e'
   902  00EB51  20                 	db	32
   903  00EB52  73                 	db	115	;'s'
   904  00EB53  69                 	db	105	;'i'
   905  00EB54  6C                 	db	108	;'l'
   906  00EB55  69                 	db	105	;'i'
   907  00EB56  63                 	db	99	;'c'
   908  00EB57  6F                 	db	111	;'o'
   909  00EB58  6E                 	db	110	;'n'
   910  00EB59  20                 	db	32
   911  00EB5A  72                 	db	114	;'r'
   912  00EB5B  65                 	db	101	;'e'
   913  00EB5C  76                 	db	118	;'v'
   914  00EB5D  69                 	db	105	;'i'
   915  00EB5E  73                 	db	115	;'s'
   916  00EB5F  69                 	db	105	;'i'
   917  00EB60  6F                 	db	111	;'o'
   918  00EB61  6E                 	db	110	;'n'
   919  00EB62  20                 	db	32
   920  00EB63  49                 	db	73	;'I'
   921  00EB64  44                 	db	68	;'D'
   922  00EB65  20                 	db	32
   923  00EB66  61                 	db	97	;'a'
   924  00EB67  73                 	db	115	;'s'
   925  00EB68  20                 	db	32
   926  00EB69  70                 	db	112	;'p'
   927  00EB6A  72                 	db	114	;'r'
   928  00EB6B  65                 	db	101	;'e'
   929  00EB6C  2D                 	db	45
   930  00EB6D  70                 	db	112	;'p'
   931  00EB6E  72                 	db	114	;'r'
   932  00EB6F  6F                 	db	111	;'o'
   933  00EB70  67                 	db	103	;'g'
   934  00EB71  72                 	db	114	;'r'
   935  00EB72  61                 	db	97	;'a'
   936  00EB73  6D                 	db	109	;'m'
   937  00EB74  6D                 	db	109	;'m'
   938  00EB75  65                 	db	101	;'e'
   939  00EB76  64                 	db	100	;'d'
   940  00EB77  20                 	db	32
   941  00EB78  69                 	db	105	;'i'
   942  00EB79  6E                 	db	110	;'n'
   943  00EB7A  20                 	db	32
   944  00EB7B  66                 	db	102	;'f'
   945  00EB7C  6C                 	db	108	;'l'
   946  00EB7D  61                 	db	97	;'a'
   947  00EB7E  73                 	db	115	;'s'
   948  00EB7F  68                 	db	104	;'h'
   949  00EB80  20                 	db	32
   950  00EB81  6D                 	db	109	;'m'
   951  00EB82  65                 	db	101	;'e'
   952  00EB83  6D                 	db	109	;'m'
   953  00EB84  6F                 	db	111	;'o'
   954  00EB85  72                 	db	114	;'r'
   955  00EB86  79                 	db	121	;'y'
   956  00EB87  0A                 	db	10
   957  00EB88  0D                 	db	13
   958  00EB89  20                 	db	32
   959  00EB8A  20                 	db	32
   960  00EB8B  20                 	db	32
   961  00EB8C  55                 	db	85	;'U'
   962  00EB8D  73                 	db	115	;'s'
   963  00EB8E  65                 	db	101	;'e'
   964  00EB8F  72                 	db	114	;'r'
   965  00EB90  20                 	db	32
   966  00EB91  49                 	db	73	;'I'
   967  00EB92  44                 	db	68	;'D'
   968  00EB93  73                 	db	115	;'s'
   969  00EB94  3F                 	db	63	;'?'
   970  00EB95  3A                 	db	58	;':'
   971  00EB96  20                 	db	32
   972  00EB97  52                 	db	82	;'R'
   973  00EB98  65                 	db	101	;'e'
   974  00EB99  74                 	db	116	;'t'
   975  00EB9A  75                 	db	117	;'u'
   976  00EB9B  72                 	db	114	;'r'
   977  00EB9C  6E                 	db	110	;'n'
   978  00EB9D  73                 	db	115	;'s'
   979  00EB9E  20                 	db	32
   980  00EB9F  61                 	db	97	;'a'
   981  00EBA0  20                 	db	32
   982  00EBA1  6C                 	db	108	;'l'
   983  00EBA2  69                 	db	105	;'i'
   984  00EBA3  73                 	db	115	;'s'
   985  00EBA4  74                 	db	116	;'t'
   986  00EBA5  20                 	db	32
   987  00EBA6  6F                 	db	111	;'o'
   988  00EBA7  66                 	db	102	;'f'
   989  00EBA8  20                 	db	32
   990  00EBA9  75                 	db	117	;'u'
   991  00EBAA  73                 	db	115	;'s'
   992  00EBAB  65                 	db	101	;'e'
   993  00EBAC  72                 	db	114	;'r'
   994  00EBAD  20                 	db	32
   995  00EBAE  49                 	db	73	;'I'
   996  00EBAF  44                 	db	68	;'D'
   997  00EBB0  73                 	db	115	;'s'
   998  00EBB1  20                 	db	32
   999  00EBB2  28                 	db	40
  1000  00EBB3  64                 	db	100	;'d'
  1001  00EBB4  69                 	db	105	;'i'
  1002  00EBB5  73                 	db	115	;'s'
  1003  00EBB6  70                 	db	112	;'p'
  1004  00EBB7  6C                 	db	108	;'l'
  1005  00EBB8  61                 	db	97	;'a'
  1006  00EBB9  79                 	db	121	;'y'
  1007  00EBBA  65                 	db	101	;'e'
  1008  00EBBB  64                 	db	100	;'d'
  1009  00EBBC  20                 	db	32
  1010  00EBBD  69                 	db	105	;'i'
  1011  00EBBE  6E                 	db	110	;'n'
  1012  00EBBF  20                 	db	32
  1013  00EBC0  68                 	db	104	;'h'
  1014  00EBC1  65                 	db	101	;'e'
  1015  00EBC2  78                 	db	120	;'x'
  1016  00EBC3  29                 	db	41
  1017  00EBC4  20                 	db	32
  1018  00EBC5  61                 	db	97	;'a'
  1019  00EBC6  73                 	db	115	;'s'
  1020  00EBC7  20                 	db	32
  1021  00EBC8  73                 	db	115	;'s'
  1022  00EBC9  74                 	db	116	;'t'
  1023  00EBCA  6F                 	db	111	;'o'
  1024  00EBCB  72                 	db	114	;'r'
  1025  00EBCC  65                 	db	101	;'e'
  1026  00EBCD  64                 	db	100	;'d'
  1027  00EBCE  20                 	db	32
  1028  00EBCF  69                 	db	105	;'i'
  1029  00EBD0  6E                 	db	110	;'n'
  1030  00EBD1  20                 	db	32
  1031  00EBD2  66                 	db	102	;'f'
  1032  00EBD3  6C                 	db	108	;'l'
  1033  00EBD4  61                 	db	97	;'a'
  1034  00EBD5  73                 	db	115	;'s'
  1035  00EBD6  68                 	db	104	;'h'
  1036  00EBD7  20                 	db	32
  1037  00EBD8  6D                 	db	109	;'m'
  1038  00EBD9  65                 	db	101	;'e'
  1039  00EBDA  6D                 	db	109	;'m'
  1040  00EBDB  6F                 	db	111	;'o'
  1041  00EBDC  72                 	db	114	;'r'
  1042  00EBDD  79                 	db	121	;'y'
  1043  00EBDE  0A                 	db	10
  1044  00EBDF  0D                 	db	13
  1045  00EBE0  20                 	db	32
  1046  00EBE1  20                 	db	32
  1047  00EBE2  20                 	db	32
  1048  00EBE3  41                 	db	65	;'A'
  1049  00EBE4  44                 	db	68	;'D'
  1050  00EBE5  43                 	db	67	;'C'
  1051  00EBE6  20                 	db	32
  1052  00EBE7  45                 	db	69	;'E'
  1053  00EBE8  72                 	db	114	;'r'
  1054  00EBE9  72                 	db	114	;'r'
  1055  00EBEA  6F                 	db	111	;'o'
  1056  00EBEB  72                 	db	114	;'r'
  1057  00EBEC  3F                 	db	63	;'?'
  1058  00EBED  3A                 	db	58	;':'
  1059  00EBEE  20                 	db	32
  1060  00EBEF  52                 	db	82	;'R'
  1061  00EBF0  65                 	db	101	;'e'
  1062  00EBF1  74                 	db	116	;'t'
  1063  00EBF2  75                 	db	117	;'u'
  1064  00EBF3  72                 	db	114	;'r'
  1065  00EBF4  6E                 	db	110	;'n'
  1066  00EBF5  73                 	db	115	;'s'
  1067  00EBF6  20                 	db	32
  1068  00EBF7  74                 	db	116	;'t'
  1069  00EBF8  68                 	db	104	;'h'
  1070  00EBF9  65                 	db	101	;'e'
  1071  00EBFA  20                 	db	32
  1072  00EBFB  63                 	db	99	;'c'
  1073  00EBFC  61                 	db	97	;'a'
  1074  00EBFD  75                 	db	117	;'u'
  1075  00EBFE  73                 	db	115	;'s'
  1076  00EBFF  65                 	db	101	;'e'
  1077  00EC00  20                 	db	32
  1078  00EC01  6F                 	db	111	;'o'
  1079  00EC02  66                 	db	102	;'f'
  1080  00EC03  20                 	db	32
  1081  00EC04  61                 	db	97	;'a'
  1082  00EC05  6E                 	db	110	;'n'
  1083  00EC06  20                 	db	32
  1084  00EC07  41                 	db	65	;'A'
  1085  00EC08  44                 	db	68	;'D'
  1086  00EC09  43                 	db	67	;'C'
  1087  00EC0A  20                 	db	32
  1088  00EC0B  65                 	db	101	;'e'
  1089  00EC0C  72                 	db	114	;'r'
  1090  00EC0D  72                 	db	114	;'r'
  1091  00EC0E  6F                 	db	111	;'o'
  1092  00EC0F  72                 	db	114	;'r'
  1093  00EC10  20                 	db	32
  1094  00EC11  69                 	db	105	;'i'
  1095  00EC12  66                 	db	102	;'f'
  1096  00EC13  20                 	db	32
  1097  00EC14  61                 	db	97	;'a'
  1098  00EC15  6E                 	db	110	;'n'
  1099  00EC16  20                 	db	32
  1100  00EC17  65                 	db	101	;'e'
  1101  00EC18  72                 	db	114	;'r'
  1102  00EC19  72                 	db	114	;'r'
  1103  00EC1A  6F                 	db	111	;'o'
  1104  00EC1B  72                 	db	114	;'r'
  1105  00EC1C  20                 	db	32
  1106  00EC1D  6F                 	db	111	;'o'
  1107  00EC1E  63                 	db	99	;'c'
  1108  00EC1F  63                 	db	99	;'c'
  1109  00EC20  75                 	db	117	;'u'
  1110  00EC21  72                 	db	114	;'r'
  1111  00EC22  72                 	db	114	;'r'
  1112  00EC23  65                 	db	101	;'e'
  1113  00EC24  64                 	db	100	;'d'
  1114  00EC25  0A                 	db	10
  1115  00EC26  0D                 	db	13
  1116  00EC27  20                 	db	32
  1117  00EC28  20                 	db	32
  1118  00EC29  20                 	db	32
  1119  00EC2A  43                 	db	67	;'C'
  1120  00EC2B  6C                 	db	108	;'l'
  1121  00EC2C  65                 	db	101	;'e'
  1122  00EC2D  61                 	db	97	;'a'
  1123  00EC2E  72                 	db	114	;'r'
  1124  00EC2F  20                 	db	32
  1125  00EC30  41                 	db	65	;'A'
  1126  00EC31  44                 	db	68	;'D'
  1127  00EC32  43                 	db	67	;'C'
  1128  00EC33  20                 	db	32
  1129  00EC34  45                 	db	69	;'E'
  1130  00EC35  72                 	db	114	;'r'
  1131  00EC36  72                 	db	114	;'r'
  1132  00EC37  6F                 	db	111	;'o'
  1133  00EC38  72                 	db	114	;'r'
  1134  00EC39  3A                 	db	58	;':'
  1135  00EC3A  20                 	db	32
  1136  00EC3B  43                 	db	67	;'C'
  1137  00EC3C  6C                 	db	108	;'l'
  1138  00EC3D  65                 	db	101	;'e'
  1139  00EC3E  61                 	db	97	;'a'
  1140  00EC3F  72                 	db	114	;'r'
  1141  00EC40  73                 	db	115	;'s'
  1142  00EC41  20                 	db	32
  1143  00EC42  74                 	db	116	;'t'
  1144  00EC43  68                 	db	104	;'h'
  1145  00EC44  65                 	db	101	;'e'
  1146  00EC45  20                 	db	32
  1147  00EC46  41                 	db	65	;'A'
  1148  00EC47  44                 	db	68	;'D'
  1149  00EC48  43                 	db	67	;'C'
  1150  00EC49  20                 	db	32
  1151  00EC4A  65                 	db	101	;'e'
  1152  00EC4B  72                 	db	114	;'r'
  1153  00EC4C  72                 	db	114	;'r'
  1154  00EC4D  6F                 	db	111	;'o'
  1155  00EC4E  72                 	db	114	;'r'
  1156  00EC4F  20                 	db	32
  1157  00EC50  61                 	db	97	;'a'
  1158  00EC51  6E                 	db	110	;'n'
  1159  00EC52  64                 	db	100	;'d'
  1160  00EC53  20                 	db	32
  1161  00EC54  72                 	db	114	;'r'
  1162  00EC55  65                 	db	101	;'e'
  1163  00EC56  73                 	db	115	;'s'
  1164  00EC57  75                 	db	117	;'u'
  1165  00EC58  6D                 	db	109	;'m'
  1166  00EC59  65                 	db	101	;'e'
  1167  00EC5A  73                 	db	115	;'s'
  1168  00EC5B  20                 	db	32
  1169  00EC5C  41                 	db	65	;'A'
  1170  00EC5D  44                 	db	68	;'D'
  1171  00EC5E  43                 	db	67	;'C'
  1172  00EC5F  20                 	db	32
  1173  00EC60  63                 	db	99	;'c'
  1174  00EC61  6F                 	db	111	;'o'
  1175  00EC62  6E                 	db	110	;'n'
  1176  00EC63  76                 	db	118	;'v'
  1177  00EC64  65                 	db	101	;'e'
  1178  00EC65  72                 	db	114	;'r'
  1179  00EC66  73                 	db	115	;'s'
  1180  00EC67  69                 	db	105	;'i'
  1181  00EC68  6F                 	db	111	;'o'
  1182  00EC69  6E                 	db	110	;'n'
  1183  00EC6A  73                 	db	115	;'s'
  1184  00EC6B  0A                 	db	10
  1185  00EC6C  0D                 	db	13
  1186  00EC6D  20                 	db	32
  1187  00EC6E  20                 	db	32
  1188  00EC6F  20                 	db	32
  1189  00EC70  56                 	db	86	;'V'
  1190  00EC71  43                 	db	67	;'C'
  1191  00EC72  43                 	db	67	;'C'
  1192  00EC73  20                 	db	32
  1193  00EC74  4F                 	db	79	;'O'
  1194  00EC75  76                 	db	118	;'v'
  1195  00EC76  65                 	db	101	;'e'
  1196  00EC77  72                 	db	114	;'r'
  1197  00EC78  76                 	db	118	;'v'
  1198  00EC79  6F                 	db	111	;'o'
  1199  00EC7A  6C                 	db	108	;'l'
  1200  00EC7B  74                 	db	116	;'t'
  1201  00EC7C  61                 	db	97	;'a'
  1202  00EC7D  67                 	db	103	;'g'
  1203  00EC7E  65                 	db	101	;'e'
  1204  00EC7F  3F                 	db	63	;'?'
  1205  00EC80  3A                 	db	58	;':'
  1206  00EC81  20                 	db	32
  1207  00EC82  53                 	db	83	;'S'
  1208  00EC83  74                 	db	116	;'t'
  1209  00EC84  61                 	db	97	;'a'
  1210  00EC85  74                 	db	116	;'t'
  1211  00EC86  65                 	db	101	;'e'
  1212  00EC87  73                 	db	115	;'s'
  1213  00EC88  20                 	db	32
  1214  00EC89  69                 	db	105	;'i'
  1215  00EC8A  66                 	db	102	;'f'
  1216  00EC8B  20                 	db	32
  1217  00EC8C  61                 	db	97	;'a'
  1218  00EC8D  20                 	db	32
  1219  00EC8E  56                 	db	86	;'V'
  1220  00EC8F  43                 	db	67	;'C'
  1221  00EC90  43                 	db	67	;'C'
  1222  00EC91  20                 	db	32
  1223  00EC92  6F                 	db	111	;'o'
  1224  00EC93  76                 	db	118	;'v'
  1225  00EC94  65                 	db	101	;'e'
  1226  00EC95  72                 	db	114	;'r'
  1227  00EC96  76                 	db	118	;'v'
  1228  00EC97  6F                 	db	111	;'o'
  1229  00EC98  6C                 	db	108	;'l'
  1230  00EC99  74                 	db	116	;'t'
  1231  00EC9A  61                 	db	97	;'a'
  1232  00EC9B  67                 	db	103	;'g'
  1233  00EC9C  65                 	db	101	;'e'
  1234  00EC9D  20                 	db	32
  1235  00EC9E  63                 	db	99	;'c'
  1236  00EC9F  6F                 	db	111	;'o'
  1237  00ECA0  6E                 	db	110	;'n'
  1238  00ECA1  64                 	db	100	;'d'
  1239  00ECA2  69                 	db	105	;'i'
  1240  00ECA3  74                 	db	116	;'t'
  1241  00ECA4  69                 	db	105	;'i'
  1242  00ECA5  6F                 	db	111	;'o'
  1243  00ECA6  6E                 	db	110	;'n'
  1244  00ECA7  20                 	db	32
  1245  00ECA8  68                 	db	104	;'h'
  1246  00ECA9  61                 	db	97	;'a'
  1247  00ECAA  73                 	db	115	;'s'
  1248  00ECAB  20                 	db	32
  1249  00ECAC  6F                 	db	111	;'o'
  1250  00ECAD  63                 	db	99	;'c'
  1251  00ECAE  63                 	db	99	;'c'
  1252  00ECAF  75                 	db	117	;'u'
  1253  00ECB0  72                 	db	114	;'r'
  1254  00ECB1  72                 	db	114	;'r'
  1255  00ECB2  65                 	db	101	;'e'
  1256  00ECB3  64                 	db	100	;'d'
  1257  00ECB4  20                 	db	32
  1258  00ECB5  6F                 	db	111	;'o'
  1259  00ECB6  72                 	db	114	;'r'
  1260  00ECB7  20                 	db	32
  1261  00ECB8  6E                 	db	110	;'n'
  1262  00ECB9  6F                 	db	111	;'o'
  1263  00ECBA  74                 	db	116	;'t'
  1264  00ECBB  0A                 	db	10
  1265  00ECBC  0D                 	db	13
  1266  00ECBD  20                 	db	32
  1267  00ECBE  20                 	db	32
  1268  00ECBF  20                 	db	32
  1269  00ECC0  48                 	db	72	;'H'
  1270  00ECC1  65                 	db	101	;'e'
  1271  00ECC2  6C                 	db	108	;'l'
  1272  00ECC3  70                 	db	112	;'p'
  1273  00ECC4  3A                 	db	58	;':'
  1274  00ECC5  20                 	db	32
  1275  00ECC6  54                 	db	84	;'T'
  1276  00ECC7  68                 	db	104	;'h'
  1277  00ECC8  69                 	db	105	;'i'
  1278  00ECC9  73                 	db	115	;'s'
  1279  00ECCA  20                 	db	32
  1280  00ECCB  6D                 	db	109	;'m'
  1281  00ECCC  65                 	db	101	;'e'
  1282  00ECCD  73                 	db	115	;'s'
  1283  00ECCE  73                 	db	115	;'s'
  1284  00ECCF  61                 	db	97	;'a'
  1285  00ECD0  67                 	db	103	;'g'
  1286  00ECD1  65                 	db	101	;'e'
  1287  00ECD2  2C                 	db	44
  1288  00ECD3  20                 	db	32
  1289  00ECD4  6C                 	db	108	;'l'
  1290  00ECD5  69                 	db	105	;'i'
  1291  00ECD6  73                 	db	115	;'s'
  1292  00ECD7  74                 	db	116	;'t'
  1293  00ECD8  73                 	db	115	;'s'
  1294  00ECD9  20                 	db	32
  1295  00ECDA  73                 	db	115	;'s'
  1296  00ECDB  75                 	db	117	;'u'
  1297  00ECDC  70                 	db	112	;'p'
  1298  00ECDD  70                 	db	112	;'p'
  1299  00ECDE  6F                 	db	111	;'o'
  1300  00ECDF  72                 	db	114	;'r'
  1301  00ECE0  74                 	db	116	;'t'
  1302  00ECE1  65                 	db	101	;'e'
  1303  00ECE2  64                 	db	100	;'d'
  1304  00ECE3  20                 	db	32
  1305  00ECE4  63                 	db	99	;'c'
  1306  00ECE5  6F                 	db	111	;'o'
  1307  00ECE6  6D                 	db	109	;'m'
  1308  00ECE7  6D                 	db	109	;'m'
  1309  00ECE8  61                 	db	97	;'a'
  1310  00ECE9  6E                 	db	110	;'n'
  1311  00ECEA  64                 	db	100	;'d'
  1312  00ECEB  73                 	db	115	;'s'
  1313  00ECEC  0A                 	db	10
  1314  00ECED  0D                 	db	13
  1315  00ECEE  44                 	db	68	;'D'
  1316  00ECEF  65                 	db	101	;'e'
  1317  00ECF0  76                 	db	118	;'v'
  1318  00ECF1  69                 	db	105	;'i'
  1319  00ECF2  63                 	db	99	;'c'
  1320  00ECF3  65                 	db	101	;'e'
  1321  00ECF4  20                 	db	32
  1322  00ECF5  4D                 	db	77	;'M'
  1323  00ECF6  65                 	db	101	;'e'
  1324  00ECF7  61                 	db	97	;'a'
  1325  00ECF8  73                 	db	115	;'s'
  1326  00ECF9  75                 	db	117	;'u'
  1327  00ECFA  72                 	db	114	;'r'
  1328  00ECFB  65                 	db	101	;'e'
  1329  00ECFC  6D                 	db	109	;'m'
  1330  00ECFD  65                 	db	101	;'e'
  1331  00ECFE  6E                 	db	110	;'n'
  1332  00ECFF  74                 	db	116	;'t'
  1333  00ED00  20                 	db	32
  1334  00ED01  43                 	db	67	;'C'
  1335  00ED02  6F                 	db	111	;'o'
  1336  00ED03  6D                 	db	109	;'m'
  1337  00ED04  6D                 	db	109	;'m'
  1338  00ED05  61                 	db	97	;'a'
  1339  00ED06  6E                 	db	110	;'n'
  1340  00ED07  64                 	db	100	;'d'
  1341  00ED08  73                 	db	115	;'s'
  1342  00ED09  3A                 	db	58	;':'
  1343  00ED0A  0A                 	db	10
  1344  00ED0B  0D                 	db	13
  1345  00ED0C  20                 	db	32
  1346  00ED0D  20                 	db	32
  1347  00ED0E  20                 	db	32
  1348  00ED0F  4D                 	db	77	;'M'
  1349  00ED10  65                 	db	101	;'e'
  1350  00ED11  61                 	db	97	;'a'
  1351  00ED12  73                 	db	115	;'s'
  1352  00ED13  75                 	db	117	;'u'
  1353  00ED14  72                 	db	114	;'r'
  1354  00ED15  65                 	db	101	;'e'
  1355  00ED16  20                 	db	32
  1356  00ED17  50                 	db	80	;'P'
  1357  00ED18  4F                 	db	79	;'O'
  1358  00ED19  53                 	db	83	;'S'
  1359  00ED1A  33                 	db	51	;'3'
  1360  00ED1B  50                 	db	80	;'P'
  1361  00ED1C  33                 	db	51	;'3'
  1362  00ED1D  3F                 	db	63	;'?'
  1363  00ED1E  3A                 	db	58	;':'
  1364  00ED1F  20                 	db	32
  1365  00ED20  52                 	db	82	;'R'
  1366  00ED21  65                 	db	101	;'e'
  1367  00ED22  74                 	db	116	;'t'
  1368  00ED23  75                 	db	117	;'u'
  1369  00ED24  72                 	db	114	;'r'
  1370  00ED25  6E                 	db	110	;'n'
  1371  00ED26  73                 	db	115	;'s'
  1372  00ED27  20                 	db	32
  1373  00ED28  2B                 	db	43
  1374  00ED29  33                 	db	51	;'3'
  1375  00ED2A  2E                 	db	46
  1376  00ED2B  33                 	db	51	;'3'
  1377  00ED2C  56                 	db	86	;'V'
  1378  00ED2D  20                 	db	32
  1379  00ED2E  41                 	db	65	;'A'
  1380  00ED2F  44                 	db	68	;'D'
  1381  00ED30  43                 	db	67	;'C'
  1382  00ED31  20                 	db	32
  1383  00ED32  43                 	db	67	;'C'
  1384  00ED33  6F                 	db	111	;'o'
  1385  00ED34  6E                 	db	110	;'n'
  1386  00ED35  76                 	db	118	;'v'
  1387  00ED36  65                 	db	101	;'e'
  1388  00ED37  72                 	db	114	;'r'
  1389  00ED38  73                 	db	115	;'s'
  1390  00ED39  69                 	db	105	;'i'
  1391  00ED3A  6F                 	db	111	;'o'
  1392  00ED3B  6E                 	db	110	;'n'
  1393  00ED3C  20                 	db	32
  1394  00ED3D  69                 	db	105	;'i'
  1395  00ED3E  6E                 	db	110	;'n'
  1396  00ED3F  20                 	db	32
  1397  00ED40  76                 	db	118	;'v'
  1398  00ED41  6F                 	db	111	;'o'
  1399  00ED42  6C                 	db	108	;'l'
  1400  00ED43  74                 	db	116	;'t'
  1401  00ED44  73                 	db	115	;'s'
  1402  00ED45  0A                 	db	10
  1403  00ED46  0D                 	db	13
  1404  00ED47  20                 	db	32
  1405  00ED48  20                 	db	32
  1406  00ED49  20                 	db	32
  1407  00ED4A  4D                 	db	77	;'M'
  1408  00ED4B  65                 	db	101	;'e'
  1409  00ED4C  61                 	db	97	;'a'
  1410  00ED4D  73                 	db	115	;'s'
  1411  00ED4E  75                 	db	117	;'u'
  1412  00ED4F  72                 	db	114	;'r'
  1413  00ED50  65                 	db	101	;'e'
  1414  00ED51  20                 	db	32
  1415  00ED52  50                 	db	80	;'P'
  1416  00ED53  4F                 	db	79	;'O'
  1417  00ED54  53                 	db	83	;'S'
  1418  00ED55  31                 	db	49	;'1'
  1419  00ED56  32                 	db	50	;'2'
  1420  00ED57  3F                 	db	63	;'?'
  1421  00ED58  3A                 	db	58	;':'
  1422  00ED59  20                 	db	32
  1423  00ED5A  52                 	db	82	;'R'
  1424  00ED5B  65                 	db	101	;'e'
  1425  00ED5C  74                 	db	116	;'t'
  1426  00ED5D  75                 	db	117	;'u'
  1427  00ED5E  72                 	db	114	;'r'
  1428  00ED5F  6E                 	db	110	;'n'
  1429  00ED60  73                 	db	115	;'s'
  1430  00ED61  20                 	db	32
  1431  00ED62  2B                 	db	43
  1432  00ED63  31                 	db	49	;'1'
  1433  00ED64  32                 	db	50	;'2'
  1434  00ED65  56                 	db	86	;'V'
  1435  00ED66  20                 	db	32
  1436  00ED67  41                 	db	65	;'A'
  1437  00ED68  44                 	db	68	;'D'
  1438  00ED69  43                 	db	67	;'C'
  1439  00ED6A  20                 	db	32
  1440  00ED6B  43                 	db	67	;'C'
  1441  00ED6C  6F                 	db	111	;'o'
  1442  00ED6D  6E                 	db	110	;'n'
  1443  00ED6E  76                 	db	118	;'v'
  1444  00ED6F  65                 	db	101	;'e'
  1445  00ED70  72                 	db	114	;'r'
  1446  00ED71  73                 	db	115	;'s'
  1447  00ED72  69                 	db	105	;'i'
  1448  00ED73  6F                 	db	111	;'o'
  1449  00ED74  6E                 	db	110	;'n'
  1450  00ED75  20                 	db	32
  1451  00ED76  69                 	db	105	;'i'
  1452  00ED77  6E                 	db	110	;'n'
  1453  00ED78  20                 	db	32
  1454  00ED79  76                 	db	118	;'v'
  1455  00ED7A  6F                 	db	111	;'o'
  1456  00ED7B  6C                 	db	108	;'l'
  1457  00ED7C  74                 	db	116	;'t'
  1458  00ED7D  73                 	db	115	;'s'
  1459  00ED7E  0A                 	db	10
  1460  00ED7F  0D                 	db	13
  1461  00ED80  20                 	db	32
  1462  00ED81  20                 	db	32
  1463  00ED82  20                 	db	32
  1464  00ED83  4D                 	db	77	;'M'
  1465  00ED84  65                 	db	101	;'e'
  1466  00ED85  61                 	db	97	;'a'
  1467  00ED86  73                 	db	115	;'s'
  1468  00ED87  75                 	db	117	;'u'
  1469  00ED88  72                 	db	114	;'r'
  1470  00ED89  65                 	db	101	;'e'
  1471  00ED8A  20                 	db	32
  1472  00ED8B  44                 	db	68	;'D'
  1473  00ED8C  69                 	db	105	;'i'
  1474  00ED8D  65                 	db	101	;'e'
  1475  00ED8E  20                 	db	32
  1476  00ED8F  54                 	db	84	;'T'
  1477  00ED90  65                 	db	101	;'e'
  1478  00ED91  6D                 	db	109	;'m'
  1479  00ED92  70                 	db	112	;'p'
  1480  00ED93  3F                 	db	63	;'?'
  1481  00ED94  3A                 	db	58	;':'
  1482  00ED95  20                 	db	32
  1483  00ED96  52                 	db	82	;'R'
  1484  00ED97  65                 	db	101	;'e'
  1485  00ED98  74                 	db	116	;'t'
  1486  00ED99  75                 	db	117	;'u'
  1487  00ED9A  72                 	db	114	;'r'
  1488  00ED9B  6E                 	db	110	;'n'
  1489  00ED9C  73                 	db	115	;'s'
  1490  00ED9D  20                 	db	32
  1491  00ED9E  74                 	db	116	;'t'
  1492  00ED9F  68                 	db	104	;'h'
  1493  00EDA0  65                 	db	101	;'e'
  1494  00EDA1  20                 	db	32
  1495  00EDA2  6D                 	db	109	;'m'
  1496  00EDA3  69                 	db	105	;'i'
  1497  00EDA4  63                 	db	99	;'c'
  1498  00EDA5  72                 	db	114	;'r'
  1499  00EDA6  6F                 	db	111	;'o'
  1500  00EDA7  63                 	db	99	;'c'
  1501  00EDA8  6F                 	db	111	;'o'
  1502  00EDA9  6E                 	db	110	;'n'
  1503  00EDAA  74                 	db	116	;'t'
  1504  00EDAB  72                 	db	114	;'r'
  1505  00EDAC  6F                 	db	111	;'o'
  1506  00EDAD  6C                 	db	108	;'l'
  1507  00EDAE  6C                 	db	108	;'l'
  1508  00EDAF  65                 	db	101	;'e'
  1509  00EDB0  72                 	db	114	;'r'
  1510  00EDB1  20                 	db	32
  1511  00EDB2  64                 	db	100	;'d'
  1512  00EDB3  69                 	db	105	;'i'
  1513  00EDB4  65                 	db	101	;'e'
  1514  00EDB5  20                 	db	32
  1515  00EDB6  74                 	db	116	;'t'
  1516  00EDB7  65                 	db	101	;'e'
  1517  00EDB8  6D                 	db	109	;'m'
  1518  00EDB9  70                 	db	112	;'p'
  1519  00EDBA  65                 	db	101	;'e'
  1520  00EDBB  72                 	db	114	;'r'
  1521  00EDBC  61                 	db	97	;'a'
  1522  00EDBD  74                 	db	116	;'t'
  1523  00EDBE  75                 	db	117	;'u'
  1524  00EDBF  72                 	db	114	;'r'
  1525  00EDC0  65                 	db	101	;'e'
  1526  00EDC1  20                 	db	32
  1527  00EDC2  69                 	db	105	;'i'
  1528  00EDC3  6E                 	db	110	;'n'
  1529  00EDC4  20                 	db	32
  1530  00EDC5  64                 	db	100	;'d'
  1531  00EDC6  65                 	db	101	;'e'
  1532  00EDC7  67                 	db	103	;'g'
  1533  00EDC8  72                 	db	114	;'r'
  1534  00EDC9  65                 	db	101	;'e'
  1535  00EDCA  65                 	db	101	;'e'
  1536  00EDCB  73                 	db	115	;'s'
  1537  00EDCC  20                 	db	32
  1538  00EDCD  43                 	db	67	;'C'
  1539  00EDCE  0A                 	db	10
  1540  00EDCF  0D                 	db	13
  1541  00EDD0  20                 	db	32
  1542  00EDD1  20                 	db	32
  1543  00EDD2  20                 	db	32
  1544  00EDD3  4D                 	db	77	;'M'
  1545  00EDD4  65                 	db	101	;'e'
  1546  00EDD5  61                 	db	97	;'a'
  1547  00EDD6  73                 	db	115	;'s'
  1548  00EDD7  75                 	db	117	;'u'
  1549  00EDD8  72                 	db	114	;'r'
  1550  00EDD9  65                 	db	101	;'e'
  1551  00EDDA  20                 	db	32
  1552  00EDDB  46                 	db	70	;'F'
  1553  00EDDC  56                 	db	86	;'V'
  1554  00EDDD  52                 	db	82	;'R'
  1555  00EDDE  3F                 	db	63	;'?'
  1556  00EDDF  3A                 	db	58	;':'
  1557  00EDE0  20                 	db	32
  1558  00EDE1  52                 	db	82	;'R'
  1559  00EDE2  65                 	db	101	;'e'
  1560  00EDE3  74                 	db	116	;'t'
  1561  00EDE4  75                 	db	117	;'u'
  1562  00EDE5  72                 	db	114	;'r'
  1563  00EDE6  6E                 	db	110	;'n'
  1564  00EDE7  73                 	db	115	;'s'
  1565  00EDE8  20                 	db	32
  1566  00EDE9  74                 	db	116	;'t'
  1567  00EDEA  68                 	db	104	;'h'
  1568  00EDEB  65                 	db	101	;'e'
  1569  00EDEC  20                 	db	32
  1570  00EDED  69                 	db	105	;'i'
  1571  00EDEE  6E                 	db	110	;'n'
  1572  00EDEF  74                 	db	116	;'t'
  1573  00EDF0  65                 	db	101	;'e'
  1574  00EDF1  72                 	db	114	;'r'
  1575  00EDF2  6E                 	db	110	;'n'
  1576  00EDF3  61                 	db	97	;'a'
  1577  00EDF4  6C                 	db	108	;'l'
  1578  00EDF5  20                 	db	32
  1579  00EDF6  66                 	db	102	;'f'
  1580  00EDF7  69                 	db	105	;'i'
  1581  00EDF8  78                 	db	120	;'x'
  1582  00EDF9  65                 	db	101	;'e'
  1583  00EDFA  64                 	db	100	;'d'
  1584  00EDFB  20                 	db	32
  1585  00EDFC  76                 	db	118	;'v'
  1586  00EDFD  6F                 	db	111	;'o'
  1587  00EDFE  6C                 	db	108	;'l'
  1588  00EDFF  74                 	db	116	;'t'
  1589  00EE00  61                 	db	97	;'a'
  1590  00EE01  67                 	db	103	;'g'
  1591  00EE02  65                 	db	101	;'e'
  1592  00EE03  20                 	db	32
  1593  00EE04  72                 	db	114	;'r'
  1594  00EE05  65                 	db	101	;'e'
  1595  00EE06  66                 	db	102	;'f'
  1596  00EE07  65                 	db	101	;'e'
  1597  00EE08  72                 	db	114	;'r'
  1598  00EE09  65                 	db	101	;'e'
  1599  00EE0A  6E                 	db	110	;'n'
  1600  00EE0B  63                 	db	99	;'c'
  1601  00EE0C  65                 	db	101	;'e'
  1602  00EE0D  20                 	db	32
  1603  00EE0E  62                 	db	98	;'b'
  1604  00EE0F  75                 	db	117	;'u'
  1605  00EE10  66                 	db	102	;'f'
  1606  00EE11  66                 	db	102	;'f'
  1607  00EE12  65                 	db	101	;'e'
  1608  00EE13  72                 	db	114	;'r'
  1609  00EE14  20                 	db	32
  1610  00EE15  31                 	db	49	;'1'
  1611  00EE16  20                 	db	32
  1612  00EE17  6F                 	db	111	;'o'
  1613  00EE18  75                 	db	117	;'u'
  1614  00EE19  74                 	db	116	;'t'
  1615  00EE1A  70                 	db	112	;'p'
  1616  00EE1B  75                 	db	117	;'u'
  1617  00EE1C  74                 	db	116	;'t'
  1618  00EE1D  20                 	db	32
  1619  00EE1E  69                 	db	105	;'i'
  1620  00EE1F  6E                 	db	110	;'n'
  1621  00EE20  20                 	db	32
  1622  00EE21  76                 	db	118	;'v'
  1623  00EE22  6F                 	db	111	;'o'
  1624  00EE23  6C                 	db	108	;'l'
  1625  00EE24  74                 	db	116	;'t'
  1626  00EE25  73                 	db	115	;'s'
  1627  00EE26  0A                 	db	10
  1628  00EE27  0D                 	db	13
  1629  00EE28  20                 	db	32
  1630  00EE29  20                 	db	32
  1631  00EE2A  20                 	db	32
  1632  00EE2B  4D                 	db	77	;'M'
  1633  00EE2C  65                 	db	101	;'e'
  1634  00EE2D  61                 	db	97	;'a'
  1635  00EE2E  73                 	db	115	;'s'
  1636  00EE2F  75                 	db	117	;'u'
  1637  00EE30  72                 	db	114	;'r'
  1638  00EE31  65                 	db	101	;'e'
  1639  00EE32  20                 	db	32
  1640  00EE33  41                 	db	65	;'A'
  1641  00EE34  56                 	db	86	;'V'
  1642  00EE35  53                 	db	83	;'S'
  1643  00EE36  53                 	db	83	;'S'
  1644  00EE37  3F                 	db	63	;'?'
  1645  00EE38  3A                 	db	58	;':'
  1646  00EE39  20                 	db	32
  1647  00EE3A  52                 	db	82	;'R'
  1648  00EE3B  65                 	db	101	;'e'
  1649  00EE3C  74                 	db	116	;'t'
  1650  00EE3D  75                 	db	117	;'u'
  1651  00EE3E  72                 	db	114	;'r'
  1652  00EE3F  6E                 	db	110	;'n'
  1653  00EE40  73                 	db	115	;'s'
  1654  00EE41  20                 	db	32
  1655  00EE42  74                 	db	116	;'t'
  1656  00EE43  68                 	db	104	;'h'
  1657  00EE44  65                 	db	101	;'e'
  1658  00EE45  20                 	db	32
  1659  00EE46  6D                 	db	109	;'m'
  1660  00EE47  65                 	db	101	;'e'
  1661  00EE48  61                 	db	97	;'a'
  1662  00EE49  73                 	db	115	;'s'
  1663  00EE4A  75                 	db	117	;'u'
  1664  00EE4B  72                 	db	114	;'r'
  1665  00EE4C  65                 	db	101	;'e'
  1666  00EE4D  64                 	db	100	;'d'
  1667  00EE4E  20                 	db	32
  1668  00EE4F  76                 	db	118	;'v'
  1669  00EE50  61                 	db	97	;'a'
  1670  00EE51  6C                 	db	108	;'l'
  1671  00EE52  75                 	db	117	;'u'
  1672  00EE53  65                 	db	101	;'e'
  1673  00EE54  20                 	db	32
  1674  00EE55  6F                 	db	111	;'o'
  1675  00EE56  66                 	db	102	;'f'
  1676  00EE57  20                 	db	32
  1677  00EE58  41                 	db	65	;'A'
  1678  00EE59  6E                 	db	110	;'n'
  1679  00EE5A  61                 	db	97	;'a'
  1680  00EE5B  6C                 	db	108	;'l'
  1681  00EE5C  6F                 	db	111	;'o'
  1682  00EE5D  67                 	db	103	;'g'
  1683  00EE5E  20                 	db	32
  1684  00EE5F  56                 	db	86	;'V'
  1685  00EE60  53                 	db	83	;'S'
  1686  00EE61  53                 	db	83	;'S'
  1687  00EE62  20                 	db	32
  1688  00EE63  69                 	db	105	;'i'
  1689  00EE64  6E                 	db	110	;'n'
  1690  00EE65  20                 	db	32
  1691  00EE66  76                 	db	118	;'v'
  1692  00EE67  6F                 	db	111	;'o'
  1693  00EE68  6C                 	db	108	;'l'
  1694  00EE69  74                 	db	116	;'t'
  1695  00EE6A  73                 	db	115	;'s'
  1696  00EE6B  0A                 	db	10
  1697  00EE6C  0D                 	db	13
  1698  00EE6D  50                 	db	80	;'P'
  1699  00EE6E  72                 	db	114	;'r'
  1700  00EE6F  69                 	db	105	;'i'
  1701  00EE70  6D                 	db	109	;'m'
  1702  00EE71  61                 	db	97	;'a'
  1703  00EE72  72                 	db	114	;'r'
  1704  00EE73  79                 	db	121	;'y'
  1705  00EE74  20                 	db	32
  1706  00EE75  4D                 	db	77	;'M'
  1707  00EE76  65                 	db	101	;'e'
  1708  00EE77  61                 	db	97	;'a'
  1709  00EE78  73                 	db	115	;'s'
  1710  00EE79  75                 	db	117	;'u'
  1711  00EE7A  72                 	db	114	;'r'
  1712  00EE7B  65                 	db	101	;'e'
  1713  00EE7C  6D                 	db	109	;'m'
  1714  00EE7D  65                 	db	101	;'e'
  1715  00EE7E  6E                 	db	110	;'n'
  1716  00EE7F  74                 	db	116	;'t'
  1717  00EE80  20                 	db	32
  1718  00EE81  43                 	db	67	;'C'
  1719  00EE82  6F                 	db	111	;'o'
  1720  00EE83  6D                 	db	109	;'m'
  1721  00EE84  6D                 	db	109	;'m'
  1722  00EE85  61                 	db	97	;'a'
  1723  00EE86  6E                 	db	110	;'n'
  1724  00EE87  64                 	db	100	;'d'
  1725  00EE88  73                 	db	115	;'s'
  1726  00EE89  3A                 	db	58	;':'
  1727  00EE8A  0A                 	db	10
  1728  00EE8B  0D                 	db	13
  1729  00EE8C  20                 	db	32
  1730  00EE8D  20                 	db	32
  1731  00EE8E  20                 	db	32
  1732  00EE8F  4D                 	db	77	;'M'
  1733  00EE90  65                 	db	101	;'e'
  1734  00EE91  61                 	db	97	;'a'
  1735  00EE92  73                 	db	115	;'s'
  1736  00EE93  75                 	db	117	;'u'
  1737  00EE94  72                 	db	114	;'r'
  1738  00EE95  65                 	db	101	;'e'
  1739  00EE96  20                 	db	32
  1740  00EE97  44                 	db	68	;'D'
  1741  00EE98  65                 	db	101	;'e'
  1742  00EE99  74                 	db	116	;'t'
  1743  00EE9A  65                 	db	101	;'e'
  1744  00EE9B  63                 	db	99	;'c'
  1745  00EE9C  74                 	db	116	;'t'
  1746  00EE9D  65                 	db	101	;'e'
  1747  00EE9E  64                 	db	100	;'d'
  1748  00EE9F  20                 	db	32
  1749  00EEA0  43                 	db	67	;'C'
  1750  00EEA1  75                 	db	117	;'u'
  1751  00EEA2  72                 	db	114	;'r'
  1752  00EEA3  72                 	db	114	;'r'
  1753  00EEA4  65                 	db	101	;'e'
  1754  00EEA5  6E                 	db	110	;'n'
  1755  00EEA6  74                 	db	116	;'t'
  1756  00EEA7  3F                 	db	63	;'?'
  1757  00EEA8  3A                 	db	58	;':'
  1758  00EEA9  20                 	db	32
  1759  00EEAA  52                 	db	82	;'R'
  1760  00EEAB  65                 	db	101	;'e'
  1761  00EEAC  74                 	db	116	;'t'
  1762  00EEAD  75                 	db	117	;'u'
  1763  00EEAE  72                 	db	114	;'r'
  1764  00EEAF  6E                 	db	110	;'n'
  1765  00EEB0  73                 	db	115	;'s'
  1766  00EEB1  20                 	db	32
  1767  00EEB2  6D                 	db	109	;'m'
  1768  00EEB3  65                 	db	101	;'e'
  1769  00EEB4  61                 	db	97	;'a'
  1770  00EEB5  73                 	db	115	;'s'
  1771  00EEB6  75                 	db	117	;'u'
  1772  00EEB7  72                 	db	114	;'r'
  1773  00EEB8  65                 	db	101	;'e'
  1774  00EEB9  64                 	db	100	;'d'
  1775  00EEBA  20                 	db	32
  1776  00EEBB  6F                 	db	111	;'o'
  1777  00EEBC  75                 	db	117	;'u'
  1778  00EEBD  74                 	db	116	;'t'
  1779  00EEBE  70                 	db	112	;'p'
  1780  00EEBF  75                 	db	117	;'u'
  1781  00EEC0  74                 	db	116	;'t'
  1782  00EEC1  20                 	db	32
  1783  00EEC2  63                 	db	99	;'c'
  1784  00EEC3  75                 	db	117	;'u'
  1785  00EEC4  72                 	db	114	;'r'
  1786  00EEC5  72                 	db	114	;'r'
  1787  00EEC6  65                 	db	101	;'e'
  1788  00EEC7  6E                 	db	110	;'n'
  1789  00EEC8  74                 	db	116	;'t'
  1790  00EEC9  20                 	db	32
  1791  00EECA  69                 	db	105	;'i'
  1792  00EECB  6E                 	db	110	;'n'
  1793  00EECC  20                 	db	32
  1794  00EECD  61                 	db	97	;'a'
  1795  00EECE  6D                 	db	109	;'m'
  1796  00EECF  70                 	db	112	;'p'
  1797  00EED0  73                 	db	115	;'s'
  1798  00EED1  20                 	db	32
  1799  00EED2  61                 	db	97	;'a'
  1800  00EED3  73                 	db	115	;'s'
  1801  00EED4  20                 	db	32
  1802  00EED5  73                 	db	115	;'s'
  1803  00EED6  65                 	db	101	;'e'
  1804  00EED7  65                 	db	101	;'e'
  1805  00EED8  6E                 	db	110	;'n'
  1806  00EED9  20                 	db	32
  1807  00EEDA  62                 	db	98	;'b'
  1808  00EEDB  79                 	db	121	;'y'
  1809  00EEDC  20                 	db	32
  1810  00EEDD  41                 	db	65	;'A'
  1811  00EEDE  44                 	db	68	;'D'
  1812  00EEDF  43                 	db	67	;'C'
  1813  00EEE0  0A                 	db	10
  1814  00EEE1  0D                 	db	13
  1815  00EEE2  20                 	db	32
  1816  00EEE3  20                 	db	32
  1817  00EEE4  20                 	db	32
  1818  00EEE5  4D                 	db	77	;'M'
  1819  00EEE6  65                 	db	101	;'e'
  1820  00EEE7  61                 	db	97	;'a'
  1821  00EEE8  73                 	db	115	;'s'
  1822  00EEE9  75                 	db	117	;'u'
  1823  00EEEA  72                 	db	114	;'r'
  1824  00EEEB  65                 	db	101	;'e'
  1825  00EEEC  20                 	db	32
  1826  00EEED  52                 	db	82	;'R'
  1827  00EEEE  4D                 	db	77	;'M'
  1828  00EEEF  53                 	db	83	;'S'
  1829  00EEF0  20                 	db	32
  1830  00EEF1  43                 	db	67	;'C'
  1831  00EEF2  75                 	db	117	;'u'
  1832  00EEF3  72                 	db	114	;'r'
  1833  00EEF4  72                 	db	114	;'r'
  1834  00EEF5  65                 	db	101	;'e'
  1835  00EEF6  6E                 	db	110	;'n'
  1836  00EEF7  74                 	db	116	;'t'
  1837  00EEF8  3F                 	db	63	;'?'
  1838  00EEF9  3A                 	db	58	;':'
  1839  00EEFA  20                 	db	32
  1840  00EEFB  52                 	db	82	;'R'
  1841  00EEFC  65                 	db	101	;'e'
  1842  00EEFD  74                 	db	116	;'t'
  1843  00EEFE  75                 	db	117	;'u'
  1844  00EEFF  72                 	db	114	;'r'
  1845  00EF00  6E                 	db	110	;'n'
  1846  00EF01  73                 	db	115	;'s'
  1847  00EF02  20                 	db	32
  1848  00EF03  74                 	db	116	;'t'
  1849  00EF04  68                 	db	104	;'h'
  1850  00EF05  65                 	db	101	;'e'
  1851  00EF06  20                 	db	32
  1852  00EF07  63                 	db	99	;'c'
  1853  00EF08  61                 	db	97	;'a'
  1854  00EF09  6C                 	db	108	;'l'
  1855  00EF0A  63                 	db	99	;'c'
  1856  00EF0B  75                 	db	117	;'u'
  1857  00EF0C  6C                 	db	108	;'l'
  1858  00EF0D  61                 	db	97	;'a'
  1859  00EF0E  74                 	db	116	;'t'
  1860  00EF0F  65                 	db	101	;'e'
  1861  00EF10  64                 	db	100	;'d'
  1862  00EF11  20                 	db	32
  1863  00EF12  52                 	db	82	;'R'
  1864  00EF13  4D                 	db	77	;'M'
  1865  00EF14  53                 	db	83	;'S'
  1866  00EF15  20                 	db	32
  1867  00EF16  6F                 	db	111	;'o'
  1868  00EF17  75                 	db	117	;'u'
  1869  00EF18  74                 	db	116	;'t'
  1870  00EF19  70                 	db	112	;'p'
  1871  00EF1A  75                 	db	117	;'u'
  1872  00EF1B  74                 	db	116	;'t'
  1873  00EF1C  20                 	db	32
  1874  00EF1D  63                 	db	99	;'c'
  1875  00EF1E  75                 	db	117	;'u'
  1876  00EF1F  72                 	db	114	;'r'
  1877  00EF20  72                 	db	114	;'r'
  1878  00EF21  65                 	db	101	;'e'
  1879  00EF22  6E                 	db	110	;'n'
  1880  00EF23  74                 	db	116	;'t'
  1881  00EF24  20                 	db	32
  1882  00EF25  66                 	db	102	;'f'
  1883  00EF26  72                 	db	114	;'r'
  1884  00EF27  6F                 	db	111	;'o'
  1885  00EF28  6D                 	db	109	;'m'
  1886  00EF29  20                 	db	32
  1887  00EF2A  6D                 	db	109	;'m'
  1888  00EF2B  65                 	db	101	;'e'
  1889  00EF2C  61                 	db	97	;'a'
  1890  00EF2D  73                 	db	115	;'s'
  1891  00EF2E  75                 	db	117	;'u'
  1892  00EF2F  72                 	db	114	;'r'
  1893  00EF30  65                 	db	101	;'e'
  1894  00EF31  6D                 	db	109	;'m'
  1895  00EF32  65                 	db	101	;'e'
  1896  00EF33  6E                 	db	110	;'n'
  1897  00EF34  74                 	db	116	;'t'
  1898  00EF35  73                 	db	115	;'s'
  1899  00EF36  20                 	db	32
  1900  00EF37  61                 	db	97	;'a'
  1901  00EF38  6E                 	db	110	;'n'
  1902  00EF39  64                 	db	100	;'d'
  1903  00EF3A  20                 	db	32
  1904  00EF3B  54                 	db	84	;'T'
  1905  00EF3C  52                 	db	82	;'R'
  1906  00EF3D  49                 	db	73	;'I'
  1907  00EF3E  41                 	db	65	;'A'
  1908  00EF3F  43                 	db	67	;'C'
  1909  00EF40  20                 	db	32
  1910  00EF41  66                 	db	102	;'f'
  1911  00EF42  69                 	db	105	;'i'
  1912  00EF43  72                 	db	114	;'r'
  1913  00EF44  69                 	db	105	;'i'
  1914  00EF45  6E                 	db	110	;'n'
  1915  00EF46  67                 	db	103	;'g'
  1916  00EF47  20                 	db	32
  1917  00EF48  61                 	db	97	;'a'
  1918  00EF49  6E                 	db	110	;'n'
  1919  00EF4A  67                 	db	103	;'g'
  1920  00EF4B  6C                 	db	108	;'l'
  1921  00EF4C  65                 	db	101	;'e'
  1922  00EF4D  0A                 	db	10
  1923  00EF4E  0D                 	db	13
  1924  00EF4F  20                 	db	32
  1925  00EF50  20                 	db	32
  1926  00EF51  20                 	db	32
  1927  00EF52  4D                 	db	77	;'M'
  1928  00EF53  65                 	db	101	;'e'
  1929  00EF54  61                 	db	97	;'a'
  1930  00EF55  73                 	db	115	;'s'
  1931  00EF56  75                 	db	117	;'u'
  1932  00EF57  72                 	db	114	;'r'
  1933  00EF58  65                 	db	101	;'e'
  1934  00EF59  20                 	db	32
  1935  00EF5A  52                 	db	82	;'R'
  1936  00EF5B  4D                 	db	77	;'M'
  1937  00EF5C  53                 	db	83	;'S'
  1938  00EF5D  20                 	db	32
  1939  00EF5E  56                 	db	86	;'V'
  1940  00EF5F  6F                 	db	111	;'o'
  1941  00EF60  6C                 	db	108	;'l'
  1942  00EF61  74                 	db	116	;'t'
  1943  00EF62  61                 	db	97	;'a'
  1944  00EF63  67                 	db	103	;'g'
  1945  00EF64  65                 	db	101	;'e'
  1946  00EF65  3F                 	db	63	;'?'
  1947  00EF66  3A                 	db	58	;':'
  1948  00EF67  20                 	db	32
  1949  00EF68  52                 	db	82	;'R'
  1950  00EF69  65                 	db	101	;'e'
  1951  00EF6A  74                 	db	116	;'t'
  1952  00EF6B  75                 	db	117	;'u'
  1953  00EF6C  72                 	db	114	;'r'
  1954  00EF6D  6E                 	db	110	;'n'
  1955  00EF6E  73                 	db	115	;'s'
  1956  00EF6F  20                 	db	32
  1957  00EF70  74                 	db	116	;'t'
  1958  00EF71  68                 	db	104	;'h'
  1959  00EF72  65                 	db	101	;'e'
  1960  00EF73  20                 	db	32
  1961  00EF74  63                 	db	99	;'c'
  1962  00EF75  61                 	db	97	;'a'
  1963  00EF76  6C                 	db	108	;'l'
  1964  00EF77  63                 	db	99	;'c'
  1965  00EF78  75                 	db	117	;'u'
  1966  00EF79  6C                 	db	108	;'l'
  1967  00EF7A  61                 	db	97	;'a'
  1968  00EF7B  74                 	db	116	;'t'
  1969  00EF7C  65                 	db	101	;'e'
  1970  00EF7D  64                 	db	100	;'d'
  1971  00EF7E  20                 	db	32
  1972  00EF7F  52                 	db	82	;'R'
  1973  00EF80  4D                 	db	77	;'M'
  1974  00EF81  53                 	db	83	;'S'
  1975  00EF82  20                 	db	32
  1976  00EF83  6F                 	db	111	;'o'
  1977  00EF84  75                 	db	117	;'u'
  1978  00EF85  74                 	db	116	;'t'
  1979  00EF86  70                 	db	112	;'p'
  1980  00EF87  75                 	db	117	;'u'
  1981  00EF88  74                 	db	116	;'t'
  1982  00EF89  20                 	db	32
  1983  00EF8A  76                 	db	118	;'v'
  1984  00EF8B  6F                 	db	111	;'o'
  1985  00EF8C  6C                 	db	108	;'l'
  1986  00EF8D  74                 	db	116	;'t'
  1987  00EF8E  61                 	db	97	;'a'
  1988  00EF8F  67                 	db	103	;'g'
  1989  00EF90  65                 	db	101	;'e'
  1990  00EF91  20                 	db	32
  1991  00EF92  66                 	db	102	;'f'
  1992  00EF93  72                 	db	114	;'r'
  1993  00EF94  6F                 	db	111	;'o'
  1994  00EF95  6D                 	db	109	;'m'
  1995  00EF96  20                 	db	32
  1996  00EF97  54                 	db	84	;'T'
  1997  00EF98  52                 	db	82	;'R'
  1998  00EF99  49                 	db	73	;'I'
  1999  00EF9A  41                 	db	65	;'A'
  2000  00EF9B  43                 	db	67	;'C'
  2001  00EF9C  20                 	db	32
  2002  00EF9D  66                 	db	102	;'f'
  2003  00EF9E  69                 	db	105	;'i'
  2004  00EF9F  72                 	db	114	;'r'
  2005  00EFA0  69                 	db	105	;'i'
  2006  00EFA1  6E                 	db	110	;'n'
  2007  00EFA2  67                 	db	103	;'g'
  2008  00EFA3  20                 	db	32
  2009  00EFA4  61                 	db	97	;'a'
  2010  00EFA5  6E                 	db	110	;'n'
  2011  00EFA6  67                 	db	103	;'g'
  2012  00EFA7  6C                 	db	108	;'l'
  2013  00EFA8  65                 	db	101	;'e'
  2014  00EFA9  0A                 	db	10
  2015  00EFAA  0D                 	db	13
  2016  00EFAB  20                 	db	32
  2017  00EFAC  20                 	db	32
  2018  00EFAD  20                 	db	32
  2019  00EFAE  4D                 	db	77	;'M'
  2020  00EFAF  65                 	db	101	;'e'
  2021  00EFB0  61                 	db	97	;'a'
  2022  00EFB1  73                 	db	115	;'s'
  2023  00EFB2  75                 	db	117	;'u'
  2024  00EFB3  72                 	db	114	;'r'
  2025  00EFB4  65                 	db	101	;'e'
  2026  00EFB5  20                 	db	32
  2027  00EFB6  50                 	db	80	;'P'
  2028  00EFB7  6F                 	db	111	;'o'
  2029  00EFB8  77                 	db	119	;'w'
  2030  00EFB9  65                 	db	101	;'e'
  2031  00EFBA  72                 	db	114	;'r'
  2032  00EFBB  3F                 	db	63	;'?'
  2033  00EFBC  3A                 	db	58	;':'
  2034  00EFBD  20                 	db	32
  2035  00EFBE  52                 	db	82	;'R'
  2036  00EFBF  65                 	db	101	;'e'
  2037  00EFC0  74                 	db	116	;'t'
  2038  00EFC1  75                 	db	117	;'u'
  2039  00EFC2  72                 	db	114	;'r'
  2040  00EFC3  6E                 	db	110	;'n'
  2041  00EFC4  73                 	db	115	;'s'
  2042  00EFC5  20                 	db	32
  2043  00EFC6  74                 	db	116	;'t'
  2044  00EFC7  68                 	db	104	;'h'
  2045  00EFC8  65                 	db	101	;'e'
  2046  00EFC9  20                 	db	32
  2047  00EFCA  63                 	db	99	;'c'
  2048  00EFCB  61                 	db	97	;'a'
  2049  00EFCC  6C                 	db	108	;'l'
  2050  00EFCD  63                 	db	99	;'c'
  2051  00EFCE  75                 	db	117	;'u'
  2052  00EFCF  6C                 	db	108	;'l'
  2053  00EFD0  61                 	db	97	;'a'
  2054  00EFD1  74                 	db	116	;'t'
  2055  00EFD2  65                 	db	101	;'e'
  2056  00EFD3  64                 	db	100	;'d'
  2057  00EFD4  20                 	db	32
  2058  00EFD5  6F                 	db	111	;'o'
  2059  00EFD6  75                 	db	117	;'u'
  2060  00EFD7  74                 	db	116	;'t'
  2061  00EFD8  70                 	db	112	;'p'
  2062  00EFD9  75                 	db	117	;'u'
  2063  00EFDA  74                 	db	116	;'t'
  2064  00EFDB  20                 	db	32
  2065  00EFDC  70                 	db	112	;'p'
  2066  00EFDD  6F                 	db	111	;'o'
  2067  00EFDE  77                 	db	119	;'w'
  2068  00EFDF  65                 	db	101	;'e'
  2069  00EFE0  72                 	db	114	;'r'
  2070  00EFE1  20                 	db	32
  2071  00EFE2  69                 	db	105	;'i'
  2072  00EFE3  6E                 	db	110	;'n'
  2073  00EFE4  20                 	db	32
  2074  00EFE5  57                 	db	87	;'W'
  2075  00EFE6  61                 	db	97	;'a'
  2076  00EFE7  74                 	db	116	;'t'
  2077  00EFE8  74                 	db	116	;'t'
  2078  00EFE9  73                 	db	115	;'s'
  2079  00EFEA  0A                 	db	10
  2080  00EFEB  0D                 	db	13
  2081  00EFEC  20                 	db	32
  2082  00EFED  20                 	db	32
  2083  00EFEE  20                 	db	32
  2084  00EFEF  4C                 	db	76	;'L'
  2085  00EFF0  6F                 	db	111	;'o'
  2086  00EFF1  61                 	db	97	;'a'
  2087  00EFF2  64                 	db	100	;'d'
  2088  00EFF3  20                 	db	32
  2089  00EFF4  4F                 	db	79	;'O'
  2090  00EFF5  6E                 	db	110	;'n'
  2091  00EFF6  20                 	db	32
  2092  00EFF7  54                 	db	84	;'T'
  2093  00EFF8  69                 	db	105	;'i'
  2094  00EFF9  6D                 	db	109	;'m'
  2095  00EFFA  65                 	db	101	;'e'
  2096  00EFFB  3F                 	db	63	;'?'
  2097  00EFFC  3A                 	db	58	;':'
  2098  00EFFD  20                 	db	32
  2099  00EFFE  52                 	db	82	;'R'
  2100  00EFFF  65                 	db	101	;'e'
  2101  00F000  74                 	db	116	;'t'
  2102  00F001  75                 	db	117	;'u'
  2103  00F002  72                 	db	114	;'r'
  2104  00F003  6E                 	db	110	;'n'
  2105  00F004  73                 	db	115	;'s'
  2106  00F005  20                 	db	32
  2107  00F006  6C                 	db	108	;'l'
  2108  00F007  6F                 	db	111	;'o'
  2109  00F008  61                 	db	97	;'a'
  2110  00F009  64                 	db	100	;'d'
  2111  00F00A  20                 	db	32
  2112  00F00B  6F                 	db	111	;'o'
  2113  00F00C  6E                 	db	110	;'n'
  2114  00F00D  20                 	db	32
  2115  00F00E  74                 	db	116	;'t'
  2116  00F00F  69                 	db	105	;'i'
  2117  00F010  6D                 	db	109	;'m'
  2118  00F011  65                 	db	101	;'e'
  2119  00F012  20                 	db	32
  2120  00F013  73                 	db	115	;'s'
  2121  00F014  69                 	db	105	;'i'
  2122  00F015  6E                 	db	110	;'n'
  2123  00F016  63                 	db	99	;'c'
  2124  00F017  65                 	db	101	;'e'
  2125  00F018  20                 	db	32
  2126  00F019  6C                 	db	108	;'l'
  2127  00F01A  61                 	db	97	;'a'
  2128  00F01B  73                 	db	115	;'s'
  2129  00F01C  74                 	db	116	;'t'
  2130  00F01D  20                 	db	32
  2131  00F01E  64                 	db	100	;'d'
  2132  00F01F  65                 	db	101	;'e'
  2133  00F020  76                 	db	118	;'v'
  2134  00F021  69                 	db	105	;'i'
  2135  00F022  63                 	db	99	;'c'
  2136  00F023  65                 	db	101	;'e'
  2137  00F024  20                 	db	32
  2138  00F025  72                 	db	114	;'r'
  2139  00F026  65                 	db	101	;'e'
  2140  00F027  73                 	db	115	;'s'
  2141  00F028  65                 	db	101	;'e'
  2142  00F029  74                 	db	116	;'t'
  2143  00F02A  20                 	db	32
  2144  00F02B  69                 	db	105	;'i'
  2145  00F02C  6E                 	db	110	;'n'
  2146  00F02D  20                 	db	32
  2147  00F02E  73                 	db	115	;'s'
  2148  00F02F  65                 	db	101	;'e'
  2149  00F030  63                 	db	99	;'c'
  2150  00F031  6F                 	db	111	;'o'
  2151  00F032  6E                 	db	110	;'n'
  2152  00F033  64                 	db	100	;'d'
  2153  00F034  73                 	db	115	;'s'
  2154  00F035  0A                 	db	10
  2155  00F036  0D                 	db	13
  2156  00F037  20                 	db	32
  2157  00F038  20                 	db	32
  2158  00F039  20                 	db	32
  2159  00F03A  4D                 	db	77	;'M'
  2160  00F03B  61                 	db	97	;'a'
  2161  00F03C  78                 	db	120	;'x'
  2162  00F03D  20                 	db	32
  2163  00F03E  52                 	db	82	;'R'
  2164  00F03F  4D                 	db	77	;'M'
  2165  00F040  53                 	db	83	;'S'
  2166  00F041  20                 	db	32
  2167  00F042  43                 	db	67	;'C'
  2168  00F043  75                 	db	117	;'u'
  2169  00F044  72                 	db	114	;'r'
  2170  00F045  72                 	db	114	;'r'
  2171  00F046  65                 	db	101	;'e'
  2172  00F047  6E                 	db	110	;'n'
  2173  00F048  74                 	db	116	;'t'
  2174  00F049  3F                 	db	63	;'?'
  2175  00F04A  3A                 	db	58	;':'
  2176  00F04B  20                 	db	32
  2177  00F04C  50                 	db	80	;'P'
  2178  00F04D  72                 	db	114	;'r'
  2179  00F04E  69                 	db	105	;'i'
  2180  00F04F  6E                 	db	110	;'n'
  2181  00F050  74                 	db	116	;'t'
  2182  00F051  73                 	db	115	;'s'
  2183  00F052  20                 	db	32
  2184  00F053  74                 	db	116	;'t'
  2185  00F054  68                 	db	104	;'h'
  2186  00F055  65                 	db	101	;'e'
  2187  00F056  20                 	db	32
  2188  00F057  6D                 	db	109	;'m'
  2189  00F058  61                 	db	97	;'a'
  2190  00F059  78                 	db	120	;'x'
  2191  00F05A  69                 	db	105	;'i'
  2192  00F05B  6D                 	db	109	;'m'
  2193  00F05C  75                 	db	117	;'u'
  2194  00F05D  6D                 	db	109	;'m'
  2195  00F05E  20                 	db	32
  2196  00F05F  72                 	db	114	;'r'
  2197  00F060  65                 	db	101	;'e'
  2198  00F061  63                 	db	99	;'c'
  2199  00F062  6F                 	db	111	;'o'
  2200  00F063  72                 	db	114	;'r'
  2201  00F064  64                 	db	100	;'d'
  2202  00F065  65                 	db	101	;'e'
  2203  00F066  64                 	db	100	;'d'
  2204  00F067  20                 	db	32
  2205  00F068  52                 	db	82	;'R'
  2206  00F069  4D                 	db	77	;'M'
  2207  00F06A  53                 	db	83	;'S'
  2208  00F06B  20                 	db	32
  2209  00F06C  6F                 	db	111	;'o'
  2210  00F06D  75                 	db	117	;'u'
  2211  00F06E  74                 	db	116	;'t'
  2212  00F06F  70                 	db	112	;'p'
  2213  00F070  75                 	db	117	;'u'
  2214  00F071  74                 	db	116	;'t'
  2215  00F072  20                 	db	32
  2216  00F073  63                 	db	99	;'c'
  2217  00F074  75                 	db	117	;'u'
  2218  00F075  72                 	db	114	;'r'
  2219  00F076  72                 	db	114	;'r'
  2220  00F077  65                 	db	101	;'e'
  2221  00F078  6E                 	db	110	;'n'
  2222  00F079  74                 	db	116	;'t'
  2223  00F07A  0A                 	db	10
  2224  00F07B  0D                 	db	13
  2225  00F07C  20                 	db	32
  2226  00F07D  20                 	db	32
  2227  00F07E  20                 	db	32
  2228  00F07F  4D                 	db	77	;'M'
  2229  00F080  61                 	db	97	;'a'
  2230  00F081  78                 	db	120	;'x'
  2231  00F082  20                 	db	32
  2232  00F083  50                 	db	80	;'P'
  2233  00F084  6F                 	db	111	;'o'
  2234  00F085  77                 	db	119	;'w'
  2235  00F086  65                 	db	101	;'e'
  2236  00F087  72                 	db	114	;'r'
  2237  00F088  3F                 	db	63	;'?'
  2238  00F089  3A                 	db	58	;':'
  2239  00F08A  20                 	db	32
  2240  00F08B  50                 	db	80	;'P'
  2241  00F08C  72                 	db	114	;'r'
  2242  00F08D  69                 	db	105	;'i'
  2243  00F08E  6E                 	db	110	;'n'
  2244  00F08F  74                 	db	116	;'t'
  2245  00F090  73                 	db	115	;'s'
  2246  00F091  20                 	db	32
  2247  00F092  74                 	db	116	;'t'
  2248  00F093  68                 	db	104	;'h'
  2249  00F094  65                 	db	101	;'e'
  2250  00F095  20                 	db	32
  2251  00F096  6D                 	db	109	;'m'
  2252  00F097  61                 	db	97	;'a'
  2253  00F098  78                 	db	120	;'x'
  2254  00F099  69                 	db	105	;'i'
  2255  00F09A  6D                 	db	109	;'m'
  2256  00F09B  75                 	db	117	;'u'
  2257  00F09C  6D                 	db	109	;'m'
  2258  00F09D  20                 	db	32
  2259  00F09E  72                 	db	114	;'r'
  2260  00F09F  65                 	db	101	;'e'
  2261  00F0A0  63                 	db	99	;'c'
  2262  00F0A1  6F                 	db	111	;'o'
  2263  00F0A2  72                 	db	114	;'r'
  2264  00F0A3  64                 	db	100	;'d'
  2265  00F0A4  65                 	db	101	;'e'
  2266  00F0A5  64                 	db	100	;'d'
  2267  00F0A6  20                 	db	32
  2268  00F0A7  6F                 	db	111	;'o'
  2269  00F0A8  75                 	db	117	;'u'
  2270  00F0A9  74                 	db	116	;'t'
  2271  00F0AA  70                 	db	112	;'p'
  2272  00F0AB  75                 	db	117	;'u'
  2273  00F0AC  74                 	db	116	;'t'
  2274  00F0AD  20                 	db	32
  2275  00F0AE  70                 	db	112	;'p'
  2276  00F0AF  6F                 	db	111	;'o'
  2277  00F0B0  77                 	db	119	;'w'
  2278  00F0B1  65                 	db	101	;'e'
  2279  00F0B2  72                 	db	114	;'r'
  2280  00F0B3  0A                 	db	10
  2281  00F0B4  0D                 	db	13
  2282  00F0B5  20                 	db	32
  2283  00F0B6  20                 	db	32
  2284  00F0B7  20                 	db	32
  2285  00F0B8  43                 	db	67	;'C'
  2286  00F0B9  6C                 	db	108	;'l'
  2287  00F0BA  65                 	db	101	;'e'
  2288  00F0BB  61                 	db	97	;'a'
  2289  00F0BC  72                 	db	114	;'r'
  2290  00F0BD  20                 	db	32
  2291  00F0BE  4D                 	db	77	;'M'
  2292  00F0BF  61                 	db	97	;'a'
  2293  00F0C0  78                 	db	120	;'x'
  2294  00F0C1  20                 	db	32
  2295  00F0C2  56                 	db	86	;'V'
  2296  00F0C3  61                 	db	97	;'a'
  2297  00F0C4  6C                 	db	108	;'l'
  2298  00F0C5  75                 	db	117	;'u'
  2299  00F0C6  65                 	db	101	;'e'
  2300  00F0C7  73                 	db	115	;'s'
  2301  00F0C8  3A                 	db	58	;':'
  2302  00F0C9  20                 	db	32
  2303  00F0CA  45                 	db	69	;'E'
  2304  00F0CB  72                 	db	114	;'r'
  2305  00F0CC  61                 	db	97	;'a'
  2306  00F0CD  73                 	db	115	;'s'
  2307  00F0CE  65                 	db	101	;'e'
  2308  00F0CF  73                 	db	115	;'s'
  2309  00F0D0  20                 	db	32
  2310  00F0D1  6D                 	db	109	;'m'
  2311  00F0D2  61                 	db	97	;'a'
  2312  00F0D3  78                 	db	120	;'x'
  2313  00F0D4  69                 	db	105	;'i'
  2314  00F0D5  6D                 	db	109	;'m'
  2315  00F0D6  75                 	db	117	;'u'
  2316  00F0D7  6D                 	db	109	;'m'
  2317  00F0D8  20                 	db	32
  2318  00F0D9  72                 	db	114	;'r'
  2319  00F0DA  65                 	db	101	;'e'
  2320  00F0DB  63                 	db	99	;'c'
  2321  00F0DC  6F                 	db	111	;'o'
  2322  00F0DD  72                 	db	114	;'r'
  2323  00F0DE  64                 	db	100	;'d'
  2324  00F0DF  65                 	db	101	;'e'
  2325  00F0E0  64                 	db	100	;'d'
  2326  00F0E1  20                 	db	32
  2327  00F0E2  76                 	db	118	;'v'
  2328  00F0E3  61                 	db	97	;'a'
  2329  00F0E4  6C                 	db	108	;'l'
  2330  00F0E5  75                 	db	117	;'u'
  2331  00F0E6  65                 	db	101	;'e'
  2332  00F0E7  73                 	db	115	;'s'
  2333  00F0E8  20                 	db	32
  2334  00F0E9  66                 	db	102	;'f'
  2335  00F0EA  72                 	db	114	;'r'
  2336  00F0EB  6F                 	db	111	;'o'
  2337  00F0EC  6D                 	db	109	;'m'
  2338  00F0ED  20                 	db	32
  2339  00F0EE  45                 	db	69	;'E'
  2340  00F0EF  45                 	db	69	;'E'
  2341  00F0F0  50                 	db	80	;'P'
  2342  00F0F1  52                 	db	82	;'R'
  2343  00F0F2  4F                 	db	79	;'O'
  2344  00F0F3  4D                 	db	77	;'M'
  2345  00F0F4  0A                 	db	10
  2346  00F0F5  0D                 	db	13
  2347  00F0F6  4F                 	db	79	;'O'
  2348  00F0F7  75                 	db	117	;'u'
  2349  00F0F8  74                 	db	116	;'t'
  2350  00F0F9  70                 	db	112	;'p'
  2351  00F0FA  75                 	db	117	;'u'
  2352  00F0FB  74                 	db	116	;'t'
  2353  00F0FC  20                 	db	32
  2354  00F0FD  43                 	db	67	;'C'
  2355  00F0FE  6F                 	db	111	;'o'
  2356  00F0FF  6E                 	db	110	;'n'
  2357  00F100  74                 	db	116	;'t'
  2358  00F101  72                 	db	114	;'r'
  2359  00F102  6F                 	db	111	;'o'
  2360  00F103  6C                 	db	108	;'l'
  2361  00F104  20                 	db	32
  2362  00F105  43                 	db	67	;'C'
  2363  00F106  6F                 	db	111	;'o'
  2364  00F107  6D                 	db	109	;'m'
  2365  00F108  6D                 	db	109	;'m'
  2366  00F109  61                 	db	97	;'a'
  2367  00F10A  6E                 	db	110	;'n'
  2368  00F10B  64                 	db	100	;'d'
  2369  00F10C  73                 	db	115	;'s'
  2370  00F10D  3A                 	db	58	;':'
  2371  00F10E  0A                 	db	10
  2372  00F10F  0D                 	db	13
  2373  00F110  20                 	db	32
  2374  00F111  20                 	db	32
  2375  00F112  20                 	db	32
  2376  00F113  45                 	db	69	;'E'
  2377  00F114  6E                 	db	110	;'n'
  2378  00F115  61                 	db	97	;'a'
  2379  00F116  62                 	db	98	;'b'
  2380  00F117  6C                 	db	108	;'l'
  2381  00F118  65                 	db	101	;'e'
  2382  00F119  20                 	db	32
  2383  00F11A  44                 	db	68	;'D'
  2384  00F11B  69                 	db	105	;'i'
  2385  00F11C  6D                 	db	109	;'m'
  2386  00F11D  6D                 	db	109	;'m'
  2387  00F11E  69                 	db	105	;'i'
  2388  00F11F  6E                 	db	110	;'n'
  2389  00F120  67                 	db	103	;'g'
  2390  00F121  3A                 	db	58	;':'
  2391  00F122  20                 	db	32
  2392  00F123  45                 	db	69	;'E'
  2393  00F124  6E                 	db	110	;'n'
  2394  00F125  61                 	db	97	;'a'
  2395  00F126  62                 	db	98	;'b'
  2396  00F127  6C                 	db	108	;'l'
  2397  00F128  65                 	db	101	;'e'
  2398  00F129  20                 	db	32
  2399  00F12A  54                 	db	84	;'T'
  2400  00F12B  52                 	db	82	;'R'
  2401  00F12C  49                 	db	73	;'I'
  2402  00F12D  41                 	db	65	;'A'
  2403  00F12E  43                 	db	67	;'C'
  2404  00F12F  20                 	db	32
  2405  00F130  6F                 	db	111	;'o'
  2406  00F131  75                 	db	117	;'u'
  2407  00F132  74                 	db	116	;'t'
  2408  00F133  70                 	db	112	;'p'
  2409  00F134  75                 	db	117	;'u'
  2410  00F135  74                 	db	116	;'t'
  2411  00F136  20                 	db	32
  2412  00F137  64                 	db	100	;'d'
  2413  00F138  69                 	db	105	;'i'
  2414  00F139  6D                 	db	109	;'m'
  2415  00F13A  6D                 	db	109	;'m'
  2416  00F13B  69                 	db	105	;'i'
  2417  00F13C  6E                 	db	110	;'n'
  2418  00F13D  67                 	db	103	;'g'
  2419  00F13E  0A                 	db	10
  2420  00F13F  0D                 	db	13
  2421  00F140  20                 	db	32
  2422  00F141  20                 	db	32
  2423  00F142  20                 	db	32
  2424  00F143  44                 	db	68	;'D'
  2425  00F144  69                 	db	105	;'i'
  2426  00F145  73                 	db	115	;'s'
  2427  00F146  61                 	db	97	;'a'
  2428  00F147  62                 	db	98	;'b'
  2429  00F148  6C                 	db	108	;'l'
  2430  00F149  65                 	db	101	;'e'
  2431  00F14A  20                 	db	32
  2432  00F14B  44                 	db	68	;'D'
  2433  00F14C  69                 	db	105	;'i'
  2434  00F14D  6D                 	db	109	;'m'
  2435  00F14E  6D                 	db	109	;'m'
  2436  00F14F  69                 	db	105	;'i'
  2437  00F150  6E                 	db	110	;'n'
  2438  00F151  67                 	db	103	;'g'
  2439  00F152  3A                 	db	58	;':'
  2440  00F153  20                 	db	32
  2441  00F154  44                 	db	68	;'D'
  2442  00F155  69                 	db	105	;'i'
  2443  00F156  73                 	db	115	;'s'
  2444  00F157  61                 	db	97	;'a'
  2445  00F158  62                 	db	98	;'b'
  2446  00F159  6C                 	db	108	;'l'
  2447  00F15A  65                 	db	101	;'e'
  2448  00F15B  20                 	db	32
  2449  00F15C  54                 	db	84	;'T'
  2450  00F15D  52                 	db	82	;'R'
  2451  00F15E  49                 	db	73	;'I'
  2452  00F15F  41                 	db	65	;'A'
  2453  00F160  43                 	db	67	;'C'
  2454  00F161  20                 	db	32
  2455  00F162  6F                 	db	111	;'o'
  2456  00F163  75                 	db	117	;'u'
  2457  00F164  74                 	db	116	;'t'
  2458  00F165  70                 	db	112	;'p'
  2459  00F166  75                 	db	117	;'u'
  2460  00F167  74                 	db	116	;'t'
  2461  00F168  20                 	db	32
  2462  00F169  64                 	db	100	;'d'
  2463  00F16A  69                 	db	105	;'i'
  2464  00F16B  6D                 	db	109	;'m'
  2465  00F16C  6D                 	db	109	;'m'
  2466  00F16D  69                 	db	105	;'i'
  2467  00F16E  6E                 	db	110	;'n'
  2468  00F16F  67                 	db	103	;'g'
  2469  00F170  0A                 	db	10
  2470  00F171  0D                 	db	13
  2471  00F172  20                 	db	32
  2472  00F173  20                 	db	32
  2473  00F174  20                 	db	32
  2474  00F175  45                 	db	69	;'E'
  2475  00F176  6E                 	db	110	;'n'
  2476  00F177  61                 	db	97	;'a'
  2477  00F178  62                 	db	98	;'b'
  2478  00F179  6C                 	db	108	;'l'
  2479  00F17A  65                 	db	101	;'e'
  2480  00F17B  20                 	db	32
  2481  00F17C  4C                 	db	76	;'L'
  2482  00F17D  6F                 	db	111	;'o'
  2483  00F17E  61                 	db	97	;'a'
  2484  00F17F  64                 	db	100	;'d'
  2485  00F180  3A                 	db	58	;':'
  2486  00F181  20                 	db	32
  2487  00F182  45                 	db	69	;'E'
  2488  00F183  6E                 	db	110	;'n'
  2489  00F184  61                 	db	97	;'a'
  2490  00F185  62                 	db	98	;'b'
  2491  00F186  6C                 	db	108	;'l'
  2492  00F187  65                 	db	101	;'e'
  2493  00F188  73                 	db	115	;'s'
  2494  00F189  20                 	db	32
  2495  00F18A  74                 	db	116	;'t'
  2496  00F18B  68                 	db	104	;'h'
  2497  00F18C  65                 	db	101	;'e'
  2498  00F18D  20                 	db	32
  2499  00F18E  6F                 	db	111	;'o'
  2500  00F18F  75                 	db	117	;'u'
  2501  00F190  74                 	db	116	;'t'
  2502  00F191  70                 	db	112	;'p'
  2503  00F192  75                 	db	117	;'u'
  2504  00F193  74                 	db	116	;'t'
  2505  00F194  20                 	db	32
  2506  00F195  54                 	db	84	;'T'
  2507  00F196  52                 	db	82	;'R'
  2508  00F197  49                 	db	73	;'I'
  2509  00F198  41                 	db	65	;'A'
  2510  00F199  43                 	db	67	;'C'
  2511  00F19A  20                 	db	32
  2512  00F19B  77                 	db	119	;'w'
  2513  00F19C  69                 	db	105	;'i'
  2514  00F19D  74                 	db	116	;'t'
  2515  00F19E  68                 	db	104	;'h'
  2516  00F19F  20                 	db	32
  2517  00F1A0  64                 	db	100	;'d'
  2518  00F1A1  69                 	db	105	;'i'
  2519  00F1A2  6D                 	db	109	;'m'
  2520  00F1A3  6D                 	db	109	;'m'
  2521  00F1A4  69                 	db	105	;'i'
  2522  00F1A5  6E                 	db	110	;'n'
  2523  00F1A6  67                 	db	103	;'g'
  2524  00F1A7  20                 	db	32
  2525  00F1A8  64                 	db	100	;'d'
  2526  00F1A9  69                 	db	105	;'i'
  2527  00F1AA  73                 	db	115	;'s'
  2528  00F1AB  61                 	db	97	;'a'
  2529  00F1AC  62                 	db	98	;'b'
  2530  00F1AD  6C                 	db	108	;'l'
  2531  00F1AE  65                 	db	101	;'e'
  2532  00F1AF  64                 	db	100	;'d'
  2533  00F1B0  0A                 	db	10
  2534  00F1B1  0D                 	db	13
  2535  00F1B2  20                 	db	32
  2536  00F1B3  20                 	db	32
  2537  00F1B4  20                 	db	32
  2538  00F1B5  44                 	db	68	;'D'
  2539  00F1B6  69                 	db	105	;'i'
  2540  00F1B7  73                 	db	115	;'s'
  2541  00F1B8  61                 	db	97	;'a'
  2542  00F1B9  62                 	db	98	;'b'
  2543  00F1BA  6C                 	db	108	;'l'
  2544  00F1BB  65                 	db	101	;'e'
  2545  00F1BC  20                 	db	32
  2546  00F1BD  4C                 	db	76	;'L'
  2547  00F1BE  6F                 	db	111	;'o'
  2548  00F1BF  61                 	db	97	;'a'
  2549  00F1C0  64                 	db	100	;'d'
  2550  00F1C1  3A                 	db	58	;':'
  2551  00F1C2  20                 	db	32
  2552  00F1C3  44                 	db	68	;'D'
  2553  00F1C4  69                 	db	105	;'i'
  2554  00F1C5  73                 	db	115	;'s'
  2555  00F1C6  61                 	db	97	;'a'
  2556  00F1C7  62                 	db	98	;'b'
  2557  00F1C8  6C                 	db	108	;'l'
  2558  00F1C9  65                 	db	101	;'e'
  2559  00F1CA  73                 	db	115	;'s'
  2560  00F1CB  20                 	db	32
  2561  00F1CC  74                 	db	116	;'t'
  2562  00F1CD  68                 	db	104	;'h'
  2563  00F1CE  65                 	db	101	;'e'
  2564  00F1CF  20                 	db	32
  2565  00F1D0  6F                 	db	111	;'o'
  2566  00F1D1  75                 	db	117	;'u'
  2567  00F1D2  74                 	db	116	;'t'
  2568  00F1D3  70                 	db	112	;'p'
  2569  00F1D4  75                 	db	117	;'u'
  2570  00F1D5  74                 	db	116	;'t'
  2571  00F1D6  20                 	db	32
  2572  00F1D7  54                 	db	84	;'T'
  2573  00F1D8  52                 	db	82	;'R'
  2574  00F1D9  49                 	db	73	;'I'
  2575  00F1DA  41                 	db	65	;'A'
  2576  00F1DB  43                 	db	67	;'C'
  2577  00F1DC  20                 	db	32
  2578  00F1DD  63                 	db	99	;'c'
  2579  00F1DE  6F                 	db	111	;'o'
  2580  00F1DF  6D                 	db	109	;'m'
  2581  00F1E0  70                 	db	112	;'p'
  2582  00F1E1  6C                 	db	108	;'l'
  2583  00F1E2  65                 	db	101	;'e'
  2584  00F1E3  74                 	db	116	;'t'
  2585  00F1E4  65                 	db	101	;'e'
  2586  00F1E5  6C                 	db	108	;'l'
  2587  00F1E6  79                 	db	121	;'y'
  2588  00F1E7  0A                 	db	10
  2589  00F1E8  0D                 	db	13
  2590  00F1E9  20                 	db	32
  2591  00F1EA  20                 	db	32
  2592  00F1EB  20                 	db	32
  2593  00F1EC  4C                 	db	76	;'L'
  2594  00F1ED  6F                 	db	111	;'o'
  2595  00F1EE  61                 	db	97	;'a'
  2596  00F1EF  64                 	db	100	;'d'
  2597  00F1F0  20                 	db	32
  2598  00F1F1  45                 	db	69	;'E'
  2599  00F1F2  6E                 	db	110	;'n'
  2600  00F1F3  61                 	db	97	;'a'
  2601  00F1F4  62                 	db	98	;'b'
  2602  00F1F5  6C                 	db	108	;'l'
  2603  00F1F6  65                 	db	101	;'e'
  2604  00F1F7  64                 	db	100	;'d'
  2605  00F1F8  3F                 	db	63	;'?'
  2606  00F1F9  3A                 	db	58	;':'
  2607  00F1FA  20                 	db	32
  2608  00F1FB  52                 	db	82	;'R'
  2609  00F1FC  65                 	db	101	;'e'
  2610  00F1FD  74                 	db	116	;'t'
  2611  00F1FE  75                 	db	117	;'u'
  2612  00F1FF  72                 	db	114	;'r'
  2613  00F200  6E                 	db	110	;'n'
  2614  00F201  73                 	db	115	;'s'
  2615  00F202  20                 	db	32
  2616  00F203  69                 	db	105	;'i'
  2617  00F204  66                 	db	102	;'f'
  2618  00F205  20                 	db	32
  2619  00F206  74                 	db	116	;'t'
  2620  00F207  68                 	db	104	;'h'
  2621  00F208  65                 	db	101	;'e'
  2622  00F209  20                 	db	32
  2623  00F20A  6F                 	db	111	;'o'
  2624  00F20B  75                 	db	117	;'u'
  2625  00F20C  74                 	db	116	;'t'
  2626  00F20D  70                 	db	112	;'p'
  2627  00F20E  75                 	db	117	;'u'
  2628  00F20F  74                 	db	116	;'t'
  2629  00F210  20                 	db	32
  2630  00F211  6C                 	db	108	;'l'
  2631  00F212  6F                 	db	111	;'o'
  2632  00F213  61                 	db	97	;'a'
  2633  00F214  64                 	db	100	;'d'
  2634  00F215  20                 	db	32
  2635  00F216  69                 	db	105	;'i'
  2636  00F217  73                 	db	115	;'s'
  2637  00F218  20                 	db	32
  2638  00F219  65                 	db	101	;'e'
  2639  00F21A  6E                 	db	110	;'n'
  2640  00F21B  61                 	db	97	;'a'
  2641  00F21C  62                 	db	98	;'b'
  2642  00F21D  6C                 	db	108	;'l'
  2643  00F21E  65                 	db	101	;'e'
  2644  00F21F  64                 	db	100	;'d'
  2645  00F220  20                 	db	32
  2646  00F221  6F                 	db	111	;'o'
  2647  00F222  72                 	db	114	;'r'
  2648  00F223  20                 	db	32
  2649  00F224  64                 	db	100	;'d'
  2650  00F225  69                 	db	105	;'i'
  2651  00F226  73                 	db	115	;'s'
  2652  00F227  61                 	db	97	;'a'
  2653  00F228  62                 	db	98	;'b'
  2654  00F229  6C                 	db	108	;'l'
  2655  00F22A  65                 	db	101	;'e'
  2656  00F22B  64                 	db	100	;'d'
  2657  00F22C  0A                 	db	10
  2658  00F22D  0D                 	db	13
  2659  00F22E  20                 	db	32
  2660  00F22F  20                 	db	32
  2661  00F230  20                 	db	32
  2662  00F231  44                 	db	68	;'D'
  2663  00F232  69                 	db	105	;'i'
  2664  00F233  6D                 	db	109	;'m'
  2665  00F234  6D                 	db	109	;'m'
  2666  00F235  69                 	db	105	;'i'
  2667  00F236  6E                 	db	110	;'n'
  2668  00F237  67                 	db	103	;'g'
  2669  00F238  20                 	db	32
  2670  00F239  45                 	db	69	;'E'
  2671  00F23A  6E                 	db	110	;'n'
  2672  00F23B  61                 	db	97	;'a'
  2673  00F23C  62                 	db	98	;'b'
  2674  00F23D  6C                 	db	108	;'l'
  2675  00F23E  65                 	db	101	;'e'
  2676  00F23F  64                 	db	100	;'d'
  2677  00F240  3F                 	db	63	;'?'
  2678  00F241  3A                 	db	58	;':'
  2679  00F242  20                 	db	32
  2680  00F243  52                 	db	82	;'R'
  2681  00F244  65                 	db	101	;'e'
  2682  00F245  74                 	db	116	;'t'
  2683  00F246  75                 	db	117	;'u'
  2684  00F247  72                 	db	114	;'r'
  2685  00F248  6E                 	db	110	;'n'
  2686  00F249  73                 	db	115	;'s'
  2687  00F24A  20                 	db	32
  2688  00F24B  69                 	db	105	;'i'
  2689  00F24C  66                 	db	102	;'f'
  2690  00F24D  20                 	db	32
  2691  00F24E  64                 	db	100	;'d'
  2692  00F24F  69                 	db	105	;'i'
  2693  00F250  6D                 	db	109	;'m'
  2694  00F251  6D                 	db	109	;'m'
  2695  00F252  69                 	db	105	;'i'
  2696  00F253  6E                 	db	110	;'n'
  2697  00F254  67                 	db	103	;'g'
  2698  00F255  20                 	db	32
  2699  00F256  6F                 	db	111	;'o'
  2700  00F257  66                 	db	102	;'f'
  2701  00F258  20                 	db	32
  2702  00F259  74                 	db	116	;'t'
  2703  00F25A  68                 	db	104	;'h'
  2704  00F25B  65                 	db	101	;'e'
  2705  00F25C  20                 	db	32
  2706  00F25D  6F                 	db	111	;'o'
  2707  00F25E  75                 	db	117	;'u'
  2708  00F25F  74                 	db	116	;'t'
  2709  00F260  70                 	db	112	;'p'
  2710  00F261  75                 	db	117	;'u'
  2711  00F262  74                 	db	116	;'t'
  2712  00F263  20                 	db	32
  2713  00F264  6C                 	db	108	;'l'
  2714  00F265  6F                 	db	111	;'o'
  2715  00F266  61                 	db	97	;'a'
  2716  00F267  64                 	db	100	;'d'
  2717  00F268  20                 	db	32
  2718  00F269  69                 	db	105	;'i'
  2719  00F26A  73                 	db	115	;'s'
  2720  00F26B  20                 	db	32
  2721  00F26C  65                 	db	101	;'e'
  2722  00F26D  6E                 	db	110	;'n'
  2723  00F26E  61                 	db	97	;'a'
  2724  00F26F  62                 	db	98	;'b'
  2725  00F270  6C                 	db	108	;'l'
  2726  00F271  65                 	db	101	;'e'
  2727  00F272  64                 	db	100	;'d'
  2728  00F273  20                 	db	32
  2729  00F274  6F                 	db	111	;'o'
  2730  00F275  72                 	db	114	;'r'
  2731  00F276  20                 	db	32
  2732  00F277  6E                 	db	110	;'n'
  2733  00F278  6F                 	db	111	;'o'
  2734  00F279  74                 	db	116	;'t'
  2735  00F27A  0A                 	db	10
  2736  00F27B  0D                 	db	13
  2737  00F27C  20                 	db	32
  2738  00F27D  20                 	db	32
  2739  00F27E  20                 	db	32
  2740  00F27F  53                 	db	83	;'S'
  2741  00F280  65                 	db	101	;'e'
  2742  00F281  74                 	db	116	;'t'
  2743  00F282  20                 	db	32
  2744  00F283  44                 	db	68	;'D'
  2745  00F284  69                 	db	105	;'i'
  2746  00F285  6D                 	db	109	;'m'
  2747  00F286  6D                 	db	109	;'m'
  2748  00F287  69                 	db	105	;'i'
  2749  00F288  6E                 	db	110	;'n'
  2750  00F289  67                 	db	103	;'g'
  2751  00F28A  20                 	db	32
  2752  00F28B  50                 	db	80	;'P'
  2753  00F28C  65                 	db	101	;'e'
  2754  00F28D  72                 	db	114	;'r'
  2755  00F28E  63                 	db	99	;'c'
  2756  00F28F  65                 	db	101	;'e'
  2757  00F290  6E                 	db	110	;'n'
  2758  00F291  74                 	db	116	;'t'
  2759  00F292  61                 	db	97	;'a'
  2760  00F293  67                 	db	103	;'g'
  2761  00F294  65                 	db	101	;'e'
  2762  00F295  3A                 	db	58	;':'
  2763  00F296  20                 	db	32
  2764  00F297  3C                 	db	60	;'<'
  2765  00F298  78                 	db	120	;'x'
  2766  00F299  3E                 	db	62	;'>'
  2767  00F29A  3A                 	db	58	;':'
  2768  00F29B  20                 	db	32
  2769  00F29C  53                 	db	83	;'S'
  2770  00F29D  65                 	db	101	;'e'
  2771  00F29E  74                 	db	116	;'t'
  2772  00F29F  73                 	db	115	;'s'
  2773  00F2A0  20                 	db	32
  2774  00F2A1  74                 	db	116	;'t'
  2775  00F2A2  68                 	db	104	;'h'
  2776  00F2A3  65                 	db	101	;'e'
  2777  00F2A4  20                 	db	32
  2778  00F2A5  6F                 	db	111	;'o'
  2779  00F2A6  75                 	db	117	;'u'
  2780  00F2A7  74                 	db	116	;'t'
  2781  00F2A8  70                 	db	112	;'p'
  2782  00F2A9  75                 	db	117	;'u'
  2783  00F2AA  74                 	db	116	;'t'
  2784  00F2AB  20                 	db	32
  2785  00F2AC  64                 	db	100	;'d'
  2786  00F2AD  69                 	db	105	;'i'
  2787  00F2AE  6D                 	db	109	;'m'
  2788  00F2AF  6D                 	db	109	;'m'
  2789  00F2B0  69                 	db	105	;'i'
  2790  00F2B1  6E                 	db	110	;'n'
  2791  00F2B2  67                 	db	103	;'g'
  2792  00F2B3  20                 	db	32
  2793  00F2B4  70                 	db	112	;'p'
  2794  00F2B5  65                 	db	101	;'e'
  2795  00F2B6  72                 	db	114	;'r'
  2796  00F2B7  63                 	db	99	;'c'
  2797  00F2B8  65                 	db	101	;'e'
  2798  00F2B9  6E                 	db	110	;'n'
  2799  00F2BA  74                 	db	116	;'t'
  2800  00F2BB  61                 	db	97	;'a'
  2801  00F2BC  67                 	db	103	;'g'
  2802  00F2BD  65                 	db	101	;'e'
  2803  00F2BE  20                 	db	32
  2804  00F2BF  61                 	db	97	;'a'
  2805  00F2C0  73                 	db	115	;'s'
  2806  00F2C1  20                 	db	32
  2807  00F2C2  78                 	db	120	;'x'
  2808  00F2C3  20                 	db	32
  2809  00F2C4  70                 	db	112	;'p'
  2810  00F2C5  65                 	db	101	;'e'
  2811  00F2C6  72                 	db	114	;'r'
  2812  00F2C7  63                 	db	99	;'c'
  2813  00F2C8  65                 	db	101	;'e'
  2814  00F2C9  6E                 	db	110	;'n'
  2815  00F2CA  74                 	db	116	;'t'
  2816  00F2CB  0A                 	db	10
  2817  00F2CC  0D                 	db	13
  2818  00F2CD  00                 	db	0
  2819  00F2CE  20                 	db	32
  2820  00F2CF  20                 	db	32
  2821  00F2D0  20                 	db	32
  2822  00F2D1  20                 	db	32
  2823  00F2D2  42                 	db	66	;'B'
  2824  00F2D3  6F                 	db	111	;'o'
  2825  00F2D4  6F                 	db	111	;'o'
  2826  00F2D5  74                 	db	116	;'t'
  2827  00F2D6  20                 	db	32
  2828  00F2D7  63                 	db	99	;'c'
  2829  00F2D8  6F                 	db	111	;'o'
  2830  00F2D9  6D                 	db	109	;'m'
  2831  00F2DA  70                 	db	112	;'p'
  2832  00F2DB  6C                 	db	108	;'l'
  2833  00F2DC  65                 	db	101	;'e'
  2834  00F2DD  74                 	db	116	;'t'
  2835  00F2DE  65                 	db	101	;'e'
  2836  00F2DF  0A                 	db	10
  2837  00F2E0  0D                 	db	13
  2838  00F2E1  20                 	db	32
  2839  00F2E2  20                 	db	32
  2840  00F2E3  20                 	db	32
  2841  00F2E4  20                 	db	32
  2842  00F2E5  50                 	db	80	;'P'
  2843  00F2E6  49                 	db	73	;'I'
  2844  00F2E7  43                 	db	67	;'C'
  2845  00F2E8  31                 	db	49	;'1'
  2846  00F2E9  38                 	db	56	;'8'
  2847  00F2EA  46                 	db	70	;'F'
  2848  00F2EB  36                 	db	54	;'6'
  2849  00F2EC  37                 	db	55	;'7'
  2850  00F2ED  4B                 	db	75	;'K'
  2851  00F2EE  34                 	db	52	;'4'
  2852  00F2EF  30                 	db	48	;'0'
  2853  00F2F0  20                 	db	32
  2854  00F2F1  6D                 	db	109	;'m'
  2855  00F2F2  54                 	db	84	;'T'
  2856  00F2F3  6F                 	db	111	;'o'
  2857  00F2F4  75                 	db	117	;'u'
  2858  00F2F5  63                 	db	99	;'c'
  2859  00F2F6  68                 	db	104	;'h'
  2860  00F2F7  20                 	db	32
  2861  00F2F8  54                 	db	84	;'T'
  2862  00F2F9  65                 	db	101	;'e'
  2863  00F2FA  73                 	db	115	;'s'
  2864  00F2FB  74                 	db	116	;'t'
  2865  00F2FC  20                 	db	32
  2866  00F2FD  42                 	db	66	;'B'
  2867  00F2FE  6F                 	db	111	;'o'
  2868  00F2FF  61                 	db	97	;'a'
  2869  00F300  72                 	db	114	;'r'
  2870  00F301  64                 	db	100	;'d'
  2871  00F302  0A                 	db	10
  2872  00F303  0D                 	db	13
  2873  00F304  20                 	db	32
  2874  00F305  20                 	db	32
  2875  00F306  20                 	db	32
  2876  00F307  20                 	db	32
  2877  00F308  45                 	db	69	;'E'
  2878  00F309  76                 	db	118	;'v'
  2879  00F30A  61                 	db	97	;'a'
  2880  00F30B  6C                 	db	108	;'l'
  2881  00F30C  75                 	db	117	;'u'
  2882  00F30D  61                 	db	97	;'a'
  2883  00F30E  74                 	db	116	;'t'
  2884  00F30F  65                 	db	101	;'e'
  2885  00F310  73                 	db	115	;'s'
  2886  00F311  20                 	db	32
  2887  00F312  74                 	db	116	;'t'
  2888  00F313  68                 	db	104	;'h'
  2889  00F314  65                 	db	101	;'e'
  2890  00F315  20                 	db	32
  2891  00F316  6D                 	db	109	;'m'
  2892  00F317  54                 	db	84	;'T'
  2893  00F318  6F                 	db	111	;'o'
  2894  00F319  75                 	db	117	;'u'
  2895  00F31A  63                 	db	99	;'c'
  2896  00F31B  68                 	db	104	;'h'
  2897  00F31C  20                 	db	32
  2898  00F31D  63                 	db	99	;'c'
  2899  00F31E  61                 	db	97	;'a'
  2900  00F31F  70                 	db	112	;'p'
  2901  00F320  61                 	db	97	;'a'
  2902  00F321  63                 	db	99	;'c'
  2903  00F322  69                 	db	105	;'i'
  2904  00F323  74                 	db	116	;'t'
  2905  00F324  69                 	db	105	;'i'
  2906  00F325  76                 	db	118	;'v'
  2907  00F326  65                 	db	101	;'e'
  2908  00F327  20                 	db	32
  2909  00F328  74                 	db	116	;'t'
  2910  00F329  6F                 	db	111	;'o'
  2911  00F32A  75                 	db	117	;'u'
  2912  00F32B  63                 	db	99	;'c'
  2913  00F32C  68                 	db	104	;'h'
  2914  00F32D  20                 	db	32
  2915  00F32E  6C                 	db	108	;'l'
  2916  00F32F  69                 	db	105	;'i'
  2917  00F330  62                 	db	98	;'b'
  2918  00F331  72                 	db	114	;'r'
  2919  00F332  61                 	db	97	;'a'
  2920  00F333  72                 	db	114	;'r'
  2921  00F334  79                 	db	121	;'y'
  2922  00F335  20                 	db	32
  2923  00F336  64                 	db	100	;'d'
  2924  00F337  69                 	db	105	;'i'
  2925  00F338  73                 	db	115	;'s'
  2926  00F339  74                 	db	116	;'t'
  2927  00F33A  72                 	db	114	;'r'
  2928  00F33B  69                 	db	105	;'i'
  2929  00F33C  62                 	db	98	;'b'
  2930  00F33D  75                 	db	117	;'u'
  2931  00F33E  74                 	db	116	;'t'
  2932  00F33F  65                 	db	101	;'e'
  2933  00F340  64                 	db	100	;'d'
  2934  00F341  20                 	db	32
  2935  00F342  62                 	db	98	;'b'
  2936  00F343  79                 	db	121	;'y'
  2937  00F344  20                 	db	32
  2938  00F345  4D                 	db	77	;'M'
  2939  00F346  69                 	db	105	;'i'
  2940  00F347  63                 	db	99	;'c'
  2941  00F348  72                 	db	114	;'r'
  2942  00F349  6F                 	db	111	;'o'
  2943  00F34A  63                 	db	99	;'c'
  2944  00F34B  68                 	db	104	;'h'
  2945  00F34C  69                 	db	105	;'i'
  2946  00F34D  70                 	db	112	;'p'
  2947  00F34E  0A                 	db	10
  2948  00F34F  0D                 	db	13
  2949  00F350  20                 	db	32
  2950  00F351  20                 	db	32
  2951  00F352  20                 	db	32
  2952  00F353  20                 	db	32
  2953  00F354  53                 	db	83	;'S'
  2954  00F355  65                 	db	101	;'e'
  2955  00F356  74                 	db	116	;'t'
  2956  00F357  73                 	db	115	;'s'
  2957  00F358  20                 	db	32
  2958  00F359  74                 	db	116	;'t'
  2959  00F35A  68                 	db	104	;'h'
  2960  00F35B  65                 	db	101	;'e'
  2961  00F35C  20                 	db	32
  2962  00F35D  73                 	db	115	;'s'
  2963  00F35E  74                 	db	116	;'t'
  2964  00F35F  61                 	db	97	;'a'
  2965  00F360  74                 	db	116	;'t'
  2966  00F361  65                 	db	101	;'e'
  2967  00F362  20                 	db	32
  2968  00F363  6F                 	db	111	;'o'
  2969  00F364  66                 	db	102	;'f'
  2970  00F365  20                 	db	32
  2971  00F366  66                 	db	102	;'f'
  2972  00F367  69                 	db	105	;'i'
  2973  00F368  76                 	db	118	;'v'
  2974  00F369  65                 	db	101	;'e'
  2975  00F36A  20                 	db	32
  2976  00F36B  4C                 	db	76	;'L'
  2977  00F36C  45                 	db	69	;'E'
  2978  00F36D  44                 	db	68	;'D'
  2979  00F36E  73                 	db	115	;'s'
  2980  00F36F  20                 	db	32
  2981  00F370  62                 	db	98	;'b'
  2982  00F371  61                 	db	97	;'a'
  2983  00F372  73                 	db	115	;'s'
  2984  00F373  65                 	db	101	;'e'
  2985  00F374  64                 	db	100	;'d'
  2986  00F375  20                 	db	32
  2987  00F376  6F                 	db	111	;'o'
  2988  00F377  6E                 	db	110	;'n'
  2989  00F378  20                 	db	32
  2990  00F379  6D                 	db	109	;'m'
  2991  00F37A  54                 	db	84	;'T'
  2992  00F37B  6F                 	db	111	;'o'
  2993  00F37C  75                 	db	117	;'u'
  2994  00F37D  63                 	db	99	;'c'
  2995  00F37E  68                 	db	104	;'h'
  2996  00F37F  20                 	db	32
  2997  00F380  63                 	db	99	;'c'
  2998  00F381  61                 	db	97	;'a'
  2999  00F382  70                 	db	112	;'p'
  3000  00F383  61                 	db	97	;'a'
  3001  00F384  63                 	db	99	;'c'
  3002  00F385  69                 	db	105	;'i'
  3003  00F386  74                 	db	116	;'t'
  3004  00F387  69                 	db	105	;'i'
  3005  00F388  76                 	db	118	;'v'
  3006  00F389  65                 	db	101	;'e'
  3007  00F38A  20                 	db	32
  3008  00F38B  70                 	db	112	;'p'
  3009  00F38C  75                 	db	117	;'u'
  3010  00F38D  73                 	db	115	;'s'
  3011  00F38E  68                 	db	104	;'h'
  3012  00F38F  62                 	db	98	;'b'
  3013  00F390  75                 	db	117	;'u'
  3014  00F391  74                 	db	116	;'t'
  3015  00F392  74                 	db	116	;'t'
  3016  00F393  6F                 	db	111	;'o'
  3017  00F394  6E                 	db	110	;'n'
  3018  00F395  73                 	db	115	;'s'
  3019  00F396  0A                 	db	10
  3020  00F397  0D                 	db	13
  3021  00F398  20                 	db	32
  3022  00F399  20                 	db	32
  3023  00F39A  20                 	db	32
  3024  00F39B  20                 	db	32
  3025  00F39C  42                 	db	66	;'B'
  3026  00F39D  61                 	db	97	;'a'
  3027  00F39E  75                 	db	117	;'u'
  3028  00F39F  64                 	db	100	;'d'
  3029  00F3A0  20                 	db	32
  3030  00F3A1  72                 	db	114	;'r'
  3031  00F3A2  61                 	db	97	;'a'
  3032  00F3A3  74                 	db	116	;'t'
  3033  00F3A4  65                 	db	101	;'e'
  3034  00F3A5  3A                 	db	58	;':'
  3035  00F3A6  20                 	db	32
  3036  00F3A7  31                 	db	49	;'1'
  3037  00F3A8  31                 	db	49	;'1'
  3038  00F3A9  35                 	db	53	;'5'
  3039  00F3AA  32                 	db	50	;'2'
  3040  00F3AB  30                 	db	48	;'0'
  3041  00F3AC  30                 	db	48	;'0'
  3042  00F3AD  20                 	db	32
  3043  00F3AE  62                 	db	98	;'b'
  3044  00F3AF  70                 	db	112	;'p'
  3045  00F3B0  73                 	db	115	;'s'
  3046  00F3B1  0A                 	db	10
  3047  00F3B2  0D                 	db	13
  3048  00F3B3  20                 	db	32
  3049  00F3B4  20                 	db	32
  3050  00F3B5  20                 	db	32
  3051  00F3B6  20                 	db	32
  3052  00F3B7  4E                 	db	78	;'N'
  3053  00F3B8  6F                 	db	111	;'o'
  3054  00F3B9  20                 	db	32
  3055  00F3BA  70                 	db	112	;'p'
  3056  00F3BB  61                 	db	97	;'a'
  3057  00F3BC  72                 	db	114	;'r'
  3058  00F3BD  69                 	db	105	;'i'
  3059  00F3BE  74                 	db	116	;'t'
  3060  00F3BF  79                 	db	121	;'y'
  3061  00F3C0  2C                 	db	44
  3062  00F3C1  20                 	db	32
  3063  00F3C2  38                 	db	56	;'8'
  3064  00F3C3  20                 	db	32
  3065  00F3C4  62                 	db	98	;'b'
  3066  00F3C5  69                 	db	105	;'i'
  3067  00F3C6  74                 	db	116	;'t'
  3068  00F3C7  73                 	db	115	;'s'
  3069  00F3C8  2C                 	db	44
  3070  00F3C9  20                 	db	32
  3071  00F3CA  6E                 	db	110	;'n'
  3072  00F3CB  6F                 	db	111	;'o'
  3073  00F3CC  20                 	db	32
  3074  00F3CD  66                 	db	102	;'f'
  3075  00F3CE  6C                 	db	108	;'l'
  3076  00F3CF  6F                 	db	111	;'o'
  3077  00F3D0  77                 	db	119	;'w'
  3078  00F3D1  20                 	db	32
  3079  00F3D2  63                 	db	99	;'c'
  3080  00F3D3  6F                 	db	111	;'o'
  3081  00F3D4  6E                 	db	110	;'n'
  3082  00F3D5  74                 	db	116	;'t'
  3083  00F3D6  72                 	db	114	;'r'
  3084  00F3D7  6F                 	db	111	;'o'
  3085  00F3D8  6C                 	db	108	;'l'
  3086  00F3D9  2C                 	db	44
  3087  00F3DA  20                 	db	32
  3088  00F3DB  31                 	db	49	;'1'
  3089  00F3DC  20                 	db	32
  3090  00F3DD  73                 	db	115	;'s'
  3091  00F3DE  74                 	db	116	;'t'
  3092  00F3DF  6F                 	db	111	;'o'
  3093  00F3E0  70                 	db	112	;'p'
  3094  00F3E1  20                 	db	32
  3095  00F3E2  62                 	db	98	;'b'
  3096  00F3E3  69                 	db	105	;'i'
  3097  00F3E4  74                 	db	116	;'t'
  3098  00F3E5  0A                 	db	10
  3099  00F3E6  0D                 	db	13
  3100  00F3E7  20                 	db	32
  3101  00F3E8  20                 	db	32
  3102  00F3E9  20                 	db	32
  3103  00F3EA  20                 	db	32
  3104  00F3EB  43                 	db	67	;'C'
  3105  00F3EC  6F                 	db	111	;'o'
  3106  00F3ED  6D                 	db	109	;'m'
  3107  00F3EE  6D                 	db	109	;'m'
  3108  00F3EF  61                 	db	97	;'a'
  3109  00F3F0  6E                 	db	110	;'n'
  3110  00F3F1  64                 	db	100	;'d'
  3111  00F3F2  73                 	db	115	;'s'
  3112  00F3F3  20                 	db	32
  3113  00F3F4  61                 	db	97	;'a'
  3114  00F3F5  72                 	db	114	;'r'
  3115  00F3F6  65                 	db	101	;'e'
  3116  00F3F7  20                 	db	32
  3117  00F3F8  63                 	db	99	;'c'
  3118  00F3F9  61                 	db	97	;'a'
  3119  00F3FA  73                 	db	115	;'s'
  3120  00F3FB  65                 	db	101	;'e'
  3121  00F3FC  20                 	db	32
  3122  00F3FD  73                 	db	115	;'s'
  3123  00F3FE  65                 	db	101	;'e'
  3124  00F3FF  6E                 	db	110	;'n'
  3125  00F400  73                 	db	115	;'s'
  3126  00F401  69                 	db	105	;'i'
  3127  00F402  74                 	db	116	;'t'
  3128  00F403  69                 	db	105	;'i'
  3129  00F404  76                 	db	118	;'v'
  3130  00F405  65                 	db	101	;'e'
  3131  00F406  0A                 	db	10
  3132  00F407  0D                 	db	13
  3133  00F408  20                 	db	32
  3134  00F409  20                 	db	32
  3135  00F40A  20                 	db	32
  3136  00F40B  20                 	db	32
  3137  00F40C  45                 	db	69	;'E'
  3138  00F40D  6E                 	db	110	;'n'
  3139  00F40E  74                 	db	116	;'t'
  3140  00F40F  65                 	db	101	;'e'
  3141  00F410  72                 	db	114	;'r'
  3142  00F411  20                 	db	32
  3143  00F412  61                 	db	97	;'a'
  3144  00F413  20                 	db	32
  3145  00F414  63                 	db	99	;'c'
  3146  00F415  6F                 	db	111	;'o'
  3147  00F416  6D                 	db	109	;'m'
  3148  00F417  6D                 	db	109	;'m'
  3149  00F418  61                 	db	97	;'a'
  3150  00F419  6E                 	db	110	;'n'
  3151  00F41A  64                 	db	100	;'d'
  3152  00F41B  2C                 	db	44
  3153  00F41C  20                 	db	32
  3154  00F41D  6F                 	db	111	;'o'
  3155  00F41E  72                 	db	114	;'r'
  3156  00F41F  20                 	db	32
  3157  00F420  65                 	db	101	;'e'
  3158  00F421  6E                 	db	110	;'n'
  3159  00F422  74                 	db	116	;'t'
  3160  00F423  65                 	db	101	;'e'
  3161  00F424  72                 	db	114	;'r'
  3162  00F425  20                 	db	32
  3163  00F426  48                 	db	72	;'H'
  3164  00F427  65                 	db	101	;'e'
  3165  00F428  6C                 	db	108	;'l'
  3166  00F429  70                 	db	112	;'p'
  3167  00F42A  20                 	db	32
  3168  00F42B  66                 	db	102	;'f'
  3169  00F42C  6F                 	db	111	;'o'
  3170  00F42D  72                 	db	114	;'r'
  3171  00F42E  20                 	db	32
  3172  00F42F  6C                 	db	108	;'l'
  3173  00F430  69                 	db	105	;'i'
  3174  00F431  73                 	db	115	;'s'
  3175  00F432  74                 	db	116	;'t'
  3176  00F433  20                 	db	32
  3177  00F434  6F                 	db	111	;'o'
  3178  00F435  66                 	db	102	;'f'
  3179  00F436  20                 	db	32
  3180  00F437  63                 	db	99	;'c'
  3181  00F438  6F                 	db	111	;'o'
  3182  00F439  6D                 	db	109	;'m'
  3183  00F43A  6D                 	db	109	;'m'
  3184  00F43B  61                 	db	97	;'a'
  3185  00F43C  6E                 	db	110	;'n'
  3186  00F43D  64                 	db	100	;'d'
  3187  00F43E  73                 	db	115	;'s'
  3188  00F43F  0A                 	db	10
  3189  00F440  0D                 	db	13
  3190  00F441  00                 	db	0
  3191  00F442                     STR_111:
  3192  00F442  49                 	db	73	;'I'
  3193  00F443  66                 	db	102	;'f'
  3194  00F444  20                 	db	32
  3195  00F445  79                 	db	121	;'y'
  3196  00F446  6F                 	db	111	;'o'
  3197  00F447  75                 	db	117	;'u'
  3198  00F448  27                 	db	39
  3199  00F449  64                 	db	100	;'d'
  3200  00F44A  20                 	db	32
  3201  00F44B  6C                 	db	108	;'l'
  3202  00F44C  69                 	db	105	;'i'
  3203  00F44D  6B                 	db	107	;'k'
  3204  00F44E  65                 	db	101	;'e'
  3205  00F44F  20                 	db	32
  3206  00F450  74                 	db	116	;'t'
  3207  00F451  6F                 	db	111	;'o'
  3208  00F452  20                 	db	32
  3209  00F453  63                 	db	99	;'c'
  3210  00F454  6F                 	db	111	;'o'
  3211  00F455  6D                 	db	109	;'m'
  3212  00F456  70                 	db	112	;'p'
  3213  00F457  6C                 	db	108	;'l'
  3214  00F458  65                 	db	101	;'e'
  3215  00F459  74                 	db	116	;'t'
  3216  00F45A  65                 	db	101	;'e'
  3217  00F45B  6C                 	db	108	;'l'
  3218  00F45C  79                 	db	121	;'y'
  3219  00F45D  20                 	db	32
  3220  00F45E  65                 	db	101	;'e'
  3221  00F45F  6E                 	db	110	;'n'
  3222  00F460  61                 	db	97	;'a'
  3223  00F461  62                 	db	98	;'b'
  3224  00F462  6C                 	db	108	;'l'
  3225  00F463  65                 	db	101	;'e'
  3226  00F464  20                 	db	32
  3227  00F465  6F                 	db	111	;'o'
  3228  00F466  72                 	db	114	;'r'
  3229  00F467  20                 	db	32
  3230  00F468  64                 	db	100	;'d'
  3231  00F469  69                 	db	105	;'i'
  3232  00F46A  73                 	db	115	;'s'
  3233  00F46B  61                 	db	97	;'a'
  3234  00F46C  62                 	db	98	;'b'
  3235  00F46D  6C                 	db	108	;'l'
  3236  00F46E  65                 	db	101	;'e'
  3237  00F46F  20                 	db	32
  3238  00F470  74                 	db	116	;'t'
  3239  00F471  68                 	db	104	;'h'
  3240  00F472  65                 	db	101	;'e'
  3241  00F473  20                 	db	32
  3242  00F474  6C                 	db	108	;'l'
  3243  00F475  6F                 	db	111	;'o'
  3244  00F476  61                 	db	97	;'a'
  3245  00F477  64                 	db	100	;'d'
  3246  00F478  2C                 	db	44
  3247  00F479  20                 	db	32
  3248  00F47A  64                 	db	100	;'d'
  3249  00F47B  69                 	db	105	;'i'
  3250  00F47C  73                 	db	115	;'s'
  3251  00F47D  61                 	db	97	;'a'
  3252  00F47E  62                 	db	98	;'b'
  3253  00F47F  6C                 	db	108	;'l'
  3254  00F480  65                 	db	101	;'e'
  3255  00F481  20                 	db	32
  3256  00F482  64                 	db	100	;'d'
  3257  00F483  69                 	db	105	;'i'
  3258  00F484  6D                 	db	109	;'m'
  3259  00F485  6D                 	db	109	;'m'
  3260  00F486  69                 	db	105	;'i'
  3261  00F487  6E                 	db	110	;'n'
  3262  00F488  67                 	db	103	;'g'
  3263  00F489  20                 	db	32
  3264  00F48A  61                 	db	97	;'a'
  3265  00F48B  6E                 	db	110	;'n'
  3266  00F48C  64                 	db	100	;'d'
  3267  00F48D  20                 	db	32
  3268  00F48E  75                 	db	117	;'u'
  3269  00F48F  73                 	db	115	;'s'
  3270  00F490  65                 	db	101	;'e'
  3271  00F491  20                 	db	32
  3272  00F492  72                 	db	114	;'r'
  3273  00F493  65                 	db	101	;'e'
  3274  00F494  73                 	db	115	;'s'
  3275  00F495  70                 	db	112	;'p'
  3276  00F496  65                 	db	101	;'e'
  3277  00F497  63                 	db	99	;'c'
  3278  00F498  74                 	db	116	;'t'
  3279  00F499  69                 	db	105	;'i'
  3280  00F49A  76                 	db	118	;'v'
  3281  00F49B  65                 	db	101	;'e'
  3282  00F49C  20                 	db	32
  3283  00F49D  63                 	db	99	;'c'
  3284  00F49E  6F                 	db	111	;'o'
  3285  00F49F  6D                 	db	109	;'m'
  3286  00F4A0  6D                 	db	109	;'m'
  3287  00F4A1  61                 	db	97	;'a'
  3288  00F4A2  6E                 	db	110	;'n'
  3289  00F4A3  64                 	db	100	;'d'
  3290  00F4A4  73                 	db	115	;'s'
  3291  00F4A5  0A                 	db	10
  3292  00F4A6  0D                 	db	13
  3293  00F4A7  00                 	db	0
  3294  00F4A8                     STR_110:
  3295  00F4A8  45                 	db	69	;'E'
  3296  00F4A9  52                 	db	82	;'R'
  3297  00F4AA  52                 	db	82	;'R'
  3298  00F4AB  4F                 	db	79	;'O'
  3299  00F4AC  52                 	db	82	;'R'
  3300  00F4AD  3A                 	db	58	;':'
  3301  00F4AE  20                 	db	32
  3302  00F4AF  50                 	db	80	;'P'
  3303  00F4B0  6C                 	db	108	;'l'
  3304  00F4B1  65                 	db	101	;'e'
  3305  00F4B2  61                 	db	97	;'a'
  3306  00F4B3  73                 	db	115	;'s'
  3307  00F4B4  65                 	db	101	;'e'
  3308  00F4B5  20                 	db	32
  3309  00F4B6  73                 	db	115	;'s'
  3310  00F4B7  65                 	db	101	;'e'
  3311  00F4B8  74                 	db	116	;'t'
  3312  00F4B9  20                 	db	32
  3313  00F4BA  64                 	db	100	;'d'
  3314  00F4BB  69                 	db	105	;'i'
  3315  00F4BC  6D                 	db	109	;'m'
  3316  00F4BD  6D                 	db	109	;'m'
  3317  00F4BE  69                 	db	105	;'i'
  3318  00F4BF  6E                 	db	110	;'n'
  3319  00F4C0  67                 	db	103	;'g'
  3320  00F4C1  20                 	db	32
  3321  00F4C2  70                 	db	112	;'p'
  3322  00F4C3  65                 	db	101	;'e'
  3323  00F4C4  72                 	db	114	;'r'
  3324  00F4C5  63                 	db	99	;'c'
  3325  00F4C6  65                 	db	101	;'e'
  3326  00F4C7  6E                 	db	110	;'n'
  3327  00F4C8  74                 	db	116	;'t'
  3328  00F4C9  61                 	db	97	;'a'
  3329  00F4CA  67                 	db	103	;'g'
  3330  00F4CB  65                 	db	101	;'e'
  3331  00F4CC  20                 	db	32
  3332  00F4CD  74                 	db	116	;'t'
  3333  00F4CE  6F                 	db	111	;'o'
  3334  00F4CF  20                 	db	32
  3335  00F4D0  61                 	db	97	;'a'
  3336  00F4D1  6E                 	db	110	;'n'
  3337  00F4D2  20                 	db	32
  3338  00F4D3  69                 	db	105	;'i'
  3339  00F4D4  6E                 	db	110	;'n'
  3340  00F4D5  74                 	db	116	;'t'
  3341  00F4D6  65                 	db	101	;'e'
  3342  00F4D7  67                 	db	103	;'g'
  3343  00F4D8  65                 	db	101	;'e'
  3344  00F4D9  72                 	db	114	;'r'
  3345  00F4DA  20                 	db	32
  3346  00F4DB  67                 	db	103	;'g'
  3347  00F4DC  72                 	db	114	;'r'
  3348  00F4DD  65                 	db	101	;'e'
  3349  00F4DE  61                 	db	97	;'a'
  3350  00F4DF  74                 	db	116	;'t'
  3351  00F4E0  65                 	db	101	;'e'
  3352  00F4E1  72                 	db	114	;'r'
  3353  00F4E2  20                 	db	32
  3354  00F4E3  74                 	db	116	;'t'
  3355  00F4E4  68                 	db	104	;'h'
  3356  00F4E5  61                 	db	97	;'a'
  3357  00F4E6  6E                 	db	110	;'n'
  3358  00F4E7  20                 	db	32
  3359  00F4E8  30                 	db	48	;'0'
  3360  00F4E9  20                 	db	32
  3361  00F4EA  61                 	db	97	;'a'
  3362  00F4EB  6E                 	db	110	;'n'
  3363  00F4EC  64                 	db	100	;'d'
  3364  00F4ED  20                 	db	32
  3365  00F4EE  6C                 	db	108	;'l'
  3366  00F4EF  65                 	db	101	;'e'
  3367  00F4F0  73                 	db	115	;'s'
  3368  00F4F1  73                 	db	115	;'s'
  3369  00F4F2  20                 	db	32
  3370  00F4F3  74                 	db	116	;'t'
  3371  00F4F4  68                 	db	104	;'h'
  3372  00F4F5  61                 	db	97	;'a'
  3373  00F4F6  6E                 	db	110	;'n'
  3374  00F4F7  20                 	db	32
  3375  00F4F8  31                 	db	49	;'1'
  3376  00F4F9  30                 	db	48	;'0'
  3377  00F4FA  30                 	db	48	;'0'
  3378  00F4FB  0A                 	db	10
  3379  00F4FC  0D                 	db	13
  3380  00F4FD  00                 	db	0
  3381  00F4FE                     STR_54:
  3382  00F4FE  44                 	db	68	;'D'
  3383  00F4FF  65                 	db	101	;'e'
  3384  00F500  76                 	db	118	;'v'
  3385  00F501  69                 	db	105	;'i'
  3386  00F502  63                 	db	99	;'c'
  3387  00F503  65                 	db	101	;'e'
  3388  00F504  20                 	db	32
  3389  00F505  49                 	db	73	;'I'
  3390  00F506  44                 	db	68	;'D'
  3391  00F507  20                 	db	32
  3392  00F508  73                 	db	115	;'s'
  3393  00F509  74                 	db	116	;'t'
  3394  00F50A  6F                 	db	111	;'o'
  3395  00F50B  72                 	db	114	;'r'
  3396  00F50C  65                 	db	101	;'e'
  3397  00F50D  64                 	db	100	;'d'
  3398  00F50E  20                 	db	32
  3399  00F50F  69                 	db	105	;'i'
  3400  00F510  6E                 	db	110	;'n'
  3401  00F511  20                 	db	32
  3402  00F512  46                 	db	70	;'F'
  3403  00F513  6C                 	db	108	;'l'
  3404  00F514  61                 	db	97	;'a'
  3405  00F515  73                 	db	115	;'s'
  3406  00F516  68                 	db	104	;'h'
  3407  00F517  20                 	db	32
  3408  00F518  69                 	db	105	;'i'
  3409  00F519  73                 	db	115	;'s'
  3410  00F51A  3A                 	db	58	;':'
  3411  00F51B  20                 	db	32
  3412  00F51C  30                 	db	48	;'0'
  3413  00F51D  78                 	db	120	;'x'
  3414  00F51E  25                 	db	37
  3415  00F51F  58                 	db	88	;'X'
  3416  00F520  2E                 	db	46
  3417  00F521  20                 	db	32
  3418  00F522  54                 	db	84	;'T'
  3419  00F523  68                 	db	104	;'h'
  3420  00F524  69                 	db	105	;'i'
  3421  00F525  73                 	db	115	;'s'
  3422  00F526  20                 	db	32
  3423  00F527  63                 	db	99	;'c'
  3424  00F528  6F                 	db	111	;'o'
  3425  00F529  72                 	db	114	;'r'
  3426  00F52A  72                 	db	114	;'r'
  3427  00F52B  65                 	db	101	;'e'
  3428  00F52C  73                 	db	115	;'s'
  3429  00F52D  70                 	db	112	;'p'
  3430  00F52E  6F                 	db	111	;'o'
  3431  00F52F  6E                 	db	110	;'n'
  3432  00F530  64                 	db	100	;'d'
  3433  00F531  73                 	db	115	;'s'
  3434  00F532  20                 	db	32
  3435  00F533  74                 	db	116	;'t'
  3436  00F534  6F                 	db	111	;'o'
  3437  00F535  20                 	db	32
  3438  00F536  61                 	db	97	;'a'
  3439  00F537  20                 	db	32
  3440  00F538  64                 	db	100	;'d'
  3441  00F539  65                 	db	101	;'e'
  3442  00F53A  76                 	db	118	;'v'
  3443  00F53B  69                 	db	105	;'i'
  3444  00F53C  63                 	db	99	;'c'
  3445  00F53D  65                 	db	101	;'e'
  3446  00F53E  20                 	db	32
  3447  00F53F  70                 	db	112	;'p'
  3448  00F540  61                 	db	97	;'a'
  3449  00F541  72                 	db	114	;'r'
  3450  00F542  74                 	db	116	;'t'
  3451  00F543  20                 	db	32
  3452  00F544  6E                 	db	110	;'n'
  3453  00F545  75                 	db	117	;'u'
  3454  00F546  6D                 	db	109	;'m'
  3455  00F547  62                 	db	98	;'b'
  3456  00F548  65                 	db	101	;'e'
  3457  00F549  72                 	db	114	;'r'
  3458  00F54A  20                 	db	32
  3459  00F54B  6F                 	db	111	;'o'
  3460  00F54C  66                 	db	102	;'f'
  3461  00F54D  20                 	db	32
  3462  00F54E  25                 	db	37
  3463  00F54F  73                 	db	115	;'s'
  3464  00F550  0A                 	db	10
  3465  00F551  0D                 	db	13
  3466  00F552  00                 	db	0
  3467  00F553                     STR_115:
  3468  00F553  54                 	db	84	;'T'
  3469  00F554  68                 	db	104	;'h'
  3470  00F555  69                 	db	105	;'i'
  3471  00F556  73                 	db	115	;'s'
  3472  00F557  20                 	db	32
  3473  00F558  63                 	db	99	;'c'
  3474  00F559  6F                 	db	111	;'o'
  3475  00F55A  72                 	db	114	;'r'
  3476  00F55B  72                 	db	114	;'r'
  3477  00F55C  65                 	db	101	;'e'
  3478  00F55D  73                 	db	115	;'s'
  3479  00F55E  70                 	db	112	;'p'
  3480  00F55F  6F                 	db	111	;'o'
  3481  00F560  6E                 	db	110	;'n'
  3482  00F561  64                 	db	100	;'d'
  3483  00F562  73                 	db	115	;'s'
  3484  00F563  20                 	db	32
  3485  00F564  74                 	db	116	;'t'
  3486  00F565  6F                 	db	111	;'o'
  3487  00F566  20                 	db	32
  3488  00F567  61                 	db	97	;'a'
  3489  00F568  20                 	db	32
  3490  00F569  31                 	db	49	;'1'
  3491  00F56A  36                 	db	54	;'6'
  3492  00F56B  20                 	db	32
  3493  00F56C  62                 	db	98	;'b'
  3494  00F56D  69                 	db	105	;'i'
  3495  00F56E  74                 	db	116	;'t'
  3496  00F56F  20                 	db	32
  3497  00F570  74                 	db	116	;'t'
  3498  00F571  69                 	db	105	;'i'
  3499  00F572  6D                 	db	109	;'m'
  3500  00F573  65                 	db	101	;'e'
  3501  00F574  72                 	db	114	;'r'
  3502  00F575  20                 	db	32
  3503  00F576  70                 	db	112	;'p'
  3504  00F577  72                 	db	114	;'r'
  3505  00F578  65                 	db	101	;'e'
  3506  00F579  2D                 	db	45
  3507  00F57A  6C                 	db	108	;'l'
  3508  00F57B  6F                 	db	111	;'o'
  3509  00F57C  61                 	db	97	;'a'
  3510  00F57D  64                 	db	100	;'d'
  3511  00F57E  20                 	db	32
  3512  00F57F  76                 	db	118	;'v'
  3513  00F580  61                 	db	97	;'a'
  3514  00F581  6C                 	db	108	;'l'
  3515  00F582  75                 	db	117	;'u'
  3516  00F583  65                 	db	101	;'e'
  3517  00F584  20                 	db	32
  3518  00F585  6F                 	db	111	;'o'
  3519  00F586  66                 	db	102	;'f'
  3520  00F587  20                 	db	32
  3521  00F588  30                 	db	48	;'0'
  3522  00F589  78                 	db	120	;'x'
  3523  00F58A  25                 	db	37
  3524  00F58B  58                 	db	88	;'X'
  3525  00F58C  20                 	db	32
  3526  00F58D  28                 	db	40
  3527  00F58E  25                 	db	37
  3528  00F58F  75                 	db	117	;'u'
  3529  00F590  20                 	db	32
  3530  00F591  4C                 	db	76	;'L'
  3531  00F592  53                 	db	83	;'S'
  3532  00F593  42                 	db	66	;'B'
  3533  00F594  73                 	db	115	;'s'
  3534  00F595  29                 	db	41
  3535  00F596  20                 	db	32
  3536  00F597  0A                 	db	10
  3537  00F598  0D                 	db	13
  3538  00F599  00                 	db	0
  3539  00F59A                     STR_74:
  3540  00F59A  56                 	db	86	;'V'
  3541  00F59B  43                 	db	67	;'C'
  3542  00F59C  43                 	db	67	;'C'
  3543  00F59D  20                 	db	32
  3544  00F59E  4F                 	db	79	;'O'
  3545  00F59F  76                 	db	118	;'v'
  3546  00F5A0  65                 	db	101	;'e'
  3547  00F5A1  72                 	db	114	;'r'
  3548  00F5A2  76                 	db	118	;'v'
  3549  00F5A3  6F                 	db	111	;'o'
  3550  00F5A4  6C                 	db	108	;'l'
  3551  00F5A5  74                 	db	116	;'t'
  3552  00F5A6  61                 	db	97	;'a'
  3553  00F5A7  67                 	db	103	;'g'
  3554  00F5A8  65                 	db	101	;'e'
  3555  00F5A9  20                 	db	32
  3556  00F5AA  63                 	db	99	;'c'
  3557  00F5AB  6F                 	db	111	;'o'
  3558  00F5AC  6E                 	db	110	;'n'
  3559  00F5AD  64                 	db	100	;'d'
  3560  00F5AE  69                 	db	105	;'i'
  3561  00F5AF  74                 	db	116	;'t'
  3562  00F5B0  69                 	db	105	;'i'
  3563  00F5B1  6F                 	db	111	;'o'
  3564  00F5B2  6E                 	db	110	;'n'
  3565  00F5B3  20                 	db	32
  3566  00F5B4  68                 	db	104	;'h'
  3567  00F5B5  61                 	db	97	;'a'
  3568  00F5B6  73                 	db	115	;'s'
  3569  00F5B7  20                 	db	32
  3570  00F5B8  6F                 	db	111	;'o'
  3571  00F5B9  63                 	db	99	;'c'
  3572  00F5BA  63                 	db	99	;'c'
  3573  00F5BB  75                 	db	117	;'u'
  3574  00F5BC  72                 	db	114	;'r'
  3575  00F5BD  72                 	db	114	;'r'
  3576  00F5BE  65                 	db	101	;'e'
  3577  00F5BF  64                 	db	100	;'d'
  3578  00F5C0  20                 	db	32
  3579  00F5C1  28                 	db	40
  3580  00F5C2  56                 	db	86	;'V'
  3581  00F5C3  43                 	db	67	;'C'
  3582  00F5C4  43                 	db	67	;'C'
  3583  00F5C5  20                 	db	32
  3584  00F5C6  68                 	db	104	;'h'
  3585  00F5C7  61                 	db	97	;'a'
  3586  00F5C8  73                 	db	115	;'s'
  3587  00F5C9  20                 	db	32
  3588  00F5CA  65                 	db	101	;'e'
  3589  00F5CB  78                 	db	120	;'x'
  3590  00F5CC  63                 	db	99	;'c'
  3591  00F5CD  65                 	db	101	;'e'
  3592  00F5CE  65                 	db	101	;'e'
  3593  00F5CF  64                 	db	100	;'d'
  3594  00F5D0  65                 	db	101	;'e'
  3595  00F5D1  64                 	db	100	;'d'
  3596  00F5D2  20                 	db	32
  3597  00F5D3  33                 	db	51	;'3'
  3598  00F5D4  2E                 	db	46
  3599  00F5D5  36                 	db	54	;'6'
  3600  00F5D6  30                 	db	48	;'0'
  3601  00F5D7  56                 	db	86	;'V'
  3602  00F5D8  29                 	db	41
  3603  00F5D9  0A                 	db	10
  3604  00F5DA  0D                 	db	13
  3605  00F5DB  00                 	db	0
  3606  00F5DC                     STR_58:
  3607  00F5DC  54                 	db	84	;'T'
  3608  00F5DD  68                 	db	104	;'h'
  3609  00F5DE  65                 	db	101	;'e'
  3610  00F5DF  20                 	db	32
  3611  00F5E0  66                 	db	102	;'f'
  3612  00F5E1  6F                 	db	111	;'o'
  3613  00F5E2  6C                 	db	108	;'l'
  3614  00F5E3  6C                 	db	108	;'l'
  3615  00F5E4  6F                 	db	111	;'o'
  3616  00F5E5  77                 	db	119	;'w'
  3617  00F5E6  69                 	db	105	;'i'
  3618  00F5E7  6E                 	db	110	;'n'
  3619  00F5E8  67                 	db	103	;'g'
  3620  00F5E9  20                 	db	32
  3621  00F5EA  55                 	db	85	;'U'
  3622  00F5EB  73                 	db	115	;'s'
  3623  00F5EC  65                 	db	101	;'e'
  3624  00F5ED  72                 	db	114	;'r'
  3625  00F5EE  20                 	db	32
  3626  00F5EF  49                 	db	73	;'I'
  3627  00F5F0  44                 	db	68	;'D'
  3628  00F5F1  73                 	db	115	;'s'
  3629  00F5F2  20                 	db	32
  3630  00F5F3  68                 	db	104	;'h'
  3631  00F5F4  61                 	db	97	;'a'
  3632  00F5F5  76                 	db	118	;'v'
  3633  00F5F6  65                 	db	101	;'e'
  3634  00F5F7  20                 	db	32
  3635  00F5F8  62                 	db	98	;'b'
  3636  00F5F9  65                 	db	101	;'e'
  3637  00F5FA  65                 	db	101	;'e'
  3638  00F5FB  6E                 	db	110	;'n'
  3639  00F5FC  20                 	db	32
  3640  00F5FD  72                 	db	114	;'r'
  3641  00F5FE  65                 	db	101	;'e'
  3642  00F5FF  74                 	db	116	;'t'
  3643  00F600  72                 	db	114	;'r'
  3644  00F601  69                 	db	105	;'i'
  3645  00F602  65                 	db	101	;'e'
  3646  00F603  76                 	db	118	;'v'
  3647  00F604  65                 	db	101	;'e'
  3648  00F605  64                 	db	100	;'d'
  3649  00F606  20                 	db	32
  3650  00F607  66                 	db	102	;'f'
  3651  00F608  72                 	db	114	;'r'
  3652  00F609  6F                 	db	111	;'o'
  3653  00F60A  6D                 	db	109	;'m'
  3654  00F60B  20                 	db	32
  3655  00F60C  66                 	db	102	;'f'
  3656  00F60D  6C                 	db	108	;'l'
  3657  00F60E  61                 	db	97	;'a'
  3658  00F60F  73                 	db	115	;'s'
  3659  00F610  68                 	db	104	;'h'
  3660  00F611  20                 	db	32
  3661  00F612  6D                 	db	109	;'m'
  3662  00F613  65                 	db	101	;'e'
  3663  00F614  6D                 	db	109	;'m'
  3664  00F615  6F                 	db	111	;'o'
  3665  00F616  72                 	db	114	;'r'
  3666  00F617  79                 	db	121	;'y'
  3667  00F618  3A                 	db	58	;':'
  3668  00F619  0A                 	db	10
  3669  00F61A  0D                 	db	13
  3670  00F61B  00                 	db	0
  3671  00F61C                     STR_114:
  3672  00F61C  43                 	db	67	;'C'
  3673  00F61D  61                 	db	97	;'a'
  3674  00F61E  6C                 	db	108	;'l'
  3675  00F61F  63                 	db	99	;'c'
  3676  00F620  75                 	db	117	;'u'
  3677  00F621  6C                 	db	108	;'l'
  3678  00F622  61                 	db	97	;'a'
  3679  00F623  74                 	db	116	;'t'
  3680  00F624  65                 	db	101	;'e'
  3681  00F625  64                 	db	100	;'d'
  3682  00F626  20                 	db	32
  3683  00F627  54                 	db	84	;'T'
  3684  00F628  52                 	db	82	;'R'
  3685  00F629  49                 	db	73	;'I'
  3686  00F62A  41                 	db	65	;'A'
  3687  00F62B  43                 	db	67	;'C'
  3688  00F62C  20                 	db	32
  3689  00F62D  66                 	db	102	;'f'
  3690  00F62E  69                 	db	105	;'i'
  3691  00F62F  72                 	db	114	;'r'
  3692  00F630  69                 	db	105	;'i'
  3693  00F631  6E                 	db	110	;'n'
  3694  00F632  67                 	db	103	;'g'
  3695  00F633  20                 	db	32
  3696  00F634  61                 	db	97	;'a'
  3697  00F635  6E                 	db	110	;'n'
  3698  00F636  67                 	db	103	;'g'
  3699  00F637  6C                 	db	108	;'l'
  3700  00F638  65                 	db	101	;'e'
  3701  00F639  20                 	db	32
  3702  00F63A  69                 	db	105	;'i'
  3703  00F63B  73                 	db	115	;'s'
  3704  00F63C  20                 	db	32
  3705  00F63D  25                 	db	37
  3706  00F63E  2E                 	db	46
  3707  00F63F  33                 	db	51	;'3'
  3708  00F640  66                 	db	102	;'f'
  3709  00F641  20                 	db	32
  3710  00F642  72                 	db	114	;'r'
  3711  00F643  61                 	db	97	;'a'
  3712  00F644  64                 	db	100	;'d'
  3713  00F645  69                 	db	105	;'i'
  3714  00F646  61                 	db	97	;'a'
  3715  00F647  6E                 	db	110	;'n'
  3716  00F648  73                 	db	115	;'s'
  3717  00F649  20                 	db	32
  3718  00F64A  28                 	db	40
  3719  00F64B  25                 	db	37
  3720  00F64C  2E                 	db	46
  3721  00F64D  33                 	db	51	;'3'
  3722  00F64E  66                 	db	102	;'f'
  3723  00F64F  20                 	db	32
  3724  00F650  64                 	db	100	;'d'
  3725  00F651  65                 	db	101	;'e'
  3726  00F652  67                 	db	103	;'g'
  3727  00F653  72                 	db	114	;'r'
  3728  00F654  65                 	db	101	;'e'
  3729  00F655  65                 	db	101	;'e'
  3730  00F656  73                 	db	115	;'s'
  3731  00F657  29                 	db	41
  3732  00F658  0A                 	db	10
  3733  00F659  0D                 	db	13
  3734  00F65A  00                 	db	0
  3735  00F65B                     STR_129:
  3736  00F65B  53                 	db	83	;'S'
  3737  00F65C  79                 	db	121	;'y'
  3738  00F65D  73                 	db	115	;'s'
  3739  00F65E  74                 	db	116	;'t'
  3740  00F65F  65                 	db	101	;'e'
  3741  00F660  6D                 	db	109	;'m'
  3742  00F661  20                 	db	32
  3743  00F662  70                 	db	112	;'p'
  3744  00F663  61                 	db	97	;'a'
  3745  00F664  72                 	db	114	;'r'
  3746  00F665  61                 	db	97	;'a'
  3747  00F666  6D                 	db	109	;'m'
  3748  00F667  65                 	db	101	;'e'
  3749  00F668  74                 	db	116	;'t'
  3750  00F669  65                 	db	101	;'e'
  3751  00F66A  72                 	db	114	;'r'
  3752  00F66B  73                 	db	115	;'s'
  3753  00F66C  20                 	db	32
  3754  00F66D  61                 	db	97	;'a'
  3755  00F66E  6E                 	db	110	;'n'
  3756  00F66F  64                 	db	100	;'d'
  3757  00F670  20                 	db	32
  3758  00F671  61                 	db	97	;'a'
  3759  00F672  66                 	db	102	;'f'
  3760  00F673  66                 	db	102	;'f'
  3761  00F674  69                 	db	105	;'i'
  3762  00F675  72                 	db	114	;'r'
  3763  00F676  6D                 	db	109	;'m'
  3764  00F677  61                 	db	97	;'a'
  3765  00F678  74                 	db	116	;'t'
  3766  00F679  69                 	db	105	;'i'
  3767  00F67A  76                 	db	118	;'v'
  3768  00F67B  65                 	db	101	;'e'
  3769  00F67C  20                 	db	32
  3770  00F67D  72                 	db	114	;'r'
  3771  00F67E  65                 	db	101	;'e'
  3772  00F67F  73                 	db	115	;'s'
  3773  00F680  70                 	db	112	;'p'
  3774  00F681  6F                 	db	111	;'o'
  3775  00F682  6E                 	db	110	;'n'
  3776  00F683  73                 	db	115	;'s'
  3777  00F684  65                 	db	101	;'e'
  3778  00F685  73                 	db	115	;'s'
  3779  00F686  20                 	db	32
  3780  00F687  61                 	db	97	;'a'
  3781  00F688  70                 	db	112	;'p'
  3782  00F689  70                 	db	112	;'p'
  3783  00F68A  65                 	db	101	;'e'
  3784  00F68B  61                 	db	97	;'a'
  3785  00F68C  72                 	db	114	;'r'
  3786  00F68D  20                 	db	32
  3787  00F68E  69                 	db	105	;'i'
  3788  00F68F  6E                 	db	110	;'n'
  3789  00F690  20                 	db	32
  3790  00F691  67                 	db	103	;'g'
  3791  00F692  72                 	db	114	;'r'
  3792  00F693  65                 	db	101	;'e'
  3793  00F694  65                 	db	101	;'e'
  3794  00F695  6E                 	db	110	;'n'
  3795  00F696  0A                 	db	10
  3796  00F697  0D                 	db	13
  3797  00F698  00                 	db	0
  3798  00F699                     STR_56:
  3799  00F699  44                 	db	68	;'D'
  3800  00F69A  65                 	db	101	;'e'
  3801  00F69B  76                 	db	118	;'v'
  3802  00F69C  69                 	db	105	;'i'
  3803  00F69D  63                 	db	99	;'c'
  3804  00F69E  65                 	db	101	;'e'
  3805  00F69F  20                 	db	32
  3806  00F6A0  73                 	db	115	;'s'
  3807  00F6A1  69                 	db	105	;'i'
  3808  00F6A2  6C                 	db	108	;'l'
  3809  00F6A3  69                 	db	105	;'i'
  3810  00F6A4  63                 	db	99	;'c'
  3811  00F6A5  6F                 	db	111	;'o'
  3812  00F6A6  6E                 	db	110	;'n'
  3813  00F6A7  20                 	db	32
  3814  00F6A8  72                 	db	114	;'r'
  3815  00F6A9  65                 	db	101	;'e'
  3816  00F6AA  76                 	db	118	;'v'
  3817  00F6AB  69                 	db	105	;'i'
  3818  00F6AC  73                 	db	115	;'s'
  3819  00F6AD  69                 	db	105	;'i'
  3820  00F6AE  6F                 	db	111	;'o'
  3821  00F6AF  6E                 	db	110	;'n'
  3822  00F6B0  20                 	db	32
  3823  00F6B1  49                 	db	73	;'I'
  3824  00F6B2  44                 	db	68	;'D'
  3825  00F6B3  20                 	db	32
  3826  00F6B4  61                 	db	97	;'a'
  3827  00F6B5  73                 	db	115	;'s'
  3828  00F6B6  20                 	db	32
  3829  00F6B7  73                 	db	115	;'s'
  3830  00F6B8  74                 	db	116	;'t'
  3831  00F6B9  6F                 	db	111	;'o'
  3832  00F6BA  72                 	db	114	;'r'
  3833  00F6BB  65                 	db	101	;'e'
  3834  00F6BC  64                 	db	100	;'d'
  3835  00F6BD  20                 	db	32
  3836  00F6BE  69                 	db	105	;'i'
  3837  00F6BF  6E                 	db	110	;'n'
  3838  00F6C0  20                 	db	32
  3839  00F6C1  46                 	db	70	;'F'
  3840  00F6C2  6C                 	db	108	;'l'
  3841  00F6C3  61                 	db	97	;'a'
  3842  00F6C4  73                 	db	115	;'s'
  3843  00F6C5  68                 	db	104	;'h'
  3844  00F6C6  20                 	db	32
  3845  00F6C7  69                 	db	105	;'i'
  3846  00F6C8  73                 	db	115	;'s'
  3847  00F6C9  3A                 	db	58	;':'
  3848  00F6CA  20                 	db	32
  3849  00F6CB  25                 	db	37
  3850  00F6CC  63                 	db	99	;'c'
  3851  00F6CD  25                 	db	37
  3852  00F6CE  30                 	db	48	;'0'
  3853  00F6CF  33                 	db	51	;'3'
  3854  00F6D0  64                 	db	100	;'d'
  3855  00F6D1  0A                 	db	10
  3856  00F6D2  0D                 	db	13
  3857  00F6D3  00                 	db	0
  3858  00F6D4                     STR_117:
  3859  00F6D4  44                 	db	68	;'D'
  3860  00F6D5  65                 	db	101	;'e'
  3861  00F6D6  76                 	db	118	;'v'
  3862  00F6D7  69                 	db	105	;'i'
  3863  00F6D8  63                 	db	99	;'c'
  3864  00F6D9  65                 	db	101	;'e'
  3865  00F6DA  20                 	db	32
  3866  00F6DB  6F                 	db	111	;'o'
  3867  00F6DC  6E                 	db	110	;'n'
  3868  00F6DD  20                 	db	32
  3869  00F6DE  74                 	db	116	;'t'
  3870  00F6DF  69                 	db	105	;'i'
  3871  00F6E0  6D                 	db	109	;'m'
  3872  00F6E1  65                 	db	101	;'e'
  3873  00F6E2  20                 	db	32
  3874  00F6E3  73                 	db	115	;'s'
  3875  00F6E4  69                 	db	105	;'i'
  3876  00F6E5  6E                 	db	110	;'n'
  3877  00F6E6  63                 	db	99	;'c'
  3878  00F6E7  65                 	db	101	;'e'
  3879  00F6E8  20                 	db	32
  3880  00F6E9  6C                 	db	108	;'l'
  3881  00F6EA  61                 	db	97	;'a'
  3882  00F6EB  73                 	db	115	;'s'
  3883  00F6EC  74                 	db	116	;'t'
  3884  00F6ED  20                 	db	32
  3885  00F6EE  72                 	db	114	;'r'
  3886  00F6EF  65                 	db	101	;'e'
  3887  00F6F0  73                 	db	115	;'s'
  3888  00F6F1  65                 	db	101	;'e'
  3889  00F6F2  74                 	db	116	;'t'
  3890  00F6F3  20                 	db	32
  3891  00F6F4  63                 	db	99	;'c'
  3892  00F6F5  6F                 	db	111	;'o'
  3893  00F6F6  6E                 	db	110	;'n'
  3894  00F6F7  64                 	db	100	;'d'
  3895  00F6F8  69                 	db	105	;'i'
  3896  00F6F9  74                 	db	116	;'t'
  3897  00F6FA  69                 	db	105	;'i'
  3898  00F6FB  6F                 	db	111	;'o'
  3899  00F6FC  6E                 	db	110	;'n'
  3900  00F6FD  20                 	db	32
  3901  00F6FE  69                 	db	105	;'i'
  3902  00F6FF  73                 	db	115	;'s'
  3903  00F700  20                 	db	32
  3904  00F701  25                 	db	37
  3905  00F702  64                 	db	100	;'d'
  3906  00F703  20                 	db	32
  3907  00F704  73                 	db	115	;'s'
  3908  00F705  65                 	db	101	;'e'
  3909  00F706  63                 	db	99	;'c'
  3910  00F707  6F                 	db	111	;'o'
  3911  00F708  6E                 	db	110	;'n'
  3912  00F709  64                 	db	100	;'d'
  3913  00F70A  73                 	db	115	;'s'
  3914  00F70B  0A                 	db	10
  3915  00F70C  0D                 	db	13
  3916  00F70D  00                 	db	0
  3917  00F70E                     STR_83:
  3918  00F70E  46                 	db	70	;'F'
  3919  00F70F  69                 	db	105	;'i'
  3920  00F710  78                 	db	120	;'x'
  3921  00F711  65                 	db	101	;'e'
  3922  00F712  64                 	db	100	;'d'
  3923  00F713  20                 	db	32
  3924  00F714  56                 	db	86	;'V'
  3925  00F715  6F                 	db	111	;'o'
  3926  00F716  6C                 	db	108	;'l'
  3927  00F717  74                 	db	116	;'t'
  3928  00F718  61                 	db	97	;'a'
  3929  00F719  67                 	db	103	;'g'
  3930  00F71A  65                 	db	101	;'e'
  3931  00F71B  20                 	db	32
  3932  00F71C  52                 	db	82	;'R'
  3933  00F71D  65                 	db	101	;'e'
  3934  00F71E  66                 	db	102	;'f'
  3935  00F71F  65                 	db	101	;'e'
  3936  00F720  72                 	db	114	;'r'
  3937  00F721  65                 	db	101	;'e'
  3938  00F722  6E                 	db	110	;'n'
  3939  00F723  63                 	db	99	;'c'
  3940  00F724  65                 	db	101	;'e'
  3941  00F725  20                 	db	32
  3942  00F726  42                 	db	66	;'B'
  3943  00F727  75                 	db	117	;'u'
  3944  00F728  66                 	db	102	;'f'
  3945  00F729  66                 	db	102	;'f'
  3946  00F72A  65                 	db	101	;'e'
  3947  00F72B  72                 	db	114	;'r'
  3948  00F72C  20                 	db	32
  3949  00F72D  31                 	db	49	;'1'
  3950  00F72E  20                 	db	32
  3951  00F72F  6D                 	db	109	;'m'
  3952  00F730  65                 	db	101	;'e'
  3953  00F731  61                 	db	97	;'a'
  3954  00F732  73                 	db	115	;'s'
  3955  00F733  75                 	db	117	;'u'
  3956  00F734  72                 	db	114	;'r'
  3957  00F735  65                 	db	101	;'e'
  3958  00F736  64                 	db	100	;'d'
  3959  00F737  20                 	db	32
  3960  00F738  61                 	db	97	;'a'
  3961  00F739  73                 	db	115	;'s'
  3962  00F73A  20                 	db	32
  3963  00F73B  25                 	db	37
  3964  00F73C  2E                 	db	46
  3965  00F73D  33                 	db	51	;'3'
  3966  00F73E  66                 	db	102	;'f'
  3967  00F73F  20                 	db	32
  3968  00F740  56                 	db	86	;'V'
  3969  00F741  6F                 	db	111	;'o'
  3970  00F742  6C                 	db	108	;'l'
  3971  00F743  74                 	db	116	;'t'
  3972  00F744  73                 	db	115	;'s'
  3973  00F745  0A                 	db	10
  3974  00F746  0D                 	db	13
  3975  00F747  00                 	db	0
  3976  00F748                     STR_93:
  3977  00F748  4F                 	db	79	;'O'
  3978  00F749  75                 	db	117	;'u'
  3979  00F74A  74                 	db	116	;'t'
  3980  00F74B  70                 	db	112	;'p'
  3981  00F74C  75                 	db	117	;'u'
  3982  00F74D  74                 	db	116	;'t'
  3983  00F74E  20                 	db	32
  3984  00F74F  70                 	db	112	;'p'
  3985  00F750  6F                 	db	111	;'o'
  3986  00F751  77                 	db	119	;'w'
  3987  00F752  65                 	db	101	;'e'
  3988  00F753  72                 	db	114	;'r'
  3989  00F754  20                 	db	32
  3990  00F755  63                 	db	99	;'c'
  3991  00F756  61                 	db	97	;'a'
  3992  00F757  6C                 	db	108	;'l'
  3993  00F758  63                 	db	99	;'c'
  3994  00F759  75                 	db	117	;'u'
  3995  00F75A  6C                 	db	108	;'l'
  3996  00F75B  61                 	db	97	;'a'
  3997  00F75C  74                 	db	116	;'t'
  3998  00F75D  65                 	db	101	;'e'
  3999  00F75E  64                 	db	100	;'d'
  4000  00F75F  20                 	db	32
  4001  00F760  61                 	db	97	;'a'
  4002  00F761  73                 	db	115	;'s'
  4003  00F762  20                 	db	32
  4004  00F763  25                 	db	37
  4005  00F764  2E                 	db	46
  4006  00F765  33                 	db	51	;'3'
  4007  00F766  66                 	db	102	;'f'
  4008  00F767  20                 	db	32
  4009  00F768  57                 	db	87	;'W'
  4010  00F769  61                 	db	97	;'a'
  4011  00F76A  74                 	db	116	;'t'
  4012  00F76B  74                 	db	116	;'t'
  4013  00F76C  73                 	db	115	;'s'
  4014  00F76D  20                 	db	32
  4015  00F76E  66                 	db	102	;'f'
  4016  00F76F  72                 	db	114	;'r'
  4017  00F770  6F                 	db	111	;'o'
  4018  00F771  6D                 	db	109	;'m'
  4019  00F772  20                 	db	32
  4020  00F773  52                 	db	82	;'R'
  4021  00F774  4D                 	db	77	;'M'
  4022  00F775  53                 	db	83	;'S'
  4023  00F776  20                 	db	32
  4024  00F777  76                 	db	118	;'v'
  4025  00F778  61                 	db	97	;'a'
  4026  00F779  6C                 	db	108	;'l'
  4027  00F77A  75                 	db	117	;'u'
  4028  00F77B  65                 	db	101	;'e'
  4029  00F77C  73                 	db	115	;'s'
  4030  00F77D  0A                 	db	10
  4031  00F77E  0D                 	db	13
  4032  00F77F  00                 	db	0
  4033  00F780                     STR_128:
  4034  00F780  48                 	db	72	;'H'
  4035  00F781  65                 	db	101	;'e'
  4036  00F782  6C                 	db	108	;'l'
  4037  00F783  70                 	db	112	;'p'
  4038  00F784  20                 	db	32
  4039  00F785  6D                 	db	109	;'m'
  4040  00F786  65                 	db	101	;'e'
  4041  00F787  73                 	db	115	;'s'
  4042  00F788  73                 	db	115	;'s'
  4043  00F789  61                 	db	97	;'a'
  4044  00F78A  67                 	db	103	;'g'
  4045  00F78B  65                 	db	101	;'e'
  4046  00F78C  73                 	db	115	;'s'
  4047  00F78D  20                 	db	32
  4048  00F78E  61                 	db	97	;'a'
  4049  00F78F  6E                 	db	110	;'n'
  4050  00F790  64                 	db	100	;'d'
  4051  00F791  20                 	db	32
  4052  00F792  6E                 	db	110	;'n'
  4053  00F793  65                 	db	101	;'e'
  4054  00F794  75                 	db	117	;'u'
  4055  00F795  74                 	db	116	;'t'
  4056  00F796  72                 	db	114	;'r'
  4057  00F797  61                 	db	97	;'a'
  4058  00F798  6C                 	db	108	;'l'
  4059  00F799  20                 	db	32
  4060  00F79A  72                 	db	114	;'r'
  4061  00F79B  65                 	db	101	;'e'
  4062  00F79C  73                 	db	115	;'s'
  4063  00F79D  70                 	db	112	;'p'
  4064  00F79E  6F                 	db	111	;'o'
  4065  00F79F  6E                 	db	110	;'n'
  4066  00F7A0  73                 	db	115	;'s'
  4067  00F7A1  65                 	db	101	;'e'
  4068  00F7A2  73                 	db	115	;'s'
  4069  00F7A3  20                 	db	32
  4070  00F7A4  61                 	db	97	;'a'
  4071  00F7A5  70                 	db	112	;'p'
  4072  00F7A6  70                 	db	112	;'p'
  4073  00F7A7  65                 	db	101	;'e'
  4074  00F7A8  61                 	db	97	;'a'
  4075  00F7A9  72                 	db	114	;'r'
  4076  00F7AA  20                 	db	32
  4077  00F7AB  69                 	db	105	;'i'
  4078  00F7AC  6E                 	db	110	;'n'
  4079  00F7AD  20                 	db	32
  4080  00F7AE  79                 	db	121	;'y'
  4081  00F7AF  65                 	db	101	;'e'
  4082  00F7B0  6C                 	db	108	;'l'
  4083  00F7B1  6C                 	db	108	;'l'
  4084  00F7B2  6F                 	db	111	;'o'
  4085  00F7B3  77                 	db	119	;'w'
  4086  00F7B4  0A                 	db	10
  4087  00F7B5  0D                 	db	13
  4088  00F7B6  00                 	db	0
  4089  00F7B7                     STR_59:
  4090  00F7B7  20                 	db	32
  4091  00F7B8  20                 	db	32
  4092  00F7B9  20                 	db	32
  4093  00F7BA  20                 	db	32
  4094  00F7BB  55                 	db	85	;'U'
  4095  00F7BC  73                 	db	115	;'s'
  4096  00F7BD  65                 	db	101	;'e'
  4097  00F7BE  72                 	db	114	;'r'
  4098  00F7BF  20                 	db	32
  4099  00F7C0  49                 	db	73	;'I'
  4100  00F7C1  44                 	db	68	;'D'
  4101  00F7C2  20                 	db	32
  4102  00F7C3  57                 	db	87	;'W'
  4103  00F7C4  6F                 	db	111	;'o'
  4104  00F7C5  72                 	db	114	;'r'
  4105  00F7C6  64                 	db	100	;'d'
  4106  00F7C7  20                 	db	32
  4107  00F7C8  25                 	db	37
  4108  00F7C9  64                 	db	100	;'d'
  4109  00F7CA  20                 	db	32
  4110  00F7CB  28                 	db	40
  4111  00F7CC  46                 	db	70	;'F'
  4112  00F7CD  6C                 	db	108	;'l'
  4113  00F7CE  61                 	db	97	;'a'
  4114  00F7CF  73                 	db	115	;'s'
  4115  00F7D0  68                 	db	104	;'h'
  4116  00F7D1  20                 	db	32
  4117  00F7D2  61                 	db	97	;'a'
  4118  00F7D3  64                 	db	100	;'d'
  4119  00F7D4  64                 	db	100	;'d'
  4120  00F7D5  72                 	db	114	;'r'
  4121  00F7D6  65                 	db	101	;'e'
  4122  00F7D7  73                 	db	115	;'s'
  4123  00F7D8  73                 	db	115	;'s'
  4124  00F7D9  20                 	db	32
  4125  00F7DA  30                 	db	48	;'0'
  4126  00F7DB  78                 	db	120	;'x'
  4127  00F7DC  32                 	db	50	;'2'
  4128  00F7DD  30                 	db	48	;'0'
  4129  00F7DE  30                 	db	48	;'0'
  4130  00F7DF  30                 	db	48	;'0'
  4131  00F7E0  30                 	db	48	;'0'
  4132  00F7E1  25                 	db	37
  4133  00F7E2  58                 	db	88	;'X'
  4134  00F7E3  29                 	db	41
  4135  00F7E4  3A                 	db	58	;':'
  4136  00F7E5  20                 	db	32
  4137  00F7E6  30                 	db	48	;'0'
  4138  00F7E7  78                 	db	120	;'x'
  4139  00F7E8  25                 	db	37
  4140  00F7E9  58                 	db	88	;'X'
  4141  00F7EA  0A                 	db	10
  4142  00F7EB  0D                 	db	13
  4143  00F7EC  00                 	db	0
  4144  00F7ED                     STR_105:
  4145  00F7ED  4C                 	db	76	;'L'
  4146  00F7EE  6F                 	db	111	;'o'
  4147  00F7EF  61                 	db	97	;'a'
  4148  00F7F0  64                 	db	100	;'d'
  4149  00F7F1  20                 	db	32
  4150  00F7F2  69                 	db	105	;'i'
  4151  00F7F3  73                 	db	115	;'s'
  4152  00F7F4  20                 	db	32
  4153  00F7F5  63                 	db	99	;'c'
  4154  00F7F6  75                 	db	117	;'u'
  4155  00F7F7  72                 	db	114	;'r'
  4156  00F7F8  72                 	db	114	;'r'
  4157  00F7F9  65                 	db	101	;'e'
  4158  00F7FA  6E                 	db	110	;'n'
  4159  00F7FB  74                 	db	116	;'t'
  4160  00F7FC  6C                 	db	108	;'l'
  4161  00F7FD  79                 	db	121	;'y'
  4162  00F7FE  20                 	db	32
  4163  00F7FF  65                 	db	101	;'e'
  4164  00F800  6E                 	db	110	;'n'
  4165  00F801  61                 	db	97	;'a'
  4166  00F802  62                 	db	98	;'b'
  4167  00F803  6C                 	db	108	;'l'
  4168  00F804  65                 	db	101	;'e'
  4169  00F805  64                 	db	100	;'d'
  4170  00F806  2C                 	db	44
  4171  00F807  20                 	db	32
  4172  00F808  62                 	db	98	;'b'
  4173  00F809  75                 	db	117	;'u'
  4174  00F80A  74                 	db	116	;'t'
  4175  00F80B  20                 	db	32
  4176  00F80C  64                 	db	100	;'d'
  4177  00F80D  69                 	db	105	;'i'
  4178  00F80E  6D                 	db	109	;'m'
  4179  00F80F  6D                 	db	109	;'m'
  4180  00F810  69                 	db	105	;'i'
  4181  00F811  6E                 	db	110	;'n'
  4182  00F812  67                 	db	103	;'g'
  4183  00F813  20                 	db	32
  4184  00F814  69                 	db	105	;'i'
  4185  00F815  73                 	db	115	;'s'
  4186  00F816  20                 	db	32
  4187  00F817  64                 	db	100	;'d'
  4188  00F818  69                 	db	105	;'i'
  4189  00F819  73                 	db	115	;'s'
  4190  00F81A  61                 	db	97	;'a'
  4191  00F81B  62                 	db	98	;'b'
  4192  00F81C  6C                 	db	108	;'l'
  4193  00F81D  65                 	db	101	;'e'
  4194  00F81E  64                 	db	100	;'d'
  4195  00F81F  0A                 	db	10
  4196  00F820  0D                 	db	13
  4197  00F821  00                 	db	0
  4198  00F822                     STR_119:
  4199  00F822  4C                 	db	76	;'L'
  4200  00F823  6F                 	db	111	;'o'
  4201  00F824  61                 	db	97	;'a'
  4202  00F825  64                 	db	100	;'d'
  4203  00F826  20                 	db	32
  4204  00F827  6F                 	db	111	;'o'
  4205  00F828  6E                 	db	110	;'n'
  4206  00F829  20                 	db	32
  4207  00F82A  74                 	db	116	;'t'
  4208  00F82B  69                 	db	105	;'i'
  4209  00F82C  6D                 	db	109	;'m'
  4210  00F82D  65                 	db	101	;'e'
  4211  00F82E  20                 	db	32
  4212  00F82F  73                 	db	115	;'s'
  4213  00F830  69                 	db	105	;'i'
  4214  00F831  6E                 	db	110	;'n'
  4215  00F832  63                 	db	99	;'c'
  4216  00F833  65                 	db	101	;'e'
  4217  00F834  20                 	db	32
  4218  00F835  6C                 	db	108	;'l'
  4219  00F836  61                 	db	97	;'a'
  4220  00F837  73                 	db	115	;'s'
  4221  00F838  74                 	db	116	;'t'
  4222  00F839  20                 	db	32
  4223  00F83A  64                 	db	100	;'d'
  4224  00F83B  65                 	db	101	;'e'
  4225  00F83C  76                 	db	118	;'v'
  4226  00F83D  69                 	db	105	;'i'
  4227  00F83E  63                 	db	99	;'c'
  4228  00F83F  65                 	db	101	;'e'
  4229  00F840  20                 	db	32
  4230  00F841  72                 	db	114	;'r'
  4231  00F842  65                 	db	101	;'e'
  4232  00F843  73                 	db	115	;'s'
  4233  00F844  65                 	db	101	;'e'
  4234  00F845  74                 	db	116	;'t'
  4235  00F846  20                 	db	32
  4236  00F847  69                 	db	105	;'i'
  4237  00F848  73                 	db	115	;'s'
  4238  00F849  20                 	db	32
  4239  00F84A  25                 	db	37
  4240  00F84B  64                 	db	100	;'d'
  4241  00F84C  20                 	db	32
  4242  00F84D  73                 	db	115	;'s'
  4243  00F84E  65                 	db	101	;'e'
  4244  00F84F  63                 	db	99	;'c'
  4245  00F850  6F                 	db	111	;'o'
  4246  00F851  6E                 	db	110	;'n'
  4247  00F852  64                 	db	100	;'d'
  4248  00F853  73                 	db	115	;'s'
  4249  00F854  0A                 	db	10
  4250  00F855  0D                 	db	13
  4251  00F856  00                 	db	0
  4252  00F857                     STR_48:
  4253  00F857  54                 	db	84	;'T'
  4254  00F858  68                 	db	104	;'h'
  4255  00F859  65                 	db	101	;'e'
  4256  00F85A  20                 	db	32
  4257  00F85B  63                 	db	99	;'c'
  4258  00F85C  61                 	db	97	;'a'
  4259  00F85D  75                 	db	117	;'u'
  4260  00F85E  73                 	db	115	;'s'
  4261  00F85F  65                 	db	101	;'e'
  4262  00F860  20                 	db	32
  4263  00F861  6F                 	db	111	;'o'
  4264  00F862  66                 	db	102	;'f'
  4265  00F863  20                 	db	32
  4266  00F864  74                 	db	116	;'t'
  4267  00F865  68                 	db	104	;'h'
  4268  00F866  65                 	db	101	;'e'
  4269  00F867  20                 	db	32
  4270  00F868  6D                 	db	109	;'m'
  4271  00F869  6F                 	db	111	;'o'
  4272  00F86A  73                 	db	115	;'s'
  4273  00F86B  74                 	db	116	;'t'
  4274  00F86C  20                 	db	32
  4275  00F86D  72                 	db	114	;'r'
  4276  00F86E  65                 	db	101	;'e'
  4277  00F86F  63                 	db	99	;'c'
  4278  00F870  65                 	db	101	;'e'
  4279  00F871  6E                 	db	110	;'n'
  4280  00F872  74                 	db	116	;'t'
  4281  00F873  20                 	db	32
  4282  00F874  64                 	db	100	;'d'
  4283  00F875  65                 	db	101	;'e'
  4284  00F876  76                 	db	118	;'v'
  4285  00F877  69                 	db	105	;'i'
  4286  00F878  63                 	db	99	;'c'
  4287  00F879  65                 	db	101	;'e'
  4288  00F87A  20                 	db	32
  4289  00F87B  72                 	db	114	;'r'
  4290  00F87C  65                 	db	101	;'e'
  4291  00F87D  73                 	db	115	;'s'
  4292  00F87E  65                 	db	101	;'e'
  4293  00F87F  74                 	db	116	;'t'
  4294  00F880  20                 	db	32
  4295  00F881  77                 	db	119	;'w'
  4296  00F882  61                 	db	97	;'a'
  4297  00F883  73                 	db	115	;'s'
  4298  00F884  3A                 	db	58	;':'
  4299  00F885  20                 	db	32
  4300  00F886  25                 	db	37
  4301  00F887  73                 	db	115	;'s'
  4302  00F888  0A                 	db	10
  4303  00F889  0D                 	db	13
  4304  00F88A  00                 	db	0
  4305  00F88B                     STR_121:
  4306  00F88B  4D                 	db	77	;'M'
  4307  00F88C  61                 	db	97	;'a'
  4308  00F88D  78                 	db	120	;'x'
  4309  00F88E  69                 	db	105	;'i'
  4310  00F88F  6D                 	db	109	;'m'
  4311  00F890  75                 	db	117	;'u'
  4312  00F891  6D                 	db	109	;'m'
  4313  00F892  20                 	db	32
  4314  00F893  72                 	db	114	;'r'
  4315  00F894  65                 	db	101	;'e'
  4316  00F895  63                 	db	99	;'c'
  4317  00F896  6F                 	db	111	;'o'
  4318  00F897  72                 	db	114	;'r'
  4319  00F898  64                 	db	100	;'d'
  4320  00F899  65                 	db	101	;'e'
  4321  00F89A  64                 	db	100	;'d'
  4322  00F89B  20                 	db	32
  4323  00F89C  52                 	db	82	;'R'
  4324  00F89D  4D                 	db	77	;'M'
  4325  00F89E  53                 	db	83	;'S'
  4326  00F89F  20                 	db	32
  4327  00F8A0  6F                 	db	111	;'o'
  4328  00F8A1  75                 	db	117	;'u'
  4329  00F8A2  74                 	db	116	;'t'
  4330  00F8A3  70                 	db	112	;'p'
  4331  00F8A4  75                 	db	117	;'u'
  4332  00F8A5  74                 	db	116	;'t'
  4333  00F8A6  20                 	db	32
  4334  00F8A7  63                 	db	99	;'c'
  4335  00F8A8  75                 	db	117	;'u'
  4336  00F8A9  72                 	db	114	;'r'
  4337  00F8AA  72                 	db	114	;'r'
  4338  00F8AB  65                 	db	101	;'e'
  4339  00F8AC  6E                 	db	110	;'n'
  4340  00F8AD  74                 	db	116	;'t'
  4341  00F8AE  20                 	db	32
  4342  00F8AF  69                 	db	105	;'i'
  4343  00F8B0  73                 	db	115	;'s'
  4344  00F8B1  20                 	db	32
  4345  00F8B2  25                 	db	37
  4346  00F8B3  2E                 	db	46
  4347  00F8B4  33                 	db	51	;'3'
  4348  00F8B5  66                 	db	102	;'f'
  4349  00F8B6  20                 	db	32
  4350  00F8B7  41                 	db	65	;'A'
  4351  00F8B8  72                 	db	114	;'r'
  4352  00F8B9  6D                 	db	109	;'m'
  4353  00F8BA  73                 	db	115	;'s'
  4354  00F8BB  0A                 	db	10
  4355  00F8BC  0D                 	db	13
  4356  00F8BD  00                 	db	0
  4357  00F8BE                     STR_69:
  4358  00F8BE  54                 	db	84	;'T'
  4359  00F8BF  68                 	db	104	;'h'
  4360  00F8C0  65                 	db	101	;'e'
  4361  00F8C1  20                 	db	32
  4362  00F8C2  66                 	db	102	;'f'
  4363  00F8C3  6F                 	db	111	;'o'
  4364  00F8C4  6C                 	db	108	;'l'
  4365  00F8C5  6C                 	db	108	;'l'
  4366  00F8C6  6F                 	db	111	;'o'
  4367  00F8C7  77                 	db	119	;'w'
  4368  00F8C8  69                 	db	105	;'i'
  4369  00F8C9  6E                 	db	110	;'n'
  4370  00F8CA  67                 	db	103	;'g'
  4371  00F8CB  20                 	db	32
  4372  00F8CC  63                 	db	99	;'c'
  4373  00F8CD  68                 	db	104	;'h'
  4374  00F8CE  61                 	db	97	;'a'
  4375  00F8CF  6E                 	db	110	;'n'
  4376  00F8D0  6E                 	db	110	;'n'
  4377  00F8D1  65                 	db	101	;'e'
  4378  00F8D2  6C                 	db	108	;'l'
  4379  00F8D3  20                 	db	32
  4380  00F8D4  63                 	db	99	;'c'
  4381  00F8D5  61                 	db	97	;'a'
  4382  00F8D6  75                 	db	117	;'u'
  4383  00F8D7  73                 	db	115	;'s'
  4384  00F8D8  65                 	db	101	;'e'
  4385  00F8D9  64                 	db	100	;'d'
  4386  00F8DA  20                 	db	32
  4387  00F8DB  61                 	db	97	;'a'
  4388  00F8DC  6E                 	db	110	;'n'
  4389  00F8DD  20                 	db	32
  4390  00F8DE  41                 	db	65	;'A'
  4391  00F8DF  44                 	db	68	;'D'
  4392  00F8E0  43                 	db	67	;'C'
  4393  00F8E1  20                 	db	32
  4394  00F8E2  65                 	db	101	;'e'
  4395  00F8E3  72                 	db	114	;'r'
  4396  00F8E4  72                 	db	114	;'r'
  4397  00F8E5  6F                 	db	111	;'o'
  4398  00F8E6  72                 	db	114	;'r'
  4399  00F8E7  3A                 	db	58	;':'
  4400  00F8E8  20                 	db	32
  4401  00F8E9  25                 	db	37
  4402  00F8EA  73                 	db	115	;'s'
  4403  00F8EB  0A                 	db	10
  4404  00F8EC  0D                 	db	13
  4405  00F8ED  00                 	db	0
  4406  00F8EE                     STR_52:
  4407  00F8EE  4D                 	db	77	;'M'
  4408  00F8EF  61                 	db	97	;'a'
  4409  00F8F0  72                 	db	114	;'r'
  4410  00F8F1  71                 	db	113	;'q'
  4411  00F8F2  75                 	db	117	;'u'
  4412  00F8F3  65                 	db	101	;'e'
  4413  00F8F4  74                 	db	116	;'t'
  4414  00F8F5  74                 	db	116	;'t'
  4415  00F8F6  65                 	db	101	;'e'
  4416  00F8F7  20                 	db	32
  4417  00F8F8  55                 	db	85	;'U'
  4418  00F8F9  6E                 	db	110	;'n'
  4419  00F8FA  69                 	db	105	;'i'
  4420  00F8FB  76                 	db	118	;'v'
  4421  00F8FC  65                 	db	101	;'e'
  4422  00F8FD  72                 	db	114	;'r'
  4423  00F8FE  73                 	db	115	;'s'
  4424  00F8FF  69                 	db	105	;'i'
  4425  00F900  74                 	db	116	;'t'
  4426  00F901  79                 	db	121	;'y'
  4427  00F902  20                 	db	32
  4428  00F903  45                 	db	69	;'E'
  4429  00F904  4C                 	db	76	;'L'
  4430  00F905  45                 	db	69	;'E'
  4431  00F906  4E                 	db	78	;'N'
  4432  00F907  20                 	db	32
  4433  00F908  33                 	db	51	;'3'
  4434  00F909  30                 	db	48	;'0'
  4435  00F90A  33                 	db	51	;'3'
  4436  00F90B  35                 	db	53	;'5'
  4437  00F90C  20                 	db	32
  4438  00F90D  46                 	db	70	;'F'
  4439  00F90E  69                 	db	105	;'i'
  4440  00F90F  6E                 	db	110	;'n'
  4441  00F910  61                 	db	97	;'a'
  4442  00F911  6C                 	db	108	;'l'
  4443  00F912  20                 	db	32
  4444  00F913  50                 	db	80	;'P'
  4445  00F914  72                 	db	114	;'r'
  4446  00F915  6F                 	db	111	;'o'
  4447  00F916  6A                 	db	106	;'j'
  4448  00F917  65                 	db	101	;'e'
  4449  00F918  63                 	db	99	;'c'
  4450  00F919  74                 	db	116	;'t'
  4451  00F91A  0A                 	db	10
  4452  00F91B  0D                 	db	13
  4453  00F91C  00                 	db	0
  4454  00F91D                     STR_131:
  4455  00F91D  45                 	db	69	;'E'
  4456  00F91E  72                 	db	114	;'r'
  4457  00F91F  72                 	db	114	;'r'
  4458  00F920  6F                 	db	111	;'o'
  4459  00F921  72                 	db	114	;'r'
  4460  00F922  73                 	db	115	;'s'
  4461  00F923  20                 	db	32
  4462  00F924  61                 	db	97	;'a'
  4463  00F925  6E                 	db	110	;'n'
  4464  00F926  64                 	db	100	;'d'
  4465  00F927  20                 	db	32
  4466  00F928  6E                 	db	110	;'n'
  4467  00F929  65                 	db	101	;'e'
  4468  00F92A  67                 	db	103	;'g'
  4469  00F92B  61                 	db	97	;'a'
  4470  00F92C  74                 	db	116	;'t'
  4471  00F92D  69                 	db	105	;'i'
  4472  00F92E  76                 	db	118	;'v'
  4473  00F92F  65                 	db	101	;'e'
  4474  00F930  20                 	db	32
  4475  00F931  72                 	db	114	;'r'
  4476  00F932  65                 	db	101	;'e'
  4477  00F933  73                 	db	115	;'s'
  4478  00F934  70                 	db	112	;'p'
  4479  00F935  6F                 	db	111	;'o'
  4480  00F936  6E                 	db	110	;'n'
  4481  00F937  73                 	db	115	;'s'
  4482  00F938  65                 	db	101	;'e'
  4483  00F939  73                 	db	115	;'s'
  4484  00F93A  20                 	db	32
  4485  00F93B  61                 	db	97	;'a'
  4486  00F93C  70                 	db	112	;'p'
  4487  00F93D  70                 	db	112	;'p'
  4488  00F93E  65                 	db	101	;'e'
  4489  00F93F  61                 	db	97	;'a'
  4490  00F940  72                 	db	114	;'r'
  4491  00F941  20                 	db	32
  4492  00F942  69                 	db	105	;'i'
  4493  00F943  6E                 	db	110	;'n'
  4494  00F944  20                 	db	32
  4495  00F945  72                 	db	114	;'r'
  4496  00F946  65                 	db	101	;'e'
  4497  00F947  64                 	db	100	;'d'
  4498  00F948  0A                 	db	10
  4499  00F949  0D                 	db	13
  4500  00F94A  00                 	db	0
  4501  00F94B                     STR_112:
  4502  00F94B  45                 	db	69	;'E'
  4503  00F94C  6E                 	db	110	;'n'
  4504  00F94D  74                 	db	116	;'t'
  4505  00F94E  65                 	db	101	;'e'
  4506  00F94F  72                 	db	114	;'r'
  4507  00F950  20                 	db	32
  4508  00F951  27                 	db	39
  4509  00F952  48                 	db	72	;'H'
  4510  00F953  65                 	db	101	;'e'
  4511  00F954  6C                 	db	108	;'l'
  4512  00F955  70                 	db	112	;'p'
  4513  00F956  27                 	db	39
  4514  00F957  20                 	db	32
  4515  00F958  66                 	db	102	;'f'
  4516  00F959  6F                 	db	111	;'o'
  4517  00F95A  72                 	db	114	;'r'
  4518  00F95B  20                 	db	32
  4519  00F95C  6C                 	db	108	;'l'
  4520  00F95D  69                 	db	105	;'i'
  4521  00F95E  73                 	db	115	;'s'
  4522  00F95F  74                 	db	116	;'t'
  4523  00F960  20                 	db	32
  4524  00F961  6F                 	db	111	;'o'
  4525  00F962  66                 	db	102	;'f'
  4526  00F963  20                 	db	32
  4527  00F964  61                 	db	97	;'a'
  4528  00F965  76                 	db	118	;'v'
  4529  00F966  61                 	db	97	;'a'
  4530  00F967  69                 	db	105	;'i'
  4531  00F968  6C                 	db	108	;'l'
  4532  00F969  61                 	db	97	;'a'
  4533  00F96A  62                 	db	98	;'b'
  4534  00F96B  6C                 	db	108	;'l'
  4535  00F96C  65                 	db	101	;'e'
  4536  00F96D  20                 	db	32
  4537  00F96E  63                 	db	99	;'c'
  4538  00F96F  6F                 	db	111	;'o'
  4539  00F970  6D                 	db	109	;'m'
  4540  00F971  6D                 	db	109	;'m'
  4541  00F972  61                 	db	97	;'a'
  4542  00F973  6E                 	db	110	;'n'
  4543  00F974  64                 	db	100	;'d'
  4544  00F975  73                 	db	115	;'s'
  4545  00F976  0A                 	db	10
  4546  00F977  0D                 	db	13
  4547  00F978  00                 	db	0
  4548  00F979                     STR_123:
  4549  00F979  4D                 	db	77	;'M'
  4550  00F97A  61                 	db	97	;'a'
  4551  00F97B  78                 	db	120	;'x'
  4552  00F97C  69                 	db	105	;'i'
  4553  00F97D  6D                 	db	109	;'m'
  4554  00F97E  75                 	db	117	;'u'
  4555  00F97F  6D                 	db	109	;'m'
  4556  00F980  20                 	db	32
  4557  00F981  72                 	db	114	;'r'
  4558  00F982  65                 	db	101	;'e'
  4559  00F983  63                 	db	99	;'c'
  4560  00F984  6F                 	db	111	;'o'
  4561  00F985  72                 	db	114	;'r'
  4562  00F986  64                 	db	100	;'d'
  4563  00F987  65                 	db	101	;'e'
  4564  00F988  64                 	db	100	;'d'
  4565  00F989  20                 	db	32
  4566  00F98A  6F                 	db	111	;'o'
  4567  00F98B  75                 	db	117	;'u'
  4568  00F98C  74                 	db	116	;'t'
  4569  00F98D  70                 	db	112	;'p'
  4570  00F98E  75                 	db	117	;'u'
  4571  00F98F  74                 	db	116	;'t'
  4572  00F990  20                 	db	32
  4573  00F991  50                 	db	80	;'P'
  4574  00F992  6F                 	db	111	;'o'
  4575  00F993  77                 	db	119	;'w'
  4576  00F994  65                 	db	101	;'e'
  4577  00F995  72                 	db	114	;'r'
  4578  00F996  20                 	db	32
  4579  00F997  69                 	db	105	;'i'
  4580  00F998  73                 	db	115	;'s'
  4581  00F999  20                 	db	32
  4582  00F99A  25                 	db	37
  4583  00F99B  2E                 	db	46
  4584  00F99C  33                 	db	51	;'3'
  4585  00F99D  66                 	db	102	;'f'
  4586  00F99E  20                 	db	32
  4587  00F99F  57                 	db	87	;'W'
  4588  00F9A0  61                 	db	97	;'a'
  4589  00F9A1  74                 	db	116	;'t'
  4590  00F9A2  74                 	db	116	;'t'
  4591  00F9A3  73                 	db	115	;'s'
  4592  00F9A4  0A                 	db	10
  4593  00F9A5  0D                 	db	13
  4594  00F9A6  00                 	db	0
  4595  00F9A7                     STR_75:
  4596  00F9A7  56                 	db	86	;'V'
  4597  00F9A8  43                 	db	67	;'C'
  4598  00F9A9  43                 	db	67	;'C'
  4599  00F9AA  20                 	db	32
  4600  00F9AB  4F                 	db	79	;'O'
  4601  00F9AC  76                 	db	118	;'v'
  4602  00F9AD  65                 	db	101	;'e'
  4603  00F9AE  72                 	db	114	;'r'
  4604  00F9AF  76                 	db	118	;'v'
  4605  00F9B0  6F                 	db	111	;'o'
  4606  00F9B1  6C                 	db	108	;'l'
  4607  00F9B2  74                 	db	116	;'t'
  4608  00F9B3  61                 	db	97	;'a'
  4609  00F9B4  67                 	db	103	;'g'
  4610  00F9B5  65                 	db	101	;'e'
  4611  00F9B6  20                 	db	32
  4612  00F9B7  63                 	db	99	;'c'
  4613  00F9B8  6F                 	db	111	;'o'
  4614  00F9B9  6E                 	db	110	;'n'
  4615  00F9BA  64                 	db	100	;'d'
  4616  00F9BB  69                 	db	105	;'i'
  4617  00F9BC  74                 	db	116	;'t'
  4618  00F9BD  69                 	db	105	;'i'
  4619  00F9BE  6F                 	db	111	;'o'
  4620  00F9BF  6E                 	db	110	;'n'
  4621  00F9C0  20                 	db	32
  4622  00F9C1  68                 	db	104	;'h'
  4623  00F9C2  61                 	db	97	;'a'
  4624  00F9C3  73                 	db	115	;'s'
  4625  00F9C4  20                 	db	32
  4626  00F9C5  6E                 	db	110	;'n'
  4627  00F9C6  6F                 	db	111	;'o'
  4628  00F9C7  74                 	db	116	;'t'
  4629  00F9C8  20                 	db	32
  4630  00F9C9  6F                 	db	111	;'o'
  4631  00F9CA  63                 	db	99	;'c'
  4632  00F9CB  63                 	db	99	;'c'
  4633  00F9CC  75                 	db	117	;'u'
  4634  00F9CD  72                 	db	114	;'r'
  4635  00F9CE  72                 	db	114	;'r'
  4636  00F9CF  65                 	db	101	;'e'
  4637  00F9D0  64                 	db	100	;'d'
  4638  00F9D1  0A                 	db	10
  4639  00F9D2  0D                 	db	13
  4640  00F9D3  00                 	db	0
  4641  00F9D4                     STR_99:
  4642  00F9D4  4C                 	db	76	;'L'
  4643  00F9D5  6F                 	db	111	;'o'
  4644  00F9D6  61                 	db	97	;'a'
  4645  00F9D7  64                 	db	100	;'d'
  4646  00F9D8  20                 	db	32
  4647  00F9D9  68                 	db	104	;'h'
  4648  00F9DA  61                 	db	97	;'a'
  4649  00F9DB  73                 	db	115	;'s'
  4650  00F9DC  20                 	db	32
  4651  00F9DD  62                 	db	98	;'b'
  4652  00F9DE  65                 	db	101	;'e'
  4653  00F9DF  65                 	db	101	;'e'
  4654  00F9E0  6E                 	db	110	;'n'
  4655  00F9E1  20                 	db	32
  4656  00F9E2  65                 	db	101	;'e'
  4657  00F9E3  6E                 	db	110	;'n'
  4658  00F9E4  61                 	db	97	;'a'
  4659  00F9E5  62                 	db	98	;'b'
  4660  00F9E6  6C                 	db	108	;'l'
  4661  00F9E7  65                 	db	101	;'e'
  4662  00F9E8  64                 	db	100	;'d'
  4663  00F9E9  2C                 	db	44
  4664  00F9EA  20                 	db	32
  4665  00F9EB  64                 	db	100	;'d'
  4666  00F9EC  69                 	db	105	;'i'
  4667  00F9ED  6D                 	db	109	;'m'
  4668  00F9EE  6D                 	db	109	;'m'
  4669  00F9EF  69                 	db	105	;'i'
  4670  00F9F0  6E                 	db	110	;'n'
  4671  00F9F1  67                 	db	103	;'g'
  4672  00F9F2  20                 	db	32
  4673  00F9F3  64                 	db	100	;'d'
  4674  00F9F4  69                 	db	105	;'i'
  4675  00F9F5  73                 	db	115	;'s'
  4676  00F9F6  61                 	db	97	;'a'
  4677  00F9F7  62                 	db	98	;'b'
  4678  00F9F8  6C                 	db	108	;'l'
  4679  00F9F9  65                 	db	101	;'e'
  4680  00F9FA  64                 	db	100	;'d'
  4681  00F9FB  0A                 	db	10
  4682  00F9FC  0D                 	db	13
  4683  00F9FD  00                 	db	0
  4684  00F9FE                     STR_106:
  4685  00F9FE  4C                 	db	76	;'L'
  4686  00F9FF  6F                 	db	111	;'o'
  4687  00FA00  61                 	db	97	;'a'
  4688  00FA01  64                 	db	100	;'d'
  4689  00FA02  20                 	db	32
  4690  00FA03  61                 	db	97	;'a'
  4691  00FA04  6E                 	db	110	;'n'
  4692  00FA05  64                 	db	100	;'d'
  4693  00FA06  20                 	db	32
  4694  00FA07  64                 	db	100	;'d'
  4695  00FA08  69                 	db	105	;'i'
  4696  00FA09  6D                 	db	109	;'m'
  4697  00FA0A  6D                 	db	109	;'m'
  4698  00FA0B  69                 	db	105	;'i'
  4699  00FA0C  6E                 	db	110	;'n'
  4700  00FA0D  67                 	db	103	;'g'
  4701  00FA0E  20                 	db	32
  4702  00FA0F  61                 	db	97	;'a'
  4703  00FA10  72                 	db	114	;'r'
  4704  00FA11  65                 	db	101	;'e'
  4705  00FA12  20                 	db	32
  4706  00FA13  63                 	db	99	;'c'
  4707  00FA14  75                 	db	117	;'u'
  4708  00FA15  72                 	db	114	;'r'
  4709  00FA16  72                 	db	114	;'r'
  4710  00FA17  65                 	db	101	;'e'
  4711  00FA18  6E                 	db	110	;'n'
  4712  00FA19  74                 	db	116	;'t'
  4713  00FA1A  6C                 	db	108	;'l'
  4714  00FA1B  79                 	db	121	;'y'
  4715  00FA1C  20                 	db	32
  4716  00FA1D  64                 	db	100	;'d'
  4717  00FA1E  69                 	db	105	;'i'
  4718  00FA1F  73                 	db	115	;'s'
  4719  00FA20  61                 	db	97	;'a'
  4720  00FA21  62                 	db	98	;'b'
  4721  00FA22  6C                 	db	108	;'l'
  4722  00FA23  65                 	db	101	;'e'
  4723  00FA24  64                 	db	100	;'d'
  4724  00FA25  0A                 	db	10
  4725  00FA26  0D                 	db	13
  4726  00FA27  00                 	db	0
  4727  00FA28                     STR_141:
  4728  00FA28  57                 	db	87	;'W'
  4729  00FA29  69                 	db	105	;'i'
  4730  00FA2A  6E                 	db	110	;'n'
  4731  00FA2B  64                 	db	100	;'d'
  4732  00FA2C  6F                 	db	111	;'o'
  4733  00FA2D  77                 	db	119	;'w'
  4734  00FA2E  65                 	db	101	;'e'
  4735  00FA2F  64                 	db	100	;'d'
  4736  00FA30  20                 	db	32
  4737  00FA31  57                 	db	87	;'W'
  4738  00FA32  61                 	db	97	;'a'
  4739  00FA33  74                 	db	116	;'t'
  4740  00FA34  63                 	db	99	;'c'
  4741  00FA35  68                 	db	104	;'h'
  4742  00FA36  20                 	db	32
  4743  00FA37  44                 	db	68	;'D'
  4744  00FA38  6F                 	db	111	;'o'
  4745  00FA39  67                 	db	103	;'g'
  4746  00FA3A  20                 	db	32
  4747  00FA3B  54                 	db	84	;'T'
  4748  00FA3C  69                 	db	105	;'i'
  4749  00FA3D  6D                 	db	109	;'m'
  4750  00FA3E  65                 	db	101	;'e'
  4751  00FA3F  72                 	db	114	;'r'
  4752  00FA40  20                 	db	32
  4753  00FA41  56                 	db	86	;'V'
  4754  00FA42  69                 	db	105	;'i'
  4755  00FA43  6F                 	db	111	;'o'
  4756  00FA44  6C                 	db	108	;'l'
  4757  00FA45  61                 	db	97	;'a'
  4758  00FA46  74                 	db	116	;'t'
  4759  00FA47  69                 	db	105	;'i'
  4760  00FA48  6F                 	db	111	;'o'
  4761  00FA49  6E                 	db	110	;'n'
  4762  00FA4A  20                 	db	32
  4763  00FA4B  52                 	db	82	;'R'
  4764  00FA4C  65                 	db	101	;'e'
  4765  00FA4D  73                 	db	115	;'s'
  4766  00FA4E  65                 	db	101	;'e'
  4767  00FA4F  74                 	db	116	;'t'
  4768  00FA50  00                 	db	0
  4769  00FA51                     STR_97:
  4770  00FA51  54                 	db	84	;'T'
  4771  00FA52  52                 	db	82	;'R'
  4772  00FA53  49                 	db	73	;'I'
  4773  00FA54  41                 	db	65	;'A'
  4774  00FA55  43                 	db	67	;'C'
  4775  00FA56  20                 	db	32
  4776  00FA57  6F                 	db	111	;'o'
  4777  00FA58  75                 	db	117	;'u'
  4778  00FA59  74                 	db	116	;'t'
  4779  00FA5A  70                 	db	112	;'p'
  4780  00FA5B  75                 	db	117	;'u'
  4781  00FA5C  74                 	db	116	;'t'
  4782  00FA5D  20                 	db	32
  4783  00FA5E  64                 	db	100	;'d'
  4784  00FA5F  69                 	db	105	;'i'
  4785  00FA60  6D                 	db	109	;'m'
  4786  00FA61  6D                 	db	109	;'m'
  4787  00FA62  69                 	db	105	;'i'
  4788  00FA63  6E                 	db	110	;'n'
  4789  00FA64  67                 	db	103	;'g'
  4790  00FA65  20                 	db	32
  4791  00FA66  68                 	db	104	;'h'
  4792  00FA67  61                 	db	97	;'a'
  4793  00FA68  73                 	db	115	;'s'
  4794  00FA69  20                 	db	32
  4795  00FA6A  62                 	db	98	;'b'
  4796  00FA6B  65                 	db	101	;'e'
  4797  00FA6C  65                 	db	101	;'e'
  4798  00FA6D  6E                 	db	110	;'n'
  4799  00FA6E  20                 	db	32
  4800  00FA6F  64                 	db	100	;'d'
  4801  00FA70  69                 	db	105	;'i'
  4802  00FA71  73                 	db	115	;'s'
  4803  00FA72  61                 	db	97	;'a'
  4804  00FA73  62                 	db	98	;'b'
  4805  00FA74  6C                 	db	108	;'l'
  4806  00FA75  65                 	db	101	;'e'
  4807  00FA76  64                 	db	100	;'d'
  4808  00FA77  0A                 	db	10
  4809  00FA78  0D                 	db	13
  4810  00FA79  00                 	db	0
  4811  00FA7A                     STR_95:
  4812  00FA7A  54                 	db	84	;'T'
  4813  00FA7B  52                 	db	82	;'R'
  4814  00FA7C  49                 	db	73	;'I'
  4815  00FA7D  41                 	db	65	;'A'
  4816  00FA7E  43                 	db	67	;'C'
  4817  00FA7F  20                 	db	32
  4818  00FA80  6F                 	db	111	;'o'
  4819  00FA81  75                 	db	117	;'u'
  4820  00FA82  74                 	db	116	;'t'
  4821  00FA83  70                 	db	112	;'p'
  4822  00FA84  75                 	db	117	;'u'
  4823  00FA85  74                 	db	116	;'t'
  4824  00FA86  20                 	db	32
  4825  00FA87  64                 	db	100	;'d'
  4826  00FA88  69                 	db	105	;'i'
  4827  00FA89  6D                 	db	109	;'m'
  4828  00FA8A  6D                 	db	109	;'m'
  4829  00FA8B  69                 	db	105	;'i'
  4830  00FA8C  6E                 	db	110	;'n'
  4831  00FA8D  67                 	db	103	;'g'
  4832  00FA8E  20                 	db	32
  4833  00FA8F  68                 	db	104	;'h'
  4834  00FA90  61                 	db	97	;'a'
  4835  00FA91  73                 	db	115	;'s'
  4836  00FA92  20                 	db	32
  4837  00FA93  62                 	db	98	;'b'
  4838  00FA94  65                 	db	101	;'e'
  4839  00FA95  65                 	db	101	;'e'
  4840  00FA96  6E                 	db	110	;'n'
  4841  00FA97  20                 	db	32
  4842  00FA98  65                 	db	101	;'e'
  4843  00FA99  6E                 	db	110	;'n'
  4844  00FA9A  61                 	db	97	;'a'
  4845  00FA9B  62                 	db	98	;'b'
  4846  00FA9C  6C                 	db	108	;'l'
  4847  00FA9D  65                 	db	101	;'e'
  4848  00FA9E  64                 	db	100	;'d'
  4849  00FA9F  0A                 	db	10
  4850  00FAA0  0D                 	db	13
  4851  00FAA1  00                 	db	0
  4852  00FAA2                     STR_130:
  4853  00FAA2  4D                 	db	77	;'M'
  4854  00FAA3  65                 	db	101	;'e'
  4855  00FAA4  61                 	db	97	;'a'
  4856  00FAA5  73                 	db	115	;'s'
  4857  00FAA6  75                 	db	117	;'u'
  4858  00FAA7  72                 	db	114	;'r'
  4859  00FAA8  65                 	db	101	;'e'
  4860  00FAA9  6D                 	db	109	;'m'
  4861  00FAAA  65                 	db	101	;'e'
  4862  00FAAB  6E                 	db	110	;'n'
  4863  00FAAC  74                 	db	116	;'t'
  4864  00FAAD  20                 	db	32
  4865  00FAAE  72                 	db	114	;'r'
  4866  00FAAF  65                 	db	101	;'e'
  4867  00FAB0  73                 	db	115	;'s'
  4868  00FAB1  70                 	db	112	;'p'
  4869  00FAB2  6F                 	db	111	;'o'
  4870  00FAB3  6E                 	db	110	;'n'
  4871  00FAB4  73                 	db	115	;'s'
  4872  00FAB5  65                 	db	101	;'e'
  4873  00FAB6  73                 	db	115	;'s'
  4874  00FAB7  20                 	db	32
  4875  00FAB8  61                 	db	97	;'a'
  4876  00FAB9  70                 	db	112	;'p'
  4877  00FABA  70                 	db	112	;'p'
  4878  00FABB  65                 	db	101	;'e'
  4879  00FABC  61                 	db	97	;'a'
  4880  00FABD  72                 	db	114	;'r'
  4881  00FABE  20                 	db	32
  4882  00FABF  69                 	db	105	;'i'
  4883  00FAC0  6E                 	db	110	;'n'
  4884  00FAC1  20                 	db	32
  4885  00FAC2  63                 	db	99	;'c'
  4886  00FAC3  79                 	db	121	;'y'
  4887  00FAC4  61                 	db	97	;'a'
  4888  00FAC5  6E                 	db	110	;'n'
  4889  00FAC6  0A                 	db	10
  4890  00FAC7  0D                 	db	13
  4891  00FAC8  00                 	db	0
  4892  00FAC9                     STR_85:
  4893  00FAC9  41                 	db	65	;'A'
  4894  00FACA  56                 	db	86	;'V'
  4895  00FACB  53                 	db	83	;'S'
  4896  00FACC  53                 	db	83	;'S'
  4897  00FACD  20                 	db	32
  4898  00FACE  6D                 	db	109	;'m'
  4899  00FACF  65                 	db	101	;'e'
  4900  00FAD0  61                 	db	97	;'a'
  4901  00FAD1  73                 	db	115	;'s'
  4902  00FAD2  75                 	db	117	;'u'
  4903  00FAD3  72                 	db	114	;'r'
  4904  00FAD4  65                 	db	101	;'e'
  4905  00FAD5  64                 	db	100	;'d'
  4906  00FAD6  20                 	db	32
  4907  00FAD7  61                 	db	97	;'a'
  4908  00FAD8  73                 	db	115	;'s'
  4909  00FAD9  20                 	db	32
  4910  00FADA  25                 	db	37
  4911  00FADB  2E                 	db	46
  4912  00FADC  33                 	db	51	;'3'
  4913  00FADD  66                 	db	102	;'f'
  4914  00FADE  20                 	db	32
  4915  00FADF  56                 	db	86	;'V'
  4916  00FAE0  6F                 	db	111	;'o'
  4917  00FAE1  6C                 	db	108	;'l'
  4918  00FAE2  74                 	db	116	;'t'
  4919  00FAE3  73                 	db	115	;'s'
  4920  00FAE4  20                 	db	32
  4921  00FAE5  62                 	db	98	;'b'
  4922  00FAE6  79                 	db	121	;'y'
  4923  00FAE7  20                 	db	32
  4924  00FAE8  41                 	db	65	;'A'
  4925  00FAE9  44                 	db	68	;'D'
  4926  00FAEA  43                 	db	67	;'C'
  4927  00FAEB  0A                 	db	10
  4928  00FAEC  0D                 	db	13
  4929  00FAED  00                 	db	0
  4930  00FAEE                     STR_77:
  4931  00FAEE  2B                 	db	43
  4932  00FAEF  33                 	db	51	;'3'
  4933  00FAF0  2E                 	db	46
  4934  00FAF1  33                 	db	51	;'3'
  4935  00FAF2  56                 	db	86	;'V'
  4936  00FAF3  20                 	db	32
  4937  00FAF4  72                 	db	114	;'r'
  4938  00FAF5  61                 	db	97	;'a'
  4939  00FAF6  69                 	db	105	;'i'
  4940  00FAF7  6C                 	db	108	;'l'
  4941  00FAF8  20                 	db	32
  4942  00FAF9  6D                 	db	109	;'m'
  4943  00FAFA  65                 	db	101	;'e'
  4944  00FAFB  61                 	db	97	;'a'
  4945  00FAFC  73                 	db	115	;'s'
  4946  00FAFD  75                 	db	117	;'u'
  4947  00FAFE  72                 	db	114	;'r'
  4948  00FAFF  65                 	db	101	;'e'
  4949  00FB00  64                 	db	100	;'d'
  4950  00FB01  20                 	db	32
  4951  00FB02  61                 	db	97	;'a'
  4952  00FB03  73                 	db	115	;'s'
  4953  00FB04  20                 	db	32
  4954  00FB05  2B                 	db	43
  4955  00FB06  25                 	db	37
  4956  00FB07  2E                 	db	46
  4957  00FB08  33                 	db	51	;'3'
  4958  00FB09  66                 	db	102	;'f'
  4959  00FB0A  20                 	db	32
  4960  00FB0B  56                 	db	86	;'V'
  4961  00FB0C  6F                 	db	111	;'o'
  4962  00FB0D  6C                 	db	108	;'l'
  4963  00FB0E  74                 	db	116	;'t'
  4964  00FB0F  73                 	db	115	;'s'
  4965  00FB10  0A                 	db	10
  4966  00FB11  0D                 	db	13
  4967  00FB12  00                 	db	0
  4968  00FB13                     STR_113:
  4969  00FB13  44                 	db	68	;'D'
  4970  00FB14  69                 	db	105	;'i'
  4971  00FB15  6D                 	db	109	;'m'
  4972  00FB16  6D                 	db	109	;'m'
  4973  00FB17  69                 	db	105	;'i'
  4974  00FB18  6E                 	db	110	;'n'
  4975  00FB19  67                 	db	103	;'g'
  4976  00FB1A  20                 	db	32
  4977  00FB1B  68                 	db	104	;'h'
  4978  00FB1C  61                 	db	97	;'a'
  4979  00FB1D  73                 	db	115	;'s'
  4980  00FB1E  20                 	db	32
  4981  00FB1F  62                 	db	98	;'b'
  4982  00FB20  65                 	db	101	;'e'
  4983  00FB21  65                 	db	101	;'e'
  4984  00FB22  6E                 	db	110	;'n'
  4985  00FB23  20                 	db	32
  4986  00FB24  73                 	db	115	;'s'
  4987  00FB25  65                 	db	101	;'e'
  4988  00FB26  74                 	db	116	;'t'
  4989  00FB27  20                 	db	32
  4990  00FB28  74                 	db	116	;'t'
  4991  00FB29  6F                 	db	111	;'o'
  4992  00FB2A  20                 	db	32
  4993  00FB2B  25                 	db	37
  4994  00FB2C  64                 	db	100	;'d'
  4995  00FB2D  20                 	db	32
  4996  00FB2E  70                 	db	112	;'p'
  4997  00FB2F  65                 	db	101	;'e'
  4998  00FB30  72                 	db	114	;'r'
  4999  00FB31  63                 	db	99	;'c'
  5000  00FB32  65                 	db	101	;'e'
  5001  00FB33  6E                 	db	110	;'n'
  5002  00FB34  74                 	db	116	;'t'
  5003  00FB35  0A                 	db	10
  5004  00FB36  0D                 	db	13
  5005  00FB37  00                 	db	0
  5006  00FB38                     STR_81:
  5007  00FB38  44                 	db	68	;'D'
  5008  00FB39  69                 	db	105	;'i'
  5009  00FB3A  65                 	db	101	;'e'
  5010  00FB3B  20                 	db	32
  5011  00FB3C  54                 	db	84	;'T'
  5012  00FB3D  65                 	db	101	;'e'
  5013  00FB3E  6D                 	db	109	;'m'
  5014  00FB3F  70                 	db	112	;'p'
  5015  00FB40  65                 	db	101	;'e'
  5016  00FB41  72                 	db	114	;'r'
  5017  00FB42  61                 	db	97	;'a'
  5018  00FB43  74                 	db	116	;'t'
  5019  00FB44  75                 	db	117	;'u'
  5020  00FB45  72                 	db	114	;'r'
  5021  00FB46  65                 	db	101	;'e'
  5022  00FB47  20                 	db	32
  5023  00FB48  6D                 	db	109	;'m'
  5024  00FB49  65                 	db	101	;'e'
  5025  00FB4A  61                 	db	97	;'a'
  5026  00FB4B  73                 	db	115	;'s'
  5027  00FB4C  75                 	db	117	;'u'
  5028  00FB4D  72                 	db	114	;'r'
  5029  00FB4E  65                 	db	101	;'e'
  5030  00FB4F  64                 	db	100	;'d'
  5031  00FB50  20                 	db	32
  5032  00FB51  61                 	db	97	;'a'
  5033  00FB52  73                 	db	115	;'s'
  5034  00FB53  20                 	db	32
  5035  00FB54  25                 	db	37
  5036  00FB55  2E                 	db	46
  5037  00FB56  33                 	db	51	;'3'
  5038  00FB57  66                 	db	102	;'f'
  5039  00FB58  43                 	db	67	;'C'
  5040  00FB59  0A                 	db	10
  5041  00FB5A  0D                 	db	13
  5042  00FB5B  00                 	db	0
  5043  00FB5C                     STR_79:
  5044  00FB5C  2B                 	db	43
  5045  00FB5D  31                 	db	49	;'1'
  5046  00FB5E  32                 	db	50	;'2'
  5047  00FB5F  56                 	db	86	;'V'
  5048  00FB60  20                 	db	32
  5049  00FB61  72                 	db	114	;'r'
  5050  00FB62  61                 	db	97	;'a'
  5051  00FB63  69                 	db	105	;'i'
  5052  00FB64  6C                 	db	108	;'l'
  5053  00FB65  20                 	db	32
  5054  00FB66  6D                 	db	109	;'m'
  5055  00FB67  65                 	db	101	;'e'
  5056  00FB68  61                 	db	97	;'a'
  5057  00FB69  73                 	db	115	;'s'
  5058  00FB6A  75                 	db	117	;'u'
  5059  00FB6B  72                 	db	114	;'r'
  5060  00FB6C  65                 	db	101	;'e'
  5061  00FB6D  64                 	db	100	;'d'
  5062  00FB6E  20                 	db	32
  5063  00FB6F  61                 	db	97	;'a'
  5064  00FB70  73                 	db	115	;'s'
  5065  00FB71  20                 	db	32
  5066  00FB72  2B                 	db	43
  5067  00FB73  25                 	db	37
  5068  00FB74  2E                 	db	46
  5069  00FB75  33                 	db	51	;'3'
  5070  00FB76  66                 	db	102	;'f'
  5071  00FB77  20                 	db	32
  5072  00FB78  56                 	db	86	;'V'
  5073  00FB79  6F                 	db	111	;'o'
  5074  00FB7A  6C                 	db	108	;'l'
  5075  00FB7B  74                 	db	116	;'t'
  5076  00FB7C  73                 	db	115	;'s'
  5077  00FB7D  0A                 	db	10
  5078  00FB7E  0D                 	db	13
  5079  00FB7F  00                 	db	0
  5080  00FB80                     STR_89:
  5081  00FB80  52                 	db	82	;'R'
  5082  00FB81  4D                 	db	77	;'M'
  5083  00FB82  53                 	db	83	;'S'
  5084  00FB83  20                 	db	32
  5085  00FB84  4F                 	db	79	;'O'
  5086  00FB85  75                 	db	117	;'u'
  5087  00FB86  74                 	db	116	;'t'
  5088  00FB87  70                 	db	112	;'p'
  5089  00FB88  75                 	db	117	;'u'
  5090  00FB89  74                 	db	116	;'t'
  5091  00FB8A  20                 	db	32
  5092  00FB8B  43                 	db	67	;'C'
  5093  00FB8C  75                 	db	117	;'u'
  5094  00FB8D  72                 	db	114	;'r'
  5095  00FB8E  72                 	db	114	;'r'
  5096  00FB8F  65                 	db	101	;'e'
  5097  00FB90  6E                 	db	110	;'n'
  5098  00FB91  74                 	db	116	;'t'
  5099  00FB92  20                 	db	32
  5100  00FB93  69                 	db	105	;'i'
  5101  00FB94  73                 	db	115	;'s'
  5102  00FB95  20                 	db	32
  5103  00FB96  25                 	db	37
  5104  00FB97  2E                 	db	46
  5105  00FB98  33                 	db	51	;'3'
  5106  00FB99  66                 	db	102	;'f'
  5107  00FB9A  20                 	db	32
  5108  00FB9B  41                 	db	65	;'A'
  5109  00FB9C  72                 	db	114	;'r'
  5110  00FB9D  6D                 	db	109	;'m'
  5111  00FB9E  73                 	db	115	;'s'
  5112  00FB9F  0A                 	db	10
  5113  00FBA0  0D                 	db	13
  5114  00FBA1  00                 	db	0
  5115  00FBA2                     STR_91:
  5116  00FBA2  52                 	db	82	;'R'
  5117  00FBA3  4D                 	db	77	;'M'
  5118  00FBA4  53                 	db	83	;'S'
  5119  00FBA5  20                 	db	32
  5120  00FBA6  4F                 	db	79	;'O'
  5121  00FBA7  75                 	db	117	;'u'
  5122  00FBA8  74                 	db	116	;'t'
  5123  00FBA9  70                 	db	112	;'p'
  5124  00FBAA  75                 	db	117	;'u'
  5125  00FBAB  74                 	db	116	;'t'
  5126  00FBAC  20                 	db	32
  5127  00FBAD  56                 	db	86	;'V'
  5128  00FBAE  6F                 	db	111	;'o'
  5129  00FBAF  6C                 	db	108	;'l'
  5130  00FBB0  74                 	db	116	;'t'
  5131  00FBB1  61                 	db	97	;'a'
  5132  00FBB2  67                 	db	103	;'g'
  5133  00FBB3  65                 	db	101	;'e'
  5134  00FBB4  20                 	db	32
  5135  00FBB5  69                 	db	105	;'i'
  5136  00FBB6  73                 	db	115	;'s'
  5137  00FBB7  20                 	db	32
  5138  00FBB8  25                 	db	37
  5139  00FBB9  2E                 	db	46
  5140  00FBBA  33                 	db	51	;'3'
  5141  00FBBB  66                 	db	102	;'f'
  5142  00FBBC  20                 	db	32
  5143  00FBBD  56                 	db	86	;'V'
  5144  00FBBE  72                 	db	114	;'r'
  5145  00FBBF  6D                 	db	109	;'m'
  5146  00FBC0  73                 	db	115	;'s'
  5147  00FBC1  0A                 	db	10
  5148  00FBC2  0D                 	db	13
  5149  00FBC3  00                 	db	0
  5150  00FBC4                     STR_125:
  5151  00FBC4  4D                 	db	77	;'M'
  5152  00FBC5  61                 	db	97	;'a'
  5153  00FBC6  78                 	db	120	;'x'
  5154  00FBC7  69                 	db	105	;'i'
  5155  00FBC8  6D                 	db	109	;'m'
  5156  00FBC9  75                 	db	117	;'u'
  5157  00FBCA  6D                 	db	109	;'m'
  5158  00FBCB  20                 	db	32
  5159  00FBCC  72                 	db	114	;'r'
  5160  00FBCD  65                 	db	101	;'e'
  5161  00FBCE  63                 	db	99	;'c'
  5162  00FBCF  6F                 	db	111	;'o'
  5163  00FBD0  72                 	db	114	;'r'
  5164  00FBD1  64                 	db	100	;'d'
  5165  00FBD2  65                 	db	101	;'e'
  5166  00FBD3  64                 	db	100	;'d'
  5167  00FBD4  20                 	db	32
  5168  00FBD5  76                 	db	118	;'v'
  5169  00FBD6  61                 	db	97	;'a'
  5170  00FBD7  6C                 	db	108	;'l'
  5171  00FBD8  75                 	db	117	;'u'
  5172  00FBD9  65                 	db	101	;'e'
  5173  00FBDA  73                 	db	115	;'s'
  5174  00FBDB  20                 	db	32
  5175  00FBDC  65                 	db	101	;'e'
  5176  00FBDD  72                 	db	114	;'r'
  5177  00FBDE  61                 	db	97	;'a'
  5178  00FBDF  73                 	db	115	;'s'
  5179  00FBE0  65                 	db	101	;'e'
  5180  00FBE1  64                 	db	100	;'d'
  5181  00FBE2  0A                 	db	10
  5182  00FBE3  0D                 	db	13
  5183  00FBE4  00                 	db	0
  5184  00FBE5                     STR_87:
  5185  00FBE5  4D                 	db	77	;'M'
  5186  00FBE6  65                 	db	101	;'e'
  5187  00FBE7  61                 	db	97	;'a'
  5188  00FBE8  73                 	db	115	;'s'
  5189  00FBE9  75                 	db	117	;'u'
  5190  00FBEA  72                 	db	114	;'r'
  5191  00FBEB  65                 	db	101	;'e'
  5192  00FBEC  64                 	db	100	;'d'
  5193  00FBED  20                 	db	32
  5194  00FBEE  43                 	db	67	;'C'
  5195  00FBEF  75                 	db	117	;'u'
  5196  00FBF0  72                 	db	114	;'r'
  5197  00FBF1  72                 	db	114	;'r'
  5198  00FBF2  65                 	db	101	;'e'
  5199  00FBF3  6E                 	db	110	;'n'
  5200  00FBF4  74                 	db	116	;'t'
  5201  00FBF5  20                 	db	32
  5202  00FBF6  69                 	db	105	;'i'
  5203  00FBF7  73                 	db	115	;'s'
  5204  00FBF8  20                 	db	32
  5205  00FBF9  25                 	db	37
  5206  00FBFA  2E                 	db	46
  5207  00FBFB  33                 	db	51	;'3'
  5208  00FBFC  66                 	db	102	;'f'
  5209  00FBFD  20                 	db	32
  5210  00FBFE  41                 	db	65	;'A'
  5211  00FBFF  6D                 	db	109	;'m'
  5212  00FC00  70                 	db	112	;'p'
  5213  00FC01  73                 	db	115	;'s'
  5214  00FC02  0A                 	db	10
  5215  00FC03  0D                 	db	13
  5216  00FC04  00                 	db	0
  5217  00FC05                     STR_104:
  5218  00FC05  44                 	db	68	;'D'
  5219  00FC06  69                 	db	105	;'i'
  5220  00FC07  6D                 	db	109	;'m'
  5221  00FC08  6D                 	db	109	;'m'
  5222  00FC09  69                 	db	105	;'i'
  5223  00FC0A  6E                 	db	110	;'n'
  5224  00FC0B  67                 	db	103	;'g'
  5225  00FC0C  20                 	db	32
  5226  00FC0D  69                 	db	105	;'i'
  5227  00FC0E  73                 	db	115	;'s'
  5228  00FC0F  20                 	db	32
  5229  00FC10  63                 	db	99	;'c'
  5230  00FC11  75                 	db	117	;'u'
  5231  00FC12  72                 	db	114	;'r'
  5232  00FC13  72                 	db	114	;'r'
  5233  00FC14  65                 	db	101	;'e'
  5234  00FC15  6E                 	db	110	;'n'
  5235  00FC16  74                 	db	116	;'t'
  5236  00FC17  6C                 	db	108	;'l'
  5237  00FC18  79                 	db	121	;'y'
  5238  00FC19  20                 	db	32
  5239  00FC1A  65                 	db	101	;'e'
  5240  00FC1B  6E                 	db	110	;'n'
  5241  00FC1C  61                 	db	97	;'a'
  5242  00FC1D  62                 	db	98	;'b'
  5243  00FC1E  6C                 	db	108	;'l'
  5244  00FC1F  65                 	db	101	;'e'
  5245  00FC20  64                 	db	100	;'d'
  5246  00FC21  0A                 	db	10
  5247  00FC22  0D                 	db	13
  5248  00FC23  00                 	db	0
  5249  00FC24                     STR_132:
  5250  00FC24  55                 	db	85	;'U'
  5251  00FC25  73                 	db	115	;'s'
  5252  00FC26  65                 	db	101	;'e'
  5253  00FC27  72                 	db	114	;'r'
  5254  00FC28  20                 	db	32
  5255  00FC29  69                 	db	105	;'i'
  5256  00FC2A  6E                 	db	110	;'n'
  5257  00FC2B  70                 	db	112	;'p'
  5258  00FC2C  75                 	db	117	;'u'
  5259  00FC2D  74                 	db	116	;'t'
  5260  00FC2E  20                 	db	32
  5261  00FC2F  61                 	db	97	;'a'
  5262  00FC30  70                 	db	112	;'p'
  5263  00FC31  70                 	db	112	;'p'
  5264  00FC32  65                 	db	101	;'e'
  5265  00FC33  61                 	db	97	;'a'
  5266  00FC34  72                 	db	114	;'r'
  5267  00FC35  73                 	db	115	;'s'
  5268  00FC36  20                 	db	32
  5269  00FC37  69                 	db	105	;'i'
  5270  00FC38  6E                 	db	110	;'n'
  5271  00FC39  20                 	db	32
  5272  00FC3A  77                 	db	119	;'w'
  5273  00FC3B  68                 	db	104	;'h'
  5274  00FC3C  69                 	db	105	;'i'
  5275  00FC3D  74                 	db	116	;'t'
  5276  00FC3E  65                 	db	101	;'e'
  5277  00FC3F  0A                 	db	10
  5278  00FC40  0D                 	db	13
  5279  00FC41  00                 	db	0
  5280  00FC42                     STR_102:
  5281  00FC42  4C                 	db	76	;'L'
  5282  00FC43  6F                 	db	111	;'o'
  5283  00FC44  61                 	db	97	;'a'
  5284  00FC45  64                 	db	100	;'d'
  5285  00FC46  20                 	db	32
  5286  00FC47  69                 	db	105	;'i'
  5287  00FC48  73                 	db	115	;'s'
  5288  00FC49  20                 	db	32
  5289  00FC4A  63                 	db	99	;'c'
  5290  00FC4B  75                 	db	117	;'u'
  5291  00FC4C  72                 	db	114	;'r'
  5292  00FC4D  72                 	db	114	;'r'
  5293  00FC4E  65                 	db	101	;'e'
  5294  00FC4F  6E                 	db	110	;'n'
  5295  00FC50  74                 	db	116	;'t'
  5296  00FC51  6C                 	db	108	;'l'
  5297  00FC52  79                 	db	121	;'y'
  5298  00FC53  20                 	db	32
  5299  00FC54  64                 	db	100	;'d'
  5300  00FC55  69                 	db	105	;'i'
  5301  00FC56  73                 	db	115	;'s'
  5302  00FC57  61                 	db	97	;'a'
  5303  00FC58  62                 	db	98	;'b'
  5304  00FC59  6C                 	db	108	;'l'
  5305  00FC5A  65                 	db	101	;'e'
  5306  00FC5B  64                 	db	100	;'d'
  5307  00FC5C  0A                 	db	10
  5308  00FC5D  0D                 	db	13
  5309  00FC5E  00                 	db	0
  5310  00FC5F                     STR_101:
  5311  00FC5F  4C                 	db	76	;'L'
  5312  00FC60  6F                 	db	111	;'o'
  5313  00FC61  61                 	db	97	;'a'
  5314  00FC62  64                 	db	100	;'d'
  5315  00FC63  20                 	db	32
  5316  00FC64  69                 	db	105	;'i'
  5317  00FC65  73                 	db	115	;'s'
  5318  00FC66  20                 	db	32
  5319  00FC67  63                 	db	99	;'c'
  5320  00FC68  75                 	db	117	;'u'
  5321  00FC69  72                 	db	114	;'r'
  5322  00FC6A  72                 	db	114	;'r'
  5323  00FC6B  65                 	db	101	;'e'
  5324  00FC6C  6E                 	db	110	;'n'
  5325  00FC6D  74                 	db	116	;'t'
  5326  00FC6E  6C                 	db	108	;'l'
  5327  00FC6F  79                 	db	121	;'y'
  5328  00FC70  20                 	db	32
  5329  00FC71  65                 	db	101	;'e'
  5330  00FC72  6E                 	db	110	;'n'
  5331  00FC73  61                 	db	97	;'a'
  5332  00FC74  62                 	db	98	;'b'
  5333  00FC75  6C                 	db	108	;'l'
  5334  00FC76  65                 	db	101	;'e'
  5335  00FC77  64                 	db	100	;'d'
  5336  00FC78  0A                 	db	10
  5337  00FC79  0D                 	db	13
  5338  00FC7A  00                 	db	0
  5339  00FC7B                     STR_142:
  5340  00FC7B  52                 	db	82	;'R'
  5341  00FC7C  45                 	db	69	;'E'
  5342  00FC7D  53                 	db	83	;'S'
  5343  00FC7E  45                 	db	69	;'E'
  5344  00FC7F  54                 	db	84	;'T'
  5345  00FC80  20                 	db	32
  5346  00FC81  49                 	db	73	;'I'
  5347  00FC82  6E                 	db	110	;'n'
  5348  00FC83  73                 	db	115	;'s'
  5349  00FC84  74                 	db	116	;'t'
  5350  00FC85  72                 	db	114	;'r'
  5351  00FC86  75                 	db	117	;'u'
  5352  00FC87  63                 	db	99	;'c'
  5353  00FC88  74                 	db	116	;'t'
  5354  00FC89  69                 	db	105	;'i'
  5355  00FC8A  6F                 	db	111	;'o'
  5356  00FC8B  6E                 	db	110	;'n'
  5357  00FC8C  20                 	db	32
  5358  00FC8D  45                 	db	69	;'E'
  5359  00FC8E  78                 	db	120	;'x'
  5360  00FC8F  65                 	db	101	;'e'
  5361  00FC90  63                 	db	99	;'c'
  5362  00FC91  75                 	db	117	;'u'
  5363  00FC92  74                 	db	116	;'t'
  5364  00FC93  65                 	db	101	;'e'
  5365  00FC94  64                 	db	100	;'d'
  5366  00FC95  00                 	db	0
  5367  00FC96                     STR_86:
  5368  00FC96  4D                 	db	77	;'M'
  5369  00FC97  65                 	db	101	;'e'
  5370  00FC98  61                 	db	97	;'a'
  5371  00FC99  73                 	db	115	;'s'
  5372  00FC9A  75                 	db	117	;'u'
  5373  00FC9B  72                 	db	114	;'r'
  5374  00FC9C  65                 	db	101	;'e'
  5375  00FC9D  20                 	db	32
  5376  00FC9E  44                 	db	68	;'D'
  5377  00FC9F  65                 	db	101	;'e'
  5378  00FCA0  74                 	db	116	;'t'
  5379  00FCA1  65                 	db	101	;'e'
  5380  00FCA2  63                 	db	99	;'c'
  5381  00FCA3  74                 	db	116	;'t'
  5382  00FCA4  65                 	db	101	;'e'
  5383  00FCA5  64                 	db	100	;'d'
  5384  00FCA6  20                 	db	32
  5385  00FCA7  43                 	db	67	;'C'
  5386  00FCA8  75                 	db	117	;'u'
  5387  00FCA9  72                 	db	114	;'r'
  5388  00FCAA  72                 	db	114	;'r'
  5389  00FCAB  65                 	db	101	;'e'
  5390  00FCAC  6E                 	db	110	;'n'
  5391  00FCAD  74                 	db	116	;'t'
  5392  00FCAE  3F                 	db	63	;'?'
  5393  00FCAF  00                 	db	0
  5394  00FCB0                     STR_108:
  5395  00FCB0  4C                 	db	76	;'L'
  5396  00FCB1  6F                 	db	111	;'o'
  5397  00FCB2  61                 	db	97	;'a'
  5398  00FCB3  64                 	db	100	;'d'
  5399  00FCB4  20                 	db	32
  5400  00FCB5  68                 	db	104	;'h'
  5401  00FCB6  61                 	db	97	;'a'
  5402  00FCB7  73                 	db	115	;'s'
  5403  00FCB8  20                 	db	32
  5404  00FCB9  62                 	db	98	;'b'
  5405  00FCBA  65                 	db	101	;'e'
  5406  00FCBB  65                 	db	101	;'e'
  5407  00FCBC  6E                 	db	110	;'n'
  5408  00FCBD  20                 	db	32
  5409  00FCBE  64                 	db	100	;'d'
  5410  00FCBF  69                 	db	105	;'i'
  5411  00FCC0  73                 	db	115	;'s'
  5412  00FCC1  61                 	db	97	;'a'
  5413  00FCC2  62                 	db	98	;'b'
  5414  00FCC3  6C                 	db	108	;'l'
  5415  00FCC4  65                 	db	101	;'e'
  5416  00FCC5  64                 	db	100	;'d'
  5417  00FCC6  0A                 	db	10
  5418  00FCC7  0D                 	db	13
  5419  00FCC8  00                 	db	0
  5420  00FCC9                     STR_109:
  5421  00FCC9  53                 	db	83	;'S'
  5422  00FCCA  65                 	db	101	;'e'
  5423  00FCCB  74                 	db	116	;'t'
  5424  00FCCC  20                 	db	32
  5425  00FCCD  44                 	db	68	;'D'
  5426  00FCCE  69                 	db	105	;'i'
  5427  00FCCF  6D                 	db	109	;'m'
  5428  00FCD0  6D                 	db	109	;'m'
  5429  00FCD1  69                 	db	105	;'i'
  5430  00FCD2  6E                 	db	110	;'n'
  5431  00FCD3  67                 	db	103	;'g'
  5432  00FCD4  20                 	db	32
  5433  00FCD5  50                 	db	80	;'P'
  5434  00FCD6  65                 	db	101	;'e'
  5435  00FCD7  72                 	db	114	;'r'
  5436  00FCD8  63                 	db	99	;'c'
  5437  00FCD9  65                 	db	101	;'e'
  5438  00FCDA  6E                 	db	110	;'n'
  5439  00FCDB  74                 	db	116	;'t'
  5440  00FCDC  61                 	db	97	;'a'
  5441  00FCDD  67                 	db	103	;'g'
  5442  00FCDE  65                 	db	101	;'e'
  5443  00FCDF  3A                 	db	58	;':'
  5444  00FCE0  20                 	db	32
  5445  00FCE1  00                 	db	0
  5446  00FCE2                     STR_70:
  5447  00FCE2  4E                 	db	78	;'N'
  5448  00FCE3  6F                 	db	111	;'o'
  5449  00FCE4  20                 	db	32
  5450  00FCE5  41                 	db	65	;'A'
  5451  00FCE6  44                 	db	68	;'D'
  5452  00FCE7  43                 	db	67	;'C'
  5453  00FCE8  20                 	db	32
  5454  00FCE9  45                 	db	69	;'E'
  5455  00FCEA  72                 	db	114	;'r'
  5456  00FCEB  72                 	db	114	;'r'
  5457  00FCEC  6F                 	db	111	;'o'
  5458  00FCED  72                 	db	114	;'r'
  5459  00FCEE  20                 	db	32
  5460  00FCEF  64                 	db	100	;'d'
  5461  00FCF0  65                 	db	101	;'e'
  5462  00FCF1  74                 	db	116	;'t'
  5463  00FCF2  65                 	db	101	;'e'
  5464  00FCF3  63                 	db	99	;'c'
  5465  00FCF4  74                 	db	116	;'t'
  5466  00FCF5  65                 	db	101	;'e'
  5467  00FCF6  64                 	db	100	;'d'
  5468  00FCF7  0A                 	db	10
  5469  00FCF8  0D                 	db	13
  5470  00FCF9  00                 	db	0
  5471  00FCFA                     STR_144:
  5472  00FCFA  53                 	db	83	;'S'
  5473  00FCFB  74                 	db	116	;'t'
  5474  00FCFC  61                 	db	97	;'a'
  5475  00FCFD  63                 	db	99	;'c'
  5476  00FCFE  6B                 	db	107	;'k'
  5477  00FCFF  20                 	db	32
  5478  00FD00  55                 	db	85	;'U'
  5479  00FD01  6E                 	db	110	;'n'
  5480  00FD02  64                 	db	100	;'d'
  5481  00FD03  65                 	db	101	;'e'
  5482  00FD04  72                 	db	114	;'r'
  5483  00FD05  66                 	db	102	;'f'
  5484  00FD06  6C                 	db	108	;'l'
  5485  00FD07  6F                 	db	111	;'o'
  5486  00FD08  77                 	db	119	;'w'
  5487  00FD09  20                 	db	32
  5488  00FD0A  52                 	db	82	;'R'
  5489  00FD0B  65                 	db	101	;'e'
  5490  00FD0C  73                 	db	115	;'s'
  5491  00FD0D  65                 	db	101	;'e'
  5492  00FD0E  74                 	db	116	;'t'
  5493  00FD0F  00                 	db	0
  5494  00FD10                     STR_67:
  5495  00FD10  49                 	db	73	;'I'
  5496  00FD11  6E                 	db	110	;'n'
  5497  00FD12  74                 	db	116	;'t'
  5498  00FD13  65                 	db	101	;'e'
  5499  00FD14  72                 	db	114	;'r'
  5500  00FD15  6E                 	db	110	;'n'
  5501  00FD16  61                 	db	97	;'a'
  5502  00FD17  6C                 	db	108	;'l'
  5503  00FD18  20                 	db	32
  5504  00FD19  46                 	db	70	;'F'
  5505  00FD1A  56                 	db	86	;'V'
  5506  00FD1B  52                 	db	82	;'R'
  5507  00FD1C  20                 	db	32
  5508  00FD1D  42                 	db	66	;'B'
  5509  00FD1E  75                 	db	117	;'u'
  5510  00FD1F  66                 	db	102	;'f'
  5511  00FD20  66                 	db	102	;'f'
  5512  00FD21  65                 	db	101	;'e'
  5513  00FD22  72                 	db	114	;'r'
  5514  00FD23  20                 	db	32
  5515  00FD24  31                 	db	49	;'1'
  5516  00FD25  00                 	db	0
  5517  00FD26                     STR_143:
  5518  00FD26  53                 	db	83	;'S'
  5519  00FD27  74                 	db	116	;'t'
  5520  00FD28  61                 	db	97	;'a'
  5521  00FD29  63                 	db	99	;'c'
  5522  00FD2A  6B                 	db	107	;'k'
  5523  00FD2B  20                 	db	32
  5524  00FD2C  4F                 	db	79	;'O'
  5525  00FD2D  76                 	db	118	;'v'
  5526  00FD2E  65                 	db	101	;'e'
  5527  00FD2F  72                 	db	114	;'r'
  5528  00FD30  66                 	db	102	;'f'
  5529  00FD31  6C                 	db	108	;'l'
  5530  00FD32  6F                 	db	111	;'o'
  5531  00FD33  77                 	db	119	;'w'
  5532  00FD34  20                 	db	32
  5533  00FD35  52                 	db	82	;'R'
  5534  00FD36  65                 	db	101	;'e'
  5535  00FD37  73                 	db	115	;'s'
  5536  00FD38  65                 	db	101	;'e'
  5537  00FD39  74                 	db	116	;'t'
  5538  00FD3A  00                 	db	0
  5539  00FD3B                     STR_72:
  5540  00FD3B  43                 	db	67	;'C'
  5541  00FD3C  6C                 	db	108	;'l'
  5542  00FD3D  65                 	db	101	;'e'
  5543  00FD3E  61                 	db	97	;'a'
  5544  00FD3F  72                 	db	114	;'r'
  5545  00FD40  69                 	db	105	;'i'
  5546  00FD41  6E                 	db	110	;'n'
  5547  00FD42  67                 	db	103	;'g'
  5548  00FD43  20                 	db	32
  5549  00FD44  41                 	db	65	;'A'
  5550  00FD45  44                 	db	68	;'D'
  5551  00FD46  43                 	db	67	;'C'
  5552  00FD47  20                 	db	32
  5553  00FD48  45                 	db	69	;'E'
  5554  00FD49  72                 	db	114	;'r'
  5555  00FD4A  72                 	db	114	;'r'
  5556  00FD4B  6F                 	db	111	;'o'
  5557  00FD4C  72                 	db	114	;'r'
  5558  00FD4D  0A                 	db	10
  5559  00FD4E  0D                 	db	13
  5560  00FD4F  00                 	db	0
  5561  00FD50                     STR_90:
  5562  00FD50  4D                 	db	77	;'M'
  5563  00FD51  65                 	db	101	;'e'
  5564  00FD52  61                 	db	97	;'a'
  5565  00FD53  73                 	db	115	;'s'
  5566  00FD54  75                 	db	117	;'u'
  5567  00FD55  72                 	db	114	;'r'
  5568  00FD56  65                 	db	101	;'e'
  5569  00FD57  20                 	db	32
  5570  00FD58  52                 	db	82	;'R'
  5571  00FD59  4D                 	db	77	;'M'
  5572  00FD5A  53                 	db	83	;'S'
  5573  00FD5B  20                 	db	32
  5574  00FD5C  56                 	db	86	;'V'
  5575  00FD5D  6F                 	db	111	;'o'
  5576  00FD5E  6C                 	db	108	;'l'
  5577  00FD5F  74                 	db	116	;'t'
  5578  00FD60  61                 	db	97	;'a'
  5579  00FD61  67                 	db	103	;'g'
  5580  00FD62  65                 	db	101	;'e'
  5581  00FD63  3F                 	db	63	;'?'
  5582  00FD64  00                 	db	0
  5583  00FD65                     STR_88:
  5584  00FD65  4D                 	db	77	;'M'
  5585  00FD66  65                 	db	101	;'e'
  5586  00FD67  61                 	db	97	;'a'
  5587  00FD68  73                 	db	115	;'s'
  5588  00FD69  75                 	db	117	;'u'
  5589  00FD6A  72                 	db	114	;'r'
  5590  00FD6B  65                 	db	101	;'e'
  5591  00FD6C  20                 	db	32
  5592  00FD6D  52                 	db	82	;'R'
  5593  00FD6E  4D                 	db	77	;'M'
  5594  00FD6F  53                 	db	83	;'S'
  5595  00FD70  20                 	db	32
  5596  00FD71  43                 	db	67	;'C'
  5597  00FD72  75                 	db	117	;'u'
  5598  00FD73  72                 	db	114	;'r'
  5599  00FD74  72                 	db	114	;'r'
  5600  00FD75  65                 	db	101	;'e'
  5601  00FD76  6E                 	db	110	;'n'
  5602  00FD77  74                 	db	116	;'t'
  5603  00FD78  3F                 	db	63	;'?'
  5604  00FD79  00                 	db	0
  5605  00FD7A                     STR_139:
  5606  00FD7A  4D                 	db	77	;'M'
  5607  00FD7B  61                 	db	97	;'a'
  5608  00FD7C  73                 	db	115	;'s'
  5609  00FD7D  74                 	db	116	;'t'
  5610  00FD7E  65                 	db	101	;'e'
  5611  00FD7F  72                 	db	114	;'r'
  5612  00FD80  20                 	db	32
  5613  00FD81  43                 	db	67	;'C'
  5614  00FD82  6C                 	db	108	;'l'
  5615  00FD83  65                 	db	101	;'e'
  5616  00FD84  61                 	db	97	;'a'
  5617  00FD85  72                 	db	114	;'r'
  5618  00FD86  20                 	db	32
  5619  00FD87  52                 	db	82	;'R'
  5620  00FD88  65                 	db	101	;'e'
  5621  00FD89  73                 	db	115	;'s'
  5622  00FD8A  65                 	db	101	;'e'
  5623  00FD8B  74                 	db	116	;'t'
  5624  00FD8C  00                 	db	0
  5625  00FD8D                     STR_80:
  5626  00FD8D  4D                 	db	77	;'M'
  5627  00FD8E  65                 	db	101	;'e'
  5628  00FD8F  61                 	db	97	;'a'
  5629  00FD90  73                 	db	115	;'s'
  5630  00FD91  75                 	db	117	;'u'
  5631  00FD92  72                 	db	114	;'r'
  5632  00FD93  65                 	db	101	;'e'
  5633  00FD94  20                 	db	32
  5634  00FD95  44                 	db	68	;'D'
  5635  00FD96  69                 	db	105	;'i'
  5636  00FD97  65                 	db	101	;'e'
  5637  00FD98  20                 	db	32
  5638  00FD99  54                 	db	84	;'T'
  5639  00FD9A  65                 	db	101	;'e'
  5640  00FD9B  6D                 	db	109	;'m'
  5641  00FD9C  70                 	db	112	;'p'
  5642  00FD9D  3F                 	db	63	;'?'
  5643  00FD9E  00                 	db	0
  5644  00FD9F                     STR_147:
  5645  00FD9F  30                 	db	48	;'0'
  5646  00FDA0  31                 	db	49	;'1'
  5647  00FDA1  32                 	db	50	;'2'
  5648  00FDA2  33                 	db	51	;'3'
  5649  00FDA3  34                 	db	52	;'4'
  5650  00FDA4  35                 	db	53	;'5'
  5651  00FDA5  36                 	db	54	;'6'
  5652  00FDA6  37                 	db	55	;'7'
  5653  00FDA7  38                 	db	56	;'8'
  5654  00FDA8  39                 	db	57	;'9'
  5655  00FDA9  41                 	db	65	;'A'
  5656  00FDAA  42                 	db	66	;'B'
  5657  00FDAB  43                 	db	67	;'C'
  5658  00FDAC  44                 	db	68	;'D'
  5659  00FDAD  45                 	db	69	;'E'
  5660  00FDAE  46                 	db	70	;'F'
  5661  00FDAF  00                 	db	0
  5662  00FDB0                     STR_51:
  5663  00FDB0  41                 	db	65	;'A'
  5664  00FDB1  43                 	db	67	;'C'
  5665  00FDB2  20                 	db	32
  5666  00FDB3  50                 	db	80	;'P'
  5667  00FDB4  6F                 	db	111	;'o'
  5668  00FDB5  77                 	db	119	;'w'
  5669  00FDB6  65                 	db	101	;'e'
  5670  00FDB7  72                 	db	114	;'r'
  5671  00FDB8  20                 	db	32
  5672  00FDB9  4D                 	db	77	;'M'
  5673  00FDBA  65                 	db	101	;'e'
  5674  00FDBB  74                 	db	116	;'t'
  5675  00FDBC  65                 	db	101	;'e'
  5676  00FDBD  72                 	db	114	;'r'
  5677  00FDBE  0A                 	db	10
  5678  00FDBF  0D                 	db	13
  5679  00FDC0  00                 	db	0
  5680  00FDC1                     STR_103:
  5681  00FDC1  44                 	db	68	;'D'
  5682  00FDC2  69                 	db	105	;'i'
  5683  00FDC3  6D                 	db	109	;'m'
  5684  00FDC4  6D                 	db	109	;'m'
  5685  00FDC5  69                 	db	105	;'i'
  5686  00FDC6  6E                 	db	110	;'n'
  5687  00FDC7  67                 	db	103	;'g'
  5688  00FDC8  20                 	db	32
  5689  00FDC9  45                 	db	69	;'E'
  5690  00FDCA  6E                 	db	110	;'n'
  5691  00FDCB  61                 	db	97	;'a'
  5692  00FDCC  62                 	db	98	;'b'
  5693  00FDCD  6C                 	db	108	;'l'
  5694  00FDCE  65                 	db	101	;'e'
  5695  00FDCF  64                 	db	100	;'d'
  5696  00FDD0  3F                 	db	63	;'?'
  5697  00FDD1  00                 	db	0
  5698  00FDD2                     STR_73:
  5699  00FDD2  56                 	db	86	;'V'
  5700  00FDD3  43                 	db	67	;'C'
  5701  00FDD4  43                 	db	67	;'C'
  5702  00FDD5  20                 	db	32
  5703  00FDD6  4F                 	db	79	;'O'
  5704  00FDD7  76                 	db	118	;'v'
  5705  00FDD8  65                 	db	101	;'e'
  5706  00FDD9  72                 	db	114	;'r'
  5707  00FDDA  76                 	db	118	;'v'
  5708  00FDDB  6F                 	db	111	;'o'
  5709  00FDDC  6C                 	db	108	;'l'
  5710  00FDDD  74                 	db	116	;'t'
  5711  00FDDE  61                 	db	97	;'a'
  5712  00FDDF  67                 	db	103	;'g'
  5713  00FDE0  65                 	db	101	;'e'
  5714  00FDE1  3F                 	db	63	;'?'
  5715  00FDE2  00                 	db	0
  5716  00FDE3                     STR_120:
  5717  00FDE3  4D                 	db	77	;'M'
  5718  00FDE4  61                 	db	97	;'a'
  5719  00FDE5  78                 	db	120	;'x'
  5720  00FDE6  20                 	db	32
  5721  00FDE7  52                 	db	82	;'R'
  5722  00FDE8  4D                 	db	77	;'M'
  5723  00FDE9  53                 	db	83	;'S'
  5724  00FDEA  20                 	db	32
  5725  00FDEB  43                 	db	67	;'C'
  5726  00FDEC  75                 	db	117	;'u'
  5727  00FDED  72                 	db	114	;'r'
  5728  00FDEE  72                 	db	114	;'r'
  5729  00FDEF  65                 	db	101	;'e'
  5730  00FDF0  6E                 	db	110	;'n'
  5731  00FDF1  74                 	db	116	;'t'
  5732  00FDF2  3F                 	db	63	;'?'
  5733  00FDF3  00                 	db	0
  5734  00FDF4                     STR_124:
  5735  00FDF4  43                 	db	67	;'C'
  5736  00FDF5  6C                 	db	108	;'l'
  5737  00FDF6  65                 	db	101	;'e'
  5738  00FDF7  61                 	db	97	;'a'
  5739  00FDF8  72                 	db	114	;'r'
  5740  00FDF9  20                 	db	32
  5741  00FDFA  4D                 	db	77	;'M'
  5742  00FDFB  61                 	db	97	;'a'
  5743  00FDFC  78                 	db	120	;'x'
  5744  00FDFD  20                 	db	32
  5745  00FDFE  56                 	db	86	;'V'
  5746  00FDFF  61                 	db	97	;'a'
  5747  00FE00  6C                 	db	108	;'l'
  5748  00FE01  75                 	db	117	;'u'
  5749  00FE02  65                 	db	101	;'e'
  5750  00FE03  73                 	db	115	;'s'
  5751  00FE04  00                 	db	0
  5752  00FE05                     STR_136:
  5753  00FE05  55                 	db	85	;'U'
  5754  00FE06  6E                 	db	110	;'n'
  5755  00FE07  64                 	db	100	;'d'
  5756  00FE08  65                 	db	101	;'e'
  5757  00FE09  66                 	db	102	;'f'
  5758  00FE0A  69                 	db	105	;'i'
  5759  00FE0B  6E                 	db	110	;'n'
  5760  00FE0C  65                 	db	101	;'e'
  5761  00FE0D  64                 	db	100	;'d'
  5762  00FE0E  20                 	db	32
  5763  00FE0F  52                 	db	82	;'R'
  5764  00FE10  65                 	db	101	;'e'
  5765  00FE11  73                 	db	115	;'s'
  5766  00FE12  65                 	db	101	;'e'
  5767  00FE13  74                 	db	116	;'t'
  5768  00FE14  00                 	db	0
  5769  00FE15                     STR_138:
  5770  00FE15  42                 	db	66	;'B'
  5771  00FE16  72                 	db	114	;'r'
  5772  00FE17  6F                 	db	111	;'o'
  5773  00FE18  77                 	db	119	;'w'
  5774  00FE19  6E                 	db	110	;'n'
  5775  00FE1A  20                 	db	32
  5776  00FE1B  4F                 	db	79	;'O'
  5777  00FE1C  75                 	db	117	;'u'
  5778  00FE1D  74                 	db	116	;'t'
  5779  00FE1E  20                 	db	32
  5780  00FE1F  52                 	db	82	;'R'
  5781  00FE20  65                 	db	101	;'e'
  5782  00FE21  73                 	db	115	;'s'
  5783  00FE22  65                 	db	101	;'e'
  5784  00FE23  74                 	db	116	;'t'
  5785  00FE24  00                 	db	0
  5786  00FE25                     STR_76:
  5787  00FE25  4D                 	db	77	;'M'
  5788  00FE26  65                 	db	101	;'e'
  5789  00FE27  61                 	db	97	;'a'
  5790  00FE28  73                 	db	115	;'s'
  5791  00FE29  75                 	db	117	;'u'
  5792  00FE2A  72                 	db	114	;'r'
  5793  00FE2B  65                 	db	101	;'e'
  5794  00FE2C  20                 	db	32
  5795  00FE2D  50                 	db	80	;'P'
  5796  00FE2E  4F                 	db	79	;'O'
  5797  00FE2F  53                 	db	83	;'S'
  5798  00FE30  33                 	db	51	;'3'
  5799  00FE31  50                 	db	80	;'P'
  5800  00FE32  33                 	db	51	;'3'
  5801  00FE33  3F                 	db	63	;'?'
  5802  00FE34  00                 	db	0
  5803  00FE35                     STR_116:
  5804  00FE35  44                 	db	68	;'D'
  5805  00FE36  65                 	db	101	;'e'
  5806  00FE37  76                 	db	118	;'v'
  5807  00FE38  69                 	db	105	;'i'
  5808  00FE39  63                 	db	99	;'c'
  5809  00FE3A  65                 	db	101	;'e'
  5810  00FE3B  20                 	db	32
  5811  00FE3C  4F                 	db	79	;'O'
  5812  00FE3D  6E                 	db	110	;'n'
  5813  00FE3E  20                 	db	32
  5814  00FE3F  54                 	db	84	;'T'
  5815  00FE40  69                 	db	105	;'i'
  5816  00FE41  6D                 	db	109	;'m'
  5817  00FE42  65                 	db	101	;'e'
  5818  00FE43  3F                 	db	63	;'?'
  5819  00FE44  00                 	db	0
  5820  00FE45                     STR_47:
  5821  00FE45  43                 	db	67	;'C'
  5822  00FE46  61                 	db	97	;'a'
  5823  00FE47  75                 	db	117	;'u'
  5824  00FE48  73                 	db	115	;'s'
  5825  00FE49  65                 	db	101	;'e'
  5826  00FE4A  20                 	db	32
  5827  00FE4B  6F                 	db	111	;'o'
  5828  00FE4C  66                 	db	102	;'f'
  5829  00FE4D  20                 	db	32
  5830  00FE4E  52                 	db	82	;'R'
  5831  00FE4F  65                 	db	101	;'e'
  5832  00FE50  73                 	db	115	;'s'
  5833  00FE51  65                 	db	101	;'e'
  5834  00FE52  74                 	db	116	;'t'
  5835  00FE53  3F                 	db	63	;'?'
  5836  00FE54  00                 	db	0
  5837  00FE55                     STR_96:
  5838  00FE55  44                 	db	68	;'D'
  5839  00FE56  69                 	db	105	;'i'
  5840  00FE57  73                 	db	115	;'s'
  5841  00FE58  61                 	db	97	;'a'
  5842  00FE59  62                 	db	98	;'b'
  5843  00FE5A  6C                 	db	108	;'l'
  5844  00FE5B  65                 	db	101	;'e'
  5845  00FE5C  20                 	db	32
  5846  00FE5D  44                 	db	68	;'D'
  5847  00FE5E  69                 	db	105	;'i'
  5848  00FE5F  6D                 	db	109	;'m'
  5849  00FE60  6D                 	db	109	;'m'
  5850  00FE61  69                 	db	105	;'i'
  5851  00FE62  6E                 	db	110	;'n'
  5852  00FE63  67                 	db	103	;'g'
  5853  00FE64  00                 	db	0
  5854  00FE65                     STR_71:
  5855  00FE65  43                 	db	67	;'C'
  5856  00FE66  6C                 	db	108	;'l'
  5857  00FE67  65                 	db	101	;'e'
  5858  00FE68  61                 	db	97	;'a'
  5859  00FE69  72                 	db	114	;'r'
  5860  00FE6A  20                 	db	32
  5861  00FE6B  41                 	db	65	;'A'
  5862  00FE6C  44                 	db	68	;'D'
  5863  00FE6D  43                 	db	67	;'C'
  5864  00FE6E  20                 	db	32
  5865  00FE6F  45                 	db	69	;'E'
  5866  00FE70  72                 	db	114	;'r'
  5867  00FE71  72                 	db	114	;'r'
  5868  00FE72  6F                 	db	111	;'o'
  5869  00FE73  72                 	db	114	;'r'
  5870  00FE74  00                 	db	0
  5871  00FE75                     STR_137:
  5872  00FE75  50                 	db	80	;'P'
  5873  00FE76  6F                 	db	111	;'o'
  5874  00FE77  77                 	db	119	;'w'
  5875  00FE78  65                 	db	101	;'e'
  5876  00FE79  72                 	db	114	;'r'
  5877  00FE7A  20                 	db	32
  5878  00FE7B  4F                 	db	79	;'O'
  5879  00FE7C  6E                 	db	110	;'n'
  5880  00FE7D  20                 	db	32
  5881  00FE7E  52                 	db	82	;'R'
  5882  00FE7F  65                 	db	101	;'e'
  5883  00FE80  73                 	db	115	;'s'
  5884  00FE81  65                 	db	101	;'e'
  5885  00FE82  74                 	db	116	;'t'
  5886  00FE83  00                 	db	0
  5887  00FE84                     STR_78:
  5888  00FE84  4D                 	db	77	;'M'
  5889  00FE85  65                 	db	101	;'e'
  5890  00FE86  61                 	db	97	;'a'
  5891  00FE87  73                 	db	115	;'s'
  5892  00FE88  75                 	db	117	;'u'
  5893  00FE89  72                 	db	114	;'r'
  5894  00FE8A  65                 	db	101	;'e'
  5895  00FE8B  20                 	db	32
  5896  00FE8C  50                 	db	80	;'P'
  5897  00FE8D  4F                 	db	79	;'O'
  5898  00FE8E  53                 	db	83	;'S'
  5899  00FE8F  31                 	db	49	;'1'
  5900  00FE90  32                 	db	50	;'2'
  5901  00FE91  3F                 	db	63	;'?'
  5902  00FE92  00                 	db	0
  5903  00FE93                     STR_92:
  5904  00FE93  4D                 	db	77	;'M'
  5905  00FE94  65                 	db	101	;'e'
  5906  00FE95  61                 	db	97	;'a'
  5907  00FE96  73                 	db	115	;'s'
  5908  00FE97  75                 	db	117	;'u'
  5909  00FE98  72                 	db	114	;'r'
  5910  00FE99  65                 	db	101	;'e'
  5911  00FE9A  20                 	db	32
  5912  00FE9B  50                 	db	80	;'P'
  5913  00FE9C  6F                 	db	111	;'o'
  5914  00FE9D  77                 	db	119	;'w'
  5915  00FE9E  65                 	db	101	;'e'
  5916  00FE9F  72                 	db	114	;'r'
  5917  00FEA0  3F                 	db	63	;'?'
  5918  00FEA1  00                 	db	0
  5919  00FEA2                     STR_94:
  5920  00FEA2  45                 	db	69	;'E'
  5921  00FEA3  6E                 	db	110	;'n'
  5922  00FEA4  61                 	db	97	;'a'
  5923  00FEA5  62                 	db	98	;'b'
  5924  00FEA6  6C                 	db	108	;'l'
  5925  00FEA7  65                 	db	101	;'e'
  5926  00FEA8  20                 	db	32
  5927  00FEA9  44                 	db	68	;'D'
  5928  00FEAA  69                 	db	105	;'i'
  5929  00FEAB  6D                 	db	109	;'m'
  5930  00FEAC  6D                 	db	109	;'m'
  5931  00FEAD  69                 	db	105	;'i'
  5932  00FEAE  6E                 	db	110	;'n'
  5933  00FEAF  67                 	db	103	;'g'
  5934  00FEB0  00                 	db	0
  5935  00FEB1                     STR_66:
  5936  00FEB1  49                 	db	73	;'I'
  5937  00FEB2  6E                 	db	110	;'n'
  5938  00FEB3  74                 	db	116	;'t'
  5939  00FEB4  65                 	db	101	;'e'
  5940  00FEB5  72                 	db	114	;'r'
  5941  00FEB6  6E                 	db	110	;'n'
  5942  00FEB7  61                 	db	97	;'a'
  5943  00FEB8  6C                 	db	108	;'l'
  5944  00FEB9  20                 	db	32
  5945  00FEBA  44                 	db	68	;'D'
  5946  00FEBB  41                 	db	65	;'A'
  5947  00FEBC  43                 	db	67	;'C'
  5948  00FEBD  31                 	db	49	;'1'
  5949  00FEBE  00                 	db	0
  5950  00FEBF                     STR_84:
  5951  00FEBF  4D                 	db	77	;'M'
  5952  00FEC0  65                 	db	101	;'e'
  5953  00FEC1  61                 	db	97	;'a'
  5954  00FEC2  73                 	db	115	;'s'
  5955  00FEC3  75                 	db	117	;'u'
  5956  00FEC4  72                 	db	114	;'r'
  5957  00FEC5  65                 	db	101	;'e'
  5958  00FEC6  20                 	db	32
  5959  00FEC7  41                 	db	65	;'A'
  5960  00FEC8  56                 	db	86	;'V'
  5961  00FEC9  53                 	db	83	;'S'
  5962  00FECA  53                 	db	83	;'S'
  5963  00FECB  3F                 	db	63	;'?'
  5964  00FECC  00                 	db	0
  5965  00FECD                     STR_100:
  5966  00FECD  4C                 	db	76	;'L'
  5967  00FECE  6F                 	db	111	;'o'
  5968  00FECF  61                 	db	97	;'a'
  5969  00FED0  64                 	db	100	;'d'
  5970  00FED1  20                 	db	32
  5971  00FED2  45                 	db	69	;'E'
  5972  00FED3  6E                 	db	110	;'n'
  5973  00FED4  61                 	db	97	;'a'
  5974  00FED5  62                 	db	98	;'b'
  5975  00FED6  6C                 	db	108	;'l'
  5976  00FED7  65                 	db	101	;'e'
  5977  00FED8  64                 	db	100	;'d'
  5978  00FED9  3F                 	db	63	;'?'
  5979  00FEDA  00                 	db	0
  5980  00FEDB                     STR_118:
  5981  00FEDB  4C                 	db	76	;'L'
  5982  00FEDC  6F                 	db	111	;'o'
  5983  00FEDD  61                 	db	97	;'a'
  5984  00FEDE  64                 	db	100	;'d'
  5985  00FEDF  20                 	db	32
  5986  00FEE0  4F                 	db	79	;'O'
  5987  00FEE1  6E                 	db	110	;'n'
  5988  00FEE2  20                 	db	32
  5989  00FEE3  54                 	db	84	;'T'
  5990  00FEE4  69                 	db	105	;'i'
  5991  00FEE5  6D                 	db	109	;'m'
  5992  00FEE6  65                 	db	101	;'e'
  5993  00FEE7  3F                 	db	63	;'?'
  5994  00FEE8  00                 	db	0
  5995  00FEE9                     STR_64:
  5996  00FEE9  49                 	db	73	;'I'
  5997  00FEEA  6E                 	db	110	;'n'
  5998  00FEEB  74                 	db	116	;'t'
  5999  00FEEC  65                 	db	101	;'e'
  6000  00FEED  72                 	db	114	;'r'
  6001  00FEEE  6E                 	db	110	;'n'
  6002  00FEEF  61                 	db	97	;'a'
  6003  00FEF0  6C                 	db	108	;'l'
  6004  00FEF1  20                 	db	32
  6005  00FEF2  41                 	db	65	;'A'
  6006  00FEF3  56                 	db	86	;'V'
  6007  00FEF4  53                 	db	83	;'S'
  6008  00FEF5  53                 	db	83	;'S'
  6009  00FEF6  00                 	db	0
  6010  00FEF7                     STR_65:
  6011  00FEF7  49                 	db	73	;'I'
  6012  00FEF8  6E                 	db	110	;'n'
  6013  00FEF9  74                 	db	116	;'t'
  6014  00FEFA  65                 	db	101	;'e'
  6015  00FEFB  72                 	db	114	;'r'
  6016  00FEFC  6E                 	db	110	;'n'
  6017  00FEFD  61                 	db	97	;'a'
  6018  00FEFE  6C                 	db	108	;'l'
  6019  00FEFF  20                 	db	32
  6020  00FF00  54                 	db	84	;'T'
  6021  00FF01  65                 	db	101	;'e'
  6022  00FF02  6D                 	db	109	;'m'
  6023  00FF03  70                 	db	112	;'p'
  6024  00FF04  00                 	db	0
  6025  00FF05                     STR_134:
  6026  00FF05  50                 	db	80	;'P'
  6027  00FF06  49                 	db	73	;'I'
  6028  00FF07  43                 	db	67	;'C'
  6029  00FF08  31                 	db	49	;'1'
  6030  00FF09  38                 	db	56	;'8'
  6031  00FF0A  4C                 	db	76	;'L'
  6032  00FF0B  46                 	db	70	;'F'
  6033  00FF0C  36                 	db	54	;'6'
  6034  00FF0D  37                 	db	55	;'7'
  6035  00FF0E  4B                 	db	75	;'K'
  6036  00FF0F  34                 	db	52	;'4'
  6037  00FF10  30                 	db	48	;'0'
  6038  00FF11  00                 	db	0
  6039  00FF12                     STR_55:
  6040  00FF12  52                 	db	82	;'R'
  6041  00FF13  65                 	db	101	;'e'
  6042  00FF14  76                 	db	118	;'v'
  6043  00FF15  69                 	db	105	;'i'
  6044  00FF16  73                 	db	115	;'s'
  6045  00FF17  69                 	db	105	;'i'
  6046  00FF18  6F                 	db	111	;'o'
  6047  00FF19  6E                 	db	110	;'n'
  6048  00FF1A  20                 	db	32
  6049  00FF1B  49                 	db	73	;'I'
  6050  00FF1C  44                 	db	68	;'D'
  6051  00FF1D  3F                 	db	63	;'?'
  6052  00FF1E  00                 	db	0
  6053  00FF1F                     STR_82:
  6054  00FF1F  4D                 	db	77	;'M'
  6055  00FF20  65                 	db	101	;'e'
  6056  00FF21  61                 	db	97	;'a'
  6057  00FF22  73                 	db	115	;'s'
  6058  00FF23  75                 	db	117	;'u'
  6059  00FF24  72                 	db	114	;'r'
  6060  00FF25  65                 	db	101	;'e'
  6061  00FF26  20                 	db	32
  6062  00FF27  46                 	db	70	;'F'
  6063  00FF28  56                 	db	86	;'V'
  6064  00FF29  52                 	db	82	;'R'
  6065  00FF2A  3F                 	db	63	;'?'
  6066  00FF2B  00                 	db	0
  6067  00FF2C                     STR_107:
  6068  00FF2C  44                 	db	68	;'D'
  6069  00FF2D  69                 	db	105	;'i'
  6070  00FF2E  73                 	db	115	;'s'
  6071  00FF2F  61                 	db	97	;'a'
  6072  00FF30  62                 	db	98	;'b'
  6073  00FF31  6C                 	db	108	;'l'
  6074  00FF32  65                 	db	101	;'e'
  6075  00FF33  20                 	db	32
  6076  00FF34  4C                 	db	76	;'L'
  6077  00FF35  6F                 	db	111	;'o'
  6078  00FF36  61                 	db	97	;'a'
  6079  00FF37  64                 	db	100	;'d'
  6080  00FF38  00                 	db	0
  6081  00FF39                     STR_133:
  6082  00FF39  50                 	db	80	;'P'
  6083  00FF3A  49                 	db	73	;'I'
  6084  00FF3B  43                 	db	67	;'C'
  6085  00FF3C  31                 	db	49	;'1'
  6086  00FF3D  38                 	db	56	;'8'
  6087  00FF3E  46                 	db	70	;'F'
  6088  00FF3F  36                 	db	54	;'6'
  6089  00FF40  37                 	db	55	;'7'
  6090  00FF41  4B                 	db	75	;'K'
  6091  00FF42  34                 	db	52	;'4'
  6092  00FF43  30                 	db	48	;'0'
  6093  00FF44  00                 	db	0
  6094  00FF45                     STR_98:
  6095  00FF45  45                 	db	69	;'E'
  6096  00FF46  6E                 	db	110	;'n'
  6097  00FF47  61                 	db	97	;'a'
  6098  00FF48  62                 	db	98	;'b'
  6099  00FF49  6C                 	db	108	;'l'
  6100  00FF4A  65                 	db	101	;'e'
  6101  00FF4B  20                 	db	32
  6102  00FF4C  4C                 	db	76	;'L'
  6103  00FF4D  6F                 	db	111	;'o'
  6104  00FF4E  61                 	db	97	;'a'
  6105  00FF4F  64                 	db	100	;'d'
  6106  00FF50  00                 	db	0
  6107  00FF51                     STR_53:
  6108  00FF51  44                 	db	68	;'D'
  6109  00FF52  65                 	db	101	;'e'
  6110  00FF53  76                 	db	118	;'v'
  6111  00FF54  69                 	db	105	;'i'
  6112  00FF55  63                 	db	99	;'c'
  6113  00FF56  65                 	db	101	;'e'
  6114  00FF57  20                 	db	32
  6115  00FF58  49                 	db	73	;'I'
  6116  00FF59  44                 	db	68	;'D'
  6117  00FF5A  3F                 	db	63	;'?'
  6118  00FF5B  00                 	db	0
  6119  00FF5C                     STR_122:
  6120  00FF5C  4D                 	db	77	;'M'
  6121  00FF5D  61                 	db	97	;'a'
  6122  00FF5E  78                 	db	120	;'x'
  6123  00FF5F  20                 	db	32
  6124  00FF60  50                 	db	80	;'P'
  6125  00FF61  6F                 	db	111	;'o'
  6126  00FF62  77                 	db	119	;'w'
  6127  00FF63  65                 	db	101	;'e'
  6128  00FF64  72                 	db	114	;'r'
  6129  00FF65  3F                 	db	63	;'?'
  6130  00FF66  00                 	db	0
  6131  00FF67                     STR_60:
  6132  00FF67  41                 	db	65	;'A'
  6133  00FF68  44                 	db	68	;'D'
  6134  00FF69  43                 	db	67	;'C'
  6135  00FF6A  20                 	db	32
  6136  00FF6B  45                 	db	69	;'E'
  6137  00FF6C  72                 	db	114	;'r'
  6138  00FF6D  72                 	db	114	;'r'
  6139  00FF6E  6F                 	db	111	;'o'
  6140  00FF6F  72                 	db	114	;'r'
  6141  00FF70  3F                 	db	63	;'?'
  6142  00FF71  00                 	db	0
  6143  00FF72                     STR_57:
  6144  00FF72  55                 	db	85	;'U'
  6145  00FF73  73                 	db	115	;'s'
  6146  00FF74  65                 	db	101	;'e'
  6147  00FF75  72                 	db	114	;'r'
  6148  00FF76  20                 	db	32
  6149  00FF77  49                 	db	73	;'I'
  6150  00FF78  44                 	db	68	;'D'
  6151  00FF79  73                 	db	115	;'s'
  6152  00FF7A  3F                 	db	63	;'?'
  6153  00FF7B  00                 	db	0
  6154  00FF7C                     STR_68:
  6155  00FF7C  55                 	db	85	;'U'
  6156  00FF7D  6E                 	db	110	;'n'
  6157  00FF7E  64                 	db	100	;'d'
  6158  00FF7F  65                 	db	101	;'e'
  6159  00FF80  66                 	db	102	;'f'
  6160  00FF81  69                 	db	105	;'i'
  6161  00FF82  6E                 	db	110	;'n'
  6162  00FF83  65                 	db	101	;'e'
  6163  00FF84  64                 	db	100	;'d'
  6164  00FF85  00                 	db	0
  6165  00FF86                     STR_146:
  6166  00FF86  28                 	db	40
  6167  00FF87  6E                 	db	110	;'n'
  6168  00FF88  75                 	db	117	;'u'
  6169  00FF89  6C                 	db	108	;'l'
  6170  00FF8A  6C                 	db	108	;'l'
  6171  00FF8B  29                 	db	41
  6172  00FF8C  00                 	db	0
  6173  00FF8D                     STR_63:
  6174  00FF8D  50                 	db	80	;'P'
  6175  00FF8E  4F                 	db	79	;'O'
  6176  00FF8F  53                 	db	83	;'S'
  6177  00FF90  33                 	db	51	;'3'
  6178  00FF91  50                 	db	80	;'P'
  6179  00FF92  33                 	db	51	;'3'
  6180  00FF93  00                 	db	0
  6181  00FF94                     STR_62:
  6182  00FF94  50                 	db	80	;'P'
  6183  00FF95  4F                 	db	79	;'O'
  6184  00FF96  53                 	db	83	;'S'
  6185  00FF97  31                 	db	49	;'1'
  6186  00FF98  32                 	db	50	;'2'
  6187  00FF99  00                 	db	0
  6188  00FF9A                     STR_49:
  6189  00FF9A  2A                 	db	42
  6190  00FF9B  49                 	db	73	;'I'
  6191  00FF9C  44                 	db	68	;'D'
  6192  00FF9D  4E                 	db	78	;'N'
  6193  00FF9E  3F                 	db	63	;'?'
  6194  00FF9F  00                 	db	0
  6195  00FFA0                     STR_44:
  6196  00FFA0  43                 	db	67	;'C'
  6197  00FFA1  6C                 	db	108	;'l'
  6198  00FFA2  65                 	db	101	;'e'
  6199  00FFA3  61                 	db	97	;'a'
  6200  00FFA4  72                 	db	114	;'r'
  6201  00FFA5  00                 	db	0
  6202  00FFA6                     STR_61:
  6203  00FFA6  49                 	db	73	;'I'
  6204  00FFA7  53                 	db	83	;'S'
  6205  00FFA8  4E                 	db	78	;'N'
  6206  00FFA9  53                 	db	83	;'S'
  6207  00FFAA  00                 	db	0
  6208  00FFAB                     STR_126:
  6209  00FFAB  48                 	db	72	;'H'
  6210  00FFAC  65                 	db	101	;'e'
  6211  00FFAD  6C                 	db	108	;'l'
  6212  00FFAE  70                 	db	112	;'p'
  6213  00FFAF  00                 	db	0
  6214  00FFB0                     STR_2:
  6215  00FFB0  1B                 	db	27
  6216  00FFB1  5B                 	db	91	;'['
  6217  00FFB2  32                 	db	50	;'2'
  6218  00FFB3  4A                 	db	74	;'J'
  6219  00FFB4  00                 	db	0
  6220  00FFB5                     STR_50:
  6221  00FFB5  49                 	db	73	;'I'
  6222  00FFB6  44                 	db	68	;'D'
  6223  00FFB7  4E                 	db	78	;'N'
  6224  00FFB8  00                 	db	0
  6225  00FFB9                     STR_3:
  6226  00FFB9  1B                 	db	27
  6227  00FFBA  5B                 	db	91	;'['
  6228  00FFBB  48                 	db	72	;'H'
  6229  00FFBC  00                 	db	0
  6230  00FFBD  1B                 	db	27
  6231  00FFBE  5B                 	db	91	;'['
  6232  00FFBF  73                 	db	115	;'s'
  6233  00FFC0  00                 	db	0
  6234  00FFC1  1B                 	db	27
  6235  00FFC2  5B                 	db	91	;'['
  6236  00FFC3  75                 	db	117	;'u'
  6237  00FFC4  00                 	db	0
  6238  00FFC5                     STR_1:
  6239  00FFC5  1B                 	db	27
  6240  00FFC6  5B                 	db	91	;'['
  6241  00FFC7  4B                 	db	75	;'K'
  6242  00FFC8  00                 	db	0
  6243  00FFC9                     STR_20:
  6244  00FFC9  33                 	db	51	;'3'
  6245  00FFCA  30                 	db	48	;'0'
  6246  00FFCB  00                 	db	0
  6247  00FFCC                     STR_21:
  6248  00FFCC  33                 	db	51	;'3'
  6249  00FFCD  31                 	db	49	;'1'
  6250  00FFCE  00                 	db	0
  6251  00FFCF                     STR_31:
  6252  00FFCF  34                 	db	52	;'4'
  6253  00FFD0  31                 	db	49	;'1'
  6254  00FFD1  00                 	db	0
  6255  00FFD2                     STR_22:
  6256  00FFD2  33                 	db	51	;'3'
  6257  00FFD3  32                 	db	50	;'2'
  6258  00FFD4  00                 	db	0
  6259  00FFD5                     STR_32:
  6260  00FFD5  34                 	db	52	;'4'
  6261  00FFD6  32                 	db	50	;'2'
  6262  00FFD7  00                 	db	0
  6263  00FFD8                     STR_23:
  6264  00FFD8  33                 	db	51	;'3'
  6265  00FFD9  33                 	db	51	;'3'
  6266  00FFDA  00                 	db	0
  6267  00FFDB                     STR_33:
  6268  00FFDB  34                 	db	52	;'4'
  6269  00FFDC  33                 	db	51	;'3'
  6270  00FFDD  00                 	db	0
  6271  00FFDE                     STR_24:
  6272  00FFDE  33                 	db	51	;'3'
  6273  00FFDF  34                 	db	52	;'4'
  6274  00FFE0  00                 	db	0
  6275  00FFE1                     STR_34:
  6276  00FFE1  34                 	db	52	;'4'
  6277  00FFE2  34                 	db	52	;'4'
  6278  00FFE3  00                 	db	0
  6279  00FFE4                     STR_25:
  6280  00FFE4  33                 	db	51	;'3'
  6281  00FFE5  35                 	db	53	;'5'
  6282  00FFE6  00                 	db	0
  6283  00FFE7                     STR_35:
  6284  00FFE7  34                 	db	52	;'4'
  6285  00FFE8  35                 	db	53	;'5'
  6286  00FFE9  00                 	db	0
  6287  00FFEA                     STR_26:
  6288  00FFEA  33                 	db	51	;'3'
  6289  00FFEB  36                 	db	54	;'6'
  6290  00FFEC  00                 	db	0
  6291  00FFED                     STR_36:
  6292  00FFED  34                 	db	52	;'4'
  6293  00FFEE  36                 	db	54	;'6'
  6294  00FFEF  00                 	db	0
  6295  00FFF0                     STR_27:
  6296  00FFF0  33                 	db	51	;'3'
  6297  00FFF1  37                 	db	55	;'7'
  6298  00FFF2  00                 	db	0
  6299  00FFF3                     STR_37:
  6300  00FFF3  34                 	db	52	;'4'
  6301  00FFF4  37                 	db	55	;'7'
  6302  00FFF5  00                 	db	0
  6303  00FFF6                     STR_11:
  6304  00FFF6  1B                 	db	27
  6305  00FFF7  5B                 	db	91	;'['
  6306  00FFF8  00                 	db	0
  6307  00FFF9                     STR_17:
  6308  00FFF9  38                 	db	56	;'8'
  6309  00FFFA  00                 	db	0
  6310  00FFFB                     STR_19:
  6311  00FFFB  3B                 	db	59	;';'
  6312  00FFFC  00                 	db	0
  6313  00FFFD                     STR_39:
  6314  00FFFD  6D                 	db	109	;'m'
  6315  00FFFE  00                 	db	0
  6316  0000                     
  6317                           ; #config settings
  6318  00FFFF  00                 	db	0	; dummy byte at the end
  6319  0000                     
  6320                           	psect	nvBANK2
  6321  0002EC                     __pnvBANK2:
  6322                           	opt stack 0
  6323  0002EC                     _reset_cause:
  6324                           	opt stack 0
  6325  0002EC                     	ds	1
  6326  0000                     _HLVDCON0bits	set	3778
  6327  0000                     _HLVDCON0	set	3778
  6328  0000                     _HLVDCON1	set	3779
  6329  0000                     _PIR8bits	set	3643
  6330  0000                     _FVRCONbits	set	3780
  6331  0000                     _FVRCON	set	3780
  6332  0000                     _RC2REG	set	3825
  6333  0000                     _RC2STAbits	set	3829
  6334  0000                     _TX2REG	set	3826
  6335  0000                     _TX2STAbits	set	3830
  6336  0000                     _SP2BRGH	set	3828
  6337  0000                     _SP2BRGL	set	3827
  6338  0000                     _TX2STA	set	3830
  6339  0000                     _RC2STA	set	3829
  6340  0000                     _BAUD2CON	set	3831
  6341  0000                     _PIR2bits	set	3637
  6342  0000                     _PIE2bits	set	3627
  6343  0000                     _PIR1bits	set	3636
  6344  0000                     _PIE1bits	set	3626
  6345  0000                     _PIR5bits	set	3640
  6346  0000                     _PIE5bits	set	3630
  6347  0000                     _PIR3bits	set	3638
  6348  0000                     _PIE3bits	set	3628
  6349  0000                     _IPR2bits	set	3617
  6350  0000                     _IPR1bits	set	3616
  6351  0000                     _IPR5bits	set	3620
  6352  0000                     _IPR3bits	set	3618
  6353  0000                     _RX2PPS	set	3601
  6354  0000                     _RG7PPS	set	3721
  6355  0000                     _SLRCONH	set	3774
  6356  0000                     _SLRCONG	set	3769
  6357  0000                     _SLRCONF	set	3761
  6358  0000                     _SLRCONE	set	3756
  6359  0000                     _SLRCOND	set	3748
  6360  0000                     _SLRCONC	set	3743
  6361  0000                     _SLRCONB	set	3735
  6362  0000                     _SLRCONA	set	3727
  6363  0000                     _ODCOND	set	3749
  6364  0000                     _ODCONC	set	3744
  6365  0000                     _ODCONH	set	3775
  6366  0000                     _ODCONB	set	3736
  6367  0000                     _ODCONG	set	3770
  6368  0000                     _ODCONA	set	3728
  6369  0000                     _ODCONF	set	3762
  6370  0000                     _ODCONE	set	3757
  6371  0000                     _WPUH	set	3776
  6372  0000                     _WPUC	set	3745
  6373  0000                     _WPUA	set	3729
  6374  0000                     _WPUG	set	3771
  6375  0000                     _WPUB	set	3737
  6376  0000                     _WPUE	set	3758
  6377  0000                     _WPUF	set	3763
  6378  0000                     _WPUD	set	3750
  6379  0000                     _ANSELA	set	3730
  6380  0000                     _ANSELF	set	3764
  6381  0000                     _ANSELG	set	3772
  6382  0000                     _ANSELE	set	3759
  6383  0000                     _ANSELB	set	3738
  6384  0000                     _ANSELD	set	3751
  6385  0000                     _PMD5	set	3665
  6386  0000                     _PMD4	set	3664
  6387  0000                     _PMD3	set	3663
  6388  0000                     _PMD2	set	3662
  6389  0000                     _PMD1	set	3661
  6390  0000                     _PMD0	set	3660
  6391  0000                     _OSCTUNE	set	3656
  6392  0000                     _OSCFRQ	set	3657
  6393  0000                     _OSCEN	set	3655
  6394  0000                     _OSCCON3	set	3653
  6395  0000                     _OSCCON1	set	3651
  6396  0000                     _PLLR	set	29232
  6397  0000                     _T7GCONbits	set	3889
  6398  0000                     _T7CONbits	set	3888
  6399  0000                     _T7CON	set	3888
  6400  0000                     _TMR7L	set	3886
  6401  0000                     _TMR7H	set	3887
  6402  0000                     _T7CLK	set	3891
  6403  0000                     _T7GATE	set	3890
  6404  0000                     _T7GCON	set	3889
  6405  0000                     _ADCON1bits	set	3929
  6406  0000                     _ADCON2bits	set	3930
  6407  0000                     _ADPRE	set	3934
  6408  0000                     _ADCON3bits	set	3931
  6409  0000                     _ADACQ	set	3932
  6410  0000                     _ADCLK	set	3927
  6411  0000                     _ADACT	set	3926
  6412  0000                     _ADREF	set	3928
  6413  0000                     _ADCON3	set	3931
  6414  0000                     _ADCON2	set	3930
  6415  0000                     _ADCON1	set	3929
  6416  0000                     _ADCAP	set	3933
  6417  0000                     _ADPCH	set	3935
  6418  0000                     _PCON0bits	set	4055
  6419  0000                     _LATGbits	set	3967
  6420  0000                     _NVMDAT	set	3958
  6421  0000                     _NVMADRL	set	3956
  6422  0000                     _NVMADRH	set	3957
  6423  0000                     _NVMCON2	set	3960
  6424  0000                     _TABLAT	set	4085
  6425  0000                     _TBLPTRL	set	4086
  6426  0000                     _TBLPTRH	set	4087
  6427  0000                     _TBLPTRU	set	4088
  6428  0000                     _NVMCON1bits	set	3959
  6429  0000                     _T5GCONbits	set	4036
  6430  0000                     _T5CONbits	set	4035
  6431  0000                     _T5CON	set	4035
  6432  0000                     _TMR5L	set	4033
  6433  0000                     _TMR5H	set	4034
  6434  0000                     _T5CLK	set	4038
  6435  0000                     _T5GATE	set	4037
  6436  0000                     _T5GCON	set	4036
  6437  0000                     _ADERRL	set	3950
  6438  0000                     _ADERRH	set	3951
  6439  0000                     _ADPREVL	set	3937
  6440  0000                     _ADPREVH	set	3938
  6441  0000                     _ADFLTRL	set	3954
  6442  0000                     _ADFLTRH	set	3955
  6443  0000                     _ADSTATbits	set	3941
  6444  0000                     _ADACCL	set	3952
  6445  0000                     _ADACCH	set	3953
  6446  0000                     _ADCNT	set	3943
  6447  0000                     _ADRESL	set	3939
  6448  0000                     _ADRESH	set	3940
  6449  0000                     _ADCON0bits	set	3936
  6450  0000                     _ADCON0	set	3936
  6451  0000                     _ADSTAT	set	3941
  6452  0000                     _ADRPT	set	3942
  6453  0000                     _ADSTPTH	set	3945
  6454  0000                     _ADSTPTL	set	3944
  6455  0000                     _ADUTHH	set	3949
  6456  0000                     _ADUTHL	set	3948
  6457  0000                     _ADLTHH	set	3947
  6458  0000                     _ADLTHL	set	3946
  6459  0000                     _LATFbits	set	3966
  6460  0000                     _PR6	set	4016
  6461  0000                     _TMR6	set	4015
  6462  0000                     _T6CONbits	set	4017
  6463  0000                     _T6RSTbits	set	4020
  6464  0000                     _T6HLTbits	set	4018
  6465  0000                     _T6CON	set	4017
  6466  0000                     _T6TMR	set	4015
  6467  0000                     _T6PR	set	4016
  6468  0000                     _T6RST	set	4020
  6469  0000                     _T6HLT	set	4018
  6470  0000                     _T6CLKCON	set	4019
  6471  0000                     _INTCONbits	set	4082
  6472  0000                     _TRISD	set	3972
  6473  0000                     _TRISC	set	3971
  6474  0000                     _TRISH	set	3976
  6475  0000                     _TRISB	set	3970
  6476  0000                     _TRISG	set	3975
  6477  0000                     _TRISA	set	3969
  6478  0000                     _TRISF	set	3974
  6479  0000                     _TRISE	set	3973
  6480  0000                     _LATH	set	3968
  6481  0000                     _LATC	set	3963
  6482  0000                     _LATG	set	3967
  6483  0000                     _LATB	set	3962
  6484  0000                     _LATF	set	3966
  6485  0000                     _LATA	set	3961
  6486  0000                     _LATD	set	3964
  6487  0000                     _LATE	set	3965
  6488                           
  6489                           	psect	cinit
  6490  0179AE                     __pcinit:
  6491                           	opt stack 0
  6492  0179AE                     start_initialization:
  6493                           	opt stack 0
  6494  0179AE                     __initialization:
  6495                           	opt stack 0
  6496                           
  6497                           ; Initialize objects allocated to BANK2 (36 bytes)
  6498                           ; load TBLPTR registers with __pidataBANK2
  6499  0179AE  0E8A               	movlw	low __pidataBANK2
  6500  0179B0  6EF6               	movwf	tblptrl,c
  6501  0179B2  0E8A               	movlw	high __pidataBANK2
  6502  0179B4  6EF7               	movwf	tblptrh,c
  6503  0179B6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  6504  0179B8  6EF8               	movwf	tblptru,c
  6505  0179BA  EE02  F0B0         	lfsr	0,__pdataBANK2
  6506  0179BE  EE10 F024          	lfsr	1,36
  6507  0179C2                     copy_data0:
  6508  0179C2  0009               	tblrd		*+
  6509  0179C4  CFF5 FFEE          	movff	tablat,postinc0
  6510  0179C8  50E5               	movf	postdec1,w,c
  6511  0179CA  50E1               	movf	fsr1l,w,c
  6512  0179CC  E1FA               	bnz	copy_data0
  6513                           
  6514                           ; Initialize objects allocated to BANK1 (1 bytes)
  6515                           ; load TBLPTR registers with __pidataBANK1
  6516  0179CE  0EF8               	movlw	low __pidataBANK1
  6517  0179D0  6EF6               	movwf	tblptrl,c
  6518  0179D2  0E8C               	movlw	high __pidataBANK1
  6519  0179D4  6EF7               	movwf	tblptrh,c
  6520  0179D6  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  6521  0179D8  6EF8               	movwf	tblptru,c
  6522  0179DA  0009               	tblrd		*+	;fetch initializer
  6523  0179DC  CFF5 F1E8          	movff	tablat,__pdataBANK1
  6524                           
  6525                           ; Initialize objects allocated to BANK0 (6 bytes)
  6526                           ; load TBLPTR registers with __pidataBANK0
  6527  0179E0  0ED4               	movlw	low __pidataBANK0
  6528  0179E2  6EF6               	movwf	tblptrl,c
  6529  0179E4  0E8C               	movlw	high __pidataBANK0
  6530  0179E6  6EF7               	movwf	tblptrh,c
  6531  0179E8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  6532  0179EA  6EF8               	movwf	tblptru,c
  6533  0179EC  EE00  F0F0         	lfsr	0,__pdataBANK0
  6534  0179F0  EE10 F006          	lfsr	1,6
  6535  0179F4                     copy_data1:
  6536  0179F4  0009               	tblrd		*+
  6537  0179F6  CFF5 FFEE          	movff	tablat,postinc0
  6538  0179FA  50E5               	movf	postdec1,w,c
  6539  0179FC  50E1               	movf	fsr1l,w,c
  6540  0179FE  E1FA               	bnz	copy_data1
  6541                           
  6542                           ; Clear objects allocated to BANK3 (128 bytes)
  6543  017A00  EE03  F000         	lfsr	0,__pbssBANK3
  6544  017A04  0E80               	movlw	128
  6545  017A06                     clear_0:
  6546  017A06  6AEE               	clrf	postinc0,c
  6547  017A08  06E8               	decf	wreg,f,c
  6548  017A0A  E1FD               	bnz	clear_0
  6549                           
  6550                           ; Clear objects allocated to BANK2 (176 bytes)
  6551  017A0C  EE02  F000         	lfsr	0,__pbssBANK2
  6552  017A10  0EB0               	movlw	176
  6553  017A12                     clear_1:
  6554  017A12  6AEE               	clrf	postinc0,c
  6555  017A14  06E8               	decf	wreg,f,c
  6556  017A16  E1FD               	bnz	clear_1
  6557                           
  6558                           ; Clear objects allocated to BANK1 (45 bytes)
  6559  017A18  EE01  F0BB         	lfsr	0,__pbssBANK1
  6560  017A1C  0E2D               	movlw	45
  6561  017A1E                     clear_2:
  6562  017A1E  6AEE               	clrf	postinc0,c
  6563  017A20  06E8               	decf	wreg,f,c
  6564  017A22  E1FD               	bnz	clear_2
  6565                           
  6566                           ; Clear objects allocated to BITBANK0 (1 bytes)
  6567  017A24  0100               	movlb	0
  6568  017A26  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  6569                           
  6570                           ; Clear objects allocated to BANK0 (5 bytes)
  6571  017A28  0100               	movlb	0
  6572  017A2A  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
  6573  017A2C  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
  6574  017A2E  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
  6575  017A30  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
  6576  017A32  6BF6               	clrf	__pbssBANK0& (0+255),b
  6577                           
  6578                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  6579  017A34  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  6580  017A36                     end_of_initialization:
  6581                           	opt stack 0
  6582  017A36                     __end_of__initialization:
  6583                           	opt stack 0
  6584  017A36  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6585  017A38  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6586  017A3A  0100               	movlb	0
  6587  017A3C  EF3F  F0B3         	goto	_main	;jump to C main() function
  6588                           tblptru	equ	0xFF8
  6589                           tblptrh	equ	0xFF7
  6590                           tblptrl	equ	0xFF6
  6591                           tablat	equ	0xFF5
  6592                           postinc0	equ	0xFEE
  6593                           wreg	equ	0xFE8
  6594                           postdec1	equ	0xFE5
  6595                           fsr1l	equ	0xFE1
  6596                           
  6597                           	psect	bitbssCOMRAM
  6598  0002F0                     __pbitbssCOMRAM:
  6599                           	opt stack 0
  6600  0002F0                     _adc_error_flag:
  6601                           	opt stack 0
  6602  0002F0                     	ds	1
  6603  0002F1                     _load_enable:
  6604                           	opt stack 0
  6605  0002F1                     	ds	1
  6606  0002F2                     _VCC_overvoltage_flag:
  6607                           	opt stack 0
  6608  0002F2                     	ds	1
  6609                           tblptru	equ	0xFF8
  6610                           tblptrh	equ	0xFF7
  6611                           tblptrl	equ	0xFF6
  6612                           tablat	equ	0xFF5
  6613                           postinc0	equ	0xFEE
  6614                           wreg	equ	0xFE8
  6615                           postdec1	equ	0xFE5
  6616                           fsr1l	equ	0xFE1
  6617                           
  6618                           	psect	bitbssBANK0
  6619  0007D8                     __pbitbssBANK0:
  6620                           	opt stack 0
  6621  0007D8                     _eusart2RxStringReady:
  6622                           	opt stack 0
  6623  0007D8                     	ds	1
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           postinc0	equ	0xFEE
  6629                           wreg	equ	0xFE8
  6630                           postdec1	equ	0xFE5
  6631                           fsr1l	equ	0xFE1
  6632                           
  6633                           	psect	bssBANK0
  6634  0000F6                     __pbssBANK0:
  6635                           	opt stack 0
  6636  0000F6                     _Irms:
  6637                           	opt stack 0
  6638  0000F6                     	ds	4
  6639  0000FA                     _eusart2RxHead:
  6640                           	opt stack 0
  6641  0000FA                     	ds	1
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           postinc0	equ	0xFEE
  6647                           wreg	equ	0xFE8
  6648                           postdec1	equ	0xFE5
  6649                           fsr1l	equ	0xFE1
  6650                           
  6651                           	psect	dataBANK0
  6652  0000F0                     __pdataBANK0:
  6653                           	opt stack 0
  6654  0000F0                     _dimming_period:
  6655                           	opt stack 0
  6656  0000F0                     	ds	2
  6657  0000F2                     _TRIAC_Firing_Angle:
  6658                           	opt stack 0
  6659  0000F2                     	ds	4
  6660                           tblptru	equ	0xFF8
  6661                           tblptrh	equ	0xFF7
  6662                           tblptrl	equ	0xFF6
  6663                           tablat	equ	0xFF5
  6664                           postinc0	equ	0xFEE
  6665                           wreg	equ	0xFE8
  6666                           postdec1	equ	0xFE5
  6667                           fsr1l	equ	0xFE1
  6668                           
  6669                           	psect	bssBANK1
  6670  0001BB                     __pbssBANK1:
  6671                           	opt stack 0
  6672  0001BB                     _Avg_Power:
  6673                           	opt stack 0
  6674  0001BB                     	ds	4
  6675  0001BF                     _Vrms:
  6676                           	opt stack 0
  6677  0001BF                     	ds	4
  6678  0001C3                     _Imeas:
  6679                           	opt stack 0
  6680  0001C3                     	ds	4
  6681  0001C7                     _Ipk:
  6682                           	opt stack 0
  6683  0001C7                     	ds	4
  6684  0001CB                     _POS12_ADC_Result:
  6685                           	opt stack 0
  6686  0001CB                     	ds	4
  6687  0001CF                     _POS3P3_ADC_Result:
  6688                           	opt stack 0
  6689  0001CF                     	ds	4
  6690  0001D3                     _AVSS_ADC_Result:
  6691                           	opt stack 0
  6692  0001D3                     	ds	4
  6693  0001D7                     _timer5ReloadVal:
  6694                           	opt stack 0
  6695  0001D7                     	ds	2
  6696  0001D9                     _timer7ReloadVal:
  6697                           	opt stack 0
  6698  0001D9                     	ds	2
  6699  0001DB                     _current_adc_channel:
  6700                           	opt stack 0
  6701  0001DB                     	ds	1
  6702  0001DC                     _background_color:
  6703                           	opt stack 0
  6704  0001DC                     	ds	1
  6705  0001DD                     _foreground_color:
  6706                           	opt stack 0
  6707  0001DD                     	ds	1
  6708  0001DE                     _attribute:
  6709                           	opt stack 0
  6710  0001DE                     	ds	1
  6711  0001DF                     _eusart2RxCount:
  6712                           	opt stack 0
  6713  0001DF                     	ds	1
  6714  0001E0                     _eusart2RxTail:
  6715                           	opt stack 0
  6716  0001E0                     	ds	1
  6717  0001E1                     _eusart2TxBufferRemaining:
  6718                           	opt stack 0
  6719  0001E1                     	ds	1
  6720  0001E2                     _eusart2TxTail:
  6721                           	opt stack 0
  6722  0001E2                     	ds	1
  6723  0001E3                     _eusart2TxHead:
  6724                           	opt stack 0
  6725  0001E3                     	ds	1
  6726  0001E4                     _FVR_ADC_Result:
  6727                           	opt stack 0
  6728  0001E4                     	ds	4
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           postinc0	equ	0xFEE
  6734                           wreg	equ	0xFE8
  6735                           postdec1	equ	0xFE5
  6736                           fsr1l	equ	0xFE1
  6737                           
  6738                           	psect	dataBANK1
  6739  0001E8                     __pdataBANK1:
  6740                           	opt stack 0
  6741  0001E8                     _next_channel:
  6742                           	opt stack 0
  6743  0001E8                     	ds	1
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           postinc0	equ	0xFEE
  6749                           wreg	equ	0xFE8
  6750                           postdec1	equ	0xFE5
  6751                           fsr1l	equ	0xFE1
  6752                           
  6753                           	psect	bssBANK2
  6754  000200                     __pbssBANK2:
  6755                           	opt stack 0
  6756  000200                     _eusart2RxBuffer:
  6757                           	opt stack 0
  6758  000200                     	ds	64
  6759  000240                     _max_Power:
  6760                           	opt stack 0
  6761  000240                     	ds	4
  6762  000244                     _max_Irms:
  6763                           	opt stack 0
  6764  000244                     	ds	4
  6765  000248                     _load_on_time:
  6766                           	opt stack 0
  6767  000248                     	ds	4
  6768  00024C                     _dev_on_time:
  6769                           	opt stack 0
  6770  00024C                     	ds	4
  6771  000250                     _Vpk:
  6772                           	opt stack 0
  6773  000250                     	ds	4
  6774  000254                     _Temp_ADC_Result:
  6775                           	opt stack 0
  6776  000254                     	ds	4
  6777  000258                     _ADC_Result_Scaling:
  6778                           	opt stack 0
  6779  000258                     	ds	4
  6780  00025C                     _TMR5_InterruptHandler:
  6781                           	opt stack 0
  6782  00025C                     	ds	3
  6783  00025F                     _TMR7_InterruptHandler:
  6784                           	opt stack 0
  6785  00025F                     	ds	3
  6786  000262                     _ADCC_ADTI_InterruptHandler:
  6787                           	opt stack 0
  6788  000262                     	ds	3
  6789  000265                     _TMR6_InterruptHandler:
  6790                           	opt stack 0
  6791  000265                     	ds	3
  6792  000268                     _EUSART2_RxDefaultInterruptHandler:
  6793                           	opt stack 0
  6794  000268                     	ds	3
  6795  00026B                     _EUSART2_TxDefaultInterruptHandler:
  6796                           	opt stack 0
  6797  00026B                     	ds	3
  6798  00026E                     _errno:
  6799                           	opt stack 0
  6800  00026E                     	ds	2
  6801  000270                     _line:
  6802                           	opt stack 0
  6803  000270                     	ds	64
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           postinc0	equ	0xFEE
  6809                           wreg	equ	0xFE8
  6810                           postdec1	equ	0xFE5
  6811                           fsr1l	equ	0xFE1
  6812                           
  6813                           	psect	dataBANK2
  6814  0002B0                     __pdataBANK2:
  6815                           	opt stack 0
  6816  0002B0                     getCauseOfResetString@strings:
  6817                           	opt stack 0
  6818  0002B0                     	ds	18
  6819  0002C2                     getDeviceIDString@F17550:
  6820                           	opt stack 0
  6821  0002C2                     	ds	6
  6822  0002C8                     _Irms_offset:
  6823                           	opt stack 0
  6824  0002C8                     	ds	4
  6825  0002CC                     _Vpk_const:
  6826                           	opt stack 0
  6827  0002CC                     	ds	4
  6828  0002D0                     _Temp_ADC_Offset:
  6829                           	opt stack 0
  6830  0002D0                     	ds	4
  6831                           tblptru	equ	0xFF8
  6832                           tblptrh	equ	0xFF7
  6833                           tblptrl	equ	0xFF6
  6834                           tablat	equ	0xFF5
  6835                           postinc0	equ	0xFEE
  6836                           wreg	equ	0xFE8
  6837                           postdec1	equ	0xFE5
  6838                           fsr1l	equ	0xFE1
  6839                           
  6840                           	psect	bssBANK3
  6841  000300                     __pbssBANK3:
  6842                           	opt stack 0
  6843  000300                     _eusart2TxBuffer:
  6844                           	opt stack 0
  6845  000300                     	ds	128
  6846                           tblptru	equ	0xFF8
  6847                           tblptrh	equ	0xFF7
  6848                           tblptrl	equ	0xFF6
  6849                           tablat	equ	0xFF5
  6850                           postinc0	equ	0xFEE
  6851                           wreg	equ	0xFE8
  6852                           postdec1	equ	0xFE5
  6853                           fsr1l	equ	0xFE1
  6854                           
  6855                           	psect	cstackBANK3
  6856  000380                     __pcstackBANK3:
  6857                           	opt stack 0
  6858  000380                     ringBufferLUT@channel_name:
  6859                           	opt stack 0
  6860                           
  6861                           ; 22 bytes @ 0x0
  6862  000380                     	ds	22
  6863  000396                     ringBufferLUT@angle_degrees:
  6864                           	opt stack 0
  6865                           
  6866                           ; 4 bytes @ 0x16
  6867  000396                     	ds	4
  6868  00039A                     ringBufferLUT@max_current_print:
  6869                           	opt stack 0
  6870                           
  6871                           ; 4 bytes @ 0x1A
  6872  00039A                     	ds	4
  6873  00039E                     ringBufferLUT@max_Power_print:
  6874                           	opt stack 0
  6875                           
  6876                           ; 4 bytes @ 0x1E
  6877  00039E                     	ds	4
  6878  0003A2                     ringBufferLUT@arg_buff:
  6879                           	opt stack 0
  6880                           
  6881                           ; 3 bytes @ 0x22
  6882  0003A2                     	ds	3
  6883  0003A5                     ringBufferLUT@index:
  6884                           	opt stack 0
  6885                           
  6886                           ; 2 bytes @ 0x25
  6887  0003A5                     	ds	2
  6888  0003A7                     ringBufferLUT@percentage:
  6889                           	opt stack 0
  6890                           
  6891                           ; 2 bytes @ 0x27
  6892  0003A7                     	ds	2
  6893  0003A9                     ringBufferLUT@userID:
  6894                           	opt stack 0
  6895                           
  6896                           ; 2 bytes @ 0x29
  6897  0003A9                     	ds	2
  6898                           tblptru	equ	0xFF8
  6899                           tblptrh	equ	0xFF7
  6900                           tblptrl	equ	0xFF6
  6901                           tablat	equ	0xFF5
  6902                           postinc0	equ	0xFEE
  6903                           wreg	equ	0xFE8
  6904                           postdec1	equ	0xFE5
  6905                           fsr1l	equ	0xFE1
  6906                           
  6907                           	psect	cstackBANK2
  6908  0002D4                     __pcstackBANK2:
  6909                           	opt stack 0
  6910  0002D4                     terminal_textAttributes@foreground_color:
  6911                           	opt stack 0
  6912                           
  6913                           ; 1 bytes @ 0x0
  6914  0002D4                     	ds	1
  6915  0002D5                     terminal_textAttributes@output_buff:
  6916                           	opt stack 0
  6917                           
  6918                           ; 15 bytes @ 0x1
  6919  0002D5                     	ds	15
  6920  0002E4                     terminal_ringBufferPull@charNumber:
  6921                           	opt stack 0
  6922                           
  6923                           ; 2 bytes @ 0x10
  6924  0002E4                     	ds	2
  6925  0002E6                     terminal_ringBufferPull@index_2412:
  6926                           	opt stack 0
  6927                           
  6928                           ; 2 bytes @ 0x12
  6929  0002E6                     	ds	2
  6930  0002E8                     terminal_ringBufferPull@index:
  6931                           	opt stack 0
  6932                           
  6933                           ; 2 bytes @ 0x14
  6934  0002E8                     	ds	2
  6935  0002EA                     ??_main:
  6936                           
  6937                           ; 1 bytes @ 0x16
  6938  0002EA                     	ds	2
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           postdec1	equ	0xFE5
  6946                           fsr1l	equ	0xFE1
  6947                           
  6948                           	psect	cstackBANK1
  6949  000100                     __pcstackBANK1:
  6950                           	opt stack 0
  6951  000100                     ??_heartbeatTimerCallback:
  6952  000100                     ADCC_StartConversion@channel:
  6953                           	opt stack 0
  6954  000100                     TMR7_WriteTimer@timerVal:
  6955                           	opt stack 0
  6956                           
  6957                           ; 2 bytes @ 0x0
  6958  000100                     	ds	1
  6959  000101                     
  6960                           ; 1 bytes @ 0x1
  6961  000101                     	ds	1
  6962  000102                     ??_INTERRUPT_InterruptManagerLow:
  6963  000102                     
  6964                           ; 1 bytes @ 0x2
  6965  000102                     	ds	21
  6966  000117                     ??_isdigit:
  6967  000117                     ?_strlen:
  6968                           	opt stack 0
  6969  000117                     ?_strcmp:
  6970                           	opt stack 0
  6971  000117                     ?_getCauseOfResetString:
  6972                           	opt stack 0
  6973  000117                     ?_strchr:
  6974                           	opt stack 0
  6975  000117                     ?___wmul:
  6976                           	opt stack 0
  6977  000117                     ?___awmod:
  6978                           	opt stack 0
  6979  000117                     ?__tdiv_to_l_:
  6980                           	opt stack 0
  6981  000117                     ?__div_to_l_:
  6982                           	opt stack 0
  6983  000117                     ?___lldiv:
  6984                           	opt stack 0
  6985  000117                     ?___xxtofl:
  6986                           	opt stack 0
  6987  000117                     EUSART2_Read@readValue:
  6988                           	opt stack 0
  6989  000117                     EUSART2_Write@txData:
  6990                           	opt stack 0
  6991  000117                     getCauseOfReset@return_reset_cause:
  6992                           	opt stack 0
  6993  000117                     DATAEE_WriteByte@bAdd:
  6994                           	opt stack 0
  6995  000117                     DATAEE_ReadByte@bAdd:
  6996                           	opt stack 0
  6997  000117                     ___wmul@multiplier:
  6998                           	opt stack 0
  6999  000117                     ___awmod@dividend:
  7000                           	opt stack 0
  7001  000117                     strcat@to:
  7002                           	opt stack 0
  7003  000117                     strcmp@s1:
  7004                           	opt stack 0
  7005  000117                     strcpy@to:
  7006                           	opt stack 0
  7007  000117                     strlen@s:
  7008                           	opt stack 0
  7009  000117                     strncpy@to:
  7010                           	opt stack 0
  7011  000117                     strchr@ptr:
  7012                           	opt stack 0
  7013  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  7014                           	opt stack 0
  7015  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  7016                           	opt stack 0
  7017  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  7018                           	opt stack 0
  7019  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  7020                           	opt stack 0
  7021  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  7022                           	opt stack 0
  7023  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  7024                           	opt stack 0
  7025  000117                     __tdiv_to_l_@f1:
  7026                           	opt stack 0
  7027  000117                     FLASH_ReadByte@flashAddr:
  7028                           	opt stack 0
  7029  000117                     __div_to_l_@f1:
  7030                           	opt stack 0
  7031  000117                     ___flge@ff1:
  7032                           	opt stack 0
  7033  000117                     ___lldiv@dividend:
  7034                           	opt stack 0
  7035  000117                     ___xxtofl@val:
  7036                           	opt stack 0
  7037                           
  7038                           ; 4 bytes @ 0x17
  7039  000117                     	ds	1
  7040  000118                     putch@txData:
  7041                           	opt stack 0
  7042  000118                     _isdigit$3228:
  7043                           	opt stack 0
  7044                           
  7045                           ; 1 bytes @ 0x18
  7046  000118                     	ds	1
  7047  000119                     ??_strlen:
  7048  000119                     ?_readDoubleFromEEPROM:
  7049                           	opt stack 0
  7050  000119                     DATAEE_WriteByte@bData:
  7051                           	opt stack 0
  7052  000119                     getCauseOfResetString@r:
  7053                           	opt stack 0
  7054  000119                     isdigit@c:
  7055                           	opt stack 0
  7056  000119                     readDoubleFromEEPROM@starting_address:
  7057                           	opt stack 0
  7058  000119                     ___wmul@multiplicand:
  7059                           	opt stack 0
  7060  000119                     ___awmod@divisor:
  7061                           	opt stack 0
  7062  000119                     strcat@from:
  7063                           	opt stack 0
  7064  000119                     strcmp@s2:
  7065                           	opt stack 0
  7066  000119                     strcpy@from:
  7067                           	opt stack 0
  7068  000119                     strncpy@from:
  7069                           	opt stack 0
  7070  000119                     strchr@chr:
  7071                           	opt stack 0
  7072                           
  7073                           ; 2 bytes @ 0x19
  7074  000119                     	ds	1
  7075  00011A                     ??_TMR7_Initialize:
  7076  00011A                     ??_TMR5_Initialize:
  7077  00011A                     DATAEE_WriteByte@GIEBitValue:
  7078                           	opt stack 0
  7079  00011A                     __tdiv_to_l_@f2:
  7080                           	opt stack 0
  7081                           
  7082                           ; 3 bytes @ 0x1A
  7083  00011A                     	ds	1
  7084  00011B                     ??_strcmp:
  7085  00011B                     ??___xxtofl:
  7086  00011B                     ?_FLASH_ReadWord:
  7087                           	opt stack 0
  7088  00011B                     ___awmod@counter:
  7089                           	opt stack 0
  7090  00011B                     ___wmul@product:
  7091                           	opt stack 0
  7092  00011B                     strcat@cp:
  7093                           	opt stack 0
  7094  00011B                     strcpy@cp:
  7095                           	opt stack 0
  7096  00011B                     strlen@cp:
  7097                           	opt stack 0
  7098  00011B                     strncpy@size:
  7099                           	opt stack 0
  7100  00011B                     FLASH_ReadWord@flashAddr:
  7101                           	opt stack 0
  7102  00011B                     writeDoubleToEEPROM@input_double:
  7103                           	opt stack 0
  7104  00011B                     __div_to_l_@f2:
  7105                           	opt stack 0
  7106  00011B                     ___flge@ff2:
  7107                           	opt stack 0
  7108  00011B                     ___lldiv@divisor:
  7109                           	opt stack 0
  7110                           
  7111                           ; 4 bytes @ 0x1B
  7112  00011B                     	ds	1
  7113  00011C                     ___awmod@sign:
  7114                           	opt stack 0
  7115  00011C                     strcmp@r:
  7116                           	opt stack 0
  7117                           
  7118                           ; 1 bytes @ 0x1C
  7119  00011C                     	ds	1
  7120  00011D                     ??__tdiv_to_l_:
  7121  00011D                     ?_atoi:
  7122                           	opt stack 0
  7123  00011D                     ?_strncmp:
  7124                           	opt stack 0
  7125  00011D                     ?___awdiv:
  7126                           	opt stack 0
  7127  00011D                     atoi@s:
  7128                           	opt stack 0
  7129  00011D                     ___awdiv@dividend:
  7130                           	opt stack 0
  7131  00011D                     strncpy@cp:
  7132                           	opt stack 0
  7133  00011D                     strncmp@s1:
  7134                           	opt stack 0
  7135  00011D                     readDoubleFromEEPROM@output_data:
  7136                           	opt stack 0
  7137                           
  7138                           ; 4 bytes @ 0x1D
  7139  00011D                     	ds	2
  7140  00011F                     ??_atoi:
  7141  00011F                     ??_FLASH_ReadWord:
  7142  00011F                     ??___flge:
  7143  00011F                     ___lldiv@counter:
  7144                           	opt stack 0
  7145  00011F                     ___xxtofl@sign:
  7146                           	opt stack 0
  7147  00011F                     writeDoubleToEEPROM@starting_address:
  7148                           	opt stack 0
  7149  00011F                     ___awdiv@divisor:
  7150                           	opt stack 0
  7151  00011F                     strncmp@s2:
  7152                           	opt stack 0
  7153  00011F                     __div_to_l_@quot:
  7154                           	opt stack 0
  7155                           
  7156                           ; 4 bytes @ 0x1F
  7157  00011F                     	ds	1
  7158  000120                     ___xxtofl@exp:
  7159                           	opt stack 0
  7160  000120                     __tdiv_to_l_@quot:
  7161                           	opt stack 0
  7162  000120                     ___lldiv@quotient:
  7163                           	opt stack 0
  7164                           
  7165                           ; 4 bytes @ 0x20
  7166  000120                     	ds	1
  7167  000121                     atoi@sign:
  7168                           	opt stack 0
  7169  000121                     ___awdiv@counter:
  7170                           	opt stack 0
  7171  000121                     readDoubleFromEEPROM@byte_index:
  7172                           	opt stack 0
  7173  000121                     strncmp@len:
  7174                           	opt stack 0
  7175  000121                     writeDoubleToEEPROM@input_data:
  7176                           	opt stack 0
  7177  000121                     ___xxtofl@arg:
  7178                           	opt stack 0
  7179                           
  7180                           ; 4 bytes @ 0x21
  7181  000121                     	ds	1
  7182  000122                     ??_getMajorRevisionID:
  7183  000122                     ?_getDeviceID:
  7184                           	opt stack 0
  7185  000122                     ?_getUserID:
  7186                           	opt stack 0
  7187  000122                     ___awdiv@sign:
  7188                           	opt stack 0
  7189  000122                     getMinorRevisionID@REVID_RAW:
  7190                           	opt stack 0
  7191  000122                     atoi@a:
  7192                           	opt stack 0
  7193                           
  7194                           ; 2 bytes @ 0x22
  7195  000122                     	ds	1
  7196  000123                     ??_strncmp:
  7197  000123                     __div_to_l_@cntr:
  7198                           	opt stack 0
  7199  000123                     ___awdiv@quotient:
  7200                           	opt stack 0
  7201                           
  7202                           ; 2 bytes @ 0x23
  7203  000123                     	ds	1
  7204  000124                     ?_getDeviceIDString:
  7205                           	opt stack 0
  7206  000124                     ?___llmod:
  7207                           	opt stack 0
  7208  000124                     getUserID@inputUserID:
  7209                           	opt stack 0
  7210  000124                     __div_to_l_@exp1:
  7211                           	opt stack 0
  7212  000124                     __tdiv_to_l_@cntr:
  7213                           	opt stack 0
  7214  000124                     getDeviceIDString@inputDevID:
  7215                           	opt stack 0
  7216  000124                     ___llmod@dividend:
  7217                           	opt stack 0
  7218                           
  7219                           ; 4 bytes @ 0x24
  7220  000124                     	ds	1
  7221  000125                     ?___flneg:
  7222                           	opt stack 0
  7223  000125                     __tdiv_to_l_@exp1:
  7224                           	opt stack 0
  7225  000125                     getMajorRevisionID@REVID_RAW:
  7226                           	opt stack 0
  7227  000125                     writeDoubleToEEPROM@byte_index:
  7228                           	opt stack 0
  7229  000125                     getUserID@initialOffset:
  7230                           	opt stack 0
  7231  000125                     ___flneg@f1:
  7232                           	opt stack 0
  7233                           
  7234                           ; 4 bytes @ 0x25
  7235  000125                     	ds	1
  7236  000126                     ??_getDeviceIDString:
  7237  000126                     ?_strstr:
  7238                           	opt stack 0
  7239  000126                     strstr@s1:
  7240                           	opt stack 0
  7241                           
  7242                           ; 2 bytes @ 0x26
  7243  000126                     	ds	2
  7244  000128                     strstr@s2:
  7245                           	opt stack 0
  7246  000128                     ___llmod@divisor:
  7247                           	opt stack 0
  7248  000128                     getDeviceIDString@strings:
  7249                           	opt stack 0
  7250                           
  7251                           ; 6 bytes @ 0x28
  7252  000128                     	ds	1
  7253  000129                     ?___fladd:
  7254                           	opt stack 0
  7255  000129                     getUserID@IDOffset:
  7256                           	opt stack 0
  7257  000129                     ___fladd@b:
  7258                           	opt stack 0
  7259                           
  7260                           ; 4 bytes @ 0x29
  7261  000129                     	ds	1
  7262  00012A                     
  7263                           ; 1 bytes @ 0x2A
  7264  00012A                     	ds	2
  7265  00012C                     ___llmod@counter:
  7266                           	opt stack 0
  7267                           
  7268                           ; 1 bytes @ 0x2C
  7269  00012C                     	ds	1
  7270  00012D                     ___fladd@a:
  7271                           	opt stack 0
  7272                           
  7273                           ; 4 bytes @ 0x2D
  7274  00012D                     	ds	4
  7275  000131                     ??___fladd:
  7276                           
  7277                           ; 1 bytes @ 0x31
  7278  000131                     	ds	8
  7279  000139                     ___fladd@signs:
  7280                           	opt stack 0
  7281                           
  7282                           ; 1 bytes @ 0x39
  7283  000139                     	ds	1
  7284  00013A                     ___fladd@aexp:
  7285                           	opt stack 0
  7286                           
  7287                           ; 1 bytes @ 0x3A
  7288  00013A                     	ds	1
  7289  00013B                     ___fladd@bexp:
  7290                           	opt stack 0
  7291                           
  7292                           ; 1 bytes @ 0x3B
  7293  00013B                     	ds	1
  7294  00013C                     ___fladd@grs:
  7295                           	opt stack 0
  7296                           
  7297                           ; 1 bytes @ 0x3C
  7298  00013C                     	ds	1
  7299  00013D                     ?___fldiv:
  7300                           	opt stack 0
  7301  00013D                     ?___flsub:
  7302                           	opt stack 0
  7303  00013D                     ___flsub@b:
  7304                           	opt stack 0
  7305  00013D                     ___fldiv@b:
  7306                           	opt stack 0
  7307                           
  7308                           ; 4 bytes @ 0x3D
  7309  00013D                     	ds	4
  7310  000141                     ___flsub@a:
  7311                           	opt stack 0
  7312  000141                     ___fldiv@a:
  7313                           	opt stack 0
  7314                           
  7315                           ; 4 bytes @ 0x41
  7316  000141                     	ds	4
  7317  000145                     ??___fldiv:
  7318  000145                     
  7319                           ; 1 bytes @ 0x45
  7320  000145                     	ds	4
  7321  000149                     ___fldiv@sign:
  7322                           	opt stack 0
  7323                           
  7324                           ; 1 bytes @ 0x49
  7325  000149                     	ds	1
  7326  00014A                     ___fldiv@rem:
  7327                           	opt stack 0
  7328                           
  7329                           ; 4 bytes @ 0x4A
  7330  00014A                     	ds	4
  7331  00014E                     ___fldiv@new_exp:
  7332                           	opt stack 0
  7333                           
  7334                           ; 2 bytes @ 0x4E
  7335  00014E                     	ds	2
  7336  000150                     ___fldiv@grs:
  7337                           	opt stack 0
  7338                           
  7339                           ; 4 bytes @ 0x50
  7340  000150                     	ds	4
  7341  000154                     ___fldiv@bexp:
  7342                           	opt stack 0
  7343                           
  7344                           ; 1 bytes @ 0x54
  7345  000154                     	ds	1
  7346  000155                     ___fldiv@aexp:
  7347                           	opt stack 0
  7348                           
  7349                           ; 1 bytes @ 0x55
  7350  000155                     	ds	1
  7351  000156                     ?___flmul:
  7352                           	opt stack 0
  7353  000156                     ___flmul@b:
  7354                           	opt stack 0
  7355                           
  7356                           ; 4 bytes @ 0x56
  7357  000156                     	ds	4
  7358  00015A                     ___flmul@a:
  7359                           	opt stack 0
  7360                           
  7361                           ; 4 bytes @ 0x5A
  7362  00015A                     	ds	4
  7363  00015E                     ??___flmul:
  7364                           
  7365                           ; 1 bytes @ 0x5E
  7366  00015E                     	ds	4
  7367  000162                     ___flmul@sign:
  7368                           	opt stack 0
  7369                           
  7370                           ; 1 bytes @ 0x62
  7371  000162                     	ds	1
  7372  000163                     ___flmul@aexp:
  7373                           	opt stack 0
  7374                           
  7375                           ; 1 bytes @ 0x63
  7376  000163                     	ds	1
  7377  000164                     ___flmul@bexp:
  7378                           	opt stack 0
  7379                           
  7380                           ; 1 bytes @ 0x64
  7381  000164                     	ds	1
  7382  000165                     ___flmul@grs:
  7383                           	opt stack 0
  7384                           
  7385                           ; 4 bytes @ 0x65
  7386  000165                     	ds	4
  7387  000169                     ___flmul@prod:
  7388                           	opt stack 0
  7389                           
  7390                           ; 4 bytes @ 0x69
  7391  000169                     	ds	4
  7392  00016D                     ___flmul@temp:
  7393                           	opt stack 0
  7394                           
  7395                           ; 2 bytes @ 0x6D
  7396  00016D                     	ds	2
  7397  00016F                     ?_fround:
  7398                           	opt stack 0
  7399  00016F                     ?_scale:
  7400                           	opt stack 0
  7401                           
  7402                           ; 4 bytes @ 0x6F
  7403  00016F                     	ds	4
  7404  000173                     _fround$3941:
  7405                           	opt stack 0
  7406  000173                     _scale$3942:
  7407                           	opt stack 0
  7408                           
  7409                           ; 4 bytes @ 0x73
  7410  000173                     	ds	4
  7411  000177                     scale@scl:
  7412                           	opt stack 0
  7413  000177                     _fround$3940:
  7414                           	opt stack 0
  7415                           
  7416                           ; 4 bytes @ 0x77
  7417  000177                     	ds	1
  7418  000178                     ?___fltol:
  7419                           	opt stack 0
  7420  000178                     ___fltol@f1:
  7421                           	opt stack 0
  7422                           
  7423                           ; 4 bytes @ 0x78
  7424  000178                     	ds	3
  7425  00017B                     fround@prec:
  7426                           	opt stack 0
  7427                           
  7428                           ; 1 bytes @ 0x7B
  7429  00017B                     	ds	1
  7430  00017C                     ??___fltol:
  7431                           
  7432                           ; 1 bytes @ 0x7C
  7433  00017C                     	ds	4
  7434  000180                     ___fltol@sign1:
  7435                           	opt stack 0
  7436                           
  7437                           ; 1 bytes @ 0x80
  7438  000180                     	ds	1
  7439  000181                     ___fltol@exp1:
  7440                           	opt stack 0
  7441                           
  7442                           ; 1 bytes @ 0x81
  7443  000181                     	ds	1
  7444  000182                     ?_printf:
  7445                           	opt stack 0
  7446  000182                     printf@f:
  7447                           	opt stack 0
  7448                           
  7449                           ; 2 bytes @ 0x82
  7450  000182                     	ds	10
  7451  00018C                     ??_printf:
  7452                           
  7453                           ; 1 bytes @ 0x8C
  7454  00018C                     	ds	6
  7455  000192                     _printf$3943:
  7456                           	opt stack 0
  7457                           
  7458                           ; 4 bytes @ 0x92
  7459  000192                     	ds	4
  7460  000196                     printf@idx:
  7461                           	opt stack 0
  7462                           
  7463                           ; 1 bytes @ 0x96
  7464  000196                     	ds	1
  7465  000197                     printf@cp:
  7466                           	opt stack 0
  7467                           
  7468                           ; 2 bytes @ 0x97
  7469  000197                     	ds	2
  7470  000199                     printf@len:
  7471                           	opt stack 0
  7472                           
  7473                           ; 2 bytes @ 0x99
  7474  000199                     	ds	2
  7475  00019B                     printf@ap:
  7476                           	opt stack 0
  7477                           
  7478                           ; 2 bytes @ 0x9B
  7479  00019B                     	ds	2
  7480  00019D                     printf@tmpval:
  7481                           	opt stack 0
  7482                           
  7483                           ; 4 bytes @ 0x9D
  7484  00019D                     	ds	4
  7485  0001A1                     printf@exp:
  7486                           	opt stack 0
  7487                           
  7488                           ; 2 bytes @ 0xA1
  7489  0001A1                     	ds	2
  7490  0001A3                     printf@fval:
  7491                           	opt stack 0
  7492                           
  7493                           ; 4 bytes @ 0xA3
  7494  0001A3                     	ds	4
  7495  0001A7                     printf@val:
  7496                           	opt stack 0
  7497                           
  7498                           ; 4 bytes @ 0xA7
  7499  0001A7                     	ds	4
  7500  0001AB                     printf@flag:
  7501                           	opt stack 0
  7502                           
  7503                           ; 2 bytes @ 0xAB
  7504  0001AB                     	ds	2
  7505  0001AD                     printf@width:
  7506                           	opt stack 0
  7507                           
  7508                           ; 2 bytes @ 0xAD
  7509  0001AD                     	ds	2
  7510  0001AF                     printf@prec:
  7511                           	opt stack 0
  7512                           
  7513                           ; 2 bytes @ 0xAF
  7514  0001AF                     	ds	2
  7515  0001B1                     printf@c:
  7516                           	opt stack 0
  7517                           
  7518                           ; 1 bytes @ 0xB1
  7519  0001B1                     	ds	1
  7520  0001B2                     terminal_textAttributes@background_color:
  7521                           	opt stack 0
  7522                           
  7523                           ; 1 bytes @ 0xB2
  7524  0001B2                     	ds	1
  7525  0001B3                     terminal_textAttributes@input_attribute:
  7526                           	opt stack 0
  7527                           
  7528                           ; 1 bytes @ 0xB3
  7529  0001B3                     	ds	1
  7530  0001B4                     ringBufferLUT@line:
  7531                           	opt stack 0
  7532                           
  7533                           ; 2 bytes @ 0xB4
  7534  0001B4                     	ds	2
  7535  0001B6                     ??_ringBufferLUT:
  7536                           
  7537                           ; 1 bytes @ 0xB6
  7538  0001B6                     	ds	2
  7539  0001B8                     ??_terminal_ringBufferPull:
  7540                           
  7541                           ; 1 bytes @ 0xB8
  7542  0001B8                     	ds	3
  7543                           tblptru	equ	0xFF8
  7544                           tblptrh	equ	0xFF7
  7545                           tblptrl	equ	0xFF6
  7546                           tablat	equ	0xFF5
  7547                           postinc0	equ	0xFEE
  7548                           wreg	equ	0xFE8
  7549                           postdec1	equ	0xFE5
  7550                           fsr1l	equ	0xFE1
  7551                           
  7552                           	psect	cstackBANK0
  7553  000060                     __pcstackBANK0:
  7554                           	opt stack 0
  7555  000060                     ??i2___fladd:
  7556                           
  7557                           ; 1 bytes @ 0x0
  7558  000060                     	ds	8
  7559  000068                     i2___fladd@signs:
  7560                           	opt stack 0
  7561                           
  7562                           ; 1 bytes @ 0x8
  7563  000068                     	ds	1
  7564  000069                     i2___fladd@aexp:
  7565                           	opt stack 0
  7566                           
  7567                           ; 1 bytes @ 0x9
  7568  000069                     	ds	1
  7569  00006A                     i2___fladd@bexp:
  7570                           	opt stack 0
  7571                           
  7572                           ; 1 bytes @ 0xA
  7573  00006A                     	ds	1
  7574  00006B                     i2___fladd@grs:
  7575                           	opt stack 0
  7576                           
  7577                           ; 1 bytes @ 0xB
  7578  00006B                     	ds	1
  7579  00006C                     ?_sqrt:
  7580                           	opt stack 0
  7581  00006C                     ?_eval_poly:
  7582                           	opt stack 0
  7583  00006C                     ?i2___fltol:
  7584                           	opt stack 0
  7585  00006C                     eval_poly@x:
  7586                           	opt stack 0
  7587  00006C                     sqrt@a:
  7588                           	opt stack 0
  7589  00006C                     i2___fltol@f1:
  7590                           	opt stack 0
  7591                           
  7592                           ; 4 bytes @ 0xC
  7593  00006C                     	ds	4
  7594  000070                     ??_sqrt:
  7595  000070                     ??i2___fltol:
  7596  000070                     eval_poly@d:
  7597                           	opt stack 0
  7598                           
  7599                           ; 2 bytes @ 0x10
  7600  000070                     	ds	2
  7601  000072                     eval_poly@n:
  7602                           	opt stack 0
  7603                           
  7604                           ; 2 bytes @ 0x12
  7605  000072                     	ds	2
  7606  000074                     ??_eval_poly:
  7607  000074                     sqrt@sign:
  7608                           	opt stack 0
  7609  000074                     i2___fltol@sign1:
  7610                           	opt stack 0
  7611                           
  7612                           ; 1 bytes @ 0x14
  7613  000074                     	ds	1
  7614  000075                     sqrt@i:
  7615                           	opt stack 0
  7616  000075                     i2___fltol@exp1:
  7617                           	opt stack 0
  7618                           
  7619                           ; 1 bytes @ 0x15
  7620  000075                     	ds	1
  7621  000076                     ?_abs:
  7622                           	opt stack 0
  7623  000076                     ?_floor:
  7624                           	opt stack 0
  7625  000076                     abs@a:
  7626                           	opt stack 0
  7627  000076                     sqrt@tfrac:
  7628                           	opt stack 0
  7629  000076                     floor@x:
  7630                           	opt stack 0
  7631                           
  7632                           ; 4 bytes @ 0x16
  7633  000076                     	ds	2
  7634  000078                     ??_abs:
  7635  000078                     eval_poly@res:
  7636                           	opt stack 0
  7637                           
  7638                           ; 4 bytes @ 0x18
  7639  000078                     	ds	2
  7640  00007A                     sqrt@p:
  7641                           	opt stack 0
  7642  00007A                     floor@i:
  7643                           	opt stack 0
  7644                           
  7645                           ; 4 bytes @ 0x1A
  7646  00007A                     	ds	1
  7647  00007B                     sqrt@grs:
  7648                           	opt stack 0
  7649                           
  7650                           ; 4 bytes @ 0x1B
  7651  00007B                     	ds	1
  7652  00007C                     ?_atan:
  7653                           	opt stack 0
  7654  00007C                     atan@f:
  7655                           	opt stack 0
  7656                           
  7657                           ; 4 bytes @ 0x1C
  7658  00007C                     	ds	2
  7659  00007E                     floor@expon:
  7660                           	opt stack 0
  7661                           
  7662                           ; 2 bytes @ 0x1E
  7663  00007E                     	ds	1
  7664  00007F                     sqrt@exp:
  7665                           	opt stack 0
  7666                           
  7667                           ; 2 bytes @ 0x1F
  7668  00007F                     	ds	1
  7669  000080                     ?i2___flsub:
  7670                           	opt stack 0
  7671  000080                     atan@y:
  7672                           	opt stack 0
  7673  000080                     i2___flsub@b:
  7674                           	opt stack 0
  7675                           
  7676                           ; 4 bytes @ 0x20
  7677  000080                     	ds	1
  7678  000081                     sqrt@root:
  7679                           	opt stack 0
  7680                           
  7681                           ; 4 bytes @ 0x21
  7682  000081                     	ds	3
  7683  000084                     atan@x:
  7684                           	opt stack 0
  7685  000084                     i2___flsub@a:
  7686                           	opt stack 0
  7687                           
  7688                           ; 4 bytes @ 0x24
  7689  000084                     	ds	1
  7690  000085                     sqrt@frac:
  7691                           	opt stack 0
  7692                           
  7693                           ; 4 bytes @ 0x25
  7694  000085                     	ds	3
  7695  000088                     ?i2_printf:
  7696                           	opt stack 0
  7697  000088                     ?_sin:
  7698                           	opt stack 0
  7699  000088                     atan@recip:
  7700                           	opt stack 0
  7701  000088                     i2printf@f:
  7702                           	opt stack 0
  7703  000088                     sin@f:
  7704                           	opt stack 0
  7705                           
  7706                           ; 4 bytes @ 0x28
  7707  000088                     	ds	1
  7708  000089                     atan@val_squared:
  7709                           	opt stack 0
  7710                           
  7711                           ; 4 bytes @ 0x29
  7712  000089                     	ds	1
  7713  00008A                     ??i2_printf:
  7714                           
  7715                           ; 1 bytes @ 0x2A
  7716  00008A                     	ds	2
  7717  00008C                     sin@y:
  7718                           	opt stack 0
  7719                           
  7720                           ; 4 bytes @ 0x2C
  7721  00008C                     	ds	1
  7722  00008D                     atan@val:
  7723                           	opt stack 0
  7724                           
  7725                           ; 4 bytes @ 0x2D
  7726  00008D                     	ds	3
  7727  000090                     _sin$4142:
  7728                           	opt stack 0
  7729  000090                     i2_printf$4146:
  7730                           	opt stack 0
  7731                           
  7732                           ; 4 bytes @ 0x30
  7733  000090                     	ds	1
  7734  000091                     ?_asin:
  7735                           	opt stack 0
  7736  000091                     asin@x:
  7737                           	opt stack 0
  7738                           
  7739                           ; 4 bytes @ 0x31
  7740  000091                     	ds	3
  7741  000094                     i2printf@idx:
  7742                           	opt stack 0
  7743  000094                     sin@x2:
  7744                           	opt stack 0
  7745                           
  7746                           ; 4 bytes @ 0x34
  7747  000094                     	ds	1
  7748  000095                     i2printf@cp:
  7749                           	opt stack 0
  7750  000095                     asin@sgn:
  7751                           	opt stack 0
  7752                           
  7753                           ; 4 bytes @ 0x35
  7754  000095                     	ds	2
  7755  000097                     i2printf@len:
  7756                           	opt stack 0
  7757                           
  7758                           ; 2 bytes @ 0x37
  7759  000097                     	ds	1
  7760  000098                     sin@sgn:
  7761                           	opt stack 0
  7762                           
  7763                           ; 1 bytes @ 0x38
  7764  000098                     	ds	1
  7765  000099                     ?_currentMeasuredToPeak:
  7766                           	opt stack 0
  7767  000099                     i2printf@ap:
  7768                           	opt stack 0
  7769  000099                     currentMeasuredToPeak@Measured:
  7770                           	opt stack 0
  7771  000099                     _asin$4141:
  7772                           	opt stack 0
  7773                           
  7774                           ; 4 bytes @ 0x39
  7775  000099                     	ds	2
  7776  00009B                     i2printf@tmpval:
  7777                           	opt stack 0
  7778                           
  7779                           ; 4 bytes @ 0x3B
  7780  00009B                     	ds	2
  7781  00009D                     currentMeasuredToPeak@Angle:
  7782                           	opt stack 0
  7783  00009D                     _asin$4140:
  7784                           	opt stack 0
  7785                           
  7786                           ; 4 bytes @ 0x3D
  7787  00009D                     	ds	2
  7788  00009F                     i2printf@exp:
  7789                           	opt stack 0
  7790                           
  7791                           ; 2 bytes @ 0x3F
  7792  00009F                     	ds	2
  7793  0000A1                     currentMeasuredToPeak@Peak:
  7794                           	opt stack 0
  7795  0000A1                     asin@y:
  7796                           	opt stack 0
  7797  0000A1                     i2printf@val:
  7798                           	opt stack 0
  7799                           
  7800                           ; 4 bytes @ 0x41
  7801  0000A1                     	ds	4
  7802  0000A5                     i2printf@fval:
  7803                           	opt stack 0
  7804  0000A5                     _asin$4139:
  7805                           	opt stack 0
  7806                           
  7807                           ; 4 bytes @ 0x45
  7808  0000A5                     	ds	4
  7809  0000A9                     ?_acos:
  7810                           	opt stack 0
  7811  0000A9                     i2printf@flag:
  7812                           	opt stack 0
  7813  0000A9                     acos@x:
  7814                           	opt stack 0
  7815                           
  7816                           ; 4 bytes @ 0x49
  7817  0000A9                     	ds	2
  7818  0000AB                     i2printf@width:
  7819                           	opt stack 0
  7820                           
  7821                           ; 2 bytes @ 0x4B
  7822  0000AB                     	ds	2
  7823  0000AD                     i2printf@prec:
  7824                           	opt stack 0
  7825  0000AD                     _acos$4138:
  7826                           	opt stack 0
  7827                           
  7828                           ; 4 bytes @ 0x4D
  7829  0000AD                     	ds	2
  7830  0000AF                     i2printf@c:
  7831                           	opt stack 0
  7832                           
  7833                           ; 1 bytes @ 0x4F
  7834  0000AF                     	ds	2
  7835  0000B1                     ?_peakToRMS:
  7836                           	opt stack 0
  7837  0000B1                     peakToRMS@Peak:
  7838                           	opt stack 0
  7839                           
  7840                           ; 4 bytes @ 0x51
  7841  0000B1                     	ds	4
  7842  0000B5                     peakToRMS@Angle:
  7843                           	opt stack 0
  7844                           
  7845                           ; 4 bytes @ 0x55
  7846  0000B5                     	ds	4
  7847  0000B9                     _peakToRMS$4131:
  7848                           	opt stack 0
  7849                           
  7850                           ; 4 bytes @ 0x59
  7851  0000B9                     	ds	4
  7852  0000BD                     _peakToRMS$4132:
  7853                           	opt stack 0
  7854                           
  7855                           ; 4 bytes @ 0x5D
  7856  0000BD                     	ds	4
  7857  0000C1                     _peakToRMS$4130:
  7858                           	opt stack 0
  7859                           
  7860                           ; 4 bytes @ 0x61
  7861  0000C1                     	ds	4
  7862  0000C5                     peakToRMS@RMS:
  7863                           	opt stack 0
  7864                           
  7865                           ; 4 bytes @ 0x65
  7866  0000C5                     	ds	4
  7867  0000C9                     _ADCPostProcessingCallback$4135:
  7868                           	opt stack 0
  7869                           
  7870                           ; 4 bytes @ 0x69
  7871  0000C9                     	ds	4
  7872  0000CD                     _ADCPostProcessingCallback$4136:
  7873                           	opt stack 0
  7874                           
  7875                           ; 4 bytes @ 0x6D
  7876  0000CD                     	ds	4
  7877  0000D1                     _ADCPostProcessingCallback$4137:
  7878                           	opt stack 0
  7879                           
  7880                           ; 4 bytes @ 0x71
  7881  0000D1                     	ds	4
  7882  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  7883                           	opt stack 0
  7884                           
  7885                           ; 1 bytes @ 0x75
  7886  0000D5                     	ds	1
  7887  0000D6                     _ADCPostProcessingCallback$4133:
  7888                           	opt stack 0
  7889                           
  7890                           ; 4 bytes @ 0x76
  7891  0000D6                     	ds	4
  7892  0000DA                     _ADCPostProcessingCallback$4134:
  7893                           	opt stack 0
  7894                           
  7895                           ; 4 bytes @ 0x7A
  7896  0000DA                     	ds	4
  7897  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  7898                           
  7899                           ; 1 bytes @ 0x7E
  7900  0000DE                     	ds	18
  7901                           tblptru	equ	0xFF8
  7902                           tblptrh	equ	0xFF7
  7903                           tblptrl	equ	0xFF6
  7904                           tablat	equ	0xFF5
  7905                           postinc0	equ	0xFEE
  7906                           wreg	equ	0xFE8
  7907                           postdec1	equ	0xFE5
  7908                           fsr1l	equ	0xFE1
  7909                           
  7910                           	psect	cstackCOMRAM
  7911  000001                     __pcstackCOMRAM:
  7912                           	opt stack 0
  7913  000001                     ??i2_isdigit:
  7914  000001                     ?_ADCC_GetConversionResult:
  7915                           	opt stack 0
  7916  000001                     ?_ADCC_GetFilterValue:
  7917                           	opt stack 0
  7918  000001                     ?i2___wmul:
  7919                           	opt stack 0
  7920  000001                     ?i2___awmod:
  7921                           	opt stack 0
  7922  000001                     ?i2__div_to_l_:
  7923                           	opt stack 0
  7924  000001                     ?i2__tdiv_to_l_:
  7925                           	opt stack 0
  7926  000001                     ?i2___lldiv:
  7927                           	opt stack 0
  7928  000001                     i2EUSART2_Write@txData:
  7929                           	opt stack 0
  7930  000001                     TMR5_WriteTimer@timerVal:
  7931                           	opt stack 0
  7932  000001                     i2___wmul@multiplier:
  7933                           	opt stack 0
  7934  000001                     i2___awmod@dividend:
  7935                           	opt stack 0
  7936  000001                     i2__tdiv_to_l_@f1:
  7937                           	opt stack 0
  7938  000001                     frexp@value:
  7939                           	opt stack 0
  7940  000001                     i2__div_to_l_@f1:
  7941                           	opt stack 0
  7942  000001                     i2___lldiv@dividend:
  7943                           	opt stack 0
  7944                           
  7945                           ; 4 bytes @ 0x0
  7946  000001                     	ds	1
  7947  000002                     i2putch@txData:
  7948                           	opt stack 0
  7949  000002                     i2_isdigit$3228:
  7950                           	opt stack 0
  7951                           
  7952                           ; 1 bytes @ 0x1
  7953  000002                     	ds	1
  7954  000003                     ??_ADCC_GetConversionResult:
  7955  000003                     ??_ADCC_GetFilterValue:
  7956  000003                     i2isdigit@c:
  7957                           	opt stack 0
  7958  000003                     i2___wmul@multiplicand:
  7959                           	opt stack 0
  7960  000003                     i2___awmod@divisor:
  7961                           	opt stack 0
  7962                           
  7963                           ; 2 bytes @ 0x2
  7964  000003                     	ds	1
  7965  000004                     i2__tdiv_to_l_@f2:
  7966                           	opt stack 0
  7967                           
  7968                           ; 3 bytes @ 0x3
  7969  000004                     	ds	1
  7970  000005                     ?i2___xxtofl:
  7971                           	opt stack 0
  7972  000005                     i2___awmod@counter:
  7973                           	opt stack 0
  7974  000005                     frexp@eptr:
  7975                           	opt stack 0
  7976  000005                     i2___wmul@product:
  7977                           	opt stack 0
  7978  000005                     i2__div_to_l_@f2:
  7979                           	opt stack 0
  7980  000005                     i2___lldiv@divisor:
  7981                           	opt stack 0
  7982  000005                     i2___xxtofl@val:
  7983                           	opt stack 0
  7984                           
  7985                           ; 4 bytes @ 0x4
  7986  000005                     	ds	1
  7987  000006                     i2___awmod@sign:
  7988                           	opt stack 0
  7989                           
  7990                           ; 1 bytes @ 0x5
  7991  000006                     	ds	1
  7992  000007                     ??_frexp:
  7993  000007                     ??i2__tdiv_to_l_:
  7994  000007                     ?i2___awdiv:
  7995                           	opt stack 0
  7996  000007                     i2___awdiv@dividend:
  7997                           	opt stack 0
  7998                           
  7999                           ; 2 bytes @ 0x6
  8000  000007                     	ds	2
  8001  000009                     ??i2___xxtofl:
  8002  000009                     i2___awdiv@divisor:
  8003                           	opt stack 0
  8004  000009                     i2__div_to_l_@quot:
  8005                           	opt stack 0
  8006  000009                     i2___lldiv@quotient:
  8007                           	opt stack 0
  8008                           
  8009                           ; 4 bytes @ 0x8
  8010  000009                     	ds	1
  8011  00000A                     i2__tdiv_to_l_@quot:
  8012                           	opt stack 0
  8013                           
  8014                           ; 4 bytes @ 0x9
  8015  00000A                     	ds	1
  8016  00000B                     i2___awdiv@counter:
  8017                           	opt stack 0
  8018                           
  8019                           ; 1 bytes @ 0xA
  8020  00000B                     	ds	1
  8021  00000C                     i2___awdiv@sign:
  8022                           	opt stack 0
  8023                           
  8024                           ; 1 bytes @ 0xB
  8025  00000C                     	ds	1
  8026  00000D                     i2__div_to_l_@cntr:
  8027                           	opt stack 0
  8028  00000D                     i2___lldiv@counter:
  8029                           	opt stack 0
  8030  00000D                     i2___xxtofl@sign:
  8031                           	opt stack 0
  8032  00000D                     i2___awdiv@quotient:
  8033                           	opt stack 0
  8034                           
  8035                           ; 2 bytes @ 0xC
  8036  00000D                     	ds	1
  8037  00000E                     ?i2___llmod:
  8038                           	opt stack 0
  8039  00000E                     i2__div_to_l_@exp1:
  8040                           	opt stack 0
  8041  00000E                     i2__tdiv_to_l_@cntr:
  8042                           	opt stack 0
  8043  00000E                     i2___xxtofl@exp:
  8044                           	opt stack 0
  8045  00000E                     i2___llmod@dividend:
  8046                           	opt stack 0
  8047                           
  8048                           ; 4 bytes @ 0xD
  8049  00000E                     	ds	1
  8050  00000F                     i2__tdiv_to_l_@exp1:
  8051                           	opt stack 0
  8052  00000F                     i2___xxtofl@arg:
  8053                           	opt stack 0
  8054                           
  8055                           ; 4 bytes @ 0xE
  8056  00000F                     	ds	3
  8057  000012                     i2___llmod@divisor:
  8058                           	opt stack 0
  8059                           
  8060                           ; 4 bytes @ 0x11
  8061  000012                     	ds	1
  8062  000013                     ?i2___fldiv:
  8063                           	opt stack 0
  8064  000013                     i2___fldiv@b:
  8065                           	opt stack 0
  8066                           
  8067                           ; 4 bytes @ 0x12
  8068  000013                     	ds	3
  8069  000016                     i2___llmod@counter:
  8070                           	opt stack 0
  8071                           
  8072                           ; 1 bytes @ 0x15
  8073  000016                     	ds	1
  8074  000017                     i2___fldiv@a:
  8075                           	opt stack 0
  8076                           
  8077                           ; 4 bytes @ 0x16
  8078  000017                     	ds	4
  8079  00001B                     ??i2___fldiv:
  8080                           
  8081                           ; 1 bytes @ 0x1A
  8082  00001B                     	ds	4
  8083  00001F                     i2___fldiv@sign:
  8084                           	opt stack 0
  8085                           
  8086                           ; 1 bytes @ 0x1E
  8087  00001F                     	ds	1
  8088  000020                     i2___fldiv@rem:
  8089                           	opt stack 0
  8090                           
  8091                           ; 4 bytes @ 0x1F
  8092  000020                     	ds	4
  8093  000024                     i2___fldiv@new_exp:
  8094                           	opt stack 0
  8095                           
  8096                           ; 2 bytes @ 0x23
  8097  000024                     	ds	2
  8098  000026                     i2___fldiv@grs:
  8099                           	opt stack 0
  8100                           
  8101                           ; 4 bytes @ 0x25
  8102  000026                     	ds	4
  8103  00002A                     i2___fldiv@bexp:
  8104                           	opt stack 0
  8105                           
  8106                           ; 1 bytes @ 0x29
  8107  00002A                     	ds	1
  8108  00002B                     i2___fldiv@aexp:
  8109                           	opt stack 0
  8110                           
  8111                           ; 1 bytes @ 0x2A
  8112  00002B                     	ds	1
  8113  00002C                     ?i2___flneg:
  8114                           	opt stack 0
  8115  00002C                     i2___flneg@f1:
  8116                           	opt stack 0
  8117                           
  8118                           ; 4 bytes @ 0x2B
  8119  00002C                     	ds	4
  8120  000030                     ?_fabs:
  8121                           	opt stack 0
  8122  000030                     ?i2___flmul:
  8123                           	opt stack 0
  8124  000030                     fabs@d:
  8125                           	opt stack 0
  8126  000030                     i2___flmul@b:
  8127                           	opt stack 0
  8128                           
  8129                           ; 4 bytes @ 0x2F
  8130  000030                     	ds	4
  8131  000034                     i2___flge@ff1:
  8132                           	opt stack 0
  8133  000034                     i2___flmul@a:
  8134                           	opt stack 0
  8135                           
  8136                           ; 4 bytes @ 0x33
  8137  000034                     	ds	4
  8138  000038                     ??i2___flmul:
  8139  000038                     i2___flge@ff2:
  8140                           	opt stack 0
  8141                           
  8142                           ; 4 bytes @ 0x37
  8143  000038                     	ds	4
  8144  00003C                     ??i2___flge:
  8145  00003C                     i2___flmul@sign:
  8146                           	opt stack 0
  8147                           
  8148                           ; 1 bytes @ 0x3B
  8149  00003C                     	ds	1
  8150  00003D                     i2___flmul@aexp:
  8151                           	opt stack 0
  8152                           
  8153                           ; 1 bytes @ 0x3C
  8154  00003D                     	ds	1
  8155  00003E                     i2___flmul@grs:
  8156                           	opt stack 0
  8157                           
  8158                           ; 4 bytes @ 0x3D
  8159  00003E                     	ds	4
  8160  000042                     i2___flmul@bexp:
  8161                           	opt stack 0
  8162                           
  8163                           ; 1 bytes @ 0x41
  8164  000042                     	ds	1
  8165  000043                     i2___flmul@prod:
  8166                           	opt stack 0
  8167                           
  8168                           ; 4 bytes @ 0x42
  8169  000043                     	ds	4
  8170  000047                     i2___flmul@temp:
  8171                           	opt stack 0
  8172                           
  8173                           ; 2 bytes @ 0x46
  8174  000047                     	ds	2
  8175  000049                     ?i2_fround:
  8176                           	opt stack 0
  8177  000049                     ?i2_scale:
  8178                           	opt stack 0
  8179                           
  8180                           ; 4 bytes @ 0x48
  8181  000049                     	ds	4
  8182  00004D                     i2_fround$4144:
  8183                           	opt stack 0
  8184  00004D                     i2_scale$4145:
  8185                           	opt stack 0
  8186                           
  8187                           ; 4 bytes @ 0x4C
  8188  00004D                     	ds	4
  8189  000051                     i2scale@scl:
  8190                           	opt stack 0
  8191  000051                     i2_fround$4143:
  8192                           	opt stack 0
  8193                           
  8194                           ; 4 bytes @ 0x50
  8195  000051                     	ds	4
  8196  000055                     i2fround@prec:
  8197                           	opt stack 0
  8198                           
  8199                           ; 1 bytes @ 0x54
  8200  000055                     	ds	1
  8201  000056                     ?i2___fladd:
  8202                           	opt stack 0
  8203  000056                     i2___fladd@b:
  8204                           	opt stack 0
  8205                           
  8206                           ; 4 bytes @ 0x55
  8207  000056                     	ds	4
  8208  00005A                     i2___fladd@a:
  8209                           	opt stack 0
  8210                           
  8211                           ; 4 bytes @ 0x59
  8212  00005A                     	ds	4
  8213  00005E                     tblptru	equ	0xFF8
  8214                           tblptrh	equ	0xFF7
  8215                           tblptrl	equ	0xFF6
  8216                           tablat	equ	0xFF5
  8217                           postinc0	equ	0xFEE
  8218                           wreg	equ	0xFE8
  8219                           postdec1	equ	0xFE5
  8220                           fsr1l	equ	0xFE1
  8221                           
  8222                           ; 1 bytes @ 0x5D
  8223 ;;
  8224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8225 ;;
  8226 ;; *************** function _main *****************
  8227 ;; Defined at:
  8228 ;;		line 386 in file "main.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;Total ram usage:        2 bytes
  8247 ;; Hardware stack levels required when called:   20
  8248 ;; This function calls:
  8249 ;;		_ADCC_SetADTIInterruptHandler
  8250 ;;		_SYSTEM_Initialize
  8251 ;;		_TMR6_SetInterruptHandler
  8252 ;;		_TMR7_SetInterruptHandler
  8253 ;;		___flge
  8254 ;;		_getCauseOfReset
  8255 ;;		_readDoubleFromEEPROM
  8256 ;;		_terminal_clearTerminal
  8257 ;;		_terminal_ringBufferPull
  8258 ;;		_terminal_setCursorHome
  8259 ;;		_terminal_textAttributesReset
  8260 ;;		_writeDoubleToEEPROM
  8261 ;; This function is called by:
  8262 ;;		Startup code after reset
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text0
  8267  01667E                     __ptext0:
  8268                           	opt stack 0
  8269  01667E                     _main:
  8270                           	opt stack 11
  8271                           
  8272                           ;main.c: 390: reset_cause = getCauseOfReset();
  8273                           
  8274                           ;incstack = 0
  8275  01667E  EC5E  F0C1         	call	_getCauseOfReset	;wreg free
  8276  016682  0102               	movlb	2	; () banked
  8277  016684  6FEC               	movwf	_reset_cause& (0+255),b
  8278                           
  8279                           ; BSR set to: 2
  8280                           ;main.c: 394: _delay((unsigned long)((250)*(64000000/4000.0)));
  8281  016686  0E15               	movlw	21
  8282  016688  0102               	movlb	2	; () banked
  8283  01668A  6FEB               	movwf	(??_main+1)& (0+255),b
  8284  01668C  0E4B               	movlw	75
  8285  01668E  6FEA               	movwf	??_main& (0+255),b
  8286  016690  0EBE               	movlw	190
  8287  016692                     u26407:
  8288  016692  2EE8               	decfsz	wreg,f,c
  8289  016694  D7FE               	bra	u26407
  8290  016696  2FEA               	decfsz	??_main& (0+255),f,b
  8291  016698  D7FC               	bra	u26407
  8292  01669A  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  8293  01669C  D7FA               	bra	u26407
  8294  01669E  F000               	nop	
  8295                           
  8296                           ;main.c: 397: SYSTEM_Initialize();
  8297  0166A0  EC8D  F0C4         	call	_SYSTEM_Initialize	;wreg free
  8298                           
  8299                           ;main.c: 400: LATGbits.LATG0 = 0;
  8300  0166A4  907F               	bcf	3967,0,c	;volatile
  8301                           
  8302                           ;main.c: 401: LATGbits.LATG1 = 0;
  8303  0166A6  927F               	bcf	3967,1,c	;volatile
  8304                           
  8305                           ;main.c: 402: load_enable = 0;
  8306  0166A8  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  8307                           
  8308                           ;main.c: 405: ADCON2bits.ADCRS = 7;
  8309  0166AA  010F               	movlb	15	; () banked
  8310  0166AC  895A               	bsf	90,4,b	;volatile
  8311  0166AE  8B5A               	bsf	90,5,b	;volatile
  8312  0166B0  8D5A               	bsf	90,6,b	;volatile
  8313                           
  8314                           ; BSR set to: 15
  8315                           ;main.c: 406: ADCAP = 20;
  8316  0166B2  0E14               	movlw	20
  8317  0166B4  6F5D               	movwf	93,b	;volatile
  8318                           
  8319                           ; BSR set to: 15
  8320                           ;main.c: 409: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  8321  0166B6  0E86               	movlw	low _heartbeatTimerCallback
  8322  0166B8  0101               	movlb	1	; () banked
  8323  0166BA  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  8324  0166BC  0E86               	movlw	high _heartbeatTimerCallback
  8325  0166BE  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8326  0166C0  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  8327  0166C2  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8328  0166C4  EC29  F0C6         	call	_TMR6_SetInterruptHandler	;wreg free
  8329                           
  8330                           ;main.c: 412: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
  8331  0166C8  0ED0               	movlw	low _ADCPostProcessingCallback
  8332  0166CA  0101               	movlb	1	; () banked
  8333  0166CC  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  8334  0166CE  0E2A               	movlw	high _ADCPostProcessingCallback
  8335  0166D0  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  8336  0166D2  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  8337  0166D4  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  8338  0166D6  EC45  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8339                           
  8340                           ;main.c: 415: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  8341  0166DA  0EE4               	movlw	low _acquisitionTimerCallback
  8342  0166DC  0101               	movlb	1	; () banked
  8343  0166DE  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  8344  0166E0  0E8B               	movlw	high _acquisitionTimerCallback
  8345  0166E2  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8346  0166E4  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  8347  0166E6  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8348  0166E8  EC22  F0C6         	call	_TMR7_SetInterruptHandler	;wreg free
  8349                           
  8350                           ;main.c: 418: max_Irms = readDoubleFromEEPROM(max_Irms_address);
  8351  0166EC  0E43               	movlw	low _max_Irms_address
  8352  0166EE  6EF6               	movwf	tblptrl,c
  8353  0166F0                     	if	1	;There is more than 1 active tblptr byte
  8354  0166F0  0EE9               	movlw	high _max_Irms_address
  8355  0166F2  6EF7               	movwf	tblptrh,c
  8356  0166F4                     	endif
  8357  0166F4                     	if	1	;There are 3 active tblptr bytes
  8358  0166F4  0E00               	movlw	low (_max_Irms_address shr (0+16))
  8359  0166F6  6EF8               	movwf	tblptru,c
  8360  0166F8                     	endif
  8361  0166F8  0009               	tblrd		*+
  8362  0166FA  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
  8363  0166FE  000A               	tblrd		*-
  8364  016700  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
  8365  016704  EC35  F0C1         	call	_readDoubleFromEEPROM	;wreg free
  8366  016708  C119  F244         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
  8367  01670C  C11A  F245         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
  8368  016710  C11B  F246         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
  8369  016714  C11C  F247         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
  8370                           
  8371                           ;main.c: 419: max_Power = readDoubleFromEEPROM(max_Power_address);
  8372  016718  0E41               	movlw	low _max_Power_address
  8373  01671A  6EF6               	movwf	tblptrl,c
  8374  01671C                     	if	1	;There is more than 1 active tblptr byte
  8375  01671C  0EE9               	movlw	high _max_Power_address
  8376  01671E  6EF7               	movwf	tblptrh,c
  8377  016720                     	endif
  8378  016720                     	if	1	;There are 3 active tblptr bytes
  8379  016720  0E00               	movlw	low (_max_Power_address shr (0+16))
  8380  016722  6EF8               	movwf	tblptru,c
  8381  016724                     	endif
  8382  016724  0009               	tblrd		*+
  8383  016726  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
  8384  01672A  000A               	tblrd		*-
  8385  01672C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
  8386  016730  EC35  F0C1         	call	_readDoubleFromEEPROM	;wreg free
  8387  016734  C119  F240         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
  8388  016738  C11A  F241         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
  8389  01673C  C11B  F242         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
  8390  016740  C11C  F243         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
  8391                           
  8392                           ;main.c: 422: (INTCONbits.GIEH = 1);
  8393  016744  8EF2               	bsf	intcon,7,c	;volatile
  8394                           
  8395                           ;main.c: 425: (INTCONbits.GIEL = 1);
  8396  016746  8CF2               	bsf	intcon,6,c	;volatile
  8397                           
  8398                           ;main.c: 428: terminal_clearTerminal();
  8399  016748  EC0B  F0C6         	call	_terminal_clearTerminal	;wreg free
  8400                           
  8401                           ;main.c: 429: terminal_setCursorHome();
  8402  01674C  ECFB  F0C5         	call	_terminal_setCursorHome	;wreg free
  8403                           
  8404                           ;main.c: 430: terminal_textAttributesReset();
  8405  016750  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  8406  016754                     
  8407                           ;main.c: 434: {
  8408                           ;main.c: 437: if (eusart2RxStringReady) {
  8409  016754  0100               	movlb	0	; () banked
  8410  016756  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;main.c: 439: terminal_ringBufferPull();
  8414  016758  ECC3  F0B7         	call	_terminal_ringBufferPull	;wreg free
  8415                           
  8416                           ;main.c: 441: }
  8417                           ;main.c: 444: if (Irms > max_Irms) {
  8418  01675C  C244  F117         	movff	_max_Irms,___flge@ff1	;volatile
  8419  016760  C245  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
  8420  016764  C246  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
  8421  016768  C247  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
  8422  01676C  C0F6  F11B         	movff	_Irms,___flge@ff2	;volatile
  8423  016770  C0F7  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
  8424  016774  C0F8  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
  8425  016778  C0F9  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
  8426  01677C  EC55  F0B8         	call	___flge	;wreg free
  8427  016780  0101               	movlb	1	; () banked
  8428  016782  B0D8               	btfsc	status,0,c
  8429  016784  D01E               	goto	l1012
  8430                           
  8431                           ; BSR set to: 1
  8432                           ;main.c: 446: writeDoubleToEEPROM(Irms, max_Irms_address);
  8433  016786  C0F6  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
  8434  01678A  C0F7  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
  8435  01678E  C0F8  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
  8436  016792  C0F9  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
  8437  016796  0E43               	movlw	low _max_Irms_address
  8438  016798  6EF6               	movwf	tblptrl,c
  8439  01679A                     	if	1	;There is more than 1 active tblptr byte
  8440  01679A  0EE9               	movlw	high _max_Irms_address
  8441  01679C  6EF7               	movwf	tblptrh,c
  8442  01679E                     	endif
  8443  01679E                     	if	1	;There are 3 active tblptr bytes
  8444  01679E  0E00               	movlw	low (_max_Irms_address shr (0+16))
  8445  0167A0  6EF8               	movwf	tblptru,c
  8446  0167A2                     	endif
  8447  0167A2  0009               	tblrd		*+
  8448  0167A4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
  8449  0167A8  000A               	tblrd		*-
  8450  0167AA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
  8451  0167AE  EC87  F0C1         	call	_writeDoubleToEEPROM	;wreg free
  8452                           
  8453                           ;main.c: 447: max_Irms = Irms;
  8454  0167B2  C0F6  F244         	movff	_Irms,_max_Irms	;volatile
  8455  0167B6  C0F7  F245         	movff	_Irms+1,_max_Irms+1	;volatile
  8456  0167BA  C0F8  F246         	movff	_Irms+2,_max_Irms+2	;volatile
  8457  0167BE  C0F9  F247         	movff	_Irms+3,_max_Irms+3	;volatile
  8458  0167C2                     l1012:
  8459                           
  8460                           ;main.c: 449: }
  8461                           ;main.c: 451: if (Avg_Power > max_Power) {
  8462  0167C2  C240  F117         	movff	_max_Power,___flge@ff1	;volatile
  8463  0167C6  C241  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
  8464  0167CA  C242  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
  8465  0167CE  C243  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
  8466  0167D2  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
  8467  0167D6  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
  8468  0167DA  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
  8469  0167DE  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
  8470  0167E2  EC55  F0B8         	call	___flge	;wreg free
  8471  0167E6  0101               	movlb	1	; () banked
  8472  0167E8  B0D8               	btfsc	status,0,c
  8473  0167EA  D7B4               	goto	l1010
  8474                           
  8475                           ; BSR set to: 1
  8476                           ;main.c: 453: writeDoubleToEEPROM(Avg_Power, max_Power_address);
  8477  0167EC  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
  8478  0167F0  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
  8479  0167F4  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
  8480  0167F8  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
  8481  0167FC  0E41               	movlw	low _max_Power_address
  8482  0167FE  6EF6               	movwf	tblptrl,c
  8483  016800                     	if	1	;There is more than 1 active tblptr byte
  8484  016800  0EE9               	movlw	high _max_Power_address
  8485  016802  6EF7               	movwf	tblptrh,c
  8486  016804                     	endif
  8487  016804                     	if	1	;There are 3 active tblptr bytes
  8488  016804  0E00               	movlw	low (_max_Power_address shr (0+16))
  8489  016806  6EF8               	movwf	tblptru,c
  8490  016808                     	endif
  8491  016808  0009               	tblrd		*+
  8492  01680A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
  8493  01680E  000A               	tblrd		*-
  8494  016810  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
  8495  016814  EC87  F0C1         	call	_writeDoubleToEEPROM	;wreg free
  8496                           
  8497                           ;main.c: 454: max_Power = Avg_Power;
  8498  016818  C1BB  F240         	movff	_Avg_Power,_max_Power	;volatile
  8499  01681C  C1BC  F241         	movff	_Avg_Power+1,_max_Power+1	;volatile
  8500  016820  C1BD  F242         	movff	_Avg_Power+2,_max_Power+2	;volatile
  8501  016824  C1BE  F243         	movff	_Avg_Power+3,_max_Power+3	;volatile
  8502  016828  D795               	goto	l1010
  8503  01682A                     __end_of_main:
  8504                           	opt stack 0
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           intcon	equ	0xFF2
  8510                           postinc0	equ	0xFEE
  8511                           wreg	equ	0xFE8
  8512                           postdec1	equ	0xFE5
  8513                           fsr1l	equ	0xFE1
  8514                           status	equ	0xFD8
  8515                           
  8516 ;; *************** function _terminal_setCursorHome *****************
  8517 ;; Defined at:
  8518 ;;		line 85 in file "ring_buffer_interface.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:   16
  8539 ;; This function calls:
  8540 ;;		_printf
  8541 ;; This function is called by:
  8542 ;;		_main
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text1
  8547  018BF6                     __ptext1:
  8548                           	opt stack 0
  8549  018BF6                     _terminal_setCursorHome:
  8550                           	opt stack 14
  8551                           
  8552                           ;ring_buffer_interface.c: 86: printf("\033[H");
  8553                           
  8554                           ;incstack = 0
  8555  018BF6  0EB9               	movlw	low STR_3
  8556  018BF8  0101               	movlb	1	; () banked
  8557  018BFA  6F82               	movwf	printf@f& (0+255),b
  8558  018BFC  0EFF               	movlw	high STR_3
  8559  018BFE  6F83               	movwf	(printf@f+1)& (0+255),b
  8560  018C00  EC9F  F087         	call	_printf	;wreg free
  8561  018C04  0012               	return		;funcret
  8562  018C06                     __end_of_terminal_setCursorHome:
  8563                           	opt stack 0
  8564                           tblptru	equ	0xFF8
  8565                           tblptrh	equ	0xFF7
  8566                           tblptrl	equ	0xFF6
  8567                           tablat	equ	0xFF5
  8568                           intcon	equ	0xFF2
  8569                           postinc0	equ	0xFEE
  8570                           wreg	equ	0xFE8
  8571                           postdec1	equ	0xFE5
  8572                           fsr1l	equ	0xFE1
  8573                           status	equ	0xFD8
  8574                           
  8575 ;; *************** function _terminal_ringBufferPull *****************
  8576 ;; Defined at:
  8577 ;;		line 12 in file "ring_buffer_interface.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  index           2   18[BANK2 ] int 
  8582 ;;  index           2   20[BANK2 ] int 
  8583 ;;  charNumber      2   16[BANK2 ] int 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;Total ram usage:        9 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:   19
  8600 ;; This function calls:
  8601 ;;		_EUSART2_Read
  8602 ;;		_ringBufferLUT
  8603 ;;		_strlen
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text2
  8610  016F86                     __ptext2:
  8611                           	opt stack 0
  8612  016F86                     _terminal_ringBufferPull:
  8613                           	opt stack 11
  8614                           
  8615                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  8616                           
  8617                           ;incstack = 0
  8618  016F86  C1DF  F2E4         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  8619  016F8A  0102               	movlb	2	; () banked
  8620  016F8C  6BE5               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  8621                           
  8622                           ; BSR set to: 2
  8623                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  8624  016F8E  0E00               	movlw	0
  8625  016F90  6FE9               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  8626  016F92  0E00               	movlw	0
  8627  016F94  6FE8               	movwf	terminal_ringBufferPull@index& (0+255),b
  8628  016F96                     l19424:
  8629                           
  8630                           ; BSR set to: 2
  8631  016F96  BFE9               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  8632  016F98  D006               	goto	l1051
  8633  016F9A  51E9               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8634  016F9C  E10F               	bnz	l19434
  8635  016F9E  0E40               	movlw	64
  8636  016FA0  5DE8               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  8637  016FA2  B0D8               	btfsc	status,0,c
  8638  016FA4  D00B               	goto	u26150
  8639  016FA6                     l1051:
  8640                           
  8641                           ; BSR set to: 2
  8642                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  8643                           
  8644                           ; BSR set to: 2
  8645  016FA6  0E70               	movlw	low _line
  8646  016FA8  25E8               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  8647  016FAA  6ED9               	movwf	fsr2l,c
  8648  016FAC  0E02               	movlw	high _line
  8649  016FAE  21E9               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8650  016FB0  6EDA               	movwf	fsr2h,c
  8651  016FB2  0E00               	movlw	0
  8652  016FB4  6EDF               	movwf	indf2,c
  8653                           
  8654                           ; BSR set to: 2
  8655  016FB6  4BE8               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  8656  016FB8  2BE9               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  8657  016FBA  D7ED               	goto	l19424
  8658  016FBC                     u26150:
  8659  016FBC                     l19434:
  8660                           
  8661                           ; BSR set to: 2
  8662                           ;ring_buffer_interface.c: 21: }
  8663                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  8664  016FBC  0E00               	movlw	0
  8665  016FBE  6FE7               	movwf	(terminal_ringBufferPull@index_2412+1)& (0+255),b
  8666  016FC0  0E00               	movlw	0
  8667  016FC2  6FE6               	movwf	terminal_ringBufferPull@index_2412& (0+255),b
  8668  016FC4  D00F               	goto	l1053
  8669  016FC6                     
  8670                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  8671                           
  8672                           ; BSR set to: 2
  8673  016FC6  EC94  F0C2         	call	_EUSART2_Read	;wreg free
  8674  016FCA  0101               	movlb	1	; () banked
  8675  016FCC  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8676  016FCE  0E70               	movlw	low _line
  8677  016FD0  0102               	movlb	2	; () banked
  8678  016FD2  25E6               	addwf	terminal_ringBufferPull@index_2412& (0+255),w,b
  8679  016FD4  6ED9               	movwf	fsr2l,c
  8680  016FD6  0E02               	movlw	high _line
  8681  016FD8  21E7               	addwfc	(terminal_ringBufferPull@index_2412+1)& (0+255),w,b
  8682  016FDA  6EDA               	movwf	fsr2h,c
  8683  016FDC  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
  8684                           
  8685                           ; BSR set to: 2
  8686  016FE0  4BE6               	infsnz	terminal_ringBufferPull@index_2412& (0+255),f,b
  8687  016FE2  2BE7               	incf	(terminal_ringBufferPull@index_2412+1)& (0+255),f,b
  8688  016FE4                     l1053:
  8689                           
  8690                           ; BSR set to: 2
  8691                           
  8692                           ; BSR set to: 2
  8693  016FE4  51E4               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  8694  016FE6  5DE6               	subwf	terminal_ringBufferPull@index_2412& (0+255),w,b
  8695  016FE8  51E7               	movf	(terminal_ringBufferPull@index_2412+1)& (0+255),w,b
  8696  016FEA  0A80               	xorlw	128
  8697  016FEC  0101               	movlb	1	; () banked
  8698  016FEE  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8699  016FF0  0102               	movlb	2	; () banked
  8700  016FF2  51E5               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  8701  016FF4  0A80               	xorlw	128
  8702  016FF6  0101               	movlb	1	; () banked
  8703  016FF8  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  8704  016FFA  A0D8               	btfss	status,0,c
  8705  016FFC  D7E4               	goto	l1054
  8706                           
  8707                           ; BSR set to: 1
  8708                           ;ring_buffer_interface.c: 28: }
  8709                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  8710  016FFE  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  8711                           
  8712                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  8713                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  8714  017002  D017               	goto	l1056
  8715  017004                     
  8716                           ; BSR set to: 1
  8717                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  8718                           
  8719                           ; BSR set to: 1
  8720  017004  0EFF               	movlw	255
  8721  017006  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8722  017008  0EFF               	movlw	255
  8723  01700A  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8724  01700C  0E70               	movlw	low _line
  8725  01700E  6F17               	movwf	strlen@s& (0+255),b
  8726  017010  0E02               	movlw	high _line
  8727  017012  6F18               	movwf	(strlen@s+1)& (0+255),b
  8728  017014  EC09  F0C1         	call	_strlen	;wreg free
  8729  017018  0101               	movlb	1	; () banked
  8730  01701A  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8731  01701C  2717               	addwf	?_strlen& (0+255),f,b
  8732  01701E  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8733  017020  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8734  017022  0E70               	movlw	low _line
  8735  017024  2517               	addwf	?_strlen& (0+255),w,b
  8736  017026  6ED9               	movwf	fsr2l,c
  8737  017028  0E02               	movlw	high _line
  8738  01702A  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8739  01702C  6EDA               	movwf	fsr2h,c
  8740  01702E  0E00               	movlw	0
  8741  017030  6EDF               	movwf	indf2,c
  8742  017032                     l1056:
  8743                           
  8744                           ; BSR set to: 1
  8745  017032  0EFF               	movlw	255
  8746  017034  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8747  017036  0EFF               	movlw	255
  8748  017038  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8749  01703A  0E70               	movlw	low _line
  8750  01703C  6F17               	movwf	strlen@s& (0+255),b
  8751  01703E  0E02               	movlw	high _line
  8752  017040  6F18               	movwf	(strlen@s+1)& (0+255),b
  8753  017042  EC09  F0C1         	call	_strlen	;wreg free
  8754  017046  0101               	movlb	1	; () banked
  8755  017048  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8756  01704A  2717               	addwf	?_strlen& (0+255),f,b
  8757  01704C  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8758  01704E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8759  017050  0E70               	movlw	low _line
  8760  017052  2517               	addwf	?_strlen& (0+255),w,b
  8761  017054  6ED9               	movwf	fsr2l,c
  8762  017056  0E02               	movlw	high _line
  8763  017058  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8764  01705A  6EDA               	movwf	fsr2h,c
  8765  01705C  0E0A               	movlw	10
  8766  01705E  18DE               	xorwf	postinc2,w,c
  8767  017060  B4D8               	btfsc	status,2,c
  8768  017062  D7D0               	goto	l1057
  8769                           
  8770                           ; BSR set to: 1
  8771  017064  0EFF               	movlw	255
  8772  017066  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8773  017068  0EFF               	movlw	255
  8774  01706A  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8775  01706C  0E70               	movlw	low _line
  8776  01706E  6F17               	movwf	strlen@s& (0+255),b
  8777  017070  0E02               	movlw	high _line
  8778  017072  6F18               	movwf	(strlen@s+1)& (0+255),b
  8779  017074  EC09  F0C1         	call	_strlen	;wreg free
  8780  017078  0101               	movlb	1	; () banked
  8781  01707A  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8782  01707C  2717               	addwf	?_strlen& (0+255),f,b
  8783  01707E  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8784  017080  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8785  017082  0E70               	movlw	low _line
  8786  017084  2517               	addwf	?_strlen& (0+255),w,b
  8787  017086  6ED9               	movwf	fsr2l,c
  8788  017088  0E02               	movlw	high _line
  8789  01708A  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8790  01708C  6EDA               	movwf	fsr2h,c
  8791  01708E  0E0D               	movlw	13
  8792  017090  18DE               	xorwf	postinc2,w,c
  8793  017092  B4D8               	btfsc	status,2,c
  8794  017094  D7B7               	goto	l1057
  8795                           
  8796                           ; BSR set to: 1
  8797                           ;ring_buffer_interface.c: 40: }
  8798                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  8799  017096  0100               	movlb	0	; () banked
  8800  017098  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  8804  01709A  0E70               	movlw	low _line
  8805  01709C  0101               	movlb	1	; () banked
  8806  01709E  6FB4               	movwf	ringBufferLUT@line& (0+255),b
  8807  0170A0  0E02               	movlw	high _line
  8808  0170A2  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
  8809  0170A4  EC00  F080         	call	_ringBufferLUT	;wreg free
  8810  0170A8  0012               	return		;funcret
  8811  0170AA                     __end_of_terminal_ringBufferPull:
  8812                           	opt stack 0
  8813                           tblptru	equ	0xFF8
  8814                           tblptrh	equ	0xFF7
  8815                           tblptrl	equ	0xFF6
  8816                           tablat	equ	0xFF5
  8817                           intcon	equ	0xFF2
  8818                           postinc0	equ	0xFEE
  8819                           wreg	equ	0xFE8
  8820                           postdec1	equ	0xFE5
  8821                           fsr1l	equ	0xFE1
  8822                           indf2	equ	0xFDF
  8823                           postinc2	equ	0xFDE
  8824                           fsr2h	equ	0xFDA
  8825                           fsr2l	equ	0xFD9
  8826                           status	equ	0xFD8
  8827                           
  8828 ;; *************** function _ringBufferLUT *****************
  8829 ;; Defined at:
  8830 ;;		line 49 in file "ring_buffer_LUT.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  line            2  180[BANK1 ] PTR unsigned char 
  8833 ;;		 -> line(64), 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  angle_degree    4   22[BANK3 ] PTR unsigned char 
  8836 ;;  index           2   37[BANK3 ] int 
  8837 ;;  channel_name   22    0[BANK3 ] unsigned char [22]
  8838 ;;  userID          2   41[BANK3 ] int 
  8839 ;;  max_Power_pr    4   30[BANK3 ] int 
  8840 ;;  max_current_    4   26[BANK3 ] int 
  8841 ;;  arg_buff        3   34[BANK3 ] unsigned char [3]
  8842 ;;  percentage      2   39[BANK3 ] int 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8852 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Locals:         0       0       0       0      43       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Totals:         0       0       4       0      43       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;Total ram usage:       47 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:   18
  8859 ;; This function calls:
  8860 ;;		_TMR7_StopTimer
  8861 ;;		___fladd
  8862 ;;		___fldiv
  8863 ;;		___flmul
  8864 ;;		___flneg
  8865 ;;		___wmul
  8866 ;;		___xxtofl
  8867 ;;		_atoi
  8868 ;;		_getCauseOfResetString
  8869 ;;		_getDeviceID
  8870 ;;		_getDeviceIDString
  8871 ;;		_getMajorRevisionID
  8872 ;;		_getMinorRevisionID
  8873 ;;		_getUserID
  8874 ;;		_printf
  8875 ;;		_readDoubleFromEEPROM
  8876 ;;		_strcmp
  8877 ;;		_strcpy
  8878 ;;		_strstr
  8879 ;;		_terminal_printNewline
  8880 ;;		_terminal_textAttributes
  8881 ;;		_terminal_textAttributesReset
  8882 ;;		_writeDoubleToEEPROM
  8883 ;; This function is called by:
  8884 ;;		_terminal_ringBufferPull
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text3
  8889  010000                     __ptext3:
  8890                           	opt stack 0
  8891  010000                     _ringBufferLUT:
  8892                           	opt stack 11
  8893                           
  8894                           ;ring_buffer_LUT.c: 55: if((0 == strcmp(line, "Reset"))) {
  8895                           
  8896                           ;incstack = 0
  8897  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8898  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8899  010008  0E0F               	movlw	low (STR_136+10)
  8900  01000A  0101               	movlb	1	; () banked
  8901  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  8902  01000E  0EFE               	movlw	high (STR_136+10)
  8903  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8904  010012  ECAF  F0C1         	call	_strcmp	;wreg free
  8905  010016  0101               	movlb	1	; () banked
  8906  010018  5117               	movf	?_strcmp& (0+255),w,b
  8907  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8908  01001C  A4D8               	btfss	status,2,c
  8909  01001E  D00F               	goto	l1208
  8910                           
  8911                           ; BSR set to: 1
  8912                           ;ring_buffer_LUT.c: 58: printf("\033[2J");
  8913  010020  0EB0               	movlw	low STR_2
  8914  010022  6F82               	movwf	printf@f& (0+255),b
  8915  010024  0EFF               	movlw	high STR_2
  8916  010026  6F83               	movwf	(printf@f+1)& (0+255),b
  8917  010028  EC9F  F087         	call	_printf	;wreg free
  8918                           
  8919                           ;ring_buffer_LUT.c: 61: printf("\033[H");
  8920  01002C  0EB9               	movlw	low STR_3
  8921  01002E  0101               	movlb	1	; () banked
  8922  010030  6F82               	movwf	printf@f& (0+255),b
  8923  010032  0EFF               	movlw	high STR_3
  8924  010034  6F83               	movwf	(printf@f+1)& (0+255),b
  8925  010036  EC9F  F087         	call	_printf	;wreg free
  8926  01003A  00FF               	reset		;# 
  8927                           
  8928                           ;ring_buffer_LUT.c: 66: }
  8929  01003C  0012               	return	
  8930  01003E                     l1208:
  8931                           
  8932                           ;ring_buffer_LUT.c: 69: else if((0 == strcmp(line, "Clear"))) {
  8933  01003E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8934  010042  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8935  010046  0EA0               	movlw	low STR_44
  8936  010048  0101               	movlb	1	; () banked
  8937  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  8938  01004C  0EFF               	movlw	high STR_44
  8939  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8940  010050  ECAF  F0C1         	call	_strcmp	;wreg free
  8941  010054  0101               	movlb	1	; () banked
  8942  010056  5117               	movf	?_strcmp& (0+255),w,b
  8943  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8944  01005A  A4D8               	btfss	status,2,c
  8945  01005C  D00E               	goto	l1210
  8946                           
  8947                           ; BSR set to: 1
  8948                           ;ring_buffer_LUT.c: 72: printf("\033[2J");
  8949  01005E  0EB0               	movlw	low STR_2
  8950  010060  6F82               	movwf	printf@f& (0+255),b
  8951  010062  0EFF               	movlw	high STR_2
  8952  010064  6F83               	movwf	(printf@f+1)& (0+255),b
  8953  010066  EC9F  F087         	call	_printf	;wreg free
  8954                           
  8955                           ;ring_buffer_LUT.c: 75: printf("\033[H");
  8956  01006A  0EB9               	movlw	low STR_3
  8957  01006C  0101               	movlb	1	; () banked
  8958  01006E  6F82               	movwf	printf@f& (0+255),b
  8959  010070  0EFF               	movlw	high STR_3
  8960  010072  6F83               	movwf	(printf@f+1)& (0+255),b
  8961  010074  EC9F  F087         	call	_printf	;wreg free
  8962                           
  8963                           ;ring_buffer_LUT.c: 77: }
  8964  010078  0012               	return	
  8965  01007A                     l1210:
  8966                           
  8967                           ;ring_buffer_LUT.c: 80: else if((0 == strcmp(line, "Cause of Reset?"))) {
  8968  01007A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8969  01007E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8970  010082  0E45               	movlw	low STR_47
  8971  010084  0101               	movlb	1	; () banked
  8972  010086  6F19               	movwf	strcmp@s2& (0+255),b
  8973  010088  0EFE               	movlw	high STR_47
  8974  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8975  01008C  ECAF  F0C1         	call	_strcmp	;wreg free
  8976  010090  0101               	movlb	1	; () banked
  8977  010092  5117               	movf	?_strcmp& (0+255),w,b
  8978  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8979  010096  A4D8               	btfss	status,2,c
  8980  010098  D019               	goto	l1212
  8981                           
  8982                           ; BSR set to: 1
  8983                           ;ring_buffer_LUT.c: 82: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8984  01009A  0E00               	movlw	0
  8985  01009C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8986  01009E  0E00               	movlw	0
  8987  0100A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8988  0100A2  0E02               	movlw	2
  8989  0100A4  ECEA  F09E         	call	_terminal_textAttributes
  8990                           
  8991                           ;ring_buffer_LUT.c: 85: printf("The cause of the most recent device reset was: %s\n\r",
  8992                           ;ring_buffer_LUT.c: 86: getCauseOfResetString(reset_cause));
  8993  0100A8  0E57               	movlw	low STR_48
  8994  0100AA  0101               	movlb	1	; () banked
  8995  0100AC  6F82               	movwf	printf@f& (0+255),b
  8996  0100AE  0EF8               	movlw	high STR_48
  8997  0100B0  6F83               	movwf	(printf@f+1)& (0+255),b
  8998  0100B2  0102               	movlb	2	; () banked
  8999  0100B4  51EC               	movf	_reset_cause& (0+255),w,b
  9000  0100B6  EC5D  F0C4         	call	_getCauseOfResetString
  9001  0100BA  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
  9002  0100BE  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
  9003  0100C2  EC9F  F087         	call	_printf	;wreg free
  9004                           
  9005                           ;ring_buffer_LUT.c: 88: terminal_textAttributesReset();
  9006  0100C6  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9007                           
  9008                           ;ring_buffer_LUT.c: 90: }
  9009  0100CA  0012               	return	
  9010  0100CC                     l1212:
  9011                           
  9012                           ;ring_buffer_LUT.c: 93: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  9013  0100CC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9014  0100D0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9015  0100D4  0E9A               	movlw	low STR_49
  9016  0100D6  0101               	movlb	1	; () banked
  9017  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
  9018  0100DA  0EFF               	movlw	high STR_49
  9019  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9020  0100DE  ECAF  F0C1         	call	_strcmp	;wreg free
  9021  0100E2  0101               	movlb	1	; () banked
  9022  0100E4  5117               	movf	?_strcmp& (0+255),w,b
  9023  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9024  0100E8  B4D8               	btfsc	status,2,c
  9025  0100EA  D00F               	goto	u25650
  9026                           
  9027                           ; BSR set to: 1
  9028  0100EC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9029  0100F0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9030  0100F4  0EB5               	movlw	low STR_50
  9031  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
  9032  0100F8  0EFF               	movlw	high STR_50
  9033  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9034  0100FC  ECAF  F0C1         	call	_strcmp	;wreg free
  9035  010100  0101               	movlb	1	; () banked
  9036  010102  5117               	movf	?_strcmp& (0+255),w,b
  9037  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9038  010106  A4D8               	btfss	status,2,c
  9039  010108  D018               	goto	l1214
  9040  01010A                     u25650:
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;ring_buffer_LUT.c: 95: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9044                           
  9045                           ; BSR set to: 1
  9046  01010A  0E00               	movlw	0
  9047  01010C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9048  01010E  0E00               	movlw	0
  9049  010110  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9050  010112  0E02               	movlw	2
  9051  010114  ECEA  F09E         	call	_terminal_textAttributes
  9052                           
  9053                           ;ring_buffer_LUT.c: 96: printf("AC Power Meter\n\r");
  9054  010118  0EB0               	movlw	low STR_51
  9055  01011A  0101               	movlb	1	; () banked
  9056  01011C  6F82               	movwf	printf@f& (0+255),b
  9057  01011E  0EFD               	movlw	high STR_51
  9058  010120  6F83               	movwf	(printf@f+1)& (0+255),b
  9059  010122  EC9F  F087         	call	_printf	;wreg free
  9060                           
  9061                           ;ring_buffer_LUT.c: 97: printf("Marquette University ELEN 3035 Final Project\n\r");
  9062  010126  0EEE               	movlw	low STR_52
  9063  010128  0101               	movlb	1	; () banked
  9064  01012A  6F82               	movwf	printf@f& (0+255),b
  9065  01012C  0EF8               	movlw	high STR_52
  9066  01012E  6F83               	movwf	(printf@f+1)& (0+255),b
  9067  010130  EC9F  F087         	call	_printf	;wreg free
  9068                           
  9069                           ;ring_buffer_LUT.c: 98: terminal_textAttributesReset();
  9070  010134  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9071                           
  9072                           ;ring_buffer_LUT.c: 100: }
  9073  010138  0012               	return	
  9074  01013A                     l1214:
  9075                           
  9076                           ;ring_buffer_LUT.c: 103: else if((0 == strcmp(line, "Device ID?"))) {
  9077  01013A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9078  01013E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9079  010142  0E51               	movlw	low STR_53
  9080  010144  0101               	movlb	1	; () banked
  9081  010146  6F19               	movwf	strcmp@s2& (0+255),b
  9082  010148  0EFF               	movlw	high STR_53
  9083  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9084  01014C  ECAF  F0C1         	call	_strcmp	;wreg free
  9085  010150  0101               	movlb	1	; () banked
  9086  010152  5117               	movf	?_strcmp& (0+255),w,b
  9087  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9088  010156  A4D8               	btfss	status,2,c
  9089  010158  D023               	goto	l1218
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;ring_buffer_LUT.c: 105: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9093  01015A  0E00               	movlw	0
  9094  01015C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9095  01015E  0E00               	movlw	0
  9096  010160  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9097  010162  0E02               	movlw	2
  9098  010164  ECEA  F09E         	call	_terminal_textAttributes
  9099                           
  9100                           ;ring_buffer_LUT.c: 108: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  9101                           ;ring_buffer_LUT.c: 109: "part number of %s\n\r",
  9102                           ;ring_buffer_LUT.c: 110: getDeviceID(),
  9103                           ;ring_buffer_LUT.c: 111: getDeviceIDString(getDeviceID()));
  9104  010168  0EFE               	movlw	low STR_54
  9105  01016A  0101               	movlb	1	; () banked
  9106  01016C  6F82               	movwf	printf@f& (0+255),b
  9107  01016E  0EF4               	movlw	high STR_54
  9108  010170  6F83               	movwf	(printf@f+1)& (0+255),b
  9109  010172  EC68  F0C5         	call	_getDeviceID	;wreg free
  9110  010176  C122  F184         	movff	?_getDeviceID,?_printf+2
  9111  01017A  C123  F185         	movff	?_getDeviceID+1,?_printf+3
  9112  01017E  EC68  F0C5         	call	_getDeviceID	;wreg free
  9113  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  9114  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  9115  01018A  ECA9  F0C0         	call	_getDeviceIDString	;wreg free
  9116  01018E  C124  F186         	movff	?_getDeviceIDString,?_printf+4
  9117  010192  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
  9118  010196  EC9F  F087         	call	_printf	;wreg free
  9119                           
  9120                           ;ring_buffer_LUT.c: 113: terminal_textAttributesReset();
  9121  01019A  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9122                           
  9123                           ;ring_buffer_LUT.c: 115: }
  9124  01019E  0012               	return	
  9125  0101A0                     l1218:
  9126                           
  9127                           ;ring_buffer_LUT.c: 118: else if((0 == strcmp(line, "Revision ID?"))) {
  9128  0101A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9129  0101A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9130  0101A8  0E12               	movlw	low STR_55
  9131  0101AA  0101               	movlb	1	; () banked
  9132  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
  9133  0101AE  0EFF               	movlw	high STR_55
  9134  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9135  0101B2  ECAF  F0C1         	call	_strcmp	;wreg free
  9136  0101B6  0101               	movlb	1	; () banked
  9137  0101B8  5117               	movf	?_strcmp& (0+255),w,b
  9138  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9139  0101BC  A4D8               	btfss	status,2,c
  9140  0101BE  D022               	goto	l1220
  9141                           
  9142                           ; BSR set to: 1
  9143                           ;ring_buffer_LUT.c: 120: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9144  0101C0  0E00               	movlw	0
  9145  0101C2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9146  0101C4  0E00               	movlw	0
  9147  0101C6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9148  0101C8  0E02               	movlw	2
  9149  0101CA  ECEA  F09E         	call	_terminal_textAttributes
  9150                           
  9151                           ;ring_buffer_LUT.c: 123: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
  9152                           ;ring_buffer_LUT.c: 124: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  9153  0101CE  0E99               	movlw	low STR_56
  9154  0101D0  0101               	movlb	1	; () banked
  9155  0101D2  6F82               	movwf	printf@f& (0+255),b
  9156  0101D4  0EF6               	movlw	high STR_56
  9157  0101D6  6F83               	movwf	(printf@f+1)& (0+255),b
  9158  0101D8  EC82  F0C3         	call	_getMajorRevisionID	;wreg free
  9159  0101DC  0101               	movlb	1	; () banked
  9160  0101DE  6FB6               	movwf	??_ringBufferLUT& (0+255),b
  9161  0101E0  0E41               	movlw	65
  9162  0101E2  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
  9163  0101E4  6F84               	movwf	(?_printf+2)& (0+255),b
  9164  0101E6  6B85               	clrf	(?_printf+3)& (0+255),b
  9165  0101E8  0E00               	movlw	0
  9166  0101EA  2385               	addwfc	(?_printf+3)& (0+255),f,b
  9167  0101EC  EC0C  F0C5         	call	_getMinorRevisionID	;wreg free
  9168  0101F0  0101               	movlb	1	; () banked
  9169  0101F2  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9170  0101F4  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9171  0101F6  6F86               	movwf	(?_printf+4)& (0+255),b
  9172  0101F8  6B87               	clrf	(?_printf+5)& (0+255),b
  9173  0101FA  EC9F  F087         	call	_printf	;wreg free
  9174                           
  9175                           ;ring_buffer_LUT.c: 126: terminal_textAttributesReset();
  9176  0101FE  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9177                           
  9178                           ;ring_buffer_LUT.c: 128: }
  9179  010202  0012               	return	
  9180  010204                     l1220:
  9181                           
  9182                           ;ring_buffer_LUT.c: 131: else if((0 == strcmp(line, "User IDs?"))) {
  9183  010204  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9184  010208  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9185  01020C  0E72               	movlw	low STR_57
  9186  01020E  0101               	movlb	1	; () banked
  9187  010210  6F19               	movwf	strcmp@s2& (0+255),b
  9188  010212  0EFF               	movlw	high STR_57
  9189  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9190  010216  ECAF  F0C1         	call	_strcmp	;wreg free
  9191  01021A  0101               	movlb	1	; () banked
  9192  01021C  5117               	movf	?_strcmp& (0+255),w,b
  9193  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9194  010220  A4D8               	btfss	status,2,c
  9195  010222  D03E               	goto	l1222
  9196                           
  9197                           ; BSR set to: 1
  9198                           ;ring_buffer_LUT.c: 133: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9199  010224  0E00               	movlw	0
  9200  010226  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9201  010228  0E00               	movlw	0
  9202  01022A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9203  01022C  0E02               	movlw	2
  9204  01022E  ECEA  F09E         	call	_terminal_textAttributes
  9205                           
  9206                           ;ring_buffer_LUT.c: 135: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  9207  010232  0EDC               	movlw	low STR_58
  9208  010234  0101               	movlb	1	; () banked
  9209  010236  6F82               	movwf	printf@f& (0+255),b
  9210  010238  0EF5               	movlw	high STR_58
  9211  01023A  6F83               	movwf	(printf@f+1)& (0+255),b
  9212  01023C  EC9F  F087         	call	_printf	;wreg free
  9213                           
  9214                           ;ring_buffer_LUT.c: 138: for (int userID = 0; userID <= 7; userID++) {
  9215  010240  0E00               	movlw	0
  9216  010242  0103               	movlb	3	; () banked
  9217  010244  6FAA               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  9218  010246  0E00               	movlw	0
  9219  010248  6FA9               	movwf	ringBufferLUT@userID& (0+255),b
  9220  01024A                     l19166:
  9221                           
  9222                           ; BSR set to: 3
  9223  01024A  BFAA               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  9224  01024C  D006               	goto	l1223
  9225  01024E  51AA               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  9226  010250  E124               	bnz	l19176
  9227  010252  0E08               	movlw	8
  9228  010254  5DA9               	subwf	ringBufferLUT@userID& (0+255),w,b
  9229  010256  B0D8               	btfsc	status,0,c
  9230  010258  D020               	goto	u25700
  9231  01025A                     l1223:
  9232                           
  9233                           ; BSR set to: 3
  9234                           ;ring_buffer_LUT.c: 140: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  9235                           ;ring_buffer_LUT.c: 141: userID,
  9236                           ;ring_buffer_LUT.c: 142: (2 * userID),
  9237                           ;ring_buffer_LUT.c: 143: getUserID(userID));
  9238                           
  9239                           ; BSR set to: 3
  9240  01025A  0EB7               	movlw	low STR_59
  9241  01025C  0101               	movlb	1	; () banked
  9242  01025E  6F82               	movwf	printf@f& (0+255),b
  9243  010260  0EF7               	movlw	high STR_59
  9244  010262  6F83               	movwf	(printf@f+1)& (0+255),b
  9245  010264  C3A9  F184         	movff	ringBufferLUT@userID,?_printf+2
  9246  010268  C3AA  F185         	movff	ringBufferLUT@userID+1,?_printf+3
  9247  01026C  90D8               	bcf	status,0,c
  9248  01026E  0103               	movlb	3	; () banked
  9249  010270  35A9               	rlcf	ringBufferLUT@userID& (0+255),w,b
  9250  010272  0101               	movlb	1	; () banked
  9251  010274  6F86               	movwf	(?_printf+4)& (0+255),b
  9252  010276  0103               	movlb	3	; () banked
  9253  010278  35AA               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  9254  01027A  0101               	movlb	1	; () banked
  9255  01027C  6F87               	movwf	(?_printf+5)& (0+255),b
  9256  01027E  0103               	movlb	3	; () banked
  9257  010280  51A9               	movf	ringBufferLUT@userID& (0+255),w,b
  9258  010282  EC00  F0C3         	call	_getUserID
  9259  010286  C122  F188         	movff	?_getUserID,?_printf+6
  9260  01028A  C123  F189         	movff	?_getUserID+1,?_printf+7
  9261  01028E  EC9F  F087         	call	_printf	;wreg free
  9262  010292  0103               	movlb	3	; () banked
  9263  010294  4BA9               	infsnz	ringBufferLUT@userID& (0+255),f,b
  9264  010296  2BAA               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  9265  010298  D7D8               	goto	l19166
  9266  01029A                     u25700:
  9267  01029A                     l19176:
  9268                           
  9269                           ; BSR set to: 3
  9270                           ;ring_buffer_LUT.c: 145: }
  9271                           ;ring_buffer_LUT.c: 147: terminal_textAttributesReset();
  9272  01029A  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9273                           
  9274                           ;ring_buffer_LUT.c: 149: }
  9275  01029E  0012               	return	
  9276  0102A0                     l1222:
  9277                           
  9278                           ;ring_buffer_LUT.c: 152: else if((0 == strcmp(line, "ADC Error?"))) {
  9279  0102A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9280  0102A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9281  0102A8  0E67               	movlw	low STR_60
  9282  0102AA  0101               	movlb	1	; () banked
  9283  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
  9284  0102AE  0EFF               	movlw	high STR_60
  9285  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9286  0102B2  ECAF  F0C1         	call	_strcmp	;wreg free
  9287  0102B6  0101               	movlb	1	; () banked
  9288  0102B8  5117               	movf	?_strcmp& (0+255),w,b
  9289  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9290  0102BC  A4D8               	btfss	status,2,c
  9291  0102BE  D0A4               	goto	l1226
  9292                           
  9293                           ; BSR set to: 1
  9294                           ;ring_buffer_LUT.c: 154: if (adc_error_flag) {
  9295  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  9296  0102C2  D090               	goto	l1227
  9297                           
  9298                           ; BSR set to: 1
  9299                           ;ring_buffer_LUT.c: 156: terminal_textAttributes(RED, BLACK, NORMAL);
  9300  0102C4  0E00               	movlw	0
  9301  0102C6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9302  0102C8  0E00               	movlw	0
  9303  0102CA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9304  0102CC  0E01               	movlw	1
  9305  0102CE  ECEA  F09E         	call	_terminal_textAttributes
  9306                           
  9307                           ;ring_buffer_LUT.c: 159: current_adc_channel = ADPCH;
  9308  0102D2  CF5F F1DB          	movff	3935,_current_adc_channel	;volatile
  9309                           
  9310                           ;ring_buffer_LUT.c: 162: char channel_name[22];
  9311                           ;ring_buffer_LUT.c: 164: switch (current_adc_channel) {
  9312  0102D6  D060               	goto	l1228
  9313  0102D8                     
  9314                           ;ring_buffer_LUT.c: 167: strcpy(channel_name, "ISNS");
  9315  0102D8  0E80               	movlw	low ringBufferLUT@channel_name
  9316  0102DA  0101               	movlb	1	; () banked
  9317  0102DC  6F17               	movwf	strcpy@to& (0+255),b
  9318  0102DE  0E03               	movlw	high ringBufferLUT@channel_name
  9319  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9320  0102E2  0EA6               	movlw	low STR_61
  9321  0102E4  6F19               	movwf	strcpy@from& (0+255),b
  9322  0102E6  0EFF               	movlw	high STR_61
  9323  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9324  0102EA  ECDA  F0C3         	call	_strcpy	;wreg free
  9325                           
  9326                           ;ring_buffer_LUT.c: 168: break;
  9327  0102EE  D06C               	goto	l1230
  9328  0102F0                     
  9329                           ;ring_buffer_LUT.c: 171: strcpy(channel_name, "POS12");
  9330  0102F0  0E80               	movlw	low ringBufferLUT@channel_name
  9331  0102F2  0101               	movlb	1	; () banked
  9332  0102F4  6F17               	movwf	strcpy@to& (0+255),b
  9333  0102F6  0E03               	movlw	high ringBufferLUT@channel_name
  9334  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9335  0102FA  0E94               	movlw	low STR_62
  9336  0102FC  6F19               	movwf	strcpy@from& (0+255),b
  9337  0102FE  0EFF               	movlw	high STR_62
  9338  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9339  010302  ECDA  F0C3         	call	_strcpy	;wreg free
  9340                           
  9341                           ;ring_buffer_LUT.c: 172: break;
  9342  010306  D060               	goto	l1230
  9343  010308                     
  9344                           ;ring_buffer_LUT.c: 175: strcpy(channel_name, "POS3P3");
  9345  010308  0E80               	movlw	low ringBufferLUT@channel_name
  9346  01030A  0101               	movlb	1	; () banked
  9347  01030C  6F17               	movwf	strcpy@to& (0+255),b
  9348  01030E  0E03               	movlw	high ringBufferLUT@channel_name
  9349  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9350  010312  0E8D               	movlw	low STR_63
  9351  010314  6F19               	movwf	strcpy@from& (0+255),b
  9352  010316  0EFF               	movlw	high STR_63
  9353  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9354  01031A  ECDA  F0C3         	call	_strcpy	;wreg free
  9355                           
  9356                           ;ring_buffer_LUT.c: 176: break;
  9357  01031E  D054               	goto	l1230
  9358  010320                     
  9359                           ;ring_buffer_LUT.c: 179: strcpy(channel_name, "Internal AVSS");
  9360  010320  0E80               	movlw	low ringBufferLUT@channel_name
  9361  010322  0101               	movlb	1	; () banked
  9362  010324  6F17               	movwf	strcpy@to& (0+255),b
  9363  010326  0E03               	movlw	high ringBufferLUT@channel_name
  9364  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9365  01032A  0EE9               	movlw	low STR_64
  9366  01032C  6F19               	movwf	strcpy@from& (0+255),b
  9367  01032E  0EFE               	movlw	high STR_64
  9368  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9369  010332  ECDA  F0C3         	call	_strcpy	;wreg free
  9370                           
  9371                           ;ring_buffer_LUT.c: 180: break;
  9372  010336  D048               	goto	l1230
  9373  010338                     
  9374                           ;ring_buffer_LUT.c: 183: strcpy(channel_name, "Internal Temp");
  9375  010338  0E80               	movlw	low ringBufferLUT@channel_name
  9376  01033A  0101               	movlb	1	; () banked
  9377  01033C  6F17               	movwf	strcpy@to& (0+255),b
  9378  01033E  0E03               	movlw	high ringBufferLUT@channel_name
  9379  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9380  010342  0EF7               	movlw	low STR_65
  9381  010344  6F19               	movwf	strcpy@from& (0+255),b
  9382  010346  0EFE               	movlw	high STR_65
  9383  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9384  01034A  ECDA  F0C3         	call	_strcpy	;wreg free
  9385                           
  9386                           ;ring_buffer_LUT.c: 184: break;
  9387  01034E  D03C               	goto	l1230
  9388  010350                     
  9389                           ;ring_buffer_LUT.c: 187: strcpy(channel_name, "Internal DAC1");
  9390  010350  0E80               	movlw	low ringBufferLUT@channel_name
  9391  010352  0101               	movlb	1	; () banked
  9392  010354  6F17               	movwf	strcpy@to& (0+255),b
  9393  010356  0E03               	movlw	high ringBufferLUT@channel_name
  9394  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9395  01035A  0EB1               	movlw	low STR_66
  9396  01035C  6F19               	movwf	strcpy@from& (0+255),b
  9397  01035E  0EFE               	movlw	high STR_66
  9398  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9399  010362  ECDA  F0C3         	call	_strcpy	;wreg free
  9400                           
  9401                           ;ring_buffer_LUT.c: 188: break;
  9402  010366  D030               	goto	l1230
  9403  010368                     
  9404                           ;ring_buffer_LUT.c: 191: strcpy(channel_name, "Internal FVR Buffer 1");
  9405  010368  0E80               	movlw	low ringBufferLUT@channel_name
  9406  01036A  0101               	movlb	1	; () banked
  9407  01036C  6F17               	movwf	strcpy@to& (0+255),b
  9408  01036E  0E03               	movlw	high ringBufferLUT@channel_name
  9409  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9410  010372  0E10               	movlw	low STR_67
  9411  010374  6F19               	movwf	strcpy@from& (0+255),b
  9412  010376  0EFD               	movlw	high STR_67
  9413  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9414  01037A  ECDA  F0C3         	call	_strcpy	;wreg free
  9415                           
  9416                           ;ring_buffer_LUT.c: 192: break;
  9417  01037E  D024               	goto	l1230
  9418  010380                     
  9419                           ;ring_buffer_LUT.c: 195: strcpy(channel_name, "Undefined");
  9420  010380  0E80               	movlw	low ringBufferLUT@channel_name
  9421  010382  0101               	movlb	1	; () banked
  9422  010384  6F17               	movwf	strcpy@to& (0+255),b
  9423  010386  0E03               	movlw	high ringBufferLUT@channel_name
  9424  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9425  01038A  0E7C               	movlw	low STR_68
  9426  01038C  6F19               	movwf	strcpy@from& (0+255),b
  9427  01038E  0EFF               	movlw	high STR_68
  9428  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9429  010392  ECDA  F0C3         	call	_strcpy	;wreg free
  9430                           
  9431                           ;ring_buffer_LUT.c: 198: }
  9432                           
  9433                           ;ring_buffer_LUT.c: 196: break;
  9434  010396  D018               	goto	l1230
  9435  010398                     l1228:
  9436  010398  0101               	movlb	1	; () banked
  9437  01039A  51DB               	movf	_current_adc_channel& (0+255),w,b
  9438                           
  9439                           ; Switch size 1, requested type "space"
  9440                           ; Number of cases is 7, Range of values is 0 to 63
  9441                           ; switch strategies available:
  9442                           ; Name         Instructions Cycles
  9443                           ; simple_byte           22    12 (average)
  9444                           ;	Chosen strategy is simple_byte
  9445  01039C  0A00               	xorlw	0	; case 0
  9446  01039E  B4D8               	btfsc	status,2,c
  9447  0103A0  D79B               	goto	l1229
  9448  0103A2  0A04               	xorlw	4	; case 4
  9449  0103A4  B4D8               	btfsc	status,2,c
  9450  0103A6  D7A4               	goto	l1231
  9451  0103A8  0A26               	xorlw	38	; case 34
  9452  0103AA  B4D8               	btfsc	status,2,c
  9453  0103AC  D7AD               	goto	l1232
  9454  0103AE  0A1E               	xorlw	30	; case 60
  9455  0103B0  B4D8               	btfsc	status,2,c
  9456  0103B2  D7B6               	goto	l1233
  9457  0103B4  0A01               	xorlw	1	; case 61
  9458  0103B6  B4D8               	btfsc	status,2,c
  9459  0103B8  D7BF               	goto	l1234
  9460  0103BA  0A03               	xorlw	3	; case 62
  9461  0103BC  B4D8               	btfsc	status,2,c
  9462  0103BE  D7C8               	goto	l1235
  9463  0103C0  0A01               	xorlw	1	; case 63
  9464  0103C2  B4D8               	btfsc	status,2,c
  9465  0103C4  D7D1               	goto	l1236
  9466  0103C6  D7DC               	goto	l1237
  9467  0103C8                     l1230:
  9468                           
  9469                           ;ring_buffer_LUT.c: 201: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  9470                           
  9471                           ; BSR set to: 1
  9472  0103C8  0EBE               	movlw	low STR_69
  9473  0103CA  0101               	movlb	1	; () banked
  9474  0103CC  6F82               	movwf	printf@f& (0+255),b
  9475  0103CE  0EF8               	movlw	high STR_69
  9476  0103D0  6F83               	movwf	(printf@f+1)& (0+255),b
  9477  0103D2  0E80               	movlw	low ringBufferLUT@channel_name
  9478  0103D4  6F84               	movwf	(?_printf+2)& (0+255),b
  9479  0103D6  0E03               	movlw	high ringBufferLUT@channel_name
  9480  0103D8  6F85               	movwf	(?_printf+3)& (0+255),b
  9481  0103DA  EC9F  F087         	call	_printf	;wreg free
  9482                           
  9483                           ;ring_buffer_LUT.c: 202: terminal_textAttributesReset();
  9484  0103DE  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9485                           
  9486                           ;ring_buffer_LUT.c: 204: }
  9487  0103E2  0012               	return	
  9488  0103E4                     l1227:
  9489                           
  9490                           ;ring_buffer_LUT.c: 206: else {
  9491                           ;ring_buffer_LUT.c: 208: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9492  0103E4  0E00               	movlw	0
  9493  0103E6  0101               	movlb	1	; () banked
  9494  0103E8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9495  0103EA  0E00               	movlw	0
  9496  0103EC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9497  0103EE  0E02               	movlw	2
  9498  0103F0  ECEA  F09E         	call	_terminal_textAttributes
  9499                           
  9500                           ;ring_buffer_LUT.c: 209: printf("No ADC Error detected\n\r");
  9501  0103F4  0EE2               	movlw	low STR_70
  9502  0103F6  0101               	movlb	1	; () banked
  9503  0103F8  6F82               	movwf	printf@f& (0+255),b
  9504  0103FA  0EFC               	movlw	high STR_70
  9505  0103FC  6F83               	movwf	(printf@f+1)& (0+255),b
  9506  0103FE  EC9F  F087         	call	_printf	;wreg free
  9507                           
  9508                           ;ring_buffer_LUT.c: 210: terminal_textAttributesReset();
  9509  010402  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9510                           
  9511                           ;ring_buffer_LUT.c: 212: }
  9512                           ;ring_buffer_LUT.c: 214: }
  9513  010406  0012               	return	
  9514  010408                     l1226:
  9515                           
  9516                           ;ring_buffer_LUT.c: 217: else if((0 == strcmp(line, "Clear ADC Error"))) {
  9517  010408  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9518  01040C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9519  010410  0E65               	movlw	low STR_71
  9520  010412  0101               	movlb	1	; () banked
  9521  010414  6F19               	movwf	strcmp@s2& (0+255),b
  9522  010416  0EFE               	movlw	high STR_71
  9523  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9524  01041A  ECAF  F0C1         	call	_strcmp	;wreg free
  9525  01041E  0101               	movlb	1	; () banked
  9526  010420  5117               	movf	?_strcmp& (0+255),w,b
  9527  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9528  010424  A4D8               	btfss	status,2,c
  9529  010426  D018               	goto	l1240
  9530                           
  9531                           ; BSR set to: 1
  9532                           ;ring_buffer_LUT.c: 219: LATFbits.LATF3 = 0;
  9533  010428  967E               	bcf	3966,3,c	;volatile
  9534                           
  9535                           ;ring_buffer_LUT.c: 220: adc_error_flag = 0;
  9536  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  9537                           
  9538                           ;ring_buffer_LUT.c: 222: PIE5bits.TMR7IE = 1;
  9539  01042C  010E               	movlb	14	; () banked
  9540  01042E  8D2E               	bsf	46,6,b	;volatile
  9541                           
  9542                           ; BSR set to: 14
  9543                           ;ring_buffer_LUT.c: 223: TMR7_StopTimer();
  9544  010430  EC6D  F0C6         	call	_TMR7_StopTimer	;wreg free
  9545                           
  9546                           ;ring_buffer_LUT.c: 225: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9547  010434  0E00               	movlw	0
  9548  010436  0101               	movlb	1	; () banked
  9549  010438  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9550  01043A  0E00               	movlw	0
  9551  01043C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9552  01043E  0E02               	movlw	2
  9553  010440  ECEA  F09E         	call	_terminal_textAttributes
  9554                           
  9555                           ;ring_buffer_LUT.c: 226: printf("Clearing ADC Error\n\r");
  9556  010444  0E3B               	movlw	low STR_72
  9557  010446  0101               	movlb	1	; () banked
  9558  010448  6F82               	movwf	printf@f& (0+255),b
  9559  01044A  0EFD               	movlw	high STR_72
  9560  01044C  6F83               	movwf	(printf@f+1)& (0+255),b
  9561  01044E  EC9F  F087         	call	_printf	;wreg free
  9562                           
  9563                           ;ring_buffer_LUT.c: 227: terminal_textAttributesReset();
  9564  010452  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9565                           
  9566                           ;ring_buffer_LUT.c: 229: }
  9567  010456  0012               	return	
  9568  010458                     l1240:
  9569                           
  9570                           ;ring_buffer_LUT.c: 232: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  9571  010458  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9572  01045C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9573  010460  0ED2               	movlw	low STR_73
  9574  010462  0101               	movlb	1	; () banked
  9575  010464  6F19               	movwf	strcmp@s2& (0+255),b
  9576  010466  0EFD               	movlw	high STR_73
  9577  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9578  01046A  ECAF  F0C1         	call	_strcmp	;wreg free
  9579  01046E  0101               	movlb	1	; () banked
  9580  010470  5117               	movf	?_strcmp& (0+255),w,b
  9581  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9582  010474  A4D8               	btfss	status,2,c
  9583  010476  D026               	goto	l1242
  9584                           
  9585                           ; BSR set to: 1
  9586                           ;ring_buffer_LUT.c: 235: if (VCC_overvoltage_flag == 1) {
  9587  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  9588  01047A  D012               	goto	l1243
  9589                           
  9590                           ; BSR set to: 1
  9591                           ;ring_buffer_LUT.c: 237: terminal_textAttributes(RED, BLACK, NORMAL);
  9592  01047C  0E00               	movlw	0
  9593  01047E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9594  010480  0E00               	movlw	0
  9595  010482  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9596  010484  0E01               	movlw	1
  9597  010486  ECEA  F09E         	call	_terminal_textAttributes
  9598                           
  9599                           ;ring_buffer_LUT.c: 238: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  9600  01048A  0E9A               	movlw	low STR_74
  9601  01048C  0101               	movlb	1	; () banked
  9602  01048E  6F82               	movwf	printf@f& (0+255),b
  9603  010490  0EF5               	movlw	high STR_74
  9604  010492  6F83               	movwf	(printf@f+1)& (0+255),b
  9605  010494  EC9F  F087         	call	_printf	;wreg free
  9606                           
  9607                           ;ring_buffer_LUT.c: 239: terminal_textAttributesReset();
  9608  010498  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9609                           
  9610                           ;ring_buffer_LUT.c: 242: VCC_overvoltage_flag = 0;
  9611  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  9612                           
  9613                           ;ring_buffer_LUT.c: 244: }
  9614  01049E  0012               	return	
  9615  0104A0                     l1243:
  9616                           
  9617                           ;ring_buffer_LUT.c: 246: else {
  9618                           ;ring_buffer_LUT.c: 248: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9619  0104A0  0E00               	movlw	0
  9620  0104A2  0101               	movlb	1	; () banked
  9621  0104A4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9622  0104A6  0E00               	movlw	0
  9623  0104A8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9624  0104AA  0E02               	movlw	2
  9625  0104AC  ECEA  F09E         	call	_terminal_textAttributes
  9626                           
  9627                           ;ring_buffer_LUT.c: 249: printf("VCC Overvoltage condition has not occurred\n\r");
  9628  0104B0  0EA7               	movlw	low STR_75
  9629  0104B2  0101               	movlb	1	; () banked
  9630  0104B4  6F82               	movwf	printf@f& (0+255),b
  9631  0104B6  0EF9               	movlw	high STR_75
  9632  0104B8  6F83               	movwf	(printf@f+1)& (0+255),b
  9633  0104BA  EC9F  F087         	call	_printf	;wreg free
  9634                           
  9635                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
  9636  0104BE  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9637                           
  9638                           ;ring_buffer_LUT.c: 252: }
  9639                           ;ring_buffer_LUT.c: 254: }
  9640  0104C2  0012               	return	
  9641  0104C4                     l1242:
  9642                           
  9643                           ;ring_buffer_LUT.c: 257: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  9644  0104C4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9645  0104C8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9646  0104CC  0E25               	movlw	low STR_76
  9647  0104CE  0101               	movlb	1	; () banked
  9648  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
  9649  0104D2  0EFE               	movlw	high STR_76
  9650  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9651  0104D6  ECAF  F0C1         	call	_strcmp	;wreg free
  9652  0104DA  0101               	movlb	1	; () banked
  9653  0104DC  5117               	movf	?_strcmp& (0+255),w,b
  9654  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9655  0104E0  A4D8               	btfss	status,2,c
  9656  0104E2  D019               	goto	l1246
  9657                           
  9658                           ; BSR set to: 1
  9659                           ;ring_buffer_LUT.c: 259: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9660  0104E4  0E00               	movlw	0
  9661  0104E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9662  0104E8  0E00               	movlw	0
  9663  0104EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9664  0104EC  0E06               	movlw	6
  9665  0104EE  ECEA  F09E         	call	_terminal_textAttributes
  9666                           
  9667                           ;ring_buffer_LUT.c: 260: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
  9668  0104F2  0EEE               	movlw	low STR_77
  9669  0104F4  0101               	movlb	1	; () banked
  9670  0104F6  6F82               	movwf	printf@f& (0+255),b
  9671  0104F8  0EFA               	movlw	high STR_77
  9672  0104FA  6F83               	movwf	(printf@f+1)& (0+255),b
  9673  0104FC  C1CF  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  9674  010500  C1D0  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  9675  010504  C1D1  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  9676  010508  C1D2  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
  9677  01050C  EC9F  F087         	call	_printf	;wreg free
  9678                           
  9679                           ;ring_buffer_LUT.c: 261: terminal_textAttributesReset();
  9680  010510  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9681                           
  9682                           ;ring_buffer_LUT.c: 263: }
  9683  010514  0012               	return	
  9684  010516                     l1246:
  9685                           
  9686                           ;ring_buffer_LUT.c: 266: else if((0 == strcmp(line, "Measure POS12?"))) {
  9687  010516  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9688  01051A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9689  01051E  0E84               	movlw	low STR_78
  9690  010520  0101               	movlb	1	; () banked
  9691  010522  6F19               	movwf	strcmp@s2& (0+255),b
  9692  010524  0EFE               	movlw	high STR_78
  9693  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9694  010528  ECAF  F0C1         	call	_strcmp	;wreg free
  9695  01052C  0101               	movlb	1	; () banked
  9696  01052E  5117               	movf	?_strcmp& (0+255),w,b
  9697  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9698  010532  A4D8               	btfss	status,2,c
  9699  010534  D019               	goto	l1248
  9700                           
  9701                           ; BSR set to: 1
  9702                           ;ring_buffer_LUT.c: 268: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9703  010536  0E00               	movlw	0
  9704  010538  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9705  01053A  0E00               	movlw	0
  9706  01053C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9707  01053E  0E06               	movlw	6
  9708  010540  ECEA  F09E         	call	_terminal_textAttributes
  9709                           
  9710                           ;ring_buffer_LUT.c: 269: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
  9711  010544  0E5C               	movlw	low STR_79
  9712  010546  0101               	movlb	1	; () banked
  9713  010548  6F82               	movwf	printf@f& (0+255),b
  9714  01054A  0EFB               	movlw	high STR_79
  9715  01054C  6F83               	movwf	(printf@f+1)& (0+255),b
  9716  01054E  C1CB  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  9717  010552  C1CC  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  9718  010556  C1CD  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  9719  01055A  C1CE  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
  9720  01055E  EC9F  F087         	call	_printf	;wreg free
  9721                           
  9722                           ;ring_buffer_LUT.c: 270: terminal_textAttributesReset();
  9723  010562  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9724                           
  9725                           ;ring_buffer_LUT.c: 272: }
  9726  010566  0012               	return	
  9727  010568                     l1248:
  9728                           
  9729                           ;ring_buffer_LUT.c: 275: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  9730  010568  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9731  01056C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9732  010570  0E8D               	movlw	low STR_80
  9733  010572  0101               	movlb	1	; () banked
  9734  010574  6F19               	movwf	strcmp@s2& (0+255),b
  9735  010576  0EFD               	movlw	high STR_80
  9736  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9737  01057A  ECAF  F0C1         	call	_strcmp	;wreg free
  9738  01057E  0101               	movlb	1	; () banked
  9739  010580  5117               	movf	?_strcmp& (0+255),w,b
  9740  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9741  010584  A4D8               	btfss	status,2,c
  9742  010586  D019               	goto	l1250
  9743                           
  9744                           ; BSR set to: 1
  9745                           ;ring_buffer_LUT.c: 277: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9746  010588  0E00               	movlw	0
  9747  01058A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9748  01058C  0E00               	movlw	0
  9749  01058E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9750  010590  0E06               	movlw	6
  9751  010592  ECEA  F09E         	call	_terminal_textAttributes
  9752                           
  9753                           ;ring_buffer_LUT.c: 278: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
  9754  010596  0E38               	movlw	low STR_81
  9755  010598  0101               	movlb	1	; () banked
  9756  01059A  6F82               	movwf	printf@f& (0+255),b
  9757  01059C  0EFB               	movlw	high STR_81
  9758  01059E  6F83               	movwf	(printf@f+1)& (0+255),b
  9759  0105A0  C254  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  9760  0105A4  C255  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  9761  0105A8  C256  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  9762  0105AC  C257  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
  9763  0105B0  EC9F  F087         	call	_printf	;wreg free
  9764                           
  9765                           ;ring_buffer_LUT.c: 279: terminal_textAttributesReset();
  9766  0105B4  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9767                           
  9768                           ;ring_buffer_LUT.c: 283: }
  9769  0105B8  0012               	return	
  9770  0105BA                     l1250:
  9771                           
  9772                           ;ring_buffer_LUT.c: 286: else if((0 == strcmp(line, "Measure FVR?"))) {
  9773  0105BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9774  0105BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9775  0105C2  0E1F               	movlw	low STR_82
  9776  0105C4  0101               	movlb	1	; () banked
  9777  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
  9778  0105C8  0EFF               	movlw	high STR_82
  9779  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9780  0105CC  ECAF  F0C1         	call	_strcmp	;wreg free
  9781  0105D0  0101               	movlb	1	; () banked
  9782  0105D2  5117               	movf	?_strcmp& (0+255),w,b
  9783  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9784  0105D6  A4D8               	btfss	status,2,c
  9785  0105D8  D019               	goto	l1252
  9786                           
  9787                           ; BSR set to: 1
  9788                           ;ring_buffer_LUT.c: 288: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9789  0105DA  0E00               	movlw	0
  9790  0105DC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9791  0105DE  0E00               	movlw	0
  9792  0105E0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9793  0105E2  0E06               	movlw	6
  9794  0105E4  ECEA  F09E         	call	_terminal_textAttributes
  9795                           
  9796                           ;ring_buffer_LUT.c: 289: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
  9797  0105E8  0E0E               	movlw	low STR_83
  9798  0105EA  0101               	movlb	1	; () banked
  9799  0105EC  6F82               	movwf	printf@f& (0+255),b
  9800  0105EE  0EF7               	movlw	high STR_83
  9801  0105F0  6F83               	movwf	(printf@f+1)& (0+255),b
  9802  0105F2  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  9803  0105F6  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  9804  0105FA  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  9805  0105FE  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
  9806  010602  EC9F  F087         	call	_printf	;wreg free
  9807                           
  9808                           ;ring_buffer_LUT.c: 290: terminal_textAttributesReset();
  9809  010606  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9810                           
  9811                           ;ring_buffer_LUT.c: 292: }
  9812  01060A  0012               	return	
  9813  01060C                     l1252:
  9814                           
  9815                           ;ring_buffer_LUT.c: 295: else if((0 == strcmp(line, "Measure AVSS?"))) {
  9816  01060C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9817  010610  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9818  010614  0EBF               	movlw	low STR_84
  9819  010616  0101               	movlb	1	; () banked
  9820  010618  6F19               	movwf	strcmp@s2& (0+255),b
  9821  01061A  0EFE               	movlw	high STR_84
  9822  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9823  01061E  ECAF  F0C1         	call	_strcmp	;wreg free
  9824  010622  0101               	movlb	1	; () banked
  9825  010624  5117               	movf	?_strcmp& (0+255),w,b
  9826  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9827  010628  A4D8               	btfss	status,2,c
  9828  01062A  D019               	goto	l1254
  9829                           
  9830                           ; BSR set to: 1
  9831                           ;ring_buffer_LUT.c: 297: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9832  01062C  0E00               	movlw	0
  9833  01062E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9834  010630  0E00               	movlw	0
  9835  010632  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9836  010634  0E06               	movlw	6
  9837  010636  ECEA  F09E         	call	_terminal_textAttributes
  9838                           
  9839                           ;ring_buffer_LUT.c: 298: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  9840  01063A  0EC9               	movlw	low STR_85
  9841  01063C  0101               	movlb	1	; () banked
  9842  01063E  6F82               	movwf	printf@f& (0+255),b
  9843  010640  0EFA               	movlw	high STR_85
  9844  010642  6F83               	movwf	(printf@f+1)& (0+255),b
  9845  010644  C1D3  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  9846  010648  C1D4  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  9847  01064C  C1D5  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  9848  010650  C1D6  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
  9849  010654  EC9F  F087         	call	_printf	;wreg free
  9850                           
  9851                           ;ring_buffer_LUT.c: 299: terminal_textAttributesReset();
  9852  010658  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9853                           
  9854                           ;ring_buffer_LUT.c: 301: }
  9855  01065C  0012               	return	
  9856  01065E                     l1254:
  9857                           
  9858                           ;ring_buffer_LUT.c: 304: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  9859  01065E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9860  010662  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9861  010666  0E96               	movlw	low STR_86
  9862  010668  0101               	movlb	1	; () banked
  9863  01066A  6F19               	movwf	strcmp@s2& (0+255),b
  9864  01066C  0EFC               	movlw	high STR_86
  9865  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9866  010670  ECAF  F0C1         	call	_strcmp	;wreg free
  9867  010674  0101               	movlb	1	; () banked
  9868  010676  5117               	movf	?_strcmp& (0+255),w,b
  9869  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9870  01067A  A4D8               	btfss	status,2,c
  9871  01067C  D019               	goto	l1256
  9872                           
  9873                           ; BSR set to: 1
  9874                           ;ring_buffer_LUT.c: 306: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9875  01067E  0E00               	movlw	0
  9876  010680  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9877  010682  0E00               	movlw	0
  9878  010684  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9879  010686  0E06               	movlw	6
  9880  010688  ECEA  F09E         	call	_terminal_textAttributes
  9881                           
  9882                           ;ring_buffer_LUT.c: 307: printf("Measured Current is %.3f Amps\n\r", Imeas);
  9883  01068C  0EE5               	movlw	low STR_87
  9884  01068E  0101               	movlb	1	; () banked
  9885  010690  6F82               	movwf	printf@f& (0+255),b
  9886  010692  0EFB               	movlw	high STR_87
  9887  010694  6F83               	movwf	(printf@f+1)& (0+255),b
  9888  010696  C1C3  F184         	movff	_Imeas,?_printf+2	;volatile
  9889  01069A  C1C4  F185         	movff	_Imeas+1,?_printf+3	;volatile
  9890  01069E  C1C5  F186         	movff	_Imeas+2,?_printf+4	;volatile
  9891  0106A2  C1C6  F187         	movff	_Imeas+3,?_printf+5	;volatile
  9892  0106A6  EC9F  F087         	call	_printf	;wreg free
  9893                           
  9894                           ;ring_buffer_LUT.c: 308: terminal_textAttributesReset();
  9895  0106AA  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9896                           
  9897                           ;ring_buffer_LUT.c: 310: }
  9898  0106AE  0012               	return	
  9899  0106B0                     l1256:
  9900                           
  9901                           ;ring_buffer_LUT.c: 313: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  9902  0106B0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9903  0106B4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9904  0106B8  0E65               	movlw	low STR_88
  9905  0106BA  0101               	movlb	1	; () banked
  9906  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
  9907  0106BE  0EFD               	movlw	high STR_88
  9908  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9909  0106C2  ECAF  F0C1         	call	_strcmp	;wreg free
  9910  0106C6  0101               	movlb	1	; () banked
  9911  0106C8  5117               	movf	?_strcmp& (0+255),w,b
  9912  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9913  0106CC  A4D8               	btfss	status,2,c
  9914  0106CE  D019               	goto	l1258
  9915                           
  9916                           ; BSR set to: 1
  9917                           ;ring_buffer_LUT.c: 315: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9918  0106D0  0E00               	movlw	0
  9919  0106D2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9920  0106D4  0E00               	movlw	0
  9921  0106D6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9922  0106D8  0E06               	movlw	6
  9923  0106DA  ECEA  F09E         	call	_terminal_textAttributes
  9924                           
  9925                           ;ring_buffer_LUT.c: 316: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  9926  0106DE  0E80               	movlw	low STR_89
  9927  0106E0  0101               	movlb	1	; () banked
  9928  0106E2  6F82               	movwf	printf@f& (0+255),b
  9929  0106E4  0EFB               	movlw	high STR_89
  9930  0106E6  6F83               	movwf	(printf@f+1)& (0+255),b
  9931  0106E8  C0F6  F184         	movff	_Irms,?_printf+2	;volatile
  9932  0106EC  C0F7  F185         	movff	_Irms+1,?_printf+3	;volatile
  9933  0106F0  C0F8  F186         	movff	_Irms+2,?_printf+4	;volatile
  9934  0106F4  C0F9  F187         	movff	_Irms+3,?_printf+5	;volatile
  9935  0106F8  EC9F  F087         	call	_printf	;wreg free
  9936                           
  9937                           ;ring_buffer_LUT.c: 317: terminal_textAttributesReset();
  9938  0106FC  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9939                           
  9940                           ;ring_buffer_LUT.c: 319: }
  9941  010700  0012               	return	
  9942  010702                     l1258:
  9943                           
  9944                           ;ring_buffer_LUT.c: 322: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  9945  010702  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9946  010706  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9947  01070A  0E50               	movlw	low STR_90
  9948  01070C  0101               	movlb	1	; () banked
  9949  01070E  6F19               	movwf	strcmp@s2& (0+255),b
  9950  010710  0EFD               	movlw	high STR_90
  9951  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9952  010714  ECAF  F0C1         	call	_strcmp	;wreg free
  9953  010718  0101               	movlb	1	; () banked
  9954  01071A  5117               	movf	?_strcmp& (0+255),w,b
  9955  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9956  01071E  A4D8               	btfss	status,2,c
  9957  010720  D019               	goto	l1260
  9958                           
  9959                           ; BSR set to: 1
  9960                           ;ring_buffer_LUT.c: 324: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9961  010722  0E00               	movlw	0
  9962  010724  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9963  010726  0E00               	movlw	0
  9964  010728  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9965  01072A  0E06               	movlw	6
  9966  01072C  ECEA  F09E         	call	_terminal_textAttributes
  9967                           
  9968                           ;ring_buffer_LUT.c: 325: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  9969  010730  0EA2               	movlw	low STR_91
  9970  010732  0101               	movlb	1	; () banked
  9971  010734  6F82               	movwf	printf@f& (0+255),b
  9972  010736  0EFB               	movlw	high STR_91
  9973  010738  6F83               	movwf	(printf@f+1)& (0+255),b
  9974  01073A  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
  9975  01073E  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
  9976  010742  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
  9977  010746  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
  9978  01074A  EC9F  F087         	call	_printf	;wreg free
  9979                           
  9980                           ;ring_buffer_LUT.c: 326: terminal_textAttributesReset();
  9981  01074E  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9982                           
  9983                           ;ring_buffer_LUT.c: 328: }
  9984  010752  0012               	return	
  9985  010754                     l1260:
  9986                           
  9987                           ;ring_buffer_LUT.c: 331: else if ((0 == strcmp(line, "Measure Power?"))) {
  9988  010754  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9989  010758  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9990  01075C  0E93               	movlw	low STR_92
  9991  01075E  0101               	movlb	1	; () banked
  9992  010760  6F19               	movwf	strcmp@s2& (0+255),b
  9993  010762  0EFE               	movlw	high STR_92
  9994  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9995  010766  ECAF  F0C1         	call	_strcmp	;wreg free
  9996  01076A  0101               	movlb	1	; () banked
  9997  01076C  5117               	movf	?_strcmp& (0+255),w,b
  9998  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9999  010770  A4D8               	btfss	status,2,c
 10000  010772  D019               	goto	l1262
 10001                           
 10002                           ; BSR set to: 1
 10003                           ;ring_buffer_LUT.c: 333: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10004  010774  0E00               	movlw	0
 10005  010776  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10006  010778  0E00               	movlw	0
 10007  01077A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10008  01077C  0E06               	movlw	6
 10009  01077E  ECEA  F09E         	call	_terminal_textAttributes
 10010                           
 10011                           ;ring_buffer_LUT.c: 334: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 10012  010782  0E48               	movlw	low STR_93
 10013  010784  0101               	movlb	1	; () banked
 10014  010786  6F82               	movwf	printf@f& (0+255),b
 10015  010788  0EF7               	movlw	high STR_93
 10016  01078A  6F83               	movwf	(printf@f+1)& (0+255),b
 10017  01078C  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 10018  010790  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 10019  010794  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 10020  010798  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 10021  01079C  EC9F  F087         	call	_printf	;wreg free
 10022                           
 10023                           ;ring_buffer_LUT.c: 335: terminal_textAttributesReset();
 10024  0107A0  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10025                           
 10026                           ;ring_buffer_LUT.c: 337: }
 10027  0107A4  0012               	return	
 10028  0107A6                     l1262:
 10029                           
 10030                           ;ring_buffer_LUT.c: 340: else if ((0 == strcmp(line, "Enable Dimming"))) {
 10031  0107A6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10032  0107AA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10033  0107AE  0EA2               	movlw	low STR_94
 10034  0107B0  0101               	movlb	1	; () banked
 10035  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
 10036  0107B4  0EFE               	movlw	high STR_94
 10037  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10038  0107B8  ECAF  F0C1         	call	_strcmp	;wreg free
 10039  0107BC  0101               	movlb	1	; () banked
 10040  0107BE  5117               	movf	?_strcmp& (0+255),w,b
 10041  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10042  0107C2  A4D8               	btfss	status,2,c
 10043  0107C4  D012               	goto	l1264
 10044                           
 10045                           ; BSR set to: 1
 10046                           ;ring_buffer_LUT.c: 343: LATGbits.LATG0 = 0;
 10047  0107C6  907F               	bcf	3967,0,c	;volatile
 10048                           
 10049                           ; BSR set to: 1
 10050                           ;ring_buffer_LUT.c: 345: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10051  0107C8  0E00               	movlw	0
 10052  0107CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10053  0107CC  0E00               	movlw	0
 10054  0107CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10055  0107D0  0E02               	movlw	2
 10056  0107D2  ECEA  F09E         	call	_terminal_textAttributes
 10057                           
 10058                           ;ring_buffer_LUT.c: 346: printf("TRIAC output dimming has been enabled\n\r");
 10059  0107D6  0E7A               	movlw	low STR_95
 10060  0107D8  0101               	movlb	1	; () banked
 10061  0107DA  6F82               	movwf	printf@f& (0+255),b
 10062  0107DC  0EFA               	movlw	high STR_95
 10063  0107DE  6F83               	movwf	(printf@f+1)& (0+255),b
 10064  0107E0  EC9F  F087         	call	_printf	;wreg free
 10065                           
 10066                           ;ring_buffer_LUT.c: 347: terminal_textAttributesReset();
 10067  0107E4  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10068                           
 10069                           ;ring_buffer_LUT.c: 349: }
 10070  0107E8  0012               	return	
 10071  0107EA                     l1264:
 10072                           
 10073                           ;ring_buffer_LUT.c: 352: else if ((0 == strcmp(line, "Disable Dimming"))) {
 10074  0107EA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10075  0107EE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10076  0107F2  0E55               	movlw	low STR_96
 10077  0107F4  0101               	movlb	1	; () banked
 10078  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
 10079  0107F8  0EFE               	movlw	high STR_96
 10080  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10081  0107FC  ECAF  F0C1         	call	_strcmp	;wreg free
 10082  010800  0101               	movlb	1	; () banked
 10083  010802  5117               	movf	?_strcmp& (0+255),w,b
 10084  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10085  010806  A4D8               	btfss	status,2,c
 10086  010808  D012               	goto	l1266
 10087                           
 10088                           ; BSR set to: 1
 10089                           ;ring_buffer_LUT.c: 355: LATGbits.LATG0 = 1;
 10090  01080A  807F               	bsf	3967,0,c	;volatile
 10091                           
 10092                           ; BSR set to: 1
 10093                           ;ring_buffer_LUT.c: 357: terminal_textAttributes(RED, BLACK, NORMAL);
 10094  01080C  0E00               	movlw	0
 10095  01080E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10096  010810  0E00               	movlw	0
 10097  010812  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10098  010814  0E01               	movlw	1
 10099  010816  ECEA  F09E         	call	_terminal_textAttributes
 10100                           
 10101                           ;ring_buffer_LUT.c: 358: printf("TRIAC output dimming has been disabled\n\r");
 10102  01081A  0E51               	movlw	low STR_97
 10103  01081C  0101               	movlb	1	; () banked
 10104  01081E  6F82               	movwf	printf@f& (0+255),b
 10105  010820  0EFA               	movlw	high STR_97
 10106  010822  6F83               	movwf	(printf@f+1)& (0+255),b
 10107  010824  EC9F  F087         	call	_printf	;wreg free
 10108                           
 10109                           ;ring_buffer_LUT.c: 359: terminal_textAttributesReset();
 10110  010828  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10111                           
 10112                           ;ring_buffer_LUT.c: 361: }
 10113  01082C  0012               	return	
 10114  01082E                     l1266:
 10115                           
 10116                           ;ring_buffer_LUT.c: 364: else if ((0 == strcmp(line, "Enable Load"))) {
 10117  01082E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10118  010832  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10119  010836  0E45               	movlw	low STR_98
 10120  010838  0101               	movlb	1	; () banked
 10121  01083A  6F19               	movwf	strcmp@s2& (0+255),b
 10122  01083C  0EFF               	movlw	high STR_98
 10123  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10124  010840  ECAF  F0C1         	call	_strcmp	;wreg free
 10125  010844  0101               	movlb	1	; () banked
 10126  010846  5117               	movf	?_strcmp& (0+255),w,b
 10127  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10128  01084A  A4D8               	btfss	status,2,c
 10129  01084C  D014               	goto	l1268
 10130                           
 10131                           ; BSR set to: 1
 10132                           ;ring_buffer_LUT.c: 366: LATGbits.LATG0 = 1;
 10133  01084E  807F               	bsf	3967,0,c	;volatile
 10134                           
 10135                           ;ring_buffer_LUT.c: 367: LATGbits.LATG1 = 0;
 10136  010850  927F               	bcf	3967,1,c	;volatile
 10137                           
 10138                           ;ring_buffer_LUT.c: 368: load_enable = 1;
 10139  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10140                           
 10141                           ; BSR set to: 1
 10142                           ;ring_buffer_LUT.c: 370: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10143  010854  0E00               	movlw	0
 10144  010856  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10145  010858  0E00               	movlw	0
 10146  01085A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10147  01085C  0E02               	movlw	2
 10148  01085E  ECEA  F09E         	call	_terminal_textAttributes
 10149                           
 10150                           ;ring_buffer_LUT.c: 371: printf("Load has been enabled, dimming disabled\n\r");
 10151  010862  0ED4               	movlw	low STR_99
 10152  010864  0101               	movlb	1	; () banked
 10153  010866  6F82               	movwf	printf@f& (0+255),b
 10154  010868  0EF9               	movlw	high STR_99
 10155  01086A  6F83               	movwf	(printf@f+1)& (0+255),b
 10156  01086C  EC9F  F087         	call	_printf	;wreg free
 10157                           
 10158                           ;ring_buffer_LUT.c: 372: terminal_textAttributesReset();
 10159  010870  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10160                           
 10161                           ;ring_buffer_LUT.c: 374: }
 10162  010874  0012               	return	
 10163  010876                     l1268:
 10164                           
 10165                           ;ring_buffer_LUT.c: 377: else if ((0 == strcmp(line, "Load Enabled?"))) {
 10166  010876  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10167  01087A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10168  01087E  0ECD               	movlw	low STR_100
 10169  010880  0101               	movlb	1	; () banked
 10170  010882  6F19               	movwf	strcmp@s2& (0+255),b
 10171  010884  0EFE               	movlw	high STR_100
 10172  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10173  010888  ECAF  F0C1         	call	_strcmp	;wreg free
 10174  01088C  0101               	movlb	1	; () banked
 10175  01088E  5117               	movf	?_strcmp& (0+255),w,b
 10176  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10177  010892  A4D8               	btfss	status,2,c
 10178  010894  D025               	goto	l1270
 10179                           
 10180                           ; BSR set to: 1
 10181                           ;ring_buffer_LUT.c: 379: if (load_enable == 1) {
 10182  010896  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10183  010898  D011               	goto	l1271
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;ring_buffer_LUT.c: 381: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10187  01089A  0E00               	movlw	0
 10188  01089C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10189  01089E  0E00               	movlw	0
 10190  0108A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10191  0108A2  0E02               	movlw	2
 10192  0108A4  ECEA  F09E         	call	_terminal_textAttributes
 10193                           
 10194                           ;ring_buffer_LUT.c: 382: printf("Load is currently enabled\n\r");
 10195  0108A8  0E5F               	movlw	low STR_101
 10196  0108AA  0101               	movlb	1	; () banked
 10197  0108AC  6F82               	movwf	printf@f& (0+255),b
 10198  0108AE  0EFC               	movlw	high STR_101
 10199  0108B0  6F83               	movwf	(printf@f+1)& (0+255),b
 10200  0108B2  EC9F  F087         	call	_printf	;wreg free
 10201                           
 10202                           ;ring_buffer_LUT.c: 383: terminal_textAttributesReset();
 10203  0108B6  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10204                           
 10205                           ;ring_buffer_LUT.c: 385: }
 10206  0108BA  0012               	return	
 10207  0108BC                     l1271:
 10208                           
 10209                           ;ring_buffer_LUT.c: 387: else {
 10210                           ;ring_buffer_LUT.c: 389: terminal_textAttributes(RED, BLACK, NORMAL);
 10211  0108BC  0E00               	movlw	0
 10212  0108BE  0101               	movlb	1	; () banked
 10213  0108C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10214  0108C2  0E00               	movlw	0
 10215  0108C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10216  0108C6  0E01               	movlw	1
 10217  0108C8  ECEA  F09E         	call	_terminal_textAttributes
 10218                           
 10219                           ;ring_buffer_LUT.c: 390: printf("Load is currently disabled\n\r");
 10220  0108CC  0E42               	movlw	low STR_102
 10221  0108CE  0101               	movlb	1	; () banked
 10222  0108D0  6F82               	movwf	printf@f& (0+255),b
 10223  0108D2  0EFC               	movlw	high STR_102
 10224  0108D4  6F83               	movwf	(printf@f+1)& (0+255),b
 10225  0108D6  EC9F  F087         	call	_printf	;wreg free
 10226                           
 10227                           ;ring_buffer_LUT.c: 391: terminal_textAttributesReset();
 10228  0108DA  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10229                           
 10230                           ;ring_buffer_LUT.c: 394: }
 10231                           ;ring_buffer_LUT.c: 396: }
 10232  0108DE  0012               	return	
 10233  0108E0                     l1270:
 10234                           
 10235                           ;ring_buffer_LUT.c: 399: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 10236  0108E0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10237  0108E4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10238  0108E8  0EC1               	movlw	low STR_103
 10239  0108EA  0101               	movlb	1	; () banked
 10240  0108EC  6F19               	movwf	strcmp@s2& (0+255),b
 10241  0108EE  0EFD               	movlw	high STR_103
 10242  0108F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10243  0108F2  ECAF  F0C1         	call	_strcmp	;wreg free
 10244  0108F6  0101               	movlb	1	; () banked
 10245  0108F8  5117               	movf	?_strcmp& (0+255),w,b
 10246  0108FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10247  0108FC  A4D8               	btfss	status,2,c
 10248  0108FE  D039               	goto	l1274
 10249                           
 10250                           ; BSR set to: 1
 10251                           ;ring_buffer_LUT.c: 401: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 10252  010900  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10253                           
 10254                           ; BSR set to: 1
 10255  010902  B07F               	btfsc	3967,0,c	;volatile
 10256  010904  D011               	goto	l1275
 10257                           
 10258                           ; BSR set to: 1
 10259                           ;ring_buffer_LUT.c: 403: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10260  010906  0E00               	movlw	0
 10261  010908  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10262  01090A  0E00               	movlw	0
 10263  01090C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10264  01090E  0E02               	movlw	2
 10265  010910  ECEA  F09E         	call	_terminal_textAttributes
 10266                           
 10267                           ;ring_buffer_LUT.c: 404: printf("Dimming is currently enabled\n\r");
 10268  010914  0E05               	movlw	low STR_104
 10269  010916  0101               	movlb	1	; () banked
 10270  010918  6F82               	movwf	printf@f& (0+255),b
 10271  01091A  0EFC               	movlw	high STR_104
 10272  01091C  6F83               	movwf	(printf@f+1)& (0+255),b
 10273  01091E  EC9F  F087         	call	_printf	;wreg free
 10274                           
 10275                           ;ring_buffer_LUT.c: 405: terminal_textAttributesReset();
 10276  010922  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10277                           
 10278                           ;ring_buffer_LUT.c: 407: }
 10279  010926  0012               	return	
 10280  010928                     l1275:
 10281                           
 10282                           ; BSR set to: 1
 10283                           ;ring_buffer_LUT.c: 409: else if (load_enable == 1){
 10284  010928  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10285  01092A  D011               	goto	l1277
 10286                           
 10287                           ; BSR set to: 1
 10288                           ;ring_buffer_LUT.c: 411: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 10289  01092C  0E00               	movlw	0
 10290  01092E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10291  010930  0E00               	movlw	0
 10292  010932  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10293  010934  0E03               	movlw	3
 10294  010936  ECEA  F09E         	call	_terminal_textAttributes
 10295                           
 10296                           ;ring_buffer_LUT.c: 412: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 10297  01093A  0EED               	movlw	low STR_105
 10298  01093C  0101               	movlb	1	; () banked
 10299  01093E  6F82               	movwf	printf@f& (0+255),b
 10300  010940  0EF7               	movlw	high STR_105
 10301  010942  6F83               	movwf	(printf@f+1)& (0+255),b
 10302  010944  EC9F  F087         	call	_printf	;wreg free
 10303                           
 10304                           ;ring_buffer_LUT.c: 413: terminal_textAttributesReset();
 10305  010948  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10306                           
 10307                           ;ring_buffer_LUT.c: 415: }
 10308  01094C  0012               	return	
 10309  01094E                     l1277:
 10310                           
 10311                           ;ring_buffer_LUT.c: 417: else {
 10312                           ;ring_buffer_LUT.c: 419: terminal_textAttributes(RED, BLACK, NORMAL);
 10313  01094E  0E00               	movlw	0
 10314  010950  0101               	movlb	1	; () banked
 10315  010952  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10316  010954  0E00               	movlw	0
 10317  010956  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10318  010958  0E01               	movlw	1
 10319  01095A  ECEA  F09E         	call	_terminal_textAttributes
 10320                           
 10321                           ;ring_buffer_LUT.c: 420: printf("Load and dimming are currently disabled\n\r");
 10322  01095E  0EFE               	movlw	low STR_106
 10323  010960  0101               	movlb	1	; () banked
 10324  010962  6F82               	movwf	printf@f& (0+255),b
 10325  010964  0EF9               	movlw	high STR_106
 10326  010966  6F83               	movwf	(printf@f+1)& (0+255),b
 10327  010968  EC9F  F087         	call	_printf	;wreg free
 10328                           
 10329                           ;ring_buffer_LUT.c: 421: terminal_textAttributesReset();
 10330  01096C  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10331                           
 10332                           ;ring_buffer_LUT.c: 423: }
 10333                           ;ring_buffer_LUT.c: 427: }
 10334  010970  0012               	return	
 10335  010972                     l1274:
 10336                           
 10337                           ;ring_buffer_LUT.c: 432: else if ((0 == strcmp(line, "Disable Load"))) {
 10338  010972  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10339  010976  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10340  01097A  0E2C               	movlw	low STR_107
 10341  01097C  0101               	movlb	1	; () banked
 10342  01097E  6F19               	movwf	strcmp@s2& (0+255),b
 10343  010980  0EFF               	movlw	high STR_107
 10344  010982  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10345  010984  ECAF  F0C1         	call	_strcmp	;wreg free
 10346  010988  0101               	movlb	1	; () banked
 10347  01098A  5117               	movf	?_strcmp& (0+255),w,b
 10348  01098C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10349  01098E  A4D8               	btfss	status,2,c
 10350  010990  D014               	goto	l1280
 10351                           
 10352                           ; BSR set to: 1
 10353                           ;ring_buffer_LUT.c: 434: LATGbits.LATG1 = 0;
 10354  010992  927F               	bcf	3967,1,c	;volatile
 10355                           
 10356                           ;ring_buffer_LUT.c: 435: LATGbits.LATG0 = 0;
 10357  010994  907F               	bcf	3967,0,c	;volatile
 10358                           
 10359                           ;ring_buffer_LUT.c: 436: load_enable = 0;
 10360  010996  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;ring_buffer_LUT.c: 438: terminal_textAttributes(RED, BLACK, NORMAL);
 10364  010998  0E00               	movlw	0
 10365  01099A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10366  01099C  0E00               	movlw	0
 10367  01099E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10368  0109A0  0E01               	movlw	1
 10369  0109A2  ECEA  F09E         	call	_terminal_textAttributes
 10370                           
 10371                           ;ring_buffer_LUT.c: 439: printf("Load has been disabled\n\r");
 10372  0109A6  0EB0               	movlw	low STR_108
 10373  0109A8  0101               	movlb	1	; () banked
 10374  0109AA  6F82               	movwf	printf@f& (0+255),b
 10375  0109AC  0EFC               	movlw	high STR_108
 10376  0109AE  6F83               	movwf	(printf@f+1)& (0+255),b
 10377  0109B0  EC9F  F087         	call	_printf	;wreg free
 10378                           
 10379                           ;ring_buffer_LUT.c: 440: terminal_textAttributesReset();
 10380  0109B4  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10381                           
 10382                           ;ring_buffer_LUT.c: 442: }
 10383  0109B8  0012               	return	
 10384  0109BA                     l1280:
 10385                           
 10386                           ;ring_buffer_LUT.c: 445: else if ((strstr(line, "Set Dimming Percentage: "))) {
 10387  0109BA  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 10388  0109BE  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 10389  0109C2  0EC9               	movlw	low STR_109
 10390  0109C4  0101               	movlb	1	; () banked
 10391  0109C6  6F28               	movwf	strstr@s2& (0+255),b
 10392  0109C8  0EFC               	movlw	high STR_109
 10393  0109CA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 10394  0109CC  EC68  F0BD         	call	_strstr	;wreg free
 10395  0109D0  0101               	movlb	1	; () banked
 10396  0109D2  5126               	movf	?_strstr& (0+255),w,b
 10397  0109D4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 10398  0109D6  B4D8               	btfsc	status,2,c
 10399  0109D8  D131               	goto	l1282
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;ring_buffer_LUT.c: 448: char arg_buff[3];
 10403                           ;ring_buffer_LUT.c: 451: for (int index = 0; index < 3; index++) {
 10404  0109DA  0E00               	movlw	0
 10405  0109DC  0103               	movlb	3	; () banked
 10406  0109DE  6FA6               	movwf	(ringBufferLUT@index+1)& (0+255),b
 10407  0109E0  0E00               	movlw	0
 10408  0109E2  6FA5               	movwf	ringBufferLUT@index& (0+255),b
 10409  0109E4                     l19316:
 10410                           
 10411                           ; BSR set to: 3
 10412  0109E4  BFA6               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 10413  0109E6  D006               	goto	l1283
 10414  0109E8  51A6               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 10415  0109EA  E11F               	bnz	l19326
 10416  0109EC  0E03               	movlw	3
 10417  0109EE  5DA5               	subwf	ringBufferLUT@index& (0+255),w,b
 10418  0109F0  B0D8               	btfsc	status,0,c
 10419  0109F2  D01B               	goto	u25970
 10420  0109F4                     l1283:
 10421                           
 10422                           ; BSR set to: 3
 10423                           ;ring_buffer_LUT.c: 453: arg_buff[index] = line[index + 24];
 10424                           
 10425                           ; BSR set to: 3
 10426  0109F4  0E18               	movlw	24
 10427  0109F6  25A5               	addwf	ringBufferLUT@index& (0+255),w,b
 10428  0109F8  0101               	movlb	1	; () banked
 10429  0109FA  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 10430  0109FC  0E00               	movlw	0
 10431  0109FE  0103               	movlb	3	; () banked
 10432  010A00  21A6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 10433  010A02  0101               	movlb	1	; () banked
 10434  010A04  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10435  010A06  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 10436  010A08  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 10437  010A0A  6ED9               	movwf	fsr2l,c
 10438  010A0C  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10439  010A0E  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 10440  010A10  6EDA               	movwf	fsr2h,c
 10441  010A12  0EA2               	movlw	low ringBufferLUT@arg_buff
 10442  010A14  0103               	movlb	3	; () banked
 10443  010A16  25A5               	addwf	ringBufferLUT@index& (0+255),w,b
 10444  010A18  6EE1               	movwf	fsr1l,c
 10445  010A1A  0E03               	movlw	high ringBufferLUT@arg_buff
 10446  010A1C  21A6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 10447  010A1E  6EE2               	movwf	fsr1h,c
 10448  010A20  CFDF FFE7          	movff	indf2,indf1
 10449                           
 10450                           ; BSR set to: 3
 10451  010A24  4BA5               	infsnz	ringBufferLUT@index& (0+255),f,b
 10452  010A26  2BA6               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 10453  010A28  D7DD               	goto	l19316
 10454  010A2A                     u25970:
 10455  010A2A                     l19326:
 10456                           
 10457                           ; BSR set to: 3
 10458                           ;ring_buffer_LUT.c: 455: }
 10459                           ;ring_buffer_LUT.c: 457: int percentage = atoi(arg_buff);
 10460  010A2A  0EA2               	movlw	low ringBufferLUT@arg_buff
 10461  010A2C  0101               	movlb	1	; () banked
 10462  010A2E  6F1D               	movwf	atoi@s& (0+255),b
 10463  010A30  0E03               	movlw	high ringBufferLUT@arg_buff
 10464  010A32  6F1E               	movwf	(atoi@s+1)& (0+255),b
 10465  010A34  EC5D  F0BB         	call	_atoi	;wreg free
 10466  010A38  C11D  F3A7         	movff	?_atoi,ringBufferLUT@percentage
 10467  010A3C  C11E  F3A8         	movff	?_atoi+1,ringBufferLUT@percentage+1
 10468                           
 10469                           ;ring_buffer_LUT.c: 460: if ( (percentage >= 100) ||
 10470                           ;ring_buffer_LUT.c: 461: (percentage <= 0)) {
 10471  010A40  0103               	movlb	3	; () banked
 10472  010A42  BFA8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 10473  010A44  D006               	goto	u25980
 10474  010A46  51A8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 10475  010A48  E10B               	bnz	l19332
 10476  010A4A  0E64               	movlw	100
 10477  010A4C  5DA7               	subwf	ringBufferLUT@percentage& (0+255),w,b
 10478  010A4E  B0D8               	btfsc	status,0,c
 10479  010A50  D007               	goto	u25990
 10480  010A52                     u25980:
 10481                           
 10482                           ; BSR set to: 3
 10483  010A52  BFA8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 10484  010A54  D005               	goto	u25990
 10485  010A56  51A8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 10486  010A58  E12B               	bnz	l19334
 10487  010A5A  05A7               	decf	ringBufferLUT@percentage& (0+255),w,b
 10488  010A5C  B0D8               	btfsc	status,0,c
 10489  010A5E  D028               	goto	l1285
 10490  010A60                     u25990:
 10491  010A60                     l19332:
 10492                           
 10493                           ; BSR set to: 3
 10494                           ;ring_buffer_LUT.c: 463: terminal_textAttributes(RED, BLACK, NORMAL);
 10495  010A60  0E00               	movlw	0
 10496  010A62  0101               	movlb	1	; () banked
 10497  010A64  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10498  010A66  0E00               	movlw	0
 10499  010A68  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10500  010A6A  0E01               	movlw	1
 10501  010A6C  ECEA  F09E         	call	_terminal_textAttributes
 10502                           
 10503                           ;ring_buffer_LUT.c: 464: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 10504  010A70  0EA8               	movlw	low STR_110
 10505  010A72  0101               	movlb	1	; () banked
 10506  010A74  6F82               	movwf	printf@f& (0+255),b
 10507  010A76  0EF4               	movlw	high STR_110
 10508  010A78  6F83               	movwf	(printf@f+1)& (0+255),b
 10509  010A7A  EC9F  F087         	call	_printf	;wreg free
 10510                           
 10511                           ;ring_buffer_LUT.c: 465: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 10512  010A7E  0E00               	movlw	0
 10513  010A80  0101               	movlb	1	; () banked
 10514  010A82  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10515  010A84  0E00               	movlw	0
 10516  010A86  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10517  010A88  0E03               	movlw	3
 10518  010A8A  ECEA  F09E         	call	_terminal_textAttributes
 10519                           
 10520                           ;ring_buffer_LUT.c: 466: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 10521  010A8E  0E42               	movlw	low STR_111
 10522  010A90  0101               	movlb	1	; () banked
 10523  010A92  6F82               	movwf	printf@f& (0+255),b
 10524  010A94  0EF4               	movlw	high STR_111
 10525  010A96  6F83               	movwf	(printf@f+1)& (0+255),b
 10526  010A98  EC9F  F087         	call	_printf	;wreg free
 10527                           
 10528                           ;ring_buffer_LUT.c: 467: printf("Enter 'Help' for list of available commands\n\r");
 10529  010A9C  0E4B               	movlw	low STR_112
 10530  010A9E  0101               	movlb	1	; () banked
 10531  010AA0  6F82               	movwf	printf@f& (0+255),b
 10532  010AA2  0EF9               	movlw	high STR_112
 10533  010AA4  6F83               	movwf	(printf@f+1)& (0+255),b
 10534  010AA6  EC9F  F087         	call	_printf	;wreg free
 10535                           
 10536                           ;ring_buffer_LUT.c: 468: terminal_textAttributesReset();
 10537  010AAA  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10538                           
 10539                           ;ring_buffer_LUT.c: 470: }
 10540  010AAE  0012               	return	
 10541  010AB0                     l1285:
 10542  010AB0                     l19334:
 10543                           
 10544                           ;ring_buffer_LUT.c: 473: else {
 10545                           ;ring_buffer_LUT.c: 476: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 10546  010AB0  0E00               	movlw	0
 10547  010AB2  0101               	movlb	1	; () banked
 10548  010AB4  6F41               	movwf	___fldiv@a& (0+255),b
 10549  010AB6  0E00               	movlw	0
 10550  010AB8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 10551  010ABA  0EC8               	movlw	200
 10552  010ABC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 10553  010ABE  0E42               	movlw	66
 10554  010AC0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 10555  010AC2  0E00               	movlw	0
 10556  010AC4  6F2D               	movwf	___fladd@a& (0+255),b
 10557  010AC6  0E00               	movlw	0
 10558  010AC8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 10559  010ACA  0EC8               	movlw	200
 10560  010ACC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 10561  010ACE  0E42               	movlw	66
 10562  010AD0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 10563  010AD2  C3A7  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 10564  010AD6  C3A8  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 10565  010ADA  0E00               	movlw	0
 10566  010ADC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 10567  010ADE  0EFF               	movlw	-1
 10568  010AE0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 10569  010AE2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 10570  010AE4  0E01               	movlw	1
 10571  010AE6  EC15  F0B4         	call	___xxtofl
 10572  010AEA  C117  F125         	movff	?___xxtofl,___flneg@f1
 10573  010AEE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 10574  010AF2  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 10575  010AF6  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 10576  010AFA  EC75  F0C4         	call	___flneg	;wreg free
 10577  010AFE  C125  F129         	movff	?___flneg,___fladd@b
 10578  010B02  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 10579  010B06  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 10580  010B0A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 10581  010B0E  ECEF  F0A3         	call	___fladd	;wreg free
 10582  010B12  C129  F13D         	movff	?___fladd,___fldiv@b
 10583  010B16  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 10584  010B1A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 10585  010B1E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 10586  010B22  ECF3  F0AC         	call	___fldiv	;wreg free
 10587  010B26  C13D  F156         	movff	?___fldiv,___flmul@b
 10588  010B2A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 10589  010B2E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 10590  010B32  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 10591  010B36  0EDB               	movlw	219
 10592  010B38  0101               	movlb	1	; () banked
 10593  010B3A  6F5A               	movwf	___flmul@a& (0+255),b
 10594  010B3C  0E0F               	movlw	15
 10595  010B3E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10596  010B40  0E49               	movlw	73
 10597  010B42  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10598  010B44  0E40               	movlw	64
 10599  010B46  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10600  010B48  EC9E  F0A0         	call	___flmul	;wreg free
 10601  010B4C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 10602  010B50  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 10603  010B54  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 10604  010B58  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 10605                           
 10606                           ;ring_buffer_LUT.c: 477: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 10607  010B5C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 10608  010B60  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 10609  010B64  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 10610  010B68  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 10611  010B6C  0EE1               	movlw	225
 10612  010B6E  0101               	movlb	1	; () banked
 10613  010B70  6F5A               	movwf	___flmul@a& (0+255),b
 10614  010B72  0E2E               	movlw	46
 10615  010B74  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10616  010B76  0E65               	movlw	101
 10617  010B78  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10618  010B7A  0E42               	movlw	66
 10619  010B7C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10620  010B7E  EC9E  F0A0         	call	___flmul	;wreg free
 10621  010B82  C156  F396         	movff	?___flmul,ringBufferLUT@angle_degrees
 10622  010B86  C157  F397         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 10623  010B8A  C158  F398         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 10624  010B8E  C159  F399         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 10625                           
 10626                           ;ring_buffer_LUT.c: 478: dimming_period = (100 - percentage) * (0xFFFF / 100);
 10627  010B92  C3A7  F1B6         	movff	ringBufferLUT@percentage,??_ringBufferLUT
 10628  010B96  C3A8  F1B7         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
 10629  010B9A  0101               	movlb	1	; () banked
 10630  010B9C  1FB6               	comf	??_ringBufferLUT& (0+255),f,b
 10631  010B9E  1FB7               	comf	(??_ringBufferLUT+1)& (0+255),f,b
 10632  010BA0  4BB6               	infsnz	??_ringBufferLUT& (0+255),f,b
 10633  010BA2  2BB7               	incf	(??_ringBufferLUT+1)& (0+255),f,b
 10634  010BA4  0E64               	movlw	100
 10635  010BA6  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 10636  010BA8  6F17               	movwf	___wmul@multiplier& (0+255),b
 10637  010BAA  0E00               	movlw	0
 10638  010BAC  21B7               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
 10639  010BAE  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
 10640  010BB0  0E02               	movlw	2
 10641  010BB2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10642  010BB4  0E8F               	movlw	143
 10643  010BB6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 10644  010BB8  ECD0  F0C4         	call	___wmul	;wreg free
 10645  010BBC  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 10646  010BC0  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 10647                           
 10648                           ;ring_buffer_LUT.c: 480: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10649  010BC4  0E00               	movlw	0
 10650  010BC6  0101               	movlb	1	; () banked
 10651  010BC8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10652  010BCA  0E00               	movlw	0
 10653  010BCC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10654  010BCE  0E02               	movlw	2
 10655  010BD0  ECEA  F09E         	call	_terminal_textAttributes
 10656                           
 10657                           ;ring_buffer_LUT.c: 481: printf("Dimming has been set to %d percent\n\r", percentage);
 10658  010BD4  0E13               	movlw	low STR_113
 10659  010BD6  0101               	movlb	1	; () banked
 10660  010BD8  6F82               	movwf	printf@f& (0+255),b
 10661  010BDA  0EFB               	movlw	high STR_113
 10662  010BDC  6F83               	movwf	(printf@f+1)& (0+255),b
 10663  010BDE  C3A7  F184         	movff	ringBufferLUT@percentage,?_printf+2
 10664  010BE2  C3A8  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 10665  010BE6  EC9F  F087         	call	_printf	;wreg free
 10666                           
 10667                           ;ring_buffer_LUT.c: 482: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 10668  010BEA  0E1C               	movlw	low STR_114
 10669  010BEC  0101               	movlb	1	; () banked
 10670  010BEE  6F82               	movwf	printf@f& (0+255),b
 10671  010BF0  0EF6               	movlw	high STR_114
 10672  010BF2  6F83               	movwf	(printf@f+1)& (0+255),b
 10673  010BF4  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 10674  010BF8  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 10675  010BFC  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 10676  010C00  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 10677  010C04  C396  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 10678  010C08  C397  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 10679  010C0C  C398  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 10680  010C10  C399  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 10681  010C14  EC9F  F087         	call	_printf	;wreg free
 10682                           
 10683                           ;ring_buffer_LUT.c: 483: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 10684  010C18  0E53               	movlw	low STR_115
 10685  010C1A  0101               	movlb	1	; () banked
 10686  010C1C  6F82               	movwf	printf@f& (0+255),b
 10687  010C1E  0EF5               	movlw	high STR_115
 10688  010C20  6F83               	movwf	(printf@f+1)& (0+255),b
 10689  010C22  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 10690  010C26  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 10691  010C2A  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 10692  010C2E  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 10693  010C32  EC9F  F087         	call	_printf	;wreg free
 10694                           
 10695                           ;ring_buffer_LUT.c: 484: terminal_textAttributesReset();
 10696  010C36  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10697                           
 10698                           ;ring_buffer_LUT.c: 486: }
 10699                           ;ring_buffer_LUT.c: 488: }
 10700  010C3A  0012               	return	
 10701  010C3C                     l1282:
 10702                           
 10703                           ;ring_buffer_LUT.c: 491: else if((0 == strcmp(line, "Device On Time?"))) {
 10704  010C3C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10705  010C40  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10706  010C44  0E35               	movlw	low STR_116
 10707  010C46  0101               	movlb	1	; () banked
 10708  010C48  6F19               	movwf	strcmp@s2& (0+255),b
 10709  010C4A  0EFE               	movlw	high STR_116
 10710  010C4C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10711  010C4E  ECAF  F0C1         	call	_strcmp	;wreg free
 10712  010C52  0101               	movlb	1	; () banked
 10713  010C54  5117               	movf	?_strcmp& (0+255),w,b
 10714  010C56  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10715  010C58  A4D8               	btfss	status,2,c
 10716  010C5A  D019               	goto	l1290
 10717                           
 10718                           ; BSR set to: 1
 10719                           ;ring_buffer_LUT.c: 493: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10720  010C5C  0E00               	movlw	0
 10721  010C5E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10722  010C60  0E00               	movlw	0
 10723  010C62  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10724  010C64  0E02               	movlw	2
 10725  010C66  ECEA  F09E         	call	_terminal_textAttributes
 10726                           
 10727                           ;ring_buffer_LUT.c: 494: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 10728  010C6A  0ED4               	movlw	low STR_117
 10729  010C6C  0101               	movlb	1	; () banked
 10730  010C6E  6F82               	movwf	printf@f& (0+255),b
 10731  010C70  0EF6               	movlw	high STR_117
 10732  010C72  6F83               	movwf	(printf@f+1)& (0+255),b
 10733  010C74  C24C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 10734  010C78  C24D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 10735  010C7C  C24E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 10736  010C80  C24F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 10737  010C84  EC9F  F087         	call	_printf	;wreg free
 10738                           
 10739                           ;ring_buffer_LUT.c: 495: terminal_textAttributesReset();
 10740  010C88  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10741                           
 10742                           ;ring_buffer_LUT.c: 497: }
 10743  010C8C  0012               	return	
 10744  010C8E                     l1290:
 10745                           
 10746                           ;ring_buffer_LUT.c: 500: else if((0 == strcmp(line, "Load On Time?"))) {
 10747  010C8E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10748  010C92  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10749  010C96  0EDB               	movlw	low STR_118
 10750  010C98  0101               	movlb	1	; () banked
 10751  010C9A  6F19               	movwf	strcmp@s2& (0+255),b
 10752  010C9C  0EFE               	movlw	high STR_118
 10753  010C9E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10754  010CA0  ECAF  F0C1         	call	_strcmp	;wreg free
 10755  010CA4  0101               	movlb	1	; () banked
 10756  010CA6  5117               	movf	?_strcmp& (0+255),w,b
 10757  010CA8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10758  010CAA  A4D8               	btfss	status,2,c
 10759  010CAC  D019               	goto	l1292
 10760                           
 10761                           ; BSR set to: 1
 10762                           ;ring_buffer_LUT.c: 502: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10763  010CAE  0E00               	movlw	0
 10764  010CB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10765  010CB2  0E00               	movlw	0
 10766  010CB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10767  010CB6  0E02               	movlw	2
 10768  010CB8  ECEA  F09E         	call	_terminal_textAttributes
 10769                           
 10770                           ;ring_buffer_LUT.c: 503: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 10771  010CBC  0E22               	movlw	low STR_119
 10772  010CBE  0101               	movlb	1	; () banked
 10773  010CC0  6F82               	movwf	printf@f& (0+255),b
 10774  010CC2  0EF8               	movlw	high STR_119
 10775  010CC4  6F83               	movwf	(printf@f+1)& (0+255),b
 10776  010CC6  C248  F184         	movff	_load_on_time,?_printf+2	;volatile
 10777  010CCA  C249  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 10778  010CCE  C24A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 10779  010CD2  C24B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 10780  010CD6  EC9F  F087         	call	_printf	;wreg free
 10781                           
 10782                           ;ring_buffer_LUT.c: 504: terminal_textAttributesReset();
 10783  010CDA  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10784                           
 10785                           ;ring_buffer_LUT.c: 506: }
 10786  010CDE  0012               	return	
 10787  010CE0                     l1292:
 10788                           
 10789                           ;ring_buffer_LUT.c: 509: else if((0 == strcmp(line, "Max RMS Current?"))) {
 10790  010CE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10791  010CE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10792  010CE8  0EE3               	movlw	low STR_120
 10793  010CEA  0101               	movlb	1	; () banked
 10794  010CEC  6F19               	movwf	strcmp@s2& (0+255),b
 10795  010CEE  0EFD               	movlw	high STR_120
 10796  010CF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10797  010CF2  ECAF  F0C1         	call	_strcmp	;wreg free
 10798  010CF6  0101               	movlb	1	; () banked
 10799  010CF8  5117               	movf	?_strcmp& (0+255),w,b
 10800  010CFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10801  010CFC  A4D8               	btfss	status,2,c
 10802  010CFE  D030               	goto	l1294
 10803                           
 10804                           ; BSR set to: 1
 10805                           ;ring_buffer_LUT.c: 512: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 10806  010D00  0E43               	movlw	low _max_Irms_address
 10807  010D02  6EF6               	movwf	tblptrl,c
 10808  010D04                     	if	1	;There is more than 1 active tblptr byte
 10809  010D04  0EE9               	movlw	high _max_Irms_address
 10810  010D06  6EF7               	movwf	tblptrh,c
 10811  010D08                     	endif
 10812  010D08                     	if	1	;There are 3 active tblptr bytes
 10813  010D08  0E00               	movlw	low (_max_Irms_address shr (0+16))
 10814  010D0A  6EF8               	movwf	tblptru,c
 10815  010D0C                     	endif
 10816  010D0C  0009               	tblrd		*+
 10817  010D0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 10818  010D12  000A               	tblrd		*-
 10819  010D14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 10820  010D18  EC35  F0C1         	call	_readDoubleFromEEPROM	;wreg free
 10821  010D1C  C119  F39A         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 10822  010D20  C11A  F39B         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 10823  010D24  C11B  F39C         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 10824  010D28  C11C  F39D         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 10825                           
 10826                           ;ring_buffer_LUT.c: 514: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10827  010D2C  0E00               	movlw	0
 10828  010D2E  0101               	movlb	1	; () banked
 10829  010D30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10830  010D32  0E00               	movlw	0
 10831  010D34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10832  010D36  0E06               	movlw	6
 10833  010D38  ECEA  F09E         	call	_terminal_textAttributes
 10834                           
 10835                           ;ring_buffer_LUT.c: 515: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 10836  010D3C  0E8B               	movlw	low STR_121
 10837  010D3E  0101               	movlb	1	; () banked
 10838  010D40  6F82               	movwf	printf@f& (0+255),b
 10839  010D42  0EF8               	movlw	high STR_121
 10840  010D44  6F83               	movwf	(printf@f+1)& (0+255),b
 10841  010D46  C39A  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 10842  010D4A  C39B  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 10843  010D4E  C39C  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 10844  010D52  C39D  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 10845  010D56  EC9F  F087         	call	_printf	;wreg free
 10846                           
 10847                           ;ring_buffer_LUT.c: 516: terminal_textAttributesReset();
 10848  010D5A  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10849                           
 10850                           ;ring_buffer_LUT.c: 518: }
 10851  010D5E  0012               	return	
 10852  010D60                     l1294:
 10853                           
 10854                           ;ring_buffer_LUT.c: 521: else if((0 == strcmp(line, "Max Power?"))) {
 10855  010D60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10856  010D64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10857  010D68  0E5C               	movlw	low STR_122
 10858  010D6A  0101               	movlb	1	; () banked
 10859  010D6C  6F19               	movwf	strcmp@s2& (0+255),b
 10860  010D6E  0EFF               	movlw	high STR_122
 10861  010D70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10862  010D72  ECAF  F0C1         	call	_strcmp	;wreg free
 10863  010D76  0101               	movlb	1	; () banked
 10864  010D78  5117               	movf	?_strcmp& (0+255),w,b
 10865  010D7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10866  010D7C  A4D8               	btfss	status,2,c
 10867  010D7E  D030               	goto	l1296
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;ring_buffer_LUT.c: 524: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 10871  010D80  0E41               	movlw	low _max_Power_address
 10872  010D82  6EF6               	movwf	tblptrl,c
 10873  010D84                     	if	1	;There is more than 1 active tblptr byte
 10874  010D84  0EE9               	movlw	high _max_Power_address
 10875  010D86  6EF7               	movwf	tblptrh,c
 10876  010D88                     	endif
 10877  010D88                     	if	1	;There are 3 active tblptr bytes
 10878  010D88  0E00               	movlw	low (_max_Power_address shr (0+16))
 10879  010D8A  6EF8               	movwf	tblptru,c
 10880  010D8C                     	endif
 10881  010D8C  0009               	tblrd		*+
 10882  010D8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 10883  010D92  000A               	tblrd		*-
 10884  010D94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 10885  010D98  EC35  F0C1         	call	_readDoubleFromEEPROM	;wreg free
 10886  010D9C  C119  F39E         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 10887  010DA0  C11A  F39F         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 10888  010DA4  C11B  F3A0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 10889  010DA8  C11C  F3A1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 10890                           
 10891                           ;ring_buffer_LUT.c: 526: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10892  010DAC  0E00               	movlw	0
 10893  010DAE  0101               	movlb	1	; () banked
 10894  010DB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10895  010DB2  0E00               	movlw	0
 10896  010DB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10897  010DB6  0E06               	movlw	6
 10898  010DB8  ECEA  F09E         	call	_terminal_textAttributes
 10899                           
 10900                           ;ring_buffer_LUT.c: 527: printf("Maximum recorded output Power is %.3f Watts\n\r", max_P
      +                          ower_print);
 10901  010DBC  0E79               	movlw	low STR_123
 10902  010DBE  0101               	movlb	1	; () banked
 10903  010DC0  6F82               	movwf	printf@f& (0+255),b
 10904  010DC2  0EF9               	movlw	high STR_123
 10905  010DC4  6F83               	movwf	(printf@f+1)& (0+255),b
 10906  010DC6  C39E  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 10907  010DCA  C39F  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 10908  010DCE  C3A0  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 10909  010DD2  C3A1  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 10910  010DD6  EC9F  F087         	call	_printf	;wreg free
 10911                           
 10912                           ;ring_buffer_LUT.c: 528: terminal_textAttributesReset();
 10913  010DDA  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10914                           
 10915                           ;ring_buffer_LUT.c: 530: }
 10916  010DDE  0012               	return	
 10917  010DE0                     l1296:
 10918                           
 10919                           ;ring_buffer_LUT.c: 533: else if((0 == strcmp(line, "Clear Max Values"))) {
 10920  010DE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10921  010DE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10922  010DE8  0EF4               	movlw	low STR_124
 10923  010DEA  0101               	movlb	1	; () banked
 10924  010DEC  6F19               	movwf	strcmp@s2& (0+255),b
 10925  010DEE  0EFD               	movlw	high STR_124
 10926  010DF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10927  010DF2  ECAF  F0C1         	call	_strcmp	;wreg free
 10928  010DF6  0101               	movlb	1	; () banked
 10929  010DF8  5117               	movf	?_strcmp& (0+255),w,b
 10930  010DFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10931  010DFC  A4D8               	btfss	status,2,c
 10932  010DFE  D03F               	goto	l1298
 10933                           
 10934                           ; BSR set to: 1
 10935                           ;ring_buffer_LUT.c: 535: writeDoubleToEEPROM(0.0, max_Irms_address);
 10936  010E00  0E00               	movlw	0
 10937  010E02  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 10938  010E04  0E00               	movlw	0
 10939  010E06  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 10940  010E08  0E00               	movlw	0
 10941  010E0A  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 10942  010E0C  0E00               	movlw	0
 10943  010E0E  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 10944  010E10  0E43               	movlw	low _max_Irms_address
 10945  010E12  6EF6               	movwf	tblptrl,c
 10946  010E14                     	if	1	;There is more than 1 active tblptr byte
 10947  010E14  0EE9               	movlw	high _max_Irms_address
 10948  010E16  6EF7               	movwf	tblptrh,c
 10949  010E18                     	endif
 10950  010E18                     	if	1	;There are 3 active tblptr bytes
 10951  010E18  0E00               	movlw	low (_max_Irms_address shr (0+16))
 10952  010E1A  6EF8               	movwf	tblptru,c
 10953  010E1C                     	endif
 10954  010E1C  0009               	tblrd		*+
 10955  010E1E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 10956  010E22  000A               	tblrd		*-
 10957  010E24  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 10958  010E28  EC87  F0C1         	call	_writeDoubleToEEPROM	;wreg free
 10959                           
 10960                           ;ring_buffer_LUT.c: 536: writeDoubleToEEPROM(0.0, max_Power_address);
 10961  010E2C  0E00               	movlw	0
 10962  010E2E  0101               	movlb	1	; () banked
 10963  010E30  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 10964  010E32  0E00               	movlw	0
 10965  010E34  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 10966  010E36  0E00               	movlw	0
 10967  010E38  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 10968  010E3A  0E00               	movlw	0
 10969  010E3C  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 10970  010E3E  0E41               	movlw	low _max_Power_address
 10971  010E40  6EF6               	movwf	tblptrl,c
 10972  010E42                     	if	1	;There is more than 1 active tblptr byte
 10973  010E42  0EE9               	movlw	high _max_Power_address
 10974  010E44  6EF7               	movwf	tblptrh,c
 10975  010E46                     	endif
 10976  010E46                     	if	1	;There are 3 active tblptr bytes
 10977  010E46  0E00               	movlw	low (_max_Power_address shr (0+16))
 10978  010E48  6EF8               	movwf	tblptru,c
 10979  010E4A                     	endif
 10980  010E4A  0009               	tblrd		*+
 10981  010E4C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 10982  010E50  000A               	tblrd		*-
 10983  010E52  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 10984  010E56  EC87  F0C1         	call	_writeDoubleToEEPROM	;wreg free
 10985                           
 10986                           ;ring_buffer_LUT.c: 538: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10987  010E5A  0E00               	movlw	0
 10988  010E5C  0101               	movlb	1	; () banked
 10989  010E5E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10990  010E60  0E00               	movlw	0
 10991  010E62  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10992  010E64  0E02               	movlw	2
 10993  010E66  ECEA  F09E         	call	_terminal_textAttributes
 10994                           
 10995                           ;ring_buffer_LUT.c: 539: printf("Maximum recorded values erased\n\r");
 10996  010E6A  0EC4               	movlw	low STR_125
 10997  010E6C  0101               	movlb	1	; () banked
 10998  010E6E  6F82               	movwf	printf@f& (0+255),b
 10999  010E70  0EFB               	movlw	high STR_125
 11000  010E72  6F83               	movwf	(printf@f+1)& (0+255),b
 11001  010E74  EC9F  F087         	call	_printf	;wreg free
 11002                           
 11003                           ;ring_buffer_LUT.c: 540: terminal_textAttributesReset();
 11004  010E78  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 11005                           
 11006                           ;ring_buffer_LUT.c: 542: }
 11007  010E7C  0012               	return	
 11008  010E7E                     l1298:
 11009                           
 11010                           ;ring_buffer_LUT.c: 546: else if((0 == strcmp(line, "Help"))) {
 11011  010E7E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11012  010E82  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11013  010E86  0EAB               	movlw	low STR_126
 11014  010E88  0101               	movlb	1	; () banked
 11015  010E8A  6F19               	movwf	strcmp@s2& (0+255),b
 11016  010E8C  0EFF               	movlw	high STR_126
 11017  010E8E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11018  010E90  ECAF  F0C1         	call	_strcmp	;wreg free
 11019  010E94  0101               	movlb	1	; () banked
 11020  010E96  5117               	movf	?_strcmp& (0+255),w,b
 11021  010E98  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11022  010E9A  A4D8               	btfss	status,2,c
 11023  010E9C  0012               	return	
 11024                           
 11025                           ; BSR set to: 1
 11026                           ;ring_buffer_LUT.c: 548: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 11027  010E9E  0E00               	movlw	0
 11028  010EA0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11029  010EA2  0E00               	movlw	0
 11030  010EA4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11031  010EA6  0E03               	movlw	3
 11032  010EA8  ECEA  F09E         	call	_terminal_textAttributes
 11033                           
 11034                           ;ring_buffer_LUT.c: 549: printf("List of supported commands:\n\r"
 11035                           ;ring_buffer_LUT.c: 551: "Device Commands:\n\r"
 11036                           ;ring_buffer_LUT.c: 552: "   Reset: Clears the terminal and resets the micro\n\r"
 11037                           ;ring_buffer_LUT.c: 553: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 11038                           ;ring_buffer_LUT.c: 554: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 11039                           ;ring_buffer_LUT.c: 555: "   *IDN?: Returns device identification string\n\r"
 11040                           ;ring_buffer_LUT.c: 556: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 11041  010EAC  0E95               	movlw	low STR_127
 11042  010EAE  0101               	movlb	1	; () banked
 11043  010EB0  6F82               	movwf	printf@f& (0+255),b
 11044  010EB2  0EE9               	movlw	high STR_127
 11045  010EB4  6F83               	movwf	(printf@f+1)& (0+255),b
 11046  010EB6  EC9F  F087         	call	_printf	;wreg free
 11047                           
 11048                           ;ring_buffer_LUT.c: 593: terminal_printNewline();
 11049  010EBA  EC03  F0C6         	call	_terminal_printNewline	;wreg free
 11050                           
 11051                           ;ring_buffer_LUT.c: 594: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 11052  010EBE  0E80               	movlw	low STR_128
 11053  010EC0  0101               	movlb	1	; () banked
 11054  010EC2  6F82               	movwf	printf@f& (0+255),b
 11055  010EC4  0EF7               	movlw	high STR_128
 11056  010EC6  6F83               	movwf	(printf@f+1)& (0+255),b
 11057  010EC8  EC9F  F087         	call	_printf	;wreg free
 11058                           
 11059                           ;ring_buffer_LUT.c: 596: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11060  010ECC  0E00               	movlw	0
 11061  010ECE  0101               	movlb	1	; () banked
 11062  010ED0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11063  010ED2  0E00               	movlw	0
 11064  010ED4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11065  010ED6  0E02               	movlw	2
 11066  010ED8  ECEA  F09E         	call	_terminal_textAttributes
 11067                           
 11068                           ;ring_buffer_LUT.c: 597: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 11069  010EDC  0E5B               	movlw	low STR_129
 11070  010EDE  0101               	movlb	1	; () banked
 11071  010EE0  6F82               	movwf	printf@f& (0+255),b
 11072  010EE2  0EF6               	movlw	high STR_129
 11073  010EE4  6F83               	movwf	(printf@f+1)& (0+255),b
 11074  010EE6  EC9F  F087         	call	_printf	;wreg free
 11075                           
 11076                           ;ring_buffer_LUT.c: 598: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11077  010EEA  0E00               	movlw	0
 11078  010EEC  0101               	movlb	1	; () banked
 11079  010EEE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11080  010EF0  0E00               	movlw	0
 11081  010EF2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11082  010EF4  0E06               	movlw	6
 11083  010EF6  ECEA  F09E         	call	_terminal_textAttributes
 11084                           
 11085                           ;ring_buffer_LUT.c: 599: printf("Measurement responses appear in cyan\n\r");
 11086  010EFA  0EA2               	movlw	low STR_130
 11087  010EFC  0101               	movlb	1	; () banked
 11088  010EFE  6F82               	movwf	printf@f& (0+255),b
 11089  010F00  0EFA               	movlw	high STR_130
 11090  010F02  6F83               	movwf	(printf@f+1)& (0+255),b
 11091  010F04  EC9F  F087         	call	_printf	;wreg free
 11092                           
 11093                           ;ring_buffer_LUT.c: 600: terminal_textAttributes(RED, BLACK, NORMAL);
 11094  010F08  0E00               	movlw	0
 11095  010F0A  0101               	movlb	1	; () banked
 11096  010F0C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11097  010F0E  0E00               	movlw	0
 11098  010F10  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11099  010F12  0E01               	movlw	1
 11100  010F14  ECEA  F09E         	call	_terminal_textAttributes
 11101                           
 11102                           ;ring_buffer_LUT.c: 601: printf("Errors and negative responses appear in red\n\r");
 11103  010F18  0E1D               	movlw	low STR_131
 11104  010F1A  0101               	movlb	1	; () banked
 11105  010F1C  6F82               	movwf	printf@f& (0+255),b
 11106  010F1E  0EF9               	movlw	high STR_131
 11107  010F20  6F83               	movwf	(printf@f+1)& (0+255),b
 11108  010F22  EC9F  F087         	call	_printf	;wreg free
 11109                           
 11110                           ;ring_buffer_LUT.c: 602: terminal_textAttributesReset();
 11111  010F26  ECE9  F0C5         	call	_terminal_textAttributesReset	;wreg free
 11112                           
 11113                           ;ring_buffer_LUT.c: 603: printf("User input appears in white\n\r");
 11114  010F2A  0E24               	movlw	low STR_132
 11115  010F2C  0101               	movlb	1	; () banked
 11116  010F2E  6F82               	movwf	printf@f& (0+255),b
 11117  010F30  0EFC               	movlw	high STR_132
 11118  010F32  6F83               	movwf	(printf@f+1)& (0+255),b
 11119  010F34  EC9F  F087         	call	_printf	;wreg free
 11120                           
 11121                           ;ring_buffer_LUT.c: 606: terminal_printNewline();
 11122  010F38  EC03  F0C6         	call	_terminal_printNewline	;wreg free
 11123  010F3C  0012               	return	
 11124  010F3E                     __end_of_ringBufferLUT:
 11125                           	opt stack 0
 11126                           tblptru	equ	0xFF8
 11127                           tblptrh	equ	0xFF7
 11128                           tblptrl	equ	0xFF6
 11129                           tablat	equ	0xFF5
 11130                           intcon	equ	0xFF2
 11131                           postinc0	equ	0xFEE
 11132                           wreg	equ	0xFE8
 11133                           indf1	equ	0xFE7
 11134                           postdec1	equ	0xFE5
 11135                           fsr1h	equ	0xFE2
 11136                           fsr1l	equ	0xFE1
 11137                           indf2	equ	0xFDF
 11138                           postinc2	equ	0xFDE
 11139                           fsr2h	equ	0xFDA
 11140                           fsr2l	equ	0xFD9
 11141                           status	equ	0xFD8
 11142                           
 11143 ;; *************** function _writeDoubleToEEPROM *****************
 11144 ;; Defined at:
 11145 ;;		line 6 in file "double_to_EEPROM.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;  input_double    4   27[BANK1 ] void 
 11148 ;;  starting_add    2   31[BANK1 ] unsigned int 
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;  byte_index      2   37[BANK1 ] int 
 11151 ;;  input_data      4   33[BANK1 ] struct .
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      void 
 11154 ;; Registers used:
 11155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11161 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11162 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11164 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11165 ;;Total ram usage:       12 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:   14
 11168 ;; This function calls:
 11169 ;;		_DATAEE_WriteByte
 11170 ;; This function is called by:
 11171 ;;		_main
 11172 ;;		_ringBufferLUT
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text4
 11177  01830E                     __ptext4:
 11178                           	opt stack 0
 11179  01830E                     _writeDoubleToEEPROM:
 11180                           	opt stack 16
 11181                           
 11182                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 11183                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 11184                           
 11185                           ;incstack = 0
 11186  01830E  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 11187  018312  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 11188  018316  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 11189  01831A  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 11190                           
 11191                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 11192  01831E  0E00               	movlw	0
 11193  018320  0101               	movlb	1	; () banked
 11194  018322  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 11195  018324  0E00               	movlw	0
 11196  018326  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 11197  018328                     l18828:
 11198                           
 11199                           ; BSR set to: 1
 11200  018328  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 11201  01832A  E118               	bnz	l1360
 11202  01832C  0E04               	movlw	4
 11203  01832E  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 11204  018330  B0D8               	btfsc	status,0,c
 11205  018332  0012               	return	
 11206                           
 11207                           ; BSR set to: 1
 11208                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 11209                           
 11210                           ; BSR set to: 1
 11211                           
 11212                           ; BSR set to: 1
 11213  018334  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 11214  018336  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 11215  018338  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 11216  01833A  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 11217  01833C  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 11218  01833E  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 11219  018340  0E21               	movlw	low writeDoubleToEEPROM@input_data
 11220  018342  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 11221  018344  6ED9               	movwf	fsr2l,c
 11222  018346  0E01               	movlw	high writeDoubleToEEPROM@input_data
 11223  018348  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 11224  01834A  6EDA               	movwf	fsr2h,c
 11225  01834C  50DF               	movf	indf2,w,c
 11226  01834E  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 11227  018350  EC63  F0C3         	call	_DATAEE_WriteByte	;wreg free
 11228  018354  0101               	movlb	1	; () banked
 11229  018356  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 11230  018358  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 11231  01835A  D7E6               	goto	l18828
 11232  01835C                     l1360:
 11233                           
 11234                           ; BSR set to: 1
 11235  01835C  0012               	return		;funcret
 11236  01835E                     __end_of_writeDoubleToEEPROM:
 11237                           	opt stack 0
 11238                           tblptru	equ	0xFF8
 11239                           tblptrh	equ	0xFF7
 11240                           tblptrl	equ	0xFF6
 11241                           tablat	equ	0xFF5
 11242                           intcon	equ	0xFF2
 11243                           postinc0	equ	0xFEE
 11244                           wreg	equ	0xFE8
 11245                           indf1	equ	0xFE7
 11246                           postdec1	equ	0xFE5
 11247                           fsr1h	equ	0xFE2
 11248                           fsr1l	equ	0xFE1
 11249                           indf2	equ	0xFDF
 11250                           postinc2	equ	0xFDE
 11251                           fsr2h	equ	0xFDA
 11252                           fsr2l	equ	0xFD9
 11253                           status	equ	0xFD8
 11254                           
 11255 ;; *************** function _DATAEE_WriteByte *****************
 11256 ;; Defined at:
 11257 ;;		line 168 in file "mcc_generated_files/memory.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  bAdd            2   23[BANK1 ] unsigned int 
 11260 ;;  bData           1   25[BANK1 ] unsigned char 
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      void 
 11265 ;; Registers used:
 11266 ;;		wreg, status,2, status,0
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11272 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11273 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11275 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;Total ram usage:        4 bytes
 11277 ;; Hardware stack levels used:    1
 11278 ;; Hardware stack levels required when called:   13
 11279 ;; This function calls:
 11280 ;;		Nothing
 11281 ;; This function is called by:
 11282 ;;		_writeDoubleToEEPROM
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text5
 11287  0186C6                     __ptext5:
 11288                           	opt stack 0
 11289  0186C6                     _DATAEE_WriteByte:
 11290                           	opt stack 16
 11291                           
 11292                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 11293                           
 11294                           ; BSR set to: 1
 11295                           ;incstack = 0
 11296  0186C6  0E00               	movlw	0
 11297  0186C8  BEF2               	btfsc	intcon,7,c	;volatile
 11298  0186CA  0E01               	movlw	1
 11299  0186CC  0101               	movlb	1	; () banked
 11300  0186CE  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 11301                           
 11302                           ; BSR set to: 1
 11303                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 11304  0186D0  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 11305  0186D2  0B03               	andlw	3
 11306  0186D4  6E75               	movwf	3957,c	;volatile
 11307                           
 11308                           ; BSR set to: 1
 11309                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 11310  0186D6  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 11311                           
 11312                           ; BSR set to: 1
 11313                           ;memory.c: 174: NVMDAT = bData;
 11314  0186DA  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 11315                           
 11316                           ; BSR set to: 1
 11317                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 11318  0186DE  0E3F               	movlw	-193
 11319  0186E0  1677               	andwf	3959,f,c	;volsfr
 11320                           
 11321                           ; BSR set to: 1
 11322                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 11323  0186E2  8477               	bsf	3959,2,c	;volsfr
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;memory.c: 177: INTCONbits.GIE = 0;
 11327  0186E4  9EF2               	bcf	intcon,7,c	;volatile
 11328                           
 11329                           ; BSR set to: 1
 11330                           ;memory.c: 178: NVMCON2 = 0x55;
 11331  0186E6  0E55               	movlw	85
 11332  0186E8  6E78               	movwf	3960,c	;volsfr
 11333                           
 11334                           ; BSR set to: 1
 11335                           ;memory.c: 179: NVMCON2 = 0xAA;
 11336  0186EA  0EAA               	movlw	170
 11337  0186EC  6E78               	movwf	3960,c	;volsfr
 11338                           
 11339                           ; BSR set to: 1
 11340                           ;memory.c: 180: NVMCON1bits.WR = 1;
 11341  0186EE  8277               	bsf	3959,1,c	;volsfr
 11342  0186F0                     
 11343                           ; BSR set to: 1
 11344                           ;memory.c: 183: {
 11345  0186F0  B277               	btfsc	3959,1,c	;volsfr
 11346  0186F2  D7FE               	goto	l789
 11347                           
 11348                           ;memory.c: 184: }
 11349                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 11350  0186F4  9477               	bcf	3959,2,c	;volsfr
 11351                           
 11352                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 11353  0186F6  0101               	movlb	1	; () banked
 11354  0186F8  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 11355  0186FA  D002               	bra	u25095
 11356  0186FC  9EF2               	bcf	intcon,7,c	;volatile
 11357  0186FE  D001               	bra	u25096
 11358  018700                     u25095:
 11359  018700  8EF2               	bsf	intcon,7,c	;volatile
 11360  018702                     u25096:
 11361  018702  0012               	return		;funcret
 11362  018704                     __end_of_DATAEE_WriteByte:
 11363                           	opt stack 0
 11364                           tblptru	equ	0xFF8
 11365                           tblptrh	equ	0xFF7
 11366                           tblptrl	equ	0xFF6
 11367                           tablat	equ	0xFF5
 11368                           intcon	equ	0xFF2
 11369                           postinc0	equ	0xFEE
 11370                           wreg	equ	0xFE8
 11371                           indf1	equ	0xFE7
 11372                           postdec1	equ	0xFE5
 11373                           fsr1h	equ	0xFE2
 11374                           fsr1l	equ	0xFE1
 11375                           indf2	equ	0xFDF
 11376                           postinc2	equ	0xFDE
 11377                           fsr2h	equ	0xFDA
 11378                           fsr2l	equ	0xFD9
 11379                           status	equ	0xFD8
 11380                           
 11381 ;; *************** function _terminal_textAttributesReset *****************
 11382 ;; Defined at:
 11383 ;;		line 223 in file "ring_buffer_interface.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;		None
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      void 
 11390 ;; Registers used:
 11391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;Total ram usage:        0 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:   17
 11404 ;; This function calls:
 11405 ;;		_terminal_textAttributes
 11406 ;; This function is called by:
 11407 ;;		_main
 11408 ;;		_ringBufferLUT
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text6
 11413  018BD2                     __ptext6:
 11414                           	opt stack 0
 11415  018BD2                     _terminal_textAttributesReset:
 11416                           	opt stack 13
 11417                           
 11418                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 11419                           
 11420                           ;incstack = 0
 11421  018BD2  0E00               	movlw	0
 11422  018BD4  0101               	movlb	1	; () banked
 11423  018BD6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11424  018BD8  0E00               	movlw	0
 11425  018BDA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11426  018BDC  0E07               	movlw	7
 11427  018BDE  ECEA  F09E         	call	_terminal_textAttributes
 11428  018BE2  0012               	return		;funcret
 11429  018BE4                     __end_of_terminal_textAttributesReset:
 11430                           	opt stack 0
 11431                           tblptru	equ	0xFF8
 11432                           tblptrh	equ	0xFF7
 11433                           tblptrl	equ	0xFF6
 11434                           tablat	equ	0xFF5
 11435                           intcon	equ	0xFF2
 11436                           postinc0	equ	0xFEE
 11437                           wreg	equ	0xFE8
 11438                           indf1	equ	0xFE7
 11439                           postdec1	equ	0xFE5
 11440                           fsr1h	equ	0xFE2
 11441                           fsr1l	equ	0xFE1
 11442                           indf2	equ	0xFDF
 11443                           postinc2	equ	0xFDE
 11444                           fsr2h	equ	0xFDA
 11445                           fsr2l	equ	0xFD9
 11446                           status	equ	0xFD8
 11447                           
 11448 ;; *************** function _terminal_textAttributes *****************
 11449 ;; Defined at:
 11450 ;;		line 115 in file "ring_buffer_interface.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  foreground_c    1    wreg     enum E17893
 11453 ;;  background_c    1  178[BANK1 ] enum E17893
 11454 ;;  input_attrib    1  179[BANK1 ] enum E17885
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;  foreground_c    1    0[BANK2 ] enum E17893
 11457 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11467 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11468 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11470 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 11471 ;;Total ram usage:       18 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:   16
 11474 ;; This function calls:
 11475 ;;		_printf
 11476 ;;		_strcat
 11477 ;;		_strncpy
 11478 ;; This function is called by:
 11479 ;;		_terminal_textAttributesReset
 11480 ;;		_ringBufferLUT
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           	psect	text7
 11485  013DD4                     __ptext7:
 11486                           	opt stack 0
 11487  013DD4                     _terminal_textAttributes:
 11488                           	opt stack 13
 11489                           
 11490                           ;incstack = 0
 11491                           ;terminal_textAttributes@foreground_color stored from wreg
 11492  013DD4  0102               	movlb	2	; () banked
 11493  013DD6  6FD4               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 11494                           
 11495                           ;ring_buffer_interface.c: 119: char output_buff[15];
 11496                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 11497  013DD8  0ED5               	movlw	low terminal_textAttributes@output_buff
 11498  013DDA  0101               	movlb	1	; () banked
 11499  013DDC  6F17               	movwf	strncpy@to& (0+255),b
 11500  013DDE  0E02               	movlw	high terminal_textAttributes@output_buff
 11501  013DE0  6F18               	movwf	(strncpy@to+1)& (0+255),b
 11502  013DE2  0EF6               	movlw	low STR_11
 11503  013DE4  6F19               	movwf	strncpy@from& (0+255),b
 11504  013DE6  0EFF               	movlw	high STR_11
 11505  013DE8  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 11506  013DEA  0E00               	movlw	0
 11507  013DEC  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 11508  013DEE  0E0F               	movlw	15
 11509  013DF0  6F1B               	movwf	strncpy@size& (0+255),b
 11510  013DF2  EC0E  F0C0         	call	_strncpy	;wreg free
 11511                           
 11512                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 11513  013DF6  D054               	goto	l1080
 11514  013DF8                     
 11515                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 11516  013DF8  0ED5               	movlw	low terminal_textAttributes@output_buff
 11517  013DFA  0101               	movlb	1	; () banked
 11518  013DFC  6F17               	movwf	strcat@to& (0+255),b
 11519  013DFE  0E02               	movlw	high terminal_textAttributes@output_buff
 11520  013E00  6F18               	movwf	(strcat@to+1)& (0+255),b
 11521  013E02  0ECA               	movlw	low (STR_20+1)
 11522  013E04  6F19               	movwf	strcat@from& (0+255),b
 11523  013E06  0EFF               	movlw	high (STR_20+1)
 11524  013E08  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11525  013E0A  ECFE  F0C1         	call	_strcat	;wreg free
 11526                           
 11527                           ;ring_buffer_interface.c: 127: break;
 11528  013E0E  D05D               	goto	l1082
 11529  013E10                     
 11530                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 11531  013E10  0ED5               	movlw	low terminal_textAttributes@output_buff
 11532  013E12  0101               	movlb	1	; () banked
 11533  013E14  6F17               	movwf	strcat@to& (0+255),b
 11534  013E16  0E02               	movlw	high terminal_textAttributes@output_buff
 11535  013E18  6F18               	movwf	(strcat@to+1)& (0+255),b
 11536  013E1A  0E24               	movlw	low (STR_67+20)
 11537  013E1C  6F19               	movwf	strcat@from& (0+255),b
 11538  013E1E  0EFD               	movlw	high (STR_67+20)
 11539  013E20  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11540  013E22  ECFE  F0C1         	call	_strcat	;wreg free
 11541                           
 11542                           ;ring_buffer_interface.c: 130: break;
 11543  013E26  D051               	goto	l1082
 11544  013E28                     
 11545                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 11546  013E28  0ED5               	movlw	low terminal_textAttributes@output_buff
 11547  013E2A  0101               	movlb	1	; () banked
 11548  013E2C  6F17               	movwf	strcat@to& (0+255),b
 11549  013E2E  0E02               	movlw	high terminal_textAttributes@output_buff
 11550  013E30  6F18               	movwf	(strcat@to+1)& (0+255),b
 11551  013E32  0EDF               	movlw	low (STR_24+1)
 11552  013E34  6F19               	movwf	strcat@from& (0+255),b
 11553  013E36  0EFF               	movlw	high (STR_24+1)
 11554  013E38  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11555  013E3A  ECFE  F0C1         	call	_strcat	;wreg free
 11556                           
 11557                           ;ring_buffer_interface.c: 133: break;
 11558  013E3E  D045               	goto	l1082
 11559  013E40                     
 11560                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 11561  013E40  0ED5               	movlw	low terminal_textAttributes@output_buff
 11562  013E42  0101               	movlb	1	; () banked
 11563  013E44  6F17               	movwf	strcat@to& (0+255),b
 11564  013E46  0E02               	movlw	high terminal_textAttributes@output_buff
 11565  013E48  6F18               	movwf	(strcat@to+1)& (0+255),b
 11566  013E4A  0EE5               	movlw	low (STR_25+1)
 11567  013E4C  6F19               	movwf	strcat@from& (0+255),b
 11568  013E4E  0EFF               	movlw	high (STR_25+1)
 11569  013E50  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11570  013E52  ECFE  F0C1         	call	_strcat	;wreg free
 11571                           
 11572                           ;ring_buffer_interface.c: 136: break;
 11573  013E56  D039               	goto	l1082
 11574  013E58                     
 11575                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 11576  013E58  0ED5               	movlw	low terminal_textAttributes@output_buff
 11577  013E5A  0101               	movlb	1	; () banked
 11578  013E5C  6F17               	movwf	strcat@to& (0+255),b
 11579  013E5E  0E02               	movlw	high terminal_textAttributes@output_buff
 11580  013E60  6F18               	movwf	(strcat@to+1)& (0+255),b
 11581  013E62  0EF1               	movlw	low (STR_27+1)
 11582  013E64  6F19               	movwf	strcat@from& (0+255),b
 11583  013E66  0EFF               	movlw	high (STR_27+1)
 11584  013E68  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11585  013E6A  ECFE  F0C1         	call	_strcat	;wreg free
 11586                           
 11587                           ;ring_buffer_interface.c: 139: break;
 11588  013E6E  D02D               	goto	l1082
 11589  013E70                     
 11590                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 11591  013E70  0ED5               	movlw	low terminal_textAttributes@output_buff
 11592  013E72  0101               	movlb	1	; () banked
 11593  013E74  6F17               	movwf	strcat@to& (0+255),b
 11594  013E76  0E02               	movlw	high terminal_textAttributes@output_buff
 11595  013E78  6F18               	movwf	(strcat@to+1)& (0+255),b
 11596  013E7A  0EF9               	movlw	low STR_17
 11597  013E7C  6F19               	movwf	strcat@from& (0+255),b
 11598  013E7E  0EFF               	movlw	high STR_17
 11599  013E80  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11600  013E82  ECFE  F0C1         	call	_strcat	;wreg free
 11601                           
 11602                           ;ring_buffer_interface.c: 142: break;
 11603  013E86  D021               	goto	l1082
 11604  013E88                     
 11605                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 11606  013E88  0ED5               	movlw	low terminal_textAttributes@output_buff
 11607  013E8A  0101               	movlb	1	; () banked
 11608  013E8C  6F17               	movwf	strcat@to& (0+255),b
 11609  013E8E  0E02               	movlw	high terminal_textAttributes@output_buff
 11610  013E90  6F18               	movwf	(strcat@to+1)& (0+255),b
 11611  013E92  0ECA               	movlw	low (STR_20+1)
 11612  013E94  6F19               	movwf	strcat@from& (0+255),b
 11613  013E96  0EFF               	movlw	high (STR_20+1)
 11614  013E98  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11615  013E9A  ECFE  F0C1         	call	_strcat	;wreg free
 11616                           
 11617                           ;ring_buffer_interface.c: 147: }
 11618                           
 11619                           ;ring_buffer_interface.c: 146: break;
 11620  013E9E  D015               	goto	l1082
 11621  013EA0                     l1080:
 11622  013EA0  0101               	movlb	1	; () banked
 11623  013EA2  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 11624                           
 11625                           ; Switch size 1, requested type "space"
 11626                           ; Number of cases is 6, Range of values is 0 to 5
 11627                           ; switch strategies available:
 11628                           ; Name         Instructions Cycles
 11629                           ; simple_byte           19    10 (average)
 11630                           ;	Chosen strategy is simple_byte
 11631  013EA4  0A00               	xorlw	0	; case 0
 11632  013EA6  B4D8               	btfsc	status,2,c
 11633  013EA8  D7A7               	goto	l1081
 11634  013EAA  0A01               	xorlw	1	; case 1
 11635  013EAC  B4D8               	btfsc	status,2,c
 11636  013EAE  D7B0               	goto	l1083
 11637  013EB0  0A03               	xorlw	3	; case 2
 11638  013EB2  B4D8               	btfsc	status,2,c
 11639  013EB4  D7B9               	goto	l1084
 11640  013EB6  0A01               	xorlw	1	; case 3
 11641  013EB8  B4D8               	btfsc	status,2,c
 11642  013EBA  D7C2               	goto	l1085
 11643  013EBC  0A07               	xorlw	7	; case 4
 11644  013EBE  B4D8               	btfsc	status,2,c
 11645  013EC0  D7CB               	goto	l1086
 11646  013EC2  0A01               	xorlw	1	; case 5
 11647  013EC4  B4D8               	btfsc	status,2,c
 11648  013EC6  D7D4               	goto	l1087
 11649  013EC8  D7DF               	goto	l1088
 11650  013ECA                     l1082:
 11651                           
 11652                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 11653                           
 11654                           ; BSR set to: 1
 11655  013ECA  0ED5               	movlw	low terminal_textAttributes@output_buff
 11656  013ECC  0101               	movlb	1	; () banked
 11657  013ECE  6F17               	movwf	strcat@to& (0+255),b
 11658  013ED0  0E02               	movlw	high terminal_textAttributes@output_buff
 11659  013ED2  6F18               	movwf	(strcat@to+1)& (0+255),b
 11660  013ED4  0EFB               	movlw	low STR_19
 11661  013ED6  6F19               	movwf	strcat@from& (0+255),b
 11662  013ED8  0EFF               	movlw	high STR_19
 11663  013EDA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11664  013EDC  ECFE  F0C1         	call	_strcat	;wreg free
 11665                           
 11666                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 11667  013EE0  D06C               	goto	l1089
 11668  013EE2                     
 11669                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 11670  013EE2  0ED5               	movlw	low terminal_textAttributes@output_buff
 11671  013EE4  0101               	movlb	1	; () banked
 11672  013EE6  6F17               	movwf	strcat@to& (0+255),b
 11673  013EE8  0E02               	movlw	high terminal_textAttributes@output_buff
 11674  013EEA  6F18               	movwf	(strcat@to+1)& (0+255),b
 11675  013EEC  0EC9               	movlw	low STR_20
 11676  013EEE  6F19               	movwf	strcat@from& (0+255),b
 11677  013EF0  0EFF               	movlw	high STR_20
 11678  013EF2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11679  013EF4  ECFE  F0C1         	call	_strcat	;wreg free
 11680                           
 11681                           ;ring_buffer_interface.c: 155: break;
 11682  013EF8  D07B               	goto	l1091
 11683  013EFA                     
 11684                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 11685  013EFA  0ED5               	movlw	low terminal_textAttributes@output_buff
 11686  013EFC  0101               	movlb	1	; () banked
 11687  013EFE  6F17               	movwf	strcat@to& (0+255),b
 11688  013F00  0E02               	movlw	high terminal_textAttributes@output_buff
 11689  013F02  6F18               	movwf	(strcat@to+1)& (0+255),b
 11690  013F04  0ECC               	movlw	low STR_21
 11691  013F06  6F19               	movwf	strcat@from& (0+255),b
 11692  013F08  0EFF               	movlw	high STR_21
 11693  013F0A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11694  013F0C  ECFE  F0C1         	call	_strcat	;wreg free
 11695                           
 11696                           ;ring_buffer_interface.c: 158: break;
 11697  013F10  D06F               	goto	l1091
 11698  013F12                     
 11699                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 11700  013F12  0ED5               	movlw	low terminal_textAttributes@output_buff
 11701  013F14  0101               	movlb	1	; () banked
 11702  013F16  6F17               	movwf	strcat@to& (0+255),b
 11703  013F18  0E02               	movlw	high terminal_textAttributes@output_buff
 11704  013F1A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11705  013F1C  0ED2               	movlw	low STR_22
 11706  013F1E  6F19               	movwf	strcat@from& (0+255),b
 11707  013F20  0EFF               	movlw	high STR_22
 11708  013F22  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11709  013F24  ECFE  F0C1         	call	_strcat	;wreg free
 11710                           
 11711                           ;ring_buffer_interface.c: 161: break;
 11712  013F28  D063               	goto	l1091
 11713  013F2A                     
 11714                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 11715  013F2A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11716  013F2C  0101               	movlb	1	; () banked
 11717  013F2E  6F17               	movwf	strcat@to& (0+255),b
 11718  013F30  0E02               	movlw	high terminal_textAttributes@output_buff
 11719  013F32  6F18               	movwf	(strcat@to+1)& (0+255),b
 11720  013F34  0ED8               	movlw	low STR_23
 11721  013F36  6F19               	movwf	strcat@from& (0+255),b
 11722  013F38  0EFF               	movlw	high STR_23
 11723  013F3A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11724  013F3C  ECFE  F0C1         	call	_strcat	;wreg free
 11725                           
 11726                           ;ring_buffer_interface.c: 164: break;
 11727  013F40  D057               	goto	l1091
 11728  013F42                     
 11729                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 11730  013F42  0ED5               	movlw	low terminal_textAttributes@output_buff
 11731  013F44  0101               	movlb	1	; () banked
 11732  013F46  6F17               	movwf	strcat@to& (0+255),b
 11733  013F48  0E02               	movlw	high terminal_textAttributes@output_buff
 11734  013F4A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11735  013F4C  0EDE               	movlw	low STR_24
 11736  013F4E  6F19               	movwf	strcat@from& (0+255),b
 11737  013F50  0EFF               	movlw	high STR_24
 11738  013F52  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11739  013F54  ECFE  F0C1         	call	_strcat	;wreg free
 11740                           
 11741                           ;ring_buffer_interface.c: 167: break;
 11742  013F58  D04B               	goto	l1091
 11743  013F5A                     
 11744                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 11745  013F5A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11746  013F5C  0101               	movlb	1	; () banked
 11747  013F5E  6F17               	movwf	strcat@to& (0+255),b
 11748  013F60  0E02               	movlw	high terminal_textAttributes@output_buff
 11749  013F62  6F18               	movwf	(strcat@to+1)& (0+255),b
 11750  013F64  0EE4               	movlw	low STR_25
 11751  013F66  6F19               	movwf	strcat@from& (0+255),b
 11752  013F68  0EFF               	movlw	high STR_25
 11753  013F6A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11754  013F6C  ECFE  F0C1         	call	_strcat	;wreg free
 11755                           
 11756                           ;ring_buffer_interface.c: 170: break;
 11757  013F70  D03F               	goto	l1091
 11758  013F72                     
 11759                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 11760  013F72  0ED5               	movlw	low terminal_textAttributes@output_buff
 11761  013F74  0101               	movlb	1	; () banked
 11762  013F76  6F17               	movwf	strcat@to& (0+255),b
 11763  013F78  0E02               	movlw	high terminal_textAttributes@output_buff
 11764  013F7A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11765  013F7C  0EEA               	movlw	low STR_26
 11766  013F7E  6F19               	movwf	strcat@from& (0+255),b
 11767  013F80  0EFF               	movlw	high STR_26
 11768  013F82  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11769  013F84  ECFE  F0C1         	call	_strcat	;wreg free
 11770                           
 11771                           ;ring_buffer_interface.c: 173: break;
 11772  013F88  D033               	goto	l1091
 11773  013F8A                     
 11774                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 11775  013F8A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11776  013F8C  0101               	movlb	1	; () banked
 11777  013F8E  6F17               	movwf	strcat@to& (0+255),b
 11778  013F90  0E02               	movlw	high terminal_textAttributes@output_buff
 11779  013F92  6F18               	movwf	(strcat@to+1)& (0+255),b
 11780  013F94  0EF0               	movlw	low STR_27
 11781  013F96  6F19               	movwf	strcat@from& (0+255),b
 11782  013F98  0EFF               	movlw	high STR_27
 11783  013F9A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11784  013F9C  ECFE  F0C1         	call	_strcat	;wreg free
 11785                           
 11786                           ;ring_buffer_interface.c: 176: break;
 11787  013FA0  D027               	goto	l1091
 11788  013FA2                     
 11789                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 11790  013FA2  0ED5               	movlw	low terminal_textAttributes@output_buff
 11791  013FA4  0101               	movlb	1	; () banked
 11792  013FA6  6F17               	movwf	strcat@to& (0+255),b
 11793  013FA8  0E02               	movlw	high terminal_textAttributes@output_buff
 11794  013FAA  6F18               	movwf	(strcat@to+1)& (0+255),b
 11795  013FAC  0EF0               	movlw	low STR_27
 11796  013FAE  6F19               	movwf	strcat@from& (0+255),b
 11797  013FB0  0EFF               	movlw	high STR_27
 11798  013FB2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11799  013FB4  ECFE  F0C1         	call	_strcat	;wreg free
 11800                           
 11801                           ;ring_buffer_interface.c: 181: }
 11802                           
 11803                           ;ring_buffer_interface.c: 180: break;
 11804  013FB8  D01B               	goto	l1091
 11805  013FBA                     l1089:
 11806  013FBA  0102               	movlb	2	; () banked
 11807  013FBC  51D4               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 11808                           
 11809                           ; Switch size 1, requested type "space"
 11810                           ; Number of cases is 8, Range of values is 0 to 7
 11811                           ; switch strategies available:
 11812                           ; Name         Instructions Cycles
 11813                           ; simple_byte           25    13 (average)
 11814                           ;	Chosen strategy is simple_byte
 11815  013FBE  0A00               	xorlw	0	; case 0
 11816  013FC0  B4D8               	btfsc	status,2,c
 11817  013FC2  D78F               	goto	l1090
 11818  013FC4  0A01               	xorlw	1	; case 1
 11819  013FC6  B4D8               	btfsc	status,2,c
 11820  013FC8  D798               	goto	l1092
 11821  013FCA  0A03               	xorlw	3	; case 2
 11822  013FCC  B4D8               	btfsc	status,2,c
 11823  013FCE  D7A1               	goto	l1093
 11824  013FD0  0A01               	xorlw	1	; case 3
 11825  013FD2  B4D8               	btfsc	status,2,c
 11826  013FD4  D7AA               	goto	l1094
 11827  013FD6  0A07               	xorlw	7	; case 4
 11828  013FD8  B4D8               	btfsc	status,2,c
 11829  013FDA  D7B3               	goto	l1095
 11830  013FDC  0A01               	xorlw	1	; case 5
 11831  013FDE  B4D8               	btfsc	status,2,c
 11832  013FE0  D7BC               	goto	l1096
 11833  013FE2  0A03               	xorlw	3	; case 6
 11834  013FE4  B4D8               	btfsc	status,2,c
 11835  013FE6  D7C5               	goto	l1097
 11836  013FE8  0A01               	xorlw	1	; case 7
 11837  013FEA  B4D8               	btfsc	status,2,c
 11838  013FEC  D7CE               	goto	l1098
 11839  013FEE  D7D9               	goto	l1099
 11840  013FF0                     l1091:
 11841                           
 11842                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 11843                           
 11844                           ; BSR set to: 2
 11845  013FF0  0ED5               	movlw	low terminal_textAttributes@output_buff
 11846  013FF2  0101               	movlb	1	; () banked
 11847  013FF4  6F17               	movwf	strcat@to& (0+255),b
 11848  013FF6  0E02               	movlw	high terminal_textAttributes@output_buff
 11849  013FF8  6F18               	movwf	(strcat@to+1)& (0+255),b
 11850  013FFA  0EFB               	movlw	low STR_19
 11851  013FFC  6F19               	movwf	strcat@from& (0+255),b
 11852  013FFE  0EFF               	movlw	high STR_19
 11853  014000  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11854  014002  ECFE  F0C1         	call	_strcat	;wreg free
 11855                           
 11856                           ;ring_buffer_interface.c: 185: switch (background_color) {
 11857  014006  D06C               	goto	l1100
 11858  014008                     
 11859                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 11860  014008  0ED5               	movlw	low terminal_textAttributes@output_buff
 11861  01400A  0101               	movlb	1	; () banked
 11862  01400C  6F17               	movwf	strcat@to& (0+255),b
 11863  01400E  0E02               	movlw	high terminal_textAttributes@output_buff
 11864  014010  6F18               	movwf	(strcat@to+1)& (0+255),b
 11865  014012  0E42               	movlw	low (STR_133+9)
 11866  014014  6F19               	movwf	strcat@from& (0+255),b
 11867  014016  0EFF               	movlw	high (STR_133+9)
 11868  014018  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11869  01401A  ECFE  F0C1         	call	_strcat	;wreg free
 11870                           
 11871                           ;ring_buffer_interface.c: 189: break;
 11872  01401E  D07B               	goto	l1102
 11873  014020                     
 11874                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 11875  014020  0ED5               	movlw	low terminal_textAttributes@output_buff
 11876  014022  0101               	movlb	1	; () banked
 11877  014024  6F17               	movwf	strcat@to& (0+255),b
 11878  014026  0E02               	movlw	high terminal_textAttributes@output_buff
 11879  014028  6F18               	movwf	(strcat@to+1)& (0+255),b
 11880  01402A  0ECF               	movlw	low STR_31
 11881  01402C  6F19               	movwf	strcat@from& (0+255),b
 11882  01402E  0EFF               	movlw	high STR_31
 11883  014030  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11884  014032  ECFE  F0C1         	call	_strcat	;wreg free
 11885                           
 11886                           ;ring_buffer_interface.c: 192: break;
 11887  014036  D06F               	goto	l1102
 11888  014038                     
 11889                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 11890  014038  0ED5               	movlw	low terminal_textAttributes@output_buff
 11891  01403A  0101               	movlb	1	; () banked
 11892  01403C  6F17               	movwf	strcat@to& (0+255),b
 11893  01403E  0E02               	movlw	high terminal_textAttributes@output_buff
 11894  014040  6F18               	movwf	(strcat@to+1)& (0+255),b
 11895  014042  0ED5               	movlw	low STR_32
 11896  014044  6F19               	movwf	strcat@from& (0+255),b
 11897  014046  0EFF               	movlw	high STR_32
 11898  014048  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11899  01404A  ECFE  F0C1         	call	_strcat	;wreg free
 11900                           
 11901                           ;ring_buffer_interface.c: 195: break;
 11902  01404E  D063               	goto	l1102
 11903  014050                     
 11904                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 11905  014050  0ED5               	movlw	low terminal_textAttributes@output_buff
 11906  014052  0101               	movlb	1	; () banked
 11907  014054  6F17               	movwf	strcat@to& (0+255),b
 11908  014056  0E02               	movlw	high terminal_textAttributes@output_buff
 11909  014058  6F18               	movwf	(strcat@to+1)& (0+255),b
 11910  01405A  0EDB               	movlw	low STR_33
 11911  01405C  6F19               	movwf	strcat@from& (0+255),b
 11912  01405E  0EFF               	movlw	high STR_33
 11913  014060  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11914  014062  ECFE  F0C1         	call	_strcat	;wreg free
 11915                           
 11916                           ;ring_buffer_interface.c: 198: break;
 11917  014066  D057               	goto	l1102
 11918  014068                     
 11919                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 11920  014068  0ED5               	movlw	low terminal_textAttributes@output_buff
 11921  01406A  0101               	movlb	1	; () banked
 11922  01406C  6F17               	movwf	strcat@to& (0+255),b
 11923  01406E  0E02               	movlw	high terminal_textAttributes@output_buff
 11924  014070  6F18               	movwf	(strcat@to+1)& (0+255),b
 11925  014072  0EE1               	movlw	low STR_34
 11926  014074  6F19               	movwf	strcat@from& (0+255),b
 11927  014076  0EFF               	movlw	high STR_34
 11928  014078  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11929  01407A  ECFE  F0C1         	call	_strcat	;wreg free
 11930                           
 11931                           ;ring_buffer_interface.c: 201: break;
 11932  01407E  D04B               	goto	l1102
 11933  014080                     
 11934                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 11935  014080  0ED5               	movlw	low terminal_textAttributes@output_buff
 11936  014082  0101               	movlb	1	; () banked
 11937  014084  6F17               	movwf	strcat@to& (0+255),b
 11938  014086  0E02               	movlw	high terminal_textAttributes@output_buff
 11939  014088  6F18               	movwf	(strcat@to+1)& (0+255),b
 11940  01408A  0EE7               	movlw	low STR_35
 11941  01408C  6F19               	movwf	strcat@from& (0+255),b
 11942  01408E  0EFF               	movlw	high STR_35
 11943  014090  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11944  014092  ECFE  F0C1         	call	_strcat	;wreg free
 11945                           
 11946                           ;ring_buffer_interface.c: 204: break;
 11947  014096  D03F               	goto	l1102
 11948  014098                     
 11949                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 11950  014098  0ED5               	movlw	low terminal_textAttributes@output_buff
 11951  01409A  0101               	movlb	1	; () banked
 11952  01409C  6F17               	movwf	strcat@to& (0+255),b
 11953  01409E  0E02               	movlw	high terminal_textAttributes@output_buff
 11954  0140A0  6F18               	movwf	(strcat@to+1)& (0+255),b
 11955  0140A2  0EED               	movlw	low STR_36
 11956  0140A4  6F19               	movwf	strcat@from& (0+255),b
 11957  0140A6  0EFF               	movlw	high STR_36
 11958  0140A8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11959  0140AA  ECFE  F0C1         	call	_strcat	;wreg free
 11960                           
 11961                           ;ring_buffer_interface.c: 207: break;
 11962  0140AE  D033               	goto	l1102
 11963  0140B0                     
 11964                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 11965  0140B0  0ED5               	movlw	low terminal_textAttributes@output_buff
 11966  0140B2  0101               	movlb	1	; () banked
 11967  0140B4  6F17               	movwf	strcat@to& (0+255),b
 11968  0140B6  0E02               	movlw	high terminal_textAttributes@output_buff
 11969  0140B8  6F18               	movwf	(strcat@to+1)& (0+255),b
 11970  0140BA  0EF3               	movlw	low STR_37
 11971  0140BC  6F19               	movwf	strcat@from& (0+255),b
 11972  0140BE  0EFF               	movlw	high STR_37
 11973  0140C0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11974  0140C2  ECFE  F0C1         	call	_strcat	;wreg free
 11975                           
 11976                           ;ring_buffer_interface.c: 210: break;
 11977  0140C6  D027               	goto	l1102
 11978  0140C8                     
 11979                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 11980  0140C8  0ED5               	movlw	low terminal_textAttributes@output_buff
 11981  0140CA  0101               	movlb	1	; () banked
 11982  0140CC  6F17               	movwf	strcat@to& (0+255),b
 11983  0140CE  0E02               	movlw	high terminal_textAttributes@output_buff
 11984  0140D0  6F18               	movwf	(strcat@to+1)& (0+255),b
 11985  0140D2  0EF3               	movlw	low STR_37
 11986  0140D4  6F19               	movwf	strcat@from& (0+255),b
 11987  0140D6  0EFF               	movlw	high STR_37
 11988  0140D8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11989  0140DA  ECFE  F0C1         	call	_strcat	;wreg free
 11990                           
 11991                           ;ring_buffer_interface.c: 215: }
 11992                           
 11993                           ;ring_buffer_interface.c: 214: break;
 11994  0140DE  D01B               	goto	l1102
 11995  0140E0                     l1100:
 11996  0140E0  0101               	movlb	1	; () banked
 11997  0140E2  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 11998                           
 11999                           ; Switch size 1, requested type "space"
 12000                           ; Number of cases is 8, Range of values is 0 to 7
 12001                           ; switch strategies available:
 12002                           ; Name         Instructions Cycles
 12003                           ; simple_byte           25    13 (average)
 12004                           ;	Chosen strategy is simple_byte
 12005  0140E4  0A00               	xorlw	0	; case 0
 12006  0140E6  B4D8               	btfsc	status,2,c
 12007  0140E8  D78F               	goto	l1101
 12008  0140EA  0A01               	xorlw	1	; case 1
 12009  0140EC  B4D8               	btfsc	status,2,c
 12010  0140EE  D798               	goto	l1103
 12011  0140F0  0A03               	xorlw	3	; case 2
 12012  0140F2  B4D8               	btfsc	status,2,c
 12013  0140F4  D7A1               	goto	l1104
 12014  0140F6  0A01               	xorlw	1	; case 3
 12015  0140F8  B4D8               	btfsc	status,2,c
 12016  0140FA  D7AA               	goto	l1105
 12017  0140FC  0A07               	xorlw	7	; case 4
 12018  0140FE  B4D8               	btfsc	status,2,c
 12019  014100  D7B3               	goto	l1106
 12020  014102  0A01               	xorlw	1	; case 5
 12021  014104  B4D8               	btfsc	status,2,c
 12022  014106  D7BC               	goto	l1107
 12023  014108  0A03               	xorlw	3	; case 6
 12024  01410A  B4D8               	btfsc	status,2,c
 12025  01410C  D7C5               	goto	l1108
 12026  01410E  0A01               	xorlw	1	; case 7
 12027  014110  B4D8               	btfsc	status,2,c
 12028  014112  D7CE               	goto	l1109
 12029  014114  D7D9               	goto	l1110
 12030  014116                     l1102:
 12031                           
 12032                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 12033                           
 12034                           ; BSR set to: 1
 12035  014116  0ED5               	movlw	low terminal_textAttributes@output_buff
 12036  014118  0101               	movlb	1	; () banked
 12037  01411A  6F17               	movwf	strcat@to& (0+255),b
 12038  01411C  0E02               	movlw	high terminal_textAttributes@output_buff
 12039  01411E  6F18               	movwf	(strcat@to+1)& (0+255),b
 12040  014120  0EFD               	movlw	low STR_39
 12041  014122  6F19               	movwf	strcat@from& (0+255),b
 12042  014124  0EFF               	movlw	high STR_39
 12043  014126  6F1A               	movwf	(strcat@from+1)& (0+255),b
 12044  014128  ECFE  F0C1         	call	_strcat	;wreg free
 12045                           
 12046                           ;ring_buffer_interface.c: 219: printf(output_buff);
 12047  01412C  0ED5               	movlw	low terminal_textAttributes@output_buff
 12048  01412E  0101               	movlb	1	; () banked
 12049  014130  6F82               	movwf	printf@f& (0+255),b
 12050  014132  0E02               	movlw	high terminal_textAttributes@output_buff
 12051  014134  6F83               	movwf	(printf@f+1)& (0+255),b
 12052  014136  EC9F  F087         	call	_printf	;wreg free
 12053  01413A  0012               	return		;funcret
 12054  01413C                     __end_of_terminal_textAttributes:
 12055                           	opt stack 0
 12056                           tblptru	equ	0xFF8
 12057                           tblptrh	equ	0xFF7
 12058                           tblptrl	equ	0xFF6
 12059                           tablat	equ	0xFF5
 12060                           intcon	equ	0xFF2
 12061                           postinc0	equ	0xFEE
 12062                           wreg	equ	0xFE8
 12063                           indf1	equ	0xFE7
 12064                           postdec1	equ	0xFE5
 12065                           fsr1h	equ	0xFE2
 12066                           fsr1l	equ	0xFE1
 12067                           indf2	equ	0xFDF
 12068                           postinc2	equ	0xFDE
 12069                           fsr2h	equ	0xFDA
 12070                           fsr2l	equ	0xFD9
 12071                           status	equ	0xFD8
 12072                           
 12073 ;; *************** function _strncpy *****************
 12074 ;; Defined at:
 12075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12078 ;;		 -> terminal_textAttributes@output_buff(15), 
 12079 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12080 ;;		 -> STR_11(3), 
 12081 ;;  size            2   27[BANK1 ] unsigned int 
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 12084 ;;		 -> terminal_textAttributes@output_buff(15), 
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  2   23[BANK1 ] PTR unsigned char 
 12087 ;; Registers used:
 12088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12094 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12095 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12097 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12098 ;;Total ram usage:        8 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:   13
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_terminal_textAttributes
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           	psect	text8
 12109  01801C                     __ptext8:
 12110                           	opt stack 0
 12111  01801C                     _strncpy:
 12112                           	opt stack 15
 12113                           
 12114                           ;incstack = 0
 12115  01801C  C117  F11D         	movff	strncpy@to,strncpy@cp
 12116  018020  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 12117  018024  D018               	goto	l2265
 12118  018026  0101               	movlb	1	; () banked
 12119  018028  071B               	decf	strncpy@size& (0+255),f,b
 12120  01802A  A0D8               	btfss	status,0,c
 12121  01802C  071C               	decf	(strncpy@size+1)& (0+255),f,b
 12122                           
 12123                           ; BSR set to: 1
 12124  01802E  C119  FFF6         	movff	strncpy@from,tblptrl
 12125  018032  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 12126  018036  4B19               	infsnz	strncpy@from& (0+255),f,b
 12127  018038  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 12128  01803A                     	if	0	;tblptru may be non-zero
 12129  01803A                     	endif
 12130  01803A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12131  01803A  0E00               	movlw	low (__mediumconst shr (0+16))
 12132  01803C  6EF8               	movwf	tblptru,c
 12133  01803E                     	endif
 12134  01803E  C11D  FFD9         	movff	strncpy@cp,fsr2l
 12135  018042  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 12136  018046  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 12137  018048  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 12138  01804A  0008               	tblrd		*
 12139  01804C  CFF5 FFDF          	movff	tablat,indf2
 12140  018050  50DF               	movf	indf2,w,c
 12141  018052  B4D8               	btfsc	status,2,c
 12142  018054  D00E               	goto	l2267
 12143  018056                     l2265:
 12144                           
 12145                           ; BSR set to: 1
 12146                           
 12147                           ; BSR set to: 1
 12148  018056  0101               	movlb	1	; () banked
 12149  018058  511B               	movf	strncpy@size& (0+255),w,b
 12150  01805A  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 12151  01805C  B4D8               	btfsc	status,2,c
 12152  01805E  D009               	goto	l2267
 12153  018060  D7E2               	goto	l2264
 12154  018062                     l18640:
 12155                           
 12156                           ; BSR set to: 1
 12157  018062  C11D  FFD9         	movff	strncpy@cp,fsr2l
 12158  018066  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 12159  01806A  0E00               	movlw	0
 12160  01806C  6EDF               	movwf	indf2,c
 12161                           
 12162                           ; BSR set to: 1
 12163  01806E  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 12164  018070  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 12165  018072                     l2267:
 12166                           
 12167                           ; BSR set to: 1
 12168                           
 12169                           ; BSR set to: 1
 12170  018072  071B               	decf	strncpy@size& (0+255),f,b
 12171  018074  A0D8               	btfss	status,0,c
 12172  018076  071C               	decf	(strncpy@size+1)& (0+255),f,b
 12173  018078  291B               	incf	strncpy@size& (0+255),w,b
 12174  01807A  E1F3               	bnz	l18640
 12175  01807C  291C               	incf	(strncpy@size+1)& (0+255),w,b
 12176  01807E  B4D8               	btfsc	status,2,c
 12177  018080  0012               	return	
 12178  018082  D7EF               	goto	l2268
 12179  018084                     __end_of_strncpy:
 12180                           	opt stack 0
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           intcon	equ	0xFF2
 12186                           postinc0	equ	0xFEE
 12187                           wreg	equ	0xFE8
 12188                           indf1	equ	0xFE7
 12189                           postdec1	equ	0xFE5
 12190                           fsr1h	equ	0xFE2
 12191                           fsr1l	equ	0xFE1
 12192                           indf2	equ	0xFDF
 12193                           postinc2	equ	0xFDE
 12194                           fsr2h	equ	0xFDA
 12195                           fsr2l	equ	0xFD9
 12196                           status	equ	0xFD8
 12197                           
 12198 ;; *************** function _strcat *****************
 12199 ;; Defined at:
 12200 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12203 ;;		 -> terminal_textAttributes@output_buff(15), 
 12204 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12205 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 12206 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 12207 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 12208 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 12209 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 12210 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 12211 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12214 ;;		 -> terminal_textAttributes@output_buff(15), 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  2   23[BANK1 ] PTR unsigned char 
 12217 ;; Registers used:
 12218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12224 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12225 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12227 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12228 ;;Total ram usage:        6 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:   13
 12231 ;; This function calls:
 12232 ;;		Nothing
 12233 ;; This function is called by:
 12234 ;;		_terminal_textAttributes
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           	psect	text9
 12239  0183FC                     __ptext9:
 12240                           	opt stack 0
 12241  0183FC                     _strcat:
 12242                           	opt stack 15
 12243                           
 12244                           ; BSR set to: 1
 12245                           ;incstack = 0
 12246  0183FC  C117  F11B         	movff	strcat@to,strcat@cp
 12247  018400  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 12248  018404  D003               	goto	l2234
 12249  018406  0101               	movlb	1	; () banked
 12250  018408  4B1B               	infsnz	strcat@cp& (0+255),f,b
 12251  01840A  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 12252  01840C                     l2234:
 12253                           
 12254                           ; BSR set to: 1
 12255  01840C  C11B  FFD9         	movff	strcat@cp,fsr2l
 12256  018410  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 12257  018414  50DF               	movf	indf2,w,c
 12258  018416  B4D8               	btfsc	status,2,c
 12259  018418  D006               	goto	l2237
 12260  01841A  D7F5               	goto	l2235
 12261  01841C  0101               	movlb	1	; () banked
 12262  01841E  4B1B               	infsnz	strcat@cp& (0+255),f,b
 12263  018420  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 12264  018422  4B19               	infsnz	strcat@from& (0+255),f,b
 12265  018424  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 12266  018426                     l2237:
 12267                           
 12268                           ; BSR set to: 1
 12269  018426  C119  FFF6         	movff	strcat@from,tblptrl
 12270  01842A  C11A  FFF7         	movff	strcat@from+1,tblptrh
 12271  01842E                     	if	0	;tblptru may be non-zero
 12272  01842E                     	endif
 12273  01842E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12274  01842E  0E00               	movlw	low (__mediumconst shr (0+16))
 12275  018430  6EF8               	movwf	tblptru,c
 12276  018432                     	endif
 12277  018432  C11B  FFD9         	movff	strcat@cp,fsr2l
 12278  018436  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 12279  01843A  0008               	tblrd		*
 12280  01843C  CFF5 FFDF          	movff	tablat,indf2
 12281  018440  50DF               	movf	indf2,w,c
 12282  018442  B4D8               	btfsc	status,2,c
 12283  018444  0012               	return	
 12284  018446  D7EA               	goto	l2238
 12285  018448                     __end_of_strcat:
 12286                           	opt stack 0
 12287                           tblptru	equ	0xFF8
 12288                           tblptrh	equ	0xFF7
 12289                           tblptrl	equ	0xFF6
 12290                           tablat	equ	0xFF5
 12291                           intcon	equ	0xFF2
 12292                           postinc0	equ	0xFEE
 12293                           wreg	equ	0xFE8
 12294                           indf1	equ	0xFE7
 12295                           postdec1	equ	0xFE5
 12296                           fsr1h	equ	0xFE2
 12297                           fsr1l	equ	0xFE1
 12298                           indf2	equ	0xFDF
 12299                           postinc2	equ	0xFDE
 12300                           fsr2h	equ	0xFDA
 12301                           fsr2l	equ	0xFD9
 12302                           status	equ	0xFD8
 12303                           
 12304 ;; *************** function _terminal_printNewline *****************
 12305 ;; Defined at:
 12306 ;;		line 230 in file "ring_buffer_interface.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;		None
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12324 ;;Total ram usage:        0 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:   16
 12327 ;; This function calls:
 12328 ;;		_printf
 12329 ;; This function is called by:
 12330 ;;		_ringBufferLUT
 12331 ;; This function uses a non-reentrant model
 12332 ;;
 12333                           
 12334                           	psect	text10
 12335  018C06                     __ptext10:
 12336                           	opt stack 0
 12337  018C06                     _terminal_printNewline:
 12338                           	opt stack 12
 12339                           
 12340                           ;ring_buffer_interface.c: 232: printf("\n\r");
 12341                           
 12342                           ;incstack = 0
 12343  018C06  0E97               	movlw	low (STR_115+68)
 12344  018C08  0101               	movlb	1	; () banked
 12345  018C0A  6F82               	movwf	printf@f& (0+255),b
 12346  018C0C  0EF5               	movlw	high (STR_115+68)
 12347  018C0E  6F83               	movwf	(printf@f+1)& (0+255),b
 12348  018C10  EC9F  F087         	call	_printf	;wreg free
 12349  018C14  0012               	return		;funcret
 12350  018C16                     __end_of_terminal_printNewline:
 12351                           	opt stack 0
 12352                           tblptru	equ	0xFF8
 12353                           tblptrh	equ	0xFF7
 12354                           tblptrl	equ	0xFF6
 12355                           tablat	equ	0xFF5
 12356                           intcon	equ	0xFF2
 12357                           postinc0	equ	0xFEE
 12358                           wreg	equ	0xFE8
 12359                           indf1	equ	0xFE7
 12360                           postdec1	equ	0xFE5
 12361                           fsr1h	equ	0xFE2
 12362                           fsr1l	equ	0xFE1
 12363                           indf2	equ	0xFDF
 12364                           postinc2	equ	0xFDE
 12365                           fsr2h	equ	0xFDA
 12366                           fsr2l	equ	0xFD9
 12367                           status	equ	0xFD8
 12368                           
 12369 ;; *************** function _strstr *****************
 12370 ;; Defined at:
 12371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 12374 ;;		 -> NULL(0), line(64), 
 12375 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 12376 ;;		 -> STR_109(25), 
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  2   38[BANK1 ] PTR unsigned char 
 12381 ;; Registers used:
 12382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12388 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12391 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12392 ;;Total ram usage:        4 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:   14
 12395 ;; This function calls:
 12396 ;;		_strchr
 12397 ;;		_strlen
 12398 ;;		_strncmp
 12399 ;; This function is called by:
 12400 ;;		_ringBufferLUT
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           	psect	text11
 12405  017AD0                     __ptext11:
 12406                           	opt stack 0
 12407  017AD0                     _strstr:
 12408                           	opt stack 14
 12409                           
 12410                           ;incstack = 0
 12411  017AD0  D034               	goto	l2279
 12412  017AD2  C126  F11D         	movff	strstr@s1,strncmp@s1
 12413  017AD6  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 12414  017ADA  C128  F11F         	movff	strstr@s2,strncmp@s2
 12415  017ADE  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 12416  017AE2  C128  F117         	movff	strstr@s2,strlen@s
 12417  017AE6  C129  F118         	movff	strstr@s2+1,strlen@s+1
 12418  017AEA  EC09  F0C1         	call	_strlen	;wreg free
 12419  017AEE  C117  F121         	movff	?_strlen,strncmp@len
 12420  017AF2  C118  F122         	movff	?_strlen+1,strncmp@len+1
 12421  017AF6  EC20  F0BD         	call	_strncmp	;wreg free
 12422  017AFA  0101               	movlb	1	; () banked
 12423  017AFC  511D               	movf	?_strncmp& (0+255),w,b
 12424  017AFE  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 12425  017B00  A4D8               	btfss	status,2,c
 12426  017B02  D005               	goto	l2281
 12427                           
 12428                           ; BSR set to: 1
 12429  017B04  C126  F126         	movff	strstr@s1,?_strstr
 12430  017B08  C127  F127         	movff	strstr@s1+1,?_strstr+1
 12431                           
 12432                           ; BSR set to: 1
 12433  017B0C  0012               	return	
 12434  017B0E                     l2281:
 12435                           
 12436                           ; BSR set to: 1
 12437                           
 12438                           ; BSR set to: 1
 12439  017B0E  0E01               	movlw	1
 12440  017B10  2526               	addwf	strstr@s1& (0+255),w,b
 12441  017B12  6F17               	movwf	strchr@ptr& (0+255),b
 12442  017B14  0E00               	movlw	0
 12443  017B16  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 12444  017B18  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 12445  017B1A  C128  FFF6         	movff	strstr@s2,tblptrl
 12446  017B1E  C129  FFF7         	movff	strstr@s2+1,tblptrh
 12447  017B22                     	if	0	;tblptru may be non-zero
 12448  017B22                     	endif
 12449  017B22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12450  017B22  0E00               	movlw	low (__mediumconst shr (0+16))
 12451  017B24  6EF8               	movwf	tblptru,c
 12452  017B26                     	endif
 12453  017B26  0008               	tblrd		*
 12454  017B28  50F5               	movf	tablat,w,c
 12455  017B2A  6F19               	movwf	strchr@chr& (0+255),b
 12456  017B2C  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 12457  017B2E  ECBE  F0C3         	call	_strchr	;wreg free
 12458  017B32  C117  F126         	movff	?_strchr,strstr@s1
 12459  017B36  C118  F127         	movff	?_strchr+1,strstr@s1+1
 12460  017B3A                     l2279:
 12461  017B3A  0101               	movlb	1	; () banked
 12462  017B3C  5126               	movf	strstr@s1& (0+255),w,b
 12463  017B3E  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 12464  017B40  B4D8               	btfsc	status,2,c
 12465  017B42  D007               	goto	u25290
 12466                           
 12467                           ; BSR set to: 1
 12468  017B44  C126  FFD9         	movff	strstr@s1,fsr2l
 12469  017B48  C127  FFDA         	movff	strstr@s1+1,fsr2h
 12470  017B4C  50DF               	movf	indf2,w,c
 12471  017B4E  A4D8               	btfss	status,2,c
 12472  017B50  D7C0               	goto	l2280
 12473  017B52                     u25290:
 12474                           
 12475                           ; BSR set to: 1
 12476                           
 12477                           ; BSR set to: 1
 12478                           
 12479                           ; BSR set to: 1
 12480  017B52  0E00               	movlw	0
 12481  017B54  6F26               	movwf	?_strstr& (0+255),b
 12482  017B56  0E00               	movlw	0
 12483  017B58  6F27               	movwf	(?_strstr+1)& (0+255),b
 12484  017B5A  0012               	return	
 12485  017B5C                     __end_of_strstr:
 12486                           	opt stack 0
 12487                           tblptru	equ	0xFF8
 12488                           tblptrh	equ	0xFF7
 12489                           tblptrl	equ	0xFF6
 12490                           tablat	equ	0xFF5
 12491                           intcon	equ	0xFF2
 12492                           postinc0	equ	0xFEE
 12493                           wreg	equ	0xFE8
 12494                           indf1	equ	0xFE7
 12495                           postdec1	equ	0xFE5
 12496                           fsr1h	equ	0xFE2
 12497                           fsr1l	equ	0xFE1
 12498                           indf2	equ	0xFDF
 12499                           postinc2	equ	0xFDE
 12500                           fsr2h	equ	0xFDA
 12501                           fsr2l	equ	0xFD9
 12502                           status	equ	0xFD8
 12503                           
 12504 ;; *************** function _strncmp *****************
 12505 ;; Defined at:
 12506 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 12509 ;;		 -> NULL(0), line(64), 
 12510 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 12511 ;;		 -> STR_109(25), 
 12512 ;;  len             2   33[BANK1 ] unsigned int 
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;		None
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  2   29[BANK1 ] int 
 12517 ;; Registers used:
 12518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12519 ;; Tracked objects:
 12520 ;;		On entry : 0/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12524 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12526 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12527 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12528 ;;Total ram usage:        9 bytes
 12529 ;; Hardware stack levels used:    1
 12530 ;; Hardware stack levels required when called:   13
 12531 ;; This function calls:
 12532 ;;		Nothing
 12533 ;; This function is called by:
 12534 ;;		_strstr
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text12
 12539  017A40                     __ptext12:
 12540                           	opt stack 0
 12541  017A40                     _strncmp:
 12542                           	opt stack 14
 12543                           
 12544                           ; BSR set to: 1
 12545                           ;incstack = 0
 12546  017A40  D039               	goto	l2338
 12547  017A42                     l18780:
 12548  017A42  C11D  FFD9         	movff	strncmp@s1,fsr2l
 12549  017A46  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 12550  017A4A  50DF               	movf	indf2,w,c
 12551  017A4C  B4D8               	btfsc	status,2,c
 12552  017A4E  D012               	goto	u25130
 12553  017A50  C11D  FFD9         	movff	strncmp@s1,fsr2l
 12554  017A54  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 12555  017A58  50DF               	movf	indf2,w,c
 12556  017A5A  0101               	movlb	1	; () banked
 12557  017A5C  6F23               	movwf	??_strncmp& (0+255),b
 12558  017A5E  C11F  FFF6         	movff	strncmp@s2,tblptrl
 12559  017A62  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 12560  017A66                     	if	0	;tblptru may be non-zero
 12561  017A66                     	endif
 12562  017A66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12563  017A66  0E00               	movlw	low (__mediumconst shr (0+16))
 12564  017A68  6EF8               	movwf	tblptru,c
 12565  017A6A                     	endif
 12566  017A6A  0008               	tblrd		*
 12567  017A6C  50F5               	movf	tablat,w,c
 12568  017A6E  1923               	xorwf	??_strncmp& (0+255),w,b
 12569  017A70  B4D8               	btfsc	status,2,c
 12570  017A72  D01C               	goto	l2340
 12571  017A74                     u25130:
 12572                           
 12573                           ; BSR set to: 1
 12574  017A74  C11F  FFF6         	movff	strncmp@s2,tblptrl
 12575  017A78  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 12576  017A7C                     	if	0	;tblptru may be non-zero
 12577  017A7C                     	endif
 12578  017A7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12579  017A7C  0E00               	movlw	low (__mediumconst shr (0+16))
 12580  017A7E  6EF8               	movwf	tblptru,c
 12581  017A80                     	endif
 12582  017A80  0008               	tblrd		*
 12583  017A82  50F5               	movf	tablat,w,c
 12584  017A84  0101               	movlb	1	; () banked
 12585  017A86  6F23               	movwf	??_strncmp& (0+255),b
 12586  017A88  6B24               	clrf	(??_strncmp+1)& (0+255),b
 12587  017A8A  1F23               	comf	??_strncmp& (0+255),f,b
 12588  017A8C  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 12589  017A8E  4B23               	infsnz	??_strncmp& (0+255),f,b
 12590  017A90  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 12591  017A92  C11D  FFD9         	movff	strncmp@s1,fsr2l
 12592  017A96  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 12593  017A9A  50DF               	movf	indf2,w,c
 12594  017A9C  6F25               	movwf	(??_strncmp+2)& (0+255),b
 12595  017A9E  5125               	movf	(??_strncmp+2)& (0+255),w,b
 12596  017AA0  2523               	addwf	??_strncmp& (0+255),w,b
 12597  017AA2  6F1D               	movwf	?_strncmp& (0+255),b
 12598  017AA4  0E00               	movlw	0
 12599  017AA6  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 12600  017AA8  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 12601                           
 12602                           ; BSR set to: 1
 12603  017AAA  0012               	return	
 12604  017AAC                     l2340:
 12605                           
 12606                           ; BSR set to: 1
 12607                           
 12608                           ; BSR set to: 1
 12609  017AAC  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 12610  017AAE  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 12611  017AB0  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 12612  017AB2  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 12613  017AB4                     l2338:
 12614                           
 12615                           ; BSR set to: 1
 12616  017AB4  0101               	movlb	1	; () banked
 12617  017AB6  0721               	decf	strncmp@len& (0+255),f,b
 12618  017AB8  A0D8               	btfss	status,0,c
 12619  017ABA  0722               	decf	(strncmp@len+1)& (0+255),f,b
 12620  017ABC  2921               	incf	strncmp@len& (0+255),w,b
 12621  017ABE  E1C1               	bnz	l18780
 12622  017AC0  2922               	incf	(strncmp@len+1)& (0+255),w,b
 12623  017AC2  A4D8               	btfss	status,2,c
 12624  017AC4  D7BE               	goto	l2339
 12625                           
 12626                           ; BSR set to: 1
 12627                           
 12628                           ; BSR set to: 1
 12629  017AC6  0E00               	movlw	0
 12630  017AC8  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 12631  017ACA  0E00               	movlw	0
 12632  017ACC  6F1D               	movwf	?_strncmp& (0+255),b
 12633  017ACE  0012               	return	
 12634  017AD0                     __end_of_strncmp:
 12635                           	opt stack 0
 12636                           tblptru	equ	0xFF8
 12637                           tblptrh	equ	0xFF7
 12638                           tblptrl	equ	0xFF6
 12639                           tablat	equ	0xFF5
 12640                           intcon	equ	0xFF2
 12641                           postinc0	equ	0xFEE
 12642                           wreg	equ	0xFE8
 12643                           indf1	equ	0xFE7
 12644                           postdec1	equ	0xFE5
 12645                           fsr1h	equ	0xFE2
 12646                           fsr1l	equ	0xFE1
 12647                           indf2	equ	0xFDF
 12648                           postinc2	equ	0xFDE
 12649                           fsr2h	equ	0xFDA
 12650                           fsr2l	equ	0xFD9
 12651                           status	equ	0xFD8
 12652                           
 12653 ;; *************** function _strlen *****************
 12654 ;; Defined at:
 12655 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 12658 ;;		 -> STR_109(25), line(64), 
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 12661 ;;		 -> STR_109(25), line(64), 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  2   23[BANK1 ] unsigned int 
 12664 ;; Registers used:
 12665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12671 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12672 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12674 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12675 ;;Total ram usage:        6 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:   13
 12678 ;; This function calls:
 12679 ;;		Nothing
 12680 ;; This function is called by:
 12681 ;;		_terminal_ringBufferPull
 12682 ;;		_strstr
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686                           	psect	text13
 12687  018212                     __ptext13:
 12688                           	opt stack 0
 12689  018212                     _strlen:
 12690                           	opt stack 16
 12691                           
 12692                           ; BSR set to: 1
 12693                           ;incstack = 0
 12694  018212  C117  F11B         	movff	strlen@s,strlen@cp
 12695  018216  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 12696  01821A  D003               	goto	l2257
 12697  01821C  0101               	movlb	1	; () banked
 12698  01821E  4B1B               	infsnz	strlen@cp& (0+255),f,b
 12699  018220  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 12700  018222                     l2257:
 12701                           
 12702                           ; BSR set to: 1
 12703  018222  C11B  FFF6         	movff	strlen@cp,tblptrl
 12704  018226  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 12705  01822A  0E00               	movlw	low (__mediumconst shr (0+16))
 12706  01822C  6EF8               	movwf	tblptru,c
 12707  01822E  0E0D               	movlw	(high __ramtop+-1)
 12708  018230  64F7               	cpfsgt	tblptrh,c
 12709  018232  D003               	bra	u25107
 12710  018234  0008               	tblrd		*
 12711  018236  50F5               	movf	tablat,w,c
 12712  018238  D005               	bra	u25100
 12713  01823A                     u25107:
 12714  01823A  CFF6 FFE9          	movff	tblptrl,fsr0l
 12715  01823E  CFF7 FFEA          	movff	tblptrh,fsr0h
 12716  018242  50EF               	movf	indf0,w,c
 12717  018244                     u25100:
 12718  018244  0900               	iorlw	0
 12719  018246  A4D8               	btfss	status,2,c
 12720  018248  D7E9               	goto	l2258
 12721  01824A  C117  F119         	movff	strlen@s,??_strlen
 12722  01824E  C118  F11A         	movff	strlen@s+1,??_strlen+1
 12723  018252  0101               	movlb	1	; () banked
 12724  018254  1F19               	comf	??_strlen& (0+255),f,b
 12725  018256  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 12726  018258  4B19               	infsnz	??_strlen& (0+255),f,b
 12727  01825A  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 12728  01825C  511B               	movf	strlen@cp& (0+255),w,b
 12729  01825E  2519               	addwf	??_strlen& (0+255),w,b
 12730  018260  6F17               	movwf	?_strlen& (0+255),b
 12731  018262  511C               	movf	(strlen@cp+1)& (0+255),w,b
 12732  018264  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 12733  018266  6F18               	movwf	(?_strlen+1)& (0+255),b
 12734  018268  0012               	return	
 12735  01826A                     __end_of_strlen:
 12736                           	opt stack 0
 12737                           tblptru	equ	0xFF8
 12738                           tblptrh	equ	0xFF7
 12739                           tblptrl	equ	0xFF6
 12740                           tablat	equ	0xFF5
 12741                           intcon	equ	0xFF2
 12742                           indf0	equ	0xFEF
 12743                           postinc0	equ	0xFEE
 12744                           fsr0h	equ	0xFEA
 12745                           fsr0l	equ	0xFE9
 12746                           wreg	equ	0xFE8
 12747                           indf1	equ	0xFE7
 12748                           postdec1	equ	0xFE5
 12749                           fsr1h	equ	0xFE2
 12750                           fsr1l	equ	0xFE1
 12751                           indf2	equ	0xFDF
 12752                           postinc2	equ	0xFDE
 12753                           fsr2h	equ	0xFDA
 12754                           fsr2l	equ	0xFD9
 12755                           status	equ	0xFD8
 12756                           
 12757 ;; *************** function _strchr *****************
 12758 ;; Defined at:
 12759 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 12762 ;;		 -> NULL(0), line(64), 
 12763 ;;  chr             2   25[BANK1 ] int 
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;		None
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  2   23[BANK1 ] PTR unsigned char 
 12768 ;; Registers used:
 12769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12775 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12777 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12778 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12779 ;;Total ram usage:        5 bytes
 12780 ;; Hardware stack levels used:    1
 12781 ;; Hardware stack levels required when called:   13
 12782 ;; This function calls:
 12783 ;;		Nothing
 12784 ;; This function is called by:
 12785 ;;		_strstr
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           	psect	text14
 12790  01877C                     __ptext14:
 12791                           	opt stack 0
 12792  01877C                     _strchr:
 12793                           	opt stack 14
 12794                           
 12795                           ; BSR set to: 1
 12796                           ;incstack = 0
 12797  01877C  C117  FFD9         	movff	strchr@ptr,fsr2l
 12798  018780  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 12799  018784  0101               	movlb	1	; () banked
 12800  018786  5119               	movf	strchr@chr& (0+255),w,b
 12801  018788  18DE               	xorwf	postinc2,w,c
 12802  01878A  A4D8               	btfss	status,2,c
 12803  01878C  D005               	goto	l2333
 12804                           
 12805                           ; BSR set to: 1
 12806  01878E  C117  F117         	movff	strchr@ptr,?_strchr
 12807  018792  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 12808                           
 12809                           ; BSR set to: 1
 12810  018796  0012               	return	
 12811  018798                     l2333:
 12812                           
 12813                           ; BSR set to: 1
 12814                           
 12815                           ; BSR set to: 1
 12816  018798  C117  FFD9         	movff	strchr@ptr,fsr2l
 12817  01879C  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 12818  0187A0  4B17               	infsnz	strchr@ptr& (0+255),f,b
 12819  0187A2  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 12820  0187A4  50DF               	movf	indf2,w,c
 12821  0187A6  A4D8               	btfss	status,2,c
 12822  0187A8  D7E9               	goto	_strchr
 12823                           
 12824                           ; BSR set to: 1
 12825                           
 12826                           ; BSR set to: 1
 12827  0187AA  0E00               	movlw	0
 12828  0187AC  6F17               	movwf	?_strchr& (0+255),b
 12829  0187AE  0E00               	movlw	0
 12830  0187B0  6F18               	movwf	(?_strchr+1)& (0+255),b
 12831  0187B2  0012               	return	
 12832  0187B4                     __end_of_strchr:
 12833                           	opt stack 0
 12834                           tblptru	equ	0xFF8
 12835                           tblptrh	equ	0xFF7
 12836                           tblptrl	equ	0xFF6
 12837                           tablat	equ	0xFF5
 12838                           intcon	equ	0xFF2
 12839                           indf0	equ	0xFEF
 12840                           postinc0	equ	0xFEE
 12841                           fsr0h	equ	0xFEA
 12842                           fsr0l	equ	0xFE9
 12843                           wreg	equ	0xFE8
 12844                           indf1	equ	0xFE7
 12845                           postdec1	equ	0xFE5
 12846                           fsr1h	equ	0xFE2
 12847                           fsr1l	equ	0xFE1
 12848                           indf2	equ	0xFDF
 12849                           postinc2	equ	0xFDE
 12850                           fsr2h	equ	0xFDA
 12851                           fsr2l	equ	0xFD9
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function _strcpy *****************
 12855 ;; Defined at:
 12856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12859 ;;		 -> ringBufferLUT@channel_name(22), 
 12860 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12861 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 12862 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12865 ;;		 -> ringBufferLUT@channel_name(22), 
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  2   23[BANK1 ] PTR unsigned char 
 12868 ;; Registers used:
 12869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12875 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12876 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12878 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12879 ;;Total ram usage:        6 bytes
 12880 ;; Hardware stack levels used:    1
 12881 ;; Hardware stack levels required when called:   13
 12882 ;; This function calls:
 12883 ;;		Nothing
 12884 ;; This function is called by:
 12885 ;;		_ringBufferLUT
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text15
 12890  0187B4                     __ptext15:
 12891                           	opt stack 0
 12892  0187B4                     _strcpy:
 12893                           	opt stack 15
 12894                           
 12895                           ; BSR set to: 1
 12896                           ;incstack = 0
 12897  0187B4  C117  F11B         	movff	strcpy@to,strcpy@cp
 12898  0187B8  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 12899  0187BC  D005               	goto	l2251
 12900  0187BE  0101               	movlb	1	; () banked
 12901  0187C0  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 12902  0187C2  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 12903  0187C4  4B19               	infsnz	strcpy@from& (0+255),f,b
 12904  0187C6  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 12905  0187C8                     l2251:
 12906                           
 12907                           ; BSR set to: 1
 12908  0187C8  C119  FFF6         	movff	strcpy@from,tblptrl
 12909  0187CC  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 12910  0187D0                     	if	0	;tblptru may be non-zero
 12911  0187D0                     	endif
 12912  0187D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12913  0187D0  0E00               	movlw	low (__mediumconst shr (0+16))
 12914  0187D2  6EF8               	movwf	tblptru,c
 12915  0187D4                     	endif
 12916  0187D4  C11B  FFD9         	movff	strcpy@cp,fsr2l
 12917  0187D8  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 12918  0187DC  0008               	tblrd		*
 12919  0187DE  CFF5 FFDF          	movff	tablat,indf2
 12920  0187E2  50DF               	movf	indf2,w,c
 12921  0187E4  B4D8               	btfsc	status,2,c
 12922  0187E6  0012               	return	
 12923  0187E8  D7EA               	goto	l2252
 12924  0187EA                     __end_of_strcpy:
 12925                           	opt stack 0
 12926                           tblptru	equ	0xFF8
 12927                           tblptrh	equ	0xFF7
 12928                           tblptrl	equ	0xFF6
 12929                           tablat	equ	0xFF5
 12930                           intcon	equ	0xFF2
 12931                           indf0	equ	0xFEF
 12932                           postinc0	equ	0xFEE
 12933                           fsr0h	equ	0xFEA
 12934                           fsr0l	equ	0xFE9
 12935                           wreg	equ	0xFE8
 12936                           indf1	equ	0xFE7
 12937                           postdec1	equ	0xFE5
 12938                           fsr1h	equ	0xFE2
 12939                           fsr1l	equ	0xFE1
 12940                           indf2	equ	0xFDF
 12941                           postinc2	equ	0xFDE
 12942                           fsr2h	equ	0xFDA
 12943                           fsr2l	equ	0xFD9
 12944                           status	equ	0xFD8
 12945                           
 12946 ;; *************** function _strcmp *****************
 12947 ;; Defined at:
 12948 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 12951 ;;		 -> line(64), 
 12952 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 12953 ;;		 -> STR_126(5), STR_124(17), STR_122(11), STR_120(17), 
 12954 ;;		 -> STR_118(14), STR_116(16), STR_107(13), STR_103(17), 
 12955 ;;		 -> STR_100(14), STR_98(12), STR_96(16), STR_94(15), 
 12956 ;;		 -> STR_92(15), STR_90(21), STR_88(21), STR_86(26), 
 12957 ;;		 -> STR_84(14), STR_82(13), STR_80(18), STR_78(15), 
 12958 ;;		 -> STR_76(16), STR_73(17), STR_71(16), STR_60(11), 
 12959 ;;		 -> STR_57(10), STR_55(13), STR_53(11), STR_50(4), 
 12960 ;;		 -> STR_49(6), STR_47(16), STR_44(6), STR_41(6), 
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;  r               1   28[BANK1 ] char 
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  2   23[BANK1 ] int 
 12965 ;; Registers used:
 12966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/0
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12972 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12973 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12974 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12975 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12976 ;;Total ram usage:        6 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:   13
 12979 ;; This function calls:
 12980 ;;		Nothing
 12981 ;; This function is called by:
 12982 ;;		_ringBufferLUT
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986                           	psect	text16
 12987  01835E                     __ptext16:
 12988                           	opt stack 0
 12989  01835E                     _strcmp:
 12990                           	opt stack 15
 12991                           
 12992                           ;incstack = 0
 12993  01835E  D005               	goto	l2243
 12994  018360  0101               	movlb	1	; () banked
 12995  018362  4B17               	infsnz	strcmp@s1& (0+255),f,b
 12996  018364  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 12997  018366  4B19               	infsnz	strcmp@s2& (0+255),f,b
 12998  018368  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 12999  01836A                     l2243:
 13000                           
 13001                           ; BSR set to: 1
 13002  01836A  C117  FFD9         	movff	strcmp@s1,fsr2l
 13003  01836E  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 13004  018372  50DF               	movf	indf2,w,c
 13005  018374  0101               	movlb	1	; () banked
 13006  018376  6F1B               	movwf	??_strcmp& (0+255),b
 13007  018378  C119  FFF6         	movff	strcmp@s2,tblptrl
 13008  01837C  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 13009  018380                     	if	0	;tblptru may be non-zero
 13010  018380                     	endif
 13011  018380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13012  018380  0E00               	movlw	low (__mediumconst shr (0+16))
 13013  018382  6EF8               	movwf	tblptru,c
 13014  018384                     	endif
 13015  018384  0008               	tblrd		*
 13016  018386  50F5               	movf	tablat,w,c
 13017  018388  0800               	sublw	0
 13018  01838A  251B               	addwf	??_strcmp& (0+255),w,b
 13019  01838C  6F1C               	movwf	strcmp@r& (0+255),b
 13020  01838E  511C               	movf	strcmp@r& (0+255),w,b
 13021  018390  A4D8               	btfss	status,2,c
 13022  018392  D007               	goto	u25220
 13023                           
 13024                           ; BSR set to: 1
 13025  018394  C117  FFD9         	movff	strcmp@s1,fsr2l
 13026  018398  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 13027  01839C  50DF               	movf	indf2,w,c
 13028  01839E  A4D8               	btfss	status,2,c
 13029  0183A0  D7DF               	goto	l2244
 13030  0183A2                     u25220:
 13031                           
 13032                           ; BSR set to: 1
 13033                           
 13034                           ; BSR set to: 1
 13035                           
 13036                           ; BSR set to: 1
 13037  0183A2  511C               	movf	strcmp@r& (0+255),w,b
 13038  0183A4  6F17               	movwf	?_strcmp& (0+255),b
 13039  0183A6  6B18               	clrf	(?_strcmp+1)& (0+255),b
 13040  0183A8  BF17               	btfsc	?_strcmp& (0+255),7,b
 13041  0183AA  0718               	decf	(?_strcmp+1)& (0+255),f,b
 13042  0183AC  0012               	return	
 13043  0183AE                     __end_of_strcmp:
 13044                           	opt stack 0
 13045                           tblptru	equ	0xFF8
 13046                           tblptrh	equ	0xFF7
 13047                           tblptrl	equ	0xFF6
 13048                           tablat	equ	0xFF5
 13049                           intcon	equ	0xFF2
 13050                           indf0	equ	0xFEF
 13051                           postinc0	equ	0xFEE
 13052                           fsr0h	equ	0xFEA
 13053                           fsr0l	equ	0xFE9
 13054                           wreg	equ	0xFE8
 13055                           indf1	equ	0xFE7
 13056                           postdec1	equ	0xFE5
 13057                           fsr1h	equ	0xFE2
 13058                           fsr1l	equ	0xFE1
 13059                           indf2	equ	0xFDF
 13060                           postinc2	equ	0xFDE
 13061                           fsr2h	equ	0xFDA
 13062                           fsr2l	equ	0xFD9
 13063                           status	equ	0xFD8
 13064                           
 13065 ;; *************** function _readDoubleFromEEPROM *****************
 13066 ;; Defined at:
 13067 ;;		line 22 in file "double_to_EEPROM.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  starting_add    2   25[BANK1 ] unsigned int 
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;  byte_index      2   33[BANK1 ] int 
 13072 ;;  output_data     4   29[BANK1 ] struct .
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  4   25[BANK1 ] struct .
 13075 ;; Registers used:
 13076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 0/0
 13079 ;;		On exit  : 0/0
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13082 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13083 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13085 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13086 ;;Total ram usage:       10 bytes
 13087 ;; Hardware stack levels used:    1
 13088 ;; Hardware stack levels required when called:   14
 13089 ;; This function calls:
 13090 ;;		_DATAEE_ReadByte
 13091 ;; This function is called by:
 13092 ;;		_main
 13093 ;;		_ringBufferLUT
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text17
 13098  01826A                     __ptext17:
 13099                           	opt stack 0
 13100  01826A                     _readDoubleFromEEPROM:
 13101                           	opt stack 14
 13102                           
 13103                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 13104                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 13105                           
 13106                           ; BSR set to: 1
 13107                           ;incstack = 0
 13108  01826A  0E00               	movlw	0
 13109  01826C  0101               	movlb	1	; () banked
 13110  01826E  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 13111  018270  0E00               	movlw	0
 13112  018272  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 13113                           
 13114                           ; BSR set to: 1
 13115  018274  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 13116  018276  E119               	bnz	l1364
 13117  018278  D014               	goto	L1
 13118  01827A                     
 13119                           ; BSR set to: 1
 13120                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 13121                           
 13122                           ; BSR set to: 1
 13123  01827A  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 13124  01827C  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 13125  01827E  6ED9               	movwf	fsr2l,c
 13126  018280  0E01               	movlw	high readDoubleFromEEPROM@output_data
 13127  018282  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 13128  018284  6EDA               	movwf	fsr2h,c
 13129  018286  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 13130  018288  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 13131  01828A  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 13132  01828C  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 13133  01828E  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 13134  018290  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 13135  018292  ECB1  F0C5         	call	_DATAEE_ReadByte	;wreg free
 13136  018296  6EDF               	movwf	indf2,c
 13137  018298  0101               	movlb	1	; () banked
 13138  01829A  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 13139  01829C  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 13140                           
 13141                           ; BSR set to: 1
 13142  01829E  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 13143  0182A0  E104               	bnz	u25180
 13144  0182A2                     L1:
 13145  0182A2  0E04               	movlw	4
 13146  0182A4  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 13147  0182A6  A0D8               	btfss	status,0,c
 13148  0182A8  D7E8               	goto	l1363
 13149  0182AA                     u25180:
 13150  0182AA                     l1364:
 13151                           
 13152                           ; BSR set to: 1
 13153                           ;double_to_EEPROM.c: 32: }
 13154                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 13155  0182AA  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 13156  0182AE  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 13157  0182B2  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 13158  0182B6  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 13159                           
 13160                           ; BSR set to: 1
 13161  0182BA  0012               	return		;funcret
 13162  0182BC                     __end_of_readDoubleFromEEPROM:
 13163                           	opt stack 0
 13164                           tblptru	equ	0xFF8
 13165                           tblptrh	equ	0xFF7
 13166                           tblptrl	equ	0xFF6
 13167                           tablat	equ	0xFF5
 13168                           intcon	equ	0xFF2
 13169                           indf0	equ	0xFEF
 13170                           postinc0	equ	0xFEE
 13171                           fsr0h	equ	0xFEA
 13172                           fsr0l	equ	0xFE9
 13173                           wreg	equ	0xFE8
 13174                           indf1	equ	0xFE7
 13175                           postdec1	equ	0xFE5
 13176                           fsr1h	equ	0xFE2
 13177                           fsr1l	equ	0xFE1
 13178                           indf2	equ	0xFDF
 13179                           postinc2	equ	0xFDE
 13180                           fsr2h	equ	0xFDA
 13181                           fsr2l	equ	0xFD9
 13182                           status	equ	0xFD8
 13183                           
 13184 ;; *************** function _DATAEE_ReadByte *****************
 13185 ;; Defined at:
 13186 ;;		line 190 in file "mcc_generated_files/memory.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;  bAdd            2   23[BANK1 ] unsigned int 
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;		None
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      unsigned char 
 13193 ;; Registers used:
 13194 ;;		wreg, status,2, status,0
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13200 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13203 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13204 ;;Total ram usage:        2 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:   13
 13207 ;; This function calls:
 13208 ;;		Nothing
 13209 ;; This function is called by:
 13210 ;;		_readDoubleFromEEPROM
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text18
 13215  018B62                     __ptext18:
 13216                           	opt stack 0
 13217  018B62                     _DATAEE_ReadByte:
 13218                           	opt stack 14
 13219                           
 13220                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 13221                           
 13222                           ; BSR set to: 1
 13223                           ;incstack = 0
 13224  018B62  0101               	movlb	1	; () banked
 13225  018B64  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 13226  018B66  0B03               	andlw	3
 13227  018B68  6E75               	movwf	3957,c	;volatile
 13228                           
 13229                           ; BSR set to: 1
 13230                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 13231  018B6A  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 13232                           
 13233                           ; BSR set to: 1
 13234                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 13235  018B6E  0E3F               	movlw	-193
 13236  018B70  1677               	andwf	3959,f,c	;volsfr
 13237                           
 13238                           ; BSR set to: 1
 13239                           ;memory.c: 195: NVMCON1bits.RD = 1;
 13240  018B72  8077               	bsf	3959,0,c	;volsfr
 13241                           
 13242                           ; BSR set to: 1
 13243                           ;memory.c: 196: __nop();
 13244  018B74  F000               	nop	
 13245                           
 13246                           ;memory.c: 197: __nop();
 13247  018B76  F000               	nop	
 13248                           
 13249                           ;memory.c: 199: return (NVMDAT);
 13250  018B78  5076               	movf	3958,w,c	;volatile
 13251  018B7A  0012               	return	
 13252  018B7C                     __end_of_DATAEE_ReadByte:
 13253                           	opt stack 0
 13254                           tblptru	equ	0xFF8
 13255                           tblptrh	equ	0xFF7
 13256                           tblptrl	equ	0xFF6
 13257                           tablat	equ	0xFF5
 13258                           intcon	equ	0xFF2
 13259                           indf0	equ	0xFEF
 13260                           postinc0	equ	0xFEE
 13261                           fsr0h	equ	0xFEA
 13262                           fsr0l	equ	0xFE9
 13263                           wreg	equ	0xFE8
 13264                           indf1	equ	0xFE7
 13265                           postdec1	equ	0xFE5
 13266                           fsr1h	equ	0xFE2
 13267                           fsr1l	equ	0xFE1
 13268                           indf2	equ	0xFDF
 13269                           postinc2	equ	0xFDE
 13270                           fsr2h	equ	0xFDA
 13271                           fsr2l	equ	0xFD9
 13272                           status	equ	0xFD8
 13273                           
 13274 ;; *************** function _getUserID *****************
 13275 ;; Defined at:
 13276 ;;		line 65 in file "device_IDs.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  inputUserID     1    wreg     unsigned char 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 13281 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 13282 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  2   34[BANK1 ] unsigned int 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13292 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13293 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13295 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13296 ;;Total ram usage:        8 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:   15
 13299 ;; This function calls:
 13300 ;;		_FLASH_ReadWord
 13301 ;; This function is called by:
 13302 ;;		_ringBufferLUT
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text19
 13307  018600                     __ptext19:
 13308                           	opt stack 0
 13309  018600                     _getUserID:
 13310                           	opt stack 13
 13311                           
 13312                           ;incstack = 0
 13313                           ;getUserID@inputUserID stored from wreg
 13314  018600  0101               	movlb	1	; () banked
 13315  018602  6F24               	movwf	getUserID@inputUserID& (0+255),b
 13316                           
 13317                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 13318  018604  0E00               	movlw	0
 13319  018606  0101               	movlb	1	; () banked
 13320  018608  6F25               	movwf	getUserID@initialOffset& (0+255),b
 13321  01860A  0E00               	movlw	0
 13322  01860C  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 13323  01860E  0E20               	movlw	32
 13324  018610  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 13325  018612  0E00               	movlw	0
 13326  018614  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 13327                           
 13328                           ; BSR set to: 1
 13329                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 13330  018616  5124               	movf	getUserID@inputUserID& (0+255),w,b
 13331  018618  0D02               	mullw	2
 13332  01861A  CFF3 F129          	movff	prodl,getUserID@IDOffset
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 13336  01861E  5129               	movf	getUserID@IDOffset& (0+255),w,b
 13337  018620  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 13338  018622  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13339  018624  0E00               	movlw	0
 13340  018626  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 13341  018628  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13342  01862A  0E00               	movlw	0
 13343  01862C  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 13344  01862E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13345  018630  0E00               	movlw	0
 13346  018632  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 13347  018634  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13348  018636  EC22  F0C3         	call	_FLASH_ReadWord	;wreg free
 13349  01863A  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 13350  01863E  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 13351  018642  0012               	return	
 13352  018644                     __end_of_getUserID:
 13353                           	opt stack 0
 13354                           tblptru	equ	0xFF8
 13355                           tblptrh	equ	0xFF7
 13356                           tblptrl	equ	0xFF6
 13357                           tablat	equ	0xFF5
 13358                           prodl	equ	0xFF3
 13359                           intcon	equ	0xFF2
 13360                           indf0	equ	0xFEF
 13361                           postinc0	equ	0xFEE
 13362                           fsr0h	equ	0xFEA
 13363                           fsr0l	equ	0xFE9
 13364                           wreg	equ	0xFE8
 13365                           indf1	equ	0xFE7
 13366                           postdec1	equ	0xFE5
 13367                           fsr1h	equ	0xFE2
 13368                           fsr1l	equ	0xFE1
 13369                           indf2	equ	0xFDF
 13370                           postinc2	equ	0xFDE
 13371                           fsr2h	equ	0xFDA
 13372                           fsr2l	equ	0xFD9
 13373                           status	equ	0xFD8
 13374                           
 13375 ;; *************** function _getMinorRevisionID *****************
 13376 ;; Defined at:
 13377 ;;		line 23 in file "device_IDs.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      unsigned char 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13392 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13394 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13395 ;;Total ram usage:        2 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:   15
 13398 ;; This function calls:
 13399 ;;		_FLASH_ReadWord
 13400 ;; This function is called by:
 13401 ;;		_ringBufferLUT
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405                           	psect	text20
 13406  018A18                     __ptext20:
 13407                           	opt stack 0
 13408  018A18                     _getMinorRevisionID:
 13409                           	opt stack 13
 13410                           
 13411                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 13412                           
 13413                           ;incstack = 0
 13414  018A18  0EFC               	movlw	252
 13415  018A1A  0101               	movlb	1	; () banked
 13416  018A1C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13417  018A1E  0EFF               	movlw	255
 13418  018A20  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13419  018A22  0E3F               	movlw	63
 13420  018A24  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13421  018A26  0E00               	movlw	0
 13422  018A28  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13423  018A2A  EC22  F0C3         	call	_FLASH_ReadWord	;wreg free
 13424  018A2E  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 13425  018A32  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 13426                           
 13427                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 13428  018A36  0101               	movlb	1	; () banked
 13429  018A38  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 13430  018A3A  0B1F               	andlw	31
 13431  018A3C  0012               	return	
 13432  018A3E                     __end_of_getMinorRevisionID:
 13433                           	opt stack 0
 13434                           tblptru	equ	0xFF8
 13435                           tblptrh	equ	0xFF7
 13436                           tblptrl	equ	0xFF6
 13437                           tablat	equ	0xFF5
 13438                           prodl	equ	0xFF3
 13439                           intcon	equ	0xFF2
 13440                           indf0	equ	0xFEF
 13441                           postinc0	equ	0xFEE
 13442                           fsr0h	equ	0xFEA
 13443                           fsr0l	equ	0xFE9
 13444                           wreg	equ	0xFE8
 13445                           indf1	equ	0xFE7
 13446                           postdec1	equ	0xFE5
 13447                           fsr1h	equ	0xFE2
 13448                           fsr1l	equ	0xFE1
 13449                           indf2	equ	0xFDF
 13450                           postinc2	equ	0xFDE
 13451                           fsr2h	equ	0xFDA
 13452                           fsr2l	equ	0xFD9
 13453                           status	equ	0xFD8
 13454                           
 13455 ;; *************** function _getMajorRevisionID *****************
 13456 ;; Defined at:
 13457 ;;		line 12 in file "device_IDs.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;		None
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  1    wreg      unsigned char 
 13464 ;; Registers used:
 13465 ;;		wreg, status,2, status,0, cstack
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13472 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13473 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13474 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13475 ;;Total ram usage:        5 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:   15
 13478 ;; This function calls:
 13479 ;;		_FLASH_ReadWord
 13480 ;; This function is called by:
 13481 ;;		_ringBufferLUT
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	text21
 13486  018704                     __ptext21:
 13487                           	opt stack 0
 13488  018704                     _getMajorRevisionID:
 13489                           	opt stack 13
 13490                           
 13491                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 13492                           
 13493                           ; BSR set to: 1
 13494                           ;incstack = 0
 13495  018704  0EFC               	movlw	252
 13496  018706  0101               	movlb	1	; () banked
 13497  018708  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13498  01870A  0EFF               	movlw	255
 13499  01870C  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13500  01870E  0E3F               	movlw	63
 13501  018710  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13502  018712  0E00               	movlw	0
 13503  018714  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13504  018716  EC22  F0C3         	call	_FLASH_ReadWord	;wreg free
 13505  01871A  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 13506  01871E  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 13507                           
 13508                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 13509  018722  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 13510  018726  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 13511  01872A  0E06               	movlw	6
 13512  01872C  0101               	movlb	1	; () banked
 13513  01872E  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 13514  018730                     u25255:
 13515  018730  90D8               	bcf	status,0,c
 13516  018732  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 13517  018734  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 13518  018736  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 13519  018738  D7FB               	goto	u25255
 13520  01873A  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 13521  01873C  0B1F               	andlw	31
 13522  01873E  0012               	return	
 13523  018740                     __end_of_getMajorRevisionID:
 13524                           	opt stack 0
 13525                           tblptru	equ	0xFF8
 13526                           tblptrh	equ	0xFF7
 13527                           tblptrl	equ	0xFF6
 13528                           tablat	equ	0xFF5
 13529                           prodl	equ	0xFF3
 13530                           intcon	equ	0xFF2
 13531                           indf0	equ	0xFEF
 13532                           postinc0	equ	0xFEE
 13533                           fsr0h	equ	0xFEA
 13534                           fsr0l	equ	0xFE9
 13535                           wreg	equ	0xFE8
 13536                           indf1	equ	0xFE7
 13537                           postdec1	equ	0xFE5
 13538                           fsr1h	equ	0xFE2
 13539                           fsr1l	equ	0xFE1
 13540                           indf2	equ	0xFDF
 13541                           postinc2	equ	0xFDE
 13542                           fsr2h	equ	0xFDA
 13543                           fsr2l	equ	0xFD9
 13544                           status	equ	0xFD8
 13545                           
 13546 ;; *************** function _getDeviceIDString *****************
 13547 ;; Defined at:
 13548 ;;		line 34 in file "device_IDs.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 13553 ;;		 -> STR_135(10), STR_134(13), STR_133(12), 
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  2   36[BANK1 ] PTR inline unsigned char
 13556 ;; Registers used:
 13557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13563 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13564 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13565 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13566 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13567 ;;Total ram usage:       10 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:   13
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_ringBufferLUT
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           	psect	text22
 13578  018152                     __ptext22:
 13579                           	opt stack 0
 13580  018152                     _getDeviceIDString:
 13581                           	opt stack 15
 13582                           
 13583                           ;device_IDs.c: 37: const char *strings[] = {
 13584                           ;device_IDs.c: 39: "PIC18F67K40",
 13585                           ;device_IDs.c: 40: "PIC18LF67K40",
 13586                           ;device_IDs.c: 41: "Undefined"
 13587                           ;device_IDs.c: 43: };
 13588                           
 13589                           ; BSR set to: 1
 13590                           ;incstack = 0
 13591  018152  EE22  F0C2         	lfsr	2,getDeviceIDString@F17550
 13592  018156  EE11  F028         	lfsr	1,getDeviceIDString@strings
 13593  01815A  0E05               	movlw	5
 13594  01815C                     u25241:
 13595  01815C  CFDB FFE3          	movff	plusw2,plusw1
 13596  018160  06E8               	decf	wreg,f,c
 13597  018162  E2FC               	bc	u25241
 13598                           
 13599                           ;device_IDs.c: 47: switch (inputDevID) {
 13600  018164  D00F               	goto	l1317
 13601  018166                     
 13602                           ;device_IDs.c: 50: return strings[0];
 13603  018166  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 13604  01816A  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 13605                           
 13606                           ;device_IDs.c: 51: break;
 13607  01816E  0012               	return	
 13608  018170                     
 13609                           ;device_IDs.c: 54: return strings[1];
 13610  018170  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 13611  018174  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 13612                           
 13613                           ;device_IDs.c: 55: break;
 13614  018178  0012               	return	
 13615  01817A                     
 13616                           ;device_IDs.c: 58: return strings[2];
 13617  01817A  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 13618  01817E  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 13619                           
 13620                           ;device_IDs.c: 61: }
 13621                           
 13622                           ;device_IDs.c: 59: break;
 13623  018182  0012               	return	
 13624  018184                     l1317:
 13625  018184  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 13626  018188  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 13627                           
 13628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13629                           ; Switch size 1, requested type "space"
 13630                           ; Number of cases is 2, Range of values is 106 to 107
 13631                           ; switch strategies available:
 13632                           ; Name         Instructions Cycles
 13633                           ; simple_byte            7     4 (average)
 13634                           ;	Chosen strategy is simple_byte
 13635  01818C  0101               	movlb	1	; () banked
 13636  01818E  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 13637  018190  0A6A               	xorlw	106	; case 106
 13638  018192  B4D8               	btfsc	status,2,c
 13639  018194  D004               	goto	l19600
 13640  018196  0A01               	xorlw	1	; case 107
 13641  018198  B4D8               	btfsc	status,2,c
 13642  01819A  D006               	goto	l19602
 13643  01819C  D7EE               	goto	l1322
 13644  01819E                     l19600:
 13645                           
 13646                           ; BSR set to: 1
 13647                           ; Switch size 1, requested type "space"
 13648                           ; Number of cases is 1, Range of values is 192 to 192
 13649                           ; switch strategies available:
 13650                           ; Name         Instructions Cycles
 13651                           ; simple_byte            4     3 (average)
 13652                           ;	Chosen strategy is simple_byte
 13653  01819E  5126               	movf	??_getDeviceIDString& (0+255),w,b
 13654  0181A0  0AC0               	xorlw	192	; case 192
 13655  0181A2  B4D8               	btfsc	status,2,c
 13656  0181A4  D7E0               	goto	l1318
 13657  0181A6  D7E9               	goto	l1322
 13658  0181A8                     l19602:
 13659                           
 13660                           ; BSR set to: 1
 13661                           ; Switch size 1, requested type "space"
 13662                           ; Number of cases is 1, Range of values is 32 to 32
 13663                           ; switch strategies available:
 13664                           ; Name         Instructions Cycles
 13665                           ; simple_byte            4     3 (average)
 13666                           ;	Chosen strategy is simple_byte
 13667  0181A8  5126               	movf	??_getDeviceIDString& (0+255),w,b
 13668  0181AA  0A20               	xorlw	32	; case 32
 13669  0181AC  B4D8               	btfsc	status,2,c
 13670  0181AE  D7E0               	goto	l1321
 13671  0181B0  D7E4               	goto	l1322
 13672  0181B2                     __end_of_getDeviceIDString:
 13673                           	opt stack 0
 13674                           tblptru	equ	0xFF8
 13675                           tblptrh	equ	0xFF7
 13676                           tblptrl	equ	0xFF6
 13677                           tablat	equ	0xFF5
 13678                           prodl	equ	0xFF3
 13679                           intcon	equ	0xFF2
 13680                           indf0	equ	0xFEF
 13681                           postinc0	equ	0xFEE
 13682                           fsr0h	equ	0xFEA
 13683                           fsr0l	equ	0xFE9
 13684                           wreg	equ	0xFE8
 13685                           indf1	equ	0xFE7
 13686                           postdec1	equ	0xFE5
 13687                           plusw1	equ	0xFE3
 13688                           fsr1h	equ	0xFE2
 13689                           fsr1l	equ	0xFE1
 13690                           indf2	equ	0xFDF
 13691                           postinc2	equ	0xFDE
 13692                           plusw2	equ	0xFDB
 13693                           fsr2h	equ	0xFDA
 13694                           fsr2l	equ	0xFD9
 13695                           status	equ	0xFD8
 13696                           
 13697 ;; *************** function _getDeviceID *****************
 13698 ;; Defined at:
 13699 ;;		line 4 in file "device_IDs.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;		None
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;		None
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  2   34[BANK1 ] unsigned int 
 13706 ;; Registers used:
 13707 ;;		wreg, status,2, status,0, cstack
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13713 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13716 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13717 ;;Total ram usage:        2 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:   15
 13720 ;; This function calls:
 13721 ;;		_FLASH_ReadWord
 13722 ;; This function is called by:
 13723 ;;		_ringBufferLUT
 13724 ;; This function uses a non-reentrant model
 13725 ;;
 13726                           
 13727                           	psect	text23
 13728  018AD0                     __ptext23:
 13729                           	opt stack 0
 13730  018AD0                     _getDeviceID:
 13731                           	opt stack 13
 13732                           
 13733                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 13734                           
 13735                           ;incstack = 0
 13736  018AD0  0EFE               	movlw	254
 13737  018AD2  0101               	movlb	1	; () banked
 13738  018AD4  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13739  018AD6  0EFF               	movlw	255
 13740  018AD8  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13741  018ADA  0E3F               	movlw	63
 13742  018ADC  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13743  018ADE  0E00               	movlw	0
 13744  018AE0  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13745  018AE2  EC22  F0C3         	call	_FLASH_ReadWord	;wreg free
 13746  018AE6  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 13747  018AEA  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 13748  018AEE  0012               	return	
 13749  018AF0                     __end_of_getDeviceID:
 13750                           	opt stack 0
 13751                           tblptru	equ	0xFF8
 13752                           tblptrh	equ	0xFF7
 13753                           tblptrl	equ	0xFF6
 13754                           tablat	equ	0xFF5
 13755                           prodl	equ	0xFF3
 13756                           intcon	equ	0xFF2
 13757                           indf0	equ	0xFEF
 13758                           postinc0	equ	0xFEE
 13759                           fsr0h	equ	0xFEA
 13760                           fsr0l	equ	0xFE9
 13761                           wreg	equ	0xFE8
 13762                           indf1	equ	0xFE7
 13763                           postdec1	equ	0xFE5
 13764                           plusw1	equ	0xFE3
 13765                           fsr1h	equ	0xFE2
 13766                           fsr1l	equ	0xFE1
 13767                           indf2	equ	0xFDF
 13768                           postinc2	equ	0xFDE
 13769                           plusw2	equ	0xFDB
 13770                           fsr2h	equ	0xFDA
 13771                           fsr2l	equ	0xFD9
 13772                           status	equ	0xFD8
 13773                           
 13774 ;; *************** function _FLASH_ReadWord *****************
 13775 ;; Defined at:
 13776 ;;		line 71 in file "mcc_generated_files/memory.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;		None
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  2   27[BANK1 ] unsigned int 
 13783 ;; Registers used:
 13784 ;;		wreg, status,2, status,0, cstack
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13790 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13792 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13793 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13794 ;;Total ram usage:        7 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:   14
 13797 ;; This function calls:
 13798 ;;		_FLASH_ReadByte
 13799 ;; This function is called by:
 13800 ;;		_getDeviceID
 13801 ;;		_getMajorRevisionID
 13802 ;;		_getMinorRevisionID
 13803 ;;		_getUserID
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807                           	psect	text24
 13808  018644                     __ptext24:
 13809                           	opt stack 0
 13810  018644                     _FLASH_ReadWord:
 13811                           	opt stack 13
 13812                           
 13813                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 13814                           
 13815                           ;incstack = 0
 13816  018644  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 13817  018648  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 13818  01864C  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 13819  018650  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 13820  018654  ECBE  F0C5         	call	_FLASH_ReadByte	;wreg free
 13821  018658  0101               	movlb	1	; () banked
 13822  01865A  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 13823  01865C  0E01               	movlw	1
 13824  01865E  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 13825  018660  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 13826  018662  0E00               	movlw	0
 13827  018664  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 13828  018666  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 13829  018668  0E00               	movlw	0
 13830  01866A  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 13831  01866C  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 13832  01866E  0E00               	movlw	0
 13833  018670  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 13834  018672  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 13835  018674  ECBE  F0C5         	call	_FLASH_ReadByte	;wreg free
 13836  018678  0101               	movlb	1	; () banked
 13837  01867A  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 13838  01867C  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 13839  01867E  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 13840  018680  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 13841  018684  0012               	return	
 13842  018686                     __end_of_FLASH_ReadWord:
 13843                           	opt stack 0
 13844                           tblptru	equ	0xFF8
 13845                           tblptrh	equ	0xFF7
 13846                           tblptrl	equ	0xFF6
 13847                           tablat	equ	0xFF5
 13848                           prodl	equ	0xFF3
 13849                           intcon	equ	0xFF2
 13850                           indf0	equ	0xFEF
 13851                           postinc0	equ	0xFEE
 13852                           fsr0h	equ	0xFEA
 13853                           fsr0l	equ	0xFE9
 13854                           wreg	equ	0xFE8
 13855                           indf1	equ	0xFE7
 13856                           postdec1	equ	0xFE5
 13857                           plusw1	equ	0xFE3
 13858                           fsr1h	equ	0xFE2
 13859                           fsr1l	equ	0xFE1
 13860                           indf2	equ	0xFDF
 13861                           postinc2	equ	0xFDE
 13862                           plusw2	equ	0xFDB
 13863                           fsr2h	equ	0xFDA
 13864                           fsr2l	equ	0xFD9
 13865                           status	equ	0xFD8
 13866                           
 13867 ;; *************** function _FLASH_ReadByte *****************
 13868 ;; Defined at:
 13869 ;;		line 59 in file "mcc_generated_files/memory.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 13872 ;; Auto vars:     Size  Location     Type
 13873 ;;		None
 13874 ;; Return value:  Size  Location     Type
 13875 ;;                  1    wreg      unsigned char 
 13876 ;; Registers used:
 13877 ;;		wreg, status,2
 13878 ;; Tracked objects:
 13879 ;;		On entry : 0/0
 13880 ;;		On exit  : 0/0
 13881 ;;		Unchanged: 0/0
 13882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13883 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13886 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13887 ;;Total ram usage:        4 bytes
 13888 ;; Hardware stack levels used:    1
 13889 ;; Hardware stack levels required when called:   13
 13890 ;; This function calls:
 13891 ;;		Nothing
 13892 ;; This function is called by:
 13893 ;;		_FLASH_ReadWord
 13894 ;;		_FLASH_WriteByte
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           	psect	text25
 13899  018B7C                     __ptext25:
 13900                           	opt stack 0
 13901  018B7C                     _FLASH_ReadByte:
 13902                           	opt stack 13
 13903                           
 13904                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 13905                           
 13906                           ; BSR set to: 1
 13907                           ;incstack = 0
 13908  018B7C  5077               	movf	3959,w,c	;volsfr
 13909  018B7E  0B3F               	andlw	-193
 13910  018B80  0980               	iorlw	128
 13911  018B82  6E77               	movwf	3959,c	;volsfr
 13912                           
 13913                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 13914  018B84  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 13915                           
 13916                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 13917  018B88  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 13918                           
 13919                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 13920  018B8C  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 13921  018B90  0008               	tblrd		*	;# 
 13922                           
 13923                           ;memory.c: 68: return (TABLAT);
 13924  018B92  50F5               	movf	tablat,w,c	;volatile
 13925  018B94  0012               	return	
 13926  018B96                     __end_of_FLASH_ReadByte:
 13927                           	opt stack 0
 13928                           tblptru	equ	0xFF8
 13929                           tblptrh	equ	0xFF7
 13930                           tblptrl	equ	0xFF6
 13931                           tablat	equ	0xFF5
 13932                           prodl	equ	0xFF3
 13933                           intcon	equ	0xFF2
 13934                           indf0	equ	0xFEF
 13935                           postinc0	equ	0xFEE
 13936                           fsr0h	equ	0xFEA
 13937                           fsr0l	equ	0xFE9
 13938                           wreg	equ	0xFE8
 13939                           indf1	equ	0xFE7
 13940                           postdec1	equ	0xFE5
 13941                           plusw1	equ	0xFE3
 13942                           fsr1h	equ	0xFE2
 13943                           fsr1l	equ	0xFE1
 13944                           indf2	equ	0xFDF
 13945                           postinc2	equ	0xFDE
 13946                           plusw2	equ	0xFDB
 13947                           fsr2h	equ	0xFDA
 13948                           fsr2l	equ	0xFD9
 13949                           status	equ	0xFD8
 13950                           
 13951 ;; *************** function _getCauseOfResetString *****************
 13952 ;; Defined at:
 13953 ;;		line 81 in file "cause_of_reset.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;  r               1    wreg     enum E17455
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;  r               1   25[BANK1 ] enum E17455
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  2   23[BANK1 ] PTR inline unsigned char
 13960 ;; Registers used:
 13961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/0
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13967 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13968 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13970 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13971 ;;Total ram usage:        3 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:   13
 13974 ;; This function calls:
 13975 ;;		Nothing
 13976 ;; This function is called by:
 13977 ;;		_ringBufferLUT
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text26
 13982  0188BA                     __ptext26:
 13983                           	opt stack 0
 13984  0188BA                     _getCauseOfResetString:
 13985                           	opt stack 15
 13986                           
 13987                           ;incstack = 0
 13988                           ;getCauseOfResetString@r stored from wreg
 13989  0188BA  0101               	movlb	1	; () banked
 13990  0188BC  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 13991                           
 13992                           ;cause_of_reset.c: 84: static char *strings[] = {
 13993                           ;cause_of_reset.c: 85: "Undefined Reset",
 13994                           ;cause_of_reset.c: 86: "Power On Reset",
 13995                           ;cause_of_reset.c: 87: "Brown Out Reset",
 13996                           ;cause_of_reset.c: 88: "Master Clear Reset",
 13997                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 13998                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 13999                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 14000                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 14001                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 14002                           ;cause_of_reset.c: 94: };
 14003  0188BE  0E09               	movlw	9
 14004  0188C0  0101               	movlb	1	; () banked
 14005  0188C2  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 14006  0188C4  D00D               	goto	l1349
 14007                           
 14008                           ; BSR set to: 1
 14009                           ;cause_of_reset.c: 99: return strings[r];
 14010  0188C6  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 14011  0188C8  0D02               	mullw	2
 14012  0188CA  0EB0               	movlw	low getCauseOfResetString@strings
 14013  0188CC  24F3               	addwf	prodl,w,c
 14014  0188CE  6ED9               	movwf	fsr2l,c
 14015  0188D0  0E02               	movlw	high getCauseOfResetString@strings
 14016  0188D2  20F4               	addwfc	prodh,w,c
 14017  0188D4  6EDA               	movwf	fsr2h,c
 14018  0188D6  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 14019  0188DA  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;cause_of_reset.c: 101: }
 14023                           
 14024                           ; BSR set to: 1
 14025  0188DE  0012               	return	
 14026  0188E0                     l1349:
 14027                           
 14028                           ; BSR set to: 1
 14029                           ;cause_of_reset.c: 103: else {
 14030                           ;cause_of_reset.c: 105: return "Undefined Reset";
 14031                           
 14032                           ; BSR set to: 1
 14033  0188E0  0E05               	movlw	low STR_136
 14034  0188E2  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 14035  0188E4  0EFE               	movlw	high STR_136
 14036  0188E6  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 14037                           
 14038                           ; BSR set to: 1
 14039  0188E8  0012               	return	
 14040  0188EA                     __end_of_getCauseOfResetString:
 14041                           	opt stack 0
 14042                           tblptru	equ	0xFF8
 14043                           tblptrh	equ	0xFF7
 14044                           tblptrl	equ	0xFF6
 14045                           tablat	equ	0xFF5
 14046                           prodh	equ	0xFF4
 14047                           prodl	equ	0xFF3
 14048                           intcon	equ	0xFF2
 14049                           indf0	equ	0xFEF
 14050                           postinc0	equ	0xFEE
 14051                           fsr0h	equ	0xFEA
 14052                           fsr0l	equ	0xFE9
 14053                           wreg	equ	0xFE8
 14054                           indf1	equ	0xFE7
 14055                           postdec1	equ	0xFE5
 14056                           plusw1	equ	0xFE3
 14057                           fsr1h	equ	0xFE2
 14058                           fsr1l	equ	0xFE1
 14059                           indf2	equ	0xFDF
 14060                           postinc2	equ	0xFDE
 14061                           postdec2	equ	0xFDD
 14062                           plusw2	equ	0xFDB
 14063                           fsr2h	equ	0xFDA
 14064                           fsr2l	equ	0xFD9
 14065                           status	equ	0xFD8
 14066                           
 14067 ;; *************** function _atoi *****************
 14068 ;; Defined at:
 14069 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 14072 ;;		 -> ringBufferLUT@arg_buff(3), 
 14073 ;; Auto vars:     Size  Location     Type
 14074 ;;  a               2   34[BANK1 ] int 
 14075 ;;  sign            1   33[BANK1 ] unsigned char 
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  2   29[BANK1 ] int 
 14078 ;; Registers used:
 14079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14086 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14087 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14088 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14089 ;;Total ram usage:        7 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; Hardware stack levels required when called:   14
 14092 ;; This function calls:
 14093 ;;		___wmul
 14094 ;;		_isdigit
 14095 ;; This function is called by:
 14096 ;;		_ringBufferLUT
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text27
 14101  0176BA                     __ptext27:
 14102                           	opt stack 0
 14103  0176BA                     _atoi:
 14104                           	opt stack 14
 14105                           
 14106                           ; BSR set to: 1
 14107                           ;incstack = 0
 14108  0176BA  D003               	goto	l1745
 14109  0176BC  0101               	movlb	1	; () banked
 14110  0176BE  4B1D               	infsnz	atoi@s& (0+255),f,b
 14111  0176C0  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 14112  0176C2                     l1745:
 14113                           
 14114                           ; BSR set to: 1
 14115  0176C2  C11D  FFD9         	movff	atoi@s,fsr2l
 14116  0176C6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14117  0176CA  0E20               	movlw	32
 14118  0176CC  18DE               	xorwf	postinc2,w,c
 14119  0176CE  B4D8               	btfsc	status,2,c
 14120  0176D0  D7F5               	goto	l1746
 14121  0176D2  C11D  FFD9         	movff	atoi@s,fsr2l
 14122  0176D6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14123  0176DA  0E09               	movlw	9
 14124  0176DC  18DE               	xorwf	postinc2,w,c
 14125  0176DE  B4D8               	btfsc	status,2,c
 14126  0176E0  D7ED               	goto	l1746
 14127  0176E2  0E00               	movlw	0
 14128  0176E4  0101               	movlb	1	; () banked
 14129  0176E6  6F23               	movwf	(atoi@a+1)& (0+255),b
 14130  0176E8  0E00               	movlw	0
 14131  0176EA  6F22               	movwf	atoi@a& (0+255),b
 14132  0176EC  0E00               	movlw	0
 14133  0176EE  6F21               	movwf	atoi@sign& (0+255),b
 14134                           
 14135                           ; BSR set to: 1
 14136  0176F0  C11D  FFD9         	movff	atoi@s,fsr2l
 14137  0176F4  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14138  0176F8  0E2D               	movlw	45
 14139  0176FA  18DE               	xorwf	postinc2,w,c
 14140  0176FC  A4D8               	btfss	status,2,c
 14141  0176FE  D002               	goto	l1748
 14142                           
 14143                           ; BSR set to: 1
 14144  017700  2B21               	incf	atoi@sign& (0+255),f,b
 14145  017702  D026               	goto	l18964
 14146  017704                     l1748:
 14147                           
 14148                           ; BSR set to: 1
 14149                           
 14150                           ; BSR set to: 1
 14151  017704  C11D  FFD9         	movff	atoi@s,fsr2l
 14152  017708  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14153  01770C  0E2B               	movlw	43
 14154  01770E  18DE               	xorwf	postinc2,w,c
 14155  017710  A4D8               	btfss	status,2,c
 14156  017712  D020               	goto	l1751
 14157  017714  D01D               	goto	l18964
 14158  017716                     
 14159                           ; BSR set to: 1
 14160  017716  C122  F117         	movff	atoi@a,___wmul@multiplier
 14161  01771A  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 14162  01771E  0E00               	movlw	0
 14163  017720  0101               	movlb	1	; () banked
 14164  017722  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14165  017724  0E0A               	movlw	10
 14166  017726  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14167  017728  ECD0  F0C4         	call	___wmul	;wreg free
 14168  01772C  C11D  FFD9         	movff	atoi@s,fsr2l
 14169  017730  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14170  017734  50DF               	movf	indf2,w,c
 14171  017736  0101               	movlb	1	; () banked
 14172  017738  6F1F               	movwf	??_atoi& (0+255),b
 14173  01773A  6B20               	clrf	(??_atoi+1)& (0+255),b
 14174  01773C  5117               	movf	?___wmul& (0+255),w,b
 14175  01773E  271F               	addwf	??_atoi& (0+255),f,b
 14176  017740  5118               	movf	(?___wmul+1)& (0+255),w,b
 14177  017742  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 14178  017744  0ED0               	movlw	208
 14179  017746  251F               	addwf	??_atoi& (0+255),w,b
 14180  017748  6F22               	movwf	atoi@a& (0+255),b
 14181  01774A  0EFF               	movlw	255
 14182  01774C  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 14183  01774E  6F23               	movwf	(atoi@a+1)& (0+255),b
 14184  017750                     l18964:
 14185                           
 14186                           ; BSR set to: 1
 14187  017750  4B1D               	infsnz	atoi@s& (0+255),f,b
 14188  017752  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 14189  017754                     l1751:
 14190                           
 14191                           ; BSR set to: 1
 14192                           
 14193                           ; BSR set to: 1
 14194  017754  C11D  FFD9         	movff	atoi@s,fsr2l
 14195  017758  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14196  01775C  50DF               	movf	indf2,w,c
 14197  01775E  EC57  F0C5         	call	_isdigit
 14198  017762  B0D8               	btfsc	status,0,c
 14199  017764  D7D8               	goto	l1752
 14200  017766  0101               	movlb	1	; () banked
 14201  017768  5121               	movf	atoi@sign& (0+255),w,b
 14202  01776A  B4D8               	btfsc	status,2,c
 14203  01776C  D00D               	goto	l1754
 14204                           
 14205                           ; BSR set to: 1
 14206  01776E  C122  F11F         	movff	atoi@a,??_atoi
 14207  017772  C123  F120         	movff	atoi@a+1,??_atoi+1
 14208  017776  1F1F               	comf	??_atoi& (0+255),f,b
 14209  017778  1F20               	comf	(??_atoi+1)& (0+255),f,b
 14210  01777A  4B1F               	infsnz	??_atoi& (0+255),f,b
 14211  01777C  2B20               	incf	(??_atoi+1)& (0+255),f,b
 14212  01777E  C11F  F11D         	movff	??_atoi,?_atoi
 14213  017782  C120  F11E         	movff	??_atoi+1,?_atoi+1
 14214  017786  0012               	return	
 14215  017788                     l1754:
 14216                           
 14217                           ; BSR set to: 1
 14218  017788  C122  F11D         	movff	atoi@a,?_atoi
 14219  01778C  C123  F11E         	movff	atoi@a+1,?_atoi+1
 14220                           
 14221                           ; BSR set to: 1
 14222  017790  0012               	return		;funcret
 14223  017792                     __end_of_atoi:
 14224                           	opt stack 0
 14225                           tblptru	equ	0xFF8
 14226                           tblptrh	equ	0xFF7
 14227                           tblptrl	equ	0xFF6
 14228                           tablat	equ	0xFF5
 14229                           prodh	equ	0xFF4
 14230                           prodl	equ	0xFF3
 14231                           intcon	equ	0xFF2
 14232                           indf0	equ	0xFEF
 14233                           postinc0	equ	0xFEE
 14234                           fsr0h	equ	0xFEA
 14235                           fsr0l	equ	0xFE9
 14236                           wreg	equ	0xFE8
 14237                           indf1	equ	0xFE7
 14238                           postdec1	equ	0xFE5
 14239                           plusw1	equ	0xFE3
 14240                           fsr1h	equ	0xFE2
 14241                           fsr1l	equ	0xFE1
 14242                           indf2	equ	0xFDF
 14243                           postinc2	equ	0xFDE
 14244                           postdec2	equ	0xFDD
 14245                           plusw2	equ	0xFDB
 14246                           fsr2h	equ	0xFDA
 14247                           fsr2l	equ	0xFD9
 14248                           status	equ	0xFD8
 14249                           
 14250 ;; *************** function ___fldiv *****************
 14251 ;; Defined at:
 14252 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;  b               4   61[BANK1 ] int 
 14255 ;;  a               4   65[BANK1 ] int 
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;  grs             4   80[BANK1 ] unsigned long 
 14258 ;;  rem             4   74[BANK1 ] unsigned long 
 14259 ;;  new_exp         2   78[BANK1 ] int 
 14260 ;;  aexp            1   85[BANK1 ] unsigned char 
 14261 ;;  bexp            1   84[BANK1 ] unsigned char 
 14262 ;;  sign            1   73[BANK1 ] unsigned char 
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  4   61[BANK1 ] unsigned char 
 14265 ;; Registers used:
 14266 ;;		wreg, status,2, status,0
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14272 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14273 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14274 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14275 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14276 ;;Total ram usage:       25 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:   13
 14279 ;; This function calls:
 14280 ;;		Nothing
 14281 ;; This function is called by:
 14282 ;;		_ringBufferLUT
 14283 ;; This function uses a non-reentrant model
 14284 ;;
 14285                           
 14286                           	psect	text28
 14287  0159E6                     __ptext28:
 14288                           	opt stack 0
 14289  0159E6                     ___fldiv:
 14290                           	opt stack 15
 14291                           
 14292                           ; BSR set to: 1
 14293                           ;incstack = 0
 14294  0159E6  0101               	movlb	1	; () banked
 14295  0159E8  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 14296  0159EA  0B80               	andlw	128
 14297  0159EC  6F49               	movwf	___fldiv@sign& (0+255),b
 14298  0159EE  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 14299  0159F0  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 14300  0159F2  6F54               	movwf	___fldiv@bexp& (0+255),b
 14301                           
 14302                           ; BSR set to: 1
 14303  0159F4  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 14304                           
 14305                           ; BSR set to: 1
 14306  0159F6  8154               	bsf	___fldiv@bexp& (0+255),0,b
 14307                           
 14308                           ; BSR set to: 1
 14309                           
 14310                           ; BSR set to: 1
 14311  0159F8  5154               	movf	___fldiv@bexp& (0+255),w,b
 14312  0159FA  B4D8               	btfsc	status,2,c
 14313  0159FC  D00D               	goto	l2152
 14314                           
 14315                           ; BSR set to: 1
 14316  0159FE  2954               	incf	___fldiv@bexp& (0+255),w,b
 14317  015A00  A4D8               	btfss	status,2,c
 14318  015A02  D008               	goto	l2153
 14319                           
 14320                           ; BSR set to: 1
 14321  015A04  0E00               	movlw	0
 14322  015A06  6F3D               	movwf	___fldiv@b& (0+255),b
 14323  015A08  0E00               	movlw	0
 14324  015A0A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14325  015A0C  0E00               	movlw	0
 14326  015A0E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14327  015A10  0E00               	movlw	0
 14328  015A12  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14329  015A14                     l2153:
 14330                           
 14331                           ; BSR set to: 1
 14332                           
 14333                           ; BSR set to: 1
 14334  015A14  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 14335  015A16  D006               	goto	L2
 14336  015A18                     l2152:
 14337                           
 14338                           ; BSR set to: 1
 14339                           
 14340                           ; BSR set to: 1
 14341  015A18  0E00               	movlw	0
 14342  015A1A  6F3D               	movwf	___fldiv@b& (0+255),b
 14343  015A1C  0E00               	movlw	0
 14344  015A1E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14345  015A20  0E00               	movlw	0
 14346  015A22  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14347  015A24                     L2:
 14348  015A24  0E00               	movlw	0
 14349  015A26  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14350                           
 14351                           ; BSR set to: 1
 14352                           
 14353                           ; BSR set to: 1
 14354  015A28  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14355  015A2A  0B80               	andlw	128
 14356  015A2C  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 14357                           
 14358                           ; BSR set to: 1
 14359  015A2E  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14360  015A30  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 14361  015A32  6F55               	movwf	___fldiv@aexp& (0+255),b
 14362                           
 14363                           ; BSR set to: 1
 14364  015A34  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 14365                           
 14366                           ; BSR set to: 1
 14367  015A36  8155               	bsf	___fldiv@aexp& (0+255),0,b
 14368                           
 14369                           ; BSR set to: 1
 14370                           
 14371                           ; BSR set to: 1
 14372  015A38  5155               	movf	___fldiv@aexp& (0+255),w,b
 14373  015A3A  B4D8               	btfsc	status,2,c
 14374  015A3C  D00D               	goto	l2156
 14375                           
 14376                           ; BSR set to: 1
 14377  015A3E  2955               	incf	___fldiv@aexp& (0+255),w,b
 14378  015A40  A4D8               	btfss	status,2,c
 14379  015A42  D008               	goto	l2157
 14380                           
 14381                           ; BSR set to: 1
 14382  015A44  0E00               	movlw	0
 14383  015A46  6F41               	movwf	___fldiv@a& (0+255),b
 14384  015A48  0E00               	movlw	0
 14385  015A4A  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 14386  015A4C  0E00               	movlw	0
 14387  015A4E  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 14388  015A50  0E00               	movlw	0
 14389  015A52  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 14390  015A54                     l2157:
 14391                           
 14392                           ; BSR set to: 1
 14393                           
 14394                           ; BSR set to: 1
 14395  015A54  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 14396  015A56  D006               	goto	L3
 14397  015A58                     l2156:
 14398                           
 14399                           ; BSR set to: 1
 14400                           
 14401                           ; BSR set to: 1
 14402  015A58  0E00               	movlw	0
 14403  015A5A  6F41               	movwf	___fldiv@a& (0+255),b
 14404  015A5C  0E00               	movlw	0
 14405  015A5E  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 14406  015A60  0E00               	movlw	0
 14407  015A62  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 14408  015A64                     L3:
 14409  015A64  0E00               	movlw	0
 14410  015A66  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 14411                           
 14412                           ; BSR set to: 1
 14413                           
 14414                           ; BSR set to: 1
 14415  015A68  5141               	movf	___fldiv@a& (0+255),w,b
 14416  015A6A  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14417  015A6C  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14418  015A6E  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14419  015A70  A4D8               	btfss	status,2,c
 14420  015A72  D015               	goto	l2159
 14421                           
 14422                           ; BSR set to: 1
 14423  015A74  0E00               	movlw	0
 14424  015A76  6F3D               	movwf	___fldiv@b& (0+255),b
 14425  015A78  0E00               	movlw	0
 14426  015A7A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14427  015A7C  0E00               	movlw	0
 14428  015A7E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14429  015A80  0E00               	movlw	0
 14430  015A82  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14431                           
 14432                           ; BSR set to: 1
 14433  015A84  0E80               	movlw	128
 14434  015A86  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14435  015A88  0E7F               	movlw	127
 14436  015A8A  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14437                           
 14438                           ; BSR set to: 1
 14439  015A8C  C13D  F13D         	movff	___fldiv@b,?___fldiv
 14440  015A90  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 14441  015A94  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 14442  015A98  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 14443                           
 14444                           ; BSR set to: 1
 14445  015A9C  0012               	return	
 14446  015A9E                     l2159:
 14447                           
 14448                           ; BSR set to: 1
 14449                           
 14450                           ; BSR set to: 1
 14451  015A9E  5154               	movf	___fldiv@bexp& (0+255),w,b
 14452  015AA0  A4D8               	btfss	status,2,c
 14453  015AA2  D011               	goto	l2161
 14454                           
 14455                           ; BSR set to: 1
 14456  015AA4  0E00               	movlw	0
 14457  015AA6  6F3D               	movwf	___fldiv@b& (0+255),b
 14458  015AA8  0E00               	movlw	0
 14459  015AAA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14460  015AAC  0E00               	movlw	0
 14461  015AAE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14462  015AB0  0E00               	movlw	0
 14463  015AB2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14464                           
 14465                           ; BSR set to: 1
 14466  015AB4  C13D  F13D         	movff	___fldiv@b,?___fldiv
 14467  015AB8  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 14468  015ABC  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 14469  015AC0  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 14470                           
 14471                           ; BSR set to: 1
 14472  015AC4  0012               	return	
 14473  015AC6                     l2161:
 14474                           
 14475                           ; BSR set to: 1
 14476                           
 14477                           ; BSR set to: 1
 14478  015AC6  5155               	movf	___fldiv@aexp& (0+255),w,b
 14479  015AC8  6F45               	movwf	??___fldiv& (0+255),b
 14480  015ACA  6B46               	clrf	(??___fldiv+1)& (0+255),b
 14481  015ACC  1F45               	comf	??___fldiv& (0+255),f,b
 14482  015ACE  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 14483  015AD0  4B45               	infsnz	??___fldiv& (0+255),f,b
 14484  015AD2  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 14485  015AD4  5154               	movf	___fldiv@bexp& (0+255),w,b
 14486  015AD6  6F47               	movwf	(??___fldiv+2)& (0+255),b
 14487  015AD8  6B48               	clrf	(??___fldiv+3)& (0+255),b
 14488  015ADA  5145               	movf	??___fldiv& (0+255),w,b
 14489  015ADC  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 14490  015ADE  5146               	movf	(??___fldiv+1)& (0+255),w,b
 14491  015AE0  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 14492  015AE2  0E7F               	movlw	127
 14493  015AE4  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 14494  015AE6  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 14495  015AE8  0E00               	movlw	0
 14496  015AEA  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 14497  015AEC  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14498                           
 14499                           ; BSR set to: 1
 14500  015AEE  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 14501  015AF2  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 14502  015AF6  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 14503  015AFA  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 14504                           
 14505                           ; BSR set to: 1
 14506  015AFE  0E00               	movlw	0
 14507  015B00  6F3D               	movwf	___fldiv@b& (0+255),b
 14508  015B02  0E00               	movlw	0
 14509  015B04  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14510  015B06  0E00               	movlw	0
 14511  015B08  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14512  015B0A  0E00               	movlw	0
 14513  015B0C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14514                           
 14515                           ; BSR set to: 1
 14516  015B0E  0E00               	movlw	0
 14517  015B10  6F50               	movwf	___fldiv@grs& (0+255),b
 14518  015B12  0E00               	movlw	0
 14519  015B14  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 14520  015B16  0E00               	movlw	0
 14521  015B18  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 14522  015B1A  0E00               	movlw	0
 14523  015B1C  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 14524                           
 14525                           ; BSR set to: 1
 14526  015B1E  0E00               	movlw	0
 14527  015B20  6F55               	movwf	___fldiv@aexp& (0+255),b
 14528  015B22  D028               	goto	l2162
 14529  015B24                     
 14530                           ; BSR set to: 1
 14531                           
 14532                           ; BSR set to: 1
 14533  015B24  5155               	movf	___fldiv@aexp& (0+255),w,b
 14534  015B26  B4D8               	btfsc	status,2,c
 14535  015B28  D011               	goto	l2164
 14536                           
 14537                           ; BSR set to: 1
 14538  015B2A  90D8               	bcf	status,0,c
 14539  015B2C  374A               	rlcf	___fldiv@rem& (0+255),f,b
 14540  015B2E  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14541  015B30  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14542  015B32  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14543  015B34  90D8               	bcf	status,0,c
 14544  015B36  373D               	rlcf	___fldiv@b& (0+255),f,b
 14545  015B38  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14546  015B3A  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14547  015B3C  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14548                           
 14549                           ; BSR set to: 1
 14550  015B3E  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14551                           
 14552                           ; BSR set to: 1
 14553  015B40  813D               	bsf	___fldiv@b& (0+255),0,b
 14554                           
 14555                           ; BSR set to: 1
 14556  015B42  90D8               	bcf	status,0,c
 14557  015B44  3750               	rlcf	___fldiv@grs& (0+255),f,b
 14558  015B46  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14559  015B48  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14560  015B4A  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14561  015B4C                     l2164:
 14562                           
 14563                           ; BSR set to: 1
 14564                           
 14565                           ; BSR set to: 1
 14566  015B4C  5141               	movf	___fldiv@a& (0+255),w,b
 14567  015B4E  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 14568  015B50  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 14569  015B52  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14570  015B54  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 14571  015B56  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14572  015B58  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14573  015B5A  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14574  015B5C  A0D8               	btfss	status,0,c
 14575  015B5E  D009               	goto	l2166
 14576                           
 14577                           ; BSR set to: 1
 14578  015B60  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14579                           
 14580                           ; BSR set to: 1
 14581  015B62  5141               	movf	___fldiv@a& (0+255),w,b
 14582  015B64  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 14583  015B66  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 14584  015B68  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14585  015B6A  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 14586  015B6C  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14587  015B6E  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14588  015B70  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14589  015B72                     l2166:
 14590                           
 14591                           ; BSR set to: 1
 14592                           
 14593                           ; BSR set to: 1
 14594  015B72  2B55               	incf	___fldiv@aexp& (0+255),f,b
 14595  015B74                     l2162:
 14596                           
 14597                           ; BSR set to: 1
 14598  015B74  0E19               	movlw	25
 14599  015B76  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 14600  015B78  D7D5               	goto	l2163
 14601                           
 14602                           ; BSR set to: 1
 14603                           
 14604                           ; BSR set to: 1
 14605  015B7A  514A               	movf	___fldiv@rem& (0+255),w,b
 14606  015B7C  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14607  015B7E  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14608  015B80  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14609  015B82  B4D8               	btfsc	status,2,c
 14610  015B84  D011               	goto	l2169
 14611                           
 14612                           ; BSR set to: 1
 14613  015B86  8150               	bsf	___fldiv@grs& (0+255),0,b
 14614                           
 14615                           ; BSR set to: 1
 14616  015B88  D00F               	goto	l2169
 14617  015B8A                     
 14618                           ; BSR set to: 1
 14619                           
 14620                           ; BSR set to: 1
 14621  015B8A  90D8               	bcf	status,0,c
 14622  015B8C  373D               	rlcf	___fldiv@b& (0+255),f,b
 14623  015B8E  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14624  015B90  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14625  015B92  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14626                           
 14627                           ; BSR set to: 1
 14628  015B94  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14629                           
 14630                           ; BSR set to: 1
 14631  015B96  813D               	bsf	___fldiv@b& (0+255),0,b
 14632                           
 14633                           ; BSR set to: 1
 14634  015B98  90D8               	bcf	status,0,c
 14635  015B9A  3750               	rlcf	___fldiv@grs& (0+255),f,b
 14636  015B9C  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14637  015B9E  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14638  015BA0  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14639  015BA2  074E               	decf	___fldiv@new_exp& (0+255),f,b
 14640  015BA4  A0D8               	btfss	status,0,c
 14641  015BA6  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14642  015BA8                     l2169:
 14643                           
 14644                           ; BSR set to: 1
 14645                           
 14646                           ; BSR set to: 1
 14647  015BA8  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 14648  015BAA  D7EF               	goto	l2170
 14649                           
 14650                           ; BSR set to: 1
 14651                           
 14652                           ; BSR set to: 1
 14653  015BAC  0E00               	movlw	0
 14654  015BAE  6F55               	movwf	___fldiv@aexp& (0+255),b
 14655                           
 14656                           ; BSR set to: 1
 14657  015BB0  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14658  015BB2  D016               	goto	l2176
 14659                           
 14660                           ; BSR set to: 1
 14661  015BB4  0EFF               	movlw	255
 14662  015BB6  1550               	andwf	___fldiv@grs& (0+255),w,b
 14663  015BB8  6F45               	movwf	??___fldiv& (0+255),b
 14664  015BBA  0EFF               	movlw	255
 14665  015BBC  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14666  015BBE  6F46               	movwf	(??___fldiv+1)& (0+255),b
 14667  015BC0  0EFF               	movlw	255
 14668  015BC2  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14669  015BC4  6F47               	movwf	(??___fldiv+2)& (0+255),b
 14670  015BC6  0E7F               	movlw	127
 14671  015BC8  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14672  015BCA  6F48               	movwf	(??___fldiv+3)& (0+255),b
 14673  015BCC  5145               	movf	??___fldiv& (0+255),w,b
 14674  015BCE  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 14675  015BD0  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 14676  015BD2  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 14677  015BD4  A4D8               	btfss	status,2,c
 14678  015BD6  D002               	goto	u25530
 14679                           
 14680                           ; BSR set to: 1
 14681                           
 14682                           ; BSR set to: 1
 14683  015BD8  A13D               	btfss	___fldiv@b& (0+255),0,b
 14684  015BDA  D002               	goto	l2176
 14685  015BDC                     u25530:
 14686                           
 14687                           ; BSR set to: 1
 14688  015BDC  0E01               	movlw	1
 14689  015BDE  6F55               	movwf	___fldiv@aexp& (0+255),b
 14690  015BE0                     l2176:
 14691                           
 14692                           ; BSR set to: 1
 14693                           
 14694                           ; BSR set to: 1
 14695                           
 14696                           ; BSR set to: 1
 14697  015BE0  5155               	movf	___fldiv@aexp& (0+255),w,b
 14698  015BE2  B4D8               	btfsc	status,2,c
 14699  015BE4  D01F               	goto	l2178
 14700                           
 14701                           ; BSR set to: 1
 14702  015BE6  0E01               	movlw	1
 14703  015BE8  273D               	addwf	___fldiv@b& (0+255),f,b
 14704  015BEA  0E00               	movlw	0
 14705  015BEC  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14706  015BEE  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14707  015BF0  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14708                           
 14709                           ; BSR set to: 1
 14710  015BF2  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 14711  015BF4  D017               	goto	l2178
 14712                           
 14713                           ; BSR set to: 1
 14714  015BF6  C13D  F145         	movff	___fldiv@b,??___fldiv
 14715  015BFA  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 14716  015BFE  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 14717  015C02  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 14718  015C06  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 14719  015C08  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 14720  015C0A  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 14721  015C0C  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 14722  015C0E  3345               	rrcf	??___fldiv& (0+255),f,b
 14723  015C10  C145  F13D         	movff	??___fldiv,___fldiv@b
 14724  015C14  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 14725  015C18  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 14726  015C1C  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 14727                           
 14728                           ; BSR set to: 1
 14729  015C20  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 14730  015C22  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14731  015C24                     l2178:
 14732                           
 14733                           ; BSR set to: 1
 14734                           
 14735                           ; BSR set to: 1
 14736                           
 14737                           ; BSR set to: 1
 14738  015C24  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14739  015C26  D010               	goto	l2179
 14740  015C28  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14741  015C2A  E103               	bnz	u25560
 14742  015C2C  294E               	incf	___fldiv@new_exp& (0+255),w,b
 14743  015C2E  A0D8               	btfss	status,0,c
 14744  015C30  D00B               	goto	l2179
 14745  015C32                     u25560:
 14746                           
 14747                           ; BSR set to: 1
 14748  015C32  0E00               	movlw	0
 14749  015C34  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14750  015C36  694E               	setf	___fldiv@new_exp& (0+255),b
 14751  015C38  0E00               	movlw	0
 14752  015C3A  6F3D               	movwf	___fldiv@b& (0+255),b
 14753  015C3C  0E00               	movlw	0
 14754  015C3E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14755  015C40  0E00               	movlw	0
 14756  015C42  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14757  015C44  0E00               	movlw	0
 14758  015C46  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14759  015C48                     l2179:
 14760                           
 14761                           ; BSR set to: 1
 14762                           
 14763                           ; BSR set to: 1
 14764  015C48  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14765  015C4A  D005               	goto	u25570
 14766  015C4C  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14767  015C4E  E111               	bnz	l19092
 14768  015C50  054E               	decf	___fldiv@new_exp& (0+255),w,b
 14769  015C52  B0D8               	btfsc	status,0,c
 14770  015C54  D00E               	goto	l2180
 14771  015C56                     u25570:
 14772                           
 14773                           ; BSR set to: 1
 14774  015C56  0E00               	movlw	0
 14775  015C58  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14776  015C5A  0E00               	movlw	0
 14777  015C5C  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 14778  015C5E  0E00               	movlw	0
 14779  015C60  6F3D               	movwf	___fldiv@b& (0+255),b
 14780  015C62  0E00               	movlw	0
 14781  015C64  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14782  015C66  0E00               	movlw	0
 14783  015C68  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14784  015C6A  0E00               	movlw	0
 14785  015C6C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14786  015C6E  0E00               	movlw	0
 14787  015C70  6F49               	movwf	___fldiv@sign& (0+255),b
 14788  015C72                     l2180:
 14789  015C72                     l19092:
 14790                           
 14791                           ; BSR set to: 1
 14792  015C72  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 14793                           
 14794                           ; BSR set to: 1
 14795  015C76  A154               	btfss	___fldiv@bexp& (0+255),0,b
 14796  015C78  D002               	goto	l2181
 14797                           
 14798                           ; BSR set to: 1
 14799  015C7A  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 14800  015C7C  D001               	goto	l2182
 14801  015C7E                     l2181:
 14802                           
 14803                           ; BSR set to: 1
 14804                           
 14805                           ; BSR set to: 1
 14806  015C7E  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 14807  015C80                     l2182:
 14808                           
 14809                           ; BSR set to: 1
 14810                           
 14811                           ; BSR set to: 1
 14812  015C80  90D8               	bcf	status,0,c
 14813  015C82  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 14814  015C84  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14815                           
 14816                           ; BSR set to: 1
 14817  015C86  5149               	movf	___fldiv@sign& (0+255),w,b
 14818  015C88  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14819                           
 14820                           ; BSR set to: 1
 14821  015C8A  C13D  F13D         	movff	___fldiv@b,?___fldiv
 14822  015C8E  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 14823  015C92  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 14824  015C96  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 14825  015C9A  0012               	return	
 14826  015C9C                     __end_of___fldiv:
 14827                           	opt stack 0
 14828                           tblptru	equ	0xFF8
 14829                           tblptrh	equ	0xFF7
 14830                           tblptrl	equ	0xFF6
 14831                           tablat	equ	0xFF5
 14832                           prodh	equ	0xFF4
 14833                           prodl	equ	0xFF3
 14834                           intcon	equ	0xFF2
 14835                           indf0	equ	0xFEF
 14836                           postinc0	equ	0xFEE
 14837                           fsr0h	equ	0xFEA
 14838                           fsr0l	equ	0xFE9
 14839                           wreg	equ	0xFE8
 14840                           indf1	equ	0xFE7
 14841                           postdec1	equ	0xFE5
 14842                           plusw1	equ	0xFE3
 14843                           fsr1h	equ	0xFE2
 14844                           fsr1l	equ	0xFE1
 14845                           indf2	equ	0xFDF
 14846                           postinc2	equ	0xFDE
 14847                           postdec2	equ	0xFDD
 14848                           plusw2	equ	0xFDB
 14849                           fsr2h	equ	0xFDA
 14850                           fsr2l	equ	0xFD9
 14851                           status	equ	0xFD8
 14852                           
 14853 ;; *************** function _TMR7_StopTimer *****************
 14854 ;; Defined at:
 14855 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;		None
 14858 ;; Auto vars:     Size  Location     Type
 14859 ;;		None
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  1    wreg      void 
 14862 ;; Registers used:
 14863 ;;		None
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14873 ;;Total ram usage:        0 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:   13
 14876 ;; This function calls:
 14877 ;;		Nothing
 14878 ;; This function is called by:
 14879 ;;		_ringBufferLUT
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text29
 14884  018CDA                     __ptext29:
 14885                           	opt stack 0
 14886  018CDA                     _TMR7_StopTimer:
 14887                           	opt stack 15
 14888                           
 14889                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 14890                           
 14891                           ; BSR set to: 1
 14892                           ;incstack = 0
 14893  018CDA  010F               	movlb	15	; () banked
 14894  018CDC  9130               	bcf	48,0,b	;volatile
 14895                           
 14896                           ; BSR set to: 15
 14897  018CDE  0012               	return		;funcret
 14898  018CE0                     __end_of_TMR7_StopTimer:
 14899                           	opt stack 0
 14900                           tblptru	equ	0xFF8
 14901                           tblptrh	equ	0xFF7
 14902                           tblptrl	equ	0xFF6
 14903                           tablat	equ	0xFF5
 14904                           prodh	equ	0xFF4
 14905                           prodl	equ	0xFF3
 14906                           intcon	equ	0xFF2
 14907                           indf0	equ	0xFEF
 14908                           postinc0	equ	0xFEE
 14909                           fsr0h	equ	0xFEA
 14910                           fsr0l	equ	0xFE9
 14911                           wreg	equ	0xFE8
 14912                           indf1	equ	0xFE7
 14913                           postdec1	equ	0xFE5
 14914                           plusw1	equ	0xFE3
 14915                           fsr1h	equ	0xFE2
 14916                           fsr1l	equ	0xFE1
 14917                           indf2	equ	0xFDF
 14918                           postinc2	equ	0xFDE
 14919                           postdec2	equ	0xFDD
 14920                           plusw2	equ	0xFDB
 14921                           fsr2h	equ	0xFDA
 14922                           fsr2l	equ	0xFD9
 14923                           status	equ	0xFD8
 14924                           
 14925 ;; *************** function _EUSART2_Read *****************
 14926 ;; Defined at:
 14927 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 14928 ;; Parameters:    Size  Location     Type
 14929 ;;		None
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  readValue       1   23[BANK1 ] unsigned char 
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  1    wreg      unsigned char 
 14934 ;; Registers used:
 14935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14942 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14944 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14945 ;;Total ram usage:        1 bytes
 14946 ;; Hardware stack levels used:    1
 14947 ;; Hardware stack levels required when called:   13
 14948 ;; This function calls:
 14949 ;;		Nothing
 14950 ;; This function is called by:
 14951 ;;		_terminal_ringBufferPull
 14952 ;;		_getch
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956                           	psect	text30
 14957  018528                     __ptext30:
 14958                           	opt stack 0
 14959  018528                     _EUSART2_Read:
 14960                           	opt stack 16
 14961                           
 14962                           ;eusart2.c: 139: uint8_t readValue = 0;
 14963                           
 14964                           ; BSR set to: 15
 14965                           ;incstack = 0
 14966  018528  0E00               	movlw	0
 14967  01852A  0101               	movlb	1	; () banked
 14968  01852C  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 14969                           
 14970                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 14971  01852E  D002               	goto	l381
 14972  018530                     l382:
 14973                           
 14974                           ; BSR set to: 1
 14975  018530  0004               	clrwdt		;# 
 14976                           
 14977                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 14978  018532  827E               	bsf	3966,1,c	;volatile
 14979  018534                     l381:
 14980  018534  0101               	movlb	1	; () banked
 14981  018536  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14982  018538  B4D8               	btfsc	status,2,c
 14983  01853A  D7FA               	goto	l382
 14984                           
 14985                           ; BSR set to: 1
 14986                           ;eusart2.c: 145: }
 14987                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 14988  01853C  927E               	bcf	3966,1,c	;volatile
 14989                           
 14990                           ; BSR set to: 1
 14991                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 14992  01853E  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 14993  018540  0D01               	mullw	1
 14994  018542  0E00               	movlw	low _eusart2RxBuffer
 14995  018544  24F3               	addwf	prodl,w,c
 14996  018546  6ED9               	movwf	fsr2l,c
 14997  018548  0E02               	movlw	high _eusart2RxBuffer
 14998  01854A  20F4               	addwfc	prodh,w,c
 14999  01854C  6EDA               	movwf	fsr2h,c
 15000  01854E  50DF               	movf	indf2,w,c
 15001  018550  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 15002                           
 15003                           ; BSR set to: 1
 15004  018552  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 15005                           
 15006                           ; BSR set to: 1
 15007                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 15008  018554  0E3F               	movlw	63
 15009  018556  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 15010  018558  D002               	goto	l384
 15011                           
 15012                           ; BSR set to: 1
 15013                           ;eusart2.c: 151: {
 15014                           ;eusart2.c: 152: eusart2RxTail = 0;
 15015  01855A  0E00               	movlw	0
 15016  01855C  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 15017  01855E                     l384:
 15018                           
 15019                           ; BSR set to: 1
 15020                           ;eusart2.c: 153: }
 15021                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 15022                           
 15023                           ; BSR set to: 1
 15024  01855E  010E               	movlb	14	; () banked
 15025  018560  9F2C               	bcf	44,7,b	;volatile
 15026                           
 15027                           ; BSR set to: 14
 15028                           ;eusart2.c: 155: eusart2RxCount--;
 15029  018562  0101               	movlb	1	; () banked
 15030  018564  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 15031                           
 15032                           ; BSR set to: 1
 15033                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 15034  018566  010E               	movlb	14	; () banked
 15035  018568  8F2C               	bsf	44,7,b	;volatile
 15036                           
 15037                           ; BSR set to: 14
 15038                           ;eusart2.c: 158: return readValue;
 15039  01856A  0101               	movlb	1	; () banked
 15040  01856C  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 15041  01856E  0012               	return	
 15042  018570                     __end_of_EUSART2_Read:
 15043                           	opt stack 0
 15044                           tblptru	equ	0xFF8
 15045                           tblptrh	equ	0xFF7
 15046                           tblptrl	equ	0xFF6
 15047                           tablat	equ	0xFF5
 15048                           prodh	equ	0xFF4
 15049                           prodl	equ	0xFF3
 15050                           intcon	equ	0xFF2
 15051                           indf0	equ	0xFEF
 15052                           postinc0	equ	0xFEE
 15053                           fsr0h	equ	0xFEA
 15054                           fsr0l	equ	0xFE9
 15055                           wreg	equ	0xFE8
 15056                           indf1	equ	0xFE7
 15057                           postdec1	equ	0xFE5
 15058                           plusw1	equ	0xFE3
 15059                           fsr1h	equ	0xFE2
 15060                           fsr1l	equ	0xFE1
 15061                           indf2	equ	0xFDF
 15062                           postinc2	equ	0xFDE
 15063                           postdec2	equ	0xFDD
 15064                           plusw2	equ	0xFDB
 15065                           fsr2h	equ	0xFDA
 15066                           fsr2l	equ	0xFD9
 15067                           status	equ	0xFD8
 15068                           
 15069 ;; *************** function _terminal_clearTerminal *****************
 15070 ;; Defined at:
 15071 ;;		line 80 in file "ring_buffer_interface.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;		None
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;		None
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15089 ;;Total ram usage:        0 bytes
 15090 ;; Hardware stack levels used:    1
 15091 ;; Hardware stack levels required when called:   16
 15092 ;; This function calls:
 15093 ;;		_printf
 15094 ;; This function is called by:
 15095 ;;		_main
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           	psect	text31
 15100  018C16                     __ptext31:
 15101                           	opt stack 0
 15102  018C16                     _terminal_clearTerminal:
 15103                           	opt stack 14
 15104                           
 15105                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 15106                           
 15107                           ; BSR set to: 1
 15108                           ;incstack = 0
 15109  018C16  0EB0               	movlw	low STR_2
 15110  018C18  0101               	movlb	1	; () banked
 15111  018C1A  6F82               	movwf	printf@f& (0+255),b
 15112  018C1C  0EFF               	movlw	high STR_2
 15113  018C1E  6F83               	movwf	(printf@f+1)& (0+255),b
 15114  018C20  EC9F  F087         	call	_printf	;wreg free
 15115  018C24  0012               	return		;funcret
 15116  018C26                     __end_of_terminal_clearTerminal:
 15117                           	opt stack 0
 15118                           tblptru	equ	0xFF8
 15119                           tblptrh	equ	0xFF7
 15120                           tblptrl	equ	0xFF6
 15121                           tablat	equ	0xFF5
 15122                           prodh	equ	0xFF4
 15123                           prodl	equ	0xFF3
 15124                           intcon	equ	0xFF2
 15125                           indf0	equ	0xFEF
 15126                           postinc0	equ	0xFEE
 15127                           fsr0h	equ	0xFEA
 15128                           fsr0l	equ	0xFE9
 15129                           wreg	equ	0xFE8
 15130                           indf1	equ	0xFE7
 15131                           postdec1	equ	0xFE5
 15132                           plusw1	equ	0xFE3
 15133                           fsr1h	equ	0xFE2
 15134                           fsr1l	equ	0xFE1
 15135                           indf2	equ	0xFDF
 15136                           postinc2	equ	0xFDE
 15137                           postdec2	equ	0xFDD
 15138                           plusw2	equ	0xFDB
 15139                           fsr2h	equ	0xFDA
 15140                           fsr2l	equ	0xFD9
 15141                           status	equ	0xFD8
 15142                           
 15143 ;; *************** function _printf *****************
 15144 ;; Defined at:
 15145 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 15148 ;;		 -> STR_132(30), STR_131(46), STR_130(39), STR_129(62), 
 15149 ;;		 -> STR_128(55), STR_127(2361), STR_125(33), STR_123(46), 
 15150 ;;		 -> STR_121(51), STR_119(53), STR_117(58), STR_115(71), 
 15151 ;;		 -> STR_114(63), STR_113(37), STR_112(46), STR_111(102), 
 15152 ;;		 -> STR_110(86), STR_108(25), STR_106(42), STR_105(53), 
 15153 ;;		 -> STR_104(31), STR_102(29), STR_101(28), STR_99(42), 
 15154 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 15155 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(58), 
 15156 ;;		 -> STR_81(36), STR_79(36), STR_77(37), STR_75(45), 
 15157 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 15158 ;;		 -> STR_59(54), STR_58(64), STR_56(59), STR_54(85), 
 15159 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 15160 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 15161 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 15162 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 15163 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;  idx             1  150[BANK1 ] unsigned char 
 15166 ;;  val             4  167[BANK1 ] unsigned long 
 15167 ;;  fval            4  163[BANK1 ] unsigned long 
 15168 ;;  tmpval          4  157[BANK1 ] struct .
 15169 ;;  prec            2  175[BANK1 ] int 
 15170 ;;  width           2  173[BANK1 ] int 
 15171 ;;  flag            2  171[BANK1 ] unsigned short 
 15172 ;;  exp             2  161[BANK1 ] int 
 15173 ;;  ap              2  155[BANK1 ] PTR void [1]
 15174 ;;		 -> ?i2_printf(2), ?_printf(2), 
 15175 ;;  len             2  153[BANK1 ] unsigned int 
 15176 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 15177 ;;		 -> STR_146(7), printf@c(1), STR_145(16), STR_144(22), 
 15178 ;;		 -> STR_143(21), STR_142(27), STR_141(41), STR_140(32), 
 15179 ;;		 -> STR_139(19), STR_138(16), STR_137(15), STR_136(16), 
 15180 ;;		 -> STR_135(10), STR_134(13), STR_133(12), ringBufferLUT@channel_name(22), 
 15181 ;;		 -> TRIAC_Firing_Angle(4), 
 15182 ;;  c               1  177[BANK1 ] char 
 15183 ;;  d               1    0        unsigned char 
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  2  130[BANK1 ] int 
 15186 ;; Registers used:
 15187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15193 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15194 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15195 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15196 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15197 ;;Total ram usage:       48 bytes
 15198 ;; Hardware stack levels used:    1
 15199 ;; Hardware stack levels required when called:   15
 15200 ;; This function calls:
 15201 ;;		___awdiv
 15202 ;;		___fladd
 15203 ;;		___flge
 15204 ;;		___flmul
 15205 ;;		___flneg
 15206 ;;		___flsub
 15207 ;;		___fltol
 15208 ;;		___lldiv
 15209 ;;		___llmod
 15210 ;;		___wmul
 15211 ;;		___xxtofl
 15212 ;;		__div_to_l_
 15213 ;;		__tdiv_to_l_
 15214 ;;		_fround
 15215 ;;		_isdigit
 15216 ;;		_putch
 15217 ;;		_scale
 15218 ;; This function is called by:
 15219 ;;		_terminal_clearTerminal
 15220 ;;		_terminal_setCursorHome
 15221 ;;		_terminal_textAttributes
 15222 ;;		_terminal_printNewline
 15223 ;;		_ringBufferLUT
 15224 ;;		_terminal_printResetMessage
 15225 ;;		_terminal_clearLine
 15226 ;;		_terminal_saveCursor
 15227 ;;		_terminal_returnCursor
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           	psect	text32
 15232  010F3E                     __ptext32:
 15233                           	opt stack 0
 15234  010F3E                     _printf:
 15235                           	opt stack 13
 15236                           
 15237                           ;doprnt.c: 466: va_list ap;
 15238                           ;doprnt.c: 499: signed char c;
 15239                           ;doprnt.c: 501: int width;
 15240                           ;doprnt.c: 504: int prec;
 15241                           ;doprnt.c: 508: unsigned short flag;
 15242                           ;doprnt.c: 515: char d;
 15243                           ;doprnt.c: 516: double fval;
 15244                           ;doprnt.c: 517: int exp;
 15245                           ;doprnt.c: 523: union {
 15246                           ;doprnt.c: 524: unsigned long vd;
 15247                           ;doprnt.c: 525: double integ;
 15248                           ;doprnt.c: 526: } tmpval;
 15249                           ;doprnt.c: 528: unsigned long val;
 15250                           ;doprnt.c: 529: unsigned len;
 15251                           ;doprnt.c: 530: const char * cp;
 15252                           ;doprnt.c: 533: *ap = __va_start();
 15253                           
 15254                           ;incstack = 0
 15255  010F3E  0E84               	movlw	low (?_printf+2)
 15256  010F40  0101               	movlb	1	; () banked
 15257  010F42  6F9B               	movwf	printf@ap& (0+255),b
 15258  010F44  0E01               	movlw	high (?_printf+2)
 15259  010F46  6F9C               	movwf	(printf@ap+1)& (0+255),b
 15260                           
 15261                           ;doprnt.c: 536: while(c = *f++) {
 15262  010F48  EF67  F08E         	goto	u25000
 15263  010F4C                     
 15264                           ; BSR set to: 1
 15265                           ;doprnt.c: 538: if(c != '%')
 15266                           
 15267                           ; BSR set to: 1
 15268  010F4C  0E25               	movlw	37
 15269  010F4E  19B1               	xorwf	printf@c& (0+255),w,b
 15270  010F50  B4D8               	btfsc	status,2,c
 15271  010F52  D005               	goto	l1406
 15272                           
 15273                           ; BSR set to: 1
 15274                           ;doprnt.c: 540: {
 15275                           ;doprnt.c: 541: (putch(c) );
 15276  010F54  51B1               	movf	printf@c& (0+255),w,b
 15277  010F56  EC1B  F0C6         	call	_putch
 15278                           
 15279                           ;doprnt.c: 542: continue;
 15280  010F5A  EF67  F08E         	goto	u25000
 15281  010F5E                     l1406:
 15282                           
 15283                           ;doprnt.c: 543: }
 15284                           ;doprnt.c: 546: width = 0;
 15285  010F5E  0E00               	movlw	0
 15286  010F60  0101               	movlb	1	; () banked
 15287  010F62  6FAE               	movwf	(printf@width+1)& (0+255),b
 15288  010F64  0E00               	movlw	0
 15289  010F66  6FAD               	movwf	printf@width& (0+255),b
 15290                           
 15291                           ;doprnt.c: 548: flag = 0;
 15292  010F68  0E00               	movlw	0
 15293  010F6A  6FAC               	movwf	(printf@flag+1)& (0+255),b
 15294  010F6C  0E00               	movlw	0
 15295  010F6E  6FAB               	movwf	printf@flag& (0+255),b
 15296                           
 15297                           ; BSR set to: 1
 15298                           ;doprnt.c: 551: switch(*f) {
 15299                           
 15300                           ;doprnt.c: 550: for(;;) {
 15301  010F70  D004               	goto	l1408
 15302  010F72                     
 15303                           ;doprnt.c: 580: flag |= 0x04;
 15304                           
 15305                           ; BSR set to: 1
 15306  010F72  0101               	movlb	1	; () banked
 15307  010F74  85AB               	bsf	printf@flag& (0+255),2,b
 15308                           
 15309                           ;doprnt.c: 581: f++;
 15310  010F76  4B82               	infsnz	printf@f& (0+255),f,b
 15311  010F78  2B83               	incf	(printf@f+1)& (0+255),f,b
 15312  010F7A                     l1408:
 15313                           
 15314                           ; BSR set to: 1
 15315  010F7A  C182  FFF6         	movff	printf@f,tblptrl
 15316  010F7E  C183  FFF7         	movff	printf@f+1,tblptrh
 15317  010F82  0E00               	movlw	low (__mediumconst shr (0+16))
 15318  010F84  6EF8               	movwf	tblptru,c
 15319  010F86  0E0D               	movlw	(high __ramtop+-1)
 15320  010F88  64F7               	cpfsgt	tblptrh,c
 15321  010F8A  D003               	bra	u24267
 15322  010F8C  0008               	tblrd		*
 15323  010F8E  50F5               	movf	tablat,w,c
 15324  010F90  D005               	bra	u24260
 15325  010F92                     u24267:
 15326  010F92  CFF6 FFE9          	movff	tblptrl,fsr0l
 15327  010F96  CFF7 FFEA          	movff	tblptrh,fsr0h
 15328  010F9A  50EF               	movf	indf0,w,c
 15329  010F9C                     u24260:
 15330                           
 15331                           ; Switch size 1, requested type "space"
 15332                           ; Number of cases is 1, Range of values is 48 to 48
 15333                           ; switch strategies available:
 15334                           ; Name         Instructions Cycles
 15335                           ; simple_byte            4     3 (average)
 15336                           ;	Chosen strategy is simple_byte
 15337  010F9C  0A30               	xorlw	48	; case 48
 15338  010F9E  B4D8               	btfsc	status,2,c
 15339  010FA0  D7E8               	goto	l1409
 15340                           
 15341                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 15342                           
 15343                           ;doprnt.c: 586: }
 15344                           
 15345                           ;doprnt.c: 585: break;
 15346  010FA2  C182  FFF6         	movff	printf@f,tblptrl
 15347  010FA6  C183  FFF7         	movff	printf@f+1,tblptrh
 15348  010FAA  0E00               	movlw	low (__mediumconst shr (0+16))
 15349  010FAC  6EF8               	movwf	tblptru,c
 15350  010FAE  0E0D               	movlw	(high __ramtop+-1)
 15351  010FB0  64F7               	cpfsgt	tblptrh,c
 15352  010FB2  D003               	bra	u24277
 15353  010FB4  0008               	tblrd		*
 15354  010FB6  50F5               	movf	tablat,w,c
 15355  010FB8  D005               	bra	u24270
 15356  010FBA                     u24277:
 15357  010FBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 15358  010FBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 15359  010FC2  50EF               	movf	indf0,w,c
 15360  010FC4                     u24270:
 15361  010FC4  EC57  F0C5         	call	_isdigit
 15362  010FC8  A0D8               	btfss	status,0,c
 15363  010FCA  D04C               	goto	u24310
 15364                           
 15365                           ;doprnt.c: 598: width = 0;
 15366  010FCC  0E00               	movlw	0
 15367  010FCE  0101               	movlb	1	; () banked
 15368  010FD0  6FAE               	movwf	(printf@width+1)& (0+255),b
 15369  010FD2  0E00               	movlw	0
 15370  010FD4  6FAD               	movwf	printf@width& (0+255),b
 15371  010FD6                     
 15372                           ;doprnt.c: 600: width *= 10;
 15373                           
 15374                           ; BSR set to: 1
 15375  010FD6  C1AD  F117         	movff	printf@width,___wmul@multiplier
 15376  010FDA  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 15377  010FDE  0E00               	movlw	0
 15378  010FE0  0101               	movlb	1	; () banked
 15379  010FE2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15380  010FE4  0E0A               	movlw	10
 15381  010FE6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15382  010FE8  ECD0  F0C4         	call	___wmul	;wreg free
 15383  010FEC  C117  F1AD         	movff	?___wmul,printf@width
 15384  010FF0  C118  F1AE         	movff	?___wmul+1,printf@width+1
 15385                           
 15386                           ;doprnt.c: 601: width += *f++ - '0';
 15387  010FF4  0ED0               	movlw	208
 15388  010FF6  0101               	movlb	1	; () banked
 15389  010FF8  6F8C               	movwf	??_printf& (0+255),b
 15390  010FFA  0EFF               	movlw	255
 15391  010FFC  6F8D               	movwf	(??_printf+1)& (0+255),b
 15392  010FFE  C182  FFF6         	movff	printf@f,tblptrl
 15393  011002  C183  FFF7         	movff	printf@f+1,tblptrh
 15394  011006  0E00               	movlw	low (__mediumconst shr (0+16))
 15395  011008  6EF8               	movwf	tblptru,c
 15396  01100A  0E0D               	movlw	(high __ramtop+-1)
 15397  01100C  64F7               	cpfsgt	tblptrh,c
 15398  01100E  D003               	bra	u24297
 15399  011010  0008               	tblrd		*
 15400  011012  50F5               	movf	tablat,w,c
 15401  011014  D005               	bra	u24290
 15402  011016                     u24297:
 15403  011016  CFF6 FFE9          	movff	tblptrl,fsr0l
 15404  01101A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15405  01101E  50EF               	movf	indf0,w,c
 15406  011020                     u24290:
 15407  011020  0101               	movlb	1	; () banked
 15408  011022  6F8E               	movwf	(??_printf+2)& (0+255),b
 15409  011024  6B8F               	clrf	(??_printf+3)& (0+255),b
 15410  011026  518C               	movf	??_printf& (0+255),w,b
 15411  011028  278E               	addwf	(??_printf+2)& (0+255),f,b
 15412  01102A  518D               	movf	(??_printf+1)& (0+255),w,b
 15413  01102C  238F               	addwfc	(??_printf+3)& (0+255),f,b
 15414  01102E  518E               	movf	(??_printf+2)& (0+255),w,b
 15415  011030  27AD               	addwf	printf@width& (0+255),f,b
 15416  011032  518F               	movf	(??_printf+3)& (0+255),w,b
 15417  011034  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 15418                           
 15419                           ; BSR set to: 1
 15420  011036  4B82               	infsnz	printf@f& (0+255),f,b
 15421  011038  2B83               	incf	(printf@f+1)& (0+255),f,b
 15422                           
 15423                           ; BSR set to: 1
 15424                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15425  01103A  C182  FFF6         	movff	printf@f,tblptrl
 15426  01103E  C183  FFF7         	movff	printf@f+1,tblptrh
 15427  011042  0E00               	movlw	low (__mediumconst shr (0+16))
 15428  011044  6EF8               	movwf	tblptru,c
 15429  011046  0E0D               	movlw	(high __ramtop+-1)
 15430  011048  64F7               	cpfsgt	tblptrh,c
 15431  01104A  D003               	bra	u24307
 15432  01104C  0008               	tblrd		*
 15433  01104E  50F5               	movf	tablat,w,c
 15434  011050  D005               	bra	u24300
 15435  011052                     u24307:
 15436  011052  CFF6 FFE9          	movff	tblptrl,fsr0l
 15437  011056  CFF7 FFEA          	movff	tblptrh,fsr0h
 15438  01105A  50EF               	movf	indf0,w,c
 15439  01105C                     u24300:
 15440  01105C  EC57  F0C5         	call	_isdigit
 15441  011060  B0D8               	btfsc	status,0,c
 15442  011062  D7B9               	goto	l1414
 15443  011064                     u24310:
 15444                           
 15445                           ;doprnt.c: 608: }
 15446                           ;doprnt.c: 611: if(*f == '.') {
 15447  011064  C182  FFF6         	movff	printf@f,tblptrl
 15448  011068  C183  FFF7         	movff	printf@f+1,tblptrh
 15449  01106C  0E00               	movlw	low (__mediumconst shr (0+16))
 15450  01106E  6EF8               	movwf	tblptru,c
 15451  011070  0E0D               	movlw	(high __ramtop+-1)
 15452  011072  64F7               	cpfsgt	tblptrh,c
 15453  011074  D003               	bra	u24327
 15454  011076  0008               	tblrd		*
 15455  011078  50F5               	movf	tablat,w,c
 15456  01107A  D005               	bra	u24320
 15457  01107C                     u24327:
 15458  01107C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15459  011080  CFF7 FFEA          	movff	tblptrh,fsr0h
 15460  011084  50EF               	movf	indf0,w,c
 15461  011086                     u24320:
 15462  011086  0A2E               	xorlw	46
 15463  011088  A4D8               	btfss	status,2,c
 15464  01108A  D049               	goto	l1416
 15465                           
 15466                           ;doprnt.c: 612: flag |= 0x4000;
 15467  01108C  0101               	movlb	1	; () banked
 15468  01108E  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 15469                           
 15470                           ;doprnt.c: 613: f++;
 15471  011090  4B82               	infsnz	printf@f& (0+255),f,b
 15472  011092  2B83               	incf	(printf@f+1)& (0+255),f,b
 15473                           
 15474                           ; BSR set to: 1
 15475                           ;doprnt.c: 620: {
 15476                           ;doprnt.c: 621: prec = 0;
 15477  011094  0E00               	movlw	0
 15478  011096  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15479  011098  0E00               	movlw	0
 15480  01109A  6FAF               	movwf	printf@prec& (0+255),b
 15481                           
 15482                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 15483  01109C  D02A               	goto	l1417
 15484  01109E                     
 15485                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 15486                           
 15487                           ; BSR set to: 1
 15488  01109E  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 15489  0110A2  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 15490  0110A6  0E00               	movlw	0
 15491  0110A8  0101               	movlb	1	; () banked
 15492  0110AA  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15493  0110AC  0E0A               	movlw	10
 15494  0110AE  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15495  0110B0  ECD0  F0C4         	call	___wmul	;wreg free
 15496  0110B4  C182  FFF6         	movff	printf@f,tblptrl
 15497  0110B8  C183  FFF7         	movff	printf@f+1,tblptrh
 15498  0110BC  0E00               	movlw	low (__mediumconst shr (0+16))
 15499  0110BE  6EF8               	movwf	tblptru,c
 15500  0110C0  0E0D               	movlw	(high __ramtop+-1)
 15501  0110C2  64F7               	cpfsgt	tblptrh,c
 15502  0110C4  D003               	bra	u24347
 15503  0110C6  0008               	tblrd		*
 15504  0110C8  50F5               	movf	tablat,w,c
 15505  0110CA  D005               	bra	u24340
 15506  0110CC                     u24347:
 15507  0110CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15508  0110D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15509  0110D4  50EF               	movf	indf0,w,c
 15510  0110D6                     u24340:
 15511  0110D6  0101               	movlb	1	; () banked
 15512  0110D8  6F8C               	movwf	??_printf& (0+255),b
 15513  0110DA  518C               	movf	??_printf& (0+255),w,b
 15514  0110DC  2717               	addwf	?___wmul& (0+255),f,b
 15515  0110DE  0E00               	movlw	0
 15516  0110E0  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 15517  0110E2  0ED0               	movlw	208
 15518  0110E4  2517               	addwf	?___wmul& (0+255),w,b
 15519  0110E6  6FAF               	movwf	printf@prec& (0+255),b
 15520  0110E8  0EFF               	movlw	255
 15521  0110EA  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 15522  0110EC  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15523                           
 15524                           ; BSR set to: 1
 15525  0110EE  4B82               	infsnz	printf@f& (0+255),f,b
 15526  0110F0  2B83               	incf	(printf@f+1)& (0+255),f,b
 15527  0110F2                     l1417:
 15528                           
 15529                           ; BSR set to: 1
 15530                           
 15531                           ; BSR set to: 1
 15532  0110F2  C182  FFF6         	movff	printf@f,tblptrl
 15533  0110F6  C183  FFF7         	movff	printf@f+1,tblptrh
 15534  0110FA  0E00               	movlw	low (__mediumconst shr (0+16))
 15535  0110FC  6EF8               	movwf	tblptru,c
 15536  0110FE  0E0D               	movlw	(high __ramtop+-1)
 15537  011100  64F7               	cpfsgt	tblptrh,c
 15538  011102  D003               	bra	u24357
 15539  011104  0008               	tblrd		*
 15540  011106  50F5               	movf	tablat,w,c
 15541  011108  D005               	bra	u24350
 15542  01110A                     u24357:
 15543  01110A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15544  01110E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15545  011112  50EF               	movf	indf0,w,c
 15546  011114                     u24350:
 15547  011114  EC57  F0C5         	call	_isdigit
 15548  011118  A0D8               	btfss	status,0,c
 15549  01111A  D0A4               	goto	l1421
 15550  01111C  D7C0               	goto	l1418
 15551  01111E                     l1416:
 15552                           
 15553                           ;doprnt.c: 626: prec = 0;
 15554  01111E  0E00               	movlw	0
 15555  011120  0101               	movlb	1	; () banked
 15556  011122  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15557  011124  0E00               	movlw	0
 15558  011126  6FAF               	movwf	printf@prec& (0+255),b
 15559                           
 15560                           ; BSR set to: 1
 15561                           ;doprnt.c: 628: flag |= 0x1000;
 15562  011128  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 15563                           
 15564                           ; BSR set to: 1
 15565                           ;doprnt.c: 630: }
 15566                           ;doprnt.c: 635: switch(c = *f++) {
 15567  01112A  D09C               	goto	l1421
 15568  01112C                     
 15569                           ; BSR set to: 1
 15570                           ;doprnt.c: 663: flag |= 0x400;
 15571                           
 15572                           ; BSR set to: 1
 15573  01112C  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 15574                           
 15575                           ; BSR set to: 1
 15576                           ;doprnt.c: 698: case 'i':
 15577                           ;doprnt.c: 699: break;
 15578                           
 15579                           ; BSR set to: 1
 15580                           
 15581                           ;doprnt.c: 697: case 'd':
 15582                           
 15583                           ;doprnt.c: 664: break;
 15584  01112E  D0D1               	goto	l1425
 15585  011130                     
 15586                           ; BSR set to: 1
 15587                           ;doprnt.c: 718: case 'x':
 15588                           ;doprnt.c: 721: flag |= 0x80;
 15589                           
 15590                           ; BSR set to: 1
 15591                           
 15592                           ; BSR set to: 1
 15593  011130  8FAB               	bsf	printf@flag& (0+255),7,b
 15594                           
 15595                           ;doprnt.c: 723: break;
 15596  011132  D0CF               	goto	l1425
 15597  011134                     
 15598                           ; BSR set to: 1
 15599                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15600                           
 15601                           ; BSR set to: 1
 15602  011134  C19B  FFD9         	movff	printf@ap,fsr2l
 15603  011138  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15604  01113C  CFDE F197          	movff	postinc2,printf@cp
 15605  011140  CFDD F198          	movff	postdec2,printf@cp+1
 15606                           
 15607                           ; BSR set to: 1
 15608  011144  0E02               	movlw	2
 15609  011146  279B               	addwf	printf@ap& (0+255),f,b
 15610  011148  0E00               	movlw	0
 15611  01114A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15612                           
 15613                           ; BSR set to: 1
 15614                           ;doprnt.c: 740: if(!cp)
 15615  01114C  5197               	movf	printf@cp& (0+255),w,b
 15616  01114E  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 15617  011150  A4D8               	btfss	status,2,c
 15618  011152  D004               	goto	l1431
 15619                           
 15620                           ; BSR set to: 1
 15621                           ;doprnt.c: 741: cp = "(null)";
 15622  011154  0E86               	movlw	low STR_146
 15623  011156  6F97               	movwf	printf@cp& (0+255),b
 15624  011158  0EFF               	movlw	high STR_146
 15625  01115A  6F98               	movwf	(printf@cp+1)& (0+255),b
 15626  01115C                     l1431:
 15627                           
 15628                           ; BSR set to: 1
 15629                           ;doprnt.c: 745: len = 0;
 15630                           
 15631                           ; BSR set to: 1
 15632  01115C  0E00               	movlw	0
 15633  01115E  6F9A               	movwf	(printf@len+1)& (0+255),b
 15634  011160  0E00               	movlw	0
 15635  011162  6F99               	movwf	printf@len& (0+255),b
 15636                           
 15637                           ;doprnt.c: 746: while(cp[len])
 15638  011164  D003               	goto	l1432
 15639  011166                     
 15640                           ;doprnt.c: 747: len++;
 15641                           
 15642                           ; BSR set to: 1
 15643  011166  0101               	movlb	1	; () banked
 15644  011168  4B99               	infsnz	printf@len& (0+255),f,b
 15645  01116A  2B9A               	incf	(printf@len+1)& (0+255),f,b
 15646  01116C                     l1432:
 15647                           
 15648                           ; BSR set to: 1
 15649                           
 15650                           ; BSR set to: 1
 15651  01116C  5199               	movf	printf@len& (0+255),w,b
 15652  01116E  2597               	addwf	printf@cp& (0+255),w,b
 15653  011170  6F8C               	movwf	??_printf& (0+255),b
 15654  011172  519A               	movf	(printf@len+1)& (0+255),w,b
 15655  011174  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 15656  011176  6F8D               	movwf	(??_printf+1)& (0+255),b
 15657  011178  C18C  FFF6         	movff	??_printf,tblptrl
 15658  01117C  C18D  FFF7         	movff	??_printf+1,tblptrh
 15659  011180  0E00               	movlw	low (__mediumconst shr (0+16))
 15660  011182  6EF8               	movwf	tblptru,c
 15661  011184  0E0D               	movlw	(high __ramtop+-1)
 15662  011186  64F7               	cpfsgt	tblptrh,c
 15663  011188  D003               	bra	u24387
 15664  01118A  0008               	tblrd		*
 15665  01118C  50F5               	movf	tablat,w,c
 15666  01118E  D005               	bra	u24380
 15667  011190                     u24387:
 15668  011190  CFF6 FFE9          	movff	tblptrl,fsr0l
 15669  011194  CFF7 FFEA          	movff	tblptrh,fsr0h
 15670  011198  50EF               	movf	indf0,w,c
 15671  01119A                     u24380:
 15672  01119A  0900               	iorlw	0
 15673  01119C  A4D8               	btfss	status,2,c
 15674  01119E  D7E3               	goto	l1433
 15675  0111A0                     u24390:
 15676                           
 15677                           ;doprnt.c: 753: if(prec && prec < len)
 15678                           
 15679                           ;doprnt.c: 750: dostring:
 15680  0111A0  0101               	movlb	1	; () banked
 15681  0111A2  51AF               	movf	printf@prec& (0+255),w,b
 15682  0111A4  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 15683  0111A6  B4D8               	btfsc	status,2,c
 15684  0111A8  D00A               	goto	l1436
 15685                           
 15686                           ; BSR set to: 1
 15687  0111AA  5199               	movf	printf@len& (0+255),w,b
 15688  0111AC  5DAF               	subwf	printf@prec& (0+255),w,b
 15689  0111AE  519A               	movf	(printf@len+1)& (0+255),w,b
 15690  0111B0  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 15691  0111B2  B0D8               	btfsc	status,0,c
 15692  0111B4  D004               	goto	l1436
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;doprnt.c: 754: len = prec;
 15696  0111B6  C1AF  F199         	movff	printf@prec,printf@len
 15697  0111BA  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 15698  0111BE                     l1436:
 15699                           
 15700                           ; BSR set to: 1
 15701                           ;doprnt.c: 757: if(width > len)
 15702                           
 15703                           ; BSR set to: 1
 15704  0111BE  51AD               	movf	printf@width& (0+255),w,b
 15705  0111C0  5D99               	subwf	printf@len& (0+255),w,b
 15706  0111C2  51AE               	movf	(printf@width+1)& (0+255),w,b
 15707  0111C4  599A               	subwfb	(printf@len+1)& (0+255),w,b
 15708  0111C6  B0D8               	btfsc	status,0,c
 15709  0111C8  D005               	goto	l1437
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;doprnt.c: 758: width -= len;
 15713  0111CA  5199               	movf	printf@len& (0+255),w,b
 15714  0111CC  5FAD               	subwf	printf@width& (0+255),f,b
 15715  0111CE  519A               	movf	(printf@len+1)& (0+255),w,b
 15716  0111D0  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 15717  0111D2  D008               	goto	l1439
 15718  0111D4                     l1437:
 15719                           
 15720                           ; BSR set to: 1
 15721                           ;doprnt.c: 759: else
 15722                           ;doprnt.c: 760: width = 0;
 15723                           
 15724                           ; BSR set to: 1
 15725  0111D4  0E00               	movlw	0
 15726  0111D6  6FAE               	movwf	(printf@width+1)& (0+255),b
 15727  0111D8  0E00               	movlw	0
 15728  0111DA  6FAD               	movwf	printf@width& (0+255),b
 15729                           
 15730                           ; BSR set to: 1
 15731                           ;doprnt.c: 764: while(width--)
 15732  0111DC  D003               	goto	l1439
 15733  0111DE                     l18314:
 15734                           
 15735                           ; BSR set to: 1
 15736                           ;doprnt.c: 765: (putch(' ') );
 15737  0111DE  0E20               	movlw	32
 15738  0111E0  EC1B  F0C6         	call	_putch
 15739  0111E4                     l1439:
 15740  0111E4  0101               	movlb	1	; () banked
 15741  0111E6  07AD               	decf	printf@width& (0+255),f,b
 15742  0111E8  A0D8               	btfss	status,0,c
 15743  0111EA  07AE               	decf	(printf@width+1)& (0+255),f,b
 15744  0111EC  29AD               	incf	printf@width& (0+255),w,b
 15745  0111EE  E1F7               	bnz	l18314
 15746  0111F0  29AE               	incf	(printf@width+1)& (0+255),w,b
 15747  0111F2  B4D8               	btfsc	status,2,c
 15748  0111F4  D017               	goto	l1442
 15749  0111F6  D7F3               	goto	l1440
 15750  0111F8                     l18318:
 15751                           
 15752                           ; BSR set to: 1
 15753                           ;doprnt.c: 768: (putch(*cp++) );
 15754  0111F8  C197  FFF6         	movff	printf@cp,tblptrl
 15755  0111FC  C198  FFF7         	movff	printf@cp+1,tblptrh
 15756  011200  0E00               	movlw	low (__mediumconst shr (0+16))
 15757  011202  6EF8               	movwf	tblptru,c
 15758  011204  0E0D               	movlw	(high __ramtop+-1)
 15759  011206  64F7               	cpfsgt	tblptrh,c
 15760  011208  D003               	bra	u24447
 15761  01120A  0008               	tblrd		*
 15762  01120C  50F5               	movf	tablat,w,c
 15763  01120E  D005               	bra	u24440
 15764  011210                     u24447:
 15765  011210  CFF6 FFE9          	movff	tblptrl,fsr0l
 15766  011214  CFF7 FFEA          	movff	tblptrh,fsr0h
 15767  011218  50EF               	movf	indf0,w,c
 15768  01121A                     u24440:
 15769  01121A  EC1B  F0C6         	call	_putch
 15770  01121E  0101               	movlb	1	; () banked
 15771  011220  4B97               	infsnz	printf@cp& (0+255),f,b
 15772  011222  2B98               	incf	(printf@cp+1)& (0+255),f,b
 15773  011224                     l1442:
 15774                           
 15775                           ; BSR set to: 1
 15776                           
 15777                           ; BSR set to: 1
 15778  011224  0799               	decf	printf@len& (0+255),f,b
 15779  011226  A0D8               	btfss	status,0,c
 15780  011228  079A               	decf	(printf@len+1)& (0+255),f,b
 15781  01122A  2999               	incf	printf@len& (0+255),w,b
 15782  01122C  E1E5               	bnz	l18318
 15783  01122E  299A               	incf	(printf@len+1)& (0+255),w,b
 15784  011230  B4D8               	btfsc	status,2,c
 15785  011232  EF67  F08E         	goto	u25000
 15786  011236  D7E0               	goto	l1443
 15787  011238                     
 15788                           ; BSR set to: 1
 15789                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 15790                           
 15791                           ; BSR set to: 1
 15792  011238  C19B  FFD9         	movff	printf@ap,fsr2l
 15793  01123C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15794  011240  50DF               	movf	indf2,w,c
 15795  011242  6FB1               	movwf	printf@c& (0+255),b
 15796                           
 15797                           ; BSR set to: 1
 15798  011244  0E02               	movlw	2
 15799  011246  279B               	addwf	printf@ap& (0+255),f,b
 15800  011248  0E00               	movlw	0
 15801  01124A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15802  01124C                     
 15803                           ; BSR set to: 1
 15804                           ;doprnt.c: 805: cp = (char *)&c;
 15805                           
 15806                           ; BSR set to: 1
 15807  01124C  0EB1               	movlw	low printf@c
 15808  01124E  6F97               	movwf	printf@cp& (0+255),b
 15809  011250  0E01               	movlw	high printf@c
 15810  011252  6F98               	movwf	(printf@cp+1)& (0+255),b
 15811                           
 15812                           ; BSR set to: 1
 15813                           ;doprnt.c: 806: len = 1;
 15814  011254  0E00               	movlw	0
 15815  011256  6F9A               	movwf	(printf@len+1)& (0+255),b
 15816  011258  0E01               	movlw	1
 15817  01125A  6F99               	movwf	printf@len& (0+255),b
 15818                           
 15819                           ;doprnt.c: 807: goto dostring;
 15820  01125C  D7A1               	goto	u24390
 15821  01125E                     
 15822                           ; BSR set to: 1
 15823                           ;doprnt.c: 818: flag |= 0xC0;
 15824                           
 15825                           ; BSR set to: 1
 15826  01125E  0EC0               	movlw	192
 15827  011260  13AB               	iorwf	printf@flag& (0+255),f,b
 15828                           
 15829                           ; BSR set to: 1
 15830                           ;doprnt.c: 822: }
 15831                           
 15832                           ;doprnt.c: 819: break;
 15833  011262  D037               	goto	l1425
 15834  011264                     l1421:
 15835                           
 15836                           ; BSR set to: 1
 15837  011264  0101               	movlb	1	; () banked
 15838  011266  5182               	movf	printf@f& (0+255),w,b
 15839  011268  6F8C               	movwf	??_printf& (0+255),b
 15840  01126A  5183               	movf	(printf@f+1)& (0+255),w,b
 15841  01126C  6F8D               	movwf	(??_printf+1)& (0+255),b
 15842  01126E  4B82               	infsnz	printf@f& (0+255),f,b
 15843  011270  2B83               	incf	(printf@f+1)& (0+255),f,b
 15844  011272  C18C  FFF6         	movff	??_printf,tblptrl
 15845  011276  C18D  FFF7         	movff	??_printf+1,tblptrh
 15846  01127A  0E00               	movlw	low (__mediumconst shr (0+16))
 15847  01127C  6EF8               	movwf	tblptru,c
 15848  01127E  0E0D               	movlw	(high __ramtop+-1)
 15849  011280  64F7               	cpfsgt	tblptrh,c
 15850  011282  D003               	bra	u24467
 15851  011284  0008               	tblrd		*
 15852  011286  50F5               	movf	tablat,w,c
 15853  011288  D005               	bra	u24460
 15854  01128A                     u24467:
 15855  01128A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15856  01128E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15857  011292  50EF               	movf	indf0,w,c
 15858  011294                     u24460:
 15859  011294  0101               	movlb	1	; () banked
 15860  011296  6FB1               	movwf	printf@c& (0+255),b
 15861  011298  51B1               	movf	printf@c& (0+255),w,b
 15862                           
 15863                           ; Switch size 1, requested type "space"
 15864                           ; Number of cases is 9, Range of values is 0 to 120
 15865                           ; switch strategies available:
 15866                           ; Name         Instructions Cycles
 15867                           ; simple_byte           28    15 (average)
 15868                           ;	Chosen strategy is simple_byte
 15869  01129A  0A00               	xorlw	0	; case 0
 15870  01129C  B4D8               	btfsc	status,2,c
 15871  01129E  0012               	return	
 15872  0112A0  0A58               	xorlw	88	; case 88
 15873  0112A2  B4D8               	btfsc	status,2,c
 15874  0112A4  D745               	goto	l1428
 15875  0112A6  0A3B               	xorlw	59	; case 99
 15876  0112A8  B4D8               	btfsc	status,2,c
 15877  0112AA  D7C6               	goto	l1445
 15878  0112AC  0A07               	xorlw	7	; case 100
 15879  0112AE  B4D8               	btfsc	status,2,c
 15880  0112B0  D010               	goto	l1425
 15881  0112B2  0A02               	xorlw	2	; case 102
 15882  0112B4  B4D8               	btfsc	status,2,c
 15883  0112B6  D73A               	goto	l1424
 15884  0112B8  0A0F               	xorlw	15	; case 105
 15885  0112BA  B4D8               	btfsc	status,2,c
 15886  0112BC  D00A               	goto	l1425
 15887  0112BE  0A1A               	xorlw	26	; case 115
 15888  0112C0  B4D8               	btfsc	status,2,c
 15889  0112C2  D738               	goto	l1430
 15890  0112C4  0A06               	xorlw	6	; case 117
 15891  0112C6  B4D8               	btfsc	status,2,c
 15892  0112C8  D7CA               	goto	l1447
 15893  0112CA  0A0D               	xorlw	13	; case 120
 15894  0112CC  B4D8               	btfsc	status,2,c
 15895  0112CE  D730               	goto	l1428
 15896  0112D0  D7BD               	goto	l1446
 15897  0112D2                     l1425:
 15898                           
 15899                           ; BSR set to: 1
 15900                           ;doprnt.c: 825: if(flag & (0x700)) {
 15901                           
 15902                           ; BSR set to: 1
 15903  0112D2  0E07               	movlw	7
 15904  0112D4  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15905  0112D6  B4D8               	btfsc	status,2,c
 15906  0112D8  D33D               	goto	l1448
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;doprnt.c: 827: if(flag & 0x1000)
 15910  0112DA  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 15911  0112DC  D004               	goto	l1449
 15912                           
 15913                           ; BSR set to: 1
 15914                           ;doprnt.c: 829: prec = 6;
 15915  0112DE  0E00               	movlw	0
 15916  0112E0  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15917  0112E2  0E06               	movlw	6
 15918  0112E4  6FAF               	movwf	printf@prec& (0+255),b
 15919  0112E6                     l1449:
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 15923                           
 15924                           ; BSR set to: 1
 15925  0112E6  C19B  FFD9         	movff	printf@ap,fsr2l
 15926  0112EA  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15927  0112EE  CFDE F1A3          	movff	postinc2,printf@fval
 15928  0112F2  CFDE F1A4          	movff	postinc2,printf@fval+1
 15929  0112F6  CFDE F1A5          	movff	postinc2,printf@fval+2
 15930  0112FA  CFDE F1A6          	movff	postinc2,printf@fval+3
 15931                           
 15932                           ; BSR set to: 1
 15933  0112FE  0E04               	movlw	4
 15934  011300  279B               	addwf	printf@ap& (0+255),f,b
 15935  011302  0E00               	movlw	0
 15936  011304  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15937                           
 15938                           ; BSR set to: 1
 15939                           ;doprnt.c: 831: if(fval < 0.0) {
 15940  011306  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 15941  011308  D015               	goto	l1450
 15942                           
 15943                           ; BSR set to: 1
 15944                           ;doprnt.c: 832: fval = -fval;
 15945  01130A  C1A3  F125         	movff	printf@fval,___flneg@f1
 15946  01130E  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 15947  011312  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 15948  011316  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 15949  01131A  EC75  F0C4         	call	___flneg	;wreg free
 15950  01131E  C125  F1A3         	movff	?___flneg,printf@fval
 15951  011322  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 15952  011326  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 15953  01132A  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 15954                           
 15955                           ;doprnt.c: 833: flag |= 0x03;
 15956  01132E  0E03               	movlw	3
 15957  011330  0101               	movlb	1	; () banked
 15958  011332  13AB               	iorwf	printf@flag& (0+255),f,b
 15959  011334                     l1450:
 15960                           
 15961                           ; BSR set to: 1
 15962                           ;doprnt.c: 834: }
 15963                           ;doprnt.c: 835: exp = 0;
 15964                           
 15965                           ; BSR set to: 1
 15966  011334  0E00               	movlw	0
 15967  011336  6FA2               	movwf	(printf@exp+1)& (0+255),b
 15968  011338  0E00               	movlw	0
 15969  01133A  6FA1               	movwf	printf@exp& (0+255),b
 15970                           
 15971                           ; BSR set to: 1
 15972                           ;doprnt.c: 836: if( fval!=0) {
 15973  01133C  51A3               	movf	printf@fval& (0+255),w,b
 15974  01133E  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 15975  011340  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 15976  011342  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 15977  011344  B4D8               	btfsc	status,2,c
 15978  011346  D084               	goto	l1455
 15979                           
 15980                           ; BSR set to: 1
 15981                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 15982  011348  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 15983  01134A  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 15984  01134C  0F82               	addlw	130
 15985  01134E  6FA1               	movwf	printf@exp& (0+255),b
 15986  011350  6BA2               	clrf	(printf@exp+1)& (0+255),b
 15987  011352  0EFF               	movlw	255
 15988  011354  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 15989                           
 15990                           ; BSR set to: 1
 15991                           ;doprnt.c: 838: exp--;
 15992  011356  07A1               	decf	printf@exp& (0+255),f,b
 15993  011358  A0D8               	btfss	status,0,c
 15994  01135A  07A2               	decf	(printf@exp+1)& (0+255),f,b
 15995                           
 15996                           ; BSR set to: 1
 15997                           ;doprnt.c: 839: exp *= 3;
 15998  01135C  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 15999  011360  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 16000  011364  0E00               	movlw	0
 16001  011366  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16002  011368  0E03               	movlw	3
 16003  01136A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 16004  01136C  ECD0  F0C4         	call	___wmul	;wreg free
 16005  011370  C117  F1A1         	movff	?___wmul,printf@exp
 16006  011374  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 16007                           
 16008                           ;doprnt.c: 840: exp /= 10;
 16009  011378  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 16010  01137C  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 16011  011380  0E00               	movlw	0
 16012  011382  0101               	movlb	1	; () banked
 16013  011384  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16014  011386  0E0A               	movlw	10
 16015  011388  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16016  01138A  ECAE  F0BD         	call	___awdiv	;wreg free
 16017  01138E  C11D  F1A1         	movff	?___awdiv,printf@exp
 16018  011392  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 16019                           
 16020                           ;doprnt.c: 841: if(exp < 0)
 16021  011396  0101               	movlb	1	; () banked
 16022  011398  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 16023  01139A  D003               	goto	l1452
 16024                           
 16025                           ; BSR set to: 1
 16026                           ;doprnt.c: 842: exp--;
 16027  01139C  07A1               	decf	printf@exp& (0+255),f,b
 16028  01139E  A0D8               	btfss	status,0,c
 16029  0113A0  07A2               	decf	(printf@exp+1)& (0+255),f,b
 16030  0113A2                     l1452:
 16031                           
 16032                           ; BSR set to: 1
 16033                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 16034                           
 16035                           ; BSR set to: 1
 16036  0113A2  51A1               	movf	printf@exp& (0+255),w,b
 16037  0113A4  0800               	sublw	0
 16038  0113A6  EC58  F09A         	call	_scale
 16039  0113AA  C16F  F19D         	movff	?_scale,printf@tmpval
 16040  0113AE  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 16041  0113B2  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 16042  0113B6  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 16043                           
 16044                           ;doprnt.c: 847: tmpval.integ *= fval;
 16045  0113BA  C19D  F156         	movff	printf@tmpval,___flmul@b
 16046  0113BE  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 16047  0113C2  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 16048  0113C6  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 16049  0113CA  C1A3  F15A         	movff	printf@fval,___flmul@a
 16050  0113CE  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 16051  0113D2  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 16052  0113D6  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 16053  0113DA  EC9E  F0A0         	call	___flmul	;wreg free
 16054  0113DE  C156  F19D         	movff	?___flmul,printf@tmpval
 16055  0113E2  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 16056  0113E6  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 16057  0113EA  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 16058                           
 16059                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 16060  0113EE  C19D  F117         	movff	printf@tmpval,___flge@ff1
 16061  0113F2  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 16062  0113F6  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 16063  0113FA  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 16064  0113FE  0E00               	movlw	0
 16065  011400  0101               	movlb	1	; () banked
 16066  011402  6F1B               	movwf	___flge@ff2& (0+255),b
 16067  011404  0E00               	movlw	0
 16068  011406  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 16069  011408  0E80               	movlw	128
 16070  01140A  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 16071  01140C  0E3F               	movlw	63
 16072  01140E  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 16073  011410  EC55  F0B8         	call	___flge	;wreg free
 16074  011414  0101               	movlb	1	; () banked
 16075  011416  B0D8               	btfsc	status,0,c
 16076  011418  D004               	goto	l1453
 16077                           
 16078                           ; BSR set to: 1
 16079                           ;doprnt.c: 849: exp--;
 16080  01141A  07A1               	decf	printf@exp& (0+255),f,b
 16081  01141C  A0D8               	btfss	status,0,c
 16082  01141E  07A2               	decf	(printf@exp+1)& (0+255),f,b
 16083  011420  D017               	goto	l1455
 16084  011422                     l1453:
 16085                           
 16086                           ; BSR set to: 1
 16087                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 16088                           
 16089                           ; BSR set to: 1
 16090  011422  C19D  F117         	movff	printf@tmpval,___flge@ff1
 16091  011426  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 16092  01142A  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 16093  01142E  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 16094  011432  0E00               	movlw	0
 16095  011434  6F1B               	movwf	___flge@ff2& (0+255),b
 16096  011436  0E00               	movlw	0
 16097  011438  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 16098  01143A  0E20               	movlw	32
 16099  01143C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 16100  01143E  0E41               	movlw	65
 16101  011440  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 16102  011442  EC55  F0B8         	call	___flge	;wreg free
 16103  011446  0101               	movlb	1	; () banked
 16104  011448  A0D8               	btfss	status,0,c
 16105  01144A  D002               	goto	l1455
 16106                           
 16107                           ; BSR set to: 1
 16108                           ;doprnt.c: 851: exp++;
 16109  01144C  4BA1               	infsnz	printf@exp& (0+255),f,b
 16110  01144E  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 16111  011450                     l1455:
 16112                           
 16113                           ; BSR set to: 1
 16114                           ;doprnt.c: 852: }
 16115                           ;doprnt.c: 1112: if(prec <= 12)
 16116                           
 16117                           ; BSR set to: 1
 16118                           
 16119                           ; BSR set to: 1
 16120                           
 16121                           ; BSR set to: 1
 16122  011450  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 16123  011452  D006               	goto	u24540
 16124  011454  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16125  011456  E121               	bnz	l18386
 16126  011458  0E0D               	movlw	13
 16127  01145A  5DAF               	subwf	printf@prec& (0+255),w,b
 16128  01145C  B0D8               	btfsc	status,0,c
 16129  01145E  D01D               	goto	l1456
 16130  011460                     u24540:
 16131                           
 16132                           ; BSR set to: 1
 16133                           ;doprnt.c: 1113: fval += fround(prec);
 16134  011460  C1A3  F129         	movff	printf@fval,___fladd@b
 16135  011464  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 16136  011468  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 16137  01146C  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 16138  011470  51AF               	movf	printf@prec& (0+255),w,b
 16139  011472  EC90  F0AB         	call	_fround
 16140  011476  C16F  F12D         	movff	?_fround,___fladd@a
 16141  01147A  C170  F12E         	movff	?_fround+1,___fladd@a+1
 16142  01147E  C171  F12F         	movff	?_fround+2,___fladd@a+2
 16143  011482  C172  F130         	movff	?_fround+3,___fladd@a+3
 16144  011486  ECEF  F0A3         	call	___fladd	;wreg free
 16145  01148A  C129  F1A3         	movff	?___fladd,printf@fval
 16146  01148E  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 16147  011492  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 16148  011496  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 16149  01149A                     l1456:
 16150  01149A                     l18386:
 16151                           
 16152                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 16153  01149A  0101               	movlb	1	; () banked
 16154  01149C  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 16155  01149E  D006               	goto	u24550
 16156  0114A0  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16157  0114A2  E122               	bnz	l18394
 16158  0114A4  0E0A               	movlw	10
 16159  0114A6  5DA1               	subwf	printf@exp& (0+255),w,b
 16160  0114A8  B0D8               	btfsc	status,0,c
 16161  0114AA  D01E               	goto	u24580
 16162  0114AC                     u24550:
 16163                           
 16164                           ; BSR set to: 1
 16165  0114AC  51A3               	movf	printf@fval& (0+255),w,b
 16166  0114AE  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 16167  0114B0  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 16168  0114B2  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 16169  0114B4  B4D8               	btfsc	status,2,c
 16170  0114B6  D062               	goto	l1457
 16171                           
 16172                           ; BSR set to: 1
 16173  0114B8  C1A3  F178         	movff	printf@fval,___fltol@f1
 16174  0114BC  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 16175  0114C0  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 16176  0114C4  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 16177  0114C8  EC7F  F0BA         	call	___fltol	;wreg free
 16178  0114CC  0101               	movlb	1	; () banked
 16179  0114CE  5178               	movf	?___fltol& (0+255),w,b
 16180  0114D0  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 16181  0114D2  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 16182  0114D4  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 16183  0114D6  B4D8               	btfsc	status,2,c
 16184                           
 16185                           ; BSR set to: 1
 16186  0114D8  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 16187  0114DA  D050               	goto	l1457
 16188  0114DC  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16189  0114DE  E104               	bnz	l18394
 16190  0114E0  0E02               	movlw	2
 16191  0114E2  5DA1               	subwf	printf@exp& (0+255),w,b
 16192  0114E4  A0D8               	btfss	status,0,c
 16193  0114E6  D04A               	goto	l1457
 16194  0114E8                     u24580:
 16195  0114E8                     l18394:
 16196                           
 16197                           ; BSR set to: 1
 16198                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 16199  0114E8  C19D  F117         	movff	printf@tmpval,___flge@ff1
 16200  0114EC  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 16201  0114F0  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 16202  0114F4  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 16203  0114F8  0E5F               	movlw	95
 16204  0114FA  6F1B               	movwf	___flge@ff2& (0+255),b
 16205  0114FC  0E70               	movlw	112
 16206  0114FE  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 16207  011500  0E89               	movlw	137
 16208  011502  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 16209  011504  0E40               	movlw	64
 16210  011506  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 16211  011508  EC55  F0B8         	call	___flge	;wreg free
 16212  01150C  0101               	movlb	1	; () banked
 16213  01150E  B0D8               	btfsc	status,0,c
 16214  011510  D002               	goto	l1460
 16215                           
 16216                           ; BSR set to: 1
 16217                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 16218  011512  0EF7               	movlw	247
 16219  011514  D001               	goto	L4
 16220  011516                     l1460:
 16221                           
 16222                           ; BSR set to: 1
 16223                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 16224                           
 16225                           ; BSR set to: 1
 16226  011516  0EF8               	movlw	248
 16227  011518                     L4:
 16228  011518  27A1               	addwf	printf@exp& (0+255),f,b
 16229  01151A  0EFF               	movlw	255
 16230  01151C  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 16231                           
 16232                           ; BSR set to: 1
 16233                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 16234                           
 16235                           ; BSR set to: 1
 16236  01151E  51A1               	movf	printf@exp& (0+255),w,b
 16237  011520  EC58  F09A         	call	_scale
 16238  011524  C16F  F19D         	movff	?_scale,printf@tmpval
 16239  011528  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 16240  01152C  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 16241  011530  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 16242  011534  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 16243  011538  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 16244  01153C  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 16245  011540  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 16246  011544  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 16247  011548  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 16248  01154C  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 16249  011550  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 16250  011554  EC9A  F0B6         	call	__div_to_l_	;wreg free
 16251  011558  C117  F1A7         	movff	?__div_to_l_,printf@val
 16252  01155C  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 16253  011560  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 16254  011564  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 16255                           
 16256                           ;doprnt.c: 1129: fval = 0.0;
 16257  011568  0E00               	movlw	0
 16258  01156A  0101               	movlb	1	; () banked
 16259  01156C  6FA3               	movwf	printf@fval& (0+255),b
 16260  01156E  0E00               	movlw	0
 16261  011570  6FA4               	movwf	(printf@fval+1)& (0+255),b
 16262  011572  0E00               	movlw	0
 16263  011574  6FA5               	movwf	(printf@fval+2)& (0+255),b
 16264  011576  0E00               	movlw	0
 16265  011578  6FA6               	movwf	(printf@fval+3)& (0+255),b
 16266                           
 16267                           ;doprnt.c: 1130: } else {
 16268  01157A  D03C               	goto	l1466
 16269  01157C                     l1457:
 16270                           
 16271                           ; BSR set to: 1
 16272                           ;doprnt.c: 1131: val = (unsigned long)fval;
 16273                           
 16274                           ; BSR set to: 1
 16275  01157C  C1A3  F178         	movff	printf@fval,___fltol@f1
 16276  011580  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 16277  011584  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 16278  011588  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 16279  01158C  EC7F  F0BA         	call	___fltol	;wreg free
 16280  011590  C178  F1A7         	movff	?___fltol,printf@val
 16281  011594  C179  F1A8         	movff	?___fltol+1,printf@val+1
 16282  011598  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 16283  01159C  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 16284                           
 16285                           ;doprnt.c: 1132: fval -= (double)val;
 16286  0115A0  C1A3  F13D         	movff	printf@fval,___flsub@b
 16287  0115A4  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 16288  0115A8  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 16289  0115AC  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 16290  0115B0  C1A7  F117         	movff	printf@val,___xxtofl@val
 16291  0115B4  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 16292  0115B8  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 16293  0115BC  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 16294  0115C0  0E00               	movlw	0
 16295  0115C2  EC15  F0B4         	call	___xxtofl
 16296  0115C6  C117  F141         	movff	?___xxtofl,___flsub@a
 16297  0115CA  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 16298  0115CE  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 16299  0115D2  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 16300  0115D6  ECB8  F0C2         	call	___flsub	;wreg free
 16301  0115DA  C13D  F1A3         	movff	?___flsub,printf@fval
 16302  0115DE  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 16303  0115E2  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 16304  0115E6  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 16305                           
 16306                           ;doprnt.c: 1133: exp = 0;
 16307  0115EA  0E00               	movlw	0
 16308  0115EC  0101               	movlb	1	; () banked
 16309  0115EE  6FA2               	movwf	(printf@exp+1)& (0+255),b
 16310  0115F0  0E00               	movlw	0
 16311  0115F2  6FA1               	movwf	printf@exp& (0+255),b
 16312  0115F4                     l1466:
 16313                           
 16314                           ; BSR set to: 1
 16315                           ;doprnt.c: 1134: }
 16316                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 16317                           
 16318                           ; BSR set to: 1
 16319  0115F4  0E01               	movlw	1
 16320  0115F6  6FB1               	movwf	printf@c& (0+255),b
 16321  0115F8                     l18414:
 16322                           
 16323                           ; BSR set to: 1
 16324  0115F8  0E0A               	movlw	10
 16325  0115FA  19B1               	xorwf	printf@c& (0+255),w,b
 16326  0115FC  B4D8               	btfsc	status,2,c
 16327  0115FE  D01B               	goto	u24620
 16328                           
 16329                           ; BSR set to: 1
 16330                           ;doprnt.c: 1137: if(val < dpowers[c])
 16331                           
 16332                           ; BSR set to: 1
 16333                           
 16334                           ; BSR set to: 1
 16335  011600  51B1               	movf	printf@c& (0+255),w,b
 16336  011602  0D04               	mullw	4
 16337  011604  0EF9               	movlw	low _dpowers
 16338  011606  24F3               	addwf	prodl,w,c
 16339  011608  6EF6               	movwf	tblptrl,c
 16340  01160A  0EE8               	movlw	high _dpowers
 16341  01160C  20F4               	addwfc	prodh,w,c
 16342  01160E  6EF7               	movwf	tblptrh,c
 16343  011610                     	if	1	;There are 3 active tblptr bytes
 16344  011610  6AF8               	clrf	tblptru,c
 16345  011612  0E00               	movlw	low (__mediumconst shr (0+16))
 16346  011614  22F8               	addwfc	tblptru,f,c
 16347  011616                     	endif
 16348  011616  0009               	tblrd		*+
 16349  011618  50F5               	movf	tablat,w,c
 16350  01161A  5DA7               	subwf	printf@val& (0+255),w,b
 16351  01161C  0009               	tblrd		*+
 16352  01161E  50F5               	movf	tablat,w,c
 16353  011620  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 16354  011622  0009               	tblrd		*+
 16355  011624  50F5               	movf	tablat,w,c
 16356  011626  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 16357  011628  0009               	tblrd		*+
 16358  01162A  50F5               	movf	tablat,w,c
 16359  01162C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 16360  01162E  A0D8               	btfss	status,0,c
 16361  011630  D002               	goto	u24620
 16362                           
 16363                           ; BSR set to: 1
 16364                           
 16365                           ; BSR set to: 1
 16366                           
 16367                           ; BSR set to: 1
 16368                           ;doprnt.c: 1138: break;
 16369  011632  2BB1               	incf	printf@c& (0+255),f,b
 16370  011634  D7E1               	goto	l18414
 16371  011636                     u24620:
 16372                           
 16373                           ; BSR set to: 1
 16374                           ;doprnt.c: 1142: width -= prec + c + exp;
 16375                           
 16376                           ; BSR set to: 1
 16377  011636  C1B1  F18C         	movff	printf@c,??_printf
 16378  01163A  6B8D               	clrf	(??_printf+1)& (0+255),b
 16379  01163C  BF8C               	btfsc	??_printf& (0+255),7,b
 16380  01163E  078D               	decf	(??_printf+1)& (0+255),f,b
 16381  011640  51AF               	movf	printf@prec& (0+255),w,b
 16382  011642  278C               	addwf	??_printf& (0+255),f,b
 16383  011644  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16384  011646  238D               	addwfc	(??_printf+1)& (0+255),f,b
 16385  011648  51A1               	movf	printf@exp& (0+255),w,b
 16386  01164A  278C               	addwf	??_printf& (0+255),f,b
 16387  01164C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16388  01164E  238D               	addwfc	(??_printf+1)& (0+255),f,b
 16389  011650  518C               	movf	??_printf& (0+255),w,b
 16390  011652  5FAD               	subwf	printf@width& (0+255),f,b
 16391  011654  518D               	movf	(??_printf+1)& (0+255),w,b
 16392  011656  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 16393                           
 16394                           ;doprnt.c: 1143: if(
 16395                           ;doprnt.c: 1147: prec)
 16396  011658  51AF               	movf	printf@prec& (0+255),w,b
 16397  01165A  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16398  01165C  B4D8               	btfsc	status,2,c
 16399  01165E  D003               	goto	l1470
 16400                           
 16401                           ; BSR set to: 1
 16402                           ;doprnt.c: 1148: width--;
 16403  011660  07AD               	decf	printf@width& (0+255),f,b
 16404  011662  A0D8               	btfss	status,0,c
 16405  011664  07AE               	decf	(printf@width+1)& (0+255),f,b
 16406  011666                     l1470:
 16407                           
 16408                           ; BSR set to: 1
 16409                           ;doprnt.c: 1149: if(flag & 0x03)
 16410                           
 16411                           ; BSR set to: 1
 16412  011666  0E03               	movlw	3
 16413  011668  15AB               	andwf	printf@flag& (0+255),w,b
 16414  01166A  6F8C               	movwf	??_printf& (0+255),b
 16415  01166C  0E00               	movlw	0
 16416  01166E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16417  011670  6F8D               	movwf	(??_printf+1)& (0+255),b
 16418  011672  518C               	movf	??_printf& (0+255),w,b
 16419  011674  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16420  011676  B4D8               	btfsc	status,2,c
 16421  011678  D003               	goto	l1471
 16422                           
 16423                           ; BSR set to: 1
 16424                           ;doprnt.c: 1150: width--;
 16425  01167A  07AD               	decf	printf@width& (0+255),f,b
 16426  01167C  A0D8               	btfss	status,0,c
 16427  01167E  07AE               	decf	(printf@width+1)& (0+255),f,b
 16428  011680                     l1471:
 16429                           
 16430                           ; BSR set to: 1
 16431                           ;doprnt.c: 1153: if(flag & 0x04) {
 16432                           
 16433                           ; BSR set to: 1
 16434  011680  A5AB               	btfss	printf@flag& (0+255),2,b
 16435  011682  D025               	goto	l1478
 16436                           
 16437                           ; BSR set to: 1
 16438                           ;doprnt.c: 1157: if(flag & 0x03)
 16439  011684  0E03               	movlw	3
 16440  011686  15AB               	andwf	printf@flag& (0+255),w,b
 16441  011688  6F8C               	movwf	??_printf& (0+255),b
 16442  01168A  0E00               	movlw	0
 16443  01168C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16444  01168E  6F8D               	movwf	(??_printf+1)& (0+255),b
 16445  011690  518C               	movf	??_printf& (0+255),w,b
 16446  011692  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16447  011694  B4D8               	btfsc	status,2,c
 16448  011696  D00B               	goto	l1474
 16449                           
 16450                           ; BSR set to: 1
 16451                           ;doprnt.c: 1159: (putch('-') );
 16452  011698  0E2D               	movlw	45
 16453  01169A  EC1B  F0C6         	call	_putch
 16454                           
 16455                           ;doprnt.c: 1168: while(width > 0) {
 16456  01169E  D007               	goto	l1474
 16457  0116A0                     l18440:
 16458                           
 16459                           ;doprnt.c: 1169: (putch('0') );
 16460  0116A0  0E30               	movlw	48
 16461  0116A2  EC1B  F0C6         	call	_putch
 16462                           
 16463                           ;doprnt.c: 1170: width--;
 16464  0116A6  0101               	movlb	1	; () banked
 16465  0116A8  07AD               	decf	printf@width& (0+255),f,b
 16466  0116AA  A0D8               	btfss	status,0,c
 16467  0116AC  07AE               	decf	(printf@width+1)& (0+255),f,b
 16468  0116AE                     l1474:
 16469                           
 16470                           ; BSR set to: 1
 16471  0116AE  0101               	movlb	1	; () banked
 16472  0116B0  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 16473  0116B2  D06C               	goto	l1482
 16474  0116B4  51AE               	movf	(printf@width+1)& (0+255),w,b
 16475  0116B6  E1F4               	bnz	l18440
 16476  0116B8  05AD               	decf	printf@width& (0+255),w,b
 16477  0116BA  A0D8               	btfss	status,0,c
 16478  0116BC  D067               	goto	l1482
 16479  0116BE  D7F0               	goto	l1475
 16480  0116C0                     l18446:
 16481                           
 16482                           ; BSR set to: 1
 16483                           ;doprnt.c: 1181: (putch(' ') );
 16484  0116C0  0E20               	movlw	32
 16485  0116C2  EC1B  F0C6         	call	_putch
 16486                           
 16487                           ;doprnt.c: 1182: width--;
 16488  0116C6  0101               	movlb	1	; () banked
 16489  0116C8  07AD               	decf	printf@width& (0+255),f,b
 16490  0116CA  A0D8               	btfss	status,0,c
 16491  0116CC  07AE               	decf	(printf@width+1)& (0+255),f,b
 16492  0116CE                     l1478:
 16493                           
 16494                           ; BSR set to: 1
 16495                           
 16496                           ; BSR set to: 1
 16497  0116CE  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 16498  0116D0  D005               	goto	u24680
 16499  0116D2  51AE               	movf	(printf@width+1)& (0+255),w,b
 16500  0116D4  E1F5               	bnz	l18446
 16501  0116D6  05AD               	decf	printf@width& (0+255),w,b
 16502  0116D8  B0D8               	btfsc	status,0,c
 16503  0116DA  D7F2               	goto	l1479
 16504  0116DC                     u24680:
 16505                           
 16506                           ; BSR set to: 1
 16507                           ;doprnt.c: 1183: }
 16508                           ;doprnt.c: 1188: if(flag & 0x03)
 16509                           
 16510                           ; BSR set to: 1
 16511  0116DC  0E03               	movlw	3
 16512  0116DE  15AB               	andwf	printf@flag& (0+255),w,b
 16513  0116E0  6F8C               	movwf	??_printf& (0+255),b
 16514  0116E2  0E00               	movlw	0
 16515  0116E4  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16516  0116E6  6F8D               	movwf	(??_printf+1)& (0+255),b
 16517  0116E8  518C               	movf	??_printf& (0+255),w,b
 16518  0116EA  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16519  0116EC  B4D8               	btfsc	status,2,c
 16520  0116EE  D04E               	goto	l1482
 16521                           
 16522                           ; BSR set to: 1
 16523                           ;doprnt.c: 1190: (putch('-') );
 16524  0116F0  0E2D               	movlw	45
 16525  0116F2  EC1B  F0C6         	call	_putch
 16526                           
 16527                           ;doprnt.c: 1195: }
 16528                           ;doprnt.c: 1196: while(c--) {
 16529  0116F6  D04A               	goto	l1482
 16530  0116F8                     
 16531                           ;doprnt.c: 1200: {
 16532                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 16533  0116F8  C1A7  F117         	movff	printf@val,___lldiv@dividend
 16534  0116FC  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 16535  011700  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 16536  011704  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 16537  011708  0101               	movlb	1	; () banked
 16538  01170A  51B1               	movf	printf@c& (0+255),w,b
 16539  01170C  0D04               	mullw	4
 16540  01170E  0EF9               	movlw	low _dpowers
 16541  011710  24F3               	addwf	prodl,w,c
 16542  011712  6EF6               	movwf	tblptrl,c
 16543  011714  0EE8               	movlw	high _dpowers
 16544  011716  20F4               	addwfc	prodh,w,c
 16545  011718  6EF7               	movwf	tblptrh,c
 16546  01171A                     	if	1	;There are 3 active tblptr bytes
 16547  01171A  6AF8               	clrf	tblptru,c
 16548  01171C  0E00               	movlw	low (__mediumconst shr (0+16))
 16549  01171E  22F8               	addwfc	tblptru,f,c
 16550  011720                     	endif
 16551  011720  0009               	tblrd		*+
 16552  011722  CFF5 F11B          	movff	tablat,___lldiv@divisor
 16553  011726  0009               	tblrd		*+
 16554  011728  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 16555  01172C  0009               	tblrd		*+
 16556  01172E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 16557  011732  000A               	tblrd		*-
 16558  011734  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 16559  011738  ECF1  F0BD         	call	___lldiv	;wreg free
 16560  01173C  C117  F19D         	movff	?___lldiv,printf@tmpval
 16561  011740  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 16562  011744  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 16563  011748  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 16564                           
 16565                           ;doprnt.c: 1202: tmpval.vd %= 10;
 16566  01174C  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 16567  011750  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 16568  011754  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 16569  011758  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 16570  01175C  0E0A               	movlw	10
 16571  01175E  0101               	movlb	1	; () banked
 16572  011760  6F28               	movwf	___llmod@divisor& (0+255),b
 16573  011762  0E00               	movlw	0
 16574  011764  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 16575  011766  0E00               	movlw	0
 16576  011768  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 16577  01176A  0E00               	movlw	0
 16578  01176C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 16579  01176E  EC42  F0C0         	call	___llmod	;wreg free
 16580  011772  C124  F19D         	movff	?___llmod,printf@tmpval
 16581  011776  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 16582  01177A  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 16583  01177E  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 16584                           
 16585                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 16586  011782  0101               	movlb	1	; () banked
 16587  011784  519D               	movf	printf@tmpval& (0+255),w,b
 16588  011786  0F30               	addlw	48
 16589  011788  EC1B  F0C6         	call	_putch
 16590  01178C                     l1482:
 16591  01178C  0101               	movlb	1	; () banked
 16592  01178E  07B1               	decf	printf@c& (0+255),f,b
 16593  011790  29B1               	incf	printf@c& (0+255),w,b
 16594  011792  B4D8               	btfsc	status,2,c
 16595  011794  D008               	goto	l1485
 16596  011796  D7B0               	goto	l1483
 16597  011798                     l18464:
 16598                           
 16599                           ; BSR set to: 1
 16600                           ;doprnt.c: 1208: (putch('0') );
 16601  011798  0E30               	movlw	48
 16602  01179A  EC1B  F0C6         	call	_putch
 16603                           
 16604                           ;doprnt.c: 1209: exp--;
 16605  01179E  0101               	movlb	1	; () banked
 16606  0117A0  07A1               	decf	printf@exp& (0+255),f,b
 16607  0117A2  A0D8               	btfss	status,0,c
 16608  0117A4  07A2               	decf	(printf@exp+1)& (0+255),f,b
 16609  0117A6                     l1485:
 16610                           
 16611                           ; BSR set to: 1
 16612                           
 16613                           ; BSR set to: 1
 16614  0117A6  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 16615  0117A8  D005               	goto	u24710
 16616  0117AA  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16617  0117AC  E1F5               	bnz	l18464
 16618  0117AE  05A1               	decf	printf@exp& (0+255),w,b
 16619  0117B0  B0D8               	btfsc	status,0,c
 16620  0117B2  D7F2               	goto	l1486
 16621  0117B4                     u24710:
 16622                           
 16623                           ; BSR set to: 1
 16624                           ;doprnt.c: 1210: }
 16625                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 16626                           
 16627                           ; BSR set to: 1
 16628  0117B4  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 16629  0117B6  D009               	goto	l1488
 16630  0117B8  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16631  0117BA  E104               	bnz	u24720
 16632  0117BC  0E09               	movlw	9
 16633  0117BE  5DAF               	subwf	printf@prec& (0+255),w,b
 16634  0117C0  A0D8               	btfss	status,0,c
 16635  0117C2  D003               	goto	l1488
 16636  0117C4                     u24720:
 16637                           
 16638                           ; BSR set to: 1
 16639                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 16640  0117C4  0E08               	movlw	8
 16641  0117C6  6FB1               	movwf	printf@c& (0+255),b
 16642  0117C8  D002               	goto	l1489
 16643  0117CA                     l1488:
 16644                           
 16645                           ; BSR set to: 1
 16646                           ;doprnt.c: 1213: else
 16647                           ;doprnt.c: 1214: c = prec;
 16648  0117CA  C1AF  F1B1         	movff	printf@prec,printf@c
 16649  0117CE                     l1489:
 16650                           
 16651                           ; BSR set to: 1
 16652                           ;doprnt.c: 1215: prec -= c;
 16653                           
 16654                           ; BSR set to: 1
 16655  0117CE  51B1               	movf	printf@c& (0+255),w,b
 16656  0117D0  5FAF               	subwf	printf@prec& (0+255),f,b
 16657  0117D2  0E00               	movlw	0
 16658  0117D4  BFB1               	btfsc	printf@c& (0+255),7,b
 16659  0117D6  0EFF               	movlw	255
 16660  0117D8  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;doprnt.c: 1219: if(c)
 16664  0117DA  51B1               	movf	printf@c& (0+255),w,b
 16665  0117DC  B4D8               	btfsc	status,2,c
 16666  0117DE  D003               	goto	l1490
 16667                           
 16668                           ; BSR set to: 1
 16669                           ;doprnt.c: 1221: (putch('.') );
 16670  0117E0  0E2E               	movlw	46
 16671  0117E2  EC1B  F0C6         	call	_putch
 16672  0117E6                     l1490:
 16673                           
 16674                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 16675  0117E6  0101               	movlb	1	; () banked
 16676  0117E8  51B1               	movf	printf@c& (0+255),w,b
 16677  0117EA  EC58  F09A         	call	_scale
 16678  0117EE  C16F  F192         	movff	?_scale,_printf$3943
 16679  0117F2  C170  F193         	movff	?_scale+1,_printf$3943+1
 16680  0117F6  C171  F194         	movff	?_scale+2,_printf$3943+2
 16681  0117FA  C172  F195         	movff	?_scale+3,_printf$3943+3
 16682                           
 16683                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 16684  0117FE  C1A3  F15A         	movff	printf@fval,___flmul@a
 16685  011802  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 16686  011806  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 16687  01180A  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 16688  01180E  C192  F156         	movff	_printf$3943,___flmul@b
 16689  011812  C193  F157         	movff	_printf$3943+1,___flmul@b+1
 16690  011816  C194  F158         	movff	_printf$3943+2,___flmul@b+2
 16691  01181A  C195  F159         	movff	_printf$3943+3,___flmul@b+3
 16692  01181E  EC9E  F0A0         	call	___flmul	;wreg free
 16693  011822  C156  F178         	movff	?___flmul,___fltol@f1
 16694  011826  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 16695  01182A  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 16696  01182E  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 16697  011832  EC7F  F0BA         	call	___fltol	;wreg free
 16698  011836  C178  F1A7         	movff	?___fltol,printf@val
 16699  01183A  C179  F1A8         	movff	?___fltol+1,printf@val+1
 16700  01183E  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 16701  011842  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 16702                           
 16703                           ;doprnt.c: 1228: while(c--) {
 16704  011846  D074               	goto	l1491
 16705  011848                     
 16706                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 16707  011848  C1A7  F117         	movff	printf@val,___lldiv@dividend
 16708  01184C  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 16709  011850  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 16710  011854  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 16711  011858  0101               	movlb	1	; () banked
 16712  01185A  51B1               	movf	printf@c& (0+255),w,b
 16713  01185C  0D04               	mullw	4
 16714  01185E  0EF9               	movlw	low _dpowers
 16715  011860  24F3               	addwf	prodl,w,c
 16716  011862  6EF6               	movwf	tblptrl,c
 16717  011864  0EE8               	movlw	high _dpowers
 16718  011866  20F4               	addwfc	prodh,w,c
 16719  011868  6EF7               	movwf	tblptrh,c
 16720  01186A                     	if	1	;There are 3 active tblptr bytes
 16721  01186A  6AF8               	clrf	tblptru,c
 16722  01186C  0E00               	movlw	low (__mediumconst shr (0+16))
 16723  01186E  22F8               	addwfc	tblptru,f,c
 16724  011870                     	endif
 16725  011870  0009               	tblrd		*+
 16726  011872  CFF5 F11B          	movff	tablat,___lldiv@divisor
 16727  011876  0009               	tblrd		*+
 16728  011878  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 16729  01187C  0009               	tblrd		*+
 16730  01187E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 16731  011882  000A               	tblrd		*-
 16732  011884  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 16733  011888  ECF1  F0BD         	call	___lldiv	;wreg free
 16734  01188C  C117  F19D         	movff	?___lldiv,printf@tmpval
 16735  011890  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 16736  011894  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 16737  011898  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 16738                           
 16739                           ;doprnt.c: 1230: tmpval.vd %= 10;
 16740  01189C  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 16741  0118A0  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 16742  0118A4  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 16743  0118A8  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 16744  0118AC  0E0A               	movlw	10
 16745  0118AE  0101               	movlb	1	; () banked
 16746  0118B0  6F28               	movwf	___llmod@divisor& (0+255),b
 16747  0118B2  0E00               	movlw	0
 16748  0118B4  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 16749  0118B6  0E00               	movlw	0
 16750  0118B8  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 16751  0118BA  0E00               	movlw	0
 16752  0118BC  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 16753  0118BE  EC42  F0C0         	call	___llmod	;wreg free
 16754  0118C2  C124  F19D         	movff	?___llmod,printf@tmpval
 16755  0118C6  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 16756  0118CA  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 16757  0118CE  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 16758                           
 16759                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 16760  0118D2  0101               	movlb	1	; () banked
 16761  0118D4  519D               	movf	printf@tmpval& (0+255),w,b
 16762  0118D6  0F30               	addlw	48
 16763  0118D8  EC1B  F0C6         	call	_putch
 16764                           
 16765                           ;doprnt.c: 1232: val %= dpowers[c];
 16766  0118DC  C1A7  F124         	movff	printf@val,___llmod@dividend
 16767  0118E0  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 16768  0118E4  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 16769  0118E8  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 16770  0118EC  0101               	movlb	1	; () banked
 16771  0118EE  51B1               	movf	printf@c& (0+255),w,b
 16772  0118F0  0D04               	mullw	4
 16773  0118F2  0EF9               	movlw	low _dpowers
 16774  0118F4  24F3               	addwf	prodl,w,c
 16775  0118F6  6EF6               	movwf	tblptrl,c
 16776  0118F8  0EE8               	movlw	high _dpowers
 16777  0118FA  20F4               	addwfc	prodh,w,c
 16778  0118FC  6EF7               	movwf	tblptrh,c
 16779  0118FE                     	if	1	;There are 3 active tblptr bytes
 16780  0118FE  6AF8               	clrf	tblptru,c
 16781  011900  0E00               	movlw	low (__mediumconst shr (0+16))
 16782  011902  22F8               	addwfc	tblptru,f,c
 16783  011904                     	endif
 16784  011904  0009               	tblrd		*+
 16785  011906  CFF5 F128          	movff	tablat,___llmod@divisor
 16786  01190A  0009               	tblrd		*+
 16787  01190C  CFF5 F129          	movff	tablat,___llmod@divisor+1
 16788  011910  0009               	tblrd		*+
 16789  011912  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 16790  011916  000A               	tblrd		*-
 16791  011918  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 16792  01191C  EC42  F0C0         	call	___llmod	;wreg free
 16793  011920  C124  F1A7         	movff	?___llmod,printf@val
 16794  011924  C125  F1A8         	movff	?___llmod+1,printf@val+1
 16795  011928  C126  F1A9         	movff	?___llmod+2,printf@val+2
 16796  01192C  C127  F1AA         	movff	?___llmod+3,printf@val+3
 16797  011930                     l1491:
 16798  011930  0101               	movlb	1	; () banked
 16799  011932  07B1               	decf	printf@c& (0+255),f,b
 16800  011934  29B1               	incf	printf@c& (0+255),w,b
 16801  011936  B4D8               	btfsc	status,2,c
 16802  011938  D008               	goto	l1494
 16803  01193A  D786               	goto	l1492
 16804  01193C                     
 16805                           ; BSR set to: 1
 16806                           ;doprnt.c: 1236: (putch('0') );
 16807                           
 16808                           ; BSR set to: 1
 16809  01193C  0E30               	movlw	48
 16810  01193E  EC1B  F0C6         	call	_putch
 16811                           
 16812                           ;doprnt.c: 1237: prec--;
 16813  011942  0101               	movlb	1	; () banked
 16814  011944  07AF               	decf	printf@prec& (0+255),f,b
 16815  011946  A0D8               	btfss	status,0,c
 16816  011948  07B0               	decf	(printf@prec+1)& (0+255),f,b
 16817  01194A                     l1494:
 16818                           
 16819                           ; BSR set to: 1
 16820                           
 16821                           ; BSR set to: 1
 16822  01194A  51AF               	movf	printf@prec& (0+255),w,b
 16823  01194C  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16824  01194E  B4D8               	btfsc	status,2,c
 16825  011950  D1BE               	goto	u25000
 16826  011952  D7F4               	goto	l1495
 16827  011954                     l1448:
 16828                           
 16829                           ; BSR set to: 1
 16830                           ;doprnt.c: 1246: }
 16831                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16832                           
 16833                           ; BSR set to: 1
 16834  011954  0EC0               	movlw	192
 16835  011956  15AB               	andwf	printf@flag& (0+255),w,b
 16836  011958  6F8C               	movwf	??_printf& (0+255),b
 16837  01195A  0E00               	movlw	0
 16838  01195C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16839  01195E  6F8D               	movwf	(??_printf+1)& (0+255),b
 16840  011960  518C               	movf	??_printf& (0+255),w,b
 16841  011962  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16842  011964  A4D8               	btfss	status,2,c
 16843  011966  D01E               	goto	l1497
 16844                           
 16845                           ; BSR set to: 1
 16846                           ;doprnt.c: 1253: {
 16847                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 16848  011968  C19B  FFD9         	movff	printf@ap,fsr2l
 16849  01196C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 16850  011970  CFDE F1A7          	movff	postinc2,printf@val
 16851  011974  CFDD F1A8          	movff	postdec2,printf@val+1
 16852  011978  0E00               	movlw	0
 16853  01197A  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 16854  01197C  0EFF               	movlw	-1
 16855  01197E  6FA9               	movwf	(printf@val+2)& (0+255),b
 16856  011980  6FAA               	movwf	(printf@val+3)& (0+255),b
 16857                           
 16858                           ; BSR set to: 1
 16859  011982  0E02               	movlw	2
 16860  011984  279B               	addwf	printf@ap& (0+255),f,b
 16861  011986  0E00               	movlw	0
 16862  011988  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 16863                           
 16864                           ; BSR set to: 1
 16865                           ;doprnt.c: 1261: if((long)val < 0) {
 16866  01198A  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 16867  01198C  D01D               	goto	l1499
 16868                           
 16869                           ; BSR set to: 1
 16870                           ;doprnt.c: 1262: flag |= 0x03;
 16871  01198E  0E03               	movlw	3
 16872  011990  13AB               	iorwf	printf@flag& (0+255),f,b
 16873                           
 16874                           ; BSR set to: 1
 16875                           ;doprnt.c: 1263: val = -val;
 16876  011992  1FAA               	comf	(printf@val+3)& (0+255),f,b
 16877  011994  1FA9               	comf	(printf@val+2)& (0+255),f,b
 16878  011996  1FA8               	comf	(printf@val+1)& (0+255),f,b
 16879  011998  6DA7               	negf	printf@val& (0+255),b
 16880  01199A  0E00               	movlw	0
 16881  01199C  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 16882  01199E  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 16883  0119A0  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 16884                           
 16885                           ; BSR set to: 1
 16886                           ;doprnt.c: 1264: }
 16887                           ;doprnt.c: 1266: }
 16888  0119A2  D012               	goto	l1499
 16889  0119A4                     l1497:
 16890                           
 16891                           ; BSR set to: 1
 16892                           ;doprnt.c: 1268: else
 16893                           ;doprnt.c: 1273: {
 16894                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16895                           
 16896                           ; BSR set to: 1
 16897  0119A4  C19B  FFD9         	movff	printf@ap,fsr2l
 16898  0119A8  C19C  FFDA         	movff	printf@ap+1,fsr2h
 16899  0119AC  CFDE F18C          	movff	postinc2,??_printf
 16900  0119B0  CFDD F18D          	movff	postdec2,??_printf+1
 16901  0119B4  C18C  F1A7         	movff	??_printf,printf@val
 16902  0119B8  C18D  F1A8         	movff	??_printf+1,printf@val+1
 16903  0119BC  6BA9               	clrf	(printf@val+2)& (0+255),b
 16904  0119BE  6BAA               	clrf	(printf@val+3)& (0+255),b
 16905                           
 16906                           ; BSR set to: 1
 16907  0119C0  0E02               	movlw	2
 16908  0119C2  279B               	addwf	printf@ap& (0+255),f,b
 16909  0119C4  0E00               	movlw	0
 16910  0119C6  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 16911  0119C8                     l1499:
 16912                           
 16913                           ; BSR set to: 1
 16914                           ;doprnt.c: 1287: }
 16915                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 16916                           
 16917                           ; BSR set to: 1
 16918  0119C8  51AF               	movf	printf@prec& (0+255),w,b
 16919  0119CA  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16920  0119CC  A4D8               	btfss	status,2,c
 16921  0119CE  D04B               	goto	l1501
 16922                           
 16923                           ; BSR set to: 1
 16924  0119D0  51A7               	movf	printf@val& (0+255),w,b
 16925  0119D2  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 16926  0119D4  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 16927  0119D6  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 16928  0119D8  A4D8               	btfss	status,2,c
 16929  0119DA  D045               	goto	l1501
 16930                           
 16931                           ; BSR set to: 1
 16932                           ;doprnt.c: 1291: prec++;
 16933  0119DC  4BAF               	infsnz	printf@prec& (0+255),f,b
 16934  0119DE  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 16935                           
 16936                           ; BSR set to: 1
 16937                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 16938  0119E0  D042               	goto	l1501
 16939  0119E2                     
 16940                           ; BSR set to: 1
 16941                           ;doprnt.c: 1302: case 0xC0:
 16942                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16943                           
 16944                           ; BSR set to: 1
 16945                           
 16946                           ; BSR set to: 1
 16947  0119E2  0E01               	movlw	1
 16948  0119E4  6FB1               	movwf	printf@c& (0+255),b
 16949  0119E6                     l18524:
 16950                           
 16951                           ; BSR set to: 1
 16952  0119E6  0E0A               	movlw	10
 16953  0119E8  19B1               	xorwf	printf@c& (0+255),w,b
 16954  0119EA  B4D8               	btfsc	status,2,c
 16955  0119EC  D047               	goto	l1507
 16956                           
 16957                           ; BSR set to: 1
 16958                           ;doprnt.c: 1306: if(val < dpowers[c])
 16959                           
 16960                           ; BSR set to: 1
 16961                           
 16962                           ; BSR set to: 1
 16963  0119EE  51B1               	movf	printf@c& (0+255),w,b
 16964  0119F0  0D04               	mullw	4
 16965  0119F2  0EF9               	movlw	low _dpowers
 16966  0119F4  24F3               	addwf	prodl,w,c
 16967  0119F6  6EF6               	movwf	tblptrl,c
 16968  0119F8  0EE8               	movlw	high _dpowers
 16969  0119FA  20F4               	addwfc	prodh,w,c
 16970  0119FC  6EF7               	movwf	tblptrh,c
 16971  0119FE                     	if	1	;There are 3 active tblptr bytes
 16972  0119FE  6AF8               	clrf	tblptru,c
 16973  011A00  0E00               	movlw	low (__mediumconst shr (0+16))
 16974  011A02  22F8               	addwfc	tblptru,f,c
 16975  011A04                     	endif
 16976  011A04  0009               	tblrd		*+
 16977  011A06  50F5               	movf	tablat,w,c
 16978  011A08  5DA7               	subwf	printf@val& (0+255),w,b
 16979  011A0A  0009               	tblrd		*+
 16980  011A0C  50F5               	movf	tablat,w,c
 16981  011A0E  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 16982  011A10  0009               	tblrd		*+
 16983  011A12  50F5               	movf	tablat,w,c
 16984  011A14  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 16985  011A16  0009               	tblrd		*+
 16986  011A18  50F5               	movf	tablat,w,c
 16987  011A1A  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 16988  011A1C  A0D8               	btfss	status,0,c
 16989  011A1E  D02E               	goto	l1507
 16990                           
 16991                           ; BSR set to: 1
 16992                           
 16993                           ; BSR set to: 1
 16994                           
 16995                           ; BSR set to: 1
 16996                           ;doprnt.c: 1307: break;
 16997  011A20  2BB1               	incf	printf@c& (0+255),f,b
 16998  011A22  D7E1               	goto	l18524
 16999  011A24                     
 17000                           ; BSR set to: 1
 17001                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 17002                           
 17003                           ; BSR set to: 1
 17004  011A24  0E01               	movlw	1
 17005  011A26  6FB1               	movwf	printf@c& (0+255),b
 17006  011A28                     l18538:
 17007                           
 17008                           ; BSR set to: 1
 17009  011A28  0E08               	movlw	8
 17010  011A2A  19B1               	xorwf	printf@c& (0+255),w,b
 17011  011A2C  B4D8               	btfsc	status,2,c
 17012  011A2E  D026               	goto	l1507
 17013                           
 17014                           ; BSR set to: 1
 17015                           ;doprnt.c: 1317: if(val < hexpowers[c])
 17016                           
 17017                           ; BSR set to: 1
 17018                           
 17019                           ; BSR set to: 1
 17020  011A30  51B1               	movf	printf@c& (0+255),w,b
 17021  011A32  0D04               	mullw	4
 17022  011A34  0E21               	movlw	low _hexpowers
 17023  011A36  24F3               	addwf	prodl,w,c
 17024  011A38  6EF6               	movwf	tblptrl,c
 17025  011A3A  0EE9               	movlw	high _hexpowers
 17026  011A3C  20F4               	addwfc	prodh,w,c
 17027  011A3E  6EF7               	movwf	tblptrh,c
 17028  011A40                     	if	1	;There are 3 active tblptr bytes
 17029  011A40  6AF8               	clrf	tblptru,c
 17030  011A42  0E00               	movlw	low (__mediumconst shr (0+16))
 17031  011A44  22F8               	addwfc	tblptru,f,c
 17032  011A46                     	endif
 17033  011A46  0009               	tblrd		*+
 17034  011A48  50F5               	movf	tablat,w,c
 17035  011A4A  5DA7               	subwf	printf@val& (0+255),w,b
 17036  011A4C  0009               	tblrd		*+
 17037  011A4E  50F5               	movf	tablat,w,c
 17038  011A50  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 17039  011A52  0009               	tblrd		*+
 17040  011A54  50F5               	movf	tablat,w,c
 17041  011A56  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 17042  011A58  0009               	tblrd		*+
 17043  011A5A  50F5               	movf	tablat,w,c
 17044  011A5C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 17045  011A5E  A0D8               	btfss	status,0,c
 17046  011A60  D00D               	goto	l1507
 17047                           
 17048                           ; BSR set to: 1
 17049                           
 17050                           ; BSR set to: 1
 17051                           
 17052                           ; BSR set to: 1
 17053                           ;doprnt.c: 1318: break;
 17054  011A62  2BB1               	incf	printf@c& (0+255),f,b
 17055  011A64  D7E1               	goto	l18538
 17056  011A66                     l1501:
 17057                           
 17058                           ; BSR set to: 1
 17059                           
 17060                           ; BSR set to: 1
 17061  011A66  51AB               	movf	printf@flag& (0+255),w,b
 17062  011A68  0BC0               	andlw	192
 17063                           
 17064                           ; Switch size 1, requested type "space"
 17065                           ; Number of cases is 3, Range of values is 0 to 192
 17066                           ; switch strategies available:
 17067                           ; Name         Instructions Cycles
 17068                           ; simple_byte           10     6 (average)
 17069                           ;	Chosen strategy is simple_byte
 17070  011A6A  0A00               	xorlw	0	; case 0
 17071  011A6C  B4D8               	btfsc	status,2,c
 17072  011A6E  D7B9               	goto	l1502
 17073  011A70  0A80               	xorlw	128	; case 128
 17074  011A72  B4D8               	btfsc	status,2,c
 17075  011A74  D7D7               	goto	l1508
 17076  011A76  0A40               	xorlw	64	; case 192
 17077  011A78  B4D8               	btfsc	status,2,c
 17078  011A7A  D7B3               	goto	l1502
 17079  011A7C                     l1507:
 17080                           
 17081                           ; BSR set to: 1
 17082                           ;doprnt.c: 1339: if(c < prec)
 17083                           
 17084                           ; BSR set to: 1
 17085  011A7C  0E80               	movlw	128
 17086  011A7E  BFB1               	btfsc	printf@c& (0+255),7,b
 17087  011A80  0E7F               	movlw	127
 17088  011A82  6F8C               	movwf	??_printf& (0+255),b
 17089  011A84  51AF               	movf	printf@prec& (0+255),w,b
 17090  011A86  5DB1               	subwf	printf@c& (0+255),w,b
 17091  011A88  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17092  011A8A  0A80               	xorlw	128
 17093  011A8C  598C               	subwfb	??_printf& (0+255),w,b
 17094  011A8E  B0D8               	btfsc	status,0,c
 17095  011A90  D003               	goto	l1512
 17096                           
 17097                           ; BSR set to: 1
 17098                           ;doprnt.c: 1340: c = prec;
 17099  011A92  C1AF  F1B1         	movff	printf@prec,printf@c
 17100  011A96  D010               	goto	l1514
 17101  011A98                     l1512:
 17102                           
 17103                           ; BSR set to: 1
 17104                           ;doprnt.c: 1341: else if(prec < c)
 17105                           
 17106                           ; BSR set to: 1
 17107  011A98  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17108  011A9A  0A80               	xorlw	128
 17109  011A9C  6F8C               	movwf	??_printf& (0+255),b
 17110  011A9E  51B1               	movf	printf@c& (0+255),w,b
 17111  011AA0  5DAF               	subwf	printf@prec& (0+255),w,b
 17112  011AA2  0E80               	movlw	128
 17113  011AA4  BFB1               	btfsc	printf@c& (0+255),7,b
 17114  011AA6  0E7F               	movlw	127
 17115  011AA8  598C               	subwfb	??_printf& (0+255),w,b
 17116  011AAA  B0D8               	btfsc	status,0,c
 17117  011AAC  D005               	goto	l1514
 17118                           
 17119                           ; BSR set to: 1
 17120                           ;doprnt.c: 1342: prec = c;
 17121  011AAE  51B1               	movf	printf@c& (0+255),w,b
 17122  011AB0  6FAF               	movwf	printf@prec& (0+255),b
 17123  011AB2  6BB0               	clrf	(printf@prec+1)& (0+255),b
 17124  011AB4  BFAF               	btfsc	printf@prec& (0+255),7,b
 17125  011AB6  07B0               	decf	(printf@prec+1)& (0+255),f,b
 17126  011AB8                     l1514:
 17127                           
 17128                           ; BSR set to: 1
 17129                           ;doprnt.c: 1345: if(width && flag & 0x03)
 17130                           
 17131                           ; BSR set to: 1
 17132                           
 17133                           ; BSR set to: 1
 17134  011AB8  51AD               	movf	printf@width& (0+255),w,b
 17135  011ABA  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17136  011ABC  B4D8               	btfsc	status,2,c
 17137  011ABE  D00D               	goto	l1515
 17138                           
 17139                           ; BSR set to: 1
 17140  011AC0  0E03               	movlw	3
 17141  011AC2  15AB               	andwf	printf@flag& (0+255),w,b
 17142  011AC4  6F8C               	movwf	??_printf& (0+255),b
 17143  011AC6  0E00               	movlw	0
 17144  011AC8  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17145  011ACA  6F8D               	movwf	(??_printf+1)& (0+255),b
 17146  011ACC  518C               	movf	??_printf& (0+255),w,b
 17147  011ACE  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17148  011AD0  B4D8               	btfsc	status,2,c
 17149  011AD2  D003               	goto	l1515
 17150                           
 17151                           ; BSR set to: 1
 17152                           ;doprnt.c: 1346: width--;
 17153  011AD4  07AD               	decf	printf@width& (0+255),f,b
 17154  011AD6  A0D8               	btfss	status,0,c
 17155  011AD8  07AE               	decf	(printf@width+1)& (0+255),f,b
 17156  011ADA                     l1515:
 17157                           
 17158                           ; BSR set to: 1
 17159                           ;doprnt.c: 1348: if(flag & 0x4000) {
 17160                           
 17161                           ; BSR set to: 1
 17162  011ADA  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 17163  011ADC  D013               	goto	l1518
 17164                           
 17165                           ; BSR set to: 1
 17166                           ;doprnt.c: 1349: if(width > prec)
 17167  011ADE  51AD               	movf	printf@width& (0+255),w,b
 17168  011AE0  5DAF               	subwf	printf@prec& (0+255),w,b
 17169  011AE2  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17170  011AE4  0A80               	xorlw	128
 17171  011AE6  6F8C               	movwf	??_printf& (0+255),b
 17172  011AE8  51AE               	movf	(printf@width+1)& (0+255),w,b
 17173  011AEA  0A80               	xorlw	128
 17174  011AEC  598C               	subwfb	??_printf& (0+255),w,b
 17175  011AEE  B0D8               	btfsc	status,0,c
 17176  011AF0  D005               	goto	l1517
 17177                           
 17178                           ; BSR set to: 1
 17179                           ;doprnt.c: 1350: width -= prec;
 17180  011AF2  51AF               	movf	printf@prec& (0+255),w,b
 17181  011AF4  5FAD               	subwf	printf@width& (0+255),f,b
 17182  011AF6  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17183  011AF8  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 17184  011AFA  D004               	goto	l1518
 17185  011AFC                     l1517:
 17186                           
 17187                           ; BSR set to: 1
 17188                           ;doprnt.c: 1351: else
 17189                           ;doprnt.c: 1352: width = 0;
 17190                           
 17191                           ; BSR set to: 1
 17192  011AFC  0E00               	movlw	0
 17193  011AFE  6FAE               	movwf	(printf@width+1)& (0+255),b
 17194  011B00  0E00               	movlw	0
 17195  011B02  6FAD               	movwf	printf@width& (0+255),b
 17196  011B04                     l1518:
 17197                           
 17198                           ; BSR set to: 1
 17199                           ;doprnt.c: 1353: }
 17200                           ;doprnt.c: 1381: if(width > c)
 17201                           
 17202                           ; BSR set to: 1
 17203                           
 17204                           ; BSR set to: 1
 17205  011B04  0E80               	movlw	128
 17206  011B06  BFB1               	btfsc	printf@c& (0+255),7,b
 17207  011B08  0E7F               	movlw	127
 17208  011B0A  6F8C               	movwf	??_printf& (0+255),b
 17209  011B0C  51AD               	movf	printf@width& (0+255),w,b
 17210  011B0E  5DB1               	subwf	printf@c& (0+255),w,b
 17211  011B10  51AE               	movf	(printf@width+1)& (0+255),w,b
 17212  011B12  0A80               	xorlw	128
 17213  011B14  598C               	subwfb	??_printf& (0+255),w,b
 17214  011B16  B0D8               	btfsc	status,0,c
 17215  011B18  D007               	goto	l1519
 17216                           
 17217                           ; BSR set to: 1
 17218                           ;doprnt.c: 1382: width -= c;
 17219  011B1A  51B1               	movf	printf@c& (0+255),w,b
 17220  011B1C  5FAD               	subwf	printf@width& (0+255),f,b
 17221  011B1E  0E00               	movlw	0
 17222  011B20  BFB1               	btfsc	printf@c& (0+255),7,b
 17223  011B22  0EFF               	movlw	255
 17224  011B24  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 17225  011B26  D004               	goto	l1520
 17226  011B28                     l1519:
 17227                           
 17228                           ; BSR set to: 1
 17229                           ;doprnt.c: 1383: else
 17230                           ;doprnt.c: 1384: width = 0;
 17231                           
 17232                           ; BSR set to: 1
 17233  011B28  0E00               	movlw	0
 17234  011B2A  6FAE               	movwf	(printf@width+1)& (0+255),b
 17235  011B2C  0E00               	movlw	0
 17236  011B2E  6FAD               	movwf	printf@width& (0+255),b
 17237  011B30                     l1520:
 17238                           
 17239                           ; BSR set to: 1
 17240                           ;doprnt.c: 1387: if(flag & 0x04) {
 17241                           
 17242                           ; BSR set to: 1
 17243  011B30  A5AB               	btfss	printf@flag& (0+255),2,b
 17244  011B32  D01A               	goto	l1521
 17245                           
 17246                           ; BSR set to: 1
 17247                           ;doprnt.c: 1392: if(flag & 0x03)
 17248  011B34  0E03               	movlw	3
 17249  011B36  15AB               	andwf	printf@flag& (0+255),w,b
 17250  011B38  6F8C               	movwf	??_printf& (0+255),b
 17251  011B3A  0E00               	movlw	0
 17252  011B3C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17253  011B3E  6F8D               	movwf	(??_printf+1)& (0+255),b
 17254  011B40  518C               	movf	??_printf& (0+255),w,b
 17255  011B42  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17256  011B44  B4D8               	btfsc	status,2,c
 17257  011B46  D003               	goto	l1522
 17258                           
 17259                           ; BSR set to: 1
 17260                           ;doprnt.c: 1393: (putch('-') );
 17261  011B48  0E2D               	movlw	45
 17262  011B4A  EC1B  F0C6         	call	_putch
 17263  011B4E                     l1522:
 17264                           
 17265                           ;doprnt.c: 1415: if(width)
 17266  011B4E  0101               	movlb	1	; () banked
 17267  011B50  51AD               	movf	printf@width& (0+255),w,b
 17268  011B52  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17269  011B54  B4D8               	btfsc	status,2,c
 17270  011B56  D0B2               	goto	l1531
 17271                           
 17272                           ; BSR set to: 1
 17273                           ;doprnt.c: 1417: (putch('0') );
 17274                           
 17275                           ; BSR set to: 1
 17276                           
 17277                           ;doprnt.c: 1416: do
 17278  011B58  0E30               	movlw	48
 17279  011B5A  EC1B  F0C6         	call	_putch
 17280                           
 17281                           ;doprnt.c: 1418: while(--width);
 17282  011B5E  0101               	movlb	1	; () banked
 17283  011B60  07AD               	decf	printf@width& (0+255),f,b
 17284  011B62  A0D8               	btfss	status,0,c
 17285  011B64  07AE               	decf	(printf@width+1)& (0+255),f,b
 17286  011B66  D7F4               	goto	L25
 17287  011B68                     l1521:
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;doprnt.c: 1422: {
 17291                           ;doprnt.c: 1424: if(width
 17292                           ;doprnt.c: 1428: )
 17293                           
 17294                           ; BSR set to: 1
 17295  011B68  51AD               	movf	printf@width& (0+255),w,b
 17296  011B6A  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17297  011B6C  B4D8               	btfsc	status,2,c
 17298  011B6E  D00B               	goto	u24980
 17299  011B70                     u24970:
 17300                           
 17301                           ; BSR set to: 1
 17302                           ;doprnt.c: 1430: (putch(' ') );
 17303                           
 17304                           ; BSR set to: 1
 17305                           
 17306                           ;doprnt.c: 1429: do
 17307  011B70  0E20               	movlw	32
 17308  011B72  EC1B  F0C6         	call	_putch
 17309                           
 17310                           ;doprnt.c: 1431: while(--width);
 17311  011B76  0101               	movlb	1	; () banked
 17312  011B78  07AD               	decf	printf@width& (0+255),f,b
 17313  011B7A  A0D8               	btfss	status,0,c
 17314  011B7C  07AE               	decf	(printf@width+1)& (0+255),f,b
 17315  011B7E  51AD               	movf	printf@width& (0+255),w,b
 17316  011B80  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17317  011B82  A4D8               	btfss	status,2,c
 17318  011B84  D7F5               	goto	u24970
 17319  011B86                     u24980:
 17320                           
 17321                           ; BSR set to: 1
 17322                           ;doprnt.c: 1438: if(flag & 0x03)
 17323                           
 17324                           ; BSR set to: 1
 17325                           
 17326                           ; BSR set to: 1
 17327  011B86  0E03               	movlw	3
 17328  011B88  15AB               	andwf	printf@flag& (0+255),w,b
 17329  011B8A  6F8C               	movwf	??_printf& (0+255),b
 17330  011B8C  0E00               	movlw	0
 17331  011B8E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17332  011B90  6F8D               	movwf	(??_printf+1)& (0+255),b
 17333  011B92  518C               	movf	??_printf& (0+255),w,b
 17334  011B94  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17335  011B96  B4D8               	btfsc	status,2,c
 17336  011B98  D091               	goto	l1531
 17337                           
 17338                           ; BSR set to: 1
 17339                           ;doprnt.c: 1439: (putch('-') );
 17340  011B9A  0E2D               	movlw	45
 17341  011B9C  EC1B  F0C6         	call	_putch
 17342                           
 17343                           ;doprnt.c: 1469: }
 17344                           ;doprnt.c: 1474: while(prec--) {
 17345  011BA0  D08D               	goto	l1531
 17346  011BA2                     
 17347                           ;doprnt.c: 1486: case 0xC0:
 17348                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 17349  011BA2  C1AF  F18C         	movff	printf@prec,??_printf
 17350  011BA6  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 17351  011BAA  0101               	movlb	1	; () banked
 17352  011BAC  90D8               	bcf	status,0,c
 17353  011BAE  378C               	rlcf	??_printf& (0+255),f,b
 17354  011BB0  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17355  011BB2  90D8               	bcf	status,0,c
 17356  011BB4  378C               	rlcf	??_printf& (0+255),f,b
 17357  011BB6  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17358  011BB8  0EF9               	movlw	low _dpowers
 17359  011BBA  258C               	addwf	??_printf& (0+255),w,b
 17360  011BBC  6EF6               	movwf	tblptrl,c
 17361  011BBE  0EE8               	movlw	high _dpowers
 17362  011BC0  218D               	addwfc	(??_printf+1)& (0+255),w,b
 17363  011BC2  6EF7               	movwf	tblptrh,c
 17364  011BC4                     	if	1	;There are 3 active tblptr bytes
 17365  011BC4  6AF8               	clrf	tblptru,c
 17366  011BC6  0E00               	movlw	low (__mediumconst shr (0+16))
 17367  011BC8  22F8               	addwfc	tblptru,f,c
 17368  011BCA                     	endif
 17369  011BCA  0009               	tblrd		*+
 17370  011BCC  CFF5 F11B          	movff	tablat,___lldiv@divisor
 17371  011BD0  0009               	tblrd		*+
 17372  011BD2  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 17373  011BD6  0009               	tblrd		*+
 17374  011BD8  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 17375  011BDC  000A               	tblrd		*-
 17376  011BDE  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 17377  011BE2  C1A7  F117         	movff	printf@val,___lldiv@dividend
 17378  011BE6  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 17379  011BEA  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 17380  011BEE  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 17381  011BF2  ECF1  F0BD         	call	___lldiv	;wreg free
 17382  011BF6  C117  F124         	movff	?___lldiv,___llmod@dividend
 17383  011BFA  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 17384  011BFE  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 17385  011C02  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 17386  011C06  0E0A               	movlw	10
 17387  011C08  0101               	movlb	1	; () banked
 17388  011C0A  6F28               	movwf	___llmod@divisor& (0+255),b
 17389  011C0C  0E00               	movlw	0
 17390  011C0E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 17391  011C10  0E00               	movlw	0
 17392  011C12  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 17393  011C14  0E00               	movlw	0
 17394  011C16  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 17395  011C18  EC42  F0C0         	call	___llmod	;wreg free
 17396  011C1C  0101               	movlb	1	; () banked
 17397  011C1E  5124               	movf	?___llmod& (0+255),w,b
 17398  011C20  0F30               	addlw	48
 17399  011C22  6FB1               	movwf	printf@c& (0+255),b
 17400                           
 17401                           ;doprnt.c: 1491: break;
 17402  011C24  D048               	goto	l1536
 17403  011C26                     
 17404                           ; BSR set to: 1
 17405                           ;doprnt.c: 1499: {
 17406                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 17407                           
 17408                           ; BSR set to: 1
 17409  011C26  C1A7  F117         	movff	printf@val,___lldiv@dividend
 17410  011C2A  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 17411  011C2E  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 17412  011C32  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 17413  011C36  C1AF  F18C         	movff	printf@prec,??_printf
 17414  011C3A  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 17415  011C3E  90D8               	bcf	status,0,c
 17416  011C40  378C               	rlcf	??_printf& (0+255),f,b
 17417  011C42  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17418  011C44  90D8               	bcf	status,0,c
 17419  011C46  378C               	rlcf	??_printf& (0+255),f,b
 17420  011C48  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17421  011C4A  0E21               	movlw	low _hexpowers
 17422  011C4C  258C               	addwf	??_printf& (0+255),w,b
 17423  011C4E  6EF6               	movwf	tblptrl,c
 17424  011C50  0EE9               	movlw	high _hexpowers
 17425  011C52  218D               	addwfc	(??_printf+1)& (0+255),w,b
 17426  011C54  6EF7               	movwf	tblptrh,c
 17427  011C56                     	if	1	;There are 3 active tblptr bytes
 17428  011C56  6AF8               	clrf	tblptru,c
 17429  011C58  0E00               	movlw	low (__mediumconst shr (0+16))
 17430  011C5A  22F8               	addwfc	tblptru,f,c
 17431  011C5C                     	endif
 17432  011C5C  0009               	tblrd		*+
 17433  011C5E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 17434  011C62  0009               	tblrd		*+
 17435  011C64  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 17436  011C68  0009               	tblrd		*+
 17437  011C6A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 17438  011C6E  000A               	tblrd		*-
 17439  011C70  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 17440  011C74  ECF1  F0BD         	call	___lldiv	;wreg free
 17441  011C78  0101               	movlb	1	; () banked
 17442  011C7A  5117               	movf	?___lldiv& (0+255),w,b
 17443  011C7C  0B0F               	andlw	15
 17444  011C7E  6F96               	movwf	printf@idx& (0+255),b
 17445                           
 17446                           ; BSR set to: 1
 17447                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 17448  011C80  5196               	movf	printf@idx& (0+255),w,b
 17449  011C82  0D01               	mullw	1
 17450  011C84  0E9F               	movlw	low STR_147
 17451  011C86  24F3               	addwf	prodl,w,c
 17452  011C88  6EF6               	movwf	tblptrl,c
 17453  011C8A  0EFD               	movlw	high STR_147
 17454  011C8C  20F4               	addwfc	prodh,w,c
 17455  011C8E  6EF7               	movwf	tblptrh,c
 17456  011C90                     	if	1	;There are 3 active tblptr bytes
 17457  011C90  6AF8               	clrf	tblptru,c
 17458  011C92  0E00               	movlw	low (__mediumconst shr (0+16))
 17459  011C94  22F8               	addwfc	tblptru,f,c
 17460  011C96                     	endif
 17461  011C96  0008               	tblrd		*
 17462  011C98  CFF5 F1B1          	movff	tablat,printf@c
 17463                           
 17464                           ; BSR set to: 1
 17465                           ;doprnt.c: 1523: }
 17466                           
 17467                           ;doprnt.c: 1508: }
 17468                           ;doprnt.c: 1510: break;
 17469  011C9C  D00C               	goto	l1536
 17470  011C9E                     l18612:
 17471  011C9E  0101               	movlb	1	; () banked
 17472  011CA0  51AB               	movf	printf@flag& (0+255),w,b
 17473  011CA2  0BC0               	andlw	192
 17474                           
 17475                           ; Switch size 1, requested type "space"
 17476                           ; Number of cases is 3, Range of values is 0 to 192
 17477                           ; switch strategies available:
 17478                           ; Name         Instructions Cycles
 17479                           ; simple_byte           10     6 (average)
 17480                           ;	Chosen strategy is simple_byte
 17481  011CA4  0A00               	xorlw	0	; case 0
 17482  011CA6  B4D8               	btfsc	status,2,c
 17483  011CA8  D77C               	goto	l1534
 17484  011CAA  0A80               	xorlw	128	; case 128
 17485  011CAC  B4D8               	btfsc	status,2,c
 17486  011CAE  D7BB               	goto	l1537
 17487  011CB0  0A40               	xorlw	64	; case 192
 17488  011CB2  B4D8               	btfsc	status,2,c
 17489  011CB4  D776               	goto	l1534
 17490  011CB6                     l1536:
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;doprnt.c: 1524: (putch(c) );
 17494                           
 17495                           ; BSR set to: 1
 17496  011CB6  51B1               	movf	printf@c& (0+255),w,b
 17497  011CB8  EC1B  F0C6         	call	_putch
 17498  011CBC                     l1531:
 17499  011CBC  0101               	movlb	1	; () banked
 17500  011CBE  07AF               	decf	printf@prec& (0+255),f,b
 17501  011CC0  A0D8               	btfss	status,0,c
 17502  011CC2  07B0               	decf	(printf@prec+1)& (0+255),f,b
 17503  011CC4  29AF               	incf	printf@prec& (0+255),w,b
 17504  011CC6  E1EB               	bnz	l18612
 17505  011CC8  29B0               	incf	(printf@prec+1)& (0+255),w,b
 17506  011CCA  A4D8               	btfss	status,2,c
 17507  011CCC  D7E8               	goto	l1533
 17508  011CCE                     u25000:
 17509                           
 17510                           ; BSR set to: 1
 17511                           
 17512                           ; BSR set to: 1
 17513  011CCE  0101               	movlb	1	; () banked
 17514  011CD0  5182               	movf	printf@f& (0+255),w,b
 17515  011CD2  6F8C               	movwf	??_printf& (0+255),b
 17516  011CD4  5183               	movf	(printf@f+1)& (0+255),w,b
 17517  011CD6  6F8D               	movwf	(??_printf+1)& (0+255),b
 17518  011CD8  4B82               	infsnz	printf@f& (0+255),f,b
 17519  011CDA  2B83               	incf	(printf@f+1)& (0+255),f,b
 17520  011CDC  C18C  FFF6         	movff	??_printf,tblptrl
 17521  011CE0  C18D  FFF7         	movff	??_printf+1,tblptrh
 17522  011CE4  0E00               	movlw	low (__mediumconst shr (0+16))
 17523  011CE6  6EF8               	movwf	tblptru,c
 17524  011CE8  0E0D               	movlw	(high __ramtop+-1)
 17525  011CEA  64F7               	cpfsgt	tblptrh,c
 17526  011CEC  D003               	bra	u25017
 17527  011CEE  0008               	tblrd		*
 17528  011CF0  50F5               	movf	tablat,w,c
 17529  011CF2  D005               	bra	u25010
 17530  011CF4                     u25017:
 17531  011CF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17532  011CF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17533  011CFC  50EF               	movf	indf0,w,c
 17534  011CFE                     u25010:
 17535  011CFE  0101               	movlb	1	; () banked
 17536  011D00  6FB1               	movwf	printf@c& (0+255),b
 17537  011D02  51B1               	movf	printf@c& (0+255),w,b
 17538  011D04  B4D8               	btfsc	status,2,c
 17539  011D06  0012               	return	
 17540  011D08  EFA6  F087         	goto	l1405
 17541  011D0C                     __end_of_printf:
 17542                           	opt stack 0
 17543                           tblptru	equ	0xFF8
 17544                           tblptrh	equ	0xFF7
 17545                           tblptrl	equ	0xFF6
 17546                           tablat	equ	0xFF5
 17547                           prodh	equ	0xFF4
 17548                           prodl	equ	0xFF3
 17549                           intcon	equ	0xFF2
 17550                           indf0	equ	0xFEF
 17551                           postinc0	equ	0xFEE
 17552                           fsr0h	equ	0xFEA
 17553                           fsr0l	equ	0xFE9
 17554                           wreg	equ	0xFE8
 17555                           indf1	equ	0xFE7
 17556                           postdec1	equ	0xFE5
 17557                           plusw1	equ	0xFE3
 17558                           fsr1h	equ	0xFE2
 17559                           fsr1l	equ	0xFE1
 17560                           indf2	equ	0xFDF
 17561                           postinc2	equ	0xFDE
 17562                           postdec2	equ	0xFDD
 17563                           plusw2	equ	0xFDB
 17564                           fsr2h	equ	0xFDA
 17565                           fsr2l	equ	0xFD9
 17566                           status	equ	0xFD8
 17567                           
 17568 ;; *************** function _scale *****************
 17569 ;; Defined at:
 17570 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17571 ;; Parameters:    Size  Location     Type
 17572 ;;  scl             1    wreg     char 
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;  scl             1  119[BANK1 ] char 
 17575 ;; Return value:  Size  Location     Type
 17576 ;;                  4  111[BANK1 ] char 
 17577 ;; Registers used:
 17578 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17584 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17585 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17587 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17588 ;;Total ram usage:        9 bytes
 17589 ;; Hardware stack levels used:    1
 17590 ;; Hardware stack levels required when called:   14
 17591 ;; This function calls:
 17592 ;;		___awdiv
 17593 ;;		___awmod
 17594 ;;		___flmul
 17595 ;; This function is called by:
 17596 ;;		_printf
 17597 ;; This function uses a non-reentrant model
 17598 ;;
 17599                           
 17600                           	psect	text33
 17601  0134B0                     __ptext33:
 17602                           	opt stack 0
 17603  0134B0                     _scale:
 17604                           	opt stack 13
 17605                           
 17606                           ; BSR set to: 1
 17607                           ;incstack = 0
 17608                           ;scale@scl stored from wreg
 17609  0134B0  0101               	movlb	1	; () banked
 17610  0134B2  6F77               	movwf	scale@scl& (0+255),b
 17611                           
 17612                           ;doprnt.c: 428: if(scl < 0) {
 17613  0134B4  0101               	movlb	1	; () banked
 17614  0134B6  AF77               	btfss	scale@scl& (0+255),7,b
 17615  0134B8  D127               	goto	l1394
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;doprnt.c: 429: scl = -scl;
 17619  0134BA  6D77               	negf	scale@scl& (0+255),b
 17620                           
 17621                           ;doprnt.c: 430: if(scl>=110)
 17622  0134BC  5177               	movf	scale@scl& (0+255),w,b
 17623  0134BE  0A80               	xorlw	128
 17624  0134C0  0F12               	addlw	-238
 17625  0134C2  A0D8               	btfss	status,0,c
 17626  0134C4  D0A5               	goto	l1395
 17627                           
 17628                           ; BSR set to: 1
 17629                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17630  0134C6  0E00               	movlw	0
 17631  0134C8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17632  0134CA  0E0A               	movlw	10
 17633  0134CC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17634  0134CE  0E00               	movlw	0
 17635  0134D0  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17636  0134D2  0E64               	movlw	100
 17637  0134D4  6F19               	movwf	___awmod@divisor& (0+255),b
 17638  0134D6  5177               	movf	scale@scl& (0+255),w,b
 17639  0134D8  6F17               	movwf	___awmod@dividend& (0+255),b
 17640  0134DA  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17641  0134DC  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17642  0134DE  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17643  0134E0  EC31  F0BF         	call	___awmod	;wreg free
 17644  0134E4  C117  F11D         	movff	?___awmod,___awdiv@dividend
 17645  0134E8  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 17646  0134EC  ECAE  F0BD         	call	___awdiv	;wreg free
 17647  0134F0  0101               	movlb	1	; () banked
 17648  0134F2  90D8               	bcf	status,0,c
 17649  0134F4  371D               	rlcf	?___awdiv& (0+255),f,b
 17650  0134F6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17651  0134F8  90D8               	bcf	status,0,c
 17652  0134FA  371D               	rlcf	?___awdiv& (0+255),f,b
 17653  0134FC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17654  0134FE  0E24               	movlw	36
 17655  013500  271D               	addwf	?___awdiv& (0+255),f,b
 17656  013502  0E00               	movlw	0
 17657  013504  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17658  013506  0EC5               	movlw	low __npowers_
 17659  013508  251D               	addwf	?___awdiv& (0+255),w,b
 17660  01350A  6EF6               	movwf	tblptrl,c
 17661  01350C  0EE8               	movlw	high __npowers_
 17662  01350E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17663  013510  6EF7               	movwf	tblptrh,c
 17664  013512                     	if	1	;There are 3 active tblptr bytes
 17665  013512  6AF8               	clrf	tblptru,c
 17666  013514  0E00               	movlw	low (__mediumconst shr (0+16))
 17667  013516  22F8               	addwfc	tblptru,f,c
 17668  013518                     	endif
 17669  013518  0009               	tblrd		*+
 17670  01351A  CFF5 F15A          	movff	tablat,___flmul@a
 17671  01351E  0009               	tblrd		*+
 17672  013520  CFF5 F15B          	movff	tablat,___flmul@a+1
 17673  013524  0009               	tblrd		*+
 17674  013526  CFF5 F15C          	movff	tablat,___flmul@a+2
 17675  01352A  000A               	tblrd		*-
 17676  01352C  CFF5 F15D          	movff	tablat,___flmul@a+3
 17677  013530  0E00               	movlw	0
 17678  013532  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17679  013534  0E64               	movlw	100
 17680  013536  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17681  013538  5177               	movf	scale@scl& (0+255),w,b
 17682  01353A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17683  01353C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17684  01353E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17685  013540  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17686  013542  ECAE  F0BD         	call	___awdiv	;wreg free
 17687  013546  0101               	movlb	1	; () banked
 17688  013548  90D8               	bcf	status,0,c
 17689  01354A  371D               	rlcf	?___awdiv& (0+255),f,b
 17690  01354C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17691  01354E  90D8               	bcf	status,0,c
 17692  013550  371D               	rlcf	?___awdiv& (0+255),f,b
 17693  013552  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17694  013554  0E48               	movlw	72
 17695  013556  271D               	addwf	?___awdiv& (0+255),f,b
 17696  013558  0E00               	movlw	0
 17697  01355A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17698  01355C  0EC5               	movlw	low __npowers_
 17699  01355E  251D               	addwf	?___awdiv& (0+255),w,b
 17700  013560  6EF6               	movwf	tblptrl,c
 17701  013562  0EE8               	movlw	high __npowers_
 17702  013564  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17703  013566  6EF7               	movwf	tblptrh,c
 17704  013568                     	if	1	;There are 3 active tblptr bytes
 17705  013568  6AF8               	clrf	tblptru,c
 17706  01356A  0E00               	movlw	low (__mediumconst shr (0+16))
 17707  01356C  22F8               	addwfc	tblptru,f,c
 17708  01356E                     	endif
 17709  01356E  0009               	tblrd		*+
 17710  013570  CFF5 F156          	movff	tablat,___flmul@b
 17711  013574  0009               	tblrd		*+
 17712  013576  CFF5 F157          	movff	tablat,___flmul@b+1
 17713  01357A  0009               	tblrd		*+
 17714  01357C  CFF5 F158          	movff	tablat,___flmul@b+2
 17715  013580  000A               	tblrd		*-
 17716  013582  CFF5 F159          	movff	tablat,___flmul@b+3
 17717  013586  EC9E  F0A0         	call	___flmul	;wreg free
 17718  01358A  C156  F173         	movff	?___flmul,_scale$3942
 17719  01358E  C157  F174         	movff	?___flmul+1,_scale$3942+1
 17720  013592  C158  F175         	movff	?___flmul+2,_scale$3942+2
 17721  013596  C159  F176         	movff	?___flmul+3,_scale$3942+3
 17722                           
 17723                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17724  01359A  C173  F156         	movff	_scale$3942,___flmul@b
 17725  01359E  C174  F157         	movff	_scale$3942+1,___flmul@b+1
 17726  0135A2  C175  F158         	movff	_scale$3942+2,___flmul@b+2
 17727  0135A6  C176  F159         	movff	_scale$3942+3,___flmul@b+3
 17728  0135AA  0E00               	movlw	0
 17729  0135AC  0101               	movlb	1	; () banked
 17730  0135AE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17731  0135B0  0E0A               	movlw	10
 17732  0135B2  6F19               	movwf	___awmod@divisor& (0+255),b
 17733  0135B4  5177               	movf	scale@scl& (0+255),w,b
 17734  0135B6  6F17               	movwf	___awmod@dividend& (0+255),b
 17735  0135B8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17736  0135BA  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17737  0135BC  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17738  0135BE  EC31  F0BF         	call	___awmod	;wreg free
 17739  0135C2  0101               	movlb	1	; () banked
 17740  0135C4  90D8               	bcf	status,0,c
 17741  0135C6  3717               	rlcf	?___awmod& (0+255),f,b
 17742  0135C8  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17743  0135CA  90D8               	bcf	status,0,c
 17744  0135CC  3717               	rlcf	?___awmod& (0+255),f,b
 17745  0135CE  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17746  0135D0  0EC5               	movlw	low __npowers_
 17747  0135D2  2517               	addwf	?___awmod& (0+255),w,b
 17748  0135D4  6EF6               	movwf	tblptrl,c
 17749  0135D6  0EE8               	movlw	high __npowers_
 17750  0135D8  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17751  0135DA  6EF7               	movwf	tblptrh,c
 17752  0135DC                     	if	1	;There are 3 active tblptr bytes
 17753  0135DC  6AF8               	clrf	tblptru,c
 17754  0135DE  0E00               	movlw	low (__mediumconst shr (0+16))
 17755  0135E0  22F8               	addwfc	tblptru,f,c
 17756  0135E2                     	endif
 17757  0135E2  0009               	tblrd		*+
 17758  0135E4  CFF5 F15A          	movff	tablat,___flmul@a
 17759  0135E8  0009               	tblrd		*+
 17760  0135EA  CFF5 F15B          	movff	tablat,___flmul@a+1
 17761  0135EE  0009               	tblrd		*+
 17762  0135F0  CFF5 F15C          	movff	tablat,___flmul@a+2
 17763  0135F4  000A               	tblrd		*-
 17764  0135F6  CFF5 F15D          	movff	tablat,___flmul@a+3
 17765  0135FA  EC9E  F0A0         	call	___flmul	;wreg free
 17766  0135FE  C156  F16F         	movff	?___flmul,?_scale
 17767  013602  C157  F170         	movff	?___flmul+1,?_scale+1
 17768  013606  C158  F171         	movff	?___flmul+2,?_scale+2
 17769  01360A  C159  F172         	movff	?___flmul+3,?_scale+3
 17770  01360E  0012               	return	
 17771  013610                     l1395:
 17772                           
 17773                           ;doprnt.c: 432: else if(scl > 10)
 17774  013610  0101               	movlb	1	; () banked
 17775  013612  5177               	movf	scale@scl& (0+255),w,b
 17776  013614  0A80               	xorlw	128
 17777  013616  0F75               	addlw	-139
 17778  013618  A0D8               	btfss	status,0,c
 17779  01361A  D05D               	goto	l1398
 17780                           
 17781                           ; BSR set to: 1
 17782                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 17783  01361C  0E00               	movlw	0
 17784  01361E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17785  013620  0E0A               	movlw	10
 17786  013622  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17787  013624  5177               	movf	scale@scl& (0+255),w,b
 17788  013626  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17789  013628  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17790  01362A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17791  01362C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17792  01362E  ECAE  F0BD         	call	___awdiv	;wreg free
 17793  013632  0101               	movlb	1	; () banked
 17794  013634  90D8               	bcf	status,0,c
 17795  013636  371D               	rlcf	?___awdiv& (0+255),f,b
 17796  013638  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17797  01363A  90D8               	bcf	status,0,c
 17798  01363C  371D               	rlcf	?___awdiv& (0+255),f,b
 17799  01363E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17800  013640  0E24               	movlw	36
 17801  013642  271D               	addwf	?___awdiv& (0+255),f,b
 17802  013644  0E00               	movlw	0
 17803  013646  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17804  013648  0EC5               	movlw	low __npowers_
 17805  01364A  251D               	addwf	?___awdiv& (0+255),w,b
 17806  01364C  6EF6               	movwf	tblptrl,c
 17807  01364E  0EE8               	movlw	high __npowers_
 17808  013650  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17809  013652  6EF7               	movwf	tblptrh,c
 17810  013654                     	if	1	;There are 3 active tblptr bytes
 17811  013654  6AF8               	clrf	tblptru,c
 17812  013656  0E00               	movlw	low (__mediumconst shr (0+16))
 17813  013658  22F8               	addwfc	tblptru,f,c
 17814  01365A                     	endif
 17815  01365A  0009               	tblrd		*+
 17816  01365C  CFF5 F156          	movff	tablat,___flmul@b
 17817  013660  0009               	tblrd		*+
 17818  013662  CFF5 F157          	movff	tablat,___flmul@b+1
 17819  013666  0009               	tblrd		*+
 17820  013668  CFF5 F158          	movff	tablat,___flmul@b+2
 17821  01366C  000A               	tblrd		*-
 17822  01366E  CFF5 F159          	movff	tablat,___flmul@b+3
 17823  013672  0E00               	movlw	0
 17824  013674  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17825  013676  0E0A               	movlw	10
 17826  013678  6F19               	movwf	___awmod@divisor& (0+255),b
 17827  01367A  5177               	movf	scale@scl& (0+255),w,b
 17828  01367C  6F17               	movwf	___awmod@dividend& (0+255),b
 17829  01367E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17830  013680  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17831  013682  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17832  013684  EC31  F0BF         	call	___awmod	;wreg free
 17833  013688  0101               	movlb	1	; () banked
 17834  01368A  90D8               	bcf	status,0,c
 17835  01368C  3717               	rlcf	?___awmod& (0+255),f,b
 17836  01368E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17837  013690  90D8               	bcf	status,0,c
 17838  013692  3717               	rlcf	?___awmod& (0+255),f,b
 17839  013694  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17840  013696  0EC5               	movlw	low __npowers_
 17841  013698  2517               	addwf	?___awmod& (0+255),w,b
 17842  01369A  6EF6               	movwf	tblptrl,c
 17843  01369C  0EE8               	movlw	high __npowers_
 17844  01369E  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17845  0136A0  6EF7               	movwf	tblptrh,c
 17846  0136A2                     	if	1	;There are 3 active tblptr bytes
 17847  0136A2  6AF8               	clrf	tblptru,c
 17848  0136A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17849  0136A6  22F8               	addwfc	tblptru,f,c
 17850  0136A8                     	endif
 17851  0136A8  0009               	tblrd		*+
 17852  0136AA  CFF5 F15A          	movff	tablat,___flmul@a
 17853  0136AE  0009               	tblrd		*+
 17854  0136B0  CFF5 F15B          	movff	tablat,___flmul@a+1
 17855  0136B4  0009               	tblrd		*+
 17856  0136B6  CFF5 F15C          	movff	tablat,___flmul@a+2
 17857  0136BA  000A               	tblrd		*-
 17858  0136BC  CFF5 F15D          	movff	tablat,___flmul@a+3
 17859  0136C0  EC9E  F0A0         	call	___flmul	;wreg free
 17860  0136C4  C156  F16F         	movff	?___flmul,?_scale
 17861  0136C8  C157  F170         	movff	?___flmul+1,?_scale+1
 17862  0136CC  C158  F171         	movff	?___flmul+2,?_scale+2
 17863  0136D0  C159  F172         	movff	?___flmul+3,?_scale+3
 17864  0136D4  0012               	return	
 17865  0136D6                     l1398:
 17866                           
 17867                           ;doprnt.c: 434: return _npowers_[scl];
 17868  0136D6  0101               	movlb	1	; () banked
 17869  0136D8  5177               	movf	scale@scl& (0+255),w,b
 17870  0136DA  0D04               	mullw	4
 17871  0136DC  0EC5               	movlw	low __npowers_
 17872  0136DE  24F3               	addwf	prodl,w,c
 17873  0136E0  6EF6               	movwf	tblptrl,c
 17874  0136E2  0EE8               	movlw	high __npowers_
 17875  0136E4  20F4               	addwfc	prodh,w,c
 17876  0136E6  6EF7               	movwf	tblptrh,c
 17877  0136E8                     	if	1	;There are 3 active tblptr bytes
 17878  0136E8  6AF8               	clrf	tblptru,c
 17879  0136EA  0E00               	movlw	low (__mediumconst shr (0+16))
 17880  0136EC  22F8               	addwfc	tblptru,f,c
 17881  0136EE                     	endif
 17882  0136EE  0009               	tblrd		*+
 17883  0136F0  CFF5 F16F          	movff	tablat,?_scale
 17884  0136F4  0009               	tblrd		*+
 17885  0136F6  CFF5 F170          	movff	tablat,?_scale+1
 17886  0136FA  0009               	tblrd		*+
 17887  0136FC  CFF5 F171          	movff	tablat,?_scale+2
 17888  013700  000A               	tblrd		*-
 17889  013702  CFF5 F172          	movff	tablat,?_scale+3
 17890                           
 17891                           ; BSR set to: 1
 17892  013706  0012               	return	
 17893  013708                     l1394:
 17894                           
 17895                           ; BSR set to: 1
 17896                           ;doprnt.c: 435: }
 17897                           ;doprnt.c: 436: if(scl>=110)
 17898                           
 17899                           ; BSR set to: 1
 17900  013708  5177               	movf	scale@scl& (0+255),w,b
 17901  01370A  0A80               	xorlw	128
 17902  01370C  0F12               	addlw	-238
 17903  01370E  A0D8               	btfss	status,0,c
 17904  013710  D0A5               	goto	l1399
 17905                           
 17906                           ; BSR set to: 1
 17907                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 17908  013712  0E00               	movlw	0
 17909  013714  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17910  013716  0E0A               	movlw	10
 17911  013718  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17912  01371A  0E00               	movlw	0
 17913  01371C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17914  01371E  0E64               	movlw	100
 17915  013720  6F19               	movwf	___awmod@divisor& (0+255),b
 17916  013722  5177               	movf	scale@scl& (0+255),w,b
 17917  013724  6F17               	movwf	___awmod@dividend& (0+255),b
 17918  013726  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17919  013728  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17920  01372A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17921  01372C  EC31  F0BF         	call	___awmod	;wreg free
 17922  013730  C117  F11D         	movff	?___awmod,___awdiv@dividend
 17923  013734  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 17924  013738  ECAE  F0BD         	call	___awdiv	;wreg free
 17925  01373C  0101               	movlb	1	; () banked
 17926  01373E  90D8               	bcf	status,0,c
 17927  013740  371D               	rlcf	?___awdiv& (0+255),f,b
 17928  013742  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17929  013744  90D8               	bcf	status,0,c
 17930  013746  371D               	rlcf	?___awdiv& (0+255),f,b
 17931  013748  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17932  01374A  0E24               	movlw	36
 17933  01374C  271D               	addwf	?___awdiv& (0+255),f,b
 17934  01374E  0E00               	movlw	0
 17935  013750  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17936  013752  0E91               	movlw	low __powers_
 17937  013754  251D               	addwf	?___awdiv& (0+255),w,b
 17938  013756  6EF6               	movwf	tblptrl,c
 17939  013758  0EE8               	movlw	high __powers_
 17940  01375A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17941  01375C  6EF7               	movwf	tblptrh,c
 17942  01375E                     	if	1	;There are 3 active tblptr bytes
 17943  01375E  6AF8               	clrf	tblptru,c
 17944  013760  0E00               	movlw	low (__mediumconst shr (0+16))
 17945  013762  22F8               	addwfc	tblptru,f,c
 17946  013764                     	endif
 17947  013764  0009               	tblrd		*+
 17948  013766  CFF5 F15A          	movff	tablat,___flmul@a
 17949  01376A  0009               	tblrd		*+
 17950  01376C  CFF5 F15B          	movff	tablat,___flmul@a+1
 17951  013770  0009               	tblrd		*+
 17952  013772  CFF5 F15C          	movff	tablat,___flmul@a+2
 17953  013776  000A               	tblrd		*-
 17954  013778  CFF5 F15D          	movff	tablat,___flmul@a+3
 17955  01377C  0E00               	movlw	0
 17956  01377E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17957  013780  0E64               	movlw	100
 17958  013782  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17959  013784  5177               	movf	scale@scl& (0+255),w,b
 17960  013786  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17961  013788  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17962  01378A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17963  01378C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17964  01378E  ECAE  F0BD         	call	___awdiv	;wreg free
 17965  013792  0101               	movlb	1	; () banked
 17966  013794  90D8               	bcf	status,0,c
 17967  013796  371D               	rlcf	?___awdiv& (0+255),f,b
 17968  013798  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17969  01379A  90D8               	bcf	status,0,c
 17970  01379C  371D               	rlcf	?___awdiv& (0+255),f,b
 17971  01379E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17972  0137A0  0E48               	movlw	72
 17973  0137A2  271D               	addwf	?___awdiv& (0+255),f,b
 17974  0137A4  0E00               	movlw	0
 17975  0137A6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17976  0137A8  0E91               	movlw	low __powers_
 17977  0137AA  251D               	addwf	?___awdiv& (0+255),w,b
 17978  0137AC  6EF6               	movwf	tblptrl,c
 17979  0137AE  0EE8               	movlw	high __powers_
 17980  0137B0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17981  0137B2  6EF7               	movwf	tblptrh,c
 17982  0137B4                     	if	1	;There are 3 active tblptr bytes
 17983  0137B4  6AF8               	clrf	tblptru,c
 17984  0137B6  0E00               	movlw	low (__mediumconst shr (0+16))
 17985  0137B8  22F8               	addwfc	tblptru,f,c
 17986  0137BA                     	endif
 17987  0137BA  0009               	tblrd		*+
 17988  0137BC  CFF5 F156          	movff	tablat,___flmul@b
 17989  0137C0  0009               	tblrd		*+
 17990  0137C2  CFF5 F157          	movff	tablat,___flmul@b+1
 17991  0137C6  0009               	tblrd		*+
 17992  0137C8  CFF5 F158          	movff	tablat,___flmul@b+2
 17993  0137CC  000A               	tblrd		*-
 17994  0137CE  CFF5 F159          	movff	tablat,___flmul@b+3
 17995  0137D2  EC9E  F0A0         	call	___flmul	;wreg free
 17996  0137D6  C156  F173         	movff	?___flmul,_scale$3942
 17997  0137DA  C157  F174         	movff	?___flmul+1,_scale$3942+1
 17998  0137DE  C158  F175         	movff	?___flmul+2,_scale$3942+2
 17999  0137E2  C159  F176         	movff	?___flmul+3,_scale$3942+3
 18000                           
 18001                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18002  0137E6  C173  F156         	movff	_scale$3942,___flmul@b
 18003  0137EA  C174  F157         	movff	_scale$3942+1,___flmul@b+1
 18004  0137EE  C175  F158         	movff	_scale$3942+2,___flmul@b+2
 18005  0137F2  C176  F159         	movff	_scale$3942+3,___flmul@b+3
 18006  0137F6  0E00               	movlw	0
 18007  0137F8  0101               	movlb	1	; () banked
 18008  0137FA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18009  0137FC  0E0A               	movlw	10
 18010  0137FE  6F19               	movwf	___awmod@divisor& (0+255),b
 18011  013800  5177               	movf	scale@scl& (0+255),w,b
 18012  013802  6F17               	movwf	___awmod@dividend& (0+255),b
 18013  013804  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18014  013806  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 18015  013808  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 18016  01380A  EC31  F0BF         	call	___awmod	;wreg free
 18017  01380E  0101               	movlb	1	; () banked
 18018  013810  90D8               	bcf	status,0,c
 18019  013812  3717               	rlcf	?___awmod& (0+255),f,b
 18020  013814  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18021  013816  90D8               	bcf	status,0,c
 18022  013818  3717               	rlcf	?___awmod& (0+255),f,b
 18023  01381A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18024  01381C  0E91               	movlw	low __powers_
 18025  01381E  2517               	addwf	?___awmod& (0+255),w,b
 18026  013820  6EF6               	movwf	tblptrl,c
 18027  013822  0EE8               	movlw	high __powers_
 18028  013824  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18029  013826  6EF7               	movwf	tblptrh,c
 18030  013828                     	if	1	;There are 3 active tblptr bytes
 18031  013828  6AF8               	clrf	tblptru,c
 18032  01382A  0E00               	movlw	low (__mediumconst shr (0+16))
 18033  01382C  22F8               	addwfc	tblptru,f,c
 18034  01382E                     	endif
 18035  01382E  0009               	tblrd		*+
 18036  013830  CFF5 F15A          	movff	tablat,___flmul@a
 18037  013834  0009               	tblrd		*+
 18038  013836  CFF5 F15B          	movff	tablat,___flmul@a+1
 18039  01383A  0009               	tblrd		*+
 18040  01383C  CFF5 F15C          	movff	tablat,___flmul@a+2
 18041  013840  000A               	tblrd		*-
 18042  013842  CFF5 F15D          	movff	tablat,___flmul@a+3
 18043  013846  EC9E  F0A0         	call	___flmul	;wreg free
 18044  01384A  C156  F16F         	movff	?___flmul,?_scale
 18045  01384E  C157  F170         	movff	?___flmul+1,?_scale+1
 18046  013852  C158  F171         	movff	?___flmul+2,?_scale+2
 18047  013856  C159  F172         	movff	?___flmul+3,?_scale+3
 18048  01385A  0012               	return	
 18049  01385C                     l1399:
 18050                           
 18051                           ;doprnt.c: 438: else if(scl > 10)
 18052  01385C  0101               	movlb	1	; () banked
 18053  01385E  5177               	movf	scale@scl& (0+255),w,b
 18054  013860  0A80               	xorlw	128
 18055  013862  0F75               	addlw	-139
 18056  013864  A0D8               	btfss	status,0,c
 18057  013866  D05D               	goto	l1401
 18058                           
 18059                           ; BSR set to: 1
 18060                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 18061  013868  0E00               	movlw	0
 18062  01386A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18063  01386C  0E0A               	movlw	10
 18064  01386E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18065  013870  5177               	movf	scale@scl& (0+255),w,b
 18066  013872  6F1D               	movwf	___awdiv@dividend& (0+255),b
 18067  013874  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18068  013876  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 18069  013878  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 18070  01387A  ECAE  F0BD         	call	___awdiv	;wreg free
 18071  01387E  0101               	movlb	1	; () banked
 18072  013880  90D8               	bcf	status,0,c
 18073  013882  371D               	rlcf	?___awdiv& (0+255),f,b
 18074  013884  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18075  013886  90D8               	bcf	status,0,c
 18076  013888  371D               	rlcf	?___awdiv& (0+255),f,b
 18077  01388A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18078  01388C  0E24               	movlw	36
 18079  01388E  271D               	addwf	?___awdiv& (0+255),f,b
 18080  013890  0E00               	movlw	0
 18081  013892  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18082  013894  0E91               	movlw	low __powers_
 18083  013896  251D               	addwf	?___awdiv& (0+255),w,b
 18084  013898  6EF6               	movwf	tblptrl,c
 18085  01389A  0EE8               	movlw	high __powers_
 18086  01389C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18087  01389E  6EF7               	movwf	tblptrh,c
 18088  0138A0                     	if	1	;There are 3 active tblptr bytes
 18089  0138A0  6AF8               	clrf	tblptru,c
 18090  0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
 18091  0138A4  22F8               	addwfc	tblptru,f,c
 18092  0138A6                     	endif
 18093  0138A6  0009               	tblrd		*+
 18094  0138A8  CFF5 F156          	movff	tablat,___flmul@b
 18095  0138AC  0009               	tblrd		*+
 18096  0138AE  CFF5 F157          	movff	tablat,___flmul@b+1
 18097  0138B2  0009               	tblrd		*+
 18098  0138B4  CFF5 F158          	movff	tablat,___flmul@b+2
 18099  0138B8  000A               	tblrd		*-
 18100  0138BA  CFF5 F159          	movff	tablat,___flmul@b+3
 18101  0138BE  0E00               	movlw	0
 18102  0138C0  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18103  0138C2  0E0A               	movlw	10
 18104  0138C4  6F19               	movwf	___awmod@divisor& (0+255),b
 18105  0138C6  5177               	movf	scale@scl& (0+255),w,b
 18106  0138C8  6F17               	movwf	___awmod@dividend& (0+255),b
 18107  0138CA  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18108  0138CC  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 18109  0138CE  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 18110  0138D0  EC31  F0BF         	call	___awmod	;wreg free
 18111  0138D4  0101               	movlb	1	; () banked
 18112  0138D6  90D8               	bcf	status,0,c
 18113  0138D8  3717               	rlcf	?___awmod& (0+255),f,b
 18114  0138DA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18115  0138DC  90D8               	bcf	status,0,c
 18116  0138DE  3717               	rlcf	?___awmod& (0+255),f,b
 18117  0138E0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18118  0138E2  0E91               	movlw	low __powers_
 18119  0138E4  2517               	addwf	?___awmod& (0+255),w,b
 18120  0138E6  6EF6               	movwf	tblptrl,c
 18121  0138E8  0EE8               	movlw	high __powers_
 18122  0138EA  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18123  0138EC  6EF7               	movwf	tblptrh,c
 18124  0138EE                     	if	1	;There are 3 active tblptr bytes
 18125  0138EE  6AF8               	clrf	tblptru,c
 18126  0138F0  0E00               	movlw	low (__mediumconst shr (0+16))
 18127  0138F2  22F8               	addwfc	tblptru,f,c
 18128  0138F4                     	endif
 18129  0138F4  0009               	tblrd		*+
 18130  0138F6  CFF5 F15A          	movff	tablat,___flmul@a
 18131  0138FA  0009               	tblrd		*+
 18132  0138FC  CFF5 F15B          	movff	tablat,___flmul@a+1
 18133  013900  0009               	tblrd		*+
 18134  013902  CFF5 F15C          	movff	tablat,___flmul@a+2
 18135  013906  000A               	tblrd		*-
 18136  013908  CFF5 F15D          	movff	tablat,___flmul@a+3
 18137  01390C  EC9E  F0A0         	call	___flmul	;wreg free
 18138  013910  C156  F16F         	movff	?___flmul,?_scale
 18139  013914  C157  F170         	movff	?___flmul+1,?_scale+1
 18140  013918  C158  F171         	movff	?___flmul+2,?_scale+2
 18141  01391C  C159  F172         	movff	?___flmul+3,?_scale+3
 18142  013920  0012               	return	
 18143  013922                     l1401:
 18144                           
 18145                           ;doprnt.c: 440: return _powers_[scl];
 18146  013922  0101               	movlb	1	; () banked
 18147  013924  5177               	movf	scale@scl& (0+255),w,b
 18148  013926  0D04               	mullw	4
 18149  013928  0E91               	movlw	low __powers_
 18150  01392A  24F3               	addwf	prodl,w,c
 18151  01392C  6EF6               	movwf	tblptrl,c
 18152  01392E  0EE8               	movlw	high __powers_
 18153  013930  20F4               	addwfc	prodh,w,c
 18154  013932  6EF7               	movwf	tblptrh,c
 18155  013934                     	if	1	;There are 3 active tblptr bytes
 18156  013934  6AF8               	clrf	tblptru,c
 18157  013936  0E00               	movlw	low (__mediumconst shr (0+16))
 18158  013938  22F8               	addwfc	tblptru,f,c
 18159  01393A                     	endif
 18160  01393A  0009               	tblrd		*+
 18161  01393C  CFF5 F16F          	movff	tablat,?_scale
 18162  013940  0009               	tblrd		*+
 18163  013942  CFF5 F170          	movff	tablat,?_scale+1
 18164  013946  0009               	tblrd		*+
 18165  013948  CFF5 F171          	movff	tablat,?_scale+2
 18166  01394C  000A               	tblrd		*-
 18167  01394E  CFF5 F172          	movff	tablat,?_scale+3
 18168  013952  0012               	return	
 18169  013954                     __end_of_scale:
 18170                           	opt stack 0
 18171                           tblptru	equ	0xFF8
 18172                           tblptrh	equ	0xFF7
 18173                           tblptrl	equ	0xFF6
 18174                           tablat	equ	0xFF5
 18175                           prodh	equ	0xFF4
 18176                           prodl	equ	0xFF3
 18177                           intcon	equ	0xFF2
 18178                           indf0	equ	0xFEF
 18179                           postinc0	equ	0xFEE
 18180                           fsr0h	equ	0xFEA
 18181                           fsr0l	equ	0xFE9
 18182                           wreg	equ	0xFE8
 18183                           indf1	equ	0xFE7
 18184                           postdec1	equ	0xFE5
 18185                           plusw1	equ	0xFE3
 18186                           fsr1h	equ	0xFE2
 18187                           fsr1l	equ	0xFE1
 18188                           indf2	equ	0xFDF
 18189                           postinc2	equ	0xFDE
 18190                           postdec2	equ	0xFDD
 18191                           plusw2	equ	0xFDB
 18192                           fsr2h	equ	0xFDA
 18193                           fsr2l	equ	0xFD9
 18194                           status	equ	0xFD8
 18195                           
 18196 ;; *************** function _putch *****************
 18197 ;; Defined at:
 18198 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 18199 ;; Parameters:    Size  Location     Type
 18200 ;;  txData          1    wreg     unsigned char 
 18201 ;; Auto vars:     Size  Location     Type
 18202 ;;  txData          1   24[BANK1 ] unsigned char 
 18203 ;; Return value:  Size  Location     Type
 18204 ;;                  1    wreg      void 
 18205 ;; Registers used:
 18206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18207 ;; Tracked objects:
 18208 ;;		On entry : 0/0
 18209 ;;		On exit  : 0/0
 18210 ;;		Unchanged: 0/0
 18211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18213 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18215 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18216 ;;Total ram usage:        1 bytes
 18217 ;; Hardware stack levels used:    1
 18218 ;; Hardware stack levels required when called:   14
 18219 ;; This function calls:
 18220 ;;		_EUSART2_Write
 18221 ;; This function is called by:
 18222 ;;		_printf
 18223 ;; This function uses a non-reentrant model
 18224 ;;
 18225                           
 18226                           	psect	text34
 18227  018C36                     __ptext34:
 18228                           	opt stack 0
 18229  018C36                     _putch:
 18230                           	opt stack 13
 18231                           
 18232                           ;incstack = 0
 18233                           ;putch@txData stored from wreg
 18234  018C36  0101               	movlb	1	; () banked
 18235  018C38  6F18               	movwf	putch@txData& (0+255),b
 18236                           
 18237                           ;eusart2.c: 195: EUSART2_Write(txData);
 18238  018C3A  0101               	movlb	1	; () banked
 18239  018C3C  5118               	movf	putch@txData& (0+255),w,b
 18240  018C3E  EC24  F0C2         	call	_EUSART2_Write
 18241  018C42  0012               	return		;funcret
 18242  018C44                     __end_of_putch:
 18243                           	opt stack 0
 18244                           tblptru	equ	0xFF8
 18245                           tblptrh	equ	0xFF7
 18246                           tblptrl	equ	0xFF6
 18247                           tablat	equ	0xFF5
 18248                           prodh	equ	0xFF4
 18249                           prodl	equ	0xFF3
 18250                           intcon	equ	0xFF2
 18251                           indf0	equ	0xFEF
 18252                           postinc0	equ	0xFEE
 18253                           fsr0h	equ	0xFEA
 18254                           fsr0l	equ	0xFE9
 18255                           wreg	equ	0xFE8
 18256                           indf1	equ	0xFE7
 18257                           postdec1	equ	0xFE5
 18258                           plusw1	equ	0xFE3
 18259                           fsr1h	equ	0xFE2
 18260                           fsr1l	equ	0xFE1
 18261                           indf2	equ	0xFDF
 18262                           postinc2	equ	0xFDE
 18263                           postdec2	equ	0xFDD
 18264                           plusw2	equ	0xFDB
 18265                           fsr2h	equ	0xFDA
 18266                           fsr2l	equ	0xFD9
 18267                           status	equ	0xFD8
 18268                           
 18269 ;; *************** function _EUSART2_Write *****************
 18270 ;; Defined at:
 18271 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  txData          1    wreg     unsigned char 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;  txData          1   23[BANK1 ] unsigned char 
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      void 
 18278 ;; Registers used:
 18279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18286 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18288 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18289 ;;Total ram usage:        1 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:   13
 18292 ;; This function calls:
 18293 ;;		Nothing
 18294 ;; This function is called by:
 18295 ;;		_putch
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text35
 18300  018448                     __ptext35:
 18301                           	opt stack 0
 18302  018448                     _EUSART2_Write:
 18303                           	opt stack 13
 18304                           
 18305                           ;incstack = 0
 18306                           ;EUSART2_Write@txData stored from wreg
 18307  018448  0101               	movlb	1	; () banked
 18308  01844A  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 18309                           
 18310                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 18311  01844C  D002               	goto	l388
 18312  01844E                     l389:
 18313                           
 18314                           ; BSR set to: 1
 18315  01844E  0004               	clrwdt		;# 
 18316                           
 18317                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 18318  018450  827E               	bsf	3966,1,c	;volatile
 18319  018452                     l388:
 18320  018452  0101               	movlb	1	; () banked
 18321  018454  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 18322  018456  B4D8               	btfsc	status,2,c
 18323  018458  D7FA               	goto	l389
 18324                           
 18325                           ; BSR set to: 1
 18326                           ;eusart2.c: 167: }
 18327                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 18328  01845A  927E               	bcf	3966,1,c	;volatile
 18329                           
 18330                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 18331  01845C  010E               	movlb	14	; () banked
 18332  01845E  BD2C               	btfsc	44,6,b	;volatile
 18333  018460  D003               	goto	l391
 18334                           
 18335                           ; BSR set to: 14
 18336                           ;eusart2.c: 172: {
 18337                           ;eusart2.c: 173: TX2REG = txData;
 18338  018462  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 18339                           
 18340                           ;eusart2.c: 174: }
 18341  018466  D013               	goto	l392
 18342  018468                     l391:
 18343                           
 18344                           ; BSR set to: 14
 18345                           ;eusart2.c: 175: else
 18346                           ;eusart2.c: 176: {
 18347                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 18348  018468  9D2C               	bcf	44,6,b	;volatile
 18349                           
 18350                           ; BSR set to: 14
 18351                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 18352  01846A  0101               	movlb	1	; () banked
 18353  01846C  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 18354  01846E  0D01               	mullw	1
 18355  018470  0E00               	movlw	low _eusart2TxBuffer
 18356  018472  24F3               	addwf	prodl,w,c
 18357  018474  6ED9               	movwf	fsr2l,c
 18358  018476  0E03               	movlw	high _eusart2TxBuffer
 18359  018478  20F4               	addwfc	prodh,w,c
 18360  01847A  6EDA               	movwf	fsr2h,c
 18361  01847C  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 18362                           
 18363                           ; BSR set to: 1
 18364  018480  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 18365                           
 18366                           ; BSR set to: 1
 18367                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 18368  018482  0E7F               	movlw	127
 18369  018484  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 18370  018486  D002               	goto	l393
 18371                           
 18372                           ; BSR set to: 1
 18373                           ;eusart2.c: 180: {
 18374                           ;eusart2.c: 181: eusart2TxHead = 0;
 18375  018488  0E00               	movlw	0
 18376  01848A  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 18377  01848C                     l393:
 18378                           
 18379                           ; BSR set to: 1
 18380                           ;eusart2.c: 182: }
 18381                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 18382                           
 18383                           ; BSR set to: 1
 18384  01848C  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18385  01848E                     l392:
 18386                           
 18387                           ;eusart2.c: 184: }
 18388                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 18389                           
 18390                           ; BSR set to: 1
 18391  01848E  010E               	movlb	14	; () banked
 18392  018490  8D2C               	bsf	44,6,b	;volatile
 18393                           
 18394                           ; BSR set to: 14
 18395  018492  0012               	return		;funcret
 18396  018494                     __end_of_EUSART2_Write:
 18397                           	opt stack 0
 18398                           tblptru	equ	0xFF8
 18399                           tblptrh	equ	0xFF7
 18400                           tblptrl	equ	0xFF6
 18401                           tablat	equ	0xFF5
 18402                           prodh	equ	0xFF4
 18403                           prodl	equ	0xFF3
 18404                           intcon	equ	0xFF2
 18405                           indf0	equ	0xFEF
 18406                           postinc0	equ	0xFEE
 18407                           fsr0h	equ	0xFEA
 18408                           fsr0l	equ	0xFE9
 18409                           wreg	equ	0xFE8
 18410                           indf1	equ	0xFE7
 18411                           postdec1	equ	0xFE5
 18412                           plusw1	equ	0xFE3
 18413                           fsr1h	equ	0xFE2
 18414                           fsr1l	equ	0xFE1
 18415                           indf2	equ	0xFDF
 18416                           postinc2	equ	0xFDE
 18417                           postdec2	equ	0xFDD
 18418                           plusw2	equ	0xFDB
 18419                           fsr2h	equ	0xFDA
 18420                           fsr2l	equ	0xFD9
 18421                           status	equ	0xFD8
 18422                           
 18423 ;; *************** function _isdigit *****************
 18424 ;; Defined at:
 18425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 18426 ;; Parameters:    Size  Location     Type
 18427 ;;  c               1    wreg     unsigned char 
 18428 ;; Auto vars:     Size  Location     Type
 18429 ;;  c               1   25[BANK1 ] unsigned char 
 18430 ;; Return value:  Size  Location     Type
 18431 ;;		None               void
 18432 ;; Registers used:
 18433 ;;		wreg, status,2, status,0
 18434 ;; Tracked objects:
 18435 ;;		On entry : 0/0
 18436 ;;		On exit  : 0/0
 18437 ;;		Unchanged: 0/0
 18438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18440 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18441 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18442 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18443 ;;Total ram usage:        3 bytes
 18444 ;; Hardware stack levels used:    1
 18445 ;; Hardware stack levels required when called:   13
 18446 ;; This function calls:
 18447 ;;		Nothing
 18448 ;; This function is called by:
 18449 ;;		_printf
 18450 ;;		_atoi
 18451 ;; This function uses a non-reentrant model
 18452 ;;
 18453                           
 18454                           	psect	text36
 18455  018AAE                     __ptext36:
 18456                           	opt stack 0
 18457  018AAE                     _isdigit:
 18458                           	opt stack 14
 18459                           
 18460                           ; BSR set to: 14
 18461                           ;incstack = 0
 18462                           ;isdigit@c stored from wreg
 18463  018AAE  0101               	movlb	1	; () banked
 18464  018AB0  6F19               	movwf	isdigit@c& (0+255),b
 18465  018AB2  0E00               	movlw	0
 18466  018AB4  0101               	movlb	1	; () banked
 18467  018AB6  6F18               	movwf	_isdigit$3228& (0+255),b
 18468                           
 18469                           ; BSR set to: 1
 18470  018AB8  0E3A               	movlw	58
 18471  018ABA  6119               	cpfslt	isdigit@c& (0+255),b
 18472  018ABC  D005               	goto	l1972
 18473                           
 18474                           ; BSR set to: 1
 18475  018ABE  0E2F               	movlw	47
 18476  018AC0  6519               	cpfsgt	isdigit@c& (0+255),b
 18477  018AC2  D002               	goto	l1972
 18478                           
 18479                           ; BSR set to: 1
 18480  018AC4  0E01               	movlw	1
 18481  018AC6  6F18               	movwf	_isdigit$3228& (0+255),b
 18482  018AC8                     l1972:
 18483                           
 18484                           ; BSR set to: 1
 18485                           
 18486                           ; BSR set to: 1
 18487  018AC8  C118  F117         	movff	_isdigit$3228,??_isdigit
 18488  018ACC  3117               	rrcf	??_isdigit& (0+255),w,b
 18489  018ACE  0012               	return	
 18490  018AD0                     __end_of_isdigit:
 18491                           	opt stack 0
 18492                           tblptru	equ	0xFF8
 18493                           tblptrh	equ	0xFF7
 18494                           tblptrl	equ	0xFF6
 18495                           tablat	equ	0xFF5
 18496                           prodh	equ	0xFF4
 18497                           prodl	equ	0xFF3
 18498                           intcon	equ	0xFF2
 18499                           indf0	equ	0xFEF
 18500                           postinc0	equ	0xFEE
 18501                           fsr0h	equ	0xFEA
 18502                           fsr0l	equ	0xFE9
 18503                           wreg	equ	0xFE8
 18504                           indf1	equ	0xFE7
 18505                           postdec1	equ	0xFE5
 18506                           plusw1	equ	0xFE3
 18507                           fsr1h	equ	0xFE2
 18508                           fsr1l	equ	0xFE1
 18509                           indf2	equ	0xFDF
 18510                           postinc2	equ	0xFDE
 18511                           postdec2	equ	0xFDD
 18512                           plusw2	equ	0xFDB
 18513                           fsr2h	equ	0xFDA
 18514                           fsr2l	equ	0xFD9
 18515                           status	equ	0xFD8
 18516                           
 18517 ;; *************** function _fround *****************
 18518 ;; Defined at:
 18519 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;  prec            1    wreg     unsigned char 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  prec            1  123[BANK1 ] unsigned char 
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  4  111[BANK1 ] unsigned char 
 18526 ;; Registers used:
 18527 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18533 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18534 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18536 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18537 ;;Total ram usage:       13 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:   14
 18540 ;; This function calls:
 18541 ;;		___awdiv
 18542 ;;		___awmod
 18543 ;;		___flmul
 18544 ;; This function is called by:
 18545 ;;		_printf
 18546 ;; This function uses a non-reentrant model
 18547 ;;
 18548                           
 18549                           	psect	text37
 18550  015720                     __ptext37:
 18551                           	opt stack 0
 18552  015720                     _fround:
 18553                           	opt stack 13
 18554                           
 18555                           ; BSR set to: 1
 18556                           ;incstack = 0
 18557                           ;fround@prec stored from wreg
 18558  015720  0101               	movlb	1	; () banked
 18559  015722  6F7B               	movwf	fround@prec& (0+255),b
 18560                           
 18561                           ;doprnt.c: 413: if(prec>=110)
 18562  015724  0E6D               	movlw	109
 18563  015726  0101               	movlb	1	; () banked
 18564  015728  657B               	cpfsgt	fround@prec& (0+255),b
 18565  01572A  D0BA               	goto	l1388
 18566                           
 18567                           ; BSR set to: 1
 18568                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18569  01572C  0E00               	movlw	0
 18570  01572E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18571  015730  0E0A               	movlw	10
 18572  015732  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18573  015734  0E00               	movlw	0
 18574  015736  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18575  015738  0E64               	movlw	100
 18576  01573A  6F19               	movwf	___awmod@divisor& (0+255),b
 18577  01573C  C17B  F117         	movff	fround@prec,___awmod@dividend
 18578  015740  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18579  015742  EC31  F0BF         	call	___awmod	;wreg free
 18580  015746  C117  F11D         	movff	?___awmod,___awdiv@dividend
 18581  01574A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 18582  01574E  ECAE  F0BD         	call	___awdiv	;wreg free
 18583  015752  0101               	movlb	1	; () banked
 18584  015754  90D8               	bcf	status,0,c
 18585  015756  371D               	rlcf	?___awdiv& (0+255),f,b
 18586  015758  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18587  01575A  90D8               	bcf	status,0,c
 18588  01575C  371D               	rlcf	?___awdiv& (0+255),f,b
 18589  01575E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18590  015760  0E24               	movlw	36
 18591  015762  271D               	addwf	?___awdiv& (0+255),f,b
 18592  015764  0E00               	movlw	0
 18593  015766  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18594  015768  0EC5               	movlw	low __npowers_
 18595  01576A  251D               	addwf	?___awdiv& (0+255),w,b
 18596  01576C  6EF6               	movwf	tblptrl,c
 18597  01576E  0EE8               	movlw	high __npowers_
 18598  015770  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18599  015772  6EF7               	movwf	tblptrh,c
 18600  015774                     	if	1	;There are 3 active tblptr bytes
 18601  015774  6AF8               	clrf	tblptru,c
 18602  015776  0E00               	movlw	low (__mediumconst shr (0+16))
 18603  015778  22F8               	addwfc	tblptru,f,c
 18604  01577A                     	endif
 18605  01577A  0009               	tblrd		*+
 18606  01577C  CFF5 F15A          	movff	tablat,___flmul@a
 18607  015780  0009               	tblrd		*+
 18608  015782  CFF5 F15B          	movff	tablat,___flmul@a+1
 18609  015786  0009               	tblrd		*+
 18610  015788  CFF5 F15C          	movff	tablat,___flmul@a+2
 18611  01578C  000A               	tblrd		*-
 18612  01578E  CFF5 F15D          	movff	tablat,___flmul@a+3
 18613  015792  0E00               	movlw	0
 18614  015794  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18615  015796  0E64               	movlw	100
 18616  015798  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18617  01579A  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 18618  01579E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18619  0157A0  ECAE  F0BD         	call	___awdiv	;wreg free
 18620  0157A4  0101               	movlb	1	; () banked
 18621  0157A6  90D8               	bcf	status,0,c
 18622  0157A8  371D               	rlcf	?___awdiv& (0+255),f,b
 18623  0157AA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18624  0157AC  90D8               	bcf	status,0,c
 18625  0157AE  371D               	rlcf	?___awdiv& (0+255),f,b
 18626  0157B0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18627  0157B2  0E48               	movlw	72
 18628  0157B4  271D               	addwf	?___awdiv& (0+255),f,b
 18629  0157B6  0E00               	movlw	0
 18630  0157B8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18631  0157BA  0EC5               	movlw	low __npowers_
 18632  0157BC  251D               	addwf	?___awdiv& (0+255),w,b
 18633  0157BE  6EF6               	movwf	tblptrl,c
 18634  0157C0  0EE8               	movlw	high __npowers_
 18635  0157C2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18636  0157C4  6EF7               	movwf	tblptrh,c
 18637  0157C6                     	if	1	;There are 3 active tblptr bytes
 18638  0157C6  6AF8               	clrf	tblptru,c
 18639  0157C8  0E00               	movlw	low (__mediumconst shr (0+16))
 18640  0157CA  22F8               	addwfc	tblptru,f,c
 18641  0157CC                     	endif
 18642  0157CC  0009               	tblrd		*+
 18643  0157CE  CFF5 F156          	movff	tablat,___flmul@b
 18644  0157D2  0009               	tblrd		*+
 18645  0157D4  CFF5 F157          	movff	tablat,___flmul@b+1
 18646  0157D8  0009               	tblrd		*+
 18647  0157DA  CFF5 F158          	movff	tablat,___flmul@b+2
 18648  0157DE  000A               	tblrd		*-
 18649  0157E0  CFF5 F159          	movff	tablat,___flmul@b+3
 18650  0157E4  EC9E  F0A0         	call	___flmul	;wreg free
 18651  0157E8  C156  F177         	movff	?___flmul,_fround$3940
 18652  0157EC  C157  F178         	movff	?___flmul+1,_fround$3940+1
 18653  0157F0  C158  F179         	movff	?___flmul+2,_fround$3940+2
 18654  0157F4  C159  F17A         	movff	?___flmul+3,_fround$3940+3
 18655                           
 18656                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18657  0157F8  0E00               	movlw	0
 18658  0157FA  0101               	movlb	1	; () banked
 18659  0157FC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18660  0157FE  0E0A               	movlw	10
 18661  015800  6F19               	movwf	___awmod@divisor& (0+255),b
 18662  015802  C17B  F117         	movff	fround@prec,___awmod@dividend
 18663  015806  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18664  015808  EC31  F0BF         	call	___awmod	;wreg free
 18665  01580C  0101               	movlb	1	; () banked
 18666  01580E  90D8               	bcf	status,0,c
 18667  015810  3717               	rlcf	?___awmod& (0+255),f,b
 18668  015812  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18669  015814  90D8               	bcf	status,0,c
 18670  015816  3717               	rlcf	?___awmod& (0+255),f,b
 18671  015818  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18672  01581A  0EC5               	movlw	low __npowers_
 18673  01581C  2517               	addwf	?___awmod& (0+255),w,b
 18674  01581E  6EF6               	movwf	tblptrl,c
 18675  015820  0EE8               	movlw	high __npowers_
 18676  015822  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18677  015824  6EF7               	movwf	tblptrh,c
 18678  015826                     	if	1	;There are 3 active tblptr bytes
 18679  015826  6AF8               	clrf	tblptru,c
 18680  015828  0E00               	movlw	low (__mediumconst shr (0+16))
 18681  01582A  22F8               	addwfc	tblptru,f,c
 18682  01582C                     	endif
 18683  01582C  0009               	tblrd		*+
 18684  01582E  CFF5 F15A          	movff	tablat,___flmul@a
 18685  015832  0009               	tblrd		*+
 18686  015834  CFF5 F15B          	movff	tablat,___flmul@a+1
 18687  015838  0009               	tblrd		*+
 18688  01583A  CFF5 F15C          	movff	tablat,___flmul@a+2
 18689  01583E  000A               	tblrd		*-
 18690  015840  CFF5 F15D          	movff	tablat,___flmul@a+3
 18691  015844  C177  F156         	movff	_fround$3940,___flmul@b
 18692  015848  C178  F157         	movff	_fround$3940+1,___flmul@b+1
 18693  01584C  C179  F158         	movff	_fround$3940+2,___flmul@b+2
 18694  015850  C17A  F159         	movff	_fround$3940+3,___flmul@b+3
 18695  015854  EC9E  F0A0         	call	___flmul	;wreg free
 18696  015858  C156  F173         	movff	?___flmul,_fround$3941
 18697  01585C  C157  F174         	movff	?___flmul+1,_fround$3941+1
 18698  015860  C158  F175         	movff	?___flmul+2,_fround$3941+2
 18699  015864  C159  F176         	movff	?___flmul+3,_fround$3941+3
 18700                           
 18701                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18702  015868  C173  F156         	movff	_fround$3941,___flmul@b
 18703  01586C  C174  F157         	movff	_fround$3941+1,___flmul@b+1
 18704  015870  C175  F158         	movff	_fround$3941+2,___flmul@b+2
 18705  015874  C176  F159         	movff	_fround$3941+3,___flmul@b+3
 18706  015878  0E00               	movlw	0
 18707  01587A  0101               	movlb	1	; () banked
 18708  01587C  6F5A               	movwf	___flmul@a& (0+255),b
 18709  01587E  0E00               	movlw	0
 18710  015880  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18711  015882  0E00               	movlw	0
 18712  015884  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18713  015886  0E3F               	movlw	63
 18714  015888  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18715  01588A  EC9E  F0A0         	call	___flmul	;wreg free
 18716  01588E  C156  F16F         	movff	?___flmul,?_fround
 18717  015892  C157  F170         	movff	?___flmul+1,?_fround+1
 18718  015896  C158  F171         	movff	?___flmul+2,?_fround+2
 18719  01589A  C159  F172         	movff	?___flmul+3,?_fround+3
 18720  01589E  0012               	return	
 18721  0158A0                     l1388:
 18722                           
 18723                           ;doprnt.c: 415: else if(prec > 10)
 18724  0158A0  0E0A               	movlw	10
 18725  0158A2  0101               	movlb	1	; () banked
 18726  0158A4  657B               	cpfsgt	fround@prec& (0+255),b
 18727  0158A6  D074               	goto	l1391
 18728                           
 18729                           ; BSR set to: 1
 18730                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18731  0158A8  0E00               	movlw	0
 18732  0158AA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18733  0158AC  0E0A               	movlw	10
 18734  0158AE  6F19               	movwf	___awmod@divisor& (0+255),b
 18735  0158B0  C17B  F117         	movff	fround@prec,___awmod@dividend
 18736  0158B4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18737  0158B6  EC31  F0BF         	call	___awmod	;wreg free
 18738  0158BA  0101               	movlb	1	; () banked
 18739  0158BC  90D8               	bcf	status,0,c
 18740  0158BE  3717               	rlcf	?___awmod& (0+255),f,b
 18741  0158C0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18742  0158C2  90D8               	bcf	status,0,c
 18743  0158C4  3717               	rlcf	?___awmod& (0+255),f,b
 18744  0158C6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18745  0158C8  0EC5               	movlw	low __npowers_
 18746  0158CA  2517               	addwf	?___awmod& (0+255),w,b
 18747  0158CC  6EF6               	movwf	tblptrl,c
 18748  0158CE  0EE8               	movlw	high __npowers_
 18749  0158D0  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18750  0158D2  6EF7               	movwf	tblptrh,c
 18751  0158D4                     	if	1	;There are 3 active tblptr bytes
 18752  0158D4  6AF8               	clrf	tblptru,c
 18753  0158D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18754  0158D8  22F8               	addwfc	tblptru,f,c
 18755  0158DA                     	endif
 18756  0158DA  0009               	tblrd		*+
 18757  0158DC  CFF5 F15A          	movff	tablat,___flmul@a
 18758  0158E0  0009               	tblrd		*+
 18759  0158E2  CFF5 F15B          	movff	tablat,___flmul@a+1
 18760  0158E6  0009               	tblrd		*+
 18761  0158E8  CFF5 F15C          	movff	tablat,___flmul@a+2
 18762  0158EC  000A               	tblrd		*-
 18763  0158EE  CFF5 F15D          	movff	tablat,___flmul@a+3
 18764  0158F2  0E00               	movlw	0
 18765  0158F4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18766  0158F6  0E0A               	movlw	10
 18767  0158F8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18768  0158FA  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 18769  0158FE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18770  015900  ECAE  F0BD         	call	___awdiv	;wreg free
 18771  015904  0101               	movlb	1	; () banked
 18772  015906  90D8               	bcf	status,0,c
 18773  015908  371D               	rlcf	?___awdiv& (0+255),f,b
 18774  01590A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18775  01590C  90D8               	bcf	status,0,c
 18776  01590E  371D               	rlcf	?___awdiv& (0+255),f,b
 18777  015910  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18778  015912  0E24               	movlw	36
 18779  015914  271D               	addwf	?___awdiv& (0+255),f,b
 18780  015916  0E00               	movlw	0
 18781  015918  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18782  01591A  0EC5               	movlw	low __npowers_
 18783  01591C  251D               	addwf	?___awdiv& (0+255),w,b
 18784  01591E  6EF6               	movwf	tblptrl,c
 18785  015920  0EE8               	movlw	high __npowers_
 18786  015922  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18787  015924  6EF7               	movwf	tblptrh,c
 18788  015926                     	if	1	;There are 3 active tblptr bytes
 18789  015926  6AF8               	clrf	tblptru,c
 18790  015928  0E00               	movlw	low (__mediumconst shr (0+16))
 18791  01592A  22F8               	addwfc	tblptru,f,c
 18792  01592C                     	endif
 18793  01592C  0009               	tblrd		*+
 18794  01592E  CFF5 F156          	movff	tablat,___flmul@b
 18795  015932  0009               	tblrd		*+
 18796  015934  CFF5 F157          	movff	tablat,___flmul@b+1
 18797  015938  0009               	tblrd		*+
 18798  01593A  CFF5 F158          	movff	tablat,___flmul@b+2
 18799  01593E  000A               	tblrd		*-
 18800  015940  CFF5 F159          	movff	tablat,___flmul@b+3
 18801  015944  EC9E  F0A0         	call	___flmul	;wreg free
 18802  015948  C156  F177         	movff	?___flmul,_fround$3940
 18803  01594C  C157  F178         	movff	?___flmul+1,_fround$3940+1
 18804  015950  C158  F179         	movff	?___flmul+2,_fround$3940+2
 18805  015954  C159  F17A         	movff	?___flmul+3,_fround$3940+3
 18806                           
 18807                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18808  015958  C177  F156         	movff	_fround$3940,___flmul@b
 18809  01595C  C178  F157         	movff	_fround$3940+1,___flmul@b+1
 18810  015960  C179  F158         	movff	_fround$3940+2,___flmul@b+2
 18811  015964  C17A  F159         	movff	_fround$3940+3,___flmul@b+3
 18812  015968  0E00               	movlw	0
 18813  01596A  0101               	movlb	1	; () banked
 18814  01596C  6F5A               	movwf	___flmul@a& (0+255),b
 18815  01596E  0E00               	movlw	0
 18816  015970  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18817  015972  0E00               	movlw	0
 18818  015974  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18819  015976  0E3F               	movlw	63
 18820  015978  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18821  01597A  EC9E  F0A0         	call	___flmul	;wreg free
 18822  01597E  C156  F16F         	movff	?___flmul,?_fround
 18823  015982  C157  F170         	movff	?___flmul+1,?_fround+1
 18824  015986  C158  F171         	movff	?___flmul+2,?_fround+2
 18825  01598A  C159  F172         	movff	?___flmul+3,?_fround+3
 18826  01598E  0012               	return	
 18827  015990                     l1391:
 18828                           
 18829                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 18830  015990  0101               	movlb	1	; () banked
 18831  015992  517B               	movf	fround@prec& (0+255),w,b
 18832  015994  0D04               	mullw	4
 18833  015996  0EC5               	movlw	low __npowers_
 18834  015998  24F3               	addwf	prodl,w,c
 18835  01599A  6EF6               	movwf	tblptrl,c
 18836  01599C  0EE8               	movlw	high __npowers_
 18837  01599E  20F4               	addwfc	prodh,w,c
 18838  0159A0  6EF7               	movwf	tblptrh,c
 18839  0159A2                     	if	1	;There are 3 active tblptr bytes
 18840  0159A2  6AF8               	clrf	tblptru,c
 18841  0159A4  0E00               	movlw	low (__mediumconst shr (0+16))
 18842  0159A6  22F8               	addwfc	tblptru,f,c
 18843  0159A8                     	endif
 18844  0159A8  0009               	tblrd		*+
 18845  0159AA  CFF5 F156          	movff	tablat,___flmul@b
 18846  0159AE  0009               	tblrd		*+
 18847  0159B0  CFF5 F157          	movff	tablat,___flmul@b+1
 18848  0159B4  0009               	tblrd		*+
 18849  0159B6  CFF5 F158          	movff	tablat,___flmul@b+2
 18850  0159BA  000A               	tblrd		*-
 18851  0159BC  CFF5 F159          	movff	tablat,___flmul@b+3
 18852  0159C0  0E00               	movlw	0
 18853  0159C2  6F5A               	movwf	___flmul@a& (0+255),b
 18854  0159C4  0E00               	movlw	0
 18855  0159C6  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18856  0159C8  0E00               	movlw	0
 18857  0159CA  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18858  0159CC  0E3F               	movlw	63
 18859  0159CE  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18860  0159D0  EC9E  F0A0         	call	___flmul	;wreg free
 18861  0159D4  C156  F16F         	movff	?___flmul,?_fround
 18862  0159D8  C157  F170         	movff	?___flmul+1,?_fround+1
 18863  0159DC  C158  F171         	movff	?___flmul+2,?_fround+2
 18864  0159E0  C159  F172         	movff	?___flmul+3,?_fround+3
 18865  0159E4  0012               	return	
 18866  0159E6                     __end_of_fround:
 18867                           	opt stack 0
 18868                           tblptru	equ	0xFF8
 18869                           tblptrh	equ	0xFF7
 18870                           tblptrl	equ	0xFF6
 18871                           tablat	equ	0xFF5
 18872                           prodh	equ	0xFF4
 18873                           prodl	equ	0xFF3
 18874                           intcon	equ	0xFF2
 18875                           indf0	equ	0xFEF
 18876                           postinc0	equ	0xFEE
 18877                           fsr0h	equ	0xFEA
 18878                           fsr0l	equ	0xFE9
 18879                           wreg	equ	0xFE8
 18880                           indf1	equ	0xFE7
 18881                           postdec1	equ	0xFE5
 18882                           plusw1	equ	0xFE3
 18883                           fsr1h	equ	0xFE2
 18884                           fsr1l	equ	0xFE1
 18885                           indf2	equ	0xFDF
 18886                           postinc2	equ	0xFDE
 18887                           postdec2	equ	0xFDD
 18888                           plusw2	equ	0xFDB
 18889                           fsr2h	equ	0xFDA
 18890                           fsr2l	equ	0xFD9
 18891                           status	equ	0xFD8
 18892                           
 18893 ;; *************** function ___flmul *****************
 18894 ;; Defined at:
 18895 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 18896 ;; Parameters:    Size  Location     Type
 18897 ;;  b               4   86[BANK1 ] unsigned char 
 18898 ;;  a               4   90[BANK1 ] unsigned char 
 18899 ;; Auto vars:     Size  Location     Type
 18900 ;;  prod            4  105[BANK1 ] struct .
 18901 ;;  grs             4  101[BANK1 ] unsigned long 
 18902 ;;  temp            2  109[BANK1 ] struct .
 18903 ;;  bexp            1  100[BANK1 ] unsigned char 
 18904 ;;  aexp            1   99[BANK1 ] unsigned char 
 18905 ;;  sign            1   98[BANK1 ] unsigned char 
 18906 ;; Return value:  Size  Location     Type
 18907 ;;                  4   86[BANK1 ] unsigned char 
 18908 ;; Registers used:
 18909 ;;		wreg, status,2, status,0, prodl, prodh
 18910 ;; Tracked objects:
 18911 ;;		On entry : 0/0
 18912 ;;		On exit  : 0/0
 18913 ;;		Unchanged: 0/0
 18914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18915 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18916 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18917 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18918 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18919 ;;Total ram usage:       25 bytes
 18920 ;; Hardware stack levels used:    1
 18921 ;; Hardware stack levels required when called:   13
 18922 ;; This function calls:
 18923 ;;		Nothing
 18924 ;; This function is called by:
 18925 ;;		_ringBufferLUT
 18926 ;;		_fround
 18927 ;;		_scale
 18928 ;;		_printf
 18929 ;; This function uses a non-reentrant model
 18930 ;;
 18931                           
 18932                           	psect	text38
 18933  01413C                     __ptext38:
 18934                           	opt stack 0
 18935  01413C                     ___flmul:
 18936                           	opt stack 13
 18937                           
 18938                           ;incstack = 0
 18939  01413C  0101               	movlb	1	; () banked
 18940  01413E  5159               	movf	(___flmul@b+3)& (0+255),w,b
 18941  014140  0B80               	andlw	128
 18942  014142  6F62               	movwf	___flmul@sign& (0+255),b
 18943  014144  5159               	movf	(___flmul@b+3)& (0+255),w,b
 18944  014146  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 18945  014148  6F64               	movwf	___flmul@bexp& (0+255),b
 18946                           
 18947                           ; BSR set to: 1
 18948  01414A  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 18949                           
 18950                           ; BSR set to: 1
 18951  01414C  8164               	bsf	___flmul@bexp& (0+255),0,b
 18952                           
 18953                           ; BSR set to: 1
 18954                           
 18955                           ; BSR set to: 1
 18956  01414E  5164               	movf	___flmul@bexp& (0+255),w,b
 18957  014150  B4D8               	btfsc	status,2,c
 18958  014152  D00D               	goto	l2186
 18959                           
 18960                           ; BSR set to: 1
 18961  014154  2964               	incf	___flmul@bexp& (0+255),w,b
 18962  014156  A4D8               	btfss	status,2,c
 18963  014158  D008               	goto	l2187
 18964                           
 18965                           ; BSR set to: 1
 18966  01415A  0E00               	movlw	0
 18967  01415C  6F56               	movwf	___flmul@b& (0+255),b
 18968  01415E  0E00               	movlw	0
 18969  014160  6F57               	movwf	(___flmul@b+1)& (0+255),b
 18970  014162  0E00               	movlw	0
 18971  014164  6F58               	movwf	(___flmul@b+2)& (0+255),b
 18972  014166  0E00               	movlw	0
 18973  014168  6F59               	movwf	(___flmul@b+3)& (0+255),b
 18974  01416A                     l2187:
 18975                           
 18976                           ; BSR set to: 1
 18977                           
 18978                           ; BSR set to: 1
 18979  01416A  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 18980  01416C  D008               	goto	l2188
 18981  01416E                     l2186:
 18982                           
 18983                           ; BSR set to: 1
 18984                           
 18985                           ; BSR set to: 1
 18986  01416E  0E00               	movlw	0
 18987  014170  6F56               	movwf	___flmul@b& (0+255),b
 18988  014172  0E00               	movlw	0
 18989  014174  6F57               	movwf	(___flmul@b+1)& (0+255),b
 18990  014176  0E00               	movlw	0
 18991  014178  6F58               	movwf	(___flmul@b+2)& (0+255),b
 18992  01417A  0E00               	movlw	0
 18993  01417C  6F59               	movwf	(___flmul@b+3)& (0+255),b
 18994  01417E                     l2188:
 18995                           
 18996                           ; BSR set to: 1
 18997                           
 18998                           ; BSR set to: 1
 18999  01417E  515D               	movf	(___flmul@a+3)& (0+255),w,b
 19000  014180  0B80               	andlw	128
 19001  014182  1B62               	xorwf	___flmul@sign& (0+255),f,b
 19002                           
 19003                           ; BSR set to: 1
 19004  014184  515D               	movf	(___flmul@a+3)& (0+255),w,b
 19005  014186  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 19006  014188  6F63               	movwf	___flmul@aexp& (0+255),b
 19007                           
 19008                           ; BSR set to: 1
 19009  01418A  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 19010                           
 19011                           ; BSR set to: 1
 19012  01418C  8163               	bsf	___flmul@aexp& (0+255),0,b
 19013                           
 19014                           ; BSR set to: 1
 19015                           
 19016                           ; BSR set to: 1
 19017  01418E  5163               	movf	___flmul@aexp& (0+255),w,b
 19018  014190  B4D8               	btfsc	status,2,c
 19019  014192  D00D               	goto	l2190
 19020                           
 19021                           ; BSR set to: 1
 19022  014194  2963               	incf	___flmul@aexp& (0+255),w,b
 19023  014196  A4D8               	btfss	status,2,c
 19024  014198  D008               	goto	l2191
 19025                           
 19026                           ; BSR set to: 1
 19027  01419A  0E00               	movlw	0
 19028  01419C  6F5A               	movwf	___flmul@a& (0+255),b
 19029  01419E  0E00               	movlw	0
 19030  0141A0  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 19031  0141A2  0E00               	movlw	0
 19032  0141A4  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 19033  0141A6  0E00               	movlw	0
 19034  0141A8  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 19035  0141AA                     l2191:
 19036                           
 19037                           ; BSR set to: 1
 19038                           
 19039                           ; BSR set to: 1
 19040  0141AA  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 19041  0141AC  D008               	goto	l2192
 19042  0141AE                     l2190:
 19043                           
 19044                           ; BSR set to: 1
 19045                           
 19046                           ; BSR set to: 1
 19047  0141AE  0E00               	movlw	0
 19048  0141B0  6F5A               	movwf	___flmul@a& (0+255),b
 19049  0141B2  0E00               	movlw	0
 19050  0141B4  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 19051  0141B6  0E00               	movlw	0
 19052  0141B8  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 19053  0141BA  0E00               	movlw	0
 19054  0141BC  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 19055  0141BE                     l2192:
 19056                           
 19057                           ; BSR set to: 1
 19058  0141BE  5163               	movf	___flmul@aexp& (0+255),w,b
 19059  0141C0  B4D8               	btfsc	status,2,c
 19060  0141C2  D003               	goto	u23470
 19061                           
 19062                           ; BSR set to: 1
 19063  0141C4  5164               	movf	___flmul@bexp& (0+255),w,b
 19064  0141C6  A4D8               	btfss	status,2,c
 19065  0141C8  D009               	goto	l2193
 19066  0141CA                     u23470:
 19067                           
 19068                           ; BSR set to: 1
 19069                           
 19070                           ; BSR set to: 1
 19071  0141CA  0E00               	movlw	0
 19072  0141CC  6F56               	movwf	?___flmul& (0+255),b
 19073  0141CE  0E00               	movlw	0
 19074  0141D0  6F57               	movwf	(?___flmul+1)& (0+255),b
 19075  0141D2  0E00               	movlw	0
 19076  0141D4  6F58               	movwf	(?___flmul+2)& (0+255),b
 19077  0141D6  0E00               	movlw	0
 19078  0141D8  6F59               	movwf	(?___flmul+3)& (0+255),b
 19079                           
 19080                           ; BSR set to: 1
 19081  0141DA  0012               	return	
 19082  0141DC                     l2193:
 19083                           
 19084                           ; BSR set to: 1
 19085                           
 19086                           ; BSR set to: 1
 19087  0141DC  515C               	movf	(___flmul@a+2)& (0+255),w,b
 19088  0141DE  0356               	mulwf	___flmul@b& (0+255),b
 19089  0141E0  CFF3 F16D          	movff	prodl,___flmul@temp
 19090  0141E4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19091                           
 19092                           ; BSR set to: 1
 19093  0141E8  516D               	movf	___flmul@temp& (0+255),w,b
 19094  0141EA  6F65               	movwf	___flmul@grs& (0+255),b
 19095  0141EC  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 19096  0141EE  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 19097  0141F0  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 19098                           
 19099                           ; BSR set to: 1
 19100  0141F2  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19101  0141F4  6F69               	movwf	___flmul@prod& (0+255),b
 19102  0141F6  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 19103  0141F8  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 19104  0141FA  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 19105  0141FC  515B               	movf	(___flmul@a+1)& (0+255),w,b
 19106  0141FE  0357               	mulwf	(___flmul@b+1)& (0+255),b
 19107  014200  CFF3 F16D          	movff	prodl,___flmul@temp
 19108  014204  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19109                           
 19110                           ; BSR set to: 1
 19111  014208  516D               	movf	___flmul@temp& (0+255),w,b
 19112  01420A  2765               	addwf	___flmul@grs& (0+255),f,b
 19113  01420C  0E00               	movlw	0
 19114  01420E  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19115  014210  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19116  014212  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19117                           
 19118                           ; BSR set to: 1
 19119  014214  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19120  014216  2769               	addwf	___flmul@prod& (0+255),f,b
 19121  014218  0E00               	movlw	0
 19122  01421A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19123  01421C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19124  01421E  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19125  014220  515A               	movf	___flmul@a& (0+255),w,b
 19126  014222  0358               	mulwf	(___flmul@b+2)& (0+255),b
 19127  014224  CFF3 F16D          	movff	prodl,___flmul@temp
 19128  014228  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19129                           
 19130                           ; BSR set to: 1
 19131  01422C  516D               	movf	___flmul@temp& (0+255),w,b
 19132  01422E  2765               	addwf	___flmul@grs& (0+255),f,b
 19133  014230  0E00               	movlw	0
 19134  014232  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19135  014234  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19136  014236  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19137                           
 19138                           ; BSR set to: 1
 19139  014238  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19140  01423A  2769               	addwf	___flmul@prod& (0+255),f,b
 19141  01423C  0E00               	movlw	0
 19142  01423E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19143  014240  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19144  014242  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19145                           
 19146                           ; BSR set to: 1
 19147  014244  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 19148  014248  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 19149  01424C  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 19150  014250  6B65               	clrf	___flmul@grs& (0+255),b
 19151                           
 19152                           ; BSR set to: 1
 19153  014252  515A               	movf	___flmul@a& (0+255),w,b
 19154  014254  0357               	mulwf	(___flmul@b+1)& (0+255),b
 19155  014256  CFF3 F16D          	movff	prodl,___flmul@temp
 19156  01425A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19157                           
 19158                           ; BSR set to: 1
 19159  01425E  516D               	movf	___flmul@temp& (0+255),w,b
 19160  014260  2765               	addwf	___flmul@grs& (0+255),f,b
 19161  014262  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19162  014264  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19163  014266  0E00               	movlw	0
 19164  014268  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19165  01426A  0E00               	movlw	0
 19166  01426C  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19167                           
 19168                           ; BSR set to: 1
 19169  01426E  515B               	movf	(___flmul@a+1)& (0+255),w,b
 19170  014270  0356               	mulwf	___flmul@b& (0+255),b
 19171  014272  CFF3 F16D          	movff	prodl,___flmul@temp
 19172  014276  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19173                           
 19174                           ; BSR set to: 1
 19175  01427A  516D               	movf	___flmul@temp& (0+255),w,b
 19176  01427C  2765               	addwf	___flmul@grs& (0+255),f,b
 19177  01427E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19178  014280  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19179  014282  0E00               	movlw	0
 19180  014284  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19181  014286  0E00               	movlw	0
 19182  014288  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19183                           
 19184                           ; BSR set to: 1
 19185  01428A  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 19186  01428E  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 19187  014292  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 19188  014296  6B65               	clrf	___flmul@grs& (0+255),b
 19189  014298  515A               	movf	___flmul@a& (0+255),w,b
 19190  01429A  0356               	mulwf	___flmul@b& (0+255),b
 19191  01429C  CFF3 F16D          	movff	prodl,___flmul@temp
 19192  0142A0  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19193                           
 19194                           ; BSR set to: 1
 19195  0142A4  516D               	movf	___flmul@temp& (0+255),w,b
 19196  0142A6  2765               	addwf	___flmul@grs& (0+255),f,b
 19197  0142A8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19198  0142AA  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19199  0142AC  0E00               	movlw	0
 19200  0142AE  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19201  0142B0  0E00               	movlw	0
 19202  0142B2  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19203                           
 19204                           ; BSR set to: 1
 19205  0142B4  515C               	movf	(___flmul@a+2)& (0+255),w,b
 19206  0142B6  0357               	mulwf	(___flmul@b+1)& (0+255),b
 19207  0142B8  CFF3 F16D          	movff	prodl,___flmul@temp
 19208  0142BC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19209  0142C0  516D               	movf	___flmul@temp& (0+255),w,b
 19210  0142C2  2769               	addwf	___flmul@prod& (0+255),f,b
 19211  0142C4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19212  0142C6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19213  0142C8  0E00               	movlw	0
 19214  0142CA  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19215  0142CC  0E00               	movlw	0
 19216  0142CE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19217                           
 19218                           ; BSR set to: 1
 19219  0142D0  515B               	movf	(___flmul@a+1)& (0+255),w,b
 19220  0142D2  0358               	mulwf	(___flmul@b+2)& (0+255),b
 19221  0142D4  CFF3 F16D          	movff	prodl,___flmul@temp
 19222  0142D8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19223                           
 19224                           ; BSR set to: 1
 19225  0142DC  516D               	movf	___flmul@temp& (0+255),w,b
 19226  0142DE  2769               	addwf	___flmul@prod& (0+255),f,b
 19227  0142E0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19228  0142E2  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19229  0142E4  0E00               	movlw	0
 19230  0142E6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19231  0142E8  0E00               	movlw	0
 19232  0142EA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19233  0142EC  515C               	movf	(___flmul@a+2)& (0+255),w,b
 19234  0142EE  0358               	mulwf	(___flmul@b+2)& (0+255),b
 19235  0142F0  CFF3 F16D          	movff	prodl,___flmul@temp
 19236  0142F4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19237                           
 19238                           ; BSR set to: 1
 19239  0142F8  516D               	movf	___flmul@temp& (0+255),w,b
 19240  0142FA  6F5E               	movwf	??___flmul& (0+255),b
 19241  0142FC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19242  0142FE  6F5F               	movwf	(??___flmul+1)& (0+255),b
 19243  014300  6B60               	clrf	(??___flmul+2)& (0+255),b
 19244  014302  6B61               	clrf	(??___flmul+3)& (0+255),b
 19245  014304  C160  F161         	movff	??___flmul+2,??___flmul+3
 19246  014308  C15F  F160         	movff	??___flmul+1,??___flmul+2
 19247  01430C  C15E  F15F         	movff	??___flmul,??___flmul+1
 19248  014310  6B5E               	clrf	??___flmul& (0+255),b
 19249  014312  515E               	movf	??___flmul& (0+255),w,b
 19250  014314  2769               	addwf	___flmul@prod& (0+255),f,b
 19251  014316  515F               	movf	(??___flmul+1)& (0+255),w,b
 19252  014318  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19253  01431A  5160               	movf	(??___flmul+2)& (0+255),w,b
 19254  01431C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19255  01431E  5161               	movf	(??___flmul+3)& (0+255),w,b
 19256  014320  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19257                           
 19258                           ; BSR set to: 1
 19259  014322  C165  F15E         	movff	___flmul@grs,??___flmul
 19260  014326  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 19261  01432A  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 19262  01432E  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 19263  014332  0E19               	movlw	25
 19264  014334  D005               	goto	u23480
 19265  014336                     u23485:
 19266  014336  90D8               	bcf	status,0,c
 19267  014338  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 19268  01433A  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 19269  01433C  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 19270  01433E  335E               	rrcf	??___flmul& (0+255),f,b
 19271  014340                     u23480:
 19272  014340  2EE8               	decfsz	wreg,f,c
 19273  014342  D7F9               	goto	u23485
 19274  014344  515E               	movf	??___flmul& (0+255),w,b
 19275  014346  2769               	addwf	___flmul@prod& (0+255),f,b
 19276  014348  515F               	movf	(??___flmul+1)& (0+255),w,b
 19277  01434A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19278  01434C  5160               	movf	(??___flmul+2)& (0+255),w,b
 19279  01434E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19280  014350  5161               	movf	(??___flmul+3)& (0+255),w,b
 19281  014352  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19282                           
 19283                           ; BSR set to: 1
 19284  014354  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 19285  014358  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 19286  01435C  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 19287  014360  6B65               	clrf	___flmul@grs& (0+255),b
 19288                           
 19289                           ; BSR set to: 1
 19290  014362  5163               	movf	___flmul@aexp& (0+255),w,b
 19291  014364  C164  F15E         	movff	___flmul@bexp,??___flmul
 19292  014368  6B5F               	clrf	(??___flmul+1)& (0+255),b
 19293  01436A  275E               	addwf	??___flmul& (0+255),f,b
 19294  01436C  0E00               	movlw	0
 19295  01436E  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 19296  014370  0E82               	movlw	130
 19297  014372  255E               	addwf	??___flmul& (0+255),w,b
 19298  014374  6F6D               	movwf	___flmul@temp& (0+255),b
 19299  014376  0EFF               	movlw	255
 19300  014378  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 19301  01437A  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 19302  01437C  D00F               	goto	l2197
 19303  01437E                     
 19304                           ; BSR set to: 1
 19305                           
 19306                           ; BSR set to: 1
 19307  01437E  90D8               	bcf	status,0,c
 19308  014380  3769               	rlcf	___flmul@prod& (0+255),f,b
 19309  014382  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 19310  014384  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 19311  014386  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 19312                           
 19313                           ; BSR set to: 1
 19314  014388  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 19315                           
 19316                           ; BSR set to: 1
 19317  01438A  8169               	bsf	___flmul@prod& (0+255),0,b
 19318                           
 19319                           ; BSR set to: 1
 19320  01438C  90D8               	bcf	status,0,c
 19321  01438E  3765               	rlcf	___flmul@grs& (0+255),f,b
 19322  014390  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 19323  014392  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 19324  014394  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 19325  014396  076D               	decf	___flmul@temp& (0+255),f,b
 19326  014398  A0D8               	btfss	status,0,c
 19327  01439A  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 19328  01439C                     l2197:
 19329                           
 19330                           ; BSR set to: 1
 19331                           
 19332                           ; BSR set to: 1
 19333  01439C  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 19334  01439E  D7EF               	goto	l2198
 19335                           
 19336                           ; BSR set to: 1
 19337                           
 19338                           ; BSR set to: 1
 19339  0143A0  0E00               	movlw	0
 19340  0143A2  6F63               	movwf	___flmul@aexp& (0+255),b
 19341                           
 19342                           ; BSR set to: 1
 19343  0143A4  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 19344  0143A6  D016               	goto	l2204
 19345                           
 19346                           ; BSR set to: 1
 19347  0143A8  0EFF               	movlw	255
 19348  0143AA  1565               	andwf	___flmul@grs& (0+255),w,b
 19349  0143AC  6F5E               	movwf	??___flmul& (0+255),b
 19350  0143AE  0EFF               	movlw	255
 19351  0143B0  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 19352  0143B2  6F5F               	movwf	(??___flmul+1)& (0+255),b
 19353  0143B4  0EFF               	movlw	255
 19354  0143B6  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 19355  0143B8  6F60               	movwf	(??___flmul+2)& (0+255),b
 19356  0143BA  0E7F               	movlw	127
 19357  0143BC  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 19358  0143BE  6F61               	movwf	(??___flmul+3)& (0+255),b
 19359  0143C0  515E               	movf	??___flmul& (0+255),w,b
 19360  0143C2  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 19361  0143C4  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 19362  0143C6  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 19363  0143C8  A4D8               	btfss	status,2,c
 19364  0143CA  D002               	goto	u23530
 19365                           
 19366                           ; BSR set to: 1
 19367                           
 19368                           ; BSR set to: 1
 19369  0143CC  A169               	btfss	___flmul@prod& (0+255),0,b
 19370  0143CE  D002               	goto	l2204
 19371  0143D0                     u23530:
 19372                           
 19373                           ; BSR set to: 1
 19374  0143D0  0E01               	movlw	1
 19375  0143D2  6F63               	movwf	___flmul@aexp& (0+255),b
 19376  0143D4                     l2204:
 19377                           
 19378                           ; BSR set to: 1
 19379                           
 19380                           ; BSR set to: 1
 19381                           
 19382                           ; BSR set to: 1
 19383  0143D4  5163               	movf	___flmul@aexp& (0+255),w,b
 19384  0143D6  B4D8               	btfsc	status,2,c
 19385  0143D8  D01F               	goto	l2206
 19386                           
 19387                           ; BSR set to: 1
 19388  0143DA  0E01               	movlw	1
 19389  0143DC  2769               	addwf	___flmul@prod& (0+255),f,b
 19390  0143DE  0E00               	movlw	0
 19391  0143E0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19392  0143E2  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19393  0143E4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19394                           
 19395                           ; BSR set to: 1
 19396  0143E6  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 19397  0143E8  D017               	goto	l2206
 19398                           
 19399                           ; BSR set to: 1
 19400  0143EA  C169  F15E         	movff	___flmul@prod,??___flmul
 19401  0143EE  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 19402  0143F2  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 19403  0143F6  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 19404  0143FA  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 19405  0143FC  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 19406  0143FE  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 19407  014400  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 19408  014402  335E               	rrcf	??___flmul& (0+255),f,b
 19409  014404  C15E  F169         	movff	??___flmul,___flmul@prod
 19410  014408  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 19411  01440C  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 19412  014410  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 19413                           
 19414                           ; BSR set to: 1
 19415  014414  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 19416  014416  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 19417  014418                     l2206:
 19418                           
 19419                           ; BSR set to: 1
 19420                           
 19421                           ; BSR set to: 1
 19422                           
 19423                           ; BSR set to: 1
 19424  014418  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 19425  01441A  D00D               	goto	l2207
 19426  01441C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19427  01441E  E103               	bnz	u23560
 19428  014420  296D               	incf	___flmul@temp& (0+255),w,b
 19429  014422  A0D8               	btfss	status,0,c
 19430  014424  D008               	goto	l2207
 19431  014426                     u23560:
 19432                           
 19433                           ; BSR set to: 1
 19434  014426  0E00               	movlw	0
 19435  014428  6F69               	movwf	___flmul@prod& (0+255),b
 19436  01442A  0E00               	movlw	0
 19437  01442C  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 19438  01442E  0E80               	movlw	128
 19439  014430  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 19440  014432  0E7F               	movlw	127
 19441  014434  D020               	goto	L5
 19442  014436                     l2207:
 19443                           
 19444                           ; BSR set to: 1
 19445                           
 19446                           ; BSR set to: 1
 19447  014436  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 19448  014438  D005               	goto	u23570
 19449  01443A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19450  01443C  E10E               	bnz	l2209
 19451  01443E  056D               	decf	___flmul@temp& (0+255),w,b
 19452  014440  B0D8               	btfsc	status,0,c
 19453  014442  D00B               	goto	l2209
 19454  014444                     u23570:
 19455                           
 19456                           ; BSR set to: 1
 19457  014444  0E00               	movlw	0
 19458  014446  6F69               	movwf	___flmul@prod& (0+255),b
 19459  014448  0E00               	movlw	0
 19460  01444A  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 19461  01444C  0E00               	movlw	0
 19462  01444E  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 19463  014450  0E00               	movlw	0
 19464  014452  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 19465  014454  0E00               	movlw	0
 19466  014456  6F62               	movwf	___flmul@sign& (0+255),b
 19467  014458  D00F               	goto	l2210
 19468  01445A                     l2209:
 19469                           
 19470                           ; BSR set to: 1
 19471  01445A  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 19472                           
 19473                           ; BSR set to: 1
 19474  01445E  0EFF               	movlw	255
 19475  014460  1769               	andwf	___flmul@prod& (0+255),f,b
 19476  014462  0EFF               	movlw	255
 19477  014464  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 19478  014466  0E7F               	movlw	127
 19479  014468  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 19480  01446A  0E00               	movlw	0
 19481  01446C  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 19482                           
 19483                           ; BSR set to: 1
 19484  01446E  B164               	btfsc	___flmul@bexp& (0+255),0,b
 19485                           
 19486                           ; BSR set to: 1
 19487  014470  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 19488                           
 19489                           ; BSR set to: 1
 19490                           
 19491                           ; BSR set to: 1
 19492  014472  90D8               	bcf	status,0,c
 19493  014474  3164               	rrcf	___flmul@bexp& (0+255),w,b
 19494  014476                     L5:
 19495  014476  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 19496  014478                     l2210:
 19497                           
 19498                           ; BSR set to: 1
 19499                           
 19500                           ; BSR set to: 1
 19501                           
 19502                           ; BSR set to: 1
 19503  014478  5162               	movf	___flmul@sign& (0+255),w,b
 19504  01447A  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 19505                           
 19506                           ; BSR set to: 1
 19507  01447C  C169  F156         	movff	___flmul@prod,?___flmul
 19508  014480  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 19509  014484  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 19510  014488  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 19511  01448C  0012               	return	
 19512  01448E                     __end_of___flmul:
 19513                           	opt stack 0
 19514                           tblptru	equ	0xFF8
 19515                           tblptrh	equ	0xFF7
 19516                           tblptrl	equ	0xFF6
 19517                           tablat	equ	0xFF5
 19518                           prodh	equ	0xFF4
 19519                           prodl	equ	0xFF3
 19520                           intcon	equ	0xFF2
 19521                           indf0	equ	0xFEF
 19522                           postinc0	equ	0xFEE
 19523                           fsr0h	equ	0xFEA
 19524                           fsr0l	equ	0xFE9
 19525                           wreg	equ	0xFE8
 19526                           indf1	equ	0xFE7
 19527                           postdec1	equ	0xFE5
 19528                           plusw1	equ	0xFE3
 19529                           fsr1h	equ	0xFE2
 19530                           fsr1l	equ	0xFE1
 19531                           indf2	equ	0xFDF
 19532                           postinc2	equ	0xFDE
 19533                           postdec2	equ	0xFDD
 19534                           plusw2	equ	0xFDB
 19535                           fsr2h	equ	0xFDA
 19536                           fsr2l	equ	0xFD9
 19537                           status	equ	0xFD8
 19538                           
 19539 ;; *************** function ___awmod *****************
 19540 ;; Defined at:
 19541 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 19542 ;; Parameters:    Size  Location     Type
 19543 ;;  dividend        2   23[BANK1 ] int 
 19544 ;;  divisor         2   25[BANK1 ] int 
 19545 ;; Auto vars:     Size  Location     Type
 19546 ;;  sign            1   28[BANK1 ] unsigned char 
 19547 ;;  counter         1   27[BANK1 ] unsigned char 
 19548 ;; Return value:  Size  Location     Type
 19549 ;;                  2   23[BANK1 ] int 
 19550 ;; Registers used:
 19551 ;;		wreg, status,2, status,0
 19552 ;; Tracked objects:
 19553 ;;		On entry : 0/0
 19554 ;;		On exit  : 0/0
 19555 ;;		Unchanged: 0/0
 19556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19557 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19558 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19560 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19561 ;;Total ram usage:        6 bytes
 19562 ;; Hardware stack levels used:    1
 19563 ;; Hardware stack levels required when called:   13
 19564 ;; This function calls:
 19565 ;;		Nothing
 19566 ;; This function is called by:
 19567 ;;		_fround
 19568 ;;		_scale
 19569 ;; This function uses a non-reentrant model
 19570 ;;
 19571                           
 19572                           	psect	text39
 19573  017E62                     __ptext39:
 19574                           	opt stack 0
 19575  017E62                     ___awmod:
 19576                           	opt stack 13
 19577                           
 19578                           ; BSR set to: 1
 19579                           ;incstack = 0
 19580  017E62  0E00               	movlw	0
 19581  017E64  0101               	movlb	1	; () banked
 19582  017E66  6F1C               	movwf	___awmod@sign& (0+255),b
 19583                           
 19584                           ; BSR set to: 1
 19585  017E68  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19586  017E6A  D006               	goto	l1777
 19587                           
 19588                           ; BSR set to: 1
 19589  017E6C  6D17               	negf	___awmod@dividend& (0+255),b
 19590  017E6E  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 19591  017E70  B0D8               	btfsc	status,0,c
 19592  017E72  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 19593                           
 19594                           ; BSR set to: 1
 19595  017E74  0E01               	movlw	1
 19596  017E76  6F1C               	movwf	___awmod@sign& (0+255),b
 19597  017E78                     l1777:
 19598                           
 19599                           ; BSR set to: 1
 19600                           
 19601                           ; BSR set to: 1
 19602  017E78  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19603  017E7A  D004               	goto	l1778
 19604                           
 19605                           ; BSR set to: 1
 19606  017E7C  6D19               	negf	___awmod@divisor& (0+255),b
 19607  017E7E  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 19608  017E80  B0D8               	btfsc	status,0,c
 19609  017E82  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 19610  017E84                     l1778:
 19611                           
 19612                           ; BSR set to: 1
 19613                           
 19614                           ; BSR set to: 1
 19615  017E84  5119               	movf	___awmod@divisor& (0+255),w,b
 19616  017E86  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19617  017E88  B4D8               	btfsc	status,2,c
 19618  017E8A  D018               	goto	l1785
 19619                           
 19620                           ; BSR set to: 1
 19621  017E8C  0E01               	movlw	1
 19622  017E8E  6F1B               	movwf	___awmod@counter& (0+255),b
 19623  017E90  D004               	goto	l1780
 19624  017E92                     
 19625                           ; BSR set to: 1
 19626                           
 19627                           ; BSR set to: 1
 19628  017E92  90D8               	bcf	status,0,c
 19629  017E94  3719               	rlcf	___awmod@divisor& (0+255),f,b
 19630  017E96  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19631  017E98  2B1B               	incf	___awmod@counter& (0+255),f,b
 19632  017E9A                     l1780:
 19633                           
 19634                           ; BSR set to: 1
 19635                           
 19636                           ; BSR set to: 1
 19637  017E9A  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19638  017E9C  D7FA               	goto	l1781
 19639  017E9E                     u23680:
 19640                           
 19641                           ; BSR set to: 1
 19642                           
 19643                           ; BSR set to: 1
 19644                           
 19645                           ; BSR set to: 1
 19646  017E9E  5119               	movf	___awmod@divisor& (0+255),w,b
 19647  017EA0  5D17               	subwf	___awmod@dividend& (0+255),w,b
 19648  017EA2  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 19649  017EA4  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19650  017EA6  A0D8               	btfss	status,0,c
 19651  017EA8  D004               	goto	l1784
 19652                           
 19653                           ; BSR set to: 1
 19654  017EAA  5119               	movf	___awmod@divisor& (0+255),w,b
 19655  017EAC  5F17               	subwf	___awmod@dividend& (0+255),f,b
 19656  017EAE  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 19657  017EB0  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19658  017EB2                     l1784:
 19659                           
 19660                           ; BSR set to: 1
 19661                           
 19662                           ; BSR set to: 1
 19663  017EB2  90D8               	bcf	status,0,c
 19664  017EB4  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19665  017EB6  3319               	rrcf	___awmod@divisor& (0+255),f,b
 19666                           
 19667                           ; BSR set to: 1
 19668  017EB8  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 19669  017EBA  D7F1               	goto	u23680
 19670  017EBC                     l1785:
 19671                           
 19672                           ; BSR set to: 1
 19673                           
 19674                           ; BSR set to: 1
 19675                           
 19676                           ; BSR set to: 1
 19677  017EBC  511C               	movf	___awmod@sign& (0+255),w,b
 19678  017EBE  B4D8               	btfsc	status,2,c
 19679  017EC0  D004               	goto	l1786
 19680                           
 19681                           ; BSR set to: 1
 19682  017EC2  6D17               	negf	___awmod@dividend& (0+255),b
 19683  017EC4  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 19684  017EC6  B0D8               	btfsc	status,0,c
 19685  017EC8  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 19686  017ECA                     l1786:
 19687                           
 19688                           ; BSR set to: 1
 19689                           
 19690                           ; BSR set to: 1
 19691  017ECA  C117  F117         	movff	___awmod@dividend,?___awmod
 19692  017ECE  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 19693  017ED2  0012               	return	
 19694  017ED4                     __end_of___awmod:
 19695                           	opt stack 0
 19696                           tblptru	equ	0xFF8
 19697                           tblptrh	equ	0xFF7
 19698                           tblptrl	equ	0xFF6
 19699                           tablat	equ	0xFF5
 19700                           prodh	equ	0xFF4
 19701                           prodl	equ	0xFF3
 19702                           intcon	equ	0xFF2
 19703                           indf0	equ	0xFEF
 19704                           postinc0	equ	0xFEE
 19705                           fsr0h	equ	0xFEA
 19706                           fsr0l	equ	0xFE9
 19707                           wreg	equ	0xFE8
 19708                           indf1	equ	0xFE7
 19709                           postdec1	equ	0xFE5
 19710                           plusw1	equ	0xFE3
 19711                           fsr1h	equ	0xFE2
 19712                           fsr1l	equ	0xFE1
 19713                           indf2	equ	0xFDF
 19714                           postinc2	equ	0xFDE
 19715                           postdec2	equ	0xFDD
 19716                           plusw2	equ	0xFDB
 19717                           fsr2h	equ	0xFDA
 19718                           fsr2l	equ	0xFD9
 19719                           status	equ	0xFD8
 19720                           
 19721 ;; *************** function ___awdiv *****************
 19722 ;; Defined at:
 19723 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;  dividend        2   29[BANK1 ] int 
 19726 ;;  divisor         2   31[BANK1 ] int 
 19727 ;; Auto vars:     Size  Location     Type
 19728 ;;  quotient        2   35[BANK1 ] int 
 19729 ;;  sign            1   34[BANK1 ] unsigned char 
 19730 ;;  counter         1   33[BANK1 ] unsigned char 
 19731 ;; Return value:  Size  Location     Type
 19732 ;;                  2   29[BANK1 ] int 
 19733 ;; Registers used:
 19734 ;;		wreg, status,2, status,0
 19735 ;; Tracked objects:
 19736 ;;		On entry : 0/0
 19737 ;;		On exit  : 0/0
 19738 ;;		Unchanged: 0/0
 19739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19740 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19741 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19743 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19744 ;;Total ram usage:        8 bytes
 19745 ;; Hardware stack levels used:    1
 19746 ;; Hardware stack levels required when called:   13
 19747 ;; This function calls:
 19748 ;;		Nothing
 19749 ;; This function is called by:
 19750 ;;		_fround
 19751 ;;		_scale
 19752 ;;		_printf
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text40
 19757  017B5C                     __ptext40:
 19758                           	opt stack 0
 19759  017B5C                     ___awdiv:
 19760                           	opt stack 13
 19761                           
 19762                           ; BSR set to: 1
 19763                           ;incstack = 0
 19764  017B5C  0E00               	movlw	0
 19765  017B5E  0101               	movlb	1	; () banked
 19766  017B60  6F22               	movwf	___awdiv@sign& (0+255),b
 19767                           
 19768                           ; BSR set to: 1
 19769  017B62  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19770  017B64  D006               	goto	l1764
 19771                           
 19772                           ; BSR set to: 1
 19773  017B66  6D1F               	negf	___awdiv@divisor& (0+255),b
 19774  017B68  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19775  017B6A  B0D8               	btfsc	status,0,c
 19776  017B6C  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19777                           
 19778                           ; BSR set to: 1
 19779  017B6E  0E01               	movlw	1
 19780  017B70  6F22               	movwf	___awdiv@sign& (0+255),b
 19781  017B72                     l1764:
 19782                           
 19783                           ; BSR set to: 1
 19784                           
 19785                           ; BSR set to: 1
 19786  017B72  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19787  017B74  D006               	goto	l1765
 19788                           
 19789                           ; BSR set to: 1
 19790  017B76  6D1D               	negf	___awdiv@dividend& (0+255),b
 19791  017B78  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19792  017B7A  B0D8               	btfsc	status,0,c
 19793  017B7C  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19794                           
 19795                           ; BSR set to: 1
 19796  017B7E  0E01               	movlw	1
 19797  017B80  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 19798  017B82                     l1765:
 19799                           
 19800                           ; BSR set to: 1
 19801                           
 19802                           ; BSR set to: 1
 19803  017B82  0E00               	movlw	0
 19804  017B84  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 19805  017B86  0E00               	movlw	0
 19806  017B88  6F23               	movwf	___awdiv@quotient& (0+255),b
 19807                           
 19808                           ; BSR set to: 1
 19809  017B8A  511F               	movf	___awdiv@divisor& (0+255),w,b
 19810  017B8C  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19811  017B8E  B4D8               	btfsc	status,2,c
 19812  017B90  D01C               	goto	l1772
 19813                           
 19814                           ; BSR set to: 1
 19815  017B92  0E01               	movlw	1
 19816  017B94  6F21               	movwf	___awdiv@counter& (0+255),b
 19817  017B96  D004               	goto	l1767
 19818  017B98                     
 19819                           ; BSR set to: 1
 19820                           
 19821                           ; BSR set to: 1
 19822  017B98  90D8               	bcf	status,0,c
 19823  017B9A  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 19824  017B9C  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19825  017B9E  2B21               	incf	___awdiv@counter& (0+255),f,b
 19826  017BA0                     l1767:
 19827                           
 19828                           ; BSR set to: 1
 19829                           
 19830                           ; BSR set to: 1
 19831  017BA0  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19832  017BA2  D7FA               	goto	l1768
 19833  017BA4                     u23620:
 19834                           
 19835                           ; BSR set to: 1
 19836                           
 19837                           ; BSR set to: 1
 19838                           
 19839                           ; BSR set to: 1
 19840  017BA4  90D8               	bcf	status,0,c
 19841  017BA6  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 19842  017BA8  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19843                           
 19844                           ; BSR set to: 1
 19845  017BAA  511F               	movf	___awdiv@divisor& (0+255),w,b
 19846  017BAC  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 19847  017BAE  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19848  017BB0  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19849  017BB2  A0D8               	btfss	status,0,c
 19850  017BB4  D005               	goto	l1771
 19851                           
 19852                           ; BSR set to: 1
 19853  017BB6  511F               	movf	___awdiv@divisor& (0+255),w,b
 19854  017BB8  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 19855  017BBA  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19856  017BBC  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19857                           
 19858                           ; BSR set to: 1
 19859  017BBE  8123               	bsf	___awdiv@quotient& (0+255),0,b
 19860  017BC0                     l1771:
 19861                           
 19862                           ; BSR set to: 1
 19863                           
 19864                           ; BSR set to: 1
 19865  017BC0  90D8               	bcf	status,0,c
 19866  017BC2  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19867  017BC4  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 19868                           
 19869                           ; BSR set to: 1
 19870  017BC6  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 19871  017BC8  D7ED               	goto	u23620
 19872  017BCA                     l1772:
 19873                           
 19874                           ; BSR set to: 1
 19875                           
 19876                           ; BSR set to: 1
 19877                           
 19878                           ; BSR set to: 1
 19879  017BCA  5122               	movf	___awdiv@sign& (0+255),w,b
 19880  017BCC  B4D8               	btfsc	status,2,c
 19881  017BCE  D004               	goto	l1773
 19882                           
 19883                           ; BSR set to: 1
 19884  017BD0  6D23               	negf	___awdiv@quotient& (0+255),b
 19885  017BD2  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19886  017BD4  B0D8               	btfsc	status,0,c
 19887  017BD6  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19888  017BD8                     l1773:
 19889                           
 19890                           ; BSR set to: 1
 19891                           
 19892                           ; BSR set to: 1
 19893  017BD8  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 19894  017BDC  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 19895  017BE0  0012               	return	
 19896  017BE2                     __end_of___awdiv:
 19897                           	opt stack 0
 19898                           tblptru	equ	0xFF8
 19899                           tblptrh	equ	0xFF7
 19900                           tblptrl	equ	0xFF6
 19901                           tablat	equ	0xFF5
 19902                           prodh	equ	0xFF4
 19903                           prodl	equ	0xFF3
 19904                           intcon	equ	0xFF2
 19905                           indf0	equ	0xFEF
 19906                           postinc0	equ	0xFEE
 19907                           fsr0h	equ	0xFEA
 19908                           fsr0l	equ	0xFE9
 19909                           wreg	equ	0xFE8
 19910                           indf1	equ	0xFE7
 19911                           postdec1	equ	0xFE5
 19912                           plusw1	equ	0xFE3
 19913                           fsr1h	equ	0xFE2
 19914                           fsr1l	equ	0xFE1
 19915                           indf2	equ	0xFDF
 19916                           postinc2	equ	0xFDE
 19917                           postdec2	equ	0xFDD
 19918                           plusw2	equ	0xFDB
 19919                           fsr2h	equ	0xFDA
 19920                           fsr2l	equ	0xFD9
 19921                           status	equ	0xFD8
 19922                           
 19923 ;; *************** function __tdiv_to_l_ *****************
 19924 ;; Defined at:
 19925 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 19926 ;; Parameters:    Size  Location     Type
 19927 ;;  f1              3   23[BANK1 ] float 
 19928 ;;  f2              3   26[BANK1 ] float 
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;  quot            4   32[BANK1 ] unsigned long 
 19931 ;;  exp1            1   37[BANK1 ] unsigned char 
 19932 ;;  cntr            1   36[BANK1 ] unsigned char 
 19933 ;; Return value:  Size  Location     Type
 19934 ;;                  4   23[BANK1 ] unsigned long 
 19935 ;; Registers used:
 19936 ;;		wreg, status,2, status,0
 19937 ;; Tracked objects:
 19938 ;;		On entry : 0/0
 19939 ;;		On exit  : 0/0
 19940 ;;		Unchanged: 0/0
 19941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19942 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19943 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19944 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19945 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19946 ;;Total ram usage:       15 bytes
 19947 ;; Hardware stack levels used:    1
 19948 ;; Hardware stack levels required when called:   13
 19949 ;; This function calls:
 19950 ;;		Nothing
 19951 ;; This function is called by:
 19952 ;;		_printf
 19953 ;; This function uses a non-reentrant model
 19954 ;;
 19955                           
 19956                           	psect	text41
 19957  016ACE                     __ptext41:
 19958                           	opt stack 0
 19959  016ACE                     __tdiv_to_l_:
 19960                           	opt stack 14
 19961                           
 19962                           ; BSR set to: 1
 19963                           ;incstack = 0
 19964  016ACE  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 19965  016AD2  0101               	movlb	1	; () banked
 19966  016AD4  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 19967  016AD6  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 19968  016AD8  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 19969  016ADA  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 19970  016ADC  E301               	bnc	u23801
 19971  016ADE  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 19972  016AE0                     u23801:
 19973  016AE0  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 19974  016AE2  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 19975  016AE4  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 19976  016AE6  A4D8               	btfss	status,2,c
 19977  016AE8  D009               	goto	l1912
 19978                           
 19979                           ; BSR set to: 1
 19980  016AEA  0E00               	movlw	0
 19981  016AEC  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 19982  016AEE  0E00               	movlw	0
 19983  016AF0  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19984  016AF2  0E00               	movlw	0
 19985  016AF4  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19986  016AF6  0E00               	movlw	0
 19987  016AF8  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19988                           
 19989                           ; BSR set to: 1
 19990  016AFA  0012               	return	
 19991  016AFC                     l1912:
 19992                           
 19993                           ; BSR set to: 1
 19994                           
 19995                           ; BSR set to: 1
 19996  016AFC  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 19997  016B00  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 19998  016B02  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 19999  016B04  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 20000  016B06  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 20001  016B08  E301               	bnc	u23821
 20002  016B0A  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 20003  016B0C                     u23821:
 20004  016B0C  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 20005  016B0E  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 20006  016B10  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 20007  016B12  A4D8               	btfss	status,2,c
 20008  016B14  D009               	goto	l1914
 20009                           
 20010                           ; BSR set to: 1
 20011  016B16  0E00               	movlw	0
 20012  016B18  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 20013  016B1A  0E00               	movlw	0
 20014  016B1C  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 20015  016B1E  0E00               	movlw	0
 20016  016B20  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 20017  016B22  0E00               	movlw	0
 20018  016B24  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 20019                           
 20020                           ; BSR set to: 1
 20021  016B26  0012               	return	
 20022  016B28                     l1914:
 20023                           
 20024                           ; BSR set to: 1
 20025                           
 20026                           ; BSR set to: 1
 20027  016B28  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 20028                           
 20029                           ; BSR set to: 1
 20030  016B2A  0EFF               	movlw	255
 20031  016B2C  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 20032  016B2E  0EFF               	movlw	255
 20033  016B30  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 20034  016B32  0E00               	movlw	0
 20035  016B34  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 20036  016B36  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 20037                           
 20038                           ; BSR set to: 1
 20039  016B38  0EFF               	movlw	255
 20040  016B3A  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 20041  016B3C  0EFF               	movlw	255
 20042  016B3E  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 20043  016B40  0E00               	movlw	0
 20044  016B42  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 20045                           
 20046                           ; BSR set to: 1
 20047  016B44  0E00               	movlw	0
 20048  016B46  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 20049  016B48  0E00               	movlw	0
 20050  016B4A  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 20051  016B4C  0E00               	movlw	0
 20052  016B4E  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 20053  016B50  0E00               	movlw	0
 20054  016B52  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 20055                           
 20056                           ; BSR set to: 1
 20057  016B54  0E7F               	movlw	127
 20058  016B56  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 20059                           
 20060                           ; BSR set to: 1
 20061  016B58  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 20062  016B5A  0F98               	addlw	152
 20063  016B5C  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 20064                           
 20065                           ; BSR set to: 1
 20066  016B5E  0E18               	movlw	24
 20067  016B60  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 20068  016B62                     l1915:
 20069                           
 20070                           ; BSR set to: 1
 20071  016B62  90D8               	bcf	status,0,c
 20072  016B64  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 20073  016B66  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 20074  016B68  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 20075  016B6A  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 20076                           
 20077                           ; BSR set to: 1
 20078  016B6C  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 20079  016B6E  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 20080  016B70  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 20081  016B72  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 20082  016B74  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 20083  016B76  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 20084  016B78  A0D8               	btfss	status,0,c
 20085  016B7A  D007               	goto	l1916
 20086                           
 20087                           ; BSR set to: 1
 20088  016B7C  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 20089  016B7E  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 20090  016B80  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 20091  016B82  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 20092  016B84  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 20093  016B86  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 20094                           
 20095                           ; BSR set to: 1
 20096  016B88  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 20097  016B8A                     l1916:
 20098                           
 20099                           ; BSR set to: 1
 20100  016B8A  90D8               	bcf	status,0,c
 20101  016B8C  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 20102  016B8E  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 20103  016B90  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 20104                           
 20105                           ; BSR set to: 1
 20106  016B92  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 20107  016B94  D7E6               	goto	l1915
 20108                           
 20109                           ; BSR set to: 1
 20110                           
 20111                           ; BSR set to: 1
 20112  016B96  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 20113  016B98  D016               	goto	l1918
 20114                           
 20115                           ; BSR set to: 1
 20116  016B9A  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 20117  016B9C  0A80               	xorlw	128
 20118  016B9E  0F97               	addlw	151
 20119  016BA0  B0D8               	btfsc	status,0,c
 20120  016BA2  D009               	goto	l1919
 20121                           
 20122                           ; BSR set to: 1
 20123  016BA4  0E00               	movlw	0
 20124  016BA6  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 20125  016BA8  0E00               	movlw	0
 20126  016BAA  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 20127  016BAC  0E00               	movlw	0
 20128  016BAE  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 20129  016BB0  0E00               	movlw	0
 20130  016BB2  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 20131                           
 20132                           ; BSR set to: 1
 20133  016BB4  0012               	return	
 20134  016BB6                     l1919:
 20135                           
 20136                           ; BSR set to: 1
 20137                           
 20138                           ; BSR set to: 1
 20139                           
 20140                           ; BSR set to: 1
 20141  016BB6  90D8               	bcf	status,0,c
 20142  016BB8  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 20143  016BBA  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 20144  016BBC  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 20145  016BBE  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 20146                           
 20147                           ; BSR set to: 1
 20148  016BC0  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 20149  016BC2  D7F9               	goto	l1919
 20150                           
 20151                           ; BSR set to: 1
 20152  016BC4  D015               	goto	u23880
 20153  016BC6                     l1918:
 20154                           
 20155                           ; BSR set to: 1
 20156                           
 20157                           ; BSR set to: 1
 20158  016BC6  0E17               	movlw	23
 20159  016BC8  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 20160  016BCA  D00F               	goto	l1924
 20161                           
 20162                           ; BSR set to: 1
 20163  016BCC  0E00               	movlw	0
 20164  016BCE  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 20165  016BD0  0E00               	movlw	0
 20166  016BD2  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 20167  016BD4  0E00               	movlw	0
 20168  016BD6  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 20169  016BD8  0E00               	movlw	0
 20170  016BDA  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 20171                           
 20172                           ; BSR set to: 1
 20173  016BDC  0012               	return	
 20174  016BDE                     
 20175                           ; BSR set to: 1
 20176                           
 20177                           ; BSR set to: 1
 20178  016BDE  90D8               	bcf	status,0,c
 20179  016BE0  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 20180  016BE2  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 20181  016BE4  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 20182  016BE6  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 20183  016BE8  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 20184  016BEA                     l1924:
 20185                           
 20186                           ; BSR set to: 1
 20187                           
 20188                           ; BSR set to: 1
 20189  016BEA  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 20190  016BEC  A4D8               	btfss	status,2,c
 20191  016BEE  D7F7               	goto	l1925
 20192  016BF0                     u23880:
 20193                           
 20194                           ; BSR set to: 1
 20195                           
 20196                           ; BSR set to: 1
 20197  016BF0  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 20198  016BF4  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 20199  016BF8  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 20200  016BFC  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 20201                           
 20202                           ; BSR set to: 1
 20203  016C00  0012               	return		;funcret
 20204  016C02                     __end_of__tdiv_to_l_:
 20205                           	opt stack 0
 20206                           tblptru	equ	0xFF8
 20207                           tblptrh	equ	0xFF7
 20208                           tblptrl	equ	0xFF6
 20209                           tablat	equ	0xFF5
 20210                           prodh	equ	0xFF4
 20211                           prodl	equ	0xFF3
 20212                           intcon	equ	0xFF2
 20213                           indf0	equ	0xFEF
 20214                           postinc0	equ	0xFEE
 20215                           fsr0h	equ	0xFEA
 20216                           fsr0l	equ	0xFE9
 20217                           wreg	equ	0xFE8
 20218                           indf1	equ	0xFE7
 20219                           postdec1	equ	0xFE5
 20220                           plusw1	equ	0xFE3
 20221                           fsr1h	equ	0xFE2
 20222                           fsr1l	equ	0xFE1
 20223                           indf2	equ	0xFDF
 20224                           postinc2	equ	0xFDE
 20225                           postdec2	equ	0xFDD
 20226                           plusw2	equ	0xFDB
 20227                           fsr2h	equ	0xFDA
 20228                           fsr2l	equ	0xFD9
 20229                           status	equ	0xFD8
 20230                           
 20231 ;; *************** function __div_to_l_ *****************
 20232 ;; Defined at:
 20233 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;  f1              4   23[BANK1 ] unsigned long 
 20236 ;;  f2              4   27[BANK1 ] unsigned long 
 20237 ;; Auto vars:     Size  Location     Type
 20238 ;;  quot            4   31[BANK1 ] unsigned long 
 20239 ;;  exp1            1   36[BANK1 ] unsigned char 
 20240 ;;  cntr            1   35[BANK1 ] unsigned char 
 20241 ;; Return value:  Size  Location     Type
 20242 ;;                  4   23[BANK1 ] unsigned long 
 20243 ;; Registers used:
 20244 ;;		wreg, status,2, status,0
 20245 ;; Tracked objects:
 20246 ;;		On entry : 0/0
 20247 ;;		On exit  : 0/0
 20248 ;;		Unchanged: 0/0
 20249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20250 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20251 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20253 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20254 ;;Total ram usage:       14 bytes
 20255 ;; Hardware stack levels used:    1
 20256 ;; Hardware stack levels required when called:   13
 20257 ;; This function calls:
 20258 ;;		Nothing
 20259 ;; This function is called by:
 20260 ;;		_printf
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           	psect	text42
 20265  016D34                     __ptext42:
 20266                           	opt stack 0
 20267  016D34                     __div_to_l_:
 20268                           	opt stack 14
 20269                           
 20270                           ; BSR set to: 1
 20271                           ;incstack = 0
 20272  016D34  0101               	movlb	1	; () banked
 20273  016D36  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 20274  016D38  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 20275  016D3A  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 20276  016D3C  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 20277  016D3E  A4D8               	btfss	status,2,c
 20278  016D40  D009               	goto	l1808
 20279                           
 20280                           ; BSR set to: 1
 20281  016D42  0E00               	movlw	0
 20282  016D44  6F17               	movwf	?__div_to_l_& (0+255),b
 20283  016D46  0E00               	movlw	0
 20284  016D48  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20285  016D4A  0E00               	movlw	0
 20286  016D4C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20287  016D4E  0E00               	movlw	0
 20288  016D50  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20289                           
 20290                           ; BSR set to: 1
 20291  016D52  0012               	return	
 20292  016D54                     l1808:
 20293                           
 20294                           ; BSR set to: 1
 20295                           
 20296                           ; BSR set to: 1
 20297  016D54  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 20298  016D56  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 20299  016D58  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 20300  016D5A  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 20301  016D5C  A4D8               	btfss	status,2,c
 20302  016D5E  D009               	goto	l1810
 20303                           
 20304                           ; BSR set to: 1
 20305  016D60  0E00               	movlw	0
 20306  016D62  6F17               	movwf	?__div_to_l_& (0+255),b
 20307  016D64  0E00               	movlw	0
 20308  016D66  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20309  016D68  0E00               	movlw	0
 20310  016D6A  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20311  016D6C  0E00               	movlw	0
 20312  016D6E  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20313                           
 20314                           ; BSR set to: 1
 20315  016D70  0012               	return	
 20316  016D72                     l1810:
 20317                           
 20318                           ; BSR set to: 1
 20319                           
 20320                           ; BSR set to: 1
 20321  016D72  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 20322                           
 20323                           ; BSR set to: 1
 20324  016D74  0EFF               	movlw	255
 20325  016D76  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 20326  016D78  0EFF               	movlw	255
 20327  016D7A  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 20328  016D7C  0EFF               	movlw	255
 20329  016D7E  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 20330  016D80  0E00               	movlw	0
 20331  016D82  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 20332                           
 20333                           ; BSR set to: 1
 20334  016D84  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 20335  016D86  0EFF               	movlw	255
 20336  016D88  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 20337  016D8A  0EFF               	movlw	255
 20338  016D8C  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 20339  016D8E  0EFF               	movlw	255
 20340  016D90  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 20341  016D92  0E00               	movlw	0
 20342  016D94  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 20343                           
 20344                           ; BSR set to: 1
 20345  016D96  0E00               	movlw	0
 20346  016D98  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 20347  016D9A  0E00               	movlw	0
 20348  016D9C  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 20349  016D9E  0E00               	movlw	0
 20350  016DA0  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 20351  016DA2  0E00               	movlw	0
 20352  016DA4  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 20353                           
 20354                           ; BSR set to: 1
 20355  016DA6  0E7F               	movlw	127
 20356  016DA8  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 20357                           
 20358                           ; BSR set to: 1
 20359  016DAA  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 20360  016DAC  0FA0               	addlw	160
 20361  016DAE  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 20362                           
 20363                           ; BSR set to: 1
 20364  016DB0  0E20               	movlw	32
 20365  016DB2  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 20366  016DB4                     
 20367                           ; BSR set to: 1
 20368                           
 20369                           ; BSR set to: 1
 20370  016DB4  90D8               	bcf	status,0,c
 20371  016DB6  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 20372  016DB8  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 20373  016DBA  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 20374  016DBC  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 20375                           
 20376                           ; BSR set to: 1
 20377  016DBE  511B               	movf	__div_to_l_@f2& (0+255),w,b
 20378  016DC0  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 20379  016DC2  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 20380  016DC4  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 20381  016DC6  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 20382  016DC8  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 20383  016DCA  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 20384  016DCC  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 20385  016DCE  A0D8               	btfss	status,0,c
 20386  016DD0  D009               	goto	l1812
 20387                           
 20388                           ; BSR set to: 1
 20389  016DD2  511B               	movf	__div_to_l_@f2& (0+255),w,b
 20390  016DD4  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 20391  016DD6  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 20392  016DD8  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 20393  016DDA  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 20394  016DDC  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 20395  016DDE  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 20396  016DE0  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 20397                           
 20398                           ; BSR set to: 1
 20399  016DE2  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 20400  016DE4                     l1812:
 20401                           
 20402                           ; BSR set to: 1
 20403                           
 20404                           ; BSR set to: 1
 20405  016DE4  90D8               	bcf	status,0,c
 20406  016DE6  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 20407  016DE8  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 20408  016DEA  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 20409  016DEC  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 20410                           
 20411                           ; BSR set to: 1
 20412  016DEE  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 20413  016DF0  D7E1               	goto	l1811
 20414                           
 20415                           ; BSR set to: 1
 20416                           
 20417                           ; BSR set to: 1
 20418  016DF2  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 20419  016DF4  D016               	goto	l1814
 20420                           
 20421                           ; BSR set to: 1
 20422  016DF6  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 20423  016DF8  0A80               	xorlw	128
 20424  016DFA  0F9F               	addlw	159
 20425  016DFC  B0D8               	btfsc	status,0,c
 20426  016DFE  D009               	goto	l1815
 20427                           
 20428                           ; BSR set to: 1
 20429  016E00  0E00               	movlw	0
 20430  016E02  6F17               	movwf	?__div_to_l_& (0+255),b
 20431  016E04  0E00               	movlw	0
 20432  016E06  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20433  016E08  0E00               	movlw	0
 20434  016E0A  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20435  016E0C  0E00               	movlw	0
 20436  016E0E  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20437                           
 20438                           ; BSR set to: 1
 20439  016E10  0012               	return	
 20440  016E12                     l1815:
 20441                           
 20442                           ; BSR set to: 1
 20443                           
 20444                           ; BSR set to: 1
 20445                           
 20446                           ; BSR set to: 1
 20447  016E12  90D8               	bcf	status,0,c
 20448  016E14  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 20449  016E16  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 20450  016E18  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 20451  016E1A  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 20452                           
 20453                           ; BSR set to: 1
 20454  016E1C  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 20455  016E1E  D7F9               	goto	l1815
 20456                           
 20457                           ; BSR set to: 1
 20458  016E20  D015               	goto	u23950
 20459  016E22                     l1814:
 20460                           
 20461                           ; BSR set to: 1
 20462                           
 20463                           ; BSR set to: 1
 20464  016E22  0E1F               	movlw	31
 20465  016E24  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 20466  016E26  D00F               	goto	l1820
 20467                           
 20468                           ; BSR set to: 1
 20469  016E28  0E00               	movlw	0
 20470  016E2A  6F17               	movwf	?__div_to_l_& (0+255),b
 20471  016E2C  0E00               	movlw	0
 20472  016E2E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20473  016E30  0E00               	movlw	0
 20474  016E32  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20475  016E34  0E00               	movlw	0
 20476  016E36  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20477                           
 20478                           ; BSR set to: 1
 20479  016E38  0012               	return	
 20480  016E3A                     
 20481                           ; BSR set to: 1
 20482                           
 20483                           ; BSR set to: 1
 20484  016E3A  90D8               	bcf	status,0,c
 20485  016E3C  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 20486  016E3E  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 20487  016E40  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 20488  016E42  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 20489  016E44  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 20490  016E46                     l1820:
 20491                           
 20492                           ; BSR set to: 1
 20493                           
 20494                           ; BSR set to: 1
 20495  016E46  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 20496  016E48  A4D8               	btfss	status,2,c
 20497  016E4A  D7F7               	goto	l1821
 20498  016E4C                     u23950:
 20499                           
 20500                           ; BSR set to: 1
 20501                           
 20502                           ; BSR set to: 1
 20503  016E4C  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 20504  016E50  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 20505  016E54  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 20506  016E58  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 20507                           
 20508                           ; BSR set to: 1
 20509  016E5C  0012               	return		;funcret
 20510  016E5E                     __end_of__div_to_l_:
 20511                           	opt stack 0
 20512                           tblptru	equ	0xFF8
 20513                           tblptrh	equ	0xFF7
 20514                           tblptrl	equ	0xFF6
 20515                           tablat	equ	0xFF5
 20516                           prodh	equ	0xFF4
 20517                           prodl	equ	0xFF3
 20518                           intcon	equ	0xFF2
 20519                           indf0	equ	0xFEF
 20520                           postinc0	equ	0xFEE
 20521                           fsr0h	equ	0xFEA
 20522                           fsr0l	equ	0xFE9
 20523                           wreg	equ	0xFE8
 20524                           indf1	equ	0xFE7
 20525                           postdec1	equ	0xFE5
 20526                           plusw1	equ	0xFE3
 20527                           fsr1h	equ	0xFE2
 20528                           fsr1l	equ	0xFE1
 20529                           indf2	equ	0xFDF
 20530                           postinc2	equ	0xFDE
 20531                           postdec2	equ	0xFDD
 20532                           plusw2	equ	0xFDB
 20533                           fsr2h	equ	0xFDA
 20534                           fsr2l	equ	0xFD9
 20535                           status	equ	0xFD8
 20536                           
 20537 ;; *************** function ___xxtofl *****************
 20538 ;; Defined at:
 20539 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 20540 ;; Parameters:    Size  Location     Type
 20541 ;;  sign            1    wreg     unsigned char 
 20542 ;;  val             4   23[BANK1 ] long 
 20543 ;; Auto vars:     Size  Location     Type
 20544 ;;  sign            1   31[BANK1 ] unsigned char 
 20545 ;;  arg             4   33[BANK1 ] unsigned long 
 20546 ;;  exp             1   32[BANK1 ] unsigned char 
 20547 ;; Return value:  Size  Location     Type
 20548 ;;                  4   23[BANK1 ] unsigned char 
 20549 ;; Registers used:
 20550 ;;		wreg, status,2, status,0
 20551 ;; Tracked objects:
 20552 ;;		On entry : 0/0
 20553 ;;		On exit  : 0/0
 20554 ;;		Unchanged: 0/0
 20555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20556 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20557 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20558 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20559 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20560 ;;Total ram usage:       14 bytes
 20561 ;; Hardware stack levels used:    1
 20562 ;; Hardware stack levels required when called:   13
 20563 ;; This function calls:
 20564 ;;		Nothing
 20565 ;; This function is called by:
 20566 ;;		_ringBufferLUT
 20567 ;;		_printf
 20568 ;; This function uses a non-reentrant model
 20569 ;;
 20570                           
 20571                           	psect	text43
 20572  01682A                     __ptext43:
 20573                           	opt stack 0
 20574  01682A                     ___xxtofl:
 20575                           	opt stack 14
 20576                           
 20577                           ; BSR set to: 1
 20578                           ;incstack = 0
 20579                           ;___xxtofl@sign stored from wreg
 20580  01682A  0101               	movlb	1	; () banked
 20581  01682C  6F1F               	movwf	___xxtofl@sign& (0+255),b
 20582  01682E  0101               	movlb	1	; () banked
 20583  016830  511F               	movf	___xxtofl@sign& (0+255),w,b
 20584  016832  A4D8               	btfss	status,2,c
 20585                           
 20586                           ; BSR set to: 1
 20587  016834  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 20588  016836  D01A               	goto	l2288
 20589                           
 20590                           ; BSR set to: 1
 20591  016838  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 20592  01683C  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 20593  016840  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 20594  016844  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 20595  016848  1F1B               	comf	??___xxtofl& (0+255),f,b
 20596  01684A  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 20597  01684C  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 20598  01684E  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 20599  016850  2B1B               	incf	??___xxtofl& (0+255),f,b
 20600  016852  0E00               	movlw	0
 20601  016854  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 20602  016856  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 20603  016858  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 20604  01685A  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 20605  01685E  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 20606  016862  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 20607  016866  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 20608  01686A  D008               	goto	l2289
 20609  01686C                     l2288:
 20610                           
 20611                           ; BSR set to: 1
 20612  01686C  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 20613  016870  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 20614  016874  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 20615  016878  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 20616  01687C                     l2289:
 20617                           
 20618                           ; BSR set to: 1
 20619                           
 20620                           ; BSR set to: 1
 20621  01687C  5117               	movf	___xxtofl@val& (0+255),w,b
 20622  01687E  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 20623  016880  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 20624  016882  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 20625  016884  A4D8               	btfss	status,2,c
 20626  016886  D009               	goto	l2290
 20627                           
 20628                           ; BSR set to: 1
 20629  016888  0E00               	movlw	0
 20630  01688A  6F17               	movwf	?___xxtofl& (0+255),b
 20631  01688C  0E00               	movlw	0
 20632  01688E  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 20633  016890  0E00               	movlw	0
 20634  016892  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 20635  016894  0E00               	movlw	0
 20636  016896  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 20637                           
 20638                           ; BSR set to: 1
 20639  016898  0012               	return	
 20640  01689A                     l2290:
 20641                           
 20642                           ; BSR set to: 1
 20643                           
 20644                           ; BSR set to: 1
 20645  01689A  0E96               	movlw	150
 20646  01689C  6F20               	movwf	___xxtofl@exp& (0+255),b
 20647  01689E  D006               	goto	l2292
 20648  0168A0                     
 20649                           ; BSR set to: 1
 20650                           
 20651                           ; BSR set to: 1
 20652  0168A0  2B20               	incf	___xxtofl@exp& (0+255),f,b
 20653  0168A2  90D8               	bcf	status,0,c
 20654  0168A4  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 20655  0168A6  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 20656  0168A8  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 20657  0168AA  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 20658  0168AC                     l2292:
 20659                           
 20660                           ; BSR set to: 1
 20661                           
 20662                           ; BSR set to: 1
 20663  0168AC  0E00               	movlw	0
 20664  0168AE  1521               	andwf	___xxtofl@arg& (0+255),w,b
 20665  0168B0  6F1B               	movwf	??___xxtofl& (0+255),b
 20666  0168B2  0E00               	movlw	0
 20667  0168B4  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 20668  0168B6  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 20669  0168B8  0E00               	movlw	0
 20670  0168BA  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 20671  0168BC  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 20672  0168BE  0EFE               	movlw	254
 20673  0168C0  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 20674  0168C2  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 20675  0168C4  511B               	movf	??___xxtofl& (0+255),w,b
 20676  0168C6  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 20677  0168C8  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 20678  0168CA  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 20679  0168CC  B4D8               	btfsc	status,2,c
 20680  0168CE  D00D               	goto	l2295
 20681  0168D0  D7E7               	goto	l2293
 20682  0168D2                     
 20683                           ; BSR set to: 1
 20684                           
 20685                           ; BSR set to: 1
 20686  0168D2  2B20               	incf	___xxtofl@exp& (0+255),f,b
 20687                           
 20688                           ; BSR set to: 1
 20689  0168D4  0E01               	movlw	1
 20690  0168D6  2721               	addwf	___xxtofl@arg& (0+255),f,b
 20691  0168D8  0E00               	movlw	0
 20692  0168DA  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 20693  0168DC  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 20694  0168DE  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 20695                           
 20696                           ; BSR set to: 1
 20697  0168E0  90D8               	bcf	status,0,c
 20698  0168E2  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 20699  0168E4  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 20700  0168E6  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 20701  0168E8  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 20702  0168EA                     l2295:
 20703                           
 20704                           ; BSR set to: 1
 20705  0168EA  0E00               	movlw	0
 20706  0168EC  1521               	andwf	___xxtofl@arg& (0+255),w,b
 20707  0168EE  6F1B               	movwf	??___xxtofl& (0+255),b
 20708  0168F0  0E00               	movlw	0
 20709  0168F2  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 20710  0168F4  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 20711  0168F6  0E00               	movlw	0
 20712  0168F8  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 20713  0168FA  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 20714  0168FC  0EFF               	movlw	255
 20715  0168FE  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 20716  016900  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 20717  016902  511B               	movf	??___xxtofl& (0+255),w,b
 20718  016904  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 20719  016906  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 20720  016908  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 20721  01690A  B4D8               	btfsc	status,2,c
 20722  01690C  D007               	goto	l2298
 20723  01690E  D7E1               	goto	l2296
 20724  016910                     
 20725                           ; BSR set to: 1
 20726                           
 20727                           ; BSR set to: 1
 20728  016910  0720               	decf	___xxtofl@exp& (0+255),f,b
 20729  016912  90D8               	bcf	status,0,c
 20730  016914  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 20731  016916  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 20732  016918  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 20733  01691A  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 20734  01691C                     l2298:
 20735                           
 20736                           ; BSR set to: 1
 20737                           
 20738                           ; BSR set to: 1
 20739  01691C  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 20740  01691E  D003               	goto	u24210
 20741                           
 20742                           ; BSR set to: 1
 20743  016920  0E02               	movlw	2
 20744  016922  6120               	cpfslt	___xxtofl@exp& (0+255),b
 20745  016924  D7F5               	goto	l2299
 20746  016926                     u24210:
 20747                           
 20748                           ; BSR set to: 1
 20749                           
 20750                           ; BSR set to: 1
 20751  016926  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 20752  016928  D008               	goto	l2303
 20753                           
 20754                           ; BSR set to: 1
 20755  01692A  0EFF               	movlw	255
 20756  01692C  1721               	andwf	___xxtofl@arg& (0+255),f,b
 20757  01692E  0EFF               	movlw	255
 20758  016930  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 20759  016932  0E7F               	movlw	127
 20760  016934  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 20761  016936  0EFF               	movlw	255
 20762  016938  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 20763  01693A                     l2303:
 20764                           
 20765                           ; BSR set to: 1
 20766  01693A  90D8               	bcf	status,0,c
 20767  01693C  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 20768  01693E  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 20769  016942  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 20770  016944  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 20771  016946  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 20772  016948  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 20773  01694C  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 20774  01694E  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 20775  016950  6B1B               	clrf	??___xxtofl& (0+255),b
 20776  016952  511B               	movf	??___xxtofl& (0+255),w,b
 20777  016954  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 20778  016956  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 20779  016958  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 20780  01695A  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 20781  01695C  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 20782  01695E  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 20783  016960  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 20784                           
 20785                           ; BSR set to: 1
 20786  016962  511F               	movf	___xxtofl@sign& (0+255),w,b
 20787  016964  A4D8               	btfss	status,2,c
 20788                           
 20789                           ; BSR set to: 1
 20790  016966  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 20791  016968  D001               	goto	l2304
 20792                           
 20793                           ; BSR set to: 1
 20794  01696A  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 20795  01696C                     l2304:
 20796                           
 20797                           ; BSR set to: 1
 20798                           
 20799                           ; BSR set to: 1
 20800  01696C  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 20801  016970  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 20802  016974  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 20803  016978  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 20804  01697C  0012               	return	
 20805  01697E                     __end_of___xxtofl:
 20806                           	opt stack 0
 20807                           tblptru	equ	0xFF8
 20808                           tblptrh	equ	0xFF7
 20809                           tblptrl	equ	0xFF6
 20810                           tablat	equ	0xFF5
 20811                           prodh	equ	0xFF4
 20812                           prodl	equ	0xFF3
 20813                           intcon	equ	0xFF2
 20814                           indf0	equ	0xFEF
 20815                           postinc0	equ	0xFEE
 20816                           fsr0h	equ	0xFEA
 20817                           fsr0l	equ	0xFE9
 20818                           wreg	equ	0xFE8
 20819                           indf1	equ	0xFE7
 20820                           postdec1	equ	0xFE5
 20821                           plusw1	equ	0xFE3
 20822                           fsr1h	equ	0xFE2
 20823                           fsr1l	equ	0xFE1
 20824                           indf2	equ	0xFDF
 20825                           postinc2	equ	0xFDE
 20826                           postdec2	equ	0xFDD
 20827                           plusw2	equ	0xFDB
 20828                           fsr2h	equ	0xFDA
 20829                           fsr2l	equ	0xFD9
 20830                           status	equ	0xFD8
 20831                           
 20832 ;; *************** function ___wmul *****************
 20833 ;; Defined at:
 20834 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 20835 ;; Parameters:    Size  Location     Type
 20836 ;;  multiplier      2   23[BANK1 ] unsigned int 
 20837 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 20838 ;; Auto vars:     Size  Location     Type
 20839 ;;  product         2   27[BANK1 ] unsigned int 
 20840 ;; Return value:  Size  Location     Type
 20841 ;;                  2   23[BANK1 ] unsigned int 
 20842 ;; Registers used:
 20843 ;;		wreg, status,2, status,0, prodl, prodh
 20844 ;; Tracked objects:
 20845 ;;		On entry : 0/0
 20846 ;;		On exit  : 0/0
 20847 ;;		Unchanged: 0/0
 20848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20849 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20850 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20852 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20853 ;;Total ram usage:        6 bytes
 20854 ;; Hardware stack levels used:    1
 20855 ;; Hardware stack levels required when called:   13
 20856 ;; This function calls:
 20857 ;;		Nothing
 20858 ;; This function is called by:
 20859 ;;		_ringBufferLUT
 20860 ;;		_printf
 20861 ;;		_atoi
 20862 ;; This function uses a non-reentrant model
 20863 ;;
 20864                           
 20865                           	psect	text44
 20866  0189A0                     __ptext44:
 20867                           	opt stack 0
 20868  0189A0                     ___wmul:
 20869                           	opt stack 14
 20870                           
 20871                           ; BSR set to: 1
 20872                           ;incstack = 0
 20873  0189A0  0101               	movlb	1	; () banked
 20874  0189A2  5117               	movf	___wmul@multiplier& (0+255),w,b
 20875  0189A4  0319               	mulwf	___wmul@multiplicand& (0+255),b
 20876  0189A6  CFF3 F11B          	movff	prodl,___wmul@product
 20877  0189AA  CFF4 F11C          	movff	prodh,___wmul@product+1
 20878  0189AE  5117               	movf	___wmul@multiplier& (0+255),w,b
 20879  0189B0  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20880  0189B2  50F3               	movf	prodl,w,c
 20881  0189B4  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 20882  0189B6  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20883  0189B8  0319               	mulwf	___wmul@multiplicand& (0+255),b
 20884  0189BA  50F3               	movf	prodl,w,c
 20885  0189BC  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 20886                           
 20887                           ; BSR set to: 1
 20888  0189BE  C11B  F117         	movff	___wmul@product,?___wmul
 20889  0189C2  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 20890  0189C6  0012               	return	
 20891  0189C8                     __end_of___wmul:
 20892                           	opt stack 0
 20893                           tblptru	equ	0xFF8
 20894                           tblptrh	equ	0xFF7
 20895                           tblptrl	equ	0xFF6
 20896                           tablat	equ	0xFF5
 20897                           prodh	equ	0xFF4
 20898                           prodl	equ	0xFF3
 20899                           intcon	equ	0xFF2
 20900                           indf0	equ	0xFEF
 20901                           postinc0	equ	0xFEE
 20902                           fsr0h	equ	0xFEA
 20903                           fsr0l	equ	0xFE9
 20904                           wreg	equ	0xFE8
 20905                           indf1	equ	0xFE7
 20906                           postdec1	equ	0xFE5
 20907                           plusw1	equ	0xFE3
 20908                           fsr1h	equ	0xFE2
 20909                           fsr1l	equ	0xFE1
 20910                           indf2	equ	0xFDF
 20911                           postinc2	equ	0xFDE
 20912                           postdec2	equ	0xFDD
 20913                           plusw2	equ	0xFDB
 20914                           fsr2h	equ	0xFDA
 20915                           fsr2l	equ	0xFD9
 20916                           status	equ	0xFD8
 20917                           
 20918 ;; *************** function ___llmod *****************
 20919 ;; Defined at:
 20920 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 20921 ;; Parameters:    Size  Location     Type
 20922 ;;  dividend        4   36[BANK1 ] unsigned long 
 20923 ;;  divisor         4   40[BANK1 ] unsigned long 
 20924 ;; Auto vars:     Size  Location     Type
 20925 ;;  counter         1   44[BANK1 ] unsigned char 
 20926 ;; Return value:  Size  Location     Type
 20927 ;;                  4   36[BANK1 ] unsigned long 
 20928 ;; Registers used:
 20929 ;;		wreg, status,2, status,0
 20930 ;; Tracked objects:
 20931 ;;		On entry : 0/0
 20932 ;;		On exit  : 0/0
 20933 ;;		Unchanged: 0/0
 20934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20935 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20936 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;Total ram usage:        9 bytes
 20940 ;; Hardware stack levels used:    1
 20941 ;; Hardware stack levels required when called:   13
 20942 ;; This function calls:
 20943 ;;		Nothing
 20944 ;; This function is called by:
 20945 ;;		_printf
 20946 ;; This function uses a non-reentrant model
 20947 ;;
 20948                           
 20949                           	psect	text45
 20950  018084                     __ptext45:
 20951                           	opt stack 0
 20952  018084                     ___llmod:
 20953                           	opt stack 14
 20954                           
 20955                           ; BSR set to: 1
 20956                           ;incstack = 0
 20957  018084  0101               	movlb	1	; () banked
 20958  018086  5128               	movf	___llmod@divisor& (0+255),w,b
 20959  018088  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 20960  01808A  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 20961  01808C  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 20962  01808E  B4D8               	btfsc	status,2,c
 20963  018090  D024               	goto	l2013
 20964                           
 20965                           ; BSR set to: 1
 20966  018092  0E01               	movlw	1
 20967  018094  6F2C               	movwf	___llmod@counter& (0+255),b
 20968  018096  D006               	goto	l2008
 20969  018098                     
 20970                           ; BSR set to: 1
 20971                           
 20972                           ; BSR set to: 1
 20973  018098  90D8               	bcf	status,0,c
 20974  01809A  3728               	rlcf	___llmod@divisor& (0+255),f,b
 20975  01809C  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 20976  01809E  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 20977  0180A0  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 20978  0180A2  2B2C               	incf	___llmod@counter& (0+255),f,b
 20979  0180A4                     l2008:
 20980                           
 20981                           ; BSR set to: 1
 20982                           
 20983                           ; BSR set to: 1
 20984  0180A4  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 20985  0180A6  D7F8               	goto	l2009
 20986  0180A8                     u24130:
 20987                           
 20988                           ; BSR set to: 1
 20989                           
 20990                           ; BSR set to: 1
 20991                           
 20992                           ; BSR set to: 1
 20993  0180A8  5128               	movf	___llmod@divisor& (0+255),w,b
 20994  0180AA  5D24               	subwf	___llmod@dividend& (0+255),w,b
 20995  0180AC  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 20996  0180AE  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 20997  0180B0  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 20998  0180B2  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 20999  0180B4  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 21000  0180B6  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 21001  0180B8  A0D8               	btfss	status,0,c
 21002  0180BA  D008               	goto	l2012
 21003                           
 21004                           ; BSR set to: 1
 21005  0180BC  5128               	movf	___llmod@divisor& (0+255),w,b
 21006  0180BE  5F24               	subwf	___llmod@dividend& (0+255),f,b
 21007  0180C0  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 21008  0180C2  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 21009  0180C4  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 21010  0180C6  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 21011  0180C8  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 21012  0180CA  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 21013  0180CC                     l2012:
 21014                           
 21015                           ; BSR set to: 1
 21016                           
 21017                           ; BSR set to: 1
 21018  0180CC  90D8               	bcf	status,0,c
 21019  0180CE  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 21020  0180D0  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 21021  0180D2  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 21022  0180D4  3328               	rrcf	___llmod@divisor& (0+255),f,b
 21023                           
 21024                           ; BSR set to: 1
 21025  0180D6  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 21026  0180D8  D7E7               	goto	u24130
 21027  0180DA                     l2013:
 21028                           
 21029                           ; BSR set to: 1
 21030                           
 21031                           ; BSR set to: 1
 21032  0180DA  C124  F124         	movff	___llmod@dividend,?___llmod
 21033  0180DE  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 21034  0180E2  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 21035  0180E6  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 21036                           
 21037                           ; BSR set to: 1
 21038  0180EA  0012               	return		;funcret
 21039  0180EC                     __end_of___llmod:
 21040                           	opt stack 0
 21041                           tblptru	equ	0xFF8
 21042                           tblptrh	equ	0xFF7
 21043                           tblptrl	equ	0xFF6
 21044                           tablat	equ	0xFF5
 21045                           prodh	equ	0xFF4
 21046                           prodl	equ	0xFF3
 21047                           intcon	equ	0xFF2
 21048                           indf0	equ	0xFEF
 21049                           postinc0	equ	0xFEE
 21050                           fsr0h	equ	0xFEA
 21051                           fsr0l	equ	0xFE9
 21052                           wreg	equ	0xFE8
 21053                           indf1	equ	0xFE7
 21054                           postdec1	equ	0xFE5
 21055                           plusw1	equ	0xFE3
 21056                           fsr1h	equ	0xFE2
 21057                           fsr1l	equ	0xFE1
 21058                           indf2	equ	0xFDF
 21059                           postinc2	equ	0xFDE
 21060                           postdec2	equ	0xFDD
 21061                           plusw2	equ	0xFDB
 21062                           fsr2h	equ	0xFDA
 21063                           fsr2l	equ	0xFD9
 21064                           status	equ	0xFD8
 21065                           
 21066 ;; *************** function ___lldiv *****************
 21067 ;; Defined at:
 21068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 21069 ;; Parameters:    Size  Location     Type
 21070 ;;  dividend        4   23[BANK1 ] unsigned long 
 21071 ;;  divisor         4   27[BANK1 ] unsigned long 
 21072 ;; Auto vars:     Size  Location     Type
 21073 ;;  quotient        4   32[BANK1 ] unsigned long 
 21074 ;;  counter         1   31[BANK1 ] unsigned char 
 21075 ;; Return value:  Size  Location     Type
 21076 ;;                  4   23[BANK1 ] unsigned long 
 21077 ;; Registers used:
 21078 ;;		wreg, status,2, status,0
 21079 ;; Tracked objects:
 21080 ;;		On entry : 0/0
 21081 ;;		On exit  : 0/0
 21082 ;;		Unchanged: 0/0
 21083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21084 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21085 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21087 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21088 ;;Total ram usage:       13 bytes
 21089 ;; Hardware stack levels used:    1
 21090 ;; Hardware stack levels required when called:   13
 21091 ;; This function calls:
 21092 ;;		Nothing
 21093 ;; This function is called by:
 21094 ;;		_printf
 21095 ;; This function uses a non-reentrant model
 21096 ;;
 21097                           
 21098                           	psect	text46
 21099  017BE2                     __ptext46:
 21100                           	opt stack 0
 21101  017BE2                     ___lldiv:
 21102                           	opt stack 14
 21103                           
 21104                           ; BSR set to: 1
 21105                           ;incstack = 0
 21106  017BE2  0E00               	movlw	0
 21107  017BE4  0101               	movlb	1	; () banked
 21108  017BE6  6F20               	movwf	___lldiv@quotient& (0+255),b
 21109  017BE8  0E00               	movlw	0
 21110  017BEA  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 21111  017BEC  0E00               	movlw	0
 21112  017BEE  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 21113  017BF0  0E00               	movlw	0
 21114  017BF2  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 21115                           
 21116                           ; BSR set to: 1
 21117  017BF4  511B               	movf	___lldiv@divisor& (0+255),w,b
 21118  017BF6  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 21119  017BF8  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 21120  017BFA  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 21121  017BFC  B4D8               	btfsc	status,2,c
 21122  017BFE  D02A               	goto	l2003
 21123                           
 21124                           ; BSR set to: 1
 21125  017C00  0E01               	movlw	1
 21126  017C02  6F1F               	movwf	___lldiv@counter& (0+255),b
 21127  017C04  D006               	goto	l1998
 21128  017C06                     
 21129                           ; BSR set to: 1
 21130                           
 21131                           ; BSR set to: 1
 21132  017C06  90D8               	bcf	status,0,c
 21133  017C08  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 21134  017C0A  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 21135  017C0C  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 21136  017C0E  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 21137  017C10  2B1F               	incf	___lldiv@counter& (0+255),f,b
 21138  017C12                     l1998:
 21139                           
 21140                           ; BSR set to: 1
 21141                           
 21142                           ; BSR set to: 1
 21143  017C12  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 21144  017C14  D7F8               	goto	l1999
 21145  017C16                     u24100:
 21146                           
 21147                           ; BSR set to: 1
 21148                           
 21149                           ; BSR set to: 1
 21150                           
 21151                           ; BSR set to: 1
 21152  017C16  90D8               	bcf	status,0,c
 21153  017C18  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 21154  017C1A  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 21155  017C1C  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 21156  017C1E  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 21157                           
 21158                           ; BSR set to: 1
 21159  017C20  511B               	movf	___lldiv@divisor& (0+255),w,b
 21160  017C22  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 21161  017C24  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21162  017C26  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 21163  017C28  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21164  017C2A  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 21165  017C2C  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21166  017C2E  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 21167  017C30  A0D8               	btfss	status,0,c
 21168  017C32  D009               	goto	l2002
 21169                           
 21170                           ; BSR set to: 1
 21171  017C34  511B               	movf	___lldiv@divisor& (0+255),w,b
 21172  017C36  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 21173  017C38  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21174  017C3A  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 21175  017C3C  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21176  017C3E  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 21177  017C40  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21178  017C42  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 21179                           
 21180                           ; BSR set to: 1
 21181  017C44  8120               	bsf	___lldiv@quotient& (0+255),0,b
 21182  017C46                     l2002:
 21183                           
 21184                           ; BSR set to: 1
 21185                           
 21186                           ; BSR set to: 1
 21187  017C46  90D8               	bcf	status,0,c
 21188  017C48  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21189  017C4A  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21190  017C4C  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21191  017C4E  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 21192                           
 21193                           ; BSR set to: 1
 21194  017C50  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 21195  017C52  D7E1               	goto	u24100
 21196  017C54                     l2003:
 21197                           
 21198                           ; BSR set to: 1
 21199                           
 21200                           ; BSR set to: 1
 21201  017C54  C120  F117         	movff	___lldiv@quotient,?___lldiv
 21202  017C58  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 21203  017C5C  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 21204  017C60  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 21205                           
 21206                           ; BSR set to: 1
 21207  017C64  0012               	return		;funcret
 21208  017C66                     __end_of___lldiv:
 21209                           	opt stack 0
 21210                           tblptru	equ	0xFF8
 21211                           tblptrh	equ	0xFF7
 21212                           tblptrl	equ	0xFF6
 21213                           tablat	equ	0xFF5
 21214                           prodh	equ	0xFF4
 21215                           prodl	equ	0xFF3
 21216                           intcon	equ	0xFF2
 21217                           indf0	equ	0xFEF
 21218                           postinc0	equ	0xFEE
 21219                           fsr0h	equ	0xFEA
 21220                           fsr0l	equ	0xFE9
 21221                           wreg	equ	0xFE8
 21222                           indf1	equ	0xFE7
 21223                           postdec1	equ	0xFE5
 21224                           plusw1	equ	0xFE3
 21225                           fsr1h	equ	0xFE2
 21226                           fsr1l	equ	0xFE1
 21227                           indf2	equ	0xFDF
 21228                           postinc2	equ	0xFDE
 21229                           postdec2	equ	0xFDD
 21230                           plusw2	equ	0xFDB
 21231                           fsr2h	equ	0xFDA
 21232                           fsr2l	equ	0xFD9
 21233                           status	equ	0xFD8
 21234                           
 21235 ;; *************** function ___fltol *****************
 21236 ;; Defined at:
 21237 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 21238 ;; Parameters:    Size  Location     Type
 21239 ;;  f1              4  120[BANK1 ] unsigned long 
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;  exp1            1  129[BANK1 ] unsigned char 
 21242 ;;  sign1           1  128[BANK1 ] unsigned char 
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  4  120[BANK1 ] long 
 21245 ;; Registers used:
 21246 ;;		wreg, status,2, status,0
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/0
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21252 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21253 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21254 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21255 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21256 ;;Total ram usage:       10 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; Hardware stack levels required when called:   13
 21259 ;; This function calls:
 21260 ;;		Nothing
 21261 ;; This function is called by:
 21262 ;;		_printf
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           	psect	text47
 21267  0174FE                     __ptext47:
 21268                           	opt stack 0
 21269  0174FE                     ___fltol:
 21270                           	opt stack 14
 21271                           
 21272                           ; BSR set to: 1
 21273                           ;incstack = 0
 21274  0174FE  0101               	movlb	1	; () banked
 21275  017500  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 21276  017502  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 21277  017504  6F81               	movwf	___fltol@exp1& (0+255),b
 21278  017506  5181               	movf	___fltol@exp1& (0+255),w,b
 21279  017508  A4D8               	btfss	status,2,c
 21280  01750A  D009               	goto	l1855
 21281                           
 21282                           ; BSR set to: 1
 21283  01750C  0E00               	movlw	0
 21284  01750E  6F78               	movwf	?___fltol& (0+255),b
 21285  017510  0E00               	movlw	0
 21286  017512  6F79               	movwf	(?___fltol+1)& (0+255),b
 21287  017514  0E00               	movlw	0
 21288  017516  6F7A               	movwf	(?___fltol+2)& (0+255),b
 21289  017518  0E00               	movlw	0
 21290  01751A  6F7B               	movwf	(?___fltol+3)& (0+255),b
 21291                           
 21292                           ; BSR set to: 1
 21293  01751C  0012               	return	
 21294  01751E                     l1855:
 21295                           
 21296                           ; BSR set to: 1
 21297                           
 21298                           ; BSR set to: 1
 21299  01751E  C178  F17C         	movff	___fltol@f1,??___fltol
 21300  017522  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 21301  017526  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 21302  01752A  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 21303  01752E  0E20               	movlw	32
 21304  017530  D005               	goto	u24030
 21305  017532                     u24035:
 21306  017532  90D8               	bcf	status,0,c
 21307  017534  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 21308  017536  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 21309  017538  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 21310  01753A  337C               	rrcf	??___fltol& (0+255),f,b
 21311  01753C                     u24030:
 21312  01753C  2EE8               	decfsz	wreg,f,c
 21313  01753E  D7F9               	goto	u24035
 21314  017540  517C               	movf	??___fltol& (0+255),w,b
 21315  017542  6F80               	movwf	___fltol@sign1& (0+255),b
 21316                           
 21317                           ; BSR set to: 1
 21318  017544  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 21319                           
 21320                           ; BSR set to: 1
 21321  017546  0EFF               	movlw	255
 21322  017548  1778               	andwf	___fltol@f1& (0+255),f,b
 21323  01754A  0EFF               	movlw	255
 21324  01754C  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 21325  01754E  0EFF               	movlw	255
 21326  017550  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 21327  017552  0E00               	movlw	0
 21328  017554  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 21329                           
 21330                           ; BSR set to: 1
 21331  017556  0E96               	movlw	150
 21332  017558  5F81               	subwf	___fltol@exp1& (0+255),f,b
 21333                           
 21334                           ; BSR set to: 1
 21335  01755A  AF81               	btfss	___fltol@exp1& (0+255),7,b
 21336  01755C  D016               	goto	l1857
 21337                           
 21338                           ; BSR set to: 1
 21339  01755E  5181               	movf	___fltol@exp1& (0+255),w,b
 21340  017560  0A80               	xorlw	128
 21341  017562  0F97               	addlw	151
 21342  017564  B0D8               	btfsc	status,0,c
 21343  017566  D009               	goto	l1858
 21344                           
 21345                           ; BSR set to: 1
 21346  017568  0E00               	movlw	0
 21347  01756A  6F78               	movwf	?___fltol& (0+255),b
 21348  01756C  0E00               	movlw	0
 21349  01756E  6F79               	movwf	(?___fltol+1)& (0+255),b
 21350  017570  0E00               	movlw	0
 21351  017572  6F7A               	movwf	(?___fltol+2)& (0+255),b
 21352  017574  0E00               	movlw	0
 21353  017576  6F7B               	movwf	(?___fltol+3)& (0+255),b
 21354                           
 21355                           ; BSR set to: 1
 21356  017578  0012               	return	
 21357  01757A                     l1858:
 21358                           
 21359                           ; BSR set to: 1
 21360                           
 21361                           ; BSR set to: 1
 21362                           
 21363                           ; BSR set to: 1
 21364  01757A  90D8               	bcf	status,0,c
 21365  01757C  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 21366  01757E  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 21367  017580  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 21368  017582  3378               	rrcf	___fltol@f1& (0+255),f,b
 21369                           
 21370                           ; BSR set to: 1
 21371  017584  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 21372  017586  D7F9               	goto	l1858
 21373                           
 21374                           ; BSR set to: 1
 21375  017588  D015               	goto	u24070
 21376  01758A                     l1857:
 21377                           
 21378                           ; BSR set to: 1
 21379                           
 21380                           ; BSR set to: 1
 21381  01758A  0E1F               	movlw	31
 21382  01758C  6581               	cpfsgt	___fltol@exp1& (0+255),b
 21383  01758E  D00F               	goto	l1863
 21384                           
 21385                           ; BSR set to: 1
 21386  017590  0E00               	movlw	0
 21387  017592  6F78               	movwf	?___fltol& (0+255),b
 21388  017594  0E00               	movlw	0
 21389  017596  6F79               	movwf	(?___fltol+1)& (0+255),b
 21390  017598  0E00               	movlw	0
 21391  01759A  6F7A               	movwf	(?___fltol+2)& (0+255),b
 21392  01759C  0E00               	movlw	0
 21393  01759E  6F7B               	movwf	(?___fltol+3)& (0+255),b
 21394                           
 21395                           ; BSR set to: 1
 21396  0175A0  0012               	return	
 21397  0175A2                     
 21398                           ; BSR set to: 1
 21399                           
 21400                           ; BSR set to: 1
 21401  0175A2  90D8               	bcf	status,0,c
 21402  0175A4  3778               	rlcf	___fltol@f1& (0+255),f,b
 21403  0175A6  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 21404  0175A8  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 21405  0175AA  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 21406  0175AC  0781               	decf	___fltol@exp1& (0+255),f,b
 21407  0175AE                     l1863:
 21408                           
 21409                           ; BSR set to: 1
 21410                           
 21411                           ; BSR set to: 1
 21412  0175AE  5181               	movf	___fltol@exp1& (0+255),w,b
 21413  0175B0  A4D8               	btfss	status,2,c
 21414  0175B2  D7F7               	goto	l1864
 21415  0175B4                     u24070:
 21416                           
 21417                           ; BSR set to: 1
 21418                           
 21419                           ; BSR set to: 1
 21420                           
 21421                           ; BSR set to: 1
 21422  0175B4  5180               	movf	___fltol@sign1& (0+255),w,b
 21423  0175B6  B4D8               	btfsc	status,2,c
 21424  0175B8  D008               	goto	l1866
 21425                           
 21426                           ; BSR set to: 1
 21427  0175BA  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 21428  0175BC  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 21429  0175BE  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 21430  0175C0  6D78               	negf	___fltol@f1& (0+255),b
 21431  0175C2  0E00               	movlw	0
 21432  0175C4  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 21433  0175C6  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 21434  0175C8  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 21435  0175CA                     l1866:
 21436                           
 21437                           ; BSR set to: 1
 21438                           
 21439                           ; BSR set to: 1
 21440  0175CA  C178  F178         	movff	___fltol@f1,?___fltol
 21441  0175CE  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 21442  0175D2  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 21443  0175D6  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 21444  0175DA  0012               	return	
 21445  0175DC                     __end_of___fltol:
 21446                           	opt stack 0
 21447                           tblptru	equ	0xFF8
 21448                           tblptrh	equ	0xFF7
 21449                           tblptrl	equ	0xFF6
 21450                           tablat	equ	0xFF5
 21451                           prodh	equ	0xFF4
 21452                           prodl	equ	0xFF3
 21453                           intcon	equ	0xFF2
 21454                           indf0	equ	0xFEF
 21455                           postinc0	equ	0xFEE
 21456                           fsr0h	equ	0xFEA
 21457                           fsr0l	equ	0xFE9
 21458                           wreg	equ	0xFE8
 21459                           indf1	equ	0xFE7
 21460                           postdec1	equ	0xFE5
 21461                           plusw1	equ	0xFE3
 21462                           fsr1h	equ	0xFE2
 21463                           fsr1l	equ	0xFE1
 21464                           indf2	equ	0xFDF
 21465                           postinc2	equ	0xFDE
 21466                           postdec2	equ	0xFDD
 21467                           plusw2	equ	0xFDB
 21468                           fsr2h	equ	0xFDA
 21469                           fsr2l	equ	0xFD9
 21470                           status	equ	0xFD8
 21471                           
 21472 ;; *************** function ___flsub *****************
 21473 ;; Defined at:
 21474 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  b               4   61[BANK1 ] long 
 21477 ;;  a               4   65[BANK1 ] long 
 21478 ;; Auto vars:     Size  Location     Type
 21479 ;;		None
 21480 ;; Return value:  Size  Location     Type
 21481 ;;                  4   61[BANK1 ] long 
 21482 ;; Registers used:
 21483 ;;		wreg, status,2, status,0, cstack
 21484 ;; Tracked objects:
 21485 ;;		On entry : 0/0
 21486 ;;		On exit  : 0/0
 21487 ;;		Unchanged: 0/0
 21488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21489 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21492 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21493 ;;Total ram usage:        8 bytes
 21494 ;; Hardware stack levels used:    1
 21495 ;; Hardware stack levels required when called:   14
 21496 ;; This function calls:
 21497 ;;		___fladd
 21498 ;; This function is called by:
 21499 ;;		_printf
 21500 ;; This function uses a non-reentrant model
 21501 ;;
 21502                           
 21503                           	psect	text48
 21504  018570                     __ptext48:
 21505                           	opt stack 0
 21506  018570                     ___flsub:
 21507                           	opt stack 13
 21508                           
 21509                           ; BSR set to: 1
 21510                           ;incstack = 0
 21511  018570  0E00               	movlw	0
 21512  018572  0101               	movlb	1	; () banked
 21513  018574  1B41               	xorwf	___flsub@a& (0+255),f,b
 21514  018576  0E00               	movlw	0
 21515  018578  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 21516  01857A  0E00               	movlw	0
 21517  01857C  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 21518  01857E  0E80               	movlw	128
 21519  018580  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 21520                           
 21521                           ; BSR set to: 1
 21522  018582  C13D  F129         	movff	___flsub@b,___fladd@b
 21523  018586  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 21524  01858A  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 21525  01858E  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 21526  018592  C141  F12D         	movff	___flsub@a,___fladd@a
 21527  018596  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 21528  01859A  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 21529  01859E  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 21530  0185A2  ECEF  F0A3         	call	___fladd	;wreg free
 21531  0185A6  C129  F13D         	movff	?___fladd,?___flsub
 21532  0185AA  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 21533  0185AE  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 21534  0185B2  C12C  F140         	movff	?___fladd+3,?___flsub+3
 21535  0185B6  0012               	return	
 21536  0185B8                     __end_of___flsub:
 21537                           	opt stack 0
 21538                           tblptru	equ	0xFF8
 21539                           tblptrh	equ	0xFF7
 21540                           tblptrl	equ	0xFF6
 21541                           tablat	equ	0xFF5
 21542                           prodh	equ	0xFF4
 21543                           prodl	equ	0xFF3
 21544                           intcon	equ	0xFF2
 21545                           indf0	equ	0xFEF
 21546                           postinc0	equ	0xFEE
 21547                           fsr0h	equ	0xFEA
 21548                           fsr0l	equ	0xFE9
 21549                           wreg	equ	0xFE8
 21550                           indf1	equ	0xFE7
 21551                           postdec1	equ	0xFE5
 21552                           plusw1	equ	0xFE3
 21553                           fsr1h	equ	0xFE2
 21554                           fsr1l	equ	0xFE1
 21555                           indf2	equ	0xFDF
 21556                           postinc2	equ	0xFDE
 21557                           postdec2	equ	0xFDD
 21558                           plusw2	equ	0xFDB
 21559                           fsr2h	equ	0xFDA
 21560                           fsr2l	equ	0xFD9
 21561                           status	equ	0xFD8
 21562                           
 21563 ;; *************** function ___fladd *****************
 21564 ;; Defined at:
 21565 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 21566 ;; Parameters:    Size  Location     Type
 21567 ;;  b               4   41[BANK1 ] long 
 21568 ;;  a               4   45[BANK1 ] long 
 21569 ;; Auto vars:     Size  Location     Type
 21570 ;;  grs             1   60[BANK1 ] unsigned char 
 21571 ;;  bexp            1   59[BANK1 ] unsigned char 
 21572 ;;  aexp            1   58[BANK1 ] unsigned char 
 21573 ;;  signs           1   57[BANK1 ] unsigned char 
 21574 ;; Return value:  Size  Location     Type
 21575 ;;                  4   41[BANK1 ] unsigned char 
 21576 ;; Registers used:
 21577 ;;		wreg, status,2, status,0
 21578 ;; Tracked objects:
 21579 ;;		On entry : 0/0
 21580 ;;		On exit  : 0/0
 21581 ;;		Unchanged: 0/0
 21582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21583 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21584 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21585 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21586 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21587 ;;Total ram usage:       20 bytes
 21588 ;; Hardware stack levels used:    1
 21589 ;; Hardware stack levels required when called:   13
 21590 ;; This function calls:
 21591 ;;		Nothing
 21592 ;; This function is called by:
 21593 ;;		_ringBufferLUT
 21594 ;;		_printf
 21595 ;;		___flsub
 21596 ;; This function uses a non-reentrant model
 21597 ;;
 21598                           
 21599                           	psect	text49
 21600  0147DE                     __ptext49:
 21601                           	opt stack 0
 21602  0147DE                     ___fladd:
 21603                           	opt stack 13
 21604                           
 21605                           ;incstack = 0
 21606  0147DE  0101               	movlb	1	; () banked
 21607  0147E0  512C               	movf	(___fladd@b+3)& (0+255),w,b
 21608  0147E2  0B80               	andlw	128
 21609  0147E4  6F39               	movwf	___fladd@signs& (0+255),b
 21610  0147E6  512C               	movf	(___fladd@b+3)& (0+255),w,b
 21611  0147E8  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 21612  0147EA  6F3B               	movwf	___fladd@bexp& (0+255),b
 21613                           
 21614                           ; BSR set to: 1
 21615  0147EC  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 21616                           
 21617                           ; BSR set to: 1
 21618  0147EE  813B               	bsf	___fladd@bexp& (0+255),0,b
 21619                           
 21620                           ; BSR set to: 1
 21621                           
 21622                           ; BSR set to: 1
 21623  0147F0  513B               	movf	___fladd@bexp& (0+255),w,b
 21624  0147F2  B4D8               	btfsc	status,2,c
 21625  0147F4  D00D               	goto	l2095
 21626                           
 21627                           ; BSR set to: 1
 21628  0147F6  293B               	incf	___fladd@bexp& (0+255),w,b
 21629  0147F8  A4D8               	btfss	status,2,c
 21630  0147FA  D008               	goto	l2096
 21631                           
 21632                           ; BSR set to: 1
 21633  0147FC  0E00               	movlw	0
 21634  0147FE  6F29               	movwf	___fladd@b& (0+255),b
 21635  014800  0E00               	movlw	0
 21636  014802  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21637  014804  0E00               	movlw	0
 21638  014806  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21639  014808  0E00               	movlw	0
 21640  01480A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21641  01480C                     l2096:
 21642                           
 21643                           ; BSR set to: 1
 21644                           
 21645                           ; BSR set to: 1
 21646  01480C  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 21647  01480E  D006               	goto	L6
 21648  014810                     l2095:
 21649                           
 21650                           ; BSR set to: 1
 21651                           
 21652                           ; BSR set to: 1
 21653  014810  0E00               	movlw	0
 21654  014812  6F29               	movwf	___fladd@b& (0+255),b
 21655  014814  0E00               	movlw	0
 21656  014816  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21657  014818  0E00               	movlw	0
 21658  01481A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21659  01481C                     L6:
 21660  01481C  0E00               	movlw	0
 21661  01481E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21662                           
 21663                           ; BSR set to: 1
 21664                           
 21665                           ; BSR set to: 1
 21666  014820  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21667  014822  0B80               	andlw	128
 21668  014824  6F3A               	movwf	___fladd@aexp& (0+255),b
 21669                           
 21670                           ; BSR set to: 1
 21671  014826  5139               	movf	___fladd@signs& (0+255),w,b
 21672  014828  193A               	xorwf	___fladd@aexp& (0+255),w,b
 21673  01482A  A4D8               	btfss	status,2,c
 21674                           
 21675                           ; BSR set to: 1
 21676  01482C  8D39               	bsf	___fladd@signs& (0+255),6,b
 21677                           
 21678                           ; BSR set to: 1
 21679                           
 21680                           ; BSR set to: 1
 21681  01482E  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21682  014830  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 21683  014832  6F3A               	movwf	___fladd@aexp& (0+255),b
 21684                           
 21685                           ; BSR set to: 1
 21686  014834  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 21687                           
 21688                           ; BSR set to: 1
 21689  014836  813A               	bsf	___fladd@aexp& (0+255),0,b
 21690                           
 21691                           ; BSR set to: 1
 21692                           
 21693                           ; BSR set to: 1
 21694  014838  513A               	movf	___fladd@aexp& (0+255),w,b
 21695  01483A  B4D8               	btfsc	status,2,c
 21696  01483C  D00D               	goto	l2100
 21697                           
 21698                           ; BSR set to: 1
 21699  01483E  293A               	incf	___fladd@aexp& (0+255),w,b
 21700  014840  A4D8               	btfss	status,2,c
 21701  014842  D008               	goto	l2101
 21702                           
 21703                           ; BSR set to: 1
 21704  014844  0E00               	movlw	0
 21705  014846  6F2D               	movwf	___fladd@a& (0+255),b
 21706  014848  0E00               	movlw	0
 21707  01484A  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 21708  01484C  0E00               	movlw	0
 21709  01484E  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 21710  014850  0E00               	movlw	0
 21711  014852  6F30               	movwf	(___fladd@a+3)& (0+255),b
 21712  014854                     l2101:
 21713                           
 21714                           ; BSR set to: 1
 21715                           
 21716                           ; BSR set to: 1
 21717  014854  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 21718  014856  D006               	goto	L7
 21719  014858                     l2100:
 21720                           
 21721                           ; BSR set to: 1
 21722                           
 21723                           ; BSR set to: 1
 21724  014858  0E00               	movlw	0
 21725  01485A  6F2D               	movwf	___fladd@a& (0+255),b
 21726  01485C  0E00               	movlw	0
 21727  01485E  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 21728  014860  0E00               	movlw	0
 21729  014862  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 21730  014864                     L7:
 21731  014864  0E00               	movlw	0
 21732  014866  6F30               	movwf	(___fladd@a+3)& (0+255),b
 21733                           
 21734                           ; BSR set to: 1
 21735                           
 21736                           ; BSR set to: 1
 21737  014868  513B               	movf	___fladd@bexp& (0+255),w,b
 21738  01486A  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 21739  01486C  B0D8               	btfsc	status,0,c
 21740  01486E  D022               	goto	l2103
 21741                           
 21742                           ; BSR set to: 1
 21743  014870  AD39               	btfss	___fladd@signs& (0+255),6,b
 21744  014872  D002               	goto	l2104
 21745                           
 21746                           ; BSR set to: 1
 21747  014874  0E80               	movlw	128
 21748  014876  1B39               	xorwf	___fladd@signs& (0+255),f,b
 21749  014878                     l2104:
 21750                           
 21751                           ; BSR set to: 1
 21752                           
 21753                           ; BSR set to: 1
 21754  014878  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 21755                           
 21756                           ; BSR set to: 1
 21757  01487C  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 21758                           
 21759                           ; BSR set to: 1
 21760  014880  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 21761                           
 21762                           ; BSR set to: 1
 21763  014884  C129  F13C         	movff	___fladd@b,___fladd@grs
 21764                           
 21765                           ; BSR set to: 1
 21766  014888  C12D  F129         	movff	___fladd@a,___fladd@b
 21767                           
 21768                           ; BSR set to: 1
 21769  01488C  C13C  F12D         	movff	___fladd@grs,___fladd@a
 21770                           
 21771                           ; BSR set to: 1
 21772  014890  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 21773                           
 21774                           ; BSR set to: 1
 21775  014894  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 21776                           
 21777                           ; BSR set to: 1
 21778  014898  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 21779                           
 21780                           ; BSR set to: 1
 21781  01489C  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 21782                           
 21783                           ; BSR set to: 1
 21784  0148A0  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 21785                           
 21786                           ; BSR set to: 1
 21787  0148A4  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 21788                           
 21789                           ; BSR set to: 1
 21790  0148A8  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 21791                           
 21792                           ; BSR set to: 1
 21793  0148AC  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 21794                           
 21795                           ; BSR set to: 1
 21796  0148B0  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 21797  0148B4                     l2103:
 21798                           
 21799                           ; BSR set to: 1
 21800                           
 21801                           ; BSR set to: 1
 21802  0148B4  0E00               	movlw	0
 21803  0148B6  6F3C               	movwf	___fladd@grs& (0+255),b
 21804                           
 21805                           ; BSR set to: 1
 21806  0148B8  513B               	movf	___fladd@bexp& (0+255),w,b
 21807  0148BA  6F31               	movwf	??___fladd& (0+255),b
 21808  0148BC  6B32               	clrf	(??___fladd+1)& (0+255),b
 21809  0148BE  1F31               	comf	??___fladd& (0+255),f,b
 21810  0148C0  1F32               	comf	(??___fladd+1)& (0+255),f,b
 21811  0148C2  4B31               	infsnz	??___fladd& (0+255),f,b
 21812  0148C4  2B32               	incf	(??___fladd+1)& (0+255),f,b
 21813  0148C6  513A               	movf	___fladd@aexp& (0+255),w,b
 21814  0148C8  6F33               	movwf	(??___fladd+2)& (0+255),b
 21815  0148CA  6B34               	clrf	(??___fladd+3)& (0+255),b
 21816  0148CC  5131               	movf	??___fladd& (0+255),w,b
 21817  0148CE  2733               	addwf	(??___fladd+2)& (0+255),f,b
 21818  0148D0  5132               	movf	(??___fladd+1)& (0+255),w,b
 21819  0148D2  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 21820  0148D4  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 21821  0148D6  D02C               	goto	l2107
 21822  0148D8  5134               	movf	(??___fladd+3)& (0+255),w,b
 21823  0148DA  E104               	bnz	u23100
 21824  0148DC  0E1A               	movlw	26
 21825  0148DE  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 21826  0148E0  A0D8               	btfss	status,0,c
 21827  0148E2  D026               	goto	l2107
 21828  0148E4                     u23100:
 21829                           
 21830                           ; BSR set to: 1
 21831  0148E4  5129               	movf	___fladd@b& (0+255),w,b
 21832  0148E6  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 21833  0148E8  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 21834  0148EA  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 21835  0148EC  B4D8               	btfsc	status,2,c
 21836  0148EE  D002               	goto	u23110
 21837  0148F0  0E01               	movlw	1
 21838  0148F2  D001               	goto	u23120
 21839  0148F4                     u23110:
 21840  0148F4  0E00               	movlw	0
 21841  0148F6                     u23120:
 21842  0148F6  6F3C               	movwf	___fladd@grs& (0+255),b
 21843                           
 21844                           ; BSR set to: 1
 21845  0148F8  0E00               	movlw	0
 21846  0148FA  6F29               	movwf	___fladd@b& (0+255),b
 21847  0148FC  0E00               	movlw	0
 21848  0148FE  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21849  014900  0E00               	movlw	0
 21850  014902  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21851  014904  0E00               	movlw	0
 21852  014906  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21853                           
 21854                           ; BSR set to: 1
 21855  014908  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 21856  01490C  D015               	goto	u23150
 21857  01490E                     l2108:
 21858                           
 21859                           ; BSR set to: 1
 21860  01490E  A13C               	btfss	___fladd@grs& (0+255),0,b
 21861  014910  D005               	goto	l2109
 21862                           
 21863                           ; BSR set to: 1
 21864  014912  90D8               	bcf	status,0,c
 21865  014914  313C               	rrcf	___fladd@grs& (0+255),w,b
 21866  014916  0901               	iorlw	1
 21867  014918  6F3C               	movwf	___fladd@grs& (0+255),b
 21868  01491A  D002               	goto	l2110
 21869  01491C                     l2109:
 21870                           
 21871                           ; BSR set to: 1
 21872                           
 21873                           ; BSR set to: 1
 21874  01491C  90D8               	bcf	status,0,c
 21875  01491E  333C               	rrcf	___fladd@grs& (0+255),f,b
 21876  014920                     l2110:
 21877                           
 21878                           ; BSR set to: 1
 21879                           
 21880                           ; BSR set to: 1
 21881  014920  B129               	btfsc	___fladd@b& (0+255),0,b
 21882                           
 21883                           ; BSR set to: 1
 21884  014922  8F3C               	bsf	___fladd@grs& (0+255),7,b
 21885                           
 21886                           ; BSR set to: 1
 21887                           
 21888                           ; BSR set to: 1
 21889  014924  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 21890  014926  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 21891  014928  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 21892  01492A  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 21893  01492C  3329               	rrcf	___fladd@b& (0+255),f,b
 21894                           
 21895                           ; BSR set to: 1
 21896  01492E  2B3B               	incf	___fladd@bexp& (0+255),f,b
 21897  014930                     l2107:
 21898                           
 21899                           ; BSR set to: 1
 21900  014930  513A               	movf	___fladd@aexp& (0+255),w,b
 21901  014932  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 21902  014934  A0D8               	btfss	status,0,c
 21903  014936  D7EB               	goto	l2108
 21904  014938                     u23150:
 21905                           
 21906                           ; BSR set to: 1
 21907                           
 21908                           ; BSR set to: 1
 21909  014938  BD39               	btfsc	___fladd@signs& (0+255),6,b
 21910  01493A  D029               	goto	l2113
 21911                           
 21912                           ; BSR set to: 1
 21913  01493C  513B               	movf	___fladd@bexp& (0+255),w,b
 21914  01493E  A4D8               	btfss	status,2,c
 21915  014940  D009               	goto	l2114
 21916                           
 21917                           ; BSR set to: 1
 21918  014942  0E00               	movlw	0
 21919  014944  6F29               	movwf	?___fladd& (0+255),b
 21920  014946  0E00               	movlw	0
 21921  014948  6F2A               	movwf	(?___fladd+1)& (0+255),b
 21922  01494A  0E00               	movlw	0
 21923  01494C  6F2B               	movwf	(?___fladd+2)& (0+255),b
 21924  01494E  0E00               	movlw	0
 21925  014950  6F2C               	movwf	(?___fladd+3)& (0+255),b
 21926                           
 21927                           ; BSR set to: 1
 21928  014952  0012               	return	
 21929  014954                     l2114:
 21930                           
 21931                           ; BSR set to: 1
 21932                           
 21933                           ; BSR set to: 1
 21934  014954  512D               	movf	___fladd@a& (0+255),w,b
 21935  014956  2729               	addwf	___fladd@b& (0+255),f,b
 21936  014958  512E               	movf	(___fladd@a+1)& (0+255),w,b
 21937  01495A  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 21938  01495C  512F               	movf	(___fladd@a+2)& (0+255),w,b
 21939  01495E  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 21940  014960  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21941  014962  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 21942                           
 21943                           ; BSR set to: 1
 21944  014964  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 21945  014966  D083               	goto	u23280
 21946                           
 21947                           ; BSR set to: 1
 21948  014968  A13C               	btfss	___fladd@grs& (0+255),0,b
 21949  01496A  D006               	goto	l2117
 21950                           
 21951                           ; BSR set to: 1
 21952  01496C  90D8               	bcf	status,0,c
 21953  01496E  333C               	rrcf	___fladd@grs& (0+255),f,b
 21954  014970  513C               	movf	___fladd@grs& (0+255),w,b
 21955  014972  0901               	iorlw	1
 21956  014974  6F3C               	movwf	___fladd@grs& (0+255),b
 21957  014976  D002               	goto	l2118
 21958  014978                     l2117:
 21959                           
 21960                           ; BSR set to: 1
 21961                           
 21962                           ; BSR set to: 1
 21963  014978  90D8               	bcf	status,0,c
 21964  01497A  333C               	rrcf	___fladd@grs& (0+255),f,b
 21965  01497C                     l2118:
 21966                           
 21967                           ; BSR set to: 1
 21968                           
 21969                           ; BSR set to: 1
 21970  01497C  B129               	btfsc	___fladd@b& (0+255),0,b
 21971                           
 21972                           ; BSR set to: 1
 21973  01497E  8F3C               	bsf	___fladd@grs& (0+255),7,b
 21974                           
 21975                           ; BSR set to: 1
 21976                           
 21977                           ; BSR set to: 1
 21978  014980  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 21979  014982  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 21980  014984  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 21981  014986  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 21982  014988  3329               	rrcf	___fladd@b& (0+255),f,b
 21983                           
 21984                           ; BSR set to: 1
 21985  01498A  2B3B               	incf	___fladd@bexp& (0+255),f,b
 21986                           
 21987                           ; BSR set to: 1
 21988  01498C  D070               	goto	u23280
 21989  01498E                     l2113:
 21990                           
 21991                           ; BSR set to: 1
 21992                           
 21993                           ; BSR set to: 1
 21994  01498E  512D               	movf	___fladd@a& (0+255),w,b
 21995  014990  5D29               	subwf	___fladd@b& (0+255),w,b
 21996  014992  512E               	movf	(___fladd@a+1)& (0+255),w,b
 21997  014994  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 21998  014996  512F               	movf	(___fladd@a+2)& (0+255),w,b
 21999  014998  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 22000  01499A  512C               	movf	(___fladd@b+3)& (0+255),w,b
 22001  01499C  0A80               	xorlw	128
 22002  01499E  6F31               	movwf	??___fladd& (0+255),b
 22003  0149A0  5130               	movf	(___fladd@a+3)& (0+255),w,b
 22004  0149A2  0A80               	xorlw	128
 22005  0149A4  5931               	subwfb	??___fladd& (0+255),w,b
 22006  0149A6  B0D8               	btfsc	status,0,c
 22007  0149A8  D036               	goto	l2121
 22008                           
 22009                           ; BSR set to: 1
 22010  0149AA  C129  F131         	movff	___fladd@b,??___fladd
 22011  0149AE  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 22012  0149B2  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 22013  0149B6  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 22014  0149BA  1F31               	comf	??___fladd& (0+255),f,b
 22015  0149BC  1F32               	comf	(??___fladd+1)& (0+255),f,b
 22016  0149BE  1F33               	comf	(??___fladd+2)& (0+255),f,b
 22017  0149C0  1F34               	comf	(??___fladd+3)& (0+255),f,b
 22018  0149C2  2B31               	incf	??___fladd& (0+255),f,b
 22019  0149C4  0E00               	movlw	0
 22020  0149C6  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 22021  0149C8  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 22022  0149CA  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 22023  0149CC  512D               	movf	___fladd@a& (0+255),w,b
 22024  0149CE  2531               	addwf	??___fladd& (0+255),w,b
 22025  0149D0  6F35               	movwf	(??___fladd+4)& (0+255),b
 22026  0149D2  512E               	movf	(___fladd@a+1)& (0+255),w,b
 22027  0149D4  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 22028  0149D6  6F36               	movwf	(??___fladd+5)& (0+255),b
 22029  0149D8  512F               	movf	(___fladd@a+2)& (0+255),w,b
 22030  0149DA  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 22031  0149DC  6F37               	movwf	(??___fladd+6)& (0+255),b
 22032  0149DE  5130               	movf	(___fladd@a+3)& (0+255),w,b
 22033  0149E0  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 22034  0149E2  6F38               	movwf	(??___fladd+7)& (0+255),b
 22035  0149E4  0EFF               	movlw	255
 22036  0149E6  2535               	addwf	(??___fladd+4)& (0+255),w,b
 22037  0149E8  6F29               	movwf	___fladd@b& (0+255),b
 22038  0149EA  0EFF               	movlw	255
 22039  0149EC  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 22040  0149EE  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 22041  0149F0  0EFF               	movlw	255
 22042  0149F2  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 22043  0149F4  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 22044  0149F6  0EFF               	movlw	255
 22045  0149F8  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 22046  0149FA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22047  0149FC  0E80               	movlw	128
 22048  0149FE  1B39               	xorwf	___fladd@signs& (0+255),f,b
 22049                           
 22050                           ; BSR set to: 1
 22051  014A00  6D3C               	negf	___fladd@grs& (0+255),b
 22052                           
 22053                           ; BSR set to: 1
 22054  014A02  513C               	movf	___fladd@grs& (0+255),w,b
 22055  014A04  A4D8               	btfss	status,2,c
 22056  014A06  D00F               	goto	l2123
 22057                           
 22058                           ; BSR set to: 1
 22059  014A08  0E01               	movlw	1
 22060  014A0A  2729               	addwf	___fladd@b& (0+255),f,b
 22061  014A0C  0E00               	movlw	0
 22062  014A0E  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 22063  014A10  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 22064  014A12  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 22065                           
 22066                           ; BSR set to: 1
 22067  014A14  D008               	goto	l2123
 22068  014A16                     l2121:
 22069                           
 22070                           ; BSR set to: 1
 22071                           
 22072                           ; BSR set to: 1
 22073  014A16  512D               	movf	___fladd@a& (0+255),w,b
 22074  014A18  5F29               	subwf	___fladd@b& (0+255),f,b
 22075  014A1A  512E               	movf	(___fladd@a+1)& (0+255),w,b
 22076  014A1C  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 22077  014A1E  512F               	movf	(___fladd@a+2)& (0+255),w,b
 22078  014A20  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 22079  014A22  5130               	movf	(___fladd@a+3)& (0+255),w,b
 22080  014A24  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 22081  014A26                     l2123:
 22082                           
 22083                           ; BSR set to: 1
 22084  014A26  5129               	movf	___fladd@b& (0+255),w,b
 22085  014A28  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 22086  014A2A  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 22087  014A2C  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 22088  014A2E  A4D8               	btfss	status,2,c
 22089  014A30  D01C               	goto	l2130
 22090                           
 22091                           ; BSR set to: 1
 22092  014A32  513C               	movf	___fladd@grs& (0+255),w,b
 22093  014A34  A4D8               	btfss	status,2,c
 22094  014A36  D019               	goto	l2130
 22095                           
 22096                           ; BSR set to: 1
 22097  014A38  0E00               	movlw	0
 22098  014A3A  6F29               	movwf	?___fladd& (0+255),b
 22099  014A3C  0E00               	movlw	0
 22100  014A3E  6F2A               	movwf	(?___fladd+1)& (0+255),b
 22101  014A40  0E00               	movlw	0
 22102  014A42  6F2B               	movwf	(?___fladd+2)& (0+255),b
 22103  014A44  0E00               	movlw	0
 22104  014A46  6F2C               	movwf	(?___fladd+3)& (0+255),b
 22105                           
 22106                           ; BSR set to: 1
 22107  014A48  0012               	return	
 22108  014A4A                     
 22109                           ; BSR set to: 1
 22110                           
 22111                           ; BSR set to: 1
 22112  014A4A  90D8               	bcf	status,0,c
 22113  014A4C  3729               	rlcf	___fladd@b& (0+255),f,b
 22114  014A4E  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 22115  014A50  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 22116  014A52  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 22117                           
 22118                           ; BSR set to: 1
 22119  014A54  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 22120                           
 22121                           ; BSR set to: 1
 22122  014A56  8129               	bsf	___fladd@b& (0+255),0,b
 22123                           
 22124                           ; BSR set to: 1
 22125                           
 22126                           ; BSR set to: 1
 22127  014A58  A13C               	btfss	___fladd@grs& (0+255),0,b
 22128  014A5A  D002               	goto	l2128
 22129                           
 22130                           ; BSR set to: 1
 22131  014A5C  80D8               	bsf	status,0,c
 22132  014A5E  D001               	goto	L8
 22133  014A60                     l2128:
 22134                           
 22135                           ; BSR set to: 1
 22136                           
 22137                           ; BSR set to: 1
 22138  014A60  90D8               	bcf	status,0,c
 22139  014A62                     L8:
 22140  014A62  373C               	rlcf	___fladd@grs& (0+255),f,b
 22141                           
 22142                           ; BSR set to: 1
 22143                           
 22144                           ; BSR set to: 1
 22145  014A64  513B               	movf	___fladd@bexp& (0+255),w,b
 22146  014A66  A4D8               	btfss	status,2,c
 22147                           
 22148                           ; BSR set to: 1
 22149  014A68  073B               	decf	___fladd@bexp& (0+255),f,b
 22150  014A6A                     l2130:
 22151                           
 22152                           ; BSR set to: 1
 22153                           
 22154                           ; BSR set to: 1
 22155                           
 22156                           ; BSR set to: 1
 22157  014A6A  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 22158  014A6C  D7EE               	goto	l2126
 22159  014A6E                     u23280:
 22160                           
 22161                           ; BSR set to: 1
 22162                           
 22163                           ; BSR set to: 1
 22164                           
 22165                           ; BSR set to: 1
 22166  014A6E  0E00               	movlw	0
 22167  014A70  6F3A               	movwf	___fladd@aexp& (0+255),b
 22168                           
 22169                           ; BSR set to: 1
 22170  014A72  AF3C               	btfss	___fladd@grs& (0+255),7,b
 22171  014A74  D00A               	goto	l2135
 22172                           
 22173                           ; BSR set to: 1
 22174  014A76  C13C  F131         	movff	___fladd@grs,??___fladd
 22175  014A7A  0E7F               	movlw	127
 22176  014A7C  1731               	andwf	??___fladd& (0+255),f,b
 22177  014A7E  A4D8               	btfss	status,2,c
 22178  014A80  D002               	goto	u23310
 22179                           
 22180                           ; BSR set to: 1
 22181                           
 22182                           ; BSR set to: 1
 22183  014A82  A129               	btfss	___fladd@b& (0+255),0,b
 22184  014A84  D002               	goto	l2135
 22185  014A86                     u23310:
 22186                           
 22187                           ; BSR set to: 1
 22188  014A86  0E01               	movlw	1
 22189  014A88  6F3A               	movwf	___fladd@aexp& (0+255),b
 22190  014A8A                     l2135:
 22191                           
 22192                           ; BSR set to: 1
 22193                           
 22194                           ; BSR set to: 1
 22195                           
 22196                           ; BSR set to: 1
 22197  014A8A  513A               	movf	___fladd@aexp& (0+255),w,b
 22198  014A8C  B4D8               	btfsc	status,2,c
 22199  014A8E  D020               	goto	l2138
 22200                           
 22201                           ; BSR set to: 1
 22202  014A90  0E01               	movlw	1
 22203  014A92  2729               	addwf	___fladd@b& (0+255),f,b
 22204  014A94  0E00               	movlw	0
 22205  014A96  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 22206  014A98  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 22207  014A9A  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 22208                           
 22209                           ; BSR set to: 1
 22210  014A9C  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 22211  014A9E  D018               	goto	l2138
 22212                           
 22213                           ; BSR set to: 1
 22214  014AA0  C129  F131         	movff	___fladd@b,??___fladd
 22215  014AA4  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 22216  014AA8  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 22217  014AAC  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 22218  014AB0  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 22219  014AB2  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 22220  014AB4  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 22221  014AB6  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 22222  014AB8  3331               	rrcf	??___fladd& (0+255),f,b
 22223  014ABA  C131  F129         	movff	??___fladd,___fladd@b
 22224  014ABE  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 22225  014AC2  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 22226  014AC6  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 22227  014ACA  293B               	incf	___fladd@bexp& (0+255),w,b
 22228  014ACC  A4D8               	btfss	status,2,c
 22229                           
 22230                           ; BSR set to: 1
 22231  014ACE  2B3B               	incf	___fladd@bexp& (0+255),f,b
 22232  014AD0                     l2138:
 22233                           
 22234                           ; BSR set to: 1
 22235                           
 22236                           ; BSR set to: 1
 22237                           
 22238                           ; BSR set to: 1
 22239                           
 22240                           ; BSR set to: 1
 22241  014AD0  293B               	incf	___fladd@bexp& (0+255),w,b
 22242  014AD2  B4D8               	btfsc	status,2,c
 22243  014AD4  D003               	goto	u23360
 22244                           
 22245                           ; BSR set to: 1
 22246  014AD6  513B               	movf	___fladd@bexp& (0+255),w,b
 22247  014AD8  A4D8               	btfss	status,2,c
 22248  014ADA  D00D               	goto	l2142
 22249  014ADC                     u23360:
 22250                           
 22251                           ; BSR set to: 1
 22252                           
 22253                           ; BSR set to: 1
 22254  014ADC  0E00               	movlw	0
 22255  014ADE  6F29               	movwf	___fladd@b& (0+255),b
 22256  014AE0  0E00               	movlw	0
 22257  014AE2  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 22258  014AE4  0E00               	movlw	0
 22259  014AE6  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 22260  014AE8  0E00               	movlw	0
 22261  014AEA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22262  014AEC  513B               	movf	___fladd@bexp& (0+255),w,b
 22263  014AEE  A4D8               	btfss	status,2,c
 22264  014AF0  D002               	goto	l2142
 22265                           
 22266                           ; BSR set to: 1
 22267  014AF2  0E00               	movlw	0
 22268  014AF4  6F39               	movwf	___fladd@signs& (0+255),b
 22269  014AF6                     l2142:
 22270                           
 22271                           ; BSR set to: 1
 22272                           
 22273                           ; BSR set to: 1
 22274                           
 22275                           ; BSR set to: 1
 22276  014AF6  A13B               	btfss	___fladd@bexp& (0+255),0,b
 22277  014AF8  D002               	goto	l2143
 22278                           
 22279                           ; BSR set to: 1
 22280  014AFA  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 22281  014AFC  D001               	goto	l2144
 22282  014AFE                     l2143:
 22283                           
 22284                           ; BSR set to: 1
 22285                           
 22286                           ; BSR set to: 1
 22287  014AFE  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 22288  014B00                     l2144:
 22289                           
 22290                           ; BSR set to: 1
 22291                           
 22292                           ; BSR set to: 1
 22293  014B00  90D8               	bcf	status,0,c
 22294  014B02  313B               	rrcf	___fladd@bexp& (0+255),w,b
 22295  014B04  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22296                           
 22297                           ; BSR set to: 1
 22298  014B06  BF39               	btfsc	___fladd@signs& (0+255),7,b
 22299                           
 22300                           ; BSR set to: 1
 22301  014B08  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 22302                           
 22303                           ; BSR set to: 1
 22304                           
 22305                           ; BSR set to: 1
 22306  014B0A  C129  F129         	movff	___fladd@b,?___fladd
 22307  014B0E  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 22308  014B12  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 22309  014B16  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 22310  014B1A  0012               	return	
 22311  014B1C                     __end_of___fladd:
 22312                           	opt stack 0
 22313                           tblptru	equ	0xFF8
 22314                           tblptrh	equ	0xFF7
 22315                           tblptrl	equ	0xFF6
 22316                           tablat	equ	0xFF5
 22317                           prodh	equ	0xFF4
 22318                           prodl	equ	0xFF3
 22319                           intcon	equ	0xFF2
 22320                           indf0	equ	0xFEF
 22321                           postinc0	equ	0xFEE
 22322                           fsr0h	equ	0xFEA
 22323                           fsr0l	equ	0xFE9
 22324                           wreg	equ	0xFE8
 22325                           indf1	equ	0xFE7
 22326                           postdec1	equ	0xFE5
 22327                           plusw1	equ	0xFE3
 22328                           fsr1h	equ	0xFE2
 22329                           fsr1l	equ	0xFE1
 22330                           indf2	equ	0xFDF
 22331                           postinc2	equ	0xFDE
 22332                           postdec2	equ	0xFDD
 22333                           plusw2	equ	0xFDB
 22334                           fsr2h	equ	0xFDA
 22335                           fsr2l	equ	0xFD9
 22336                           status	equ	0xFD8
 22337                           
 22338 ;; *************** function ___flneg *****************
 22339 ;; Defined at:
 22340 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;  f1              4   37[BANK1 ] unsigned char 
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;		None
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  4   37[BANK1 ] unsigned char 
 22347 ;; Registers used:
 22348 ;;		wreg, status,2, status,0
 22349 ;; Tracked objects:
 22350 ;;		On entry : 0/0
 22351 ;;		On exit  : 0/0
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22354 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22357 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22358 ;;Total ram usage:        4 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; Hardware stack levels required when called:   13
 22361 ;; This function calls:
 22362 ;;		Nothing
 22363 ;; This function is called by:
 22364 ;;		_ringBufferLUT
 22365 ;;		_printf
 22366 ;; This function uses a non-reentrant model
 22367 ;;
 22368                           
 22369                           	psect	text50
 22370  0188EA                     __ptext50:
 22371                           	opt stack 0
 22372  0188EA                     ___flneg:
 22373                           	opt stack 14
 22374                           
 22375                           ; BSR set to: 1
 22376                           ;incstack = 0
 22377  0188EA  0101               	movlb	1	; () banked
 22378  0188EC  5125               	movf	___flneg@f1& (0+255),w,b
 22379  0188EE  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 22380  0188F0  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 22381  0188F2  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 22382  0188F4  B4D8               	btfsc	status,2,c
 22383  0188F6  D008               	goto	l1832
 22384                           
 22385                           ; BSR set to: 1
 22386  0188F8  0E00               	movlw	0
 22387  0188FA  1B25               	xorwf	___flneg@f1& (0+255),f,b
 22388  0188FC  0E00               	movlw	0
 22389  0188FE  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 22390  018900  0E00               	movlw	0
 22391  018902  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 22392  018904  0E80               	movlw	128
 22393  018906  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 22394  018908                     l1832:
 22395                           
 22396                           ; BSR set to: 1
 22397                           
 22398                           ; BSR set to: 1
 22399  018908  C125  F125         	movff	___flneg@f1,?___flneg
 22400  01890C  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 22401  018910  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 22402  018914  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 22403  018918  0012               	return	
 22404  01891A                     __end_of___flneg:
 22405                           	opt stack 0
 22406                           tblptru	equ	0xFF8
 22407                           tblptrh	equ	0xFF7
 22408                           tblptrl	equ	0xFF6
 22409                           tablat	equ	0xFF5
 22410                           prodh	equ	0xFF4
 22411                           prodl	equ	0xFF3
 22412                           intcon	equ	0xFF2
 22413                           indf0	equ	0xFEF
 22414                           postinc0	equ	0xFEE
 22415                           fsr0h	equ	0xFEA
 22416                           fsr0l	equ	0xFE9
 22417                           wreg	equ	0xFE8
 22418                           indf1	equ	0xFE7
 22419                           postdec1	equ	0xFE5
 22420                           plusw1	equ	0xFE3
 22421                           fsr1h	equ	0xFE2
 22422                           fsr1l	equ	0xFE1
 22423                           indf2	equ	0xFDF
 22424                           postinc2	equ	0xFDE
 22425                           postdec2	equ	0xFDD
 22426                           plusw2	equ	0xFDB
 22427                           fsr2h	equ	0xFDA
 22428                           fsr2l	equ	0xFD9
 22429                           status	equ	0xFD8
 22430                           
 22431 ;; *************** function ___flge *****************
 22432 ;; Defined at:
 22433 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 22434 ;; Parameters:    Size  Location     Type
 22435 ;;  ff1             4   23[BANK1 ] unsigned char 
 22436 ;;  ff2             4   27[BANK1 ] unsigned char 
 22437 ;; Auto vars:     Size  Location     Type
 22438 ;;		None
 22439 ;; Return value:  Size  Location     Type
 22440 ;;		None               void
 22441 ;; Registers used:
 22442 ;;		wreg, status,2, status,0
 22443 ;; Tracked objects:
 22444 ;;		On entry : 0/0
 22445 ;;		On exit  : 0/0
 22446 ;;		Unchanged: 0/0
 22447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22448 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22450 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22451 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22452 ;;Total ram usage:       12 bytes
 22453 ;; Hardware stack levels used:    1
 22454 ;; Hardware stack levels required when called:   13
 22455 ;; This function calls:
 22456 ;;		Nothing
 22457 ;; This function is called by:
 22458 ;;		_main
 22459 ;;		_printf
 22460 ;; This function uses a non-reentrant model
 22461 ;;
 22462                           
 22463                           	psect	text51
 22464  0170AA                     __ptext51:
 22465                           	opt stack 0
 22466  0170AA                     ___flge:
 22467                           	opt stack 14
 22468                           
 22469                           ; BSR set to: 1
 22470                           ;incstack = 0
 22471  0170AA  0E00               	movlw	0
 22472  0170AC  0101               	movlb	1	; () banked
 22473  0170AE  1517               	andwf	___flge@ff1& (0+255),w,b
 22474  0170B0  6F1F               	movwf	??___flge& (0+255),b
 22475  0170B2  0E00               	movlw	0
 22476  0170B4  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 22477  0170B6  6F20               	movwf	(??___flge+1)& (0+255),b
 22478  0170B8  0E80               	movlw	128
 22479  0170BA  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 22480  0170BC  6F21               	movwf	(??___flge+2)& (0+255),b
 22481  0170BE  0E7F               	movlw	127
 22482  0170C0  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 22483  0170C2  6F22               	movwf	(??___flge+3)& (0+255),b
 22484  0170C4  511F               	movf	??___flge& (0+255),w,b
 22485  0170C6  1120               	iorwf	(??___flge+1)& (0+255),w,b
 22486  0170C8  1121               	iorwf	(??___flge+2)& (0+255),w,b
 22487  0170CA  1122               	iorwf	(??___flge+3)& (0+255),w,b
 22488  0170CC  A4D8               	btfss	status,2,c
 22489  0170CE  D008               	goto	l1825
 22490                           
 22491                           ; BSR set to: 1
 22492  0170D0  0E00               	movlw	0
 22493  0170D2  6F17               	movwf	___flge@ff1& (0+255),b
 22494  0170D4  0E00               	movlw	0
 22495  0170D6  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 22496  0170D8  0E00               	movlw	0
 22497  0170DA  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 22498  0170DC  0E00               	movlw	0
 22499  0170DE  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 22500  0170E0                     l1825:
 22501                           
 22502                           ; BSR set to: 1
 22503                           
 22504                           ; BSR set to: 1
 22505  0170E0  0E00               	movlw	0
 22506  0170E2  151B               	andwf	___flge@ff2& (0+255),w,b
 22507  0170E4  6F1F               	movwf	??___flge& (0+255),b
 22508  0170E6  0E00               	movlw	0
 22509  0170E8  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 22510  0170EA  6F20               	movwf	(??___flge+1)& (0+255),b
 22511  0170EC  0E80               	movlw	128
 22512  0170EE  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 22513  0170F0  6F21               	movwf	(??___flge+2)& (0+255),b
 22514  0170F2  0E7F               	movlw	127
 22515  0170F4  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 22516  0170F6  6F22               	movwf	(??___flge+3)& (0+255),b
 22517  0170F8  511F               	movf	??___flge& (0+255),w,b
 22518  0170FA  1120               	iorwf	(??___flge+1)& (0+255),w,b
 22519  0170FC  1121               	iorwf	(??___flge+2)& (0+255),w,b
 22520  0170FE  1122               	iorwf	(??___flge+3)& (0+255),w,b
 22521  017100  A4D8               	btfss	status,2,c
 22522  017102  D008               	goto	l1826
 22523                           
 22524                           ; BSR set to: 1
 22525  017104  0E00               	movlw	0
 22526  017106  6F1B               	movwf	___flge@ff2& (0+255),b
 22527  017108  0E00               	movlw	0
 22528  01710A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 22529  01710C  0E00               	movlw	0
 22530  01710E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 22531  017110  0E00               	movlw	0
 22532  017112  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 22533  017114                     l1826:
 22534                           
 22535                           ; BSR set to: 1
 22536                           
 22537                           ; BSR set to: 1
 22538  017114  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 22539  017116  D01D               	goto	l1827
 22540                           
 22541                           ; BSR set to: 1
 22542  017118  C117  F11F         	movff	___flge@ff1,??___flge
 22543  01711C  C118  F120         	movff	___flge@ff1+1,??___flge+1
 22544  017120  C119  F121         	movff	___flge@ff1+2,??___flge+2
 22545  017124  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 22546  017128  1F1F               	comf	??___flge& (0+255),f,b
 22547  01712A  1F20               	comf	(??___flge+1)& (0+255),f,b
 22548  01712C  1F21               	comf	(??___flge+2)& (0+255),f,b
 22549  01712E  1F22               	comf	(??___flge+3)& (0+255),f,b
 22550  017130  2B1F               	incf	??___flge& (0+255),f,b
 22551  017132  0E00               	movlw	0
 22552  017134  2320               	addwfc	(??___flge+1)& (0+255),f,b
 22553  017136  2321               	addwfc	(??___flge+2)& (0+255),f,b
 22554  017138  2322               	addwfc	(??___flge+3)& (0+255),f,b
 22555  01713A  0E00               	movlw	0
 22556  01713C  251F               	addwf	??___flge& (0+255),w,b
 22557  01713E  6F17               	movwf	___flge@ff1& (0+255),b
 22558  017140  0E00               	movlw	0
 22559  017142  2120               	addwfc	(??___flge+1)& (0+255),w,b
 22560  017144  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 22561  017146  0E00               	movlw	0
 22562  017148  2121               	addwfc	(??___flge+2)& (0+255),w,b
 22563  01714A  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 22564  01714C  0E80               	movlw	128
 22565  01714E  2122               	addwfc	(??___flge+3)& (0+255),w,b
 22566  017150  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 22567  017152                     l1827:
 22568                           
 22569                           ; BSR set to: 1
 22570                           
 22571                           ; BSR set to: 1
 22572  017152  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 22573  017154  D01D               	goto	l1828
 22574                           
 22575                           ; BSR set to: 1
 22576  017156  C11B  F11F         	movff	___flge@ff2,??___flge
 22577  01715A  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 22578  01715E  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 22579  017162  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 22580  017166  1F1F               	comf	??___flge& (0+255),f,b
 22581  017168  1F20               	comf	(??___flge+1)& (0+255),f,b
 22582  01716A  1F21               	comf	(??___flge+2)& (0+255),f,b
 22583  01716C  1F22               	comf	(??___flge+3)& (0+255),f,b
 22584  01716E  2B1F               	incf	??___flge& (0+255),f,b
 22585  017170  0E00               	movlw	0
 22586  017172  2320               	addwfc	(??___flge+1)& (0+255),f,b
 22587  017174  2321               	addwfc	(??___flge+2)& (0+255),f,b
 22588  017176  2322               	addwfc	(??___flge+3)& (0+255),f,b
 22589  017178  0E00               	movlw	0
 22590  01717A  251F               	addwf	??___flge& (0+255),w,b
 22591  01717C  6F1B               	movwf	___flge@ff2& (0+255),b
 22592  01717E  0E00               	movlw	0
 22593  017180  2120               	addwfc	(??___flge+1)& (0+255),w,b
 22594  017182  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 22595  017184  0E00               	movlw	0
 22596  017186  2121               	addwfc	(??___flge+2)& (0+255),w,b
 22597  017188  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 22598  01718A  0E80               	movlw	128
 22599  01718C  2122               	addwfc	(??___flge+3)& (0+255),w,b
 22600  01718E  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 22601  017190                     l1828:
 22602                           
 22603                           ; BSR set to: 1
 22604  017190  0E00               	movlw	0
 22605  017192  1B17               	xorwf	___flge@ff1& (0+255),f,b
 22606  017194  0E00               	movlw	0
 22607  017196  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 22608  017198  0E00               	movlw	0
 22609  01719A  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 22610  01719C  0E80               	movlw	128
 22611  01719E  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 22612  0171A0  0E00               	movlw	0
 22613  0171A2  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 22614  0171A4  0E00               	movlw	0
 22615  0171A6  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 22616  0171A8  0E00               	movlw	0
 22617  0171AA  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 22618  0171AC  0E80               	movlw	128
 22619  0171AE  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 22620  0171B0  511B               	movf	___flge@ff2& (0+255),w,b
 22621  0171B2  5D17               	subwf	___flge@ff1& (0+255),w,b
 22622  0171B4  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 22623  0171B6  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 22624  0171B8  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 22625  0171BA  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 22626  0171BC  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 22627  0171BE  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 22628  0171C0  B0D8               	btfsc	status,0,c
 22629  0171C2  D002               	goto	l17452
 22630                           
 22631                           ; BSR set to: 1
 22632  0171C4  90D8               	bcf	status,0,c
 22633  0171C6  0012               	return	
 22634  0171C8                     l17452:
 22635                           
 22636                           ; BSR set to: 1
 22637                           
 22638                           ; BSR set to: 1
 22639  0171C8  80D8               	bsf	status,0,c
 22640                           
 22641                           ; BSR set to: 1
 22642  0171CA  0012               	return	
 22643  0171CC                     __end_of___flge:
 22644                           	opt stack 0
 22645                           tblptru	equ	0xFF8
 22646                           tblptrh	equ	0xFF7
 22647                           tblptrl	equ	0xFF6
 22648                           tablat	equ	0xFF5
 22649                           prodh	equ	0xFF4
 22650                           prodl	equ	0xFF3
 22651                           intcon	equ	0xFF2
 22652                           indf0	equ	0xFEF
 22653                           postinc0	equ	0xFEE
 22654                           fsr0h	equ	0xFEA
 22655                           fsr0l	equ	0xFE9
 22656                           wreg	equ	0xFE8
 22657                           indf1	equ	0xFE7
 22658                           postdec1	equ	0xFE5
 22659                           plusw1	equ	0xFE3
 22660                           fsr1h	equ	0xFE2
 22661                           fsr1l	equ	0xFE1
 22662                           indf2	equ	0xFDF
 22663                           postinc2	equ	0xFDE
 22664                           postdec2	equ	0xFDD
 22665                           plusw2	equ	0xFDB
 22666                           fsr2h	equ	0xFDA
 22667                           fsr2l	equ	0xFD9
 22668                           status	equ	0xFD8
 22669                           
 22670 ;; *************** function _getCauseOfReset *****************
 22671 ;; Defined at:
 22672 ;;		line 11 in file "cause_of_reset.c"
 22673 ;; Parameters:    Size  Location     Type
 22674 ;;		None
 22675 ;; Auto vars:     Size  Location     Type
 22676 ;;  return_reset    1   23[BANK1 ] enum E17455
 22677 ;; Return value:  Size  Location     Type
 22678 ;;                  1    wreg      enum E17948
 22679 ;; Registers used:
 22680 ;;		wreg, status,2
 22681 ;; Tracked objects:
 22682 ;;		On entry : 0/0
 22683 ;;		On exit  : 0/0
 22684 ;;		Unchanged: 0/0
 22685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22687 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22689 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22690 ;;Total ram usage:        1 bytes
 22691 ;; Hardware stack levels used:    1
 22692 ;; Hardware stack levels required when called:   13
 22693 ;; This function calls:
 22694 ;;		Nothing
 22695 ;; This function is called by:
 22696 ;;		_main
 22697 ;; This function uses a non-reentrant model
 22698 ;;
 22699                           
 22700                           	psect	text52
 22701  0182BC                     __ptext52:
 22702                           	opt stack 0
 22703  0182BC                     _getCauseOfReset:
 22704                           	opt stack 17
 22705                           
 22706                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 22707                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 22708                           
 22709                           ; BSR set to: 1
 22710                           ;incstack = 0
 22711  0182BC  AED7               	btfss	4055,7,c	;volatile
 22712  0182BE  D002               	goto	l1330
 22713                           
 22714                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 22715  0182C0  0E07               	movlw	7
 22716  0182C2  D019               	goto	L15
 22717  0182C4                     l1330:
 22718                           
 22719                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 22720  0182C4  ACD7               	btfss	4055,6,c	;volatile
 22721  0182C6  D002               	goto	l1332
 22722                           
 22723                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 22724  0182C8  0E08               	movlw	8
 22725  0182CA  D015               	goto	L15
 22726  0182CC                     l1332:
 22727                           
 22728                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 22729  0182CC  BAD7               	btfsc	4055,5,c	;volatile
 22730  0182CE  D002               	goto	l1334
 22731                           
 22732                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 22733  0182D0  0E05               	movlw	5
 22734  0182D2  D011               	goto	L15
 22735  0182D4                     l1334:
 22736                           
 22737                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 22738  0182D4  B6D7               	btfsc	4055,3,c	;volatile
 22739  0182D6  D002               	goto	l1336
 22740                           
 22741                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 22742  0182D8  0E03               	movlw	3
 22743  0182DA  D00D               	goto	L15
 22744  0182DC                     l1336:
 22745                           
 22746                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 22747  0182DC  B4D7               	btfsc	4055,2,c	;volatile
 22748  0182DE  D002               	goto	l1338
 22749                           
 22750                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 22751  0182E0  0E06               	movlw	6
 22752  0182E2  D009               	goto	L15
 22753  0182E4                     l1338:
 22754                           
 22755                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 22756  0182E4  B2D7               	btfsc	4055,1,c	;volatile
 22757  0182E6  D002               	goto	l1340
 22758                           
 22759                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 22760  0182E8  0E01               	movlw	1
 22761  0182EA  D005               	goto	L15
 22762  0182EC                     l1340:
 22763                           
 22764                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 22765  0182EC  B0D7               	btfsc	4055,0,c	;volatile
 22766  0182EE  D002               	goto	l1342
 22767                           
 22768                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 22769  0182F0  0E02               	movlw	2
 22770  0182F2  D001               	goto	L15
 22771  0182F4                     l1342:
 22772                           
 22773                           ;cause_of_reset.c: 60: else {
 22774                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 22775                           
 22776                           ; BSR set to: 1
 22777  0182F4  0E00               	movlw	0
 22778  0182F6                     L15:
 22779  0182F6  0101               	movlb	1	; () banked
 22780  0182F8  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 22781                           
 22782                           ; BSR set to: 1
 22783                           ;cause_of_reset.c: 64: }
 22784                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 22785                           
 22786                           ; BSR set to: 1
 22787                           
 22788                           ; BSR set to: 1
 22789                           
 22790                           ; BSR set to: 1
 22791                           
 22792                           ; BSR set to: 1
 22793                           
 22794                           ; BSR set to: 1
 22795                           
 22796                           ; BSR set to: 1
 22797                           
 22798                           ; BSR set to: 1
 22799  0182FA  9ED7               	bcf	4055,7,c	;volatile
 22800                           
 22801                           ; BSR set to: 1
 22802                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 22803  0182FC  9CD7               	bcf	4055,6,c	;volatile
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 22807  0182FE  8AD7               	bsf	4055,5,c	;volatile
 22808                           
 22809                           ; BSR set to: 1
 22810                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 22811  018300  88D7               	bsf	4055,4,c	;volatile
 22812                           
 22813                           ; BSR set to: 1
 22814                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 22815  018302  86D7               	bsf	4055,3,c	;volatile
 22816                           
 22817                           ; BSR set to: 1
 22818                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 22819  018304  84D7               	bsf	4055,2,c	;volatile
 22820                           
 22821                           ; BSR set to: 1
 22822                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 22823  018306  82D7               	bsf	4055,1,c	;volatile
 22824                           
 22825                           ; BSR set to: 1
 22826                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 22827  018308  80D7               	bsf	4055,0,c	;volatile
 22828                           
 22829                           ;cause_of_reset.c: 76: return return_reset_cause;
 22830  01830A  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 22831  01830C  0012               	return	
 22832  01830E                     __end_of_getCauseOfReset:
 22833                           	opt stack 0
 22834                           tblptru	equ	0xFF8
 22835                           tblptrh	equ	0xFF7
 22836                           tblptrl	equ	0xFF6
 22837                           tablat	equ	0xFF5
 22838                           prodh	equ	0xFF4
 22839                           prodl	equ	0xFF3
 22840                           intcon	equ	0xFF2
 22841                           indf0	equ	0xFEF
 22842                           postinc0	equ	0xFEE
 22843                           fsr0h	equ	0xFEA
 22844                           fsr0l	equ	0xFE9
 22845                           wreg	equ	0xFE8
 22846                           indf1	equ	0xFE7
 22847                           postdec1	equ	0xFE5
 22848                           plusw1	equ	0xFE3
 22849                           fsr1h	equ	0xFE2
 22850                           fsr1l	equ	0xFE1
 22851                           indf2	equ	0xFDF
 22852                           postinc2	equ	0xFDE
 22853                           postdec2	equ	0xFDD
 22854                           plusw2	equ	0xFDB
 22855                           fsr2h	equ	0xFDA
 22856                           fsr2l	equ	0xFD9
 22857                           status	equ	0xFD8
 22858                           
 22859 ;; *************** function _SYSTEM_Initialize *****************
 22860 ;; Defined at:
 22861 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22862 ;; Parameters:    Size  Location     Type
 22863 ;;		None
 22864 ;; Auto vars:     Size  Location     Type
 22865 ;;		None
 22866 ;; Return value:  Size  Location     Type
 22867 ;;                  1    wreg      void 
 22868 ;; Registers used:
 22869 ;;		wreg, status,2, status,0, cstack
 22870 ;; Tracked objects:
 22871 ;;		On entry : 0/0
 22872 ;;		On exit  : 0/0
 22873 ;;		Unchanged: 0/0
 22874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22879 ;;Total ram usage:        0 bytes
 22880 ;; Hardware stack levels used:    1
 22881 ;; Hardware stack levels required when called:   15
 22882 ;; This function calls:
 22883 ;;		_ADCC_Initialize
 22884 ;;		_EUSART2_Initialize
 22885 ;;		_FVR_Initialize
 22886 ;;		_HLVD_Initialize
 22887 ;;		_INTERRUPT_Initialize
 22888 ;;		_OSCILLATOR_Initialize
 22889 ;;		_PIN_MANAGER_Initialize
 22890 ;;		_PMD_Initialize
 22891 ;;		_TMR5_Initialize
 22892 ;;		_TMR6_Initialize
 22893 ;;		_TMR7_Initialize
 22894 ;; This function is called by:
 22895 ;;		_main
 22896 ;; This function uses a non-reentrant model
 22897 ;;
 22898                           
 22899                           	psect	text53
 22900  01891A                     __ptext53:
 22901                           	opt stack 0
 22902  01891A                     _SYSTEM_Initialize:
 22903                           	opt stack 15
 22904                           
 22905                           ;mcc.c: 52: INTERRUPT_Initialize();
 22906                           
 22907                           ; BSR set to: 1
 22908                           ;incstack = 0
 22909  01891A  ECCB  F0C5         	call	_INTERRUPT_Initialize	;wreg free
 22910                           
 22911                           ;mcc.c: 53: PMD_Initialize();
 22912  01891E  EC87  F0C5         	call	_PMD_Initialize	;wreg free
 22913                           
 22914                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 22915  018922  EC86  F0BC         	call	_PIN_MANAGER_Initialize	;wreg free
 22916                           
 22917                           ;mcc.c: 55: OSCILLATOR_Initialize();
 22918  018926  EC95  F0C5         	call	_OSCILLATOR_Initialize	;wreg free
 22919                           
 22920                           ;mcc.c: 56: HLVD_Initialize();
 22921  01892A  EC13  F0C6         	call	_HLVD_Initialize	;wreg free
 22922                           
 22923                           ;mcc.c: 57: FVR_Initialize();
 22924  01892E  EC5E  F0C6         	call	_FVR_Initialize	;wreg free
 22925                           
 22926                           ;mcc.c: 58: TMR7_Initialize();
 22927  018932  ECD7  F0C1         	call	_TMR7_Initialize	;wreg free
 22928                           
 22929                           ;mcc.c: 59: TMR6_Initialize();
 22930  018936  EC44  F0C4         	call	_TMR6_Initialize	;wreg free
 22931                           
 22932                           ;mcc.c: 60: ADCC_Initialize();
 22933  01893A  ECD9  F0C0         	call	_ADCC_Initialize	;wreg free
 22934                           
 22935                           ;mcc.c: 61: TMR5_Initialize();
 22936  01893E  EC4A  F0C2         	call	_TMR5_Initialize	;wreg free
 22937                           
 22938                           ;mcc.c: 62: EUSART2_Initialize();
 22939  018942  ECD9  F0BF         	call	_EUSART2_Initialize	;wreg free
 22940  018946  0012               	return		;funcret
 22941  018948                     __end_of_SYSTEM_Initialize:
 22942                           	opt stack 0
 22943                           tblptru	equ	0xFF8
 22944                           tblptrh	equ	0xFF7
 22945                           tblptrl	equ	0xFF6
 22946                           tablat	equ	0xFF5
 22947                           prodh	equ	0xFF4
 22948                           prodl	equ	0xFF3
 22949                           intcon	equ	0xFF2
 22950                           indf0	equ	0xFEF
 22951                           postinc0	equ	0xFEE
 22952                           fsr0h	equ	0xFEA
 22953                           fsr0l	equ	0xFE9
 22954                           wreg	equ	0xFE8
 22955                           indf1	equ	0xFE7
 22956                           postdec1	equ	0xFE5
 22957                           plusw1	equ	0xFE3
 22958                           fsr1h	equ	0xFE2
 22959                           fsr1l	equ	0xFE1
 22960                           indf2	equ	0xFDF
 22961                           postinc2	equ	0xFDE
 22962                           postdec2	equ	0xFDD
 22963                           plusw2	equ	0xFDB
 22964                           fsr2h	equ	0xFDA
 22965                           fsr2l	equ	0xFD9
 22966                           status	equ	0xFD8
 22967                           
 22968 ;; *************** function _TMR7_Initialize *****************
 22969 ;; Defined at:
 22970 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 22971 ;; Parameters:    Size  Location     Type
 22972 ;;		None
 22973 ;; Auto vars:     Size  Location     Type
 22974 ;;		None
 22975 ;; Return value:  Size  Location     Type
 22976 ;;                  1    wreg      void 
 22977 ;; Registers used:
 22978 ;;		wreg, status,2, status,0, cstack
 22979 ;; Tracked objects:
 22980 ;;		On entry : 0/0
 22981 ;;		On exit  : 0/0
 22982 ;;		Unchanged: 0/0
 22983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22986 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22987 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22988 ;;Total ram usage:        2 bytes
 22989 ;; Hardware stack levels used:    1
 22990 ;; Hardware stack levels required when called:   14
 22991 ;; This function calls:
 22992 ;;		_TMR7_SetInterruptHandler
 22993 ;; This function is called by:
 22994 ;;		_SYSTEM_Initialize
 22995 ;; This function uses a non-reentrant model
 22996 ;;
 22997                           
 22998                           	psect	text54
 22999  0183AE                     __ptext54:
 23000                           	opt stack 0
 23001  0183AE                     _TMR7_Initialize:
 23002                           	opt stack 15
 23003                           
 23004                           ;tmr7.c: 69: T7GCON = 0x00;
 23005                           
 23006                           ;incstack = 0
 23007  0183AE  0E00               	movlw	0
 23008  0183B0  010F               	movlb	15	; () banked
 23009  0183B2  6F31               	movwf	49,b	;volatile
 23010                           
 23011                           ;tmr7.c: 72: T7GATE = 0x00;
 23012  0183B4  0E00               	movlw	0
 23013  0183B6  6F32               	movwf	50,b	;volatile
 23014                           
 23015                           ;tmr7.c: 75: T7CLK = 0x03;
 23016  0183B8  0E03               	movlw	3
 23017  0183BA  6F33               	movwf	51,b	;volatile
 23018                           
 23019                           ;tmr7.c: 78: TMR7H = 0xEC;
 23020  0183BC  0EEC               	movlw	236
 23021  0183BE  6F2F               	movwf	47,b	;volatile
 23022                           
 23023                           ;tmr7.c: 81: TMR7L = 0x78;
 23024  0183C0  0E78               	movlw	120
 23025  0183C2  6F2E               	movwf	46,b	;volatile
 23026                           
 23027                           ; BSR set to: 15
 23028                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 23029  0183C4  512E               	movf	46,w,b	;volatile
 23030  0183C6  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 23031  0183CA  0101               	movlb	1	; () banked
 23032  0183CC  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 23033  0183CE  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 23034  0183D2  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 23035  0183D4  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 23036  0183D6  6FD9               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 23037  0183D8  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 23038  0183DA  6FDA               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 23039                           
 23040                           ; BSR set to: 1
 23041                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 23042  0183DC  010E               	movlb	14	; () banked
 23043  0183DE  9D38               	bcf	56,6,b	;volatile
 23044                           
 23045                           ; BSR set to: 14
 23046                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 23047  0183E0  8D2E               	bsf	46,6,b	;volatile
 23048                           
 23049                           ; BSR set to: 14
 23050                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 23051  0183E2  0EF0               	movlw	low _TMR7_DefaultInterruptHandler
 23052  0183E4  0101               	movlb	1	; () banked
 23053  0183E6  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 23054  0183E8  0E8C               	movlw	high _TMR7_DefaultInterruptHandler
 23055  0183EA  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 23056  0183EC  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 23057  0183EE  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 23058  0183F0  EC22  F0C6         	call	_TMR7_SetInterruptHandler	;wreg free
 23059                           
 23060                           ;tmr7.c: 96: T7CON = 0x31;
 23061  0183F4  0E31               	movlw	49
 23062  0183F6  010F               	movlb	15	; () banked
 23063  0183F8  6F30               	movwf	48,b	;volatile
 23064                           
 23065                           ; BSR set to: 15
 23066  0183FA  0012               	return		;funcret
 23067  0183FC                     __end_of_TMR7_Initialize:
 23068                           	opt stack 0
 23069                           tblptru	equ	0xFF8
 23070                           tblptrh	equ	0xFF7
 23071                           tblptrl	equ	0xFF6
 23072                           tablat	equ	0xFF5
 23073                           prodh	equ	0xFF4
 23074                           prodl	equ	0xFF3
 23075                           intcon	equ	0xFF2
 23076                           indf0	equ	0xFEF
 23077                           postinc0	equ	0xFEE
 23078                           fsr0h	equ	0xFEA
 23079                           fsr0l	equ	0xFE9
 23080                           wreg	equ	0xFE8
 23081                           indf1	equ	0xFE7
 23082                           postdec1	equ	0xFE5
 23083                           plusw1	equ	0xFE3
 23084                           fsr1h	equ	0xFE2
 23085                           fsr1l	equ	0xFE1
 23086                           indf2	equ	0xFDF
 23087                           postinc2	equ	0xFDE
 23088                           postdec2	equ	0xFDD
 23089                           plusw2	equ	0xFDB
 23090                           fsr2h	equ	0xFDA
 23091                           fsr2l	equ	0xFD9
 23092                           status	equ	0xFD8
 23093                           
 23094 ;; *************** function _TMR7_SetInterruptHandler *****************
 23095 ;; Defined at:
 23096 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 23099 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 23100 ;; Auto vars:     Size  Location     Type
 23101 ;;		None
 23102 ;; Return value:  Size  Location     Type
 23103 ;;                  1    wreg      void 
 23104 ;; Registers used:
 23105 ;;		wreg, status,2, status,0
 23106 ;; Tracked objects:
 23107 ;;		On entry : 0/0
 23108 ;;		On exit  : 0/0
 23109 ;;		Unchanged: 0/0
 23110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23111 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23114 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23115 ;;Total ram usage:        3 bytes
 23116 ;; Hardware stack levels used:    1
 23117 ;; Hardware stack levels required when called:   13
 23118 ;; This function calls:
 23119 ;;		Nothing
 23120 ;; This function is called by:
 23121 ;;		_TMR7_Initialize
 23122 ;;		_main
 23123 ;; This function uses a non-reentrant model
 23124 ;;
 23125                           
 23126                           	psect	text55
 23127  018C44                     __ptext55:
 23128                           	opt stack 0
 23129  018C44                     _TMR7_SetInterruptHandler:
 23130                           	opt stack 17
 23131                           
 23132                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 23133                           
 23134                           ; BSR set to: 15
 23135                           ;incstack = 0
 23136  018C44  C117  F25F         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 23137  018C48  C118  F260         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 23138  018C4C  C119  F261         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 23139  018C50  0012               	return		;funcret
 23140  018C52                     __end_of_TMR7_SetInterruptHandler:
 23141                           	opt stack 0
 23142                           tblptru	equ	0xFF8
 23143                           tblptrh	equ	0xFF7
 23144                           tblptrl	equ	0xFF6
 23145                           tablat	equ	0xFF5
 23146                           prodh	equ	0xFF4
 23147                           prodl	equ	0xFF3
 23148                           intcon	equ	0xFF2
 23149                           indf0	equ	0xFEF
 23150                           postinc0	equ	0xFEE
 23151                           fsr0h	equ	0xFEA
 23152                           fsr0l	equ	0xFE9
 23153                           wreg	equ	0xFE8
 23154                           indf1	equ	0xFE7
 23155                           postdec1	equ	0xFE5
 23156                           plusw1	equ	0xFE3
 23157                           fsr1h	equ	0xFE2
 23158                           fsr1l	equ	0xFE1
 23159                           indf2	equ	0xFDF
 23160                           postinc2	equ	0xFDE
 23161                           postdec2	equ	0xFDD
 23162                           plusw2	equ	0xFDB
 23163                           fsr2h	equ	0xFDA
 23164                           fsr2l	equ	0xFD9
 23165                           status	equ	0xFD8
 23166                           
 23167 ;; *************** function _TMR6_Initialize *****************
 23168 ;; Defined at:
 23169 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 23170 ;; Parameters:    Size  Location     Type
 23171 ;;		None
 23172 ;; Auto vars:     Size  Location     Type
 23173 ;;		None
 23174 ;; Return value:  Size  Location     Type
 23175 ;;                  1    wreg      void 
 23176 ;; Registers used:
 23177 ;;		wreg, status,2, status,0, cstack
 23178 ;; Tracked objects:
 23179 ;;		On entry : 0/0
 23180 ;;		On exit  : 0/0
 23181 ;;		Unchanged: 0/0
 23182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23187 ;;Total ram usage:        0 bytes
 23188 ;; Hardware stack levels used:    1
 23189 ;; Hardware stack levels required when called:   14
 23190 ;; This function calls:
 23191 ;;		_TMR6_SetInterruptHandler
 23192 ;; This function is called by:
 23193 ;;		_SYSTEM_Initialize
 23194 ;; This function uses a non-reentrant model
 23195 ;;
 23196                           
 23197                           	psect	text56
 23198  018888                     __ptext56:
 23199                           	opt stack 0
 23200  018888                     _TMR6_Initialize:
 23201                           	opt stack 15
 23202                           
 23203                           ;tmr6.c: 69: T6CLKCON = 0x04;
 23204                           
 23205                           ;incstack = 0
 23206  018888  0E04               	movlw	4
 23207  01888A  6EB3               	movwf	4019,c	;volatile
 23208                           
 23209                           ;tmr6.c: 72: T6HLT = 0x20;
 23210  01888C  0E20               	movlw	32
 23211  01888E  6EB2               	movwf	4018,c	;volatile
 23212                           
 23213                           ;tmr6.c: 75: T6RST = 0x00;
 23214  018890  0E00               	movlw	0
 23215  018892  6EB4               	movwf	4020,c	;volatile
 23216                           
 23217                           ;tmr6.c: 78: T6PR = 0xF1;
 23218  018894  0EF1               	movlw	241
 23219  018896  6EB0               	movwf	4016,c	;volatile
 23220                           
 23221                           ;tmr6.c: 81: T6TMR = 0x00;
 23222  018898  0E00               	movlw	0
 23223  01889A  6EAF               	movwf	4015,c	;volatile
 23224                           
 23225                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 23226  01889C  010E               	movlb	14	; () banked
 23227  01889E  9B38               	bcf	56,5,b	;volatile
 23228                           
 23229                           ; BSR set to: 14
 23230                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 23231  0188A0  8B2E               	bsf	46,5,b	;volatile
 23232                           
 23233                           ; BSR set to: 14
 23234                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 23235  0188A2  0EF2               	movlw	low _TMR6_DefaultInterruptHandler
 23236  0188A4  0101               	movlb	1	; () banked
 23237  0188A6  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 23238  0188A8  0E8C               	movlw	high _TMR6_DefaultInterruptHandler
 23239  0188AA  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 23240  0188AC  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23241  0188AE  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 23242  0188B0  EC29  F0C6         	call	_TMR6_SetInterruptHandler	;wreg free
 23243                           
 23244                           ;tmr6.c: 93: T6CON = 0xBF;
 23245  0188B4  0EBF               	movlw	191
 23246  0188B6  6EB1               	movwf	4017,c	;volatile
 23247  0188B8  0012               	return		;funcret
 23248  0188BA                     __end_of_TMR6_Initialize:
 23249                           	opt stack 0
 23250                           tblptru	equ	0xFF8
 23251                           tblptrh	equ	0xFF7
 23252                           tblptrl	equ	0xFF6
 23253                           tablat	equ	0xFF5
 23254                           prodh	equ	0xFF4
 23255                           prodl	equ	0xFF3
 23256                           intcon	equ	0xFF2
 23257                           indf0	equ	0xFEF
 23258                           postinc0	equ	0xFEE
 23259                           fsr0h	equ	0xFEA
 23260                           fsr0l	equ	0xFE9
 23261                           wreg	equ	0xFE8
 23262                           indf1	equ	0xFE7
 23263                           postdec1	equ	0xFE5
 23264                           plusw1	equ	0xFE3
 23265                           fsr1h	equ	0xFE2
 23266                           fsr1l	equ	0xFE1
 23267                           indf2	equ	0xFDF
 23268                           postinc2	equ	0xFDE
 23269                           postdec2	equ	0xFDD
 23270                           plusw2	equ	0xFDB
 23271                           fsr2h	equ	0xFDA
 23272                           fsr2l	equ	0xFD9
 23273                           status	equ	0xFD8
 23274                           
 23275 ;; *************** function _TMR6_SetInterruptHandler *****************
 23276 ;; Defined at:
 23277 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 23278 ;; Parameters:    Size  Location     Type
 23279 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 23280 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 23281 ;; Auto vars:     Size  Location     Type
 23282 ;;		None
 23283 ;; Return value:  Size  Location     Type
 23284 ;;                  1    wreg      void 
 23285 ;; Registers used:
 23286 ;;		wreg, status,2, status,0
 23287 ;; Tracked objects:
 23288 ;;		On entry : 0/0
 23289 ;;		On exit  : 0/0
 23290 ;;		Unchanged: 0/0
 23291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23292 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23295 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23296 ;;Total ram usage:        3 bytes
 23297 ;; Hardware stack levels used:    1
 23298 ;; Hardware stack levels required when called:   13
 23299 ;; This function calls:
 23300 ;;		Nothing
 23301 ;; This function is called by:
 23302 ;;		_TMR6_Initialize
 23303 ;;		_main
 23304 ;; This function uses a non-reentrant model
 23305 ;;
 23306                           
 23307                           	psect	text57
 23308  018C52                     __ptext57:
 23309                           	opt stack 0
 23310  018C52                     _TMR6_SetInterruptHandler:
 23311                           	opt stack 17
 23312                           
 23313                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 23314                           
 23315                           ;incstack = 0
 23316  018C52  C117  F265         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 23317  018C56  C118  F266         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 23318  018C5A  C119  F267         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 23319  018C5E  0012               	return		;funcret
 23320  018C60                     __end_of_TMR6_SetInterruptHandler:
 23321                           	opt stack 0
 23322                           tblptru	equ	0xFF8
 23323                           tblptrh	equ	0xFF7
 23324                           tblptrl	equ	0xFF6
 23325                           tablat	equ	0xFF5
 23326                           prodh	equ	0xFF4
 23327                           prodl	equ	0xFF3
 23328                           intcon	equ	0xFF2
 23329                           indf0	equ	0xFEF
 23330                           postinc0	equ	0xFEE
 23331                           fsr0h	equ	0xFEA
 23332                           fsr0l	equ	0xFE9
 23333                           wreg	equ	0xFE8
 23334                           indf1	equ	0xFE7
 23335                           postdec1	equ	0xFE5
 23336                           plusw1	equ	0xFE3
 23337                           fsr1h	equ	0xFE2
 23338                           fsr1l	equ	0xFE1
 23339                           indf2	equ	0xFDF
 23340                           postinc2	equ	0xFDE
 23341                           postdec2	equ	0xFDD
 23342                           plusw2	equ	0xFDB
 23343                           fsr2h	equ	0xFDA
 23344                           fsr2l	equ	0xFD9
 23345                           status	equ	0xFD8
 23346                           
 23347 ;; *************** function _TMR5_Initialize *****************
 23348 ;; Defined at:
 23349 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 23350 ;; Parameters:    Size  Location     Type
 23351 ;;		None
 23352 ;; Auto vars:     Size  Location     Type
 23353 ;;		None
 23354 ;; Return value:  Size  Location     Type
 23355 ;;                  1    wreg      void 
 23356 ;; Registers used:
 23357 ;;		wreg, status,2, status,0, cstack
 23358 ;; Tracked objects:
 23359 ;;		On entry : 0/0
 23360 ;;		On exit  : 0/0
 23361 ;;		Unchanged: 0/0
 23362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23365 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23366 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23367 ;;Total ram usage:        2 bytes
 23368 ;; Hardware stack levels used:    1
 23369 ;; Hardware stack levels required when called:   14
 23370 ;; This function calls:
 23371 ;;		_TMR5_SetInterruptHandler
 23372 ;; This function is called by:
 23373 ;;		_SYSTEM_Initialize
 23374 ;; This function uses a non-reentrant model
 23375 ;;
 23376                           
 23377                           	psect	text58
 23378  018494                     __ptext58:
 23379                           	opt stack 0
 23380  018494                     _TMR5_Initialize:
 23381                           	opt stack 15
 23382                           
 23383                           ;tmr5.c: 69: T5GCON = 0x00;
 23384                           
 23385                           ;incstack = 0
 23386  018494  0E00               	movlw	0
 23387  018496  6EC4               	movwf	4036,c	;volatile
 23388                           
 23389                           ;tmr5.c: 72: T5GATE = 0x00;
 23390  018498  0E00               	movlw	0
 23391  01849A  6EC5               	movwf	4037,c	;volatile
 23392                           
 23393                           ;tmr5.c: 75: T5CLK = 0x01;
 23394  01849C  0E01               	movlw	1
 23395  01849E  6EC6               	movwf	4038,c	;volatile
 23396                           
 23397                           ;tmr5.c: 78: TMR5H = 0x00;
 23398  0184A0  0E00               	movlw	0
 23399  0184A2  6EC2               	movwf	4034,c	;volatile
 23400                           
 23401                           ;tmr5.c: 81: TMR5L = 0x00;
 23402  0184A4  0E00               	movlw	0
 23403  0184A6  6EC1               	movwf	4033,c	;volatile
 23404                           
 23405                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 23406  0184A8  50C1               	movf	4033,w,c	;volatile
 23407  0184AA  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 23408  0184AE  0101               	movlb	1	; () banked
 23409  0184B0  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 23410  0184B2  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 23411  0184B6  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 23412  0184B8  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 23413  0184BA  6FD7               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 23414  0184BC  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 23415  0184BE  6FD8               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 23416                           
 23417                           ; BSR set to: 1
 23418                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 23419  0184C0  010E               	movlb	14	; () banked
 23420  0184C2  9938               	bcf	56,4,b	;volatile
 23421                           
 23422                           ; BSR set to: 14
 23423                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 23424  0184C4  892E               	bsf	46,4,b	;volatile
 23425                           
 23426                           ; BSR set to: 14
 23427                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 23428  0184C6  0EF4               	movlw	low _TMR5_DefaultInterruptHandler
 23429  0184C8  0101               	movlb	1	; () banked
 23430  0184CA  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 23431  0184CC  0E8C               	movlw	high _TMR5_DefaultInterruptHandler
 23432  0184CE  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 23433  0184D0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23434  0184D2  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 23435  0184D4  EC30  F0C6         	call	_TMR5_SetInterruptHandler	;wreg free
 23436                           
 23437                           ;tmr5.c: 96: T5CON = 0x13;
 23438  0184D8  0E13               	movlw	19
 23439  0184DA  6EC3               	movwf	4035,c	;volatile
 23440  0184DC  0012               	return		;funcret
 23441  0184DE                     __end_of_TMR5_Initialize:
 23442                           	opt stack 0
 23443                           tblptru	equ	0xFF8
 23444                           tblptrh	equ	0xFF7
 23445                           tblptrl	equ	0xFF6
 23446                           tablat	equ	0xFF5
 23447                           prodh	equ	0xFF4
 23448                           prodl	equ	0xFF3
 23449                           intcon	equ	0xFF2
 23450                           indf0	equ	0xFEF
 23451                           postinc0	equ	0xFEE
 23452                           fsr0h	equ	0xFEA
 23453                           fsr0l	equ	0xFE9
 23454                           wreg	equ	0xFE8
 23455                           indf1	equ	0xFE7
 23456                           postdec1	equ	0xFE5
 23457                           plusw1	equ	0xFE3
 23458                           fsr1h	equ	0xFE2
 23459                           fsr1l	equ	0xFE1
 23460                           indf2	equ	0xFDF
 23461                           postinc2	equ	0xFDE
 23462                           postdec2	equ	0xFDD
 23463                           plusw2	equ	0xFDB
 23464                           fsr2h	equ	0xFDA
 23465                           fsr2l	equ	0xFD9
 23466                           status	equ	0xFD8
 23467                           
 23468 ;; *************** function _TMR5_SetInterruptHandler *****************
 23469 ;; Defined at:
 23470 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 23471 ;; Parameters:    Size  Location     Type
 23472 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 23473 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23474 ;; Auto vars:     Size  Location     Type
 23475 ;;		None
 23476 ;; Return value:  Size  Location     Type
 23477 ;;                  1    wreg      void 
 23478 ;; Registers used:
 23479 ;;		wreg, status,2, status,0
 23480 ;; Tracked objects:
 23481 ;;		On entry : 0/0
 23482 ;;		On exit  : 0/0
 23483 ;;		Unchanged: 0/0
 23484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23485 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23488 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23489 ;;Total ram usage:        3 bytes
 23490 ;; Hardware stack levels used:    1
 23491 ;; Hardware stack levels required when called:   13
 23492 ;; This function calls:
 23493 ;;		Nothing
 23494 ;; This function is called by:
 23495 ;;		_TMR5_Initialize
 23496 ;; This function uses a non-reentrant model
 23497 ;;
 23498                           
 23499                           	psect	text59
 23500  018C60                     __ptext59:
 23501                           	opt stack 0
 23502  018C60                     _TMR5_SetInterruptHandler:
 23503                           	opt stack 15
 23504                           
 23505                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 23506                           
 23507                           ;incstack = 0
 23508  018C60  C117  F25C         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 23509  018C64  C118  F25D         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 23510  018C68  C119  F25E         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 23511  018C6C  0012               	return		;funcret
 23512  018C6E                     __end_of_TMR5_SetInterruptHandler:
 23513                           	opt stack 0
 23514                           tblptru	equ	0xFF8
 23515                           tblptrh	equ	0xFF7
 23516                           tblptrl	equ	0xFF6
 23517                           tablat	equ	0xFF5
 23518                           prodh	equ	0xFF4
 23519                           prodl	equ	0xFF3
 23520                           intcon	equ	0xFF2
 23521                           indf0	equ	0xFEF
 23522                           postinc0	equ	0xFEE
 23523                           fsr0h	equ	0xFEA
 23524                           fsr0l	equ	0xFE9
 23525                           wreg	equ	0xFE8
 23526                           indf1	equ	0xFE7
 23527                           postdec1	equ	0xFE5
 23528                           plusw1	equ	0xFE3
 23529                           fsr1h	equ	0xFE2
 23530                           fsr1l	equ	0xFE1
 23531                           indf2	equ	0xFDF
 23532                           postinc2	equ	0xFDE
 23533                           postdec2	equ	0xFDD
 23534                           plusw2	equ	0xFDB
 23535                           fsr2h	equ	0xFDA
 23536                           fsr2l	equ	0xFD9
 23537                           status	equ	0xFD8
 23538                           
 23539 ;; *************** function _PMD_Initialize *****************
 23540 ;; Defined at:
 23541 ;;		line 83 in file "mcc_generated_files/mcc.c"
 23542 ;; Parameters:    Size  Location     Type
 23543 ;;		None
 23544 ;; Auto vars:     Size  Location     Type
 23545 ;;		None
 23546 ;; Return value:  Size  Location     Type
 23547 ;;                  1    wreg      void 
 23548 ;; Registers used:
 23549 ;;		wreg, status,2
 23550 ;; Tracked objects:
 23551 ;;		On entry : 0/0
 23552 ;;		On exit  : 0/0
 23553 ;;		Unchanged: 0/0
 23554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23559 ;;Total ram usage:        0 bytes
 23560 ;; Hardware stack levels used:    1
 23561 ;; Hardware stack levels required when called:   13
 23562 ;; This function calls:
 23563 ;;		Nothing
 23564 ;; This function is called by:
 23565 ;;		_SYSTEM_Initialize
 23566 ;; This function uses a non-reentrant model
 23567 ;;
 23568                           
 23569                           	psect	text60
 23570  018B0E                     __ptext60:
 23571                           	opt stack 0
 23572  018B0E                     _PMD_Initialize:
 23573                           	opt stack 16
 23574                           
 23575                           ;mcc.c: 86: PMD0 = 0x00;
 23576                           
 23577                           ;incstack = 0
 23578  018B0E  0E00               	movlw	0
 23579  018B10  010E               	movlb	14	; () banked
 23580  018B12  6F4C               	movwf	76,b	;volatile
 23581                           
 23582                           ;mcc.c: 88: PMD1 = 0x00;
 23583  018B14  0E00               	movlw	0
 23584  018B16  6F4D               	movwf	77,b	;volatile
 23585                           
 23586                           ;mcc.c: 90: PMD2 = 0x00;
 23587  018B18  0E00               	movlw	0
 23588  018B1A  6F4E               	movwf	78,b	;volatile
 23589                           
 23590                           ;mcc.c: 92: PMD3 = 0x00;
 23591  018B1C  0E00               	movlw	0
 23592  018B1E  6F4F               	movwf	79,b	;volatile
 23593                           
 23594                           ;mcc.c: 94: PMD4 = 0x00;
 23595  018B20  0E00               	movlw	0
 23596  018B22  6F50               	movwf	80,b	;volatile
 23597                           
 23598                           ;mcc.c: 96: PMD5 = 0x00;
 23599  018B24  0E00               	movlw	0
 23600  018B26  6F51               	movwf	81,b	;volatile
 23601                           
 23602                           ; BSR set to: 14
 23603  018B28  0012               	return		;funcret
 23604  018B2A                     __end_of_PMD_Initialize:
 23605                           	opt stack 0
 23606                           tblptru	equ	0xFF8
 23607                           tblptrh	equ	0xFF7
 23608                           tblptrl	equ	0xFF6
 23609                           tablat	equ	0xFF5
 23610                           prodh	equ	0xFF4
 23611                           prodl	equ	0xFF3
 23612                           intcon	equ	0xFF2
 23613                           indf0	equ	0xFEF
 23614                           postinc0	equ	0xFEE
 23615                           fsr0h	equ	0xFEA
 23616                           fsr0l	equ	0xFE9
 23617                           wreg	equ	0xFE8
 23618                           indf1	equ	0xFE7
 23619                           postdec1	equ	0xFE5
 23620                           plusw1	equ	0xFE3
 23621                           fsr1h	equ	0xFE2
 23622                           fsr1l	equ	0xFE1
 23623                           indf2	equ	0xFDF
 23624                           postinc2	equ	0xFDE
 23625                           postdec2	equ	0xFDD
 23626                           plusw2	equ	0xFDB
 23627                           fsr2h	equ	0xFDA
 23628                           fsr2l	equ	0xFD9
 23629                           status	equ	0xFD8
 23630                           
 23631 ;; *************** function _PIN_MANAGER_Initialize *****************
 23632 ;; Defined at:
 23633 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23634 ;; Parameters:    Size  Location     Type
 23635 ;;		None
 23636 ;; Auto vars:     Size  Location     Type
 23637 ;;		None
 23638 ;; Return value:  Size  Location     Type
 23639 ;;                  1    wreg      void 
 23640 ;; Registers used:
 23641 ;;		wreg, status,2
 23642 ;; Tracked objects:
 23643 ;;		On entry : 0/0
 23644 ;;		On exit  : 0/0
 23645 ;;		Unchanged: 0/0
 23646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23651 ;;Total ram usage:        0 bytes
 23652 ;; Hardware stack levels used:    1
 23653 ;; Hardware stack levels required when called:   13
 23654 ;; This function calls:
 23655 ;;		Nothing
 23656 ;; This function is called by:
 23657 ;;		_SYSTEM_Initialize
 23658 ;; This function uses a non-reentrant model
 23659 ;;
 23660                           
 23661                           	psect	text61
 23662  01790C                     __ptext61:
 23663                           	opt stack 0
 23664  01790C                     _PIN_MANAGER_Initialize:
 23665                           	opt stack 16
 23666                           
 23667                           ;pin_manager.c: 62: LATE = 0x00;
 23668                           
 23669                           ; BSR set to: 14
 23670                           ;incstack = 0
 23671  01790C  0E00               	movlw	0
 23672  01790E  6E7D               	movwf	3965,c	;volatile
 23673                           
 23674                           ;pin_manager.c: 63: LATD = 0x00;
 23675  017910  0E00               	movlw	0
 23676  017912  6E7C               	movwf	3964,c	;volatile
 23677                           
 23678                           ;pin_manager.c: 64: LATA = 0x00;
 23679  017914  0E00               	movlw	0
 23680  017916  6E79               	movwf	3961,c	;volatile
 23681                           
 23682                           ;pin_manager.c: 65: LATF = 0x00;
 23683  017918  0E00               	movlw	0
 23684  01791A  6E7E               	movwf	3966,c	;volatile
 23685                           
 23686                           ;pin_manager.c: 66: LATB = 0x00;
 23687  01791C  0E00               	movlw	0
 23688  01791E  6E7A               	movwf	3962,c	;volatile
 23689                           
 23690                           ;pin_manager.c: 67: LATG = 0x00;
 23691  017920  0E00               	movlw	0
 23692  017922  6E7F               	movwf	3967,c	;volatile
 23693                           
 23694                           ;pin_manager.c: 68: LATC = 0x00;
 23695  017924  0E00               	movlw	0
 23696  017926  6E7B               	movwf	3963,c	;volatile
 23697                           
 23698                           ;pin_manager.c: 69: LATH = 0x00;
 23699  017928  0E00               	movlw	0
 23700  01792A  6E80               	movwf	3968,c	;volatile
 23701                           
 23702                           ;pin_manager.c: 74: TRISE = 0xFF;
 23703  01792C  6885               	setf	3973,c	;volatile
 23704                           
 23705                           ;pin_manager.c: 75: TRISF = 0xF0;
 23706  01792E  0EF0               	movlw	240
 23707  017930  6E86               	movwf	3974,c	;volatile
 23708                           
 23709                           ;pin_manager.c: 76: TRISA = 0xFF;
 23710  017932  6881               	setf	3969,c	;volatile
 23711                           
 23712                           ;pin_manager.c: 77: TRISG = 0x5C;
 23713  017934  0E5C               	movlw	92
 23714  017936  6E87               	movwf	3975,c	;volatile
 23715                           
 23716                           ;pin_manager.c: 78: TRISB = 0xFF;
 23717  017938  6882               	setf	3970,c	;volatile
 23718                           
 23719                           ;pin_manager.c: 79: TRISH = 0x0F;
 23720  01793A  0E0F               	movlw	15
 23721  01793C  6E88               	movwf	3976,c	;volatile
 23722                           
 23723                           ;pin_manager.c: 80: TRISC = 0xFF;
 23724  01793E  6883               	setf	3971,c	;volatile
 23725                           
 23726                           ;pin_manager.c: 81: TRISD = 0xFF;
 23727  017940  6884               	setf	3972,c	;volatile
 23728                           
 23729                           ;pin_manager.c: 86: ANSELD = 0xFF;
 23730  017942  010E               	movlb	14	; () banked
 23731  017944  69A7               	setf	167,b	;volatile
 23732                           
 23733                           ; BSR set to: 14
 23734                           ;pin_manager.c: 87: ANSELB = 0xFF;
 23735  017946  699A               	setf	154,b	;volatile
 23736                           
 23737                           ; BSR set to: 14
 23738                           ;pin_manager.c: 88: ANSELE = 0xFF;
 23739  017948  69AF               	setf	175,b	;volatile
 23740                           
 23741                           ;pin_manager.c: 89: ANSELG = 0x3C;
 23742  01794A  0E3C               	movlw	60
 23743  01794C  6FBC               	movwf	188,b	;volatile
 23744                           
 23745                           ;pin_manager.c: 90: ANSELF = 0xF0;
 23746  01794E  0EF0               	movlw	240
 23747  017950  6FB4               	movwf	180,b	;volatile
 23748                           
 23749                           ; BSR set to: 14
 23750                           ;pin_manager.c: 91: ANSELA = 0xFF;
 23751  017952  6992               	setf	146,b	;volatile
 23752                           
 23753                           ;pin_manager.c: 96: WPUD = 0x00;
 23754  017954  0E00               	movlw	0
 23755  017956  6FA6               	movwf	166,b	;volatile
 23756                           
 23757                           ;pin_manager.c: 97: WPUF = 0x00;
 23758  017958  0E00               	movlw	0
 23759  01795A  6FB3               	movwf	179,b	;volatile
 23760                           
 23761                           ;pin_manager.c: 98: WPUE = 0x00;
 23762  01795C  0E00               	movlw	0
 23763  01795E  6FAE               	movwf	174,b	;volatile
 23764                           
 23765                           ;pin_manager.c: 99: WPUB = 0x00;
 23766  017960  0E00               	movlw	0
 23767  017962  6F99               	movwf	153,b	;volatile
 23768                           
 23769                           ;pin_manager.c: 100: WPUG = 0x00;
 23770  017964  0E00               	movlw	0
 23771  017966  6FBB               	movwf	187,b	;volatile
 23772                           
 23773                           ;pin_manager.c: 101: WPUA = 0x00;
 23774  017968  0E00               	movlw	0
 23775  01796A  6F91               	movwf	145,b	;volatile
 23776                           
 23777                           ;pin_manager.c: 102: WPUC = 0x00;
 23778  01796C  0E00               	movlw	0
 23779  01796E  6FA1               	movwf	161,b	;volatile
 23780                           
 23781                           ;pin_manager.c: 103: WPUH = 0x00;
 23782  017970  0E00               	movlw	0
 23783  017972  6FC0               	movwf	192,b	;volatile
 23784                           
 23785                           ;pin_manager.c: 108: ODCONE = 0x00;
 23786  017974  0E00               	movlw	0
 23787  017976  6FAD               	movwf	173,b	;volatile
 23788                           
 23789                           ;pin_manager.c: 109: ODCONF = 0x01;
 23790  017978  0E01               	movlw	1
 23791  01797A  6FB2               	movwf	178,b	;volatile
 23792                           
 23793                           ;pin_manager.c: 110: ODCONA = 0x00;
 23794  01797C  0E00               	movlw	0
 23795  01797E  6F90               	movwf	144,b	;volatile
 23796                           
 23797                           ;pin_manager.c: 111: ODCONG = 0x00;
 23798  017980  0E00               	movlw	0
 23799  017982  6FBA               	movwf	186,b	;volatile
 23800                           
 23801                           ;pin_manager.c: 112: ODCONB = 0x00;
 23802  017984  0E00               	movlw	0
 23803  017986  6F98               	movwf	152,b	;volatile
 23804                           
 23805                           ;pin_manager.c: 113: ODCONH = 0x00;
 23806  017988  0E00               	movlw	0
 23807  01798A  6FBF               	movwf	191,b	;volatile
 23808                           
 23809                           ;pin_manager.c: 114: ODCONC = 0x00;
 23810  01798C  0E00               	movlw	0
 23811  01798E  6FA0               	movwf	160,b	;volatile
 23812                           
 23813                           ;pin_manager.c: 115: ODCOND = 0x00;
 23814  017990  0E00               	movlw	0
 23815  017992  6FA5               	movwf	165,b	;volatile
 23816                           
 23817                           ; BSR set to: 14
 23818                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 23819  017994  698F               	setf	143,b	;volatile
 23820                           
 23821                           ; BSR set to: 14
 23822                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 23823  017996  6997               	setf	151,b	;volatile
 23824                           
 23825                           ; BSR set to: 14
 23826                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 23827  017998  699F               	setf	159,b	;volatile
 23828                           
 23829                           ; BSR set to: 14
 23830                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 23831  01799A  69A4               	setf	164,b	;volatile
 23832                           
 23833                           ; BSR set to: 14
 23834                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 23835  01799C  69AC               	setf	172,b	;volatile
 23836                           
 23837                           ; BSR set to: 14
 23838                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 23839  01799E  69B1               	setf	177,b	;volatile
 23840                           
 23841                           ; BSR set to: 14
 23842                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 23843  0179A0  69B9               	setf	185,b	;volatile
 23844                           
 23845                           ; BSR set to: 14
 23846                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 23847  0179A2  69BE               	setf	190,b	;volatile
 23848                           
 23849                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 23850  0179A4  0E0E               	movlw	14
 23851  0179A6  6F89               	movwf	137,b	;volatile
 23852                           
 23853                           ;pin_manager.c: 137: RX2PPS = 0x36;
 23854  0179A8  0E36               	movlw	54
 23855  0179AA  6F11               	movwf	17,b	;volatile
 23856                           
 23857                           ; BSR set to: 14
 23858  0179AC  0012               	return		;funcret
 23859  0179AE                     __end_of_PIN_MANAGER_Initialize:
 23860                           	opt stack 0
 23861                           tblptru	equ	0xFF8
 23862                           tblptrh	equ	0xFF7
 23863                           tblptrl	equ	0xFF6
 23864                           tablat	equ	0xFF5
 23865                           prodh	equ	0xFF4
 23866                           prodl	equ	0xFF3
 23867                           intcon	equ	0xFF2
 23868                           indf0	equ	0xFEF
 23869                           postinc0	equ	0xFEE
 23870                           fsr0h	equ	0xFEA
 23871                           fsr0l	equ	0xFE9
 23872                           wreg	equ	0xFE8
 23873                           indf1	equ	0xFE7
 23874                           postdec1	equ	0xFE5
 23875                           plusw1	equ	0xFE3
 23876                           fsr1h	equ	0xFE2
 23877                           fsr1l	equ	0xFE1
 23878                           indf2	equ	0xFDF
 23879                           postinc2	equ	0xFDE
 23880                           postdec2	equ	0xFDD
 23881                           plusw2	equ	0xFDB
 23882                           fsr2h	equ	0xFDA
 23883                           fsr2l	equ	0xFD9
 23884                           status	equ	0xFD8
 23885                           
 23886 ;; *************** function _OSCILLATOR_Initialize *****************
 23887 ;; Defined at:
 23888 ;;		line 65 in file "mcc_generated_files/mcc.c"
 23889 ;; Parameters:    Size  Location     Type
 23890 ;;		None
 23891 ;; Auto vars:     Size  Location     Type
 23892 ;;		None
 23893 ;; Return value:  Size  Location     Type
 23894 ;;                  1    wreg      void 
 23895 ;; Registers used:
 23896 ;;		wreg, status,2
 23897 ;; Tracked objects:
 23898 ;;		On entry : 0/0
 23899 ;;		On exit  : 0/0
 23900 ;;		Unchanged: 0/0
 23901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23906 ;;Total ram usage:        0 bytes
 23907 ;; Hardware stack levels used:    1
 23908 ;; Hardware stack levels required when called:   13
 23909 ;; This function calls:
 23910 ;;		Nothing
 23911 ;; This function is called by:
 23912 ;;		_SYSTEM_Initialize
 23913 ;; This function uses a non-reentrant model
 23914 ;;
 23915                           
 23916                           	psect	text62
 23917  018B2A                     __ptext62:
 23918                           	opt stack 0
 23919  018B2A                     _OSCILLATOR_Initialize:
 23920                           	opt stack 16
 23921                           
 23922                           ;mcc.c: 68: OSCCON1 = 0x20;
 23923                           
 23924                           ; BSR set to: 14
 23925                           ;incstack = 0
 23926  018B2A  0E20               	movlw	32
 23927  018B2C  010E               	movlb	14	; () banked
 23928  018B2E  6F43               	movwf	67,b	;volatile
 23929                           
 23930                           ;mcc.c: 70: OSCCON3 = 0x00;
 23931  018B30  0E00               	movlw	0
 23932  018B32  6F45               	movwf	69,b	;volatile
 23933                           
 23934                           ;mcc.c: 72: OSCEN = 0x00;
 23935  018B34  0E00               	movlw	0
 23936  018B36  6F47               	movwf	71,b	;volatile
 23937                           
 23938                           ;mcc.c: 74: OSCFRQ = 0x02;
 23939  018B38  0E02               	movlw	2
 23940  018B3A  6F49               	movwf	73,b	;volatile
 23941                           
 23942                           ;mcc.c: 76: OSCTUNE = 0x00;
 23943  018B3C  0E00               	movlw	0
 23944  018B3E  6F48               	movwf	72,b	;volatile
 23945  018B40                     
 23946                           ; BSR set to: 14
 23947                           
 23948                           ; BSR set to: 14
 23949                           ;mcc.c: 79: {
 23950  018B40  B146               	btfsc	70,0,b	;volatile
 23951  018B42  0012               	return	
 23952  018B44  D7FD               	goto	l57
 23953  018B46                     __end_of_OSCILLATOR_Initialize:
 23954                           	opt stack 0
 23955                           tblptru	equ	0xFF8
 23956                           tblptrh	equ	0xFF7
 23957                           tblptrl	equ	0xFF6
 23958                           tablat	equ	0xFF5
 23959                           prodh	equ	0xFF4
 23960                           prodl	equ	0xFF3
 23961                           intcon	equ	0xFF2
 23962                           indf0	equ	0xFEF
 23963                           postinc0	equ	0xFEE
 23964                           fsr0h	equ	0xFEA
 23965                           fsr0l	equ	0xFE9
 23966                           wreg	equ	0xFE8
 23967                           indf1	equ	0xFE7
 23968                           postdec1	equ	0xFE5
 23969                           plusw1	equ	0xFE3
 23970                           fsr1h	equ	0xFE2
 23971                           fsr1l	equ	0xFE1
 23972                           indf2	equ	0xFDF
 23973                           postinc2	equ	0xFDE
 23974                           postdec2	equ	0xFDD
 23975                           plusw2	equ	0xFDB
 23976                           fsr2h	equ	0xFDA
 23977                           fsr2l	equ	0xFD9
 23978                           status	equ	0xFD8
 23979                           
 23980 ;; *************** function _INTERRUPT_Initialize *****************
 23981 ;; Defined at:
 23982 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23983 ;; Parameters:    Size  Location     Type
 23984 ;;		None
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;		None
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  1    wreg      void 
 23989 ;; Registers used:
 23990 ;;		None
 23991 ;; Tracked objects:
 23992 ;;		On entry : 0/0
 23993 ;;		On exit  : 0/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24000 ;;Total ram usage:        0 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:   13
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_SYSTEM_Initialize
 24007 ;; This function uses a non-reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text63
 24011  018B96                     __ptext63:
 24012                           	opt stack 0
 24013  018B96                     _INTERRUPT_Initialize:
 24014                           	opt stack 16
 24015                           
 24016                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 24017                           
 24018                           ; BSR set to: 14
 24019                           ;incstack = 0
 24020  018B96  8AF2               	bsf	intcon,5,c	;volatile
 24021                           
 24022                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 24023  018B98  010E               	movlb	14	; () banked
 24024  018B9A  8F22               	bsf	34,7,b	;volatile
 24025                           
 24026                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 24027  018B9C  8924               	bsf	36,4,b	;volatile
 24028                           
 24029                           ;interrupt_manager.c: 66: IPR1bits.ADTIP = 1;
 24030  018B9E  8320               	bsf	32,1,b	;volatile
 24031                           
 24032                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 24033  018BA0  9B24               	bcf	36,5,b	;volatile
 24034                           
 24035                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 24036  018BA2  9D22               	bcf	34,6,b	;volatile
 24037                           
 24038                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 24039  018BA4  9D24               	bcf	36,6,b	;volatile
 24040                           
 24041                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 24042  018BA6  9F21               	bcf	33,7,b	;volatile
 24043                           
 24044                           ; BSR set to: 14
 24045  018BA8  0012               	return		;funcret
 24046  018BAA                     __end_of_INTERRUPT_Initialize:
 24047                           	opt stack 0
 24048                           tblptru	equ	0xFF8
 24049                           tblptrh	equ	0xFF7
 24050                           tblptrl	equ	0xFF6
 24051                           tablat	equ	0xFF5
 24052                           prodh	equ	0xFF4
 24053                           prodl	equ	0xFF3
 24054                           intcon	equ	0xFF2
 24055                           indf0	equ	0xFEF
 24056                           postinc0	equ	0xFEE
 24057                           fsr0h	equ	0xFEA
 24058                           fsr0l	equ	0xFE9
 24059                           wreg	equ	0xFE8
 24060                           indf1	equ	0xFE7
 24061                           postdec1	equ	0xFE5
 24062                           plusw1	equ	0xFE3
 24063                           fsr1h	equ	0xFE2
 24064                           fsr1l	equ	0xFE1
 24065                           indf2	equ	0xFDF
 24066                           postinc2	equ	0xFDE
 24067                           postdec2	equ	0xFDD
 24068                           plusw2	equ	0xFDB
 24069                           fsr2h	equ	0xFDA
 24070                           fsr2l	equ	0xFD9
 24071                           status	equ	0xFD8
 24072                           
 24073 ;; *************** function _HLVD_Initialize *****************
 24074 ;; Defined at:
 24075 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;		None
 24078 ;; Auto vars:     Size  Location     Type
 24079 ;;		None
 24080 ;; Return value:  Size  Location     Type
 24081 ;;                  1    wreg      void 
 24082 ;; Registers used:
 24083 ;;		wreg, status,2
 24084 ;; Tracked objects:
 24085 ;;		On entry : 0/0
 24086 ;;		On exit  : 0/0
 24087 ;;		Unchanged: 0/0
 24088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24093 ;;Total ram usage:        0 bytes
 24094 ;; Hardware stack levels used:    1
 24095 ;; Hardware stack levels required when called:   13
 24096 ;; This function calls:
 24097 ;;		Nothing
 24098 ;; This function is called by:
 24099 ;;		_SYSTEM_Initialize
 24100 ;; This function uses a non-reentrant model
 24101 ;;
 24102                           
 24103                           	psect	text64
 24104  018C26                     __ptext64:
 24105                           	opt stack 0
 24106  018C26                     _HLVD_Initialize:
 24107                           	opt stack 16
 24108                           
 24109                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 24110                           
 24111                           ; BSR set to: 14
 24112                           ;incstack = 0
 24113  018C26  0E09               	movlw	9
 24114  018C28  010E               	movlb	14	; () banked
 24115  018C2A  6FC3               	movwf	195,b	;volatile
 24116                           
 24117                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 24118  018C2C  0E82               	movlw	130
 24119  018C2E  6FC2               	movwf	194,b	;volatile
 24120                           
 24121                           ; BSR set to: 14
 24122                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 24123  018C30  9F35               	bcf	53,7,b	;volatile
 24124                           
 24125                           ; BSR set to: 14
 24126                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 24127  018C32  8F2B               	bsf	43,7,b	;volatile
 24128                           
 24129                           ; BSR set to: 14
 24130  018C34  0012               	return		;funcret
 24131  018C36                     __end_of_HLVD_Initialize:
 24132                           	opt stack 0
 24133                           tblptru	equ	0xFF8
 24134                           tblptrh	equ	0xFF7
 24135                           tblptrl	equ	0xFF6
 24136                           tablat	equ	0xFF5
 24137                           prodh	equ	0xFF4
 24138                           prodl	equ	0xFF3
 24139                           intcon	equ	0xFF2
 24140                           indf0	equ	0xFEF
 24141                           postinc0	equ	0xFEE
 24142                           fsr0h	equ	0xFEA
 24143                           fsr0l	equ	0xFE9
 24144                           wreg	equ	0xFE8
 24145                           indf1	equ	0xFE7
 24146                           postdec1	equ	0xFE5
 24147                           plusw1	equ	0xFE3
 24148                           fsr1h	equ	0xFE2
 24149                           fsr1l	equ	0xFE1
 24150                           indf2	equ	0xFDF
 24151                           postinc2	equ	0xFDE
 24152                           postdec2	equ	0xFDD
 24153                           plusw2	equ	0xFDB
 24154                           fsr2h	equ	0xFDA
 24155                           fsr2l	equ	0xFD9
 24156                           status	equ	0xFD8
 24157                           
 24158 ;; *************** function _FVR_Initialize *****************
 24159 ;; Defined at:
 24160 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24161 ;; Parameters:    Size  Location     Type
 24162 ;;		None
 24163 ;; Auto vars:     Size  Location     Type
 24164 ;;		None
 24165 ;; Return value:  Size  Location     Type
 24166 ;;                  1    wreg      void 
 24167 ;; Registers used:
 24168 ;;		wreg, status,2
 24169 ;; Tracked objects:
 24170 ;;		On entry : 0/0
 24171 ;;		On exit  : 0/0
 24172 ;;		Unchanged: 0/0
 24173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24178 ;;Total ram usage:        0 bytes
 24179 ;; Hardware stack levels used:    1
 24180 ;; Hardware stack levels required when called:   13
 24181 ;; This function calls:
 24182 ;;		Nothing
 24183 ;; This function is called by:
 24184 ;;		_SYSTEM_Initialize
 24185 ;; This function uses a non-reentrant model
 24186 ;;
 24187                           
 24188                           	psect	text65
 24189  018CBC                     __ptext65:
 24190                           	opt stack 0
 24191  018CBC                     _FVR_Initialize:
 24192                           	opt stack 16
 24193                           
 24194                           ;fvr.c: 61: FVRCON = 0xA6;
 24195                           
 24196                           ; BSR set to: 14
 24197                           ;incstack = 0
 24198  018CBC  0EA6               	movlw	166
 24199  018CBE  010E               	movlb	14	; () banked
 24200  018CC0  6FC4               	movwf	196,b	;volatile
 24201                           
 24202                           ; BSR set to: 14
 24203  018CC2  0012               	return		;funcret
 24204  018CC4                     __end_of_FVR_Initialize:
 24205                           	opt stack 0
 24206                           tblptru	equ	0xFF8
 24207                           tblptrh	equ	0xFF7
 24208                           tblptrl	equ	0xFF6
 24209                           tablat	equ	0xFF5
 24210                           prodh	equ	0xFF4
 24211                           prodl	equ	0xFF3
 24212                           intcon	equ	0xFF2
 24213                           indf0	equ	0xFEF
 24214                           postinc0	equ	0xFEE
 24215                           fsr0h	equ	0xFEA
 24216                           fsr0l	equ	0xFE9
 24217                           wreg	equ	0xFE8
 24218                           indf1	equ	0xFE7
 24219                           postdec1	equ	0xFE5
 24220                           plusw1	equ	0xFE3
 24221                           fsr1h	equ	0xFE2
 24222                           fsr1l	equ	0xFE1
 24223                           indf2	equ	0xFDF
 24224                           postinc2	equ	0xFDE
 24225                           postdec2	equ	0xFDD
 24226                           plusw2	equ	0xFDB
 24227                           fsr2h	equ	0xFDA
 24228                           fsr2l	equ	0xFD9
 24229                           status	equ	0xFD8
 24230                           
 24231 ;; *************** function _EUSART2_Initialize *****************
 24232 ;; Defined at:
 24233 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 24234 ;; Parameters:    Size  Location     Type
 24235 ;;		None
 24236 ;; Auto vars:     Size  Location     Type
 24237 ;;		None
 24238 ;; Return value:  Size  Location     Type
 24239 ;;                  1    wreg      void 
 24240 ;; Registers used:
 24241 ;;		wreg, status,2, status,0, cstack
 24242 ;; Tracked objects:
 24243 ;;		On entry : 0/0
 24244 ;;		On exit  : 0/0
 24245 ;;		Unchanged: 0/0
 24246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24251 ;;Total ram usage:        0 bytes
 24252 ;; Hardware stack levels used:    1
 24253 ;; Hardware stack levels required when called:   14
 24254 ;; This function calls:
 24255 ;;		_EUSART2_SetRxInterruptHandler
 24256 ;;		_EUSART2_SetTxInterruptHandler
 24257 ;; This function is called by:
 24258 ;;		_SYSTEM_Initialize
 24259 ;; This function uses a non-reentrant model
 24260 ;;
 24261                           
 24262                           	psect	text66
 24263  017FB2                     __ptext66:
 24264                           	opt stack 0
 24265  017FB2                     _EUSART2_Initialize:
 24266                           	opt stack 15
 24267                           
 24268                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 24269                           
 24270                           ; BSR set to: 14
 24271                           ;incstack = 0
 24272  017FB2  827E               	bsf	3966,1,c	;volatile
 24273                           
 24274                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 24275  017FB4  010E               	movlb	14	; () banked
 24276  017FB6  9F2C               	bcf	44,7,b	;volatile
 24277                           
 24278                           ; BSR set to: 14
 24279                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 24280  017FB8  0E5E               	movlw	low _EUSART2_Receive_ISR
 24281  017FBA  0101               	movlb	1	; () banked
 24282  017FBC  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 24283  017FBE  0E78               	movlw	high _EUSART2_Receive_ISR
 24284  017FC0  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 24285  017FC2  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 24286  017FC4  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 24287  017FC6  EC3E  F0C6         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 24288                           
 24289                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 24290  017FCA  010E               	movlb	14	; () banked
 24291  017FCC  9D2C               	bcf	44,6,b	;volatile
 24292                           
 24293                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 24294  017FCE  0EEA               	movlw	low _EUSART2_Transmit_ISR
 24295  017FD0  0101               	movlb	1	; () banked
 24296  017FD2  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 24297  017FD4  0E87               	movlw	high _EUSART2_Transmit_ISR
 24298  017FD6  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 24299  017FD8  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 24300  017FDA  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 24301  017FDC  EC37  F0C6         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 24302                           
 24303                           ;eusart2.c: 91: BAUD2CON = 0x08;
 24304  017FE0  0E08               	movlw	8
 24305  017FE2  010E               	movlb	14	; () banked
 24306  017FE4  6FF7               	movwf	247,b	;volatile
 24307                           
 24308                           ; BSR set to: 14
 24309                           ;eusart2.c: 94: RC2STA = 0x90;
 24310  017FE6  0E90               	movlw	144
 24311  017FE8  6FF5               	movwf	245,b	;volatile
 24312                           
 24313                           ; BSR set to: 14
 24314                           ;eusart2.c: 97: TX2STA = 0x24;
 24315  017FEA  0E24               	movlw	36
 24316  017FEC  6FF6               	movwf	246,b	;volatile
 24317                           
 24318                           ; BSR set to: 14
 24319                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 24320  017FEE  0E8A               	movlw	138
 24321  017FF0  6FF3               	movwf	243,b	;volatile
 24322                           
 24323                           ; BSR set to: 14
 24324                           ;eusart2.c: 103: SP2BRGH = 0x00;
 24325  017FF2  0E00               	movlw	0
 24326  017FF4  6FF4               	movwf	244,b	;volatile
 24327                           
 24328                           ; BSR set to: 14
 24329                           ;eusart2.c: 107: eusart2TxHead = 0;
 24330  017FF6  0E00               	movlw	0
 24331  017FF8  0101               	movlb	1	; () banked
 24332  017FFA  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 24333                           
 24334                           ; BSR set to: 1
 24335                           ;eusart2.c: 108: eusart2TxTail = 0;
 24336  017FFC  0E00               	movlw	0
 24337  017FFE  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 24338                           
 24339                           ; BSR set to: 1
 24340                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 24341  018000  0E80               	movlw	128
 24342  018002  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 24343                           
 24344                           ; BSR set to: 1
 24345                           ;eusart2.c: 111: eusart2RxHead = 0;
 24346  018004  0E00               	movlw	0
 24347  018006  0100               	movlb	0	; () banked
 24348  018008  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 24349                           
 24350                           ; BSR set to: 0
 24351                           ;eusart2.c: 112: eusart2RxTail = 0;
 24352  01800A  0E00               	movlw	0
 24353  01800C  0101               	movlb	1	; () banked
 24354  01800E  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 24355                           
 24356                           ; BSR set to: 1
 24357                           ;eusart2.c: 113: eusart2RxCount = 0;
 24358  018010  0E00               	movlw	0
 24359  018012  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 24360                           
 24361                           ; BSR set to: 1
 24362                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 24363  018014  010E               	movlb	14	; () banked
 24364  018016  8F2C               	bsf	44,7,b	;volatile
 24365                           
 24366                           ; BSR set to: 14
 24367                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 24368  018018  927E               	bcf	3966,1,c	;volatile
 24369                           
 24370                           ; BSR set to: 14
 24371  01801A  0012               	return		;funcret
 24372  01801C                     __end_of_EUSART2_Initialize:
 24373                           	opt stack 0
 24374                           tblptru	equ	0xFF8
 24375                           tblptrh	equ	0xFF7
 24376                           tblptrl	equ	0xFF6
 24377                           tablat	equ	0xFF5
 24378                           prodh	equ	0xFF4
 24379                           prodl	equ	0xFF3
 24380                           intcon	equ	0xFF2
 24381                           indf0	equ	0xFEF
 24382                           postinc0	equ	0xFEE
 24383                           fsr0h	equ	0xFEA
 24384                           fsr0l	equ	0xFE9
 24385                           wreg	equ	0xFE8
 24386                           indf1	equ	0xFE7
 24387                           postdec1	equ	0xFE5
 24388                           plusw1	equ	0xFE3
 24389                           fsr1h	equ	0xFE2
 24390                           fsr1l	equ	0xFE1
 24391                           indf2	equ	0xFDF
 24392                           postinc2	equ	0xFDE
 24393                           postdec2	equ	0xFDD
 24394                           plusw2	equ	0xFDB
 24395                           fsr2h	equ	0xFDA
 24396                           fsr2l	equ	0xFD9
 24397                           status	equ	0xFD8
 24398                           
 24399 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 24400 ;; Defined at:
 24401 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 24402 ;; Parameters:    Size  Location     Type
 24403 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 24404 ;;		 -> EUSART2_Transmit_ISR(1), 
 24405 ;; Auto vars:     Size  Location     Type
 24406 ;;		None
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  1    wreg      void 
 24409 ;; Registers used:
 24410 ;;		wreg, status,2, status,0
 24411 ;; Tracked objects:
 24412 ;;		On entry : 0/0
 24413 ;;		On exit  : 0/0
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24416 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24419 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24420 ;;Total ram usage:        3 bytes
 24421 ;; Hardware stack levels used:    1
 24422 ;; Hardware stack levels required when called:   13
 24423 ;; This function calls:
 24424 ;;		Nothing
 24425 ;; This function is called by:
 24426 ;;		_EUSART2_Initialize
 24427 ;; This function uses a non-reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text67
 24431  018C6E                     __ptext67:
 24432                           	opt stack 0
 24433  018C6E                     _EUSART2_SetTxInterruptHandler:
 24434                           	opt stack 15
 24435                           
 24436                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 24437                           
 24438                           ; BSR set to: 14
 24439                           ;incstack = 0
 24440  018C6E  C117  F26B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 24441  018C72  C118  F26C         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 24442  018C76  C119  F26D         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 24443  018C7A  0012               	return		;funcret
 24444  018C7C                     __end_of_EUSART2_SetTxInterruptHandler:
 24445                           	opt stack 0
 24446                           tblptru	equ	0xFF8
 24447                           tblptrh	equ	0xFF7
 24448                           tblptrl	equ	0xFF6
 24449                           tablat	equ	0xFF5
 24450                           prodh	equ	0xFF4
 24451                           prodl	equ	0xFF3
 24452                           intcon	equ	0xFF2
 24453                           indf0	equ	0xFEF
 24454                           postinc0	equ	0xFEE
 24455                           fsr0h	equ	0xFEA
 24456                           fsr0l	equ	0xFE9
 24457                           wreg	equ	0xFE8
 24458                           indf1	equ	0xFE7
 24459                           postdec1	equ	0xFE5
 24460                           plusw1	equ	0xFE3
 24461                           fsr1h	equ	0xFE2
 24462                           fsr1l	equ	0xFE1
 24463                           indf2	equ	0xFDF
 24464                           postinc2	equ	0xFDE
 24465                           postdec2	equ	0xFDD
 24466                           plusw2	equ	0xFDB
 24467                           fsr2h	equ	0xFDA
 24468                           fsr2l	equ	0xFD9
 24469                           status	equ	0xFD8
 24470                           
 24471 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 24472 ;; Defined at:
 24473 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 24474 ;; Parameters:    Size  Location     Type
 24475 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 24476 ;;		 -> EUSART2_Receive_ISR(1), 
 24477 ;; Auto vars:     Size  Location     Type
 24478 ;;		None
 24479 ;; Return value:  Size  Location     Type
 24480 ;;                  1    wreg      void 
 24481 ;; Registers used:
 24482 ;;		wreg, status,2, status,0
 24483 ;; Tracked objects:
 24484 ;;		On entry : 0/0
 24485 ;;		On exit  : 0/0
 24486 ;;		Unchanged: 0/0
 24487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24488 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24491 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24492 ;;Total ram usage:        3 bytes
 24493 ;; Hardware stack levels used:    1
 24494 ;; Hardware stack levels required when called:   13
 24495 ;; This function calls:
 24496 ;;		Nothing
 24497 ;; This function is called by:
 24498 ;;		_EUSART2_Initialize
 24499 ;; This function uses a non-reentrant model
 24500 ;;
 24501                           
 24502                           	psect	text68
 24503  018C7C                     __ptext68:
 24504                           	opt stack 0
 24505  018C7C                     _EUSART2_SetRxInterruptHandler:
 24506                           	opt stack 15
 24507                           
 24508                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 24509                           
 24510                           ;incstack = 0
 24511  018C7C  C117  F268         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 24512  018C80  C118  F269         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 24513  018C84  C119  F26A         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 24514  018C88  0012               	return		;funcret
 24515  018C8A                     __end_of_EUSART2_SetRxInterruptHandler:
 24516                           	opt stack 0
 24517                           tblptru	equ	0xFF8
 24518                           tblptrh	equ	0xFF7
 24519                           tblptrl	equ	0xFF6
 24520                           tablat	equ	0xFF5
 24521                           prodh	equ	0xFF4
 24522                           prodl	equ	0xFF3
 24523                           intcon	equ	0xFF2
 24524                           indf0	equ	0xFEF
 24525                           postinc0	equ	0xFEE
 24526                           fsr0h	equ	0xFEA
 24527                           fsr0l	equ	0xFE9
 24528                           wreg	equ	0xFE8
 24529                           indf1	equ	0xFE7
 24530                           postdec1	equ	0xFE5
 24531                           plusw1	equ	0xFE3
 24532                           fsr1h	equ	0xFE2
 24533                           fsr1l	equ	0xFE1
 24534                           indf2	equ	0xFDF
 24535                           postinc2	equ	0xFDE
 24536                           postdec2	equ	0xFDD
 24537                           plusw2	equ	0xFDB
 24538                           fsr2h	equ	0xFDA
 24539                           fsr2l	equ	0xFD9
 24540                           status	equ	0xFD8
 24541                           
 24542 ;; *************** function _ADCC_Initialize *****************
 24543 ;; Defined at:
 24544 ;;		line 63 in file "mcc_generated_files/adcc.c"
 24545 ;; Parameters:    Size  Location     Type
 24546 ;;		None
 24547 ;; Auto vars:     Size  Location     Type
 24548 ;;		None
 24549 ;; Return value:  Size  Location     Type
 24550 ;;                  1    wreg      void 
 24551 ;; Registers used:
 24552 ;;		wreg, status,2, status,0, cstack
 24553 ;; Tracked objects:
 24554 ;;		On entry : 0/0
 24555 ;;		On exit  : 0/0
 24556 ;;		Unchanged: 0/0
 24557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24562 ;;Total ram usage:        0 bytes
 24563 ;; Hardware stack levels used:    1
 24564 ;; Hardware stack levels required when called:   14
 24565 ;; This function calls:
 24566 ;;		_ADCC_SetADTIInterruptHandler
 24567 ;; This function is called by:
 24568 ;;		_SYSTEM_Initialize
 24569 ;; This function uses a non-reentrant model
 24570 ;;
 24571                           
 24572                           	psect	text69
 24573  0181B2                     __ptext69:
 24574                           	opt stack 0
 24575  0181B2                     _ADCC_Initialize:
 24576                           	opt stack 15
 24577                           
 24578                           ;adcc.c: 67: ADLTHL = 0x00;
 24579                           
 24580                           ;incstack = 0
 24581  0181B2  0E00               	movlw	0
 24582  0181B4  6E6A               	movwf	3946,c	;volatile
 24583                           
 24584                           ;adcc.c: 69: ADLTHH = 0x00;
 24585  0181B6  0E00               	movlw	0
 24586  0181B8  6E6B               	movwf	3947,c	;volatile
 24587                           
 24588                           ;adcc.c: 71: ADUTHL = 0x00;
 24589  0181BA  0E00               	movlw	0
 24590  0181BC  6E6C               	movwf	3948,c	;volatile
 24591                           
 24592                           ;adcc.c: 73: ADUTHH = 0x00;
 24593  0181BE  0E00               	movlw	0
 24594  0181C0  6E6D               	movwf	3949,c	;volatile
 24595                           
 24596                           ;adcc.c: 75: ADSTPTL = 0x00;
 24597  0181C2  0E00               	movlw	0
 24598  0181C4  6E68               	movwf	3944,c	;volatile
 24599                           
 24600                           ;adcc.c: 77: ADSTPTH = 0x00;
 24601  0181C6  0E00               	movlw	0
 24602  0181C8  6E69               	movwf	3945,c	;volatile
 24603                           
 24604                           ;adcc.c: 79: ADRPT = 0xFF;
 24605  0181CA  6866               	setf	3942,c	;volatile
 24606                           
 24607                           ;adcc.c: 81: ADPCH = 0x00;
 24608  0181CC  0E00               	movlw	0
 24609  0181CE  010F               	movlb	15	; () banked
 24610  0181D0  6F5F               	movwf	95,b	;volatile
 24611                           
 24612                           ;adcc.c: 83: ADCAP = 0x00;
 24613  0181D2  0E00               	movlw	0
 24614  0181D4  6F5D               	movwf	93,b	;volatile
 24615                           
 24616                           ;adcc.c: 85: ADCON1 = 0x00;
 24617  0181D6  0E00               	movlw	0
 24618  0181D8  6F59               	movwf	89,b	;volatile
 24619                           
 24620                           ;adcc.c: 87: ADCON2 = 0x04;
 24621  0181DA  0E04               	movlw	4
 24622  0181DC  6F5A               	movwf	90,b	;volatile
 24623                           
 24624                           ;adcc.c: 89: ADCON3 = 0x5F;
 24625  0181DE  0E5F               	movlw	95
 24626  0181E0  6F5B               	movwf	91,b	;volatile
 24627                           
 24628                           ;adcc.c: 91: ADSTAT = 0x00;
 24629  0181E2  0E00               	movlw	0
 24630  0181E4  6E65               	movwf	3941,c	;volatile
 24631                           
 24632                           ;adcc.c: 93: ADREF = 0x12;
 24633  0181E6  0E12               	movlw	18
 24634  0181E8  6F58               	movwf	88,b	;volatile
 24635                           
 24636                           ;adcc.c: 95: ADACT = 0x00;
 24637  0181EA  0E00               	movlw	0
 24638  0181EC  6F56               	movwf	86,b	;volatile
 24639                           
 24640                           ;adcc.c: 97: ADCLK = 0x1F;
 24641  0181EE  0E1F               	movlw	31
 24642  0181F0  6F57               	movwf	87,b	;volatile
 24643                           
 24644                           ;adcc.c: 99: ADCON0 = 0xC4;
 24645  0181F2  0EC4               	movlw	196
 24646  0181F4  6E60               	movwf	3936,c	;volatile
 24647                           
 24648                           ; BSR set to: 15
 24649                           ;adcc.c: 101: ADACQ = 0xFF;
 24650  0181F6  695C               	setf	92,b	;volatile
 24651                           
 24652                           ; BSR set to: 15
 24653                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 24654  0181F8  010E               	movlb	14	; () banked
 24655  0181FA  9334               	bcf	52,1,b	;volatile
 24656                           
 24657                           ; BSR set to: 14
 24658                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 24659  0181FC  832A               	bsf	42,1,b	;volatile
 24660                           
 24661                           ; BSR set to: 14
 24662                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 24663  0181FE  0EF6               	movlw	low _ADCC_DefaultInterruptHandler
 24664  018200  0101               	movlb	1	; () banked
 24665  018202  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 24666  018204  0E8C               	movlw	high _ADCC_DefaultInterruptHandler
 24667  018206  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 24668  018208  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24669  01820A  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 24670  01820C  EC45  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24671  018210  0012               	return		;funcret
 24672  018212                     __end_of_ADCC_Initialize:
 24673                           	opt stack 0
 24674                           tblptru	equ	0xFF8
 24675                           tblptrh	equ	0xFF7
 24676                           tblptrl	equ	0xFF6
 24677                           tablat	equ	0xFF5
 24678                           prodh	equ	0xFF4
 24679                           prodl	equ	0xFF3
 24680                           intcon	equ	0xFF2
 24681                           indf0	equ	0xFEF
 24682                           postinc0	equ	0xFEE
 24683                           fsr0h	equ	0xFEA
 24684                           fsr0l	equ	0xFE9
 24685                           wreg	equ	0xFE8
 24686                           indf1	equ	0xFE7
 24687                           postdec1	equ	0xFE5
 24688                           plusw1	equ	0xFE3
 24689                           fsr1h	equ	0xFE2
 24690                           fsr1l	equ	0xFE1
 24691                           indf2	equ	0xFDF
 24692                           postinc2	equ	0xFDE
 24693                           postdec2	equ	0xFDD
 24694                           plusw2	equ	0xFDB
 24695                           fsr2h	equ	0xFDA
 24696                           fsr2l	equ	0xFD9
 24697                           status	equ	0xFD8
 24698                           
 24699 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24700 ;; Defined at:
 24701 ;;		line 307 in file "mcc_generated_files/adcc.c"
 24702 ;; Parameters:    Size  Location     Type
 24703 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 24704 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 24705 ;; Auto vars:     Size  Location     Type
 24706 ;;		None
 24707 ;; Return value:  Size  Location     Type
 24708 ;;                  1    wreg      void 
 24709 ;; Registers used:
 24710 ;;		wreg, status,2, status,0
 24711 ;; Tracked objects:
 24712 ;;		On entry : 0/0
 24713 ;;		On exit  : 0/0
 24714 ;;		Unchanged: 0/0
 24715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24716 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24719 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24720 ;;Total ram usage:        3 bytes
 24721 ;; Hardware stack levels used:    1
 24722 ;; Hardware stack levels required when called:   13
 24723 ;; This function calls:
 24724 ;;		Nothing
 24725 ;; This function is called by:
 24726 ;;		_ADCC_Initialize
 24727 ;;		_main
 24728 ;; This function uses a non-reentrant model
 24729 ;;
 24730                           
 24731                           	psect	text70
 24732  018C8A                     __ptext70:
 24733                           	opt stack 0
 24734  018C8A                     _ADCC_SetADTIInterruptHandler:
 24735                           	opt stack 15
 24736                           
 24737                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 24738                           
 24739                           ;incstack = 0
 24740  018C8A  C117  F262         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 24741  018C8E  C118  F263         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 24742  018C92  C119  F264         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 24743  018C96  0012               	return		;funcret
 24744  018C98                     __end_of_ADCC_SetADTIInterruptHandler:
 24745                           	opt stack 0
 24746                           tblptru	equ	0xFF8
 24747                           tblptrh	equ	0xFF7
 24748                           tblptrl	equ	0xFF6
 24749                           tablat	equ	0xFF5
 24750                           prodh	equ	0xFF4
 24751                           prodl	equ	0xFF3
 24752                           intcon	equ	0xFF2
 24753                           indf0	equ	0xFEF
 24754                           postinc0	equ	0xFEE
 24755                           fsr0h	equ	0xFEA
 24756                           fsr0l	equ	0xFE9
 24757                           wreg	equ	0xFE8
 24758                           indf1	equ	0xFE7
 24759                           postdec1	equ	0xFE5
 24760                           plusw1	equ	0xFE3
 24761                           fsr1h	equ	0xFE2
 24762                           fsr1l	equ	0xFE1
 24763                           indf2	equ	0xFDF
 24764                           postinc2	equ	0xFDE
 24765                           postdec2	equ	0xFDD
 24766                           plusw2	equ	0xFDB
 24767                           fsr2h	equ	0xFDA
 24768                           fsr2l	equ	0xFD9
 24769                           status	equ	0xFD8
 24770                           
 24771 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 24772 ;; Defined at:
 24773 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 24774 ;; Parameters:    Size  Location     Type
 24775 ;;		None
 24776 ;; Auto vars:     Size  Location     Type
 24777 ;;		None
 24778 ;; Return value:  Size  Location     Type
 24779 ;;                  1    wreg      void 
 24780 ;; Registers used:
 24781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24782 ;; Tracked objects:
 24783 ;;		On entry : 0/0
 24784 ;;		On exit  : 0/0
 24785 ;;		Unchanged: 0/0
 24786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24789 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24790 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24791 ;;Total ram usage:       21 bytes
 24792 ;; Hardware stack levels used:    1
 24793 ;; Hardware stack levels required when called:   12
 24794 ;; This function calls:
 24795 ;;		Absolute function
 24796 ;;		_EUSART2_Transmit_ISR
 24797 ;;		_HLVD_ISR
 24798 ;;		_TMR6_ISR
 24799 ;;		_TMR7_ISR
 24800 ;; This function is called by:
 24801 ;;		Interrupt level 1
 24802 ;; This function uses a non-reentrant model
 24803 ;;
 24804                           
 24805                           	psect	intcodelo
 24806  000018                     __pintcodelo:
 24807                           	opt stack 0
 24808  000018                     _INTERRUPT_InterruptManagerLow:
 24809                           	opt stack 11
 24810                           
 24811                           ;incstack = 0
 24812  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24813  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 24814  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 24815  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 24816  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 24817  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 24818  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 24819  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 24820  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 24821  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 24822  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 24823  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 24824  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 24825  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 24826  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 24827  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 24828  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 24829  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 24830  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 24831  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 24832  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 24833  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 24834                           
 24835                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 24836  00006E  010E               	movlb	14	; () banked
 24837  000070  BB2E               	btfsc	46,5,b	;volatile
 24838                           
 24839                           ; BSR set to: 14
 24840  000072  AB38               	btfss	56,5,b	;volatile
 24841  000074  D003               	goto	i1l223
 24842                           
 24843                           ; BSR set to: 14
 24844                           ;interrupt_manager.c: 108: {
 24845                           ;interrupt_manager.c: 109: TMR6_ISR();
 24846  000076  ECE4  F0C4         	call	_TMR6_ISR	;wreg free
 24847                           
 24848                           ;interrupt_manager.c: 110: }
 24849  00007A  D01B               	goto	i1l229
 24850  00007C                     i1l223:
 24851                           
 24852                           ; BSR set to: 14
 24853                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 24854  00007C  BD2C               	btfsc	44,6,b	;volatile
 24855                           
 24856                           ; BSR set to: 14
 24857  00007E  AD36               	btfss	54,6,b	;volatile
 24858  000080  D00D               	goto	i1l225
 24859                           
 24860                           ; BSR set to: 14
 24861                           ;interrupt_manager.c: 112: {
 24862                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 24863  000082  D801               	call	i1u2630_28
 24864  000084  D016               	goto	i1l229
 24865  000086                     i1u2630_28:
 24866  000086  0005               	push	
 24867  000088  6EFA               	movwf	pclath,c
 24868  00008A  0102               	movlb	2	; () banked
 24869  00008C  516B               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 24870  00008E  6EFD               	movwf	tosl,c
 24871  000090  516C               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 24872  000092  6EFE               	movwf	tosh,c
 24873  000094  516D               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 24874  000096  6EFF               	movwf	tosu,c
 24875  000098  50FA               	movf	pclath,w,c
 24876  00009A  0012               	return		;indir
 24877  00009C                     i1l225:
 24878                           
 24879                           ; BSR set to: 14
 24880                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 24881  00009C  BD2E               	btfsc	46,6,b	;volatile
 24882                           
 24883                           ; BSR set to: 14
 24884  00009E  AD38               	btfss	56,6,b	;volatile
 24885  0000A0  D003               	goto	i1l227
 24886                           
 24887                           ; BSR set to: 14
 24888                           ;interrupt_manager.c: 116: {
 24889                           ;interrupt_manager.c: 117: TMR7_ISR();
 24890  0000A2  EC10  F0C4         	call	_TMR7_ISR	;wreg free
 24891                           
 24892                           ;interrupt_manager.c: 118: }
 24893  0000A6  D005               	goto	i1l229
 24894  0000A8                     i1l227:
 24895                           
 24896                           ; BSR set to: 14
 24897                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 24898  0000A8  BF2B               	btfsc	43,7,b	;volatile
 24899                           
 24900                           ; BSR set to: 14
 24901  0000AA  AF35               	btfss	53,7,b	;volatile
 24902  0000AC  D002               	goto	i1l229
 24903                           
 24904                           ; BSR set to: 14
 24905                           ;interrupt_manager.c: 120: {
 24906                           ;interrupt_manager.c: 121: HLVD_ISR();
 24907  0000AE  EC66  F0C6         	call	_HLVD_ISR	;wreg free
 24908  0000B2                     i1l229:
 24909                           
 24910                           ;interrupt_manager.c: 123: else
 24911                           ;interrupt_manager.c: 124: {
 24912  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 24913  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 24914  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 24915  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 24916  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 24917  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 24918  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 24919  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 24920  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 24921  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 24922  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 24923  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 24924  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 24925  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 24926  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 24927  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 24928  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 24929  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 24930  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 24931  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 24932  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 24933  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24934  000108  0010               	retfie	
 24935  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 24936                           	opt stack 0
 24937                           tosu	equ	0xFFF
 24938                           tosh	equ	0xFFE
 24939                           tosl	equ	0xFFD
 24940                           pclatu	equ	0xFFB
 24941                           pclath	equ	0xFFA
 24942                           tblptru	equ	0xFF8
 24943                           tblptrh	equ	0xFF7
 24944                           tblptrl	equ	0xFF6
 24945                           tablat	equ	0xFF5
 24946                           prodh	equ	0xFF4
 24947                           prodl	equ	0xFF3
 24948                           intcon	equ	0xFF2
 24949                           indf0	equ	0xFEF
 24950                           postinc0	equ	0xFEE
 24951                           fsr0h	equ	0xFEA
 24952                           fsr0l	equ	0xFE9
 24953                           wreg	equ	0xFE8
 24954                           indf1	equ	0xFE7
 24955                           postdec1	equ	0xFE5
 24956                           plusw1	equ	0xFE3
 24957                           fsr1h	equ	0xFE2
 24958                           fsr1l	equ	0xFE1
 24959                           bsr	equ	0xFE0
 24960                           indf2	equ	0xFDF
 24961                           postinc2	equ	0xFDE
 24962                           postdec2	equ	0xFDD
 24963                           plusw2	equ	0xFDB
 24964                           fsr2h	equ	0xFDA
 24965                           fsr2l	equ	0xFD9
 24966                           status	equ	0xFD8
 24967                           
 24968 ;; *************** function _TMR7_ISR *****************
 24969 ;; Defined at:
 24970 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 24971 ;; Parameters:    Size  Location     Type
 24972 ;;		None
 24973 ;; Auto vars:     Size  Location     Type
 24974 ;;		None
 24975 ;; Return value:  Size  Location     Type
 24976 ;;                  1    wreg      void 
 24977 ;; Registers used:
 24978 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 24979 ;; Tracked objects:
 24980 ;;		On entry : 0/0
 24981 ;;		On exit  : 0/0
 24982 ;;		Unchanged: 0/0
 24983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24988 ;;Total ram usage:        0 bytes
 24989 ;; Hardware stack levels used:    1
 24990 ;; Hardware stack levels required when called:   11
 24991 ;; This function calls:
 24992 ;;		Absolute function
 24993 ;;		_TMR7_DefaultInterruptHandler
 24994 ;;		_TMR7_WriteTimer
 24995 ;;		_acquisitionTimerCallback
 24996 ;; This function is called by:
 24997 ;;		_INTERRUPT_InterruptManagerLow
 24998 ;; This function uses a non-reentrant model
 24999 ;;
 25000                           
 25001                           	psect	text72
 25002  018820                     __ptext72:
 25003                           	opt stack 0
 25004  018820                     _TMR7_ISR:
 25005                           	opt stack 11
 25006                           
 25007                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 25008                           
 25009                           ;incstack = 0
 25010  018820  010E               	movlb	14	; () banked
 25011  018822  9D38               	bcf	56,6,b	;volatile
 25012                           
 25013                           ; BSR set to: 14
 25014                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 25015  018824  C1D9  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 25016  018828  C1DA  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 25017  01882C  EC1F  F0C5         	call	_TMR7_WriteTimer	;wreg free
 25018                           
 25019                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 25020  018830  0102               	movlb	2	; () banked
 25021  018832  515F               	movf	_TMR7_InterruptHandler& (0+255),w,b
 25022  018834  1160               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 25023  018836  1161               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 25024  018838  B4D8               	btfsc	status,2,c
 25025  01883A  0012               	return	
 25026                           
 25027                           ; BSR set to: 2
 25028                           ;tmr7.c: 172: {
 25029                           ;tmr7.c: 173: TMR7_InterruptHandler();
 25030  01883C  D801               	call	i1u2613_28
 25031  01883E  0012               	return	
 25032  018840                     i1u2613_28:
 25033  018840  0005               	push	
 25034  018842  6EFA               	movwf	pclath,c
 25035  018844  515F               	movf	_TMR7_InterruptHandler& (0+255),w,b
 25036  018846  6EFD               	movwf	tosl,c
 25037  018848  5160               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 25038  01884A  6EFE               	movwf	tosh,c
 25039  01884C  5161               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 25040  01884E  6EFF               	movwf	tosu,c
 25041  018850  50FA               	movf	pclath,w,c
 25042  018852  0012               	return		;indir
 25043  018854                     __end_of_TMR7_ISR:
 25044                           	opt stack 0
 25045                           tosu	equ	0xFFF
 25046                           tosh	equ	0xFFE
 25047                           tosl	equ	0xFFD
 25048                           pclatu	equ	0xFFB
 25049                           pclath	equ	0xFFA
 25050                           tblptru	equ	0xFF8
 25051                           tblptrh	equ	0xFF7
 25052                           tblptrl	equ	0xFF6
 25053                           tablat	equ	0xFF5
 25054                           prodh	equ	0xFF4
 25055                           prodl	equ	0xFF3
 25056                           intcon	equ	0xFF2
 25057                           indf0	equ	0xFEF
 25058                           postinc0	equ	0xFEE
 25059                           fsr0h	equ	0xFEA
 25060                           fsr0l	equ	0xFE9
 25061                           wreg	equ	0xFE8
 25062                           indf1	equ	0xFE7
 25063                           postdec1	equ	0xFE5
 25064                           plusw1	equ	0xFE3
 25065                           fsr1h	equ	0xFE2
 25066                           fsr1l	equ	0xFE1
 25067                           bsr	equ	0xFE0
 25068                           indf2	equ	0xFDF
 25069                           postinc2	equ	0xFDE
 25070                           postdec2	equ	0xFDD
 25071                           plusw2	equ	0xFDB
 25072                           fsr2h	equ	0xFDA
 25073                           fsr2l	equ	0xFD9
 25074                           status	equ	0xFD8
 25075                           
 25076 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 25077 ;; Defined at:
 25078 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 25079 ;; Parameters:    Size  Location     Type
 25080 ;;		None
 25081 ;; Auto vars:     Size  Location     Type
 25082 ;;		None
 25083 ;; Return value:  Size  Location     Type
 25084 ;;                  1    wreg      void 
 25085 ;; Registers used:
 25086 ;;		None
 25087 ;; Tracked objects:
 25088 ;;		On entry : 0/0
 25089 ;;		On exit  : 0/0
 25090 ;;		Unchanged: 0/0
 25091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25096 ;;Total ram usage:        0 bytes
 25097 ;; Hardware stack levels used:    1
 25098 ;; Hardware stack levels required when called:    9
 25099 ;; This function calls:
 25100 ;;		Nothing
 25101 ;; This function is called by:
 25102 ;;		_TMR7_Initialize
 25103 ;;		_TMR7_ISR
 25104 ;; This function uses a non-reentrant model
 25105 ;;
 25106                           
 25107                           	psect	text73
 25108  018CF0                     __ptext73:
 25109                           	opt stack 0
 25110  018CF0                     _TMR7_DefaultInterruptHandler:
 25111                           	opt stack 12
 25112                           
 25113                           ;incstack = 0
 25114  018CF0  0012               	return		;funcret
 25115  018CF2                     __end_of_TMR7_DefaultInterruptHandler:
 25116                           	opt stack 0
 25117                           tosu	equ	0xFFF
 25118                           tosh	equ	0xFFE
 25119                           tosl	equ	0xFFD
 25120                           pclatu	equ	0xFFB
 25121                           pclath	equ	0xFFA
 25122                           tblptru	equ	0xFF8
 25123                           tblptrh	equ	0xFF7
 25124                           tblptrl	equ	0xFF6
 25125                           tablat	equ	0xFF5
 25126                           prodh	equ	0xFF4
 25127                           prodl	equ	0xFF3
 25128                           intcon	equ	0xFF2
 25129                           indf0	equ	0xFEF
 25130                           postinc0	equ	0xFEE
 25131                           fsr0h	equ	0xFEA
 25132                           fsr0l	equ	0xFE9
 25133                           wreg	equ	0xFE8
 25134                           indf1	equ	0xFE7
 25135                           postdec1	equ	0xFE5
 25136                           plusw1	equ	0xFE3
 25137                           fsr1h	equ	0xFE2
 25138                           fsr1l	equ	0xFE1
 25139                           bsr	equ	0xFE0
 25140                           indf2	equ	0xFDF
 25141                           postinc2	equ	0xFDE
 25142                           postdec2	equ	0xFDD
 25143                           plusw2	equ	0xFDB
 25144                           fsr2h	equ	0xFDA
 25145                           fsr2l	equ	0xFD9
 25146                           status	equ	0xFD8
 25147                           
 25148 ;; *************** function _acquisitionTimerCallback *****************
 25149 ;; Defined at:
 25150 ;;		line 368 in file "main.c"
 25151 ;; Parameters:    Size  Location     Type
 25152 ;;		None
 25153 ;; Auto vars:     Size  Location     Type
 25154 ;;		None
 25155 ;; Return value:  Size  Location     Type
 25156 ;;                  1    wreg      void 
 25157 ;; Registers used:
 25158 ;;		wreg, status,2, cstack
 25159 ;; Tracked objects:
 25160 ;;		On entry : 0/0
 25161 ;;		On exit  : 0/0
 25162 ;;		Unchanged: 0/0
 25163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25168 ;;Total ram usage:        0 bytes
 25169 ;; Hardware stack levels used:    1
 25170 ;; Hardware stack levels required when called:   10
 25171 ;; This function calls:
 25172 ;;		_ADCC_ClearAccumulator
 25173 ;;		_ADCC_DischargeSampleCapacitor
 25174 ;;		_ADCC_StartConversion
 25175 ;; This function is called by:
 25176 ;;		_main
 25177 ;;		_TMR7_ISR
 25178 ;; This function uses a non-reentrant model
 25179 ;;
 25180                           
 25181                           	psect	text74
 25182  018BE4                     __ptext74:
 25183                           	opt stack 0
 25184  018BE4                     _acquisitionTimerCallback:
 25185                           	opt stack 11
 25186                           
 25187                           ;main.c: 371: ADCC_DischargeSampleCapacitor();
 25188                           
 25189                           ;incstack = 0
 25190  018BE4  EC62  F0C6         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25191                           
 25192                           ;main.c: 374: ADCC_ClearAccumulator();
 25193  018BE8  EC70  F0C6         	call	_ADCC_ClearAccumulator	;wreg free
 25194                           
 25195                           ;main.c: 377: ADCC_StartConversion(next_channel);
 25196  018BEC  0101               	movlb	1	; () banked
 25197  018BEE  51E8               	movf	_next_channel& (0+255),w,b
 25198  018BF0  EC4C  F0C6         	call	_ADCC_StartConversion
 25199  018BF4  0012               	return		;funcret
 25200  018BF6                     __end_of_acquisitionTimerCallback:
 25201                           	opt stack 0
 25202                           tosu	equ	0xFFF
 25203                           tosh	equ	0xFFE
 25204                           tosl	equ	0xFFD
 25205                           pclatu	equ	0xFFB
 25206                           pclath	equ	0xFFA
 25207                           tblptru	equ	0xFF8
 25208                           tblptrh	equ	0xFF7
 25209                           tblptrl	equ	0xFF6
 25210                           tablat	equ	0xFF5
 25211                           prodh	equ	0xFF4
 25212                           prodl	equ	0xFF3
 25213                           intcon	equ	0xFF2
 25214                           indf0	equ	0xFEF
 25215                           postinc0	equ	0xFEE
 25216                           fsr0h	equ	0xFEA
 25217                           fsr0l	equ	0xFE9
 25218                           wreg	equ	0xFE8
 25219                           indf1	equ	0xFE7
 25220                           postdec1	equ	0xFE5
 25221                           plusw1	equ	0xFE3
 25222                           fsr1h	equ	0xFE2
 25223                           fsr1l	equ	0xFE1
 25224                           bsr	equ	0xFE0
 25225                           indf2	equ	0xFDF
 25226                           postinc2	equ	0xFDE
 25227                           postdec2	equ	0xFDD
 25228                           plusw2	equ	0xFDB
 25229                           fsr2h	equ	0xFDA
 25230                           fsr2l	equ	0xFD9
 25231                           status	equ	0xFD8
 25232                           
 25233 ;; *************** function _ADCC_StartConversion *****************
 25234 ;; Defined at:
 25235 ;;		line 112 in file "mcc_generated_files/adcc.c"
 25236 ;; Parameters:    Size  Location     Type
 25237 ;;  channel         1    wreg     enum E17310
 25238 ;; Auto vars:     Size  Location     Type
 25239 ;;  channel         1    0[BANK1 ] enum E17310
 25240 ;; Return value:  Size  Location     Type
 25241 ;;                  1    wreg      void 
 25242 ;; Registers used:
 25243 ;;		wreg
 25244 ;; Tracked objects:
 25245 ;;		On entry : 0/0
 25246 ;;		On exit  : 0/0
 25247 ;;		Unchanged: 0/0
 25248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25250 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25252 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25253 ;;Total ram usage:        1 bytes
 25254 ;; Hardware stack levels used:    1
 25255 ;; Hardware stack levels required when called:    9
 25256 ;; This function calls:
 25257 ;;		Nothing
 25258 ;; This function is called by:
 25259 ;;		_acquisitionTimerCallback
 25260 ;; This function uses a non-reentrant model
 25261 ;;
 25262                           
 25263                           	psect	text75
 25264  018C98                     __ptext75:
 25265                           	opt stack 0
 25266  018C98                     _ADCC_StartConversion:
 25267                           	opt stack 11
 25268                           
 25269                           ;incstack = 0
 25270                           ;ADCC_StartConversion@channel stored from wreg
 25271  018C98  0101               	movlb	1	; () banked
 25272  018C9A  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 25273                           
 25274                           ;adcc.c: 115: ADPCH = channel;
 25275  018C9C  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 25276                           
 25277                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 25278  018CA0  8E60               	bsf	3936,7,c	;volatile
 25279                           
 25280                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 25281  018CA2  8060               	bsf	3936,0,c	;volatile
 25282  018CA4  0012               	return		;funcret
 25283  018CA6                     __end_of_ADCC_StartConversion:
 25284                           	opt stack 0
 25285                           tosu	equ	0xFFF
 25286                           tosh	equ	0xFFE
 25287                           tosl	equ	0xFFD
 25288                           pclatu	equ	0xFFB
 25289                           pclath	equ	0xFFA
 25290                           tblptru	equ	0xFF8
 25291                           tblptrh	equ	0xFF7
 25292                           tblptrl	equ	0xFF6
 25293                           tablat	equ	0xFF5
 25294                           prodh	equ	0xFF4
 25295                           prodl	equ	0xFF3
 25296                           intcon	equ	0xFF2
 25297                           indf0	equ	0xFEF
 25298                           postinc0	equ	0xFEE
 25299                           fsr0h	equ	0xFEA
 25300                           fsr0l	equ	0xFE9
 25301                           wreg	equ	0xFE8
 25302                           indf1	equ	0xFE7
 25303                           postdec1	equ	0xFE5
 25304                           plusw1	equ	0xFE3
 25305                           fsr1h	equ	0xFE2
 25306                           fsr1l	equ	0xFE1
 25307                           bsr	equ	0xFE0
 25308                           indf2	equ	0xFDF
 25309                           postinc2	equ	0xFDE
 25310                           postdec2	equ	0xFDD
 25311                           plusw2	equ	0xFDB
 25312                           fsr2h	equ	0xFDA
 25313                           fsr2l	equ	0xFD9
 25314                           status	equ	0xFD8
 25315                           
 25316 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 25317 ;; Defined at:
 25318 ;;		line 174 in file "mcc_generated_files/adcc.c"
 25319 ;; Parameters:    Size  Location     Type
 25320 ;;		None
 25321 ;; Auto vars:     Size  Location     Type
 25322 ;;		None
 25323 ;; Return value:  Size  Location     Type
 25324 ;;                  1    wreg      void 
 25325 ;; Registers used:
 25326 ;;		wreg, status,2
 25327 ;; Tracked objects:
 25328 ;;		On entry : 0/0
 25329 ;;		On exit  : 0/0
 25330 ;;		Unchanged: 0/0
 25331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25336 ;;Total ram usage:        0 bytes
 25337 ;; Hardware stack levels used:    1
 25338 ;; Hardware stack levels required when called:    9
 25339 ;; This function calls:
 25340 ;;		Nothing
 25341 ;; This function is called by:
 25342 ;;		_acquisitionTimerCallback
 25343 ;; This function uses a non-reentrant model
 25344 ;;
 25345                           
 25346                           	psect	text76
 25347  018CC4                     __ptext76:
 25348                           	opt stack 0
 25349  018CC4                     _ADCC_DischargeSampleCapacitor:
 25350                           	opt stack 11
 25351                           
 25352                           ;adcc.c: 177: ADPCH = 0x3c;
 25353                           
 25354                           ;incstack = 0
 25355  018CC4  0E3C               	movlw	60
 25356  018CC6  010F               	movlb	15	; () banked
 25357  018CC8  6F5F               	movwf	95,b	;volatile
 25358                           
 25359                           ; BSR set to: 15
 25360  018CCA  0012               	return		;funcret
 25361  018CCC                     __end_of_ADCC_DischargeSampleCapacitor:
 25362                           	opt stack 0
 25363                           tosu	equ	0xFFF
 25364                           tosh	equ	0xFFE
 25365                           tosl	equ	0xFFD
 25366                           pclatu	equ	0xFFB
 25367                           pclath	equ	0xFFA
 25368                           tblptru	equ	0xFF8
 25369                           tblptrh	equ	0xFF7
 25370                           tblptrl	equ	0xFF6
 25371                           tablat	equ	0xFF5
 25372                           prodh	equ	0xFF4
 25373                           prodl	equ	0xFF3
 25374                           intcon	equ	0xFF2
 25375                           indf0	equ	0xFEF
 25376                           postinc0	equ	0xFEE
 25377                           fsr0h	equ	0xFEA
 25378                           fsr0l	equ	0xFE9
 25379                           wreg	equ	0xFE8
 25380                           indf1	equ	0xFE7
 25381                           postdec1	equ	0xFE5
 25382                           plusw1	equ	0xFE3
 25383                           fsr1h	equ	0xFE2
 25384                           fsr1l	equ	0xFE1
 25385                           bsr	equ	0xFE0
 25386                           indf2	equ	0xFDF
 25387                           postinc2	equ	0xFDE
 25388                           postdec2	equ	0xFDD
 25389                           plusw2	equ	0xFDB
 25390                           fsr2h	equ	0xFDA
 25391                           fsr2l	equ	0xFD9
 25392                           status	equ	0xFD8
 25393                           
 25394 ;; *************** function _ADCC_ClearAccumulator *****************
 25395 ;; Defined at:
 25396 ;;		line 204 in file "mcc_generated_files/adcc.c"
 25397 ;; Parameters:    Size  Location     Type
 25398 ;;		None
 25399 ;; Auto vars:     Size  Location     Type
 25400 ;;		None
 25401 ;; Return value:  Size  Location     Type
 25402 ;;                  1    wreg      void 
 25403 ;; Registers used:
 25404 ;;		None
 25405 ;; Tracked objects:
 25406 ;;		On entry : 0/0
 25407 ;;		On exit  : 0/0
 25408 ;;		Unchanged: 0/0
 25409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25414 ;;Total ram usage:        0 bytes
 25415 ;; Hardware stack levels used:    1
 25416 ;; Hardware stack levels required when called:    9
 25417 ;; This function calls:
 25418 ;;		Nothing
 25419 ;; This function is called by:
 25420 ;;		_acquisitionTimerCallback
 25421 ;; This function uses a non-reentrant model
 25422 ;;
 25423                           
 25424                           	psect	text77
 25425  018CE0                     __ptext77:
 25426                           	opt stack 0
 25427  018CE0                     _ADCC_ClearAccumulator:
 25428                           	opt stack 11
 25429                           
 25430                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 25431                           
 25432                           ; BSR set to: 15
 25433                           ;incstack = 0
 25434  018CE0  010F               	movlb	15	; () banked
 25435  018CE2  875A               	bsf	90,3,b	;volatile
 25436                           
 25437                           ; BSR set to: 15
 25438  018CE4  0012               	return		;funcret
 25439  018CE6                     __end_of_ADCC_ClearAccumulator:
 25440                           	opt stack 0
 25441                           tosu	equ	0xFFF
 25442                           tosh	equ	0xFFE
 25443                           tosl	equ	0xFFD
 25444                           pclatu	equ	0xFFB
 25445                           pclath	equ	0xFFA
 25446                           tblptru	equ	0xFF8
 25447                           tblptrh	equ	0xFF7
 25448                           tblptrl	equ	0xFF6
 25449                           tablat	equ	0xFF5
 25450                           prodh	equ	0xFF4
 25451                           prodl	equ	0xFF3
 25452                           intcon	equ	0xFF2
 25453                           indf0	equ	0xFEF
 25454                           postinc0	equ	0xFEE
 25455                           fsr0h	equ	0xFEA
 25456                           fsr0l	equ	0xFE9
 25457                           wreg	equ	0xFE8
 25458                           indf1	equ	0xFE7
 25459                           postdec1	equ	0xFE5
 25460                           plusw1	equ	0xFE3
 25461                           fsr1h	equ	0xFE2
 25462                           fsr1l	equ	0xFE1
 25463                           bsr	equ	0xFE0
 25464                           indf2	equ	0xFDF
 25465                           postinc2	equ	0xFDE
 25466                           postdec2	equ	0xFDD
 25467                           plusw2	equ	0xFDB
 25468                           fsr2h	equ	0xFDA
 25469                           fsr2l	equ	0xFD9
 25470                           status	equ	0xFD8
 25471                           
 25472 ;; *************** function _TMR7_WriteTimer *****************
 25473 ;; Defined at:
 25474 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 25475 ;; Parameters:    Size  Location     Type
 25476 ;;  timerVal        2    0[BANK1 ] unsigned int 
 25477 ;; Auto vars:     Size  Location     Type
 25478 ;;		None
 25479 ;; Return value:  Size  Location     Type
 25480 ;;                  1    wreg      void 
 25481 ;; Registers used:
 25482 ;;		wreg, status,2
 25483 ;; Tracked objects:
 25484 ;;		On entry : 0/0
 25485 ;;		On exit  : 0/0
 25486 ;;		Unchanged: 0/0
 25487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25488 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25491 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25492 ;;Total ram usage:        2 bytes
 25493 ;; Hardware stack levels used:    1
 25494 ;; Hardware stack levels required when called:    9
 25495 ;; This function calls:
 25496 ;;		Nothing
 25497 ;; This function is called by:
 25498 ;;		_TMR7_ISR
 25499 ;;		_TMR7_Reload
 25500 ;; This function uses a non-reentrant model
 25501 ;;
 25502                           
 25503                           	psect	text78
 25504  018A3E                     __ptext78:
 25505                           	opt stack 0
 25506  018A3E                     _TMR7_WriteTimer:
 25507                           	opt stack 12
 25508                           
 25509                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 25510                           
 25511                           ; BSR set to: 15
 25512                           ;incstack = 0
 25513  018A3E  010F               	movlb	15	; () banked
 25514  018A40  A530               	btfss	48,2,b	;volatile
 25515  018A42  D009               	goto	i1l640
 25516                           
 25517                           ; BSR set to: 15
 25518                           ;tmr7.c: 130: {
 25519                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 25520  018A44  9130               	bcf	48,0,b	;volatile
 25521                           
 25522                           ; BSR set to: 15
 25523                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 25524  018A46  0101               	movlb	1	; () banked
 25525  018A48  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 25526  018A4A  010F               	movlb	15	; () banked
 25527  018A4C  6F2F               	movwf	47,b	;volatile
 25528                           
 25529                           ; BSR set to: 15
 25530                           ;tmr7.c: 136: TMR7L = timerVal;
 25531  018A4E  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 25532                           
 25533                           ; BSR set to: 15
 25534                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 25535  018A52  8130               	bsf	48,0,b	;volatile
 25536                           
 25537                           ;tmr7.c: 140: }
 25538  018A54  0012               	return	
 25539  018A56                     i1l640:
 25540                           
 25541                           ; BSR set to: 15
 25542                           ;tmr7.c: 141: else
 25543                           ;tmr7.c: 142: {
 25544                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 25545                           
 25546                           ; BSR set to: 15
 25547  018A56  0101               	movlb	1	; () banked
 25548  018A58  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 25549  018A5A  010F               	movlb	15	; () banked
 25550  018A5C  6F2F               	movwf	47,b	;volatile
 25551                           
 25552                           ; BSR set to: 15
 25553                           ;tmr7.c: 145: TMR7L = timerVal;
 25554  018A5E  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 25555  018A62  0012               	return	
 25556  018A64                     __end_of_TMR7_WriteTimer:
 25557                           	opt stack 0
 25558                           tosu	equ	0xFFF
 25559                           tosh	equ	0xFFE
 25560                           tosl	equ	0xFFD
 25561                           pclatu	equ	0xFFB
 25562                           pclath	equ	0xFFA
 25563                           tblptru	equ	0xFF8
 25564                           tblptrh	equ	0xFF7
 25565                           tblptrl	equ	0xFF6
 25566                           tablat	equ	0xFF5
 25567                           prodh	equ	0xFF4
 25568                           prodl	equ	0xFF3
 25569                           intcon	equ	0xFF2
 25570                           indf0	equ	0xFEF
 25571                           postinc0	equ	0xFEE
 25572                           fsr0h	equ	0xFEA
 25573                           fsr0l	equ	0xFE9
 25574                           wreg	equ	0xFE8
 25575                           indf1	equ	0xFE7
 25576                           postdec1	equ	0xFE5
 25577                           plusw1	equ	0xFE3
 25578                           fsr1h	equ	0xFE2
 25579                           fsr1l	equ	0xFE1
 25580                           bsr	equ	0xFE0
 25581                           indf2	equ	0xFDF
 25582                           postinc2	equ	0xFDE
 25583                           postdec2	equ	0xFDD
 25584                           plusw2	equ	0xFDB
 25585                           fsr2h	equ	0xFDA
 25586                           fsr2l	equ	0xFD9
 25587                           status	equ	0xFD8
 25588                           
 25589 ;; *************** function _TMR6_ISR *****************
 25590 ;; Defined at:
 25591 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 25592 ;; Parameters:    Size  Location     Type
 25593 ;;		None
 25594 ;; Auto vars:     Size  Location     Type
 25595 ;;		None
 25596 ;; Return value:  Size  Location     Type
 25597 ;;                  1    wreg      void 
 25598 ;; Registers used:
 25599 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 25600 ;; Tracked objects:
 25601 ;;		On entry : 0/0
 25602 ;;		On exit  : 0/0
 25603 ;;		Unchanged: 0/0
 25604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25609 ;;Total ram usage:        0 bytes
 25610 ;; Hardware stack levels used:    1
 25611 ;; Hardware stack levels required when called:   10
 25612 ;; This function calls:
 25613 ;;		Absolute function
 25614 ;;		_TMR6_DefaultInterruptHandler
 25615 ;;		_heartbeatTimerCallback
 25616 ;; This function is called by:
 25617 ;;		_INTERRUPT_InterruptManagerLow
 25618 ;; This function uses a non-reentrant model
 25619 ;;
 25620                           
 25621                           	psect	text79
 25622  0189C8                     __ptext79:
 25623                           	opt stack 0
 25624  0189C8                     _TMR6_ISR:
 25625                           	opt stack 12
 25626                           
 25627                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 25628                           
 25629                           ; BSR set to: 15
 25630                           ;incstack = 0
 25631  0189C8  010E               	movlb	14	; () banked
 25632  0189CA  9B38               	bcf	56,5,b	;volatile
 25633                           
 25634                           ; BSR set to: 14
 25635                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 25636  0189CC  0102               	movlb	2	; () banked
 25637  0189CE  5165               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25638  0189D0  1166               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25639  0189D2  1167               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25640  0189D4  B4D8               	btfsc	status,2,c
 25641  0189D6  0012               	return	
 25642                           
 25643                           ; BSR set to: 2
 25644                           ;tmr6.c: 172: {
 25645                           ;tmr6.c: 173: TMR6_InterruptHandler();
 25646  0189D8  D801               	call	i1u2611_28
 25647  0189DA  0012               	return	
 25648  0189DC                     i1u2611_28:
 25649  0189DC  0005               	push	
 25650  0189DE  6EFA               	movwf	pclath,c
 25651  0189E0  5165               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25652  0189E2  6EFD               	movwf	tosl,c
 25653  0189E4  5166               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25654  0189E6  6EFE               	movwf	tosh,c
 25655  0189E8  5167               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25656  0189EA  6EFF               	movwf	tosu,c
 25657  0189EC  50FA               	movf	pclath,w,c
 25658  0189EE  0012               	return		;indir
 25659  0189F0                     __end_of_TMR6_ISR:
 25660                           	opt stack 0
 25661                           tosu	equ	0xFFF
 25662                           tosh	equ	0xFFE
 25663                           tosl	equ	0xFFD
 25664                           pclatu	equ	0xFFB
 25665                           pclath	equ	0xFFA
 25666                           tblptru	equ	0xFF8
 25667                           tblptrh	equ	0xFF7
 25668                           tblptrl	equ	0xFF6
 25669                           tablat	equ	0xFF5
 25670                           prodh	equ	0xFF4
 25671                           prodl	equ	0xFF3
 25672                           intcon	equ	0xFF2
 25673                           indf0	equ	0xFEF
 25674                           postinc0	equ	0xFEE
 25675                           fsr0h	equ	0xFEA
 25676                           fsr0l	equ	0xFE9
 25677                           wreg	equ	0xFE8
 25678                           indf1	equ	0xFE7
 25679                           postdec1	equ	0xFE5
 25680                           plusw1	equ	0xFE3
 25681                           fsr1h	equ	0xFE2
 25682                           fsr1l	equ	0xFE1
 25683                           bsr	equ	0xFE0
 25684                           indf2	equ	0xFDF
 25685                           postinc2	equ	0xFDE
 25686                           postdec2	equ	0xFDD
 25687                           plusw2	equ	0xFDB
 25688                           fsr2h	equ	0xFDA
 25689                           fsr2l	equ	0xFD9
 25690                           status	equ	0xFD8
 25691                           
 25692 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25693 ;; Defined at:
 25694 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25695 ;; Parameters:    Size  Location     Type
 25696 ;;		None
 25697 ;; Auto vars:     Size  Location     Type
 25698 ;;		None
 25699 ;; Return value:  Size  Location     Type
 25700 ;;                  1    wreg      void 
 25701 ;; Registers used:
 25702 ;;		None
 25703 ;; Tracked objects:
 25704 ;;		On entry : 0/0
 25705 ;;		On exit  : 0/0
 25706 ;;		Unchanged: 0/0
 25707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25712 ;;Total ram usage:        0 bytes
 25713 ;; Hardware stack levels used:    1
 25714 ;; Hardware stack levels required when called:    9
 25715 ;; This function calls:
 25716 ;;		Nothing
 25717 ;; This function is called by:
 25718 ;;		_TMR6_Initialize
 25719 ;;		_TMR6_ISR
 25720 ;; This function uses a non-reentrant model
 25721 ;;
 25722                           
 25723                           	psect	text80
 25724  018CF2                     __ptext80:
 25725                           	opt stack 0
 25726  018CF2                     _TMR6_DefaultInterruptHandler:
 25727                           	opt stack 12
 25728                           
 25729                           ;incstack = 0
 25730  018CF2  0012               	return		;funcret
 25731  018CF4                     __end_of_TMR6_DefaultInterruptHandler:
 25732                           	opt stack 0
 25733                           tosu	equ	0xFFF
 25734                           tosh	equ	0xFFE
 25735                           tosl	equ	0xFFD
 25736                           pclatu	equ	0xFFB
 25737                           pclath	equ	0xFFA
 25738                           tblptru	equ	0xFF8
 25739                           tblptrh	equ	0xFF7
 25740                           tblptrl	equ	0xFF6
 25741                           tablat	equ	0xFF5
 25742                           prodh	equ	0xFF4
 25743                           prodl	equ	0xFF3
 25744                           intcon	equ	0xFF2
 25745                           indf0	equ	0xFEF
 25746                           postinc0	equ	0xFEE
 25747                           fsr0h	equ	0xFEA
 25748                           fsr0l	equ	0xFE9
 25749                           wreg	equ	0xFE8
 25750                           indf1	equ	0xFE7
 25751                           postdec1	equ	0xFE5
 25752                           plusw1	equ	0xFE3
 25753                           fsr1h	equ	0xFE2
 25754                           fsr1l	equ	0xFE1
 25755                           bsr	equ	0xFE0
 25756                           indf2	equ	0xFDF
 25757                           postinc2	equ	0xFDE
 25758                           postdec2	equ	0xFDD
 25759                           plusw2	equ	0xFDB
 25760                           fsr2h	equ	0xFDA
 25761                           fsr2l	equ	0xFD9
 25762                           status	equ	0xFD8
 25763                           
 25764 ;; *************** function _heartbeatTimerCallback *****************
 25765 ;; Defined at:
 25766 ;;		line 149 in file "main.c"
 25767 ;; Parameters:    Size  Location     Type
 25768 ;;		None
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;		None
 25771 ;; Return value:  Size  Location     Type
 25772 ;;                  1    wreg      void 
 25773 ;; Registers used:
 25774 ;;		wreg, status,2, status,0
 25775 ;; Tracked objects:
 25776 ;;		On entry : 0/0
 25777 ;;		On exit  : 0/0
 25778 ;;		Unchanged: 0/0
 25779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25783 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25784 ;;Total ram usage:        1 bytes
 25785 ;; Hardware stack levels used:    1
 25786 ;; Hardware stack levels required when called:    9
 25787 ;; This function calls:
 25788 ;;		Nothing
 25789 ;; This function is called by:
 25790 ;;		_main
 25791 ;;		_TMR6_ISR
 25792 ;; This function uses a non-reentrant model
 25793 ;;
 25794                           
 25795                           	psect	text81
 25796  018686                     __ptext81:
 25797                           	opt stack 0
 25798  018686                     _heartbeatTimerCallback:
 25799                           	opt stack 12
 25800                           
 25801                           ;main.c: 152: LATFbits.LATF2 = !LATFbits.LATF2;
 25802                           
 25803                           ;incstack = 0
 25804  018686  B47E               	btfsc	3966,2,c	;volatile
 25805  018688  D004               	goto	i1u1105_20
 25806  01868A  0101               	movlb	1	; () banked
 25807  01868C  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 25808  01868E  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 25809  018690  D002               	goto	i1u1106_28
 25810  018692                     i1u1105_20:
 25811  018692  0101               	movlb	1	; () banked
 25812  018694  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 25813  018696                     i1u1106_28:
 25814  018696  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 25815  018698  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 25816  01869A  507E               	movf	3966,w,c	;volatile
 25817  01869C  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 25818  01869E  0BFB               	andlw	-5
 25819  0186A0  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 25820  0186A2  6E7E               	movwf	3966,c	;volatile
 25821                           
 25822                           ;main.c: 155: dev_on_time++;
 25823  0186A4  0E01               	movlw	1
 25824  0186A6  0102               	movlb	2	; () banked
 25825  0186A8  274C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 25826  0186AA  0E00               	movlw	0
 25827  0186AC  234D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 25828  0186AE  234E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 25829  0186B0  234F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 25830                           
 25831                           ; BSR set to: 2
 25832                           ;main.c: 158: if (load_enable) {
 25833  0186B2  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 25834  0186B4  D006               	goto	i1l965
 25835                           
 25836                           ; BSR set to: 2
 25837                           ;main.c: 160: load_on_time++;
 25838  0186B6  0E01               	movlw	1
 25839  0186B8  2748               	addwf	_load_on_time& (0+255),f,b	;volatile
 25840  0186BA  0E00               	movlw	0
 25841  0186BC  2349               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 25842  0186BE  234A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 25843  0186C0  234B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 25844  0186C2                     i1l965:
 25845                           
 25846                           ; BSR set to: 2
 25847  0186C2  0004               	clrwdt		;# 
 25848  0186C4  0012               	return		;funcret
 25849  0186C6                     __end_of_heartbeatTimerCallback:
 25850                           	opt stack 0
 25851                           tosu	equ	0xFFF
 25852                           tosh	equ	0xFFE
 25853                           tosl	equ	0xFFD
 25854                           pclatu	equ	0xFFB
 25855                           pclath	equ	0xFFA
 25856                           tblptru	equ	0xFF8
 25857                           tblptrh	equ	0xFF7
 25858                           tblptrl	equ	0xFF6
 25859                           tablat	equ	0xFF5
 25860                           prodh	equ	0xFF4
 25861                           prodl	equ	0xFF3
 25862                           intcon	equ	0xFF2
 25863                           indf0	equ	0xFEF
 25864                           postinc0	equ	0xFEE
 25865                           fsr0h	equ	0xFEA
 25866                           fsr0l	equ	0xFE9
 25867                           wreg	equ	0xFE8
 25868                           indf1	equ	0xFE7
 25869                           postdec1	equ	0xFE5
 25870                           plusw1	equ	0xFE3
 25871                           fsr1h	equ	0xFE2
 25872                           fsr1l	equ	0xFE1
 25873                           bsr	equ	0xFE0
 25874                           indf2	equ	0xFDF
 25875                           postinc2	equ	0xFDE
 25876                           postdec2	equ	0xFDD
 25877                           plusw2	equ	0xFDB
 25878                           fsr2h	equ	0xFDA
 25879                           fsr2l	equ	0xFD9
 25880                           status	equ	0xFD8
 25881                           
 25882 ;; *************** function _HLVD_ISR *****************
 25883 ;; Defined at:
 25884 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 25885 ;; Parameters:    Size  Location     Type
 25886 ;;		None
 25887 ;; Auto vars:     Size  Location     Type
 25888 ;;		None
 25889 ;; Return value:  Size  Location     Type
 25890 ;;                  1    wreg      void 
 25891 ;; Registers used:
 25892 ;;		None
 25893 ;; Tracked objects:
 25894 ;;		On entry : 0/0
 25895 ;;		On exit  : 0/0
 25896 ;;		Unchanged: 0/0
 25897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25902 ;;Total ram usage:        0 bytes
 25903 ;; Hardware stack levels used:    1
 25904 ;; Hardware stack levels required when called:    9
 25905 ;; This function calls:
 25906 ;;		Nothing
 25907 ;; This function is called by:
 25908 ;;		_INTERRUPT_InterruptManagerLow
 25909 ;; This function uses a non-reentrant model
 25910 ;;
 25911                           
 25912                           	psect	text82
 25913  018CCC                     __ptext82:
 25914                           	opt stack 0
 25915  018CCC                     _HLVD_ISR:
 25916                           	opt stack 13
 25917                           
 25918                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 25919                           
 25920                           ;incstack = 0
 25921  018CCC  010E               	movlb	14	; () banked
 25922  018CCE  9F35               	bcf	53,7,b	;volatile
 25923                           
 25924                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 25925  018CD0  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 25926                           
 25927                           ; BSR set to: 14
 25928  018CD2  0012               	return		;funcret
 25929  018CD4                     __end_of_HLVD_ISR:
 25930                           	opt stack 0
 25931                           tosu	equ	0xFFF
 25932                           tosh	equ	0xFFE
 25933                           tosl	equ	0xFFD
 25934                           pclatu	equ	0xFFB
 25935                           pclath	equ	0xFFA
 25936                           tblptru	equ	0xFF8
 25937                           tblptrh	equ	0xFF7
 25938                           tblptrl	equ	0xFF6
 25939                           tablat	equ	0xFF5
 25940                           prodh	equ	0xFF4
 25941                           prodl	equ	0xFF3
 25942                           intcon	equ	0xFF2
 25943                           indf0	equ	0xFEF
 25944                           postinc0	equ	0xFEE
 25945                           fsr0h	equ	0xFEA
 25946                           fsr0l	equ	0xFE9
 25947                           wreg	equ	0xFE8
 25948                           indf1	equ	0xFE7
 25949                           postdec1	equ	0xFE5
 25950                           plusw1	equ	0xFE3
 25951                           fsr1h	equ	0xFE2
 25952                           fsr1l	equ	0xFE1
 25953                           bsr	equ	0xFE0
 25954                           indf2	equ	0xFDF
 25955                           postinc2	equ	0xFDE
 25956                           postdec2	equ	0xFDD
 25957                           plusw2	equ	0xFDB
 25958                           fsr2h	equ	0xFDA
 25959                           fsr2l	equ	0xFD9
 25960                           status	equ	0xFD8
 25961                           
 25962 ;; *************** function _EUSART2_Transmit_ISR *****************
 25963 ;; Defined at:
 25964 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 25965 ;; Parameters:    Size  Location     Type
 25966 ;;		None
 25967 ;; Auto vars:     Size  Location     Type
 25968 ;;		None
 25969 ;; Return value:  Size  Location     Type
 25970 ;;                  1    wreg      void 
 25971 ;; Registers used:
 25972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25973 ;; Tracked objects:
 25974 ;;		On entry : 0/0
 25975 ;;		On exit  : 0/0
 25976 ;;		Unchanged: 0/0
 25977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25982 ;;Total ram usage:        0 bytes
 25983 ;; Hardware stack levels used:    1
 25984 ;; Hardware stack levels required when called:    9
 25985 ;; This function calls:
 25986 ;;		Nothing
 25987 ;; This function is called by:
 25988 ;;		_EUSART2_Initialize
 25989 ;;		_INTERRUPT_InterruptManagerLow
 25990 ;; This function uses a non-reentrant model
 25991 ;;
 25992                           
 25993                           	psect	text83
 25994  0187EA                     __ptext83:
 25995                           	opt stack 0
 25996  0187EA                     _EUSART2_Transmit_ISR:
 25997                           	opt stack 13
 25998                           
 25999                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 26000                           
 26001                           ; BSR set to: 14
 26002                           ;incstack = 0
 26003  0187EA  0E80               	movlw	128
 26004  0187EC  0101               	movlb	1	; () banked
 26005  0187EE  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 26006  0187F0  D014               	goto	i1l403
 26007                           
 26008                           ; BSR set to: 1
 26009                           ;eusart2.c: 203: {
 26010                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 26011  0187F2  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 26012  0187F4  0D01               	mullw	1
 26013  0187F6  0E00               	movlw	low _eusart2TxBuffer
 26014  0187F8  24F3               	addwf	prodl,w,c
 26015  0187FA  6ED9               	movwf	fsr2l,c
 26016  0187FC  0E03               	movlw	high _eusart2TxBuffer
 26017  0187FE  20F4               	addwfc	prodh,w,c
 26018  018800  6EDA               	movwf	fsr2h,c
 26019  018802  50DF               	movf	indf2,w,c
 26020  018804  010E               	movlb	14	; () banked
 26021  018806  6FF2               	movwf	242,b	;volatile
 26022                           
 26023                           ; BSR set to: 14
 26024  018808  0101               	movlb	1	; () banked
 26025  01880A  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 26026                           
 26027                           ; BSR set to: 1
 26028                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 26029  01880C  0E7F               	movlw	127
 26030  01880E  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 26031  018810  D002               	goto	i1l404
 26032                           
 26033                           ; BSR set to: 1
 26034                           ;eusart2.c: 206: {
 26035                           ;eusart2.c: 207: eusart2TxTail = 0;
 26036  018812  0E00               	movlw	0
 26037  018814  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 26038  018816                     i1l404:
 26039                           
 26040                           ; BSR set to: 1
 26041                           ;eusart2.c: 208: }
 26042                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 26043                           
 26044                           ; BSR set to: 1
 26045  018816  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 26046                           
 26047                           ;eusart2.c: 210: }
 26048  018818  0012               	return	
 26049  01881A                     i1l403:
 26050                           
 26051                           ; BSR set to: 1
 26052                           ;eusart2.c: 211: else
 26053                           ;eusart2.c: 212: {
 26054                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 26055  01881A  010E               	movlb	14	; () banked
 26056  01881C  9D2C               	bcf	44,6,b	;volatile
 26057  01881E  0012               	return	
 26058  018820                     __end_of_EUSART2_Transmit_ISR:
 26059                           	opt stack 0
 26060                           tosu	equ	0xFFF
 26061                           tosh	equ	0xFFE
 26062                           tosl	equ	0xFFD
 26063                           pclatu	equ	0xFFB
 26064                           pclath	equ	0xFFA
 26065                           tblptru	equ	0xFF8
 26066                           tblptrh	equ	0xFF7
 26067                           tblptrl	equ	0xFF6
 26068                           tablat	equ	0xFF5
 26069                           prodh	equ	0xFF4
 26070                           prodl	equ	0xFF3
 26071                           intcon	equ	0xFF2
 26072                           indf0	equ	0xFEF
 26073                           postinc0	equ	0xFEE
 26074                           fsr0h	equ	0xFEA
 26075                           fsr0l	equ	0xFE9
 26076                           wreg	equ	0xFE8
 26077                           indf1	equ	0xFE7
 26078                           postdec1	equ	0xFE5
 26079                           plusw1	equ	0xFE3
 26080                           fsr1h	equ	0xFE2
 26081                           fsr1l	equ	0xFE1
 26082                           bsr	equ	0xFE0
 26083                           indf2	equ	0xFDF
 26084                           postinc2	equ	0xFDE
 26085                           postdec2	equ	0xFDD
 26086                           plusw2	equ	0xFDB
 26087                           fsr2h	equ	0xFDA
 26088                           fsr2l	equ	0xFD9
 26089                           status	equ	0xFD8
 26090                           
 26091 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 26092 ;; Defined at:
 26093 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 26094 ;; Parameters:    Size  Location     Type
 26095 ;;		None
 26096 ;; Auto vars:     Size  Location     Type
 26097 ;;		None
 26098 ;; Return value:  Size  Location     Type
 26099 ;;                  1    wreg      void 
 26100 ;; Registers used:
 26101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26102 ;; Tracked objects:
 26103 ;;		On entry : 0/0
 26104 ;;		On exit  : 0/0
 26105 ;;		Unchanged: 0/0
 26106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26109 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26110 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26111 ;;Total ram usage:       18 bytes
 26112 ;; Hardware stack levels used:    1
 26113 ;; Hardware stack levels required when called:    8
 26114 ;; This function calls:
 26115 ;;		Absolute function
 26116 ;;		_ADCC_ThresholdISR
 26117 ;;		_EUSART2_Receive_ISR
 26118 ;;		_TMR5_ISR
 26119 ;; This function is called by:
 26120 ;;		Interrupt level 2
 26121 ;; This function uses a non-reentrant model
 26122 ;;
 26123                           
 26124                           	psect	intcode
 26125  000008                     __pintcode:
 26126                           	opt stack 0
 26127  000008                     _INTERRUPT_InterruptManagerHigh:
 26128                           	opt stack 11
 26129                           
 26130                           ;incstack = 0
 26131  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 26132  00000A  EFC9  F0BB         	goto	int_func
 26133                           tosu	equ	0xFFF
 26134                           tosh	equ	0xFFE
 26135                           tosl	equ	0xFFD
 26136                           pclatu	equ	0xFFB
 26137                           pclath	equ	0xFFA
 26138                           tblptru	equ	0xFF8
 26139                           tblptrh	equ	0xFF7
 26140                           tblptrl	equ	0xFF6
 26141                           tablat	equ	0xFF5
 26142                           prodh	equ	0xFF4
 26143                           prodl	equ	0xFF3
 26144                           intcon	equ	0xFF2
 26145                           indf0	equ	0xFEF
 26146                           postinc0	equ	0xFEE
 26147                           fsr0h	equ	0xFEA
 26148                           fsr0l	equ	0xFE9
 26149                           wreg	equ	0xFE8
 26150                           indf1	equ	0xFE7
 26151                           postdec1	equ	0xFE5
 26152                           plusw1	equ	0xFE3
 26153                           fsr1h	equ	0xFE2
 26154                           fsr1l	equ	0xFE1
 26155                           bsr	equ	0xFE0
 26156                           indf2	equ	0xFDF
 26157                           postinc2	equ	0xFDE
 26158                           postdec2	equ	0xFDD
 26159                           plusw2	equ	0xFDB
 26160                           fsr2h	equ	0xFDA
 26161                           fsr2l	equ	0xFD9
 26162                           status	equ	0xFD8
 26163                           
 26164                           	psect	intcode_body
 26165  017792                     __pintcode_body:
 26166                           	opt stack 11
 26167  017792                     int_func:
 26168                           	opt stack 11
 26169  017792  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 26170  017796  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 26171  01779A  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 26172  01779E  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 26173  0177A2  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 26174  0177A6  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 26175  0177AA  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 26176  0177AE  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 26177  0177B2  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 26178  0177B6  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 26179  0177BA  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 26180  0177BE  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 26181  0177C2  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 26182  0177C6  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 26183  0177CA  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 26184  0177CE  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 26185  0177D2  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 26186  0177D6  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 26187                           
 26188                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 26189  0177DA  010E               	movlb	14	; () banked
 26190  0177DC  BF2C               	btfsc	44,7,b	;volatile
 26191                           
 26192                           ; BSR set to: 14
 26193  0177DE  AF36               	btfss	54,7,b	;volatile
 26194  0177E0  D00D               	goto	i2l212
 26195                           
 26196                           ; BSR set to: 14
 26197                           ;interrupt_manager.c: 87: {
 26198                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 26199  0177E2  D801               	call	i2u2621_48
 26200  0177E4  D016               	goto	i2l216
 26201  0177E6                     i2u2621_48:
 26202  0177E6  0005               	push	
 26203  0177E8  6EFA               	movwf	pclath,c
 26204  0177EA  0102               	movlb	2	; () banked
 26205  0177EC  5168               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 26206  0177EE  6EFD               	movwf	tosl,c
 26207  0177F0  5169               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 26208  0177F2  6EFE               	movwf	tosh,c
 26209  0177F4  516A               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 26210  0177F6  6EFF               	movwf	tosu,c
 26211  0177F8  50FA               	movf	pclath,w,c
 26212  0177FA  0012               	return		;indir
 26213  0177FC                     i2l212:
 26214                           
 26215                           ; BSR set to: 14
 26216                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 26217  0177FC  B92E               	btfsc	46,4,b	;volatile
 26218                           
 26219                           ; BSR set to: 14
 26220  0177FE  A938               	btfss	56,4,b	;volatile
 26221  017800  D003               	goto	i2l214
 26222                           
 26223                           ; BSR set to: 14
 26224                           ;interrupt_manager.c: 91: {
 26225                           ;interrupt_manager.c: 92: TMR5_ISR();
 26226  017802  EC2A  F0C4         	call	_TMR5_ISR	;wreg free
 26227                           
 26228                           ;interrupt_manager.c: 93: }
 26229  017806  D005               	goto	i2l216
 26230  017808                     i2l214:
 26231                           
 26232                           ; BSR set to: 14
 26233                           ;interrupt_manager.c: 94: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 26234  017808  B32A               	btfsc	42,1,b	;volatile
 26235                           
 26236                           ; BSR set to: 14
 26237  01780A  A334               	btfss	52,1,b	;volatile
 26238  01780C  D002               	goto	i2l216
 26239                           
 26240                           ; BSR set to: 14
 26241                           ;interrupt_manager.c: 95: {
 26242                           ;interrupt_manager.c: 96: ADCC_ThresholdISR();
 26243  01780E  ECF8  F0C4         	call	_ADCC_ThresholdISR	;wreg free
 26244  017812                     i2l216:
 26245                           
 26246                           ;interrupt_manager.c: 98: else
 26247                           ;interrupt_manager.c: 99: {
 26248  017812  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 26249  017816  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 26250  01781A  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 26251  01781E  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 26252  017822  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 26253  017826  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 26254  01782A  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 26255  01782E  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 26256  017832  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 26257  017836  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 26258  01783A  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 26259  01783E  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 26260  017842  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 26261  017846  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 26262  01784A  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 26263  01784E  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 26264  017852  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 26265  017856  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 26266  01785A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26267  01785C  0011               	retfie		f
 26268  01785E                     __end_of_INTERRUPT_InterruptManagerHigh:
 26269                           	opt stack 0
 26270                           tosu	equ	0xFFF
 26271                           tosh	equ	0xFFE
 26272                           tosl	equ	0xFFD
 26273                           pclatu	equ	0xFFB
 26274                           pclath	equ	0xFFA
 26275                           tblptru	equ	0xFF8
 26276                           tblptrh	equ	0xFF7
 26277                           tblptrl	equ	0xFF6
 26278                           tablat	equ	0xFF5
 26279                           prodh	equ	0xFF4
 26280                           prodl	equ	0xFF3
 26281                           intcon	equ	0xFF2
 26282                           indf0	equ	0xFEF
 26283                           postinc0	equ	0xFEE
 26284                           fsr0h	equ	0xFEA
 26285                           fsr0l	equ	0xFE9
 26286                           wreg	equ	0xFE8
 26287                           indf1	equ	0xFE7
 26288                           postdec1	equ	0xFE5
 26289                           plusw1	equ	0xFE3
 26290                           fsr1h	equ	0xFE2
 26291                           fsr1l	equ	0xFE1
 26292                           bsr	equ	0xFE0
 26293                           indf2	equ	0xFDF
 26294                           postinc2	equ	0xFDE
 26295                           postdec2	equ	0xFDD
 26296                           plusw2	equ	0xFDB
 26297                           fsr2h	equ	0xFDA
 26298                           fsr2l	equ	0xFD9
 26299                           status	equ	0xFD8
 26300                           
 26301 ;; *************** function _TMR5_ISR *****************
 26302 ;; Defined at:
 26303 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26304 ;; Parameters:    Size  Location     Type
 26305 ;;		None
 26306 ;; Auto vars:     Size  Location     Type
 26307 ;;		None
 26308 ;; Return value:  Size  Location     Type
 26309 ;;                  1    wreg      void 
 26310 ;; Registers used:
 26311 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 26312 ;; Tracked objects:
 26313 ;;		On entry : 0/0
 26314 ;;		On exit  : 0/0
 26315 ;;		Unchanged: 0/0
 26316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26321 ;;Total ram usage:        0 bytes
 26322 ;; Hardware stack levels used:    1
 26323 ;; Hardware stack levels required when called:    1
 26324 ;; This function calls:
 26325 ;;		Absolute function
 26326 ;;		_TMR5_DefaultInterruptHandler
 26327 ;;		_TMR5_WriteTimer
 26328 ;; This function is called by:
 26329 ;;		_INTERRUPT_InterruptManagerHigh
 26330 ;; This function uses a non-reentrant model
 26331 ;;
 26332                           
 26333                           	psect	text85
 26334  018854                     __ptext85:
 26335                           	opt stack 0
 26336  018854                     _TMR5_ISR:
 26337                           	opt stack 17
 26338                           
 26339                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 26340                           
 26341                           ;incstack = 0
 26342  018854  010E               	movlb	14	; () banked
 26343  018856  9938               	bcf	56,4,b	;volatile
 26344                           
 26345                           ; BSR set to: 14
 26346                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 26347  018858  C1D7  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 26348  01885C  C1D8  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 26349  018860  ECA3  F0C5         	call	_TMR5_WriteTimer	;wreg free
 26350                           
 26351                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 26352  018864  0102               	movlb	2	; () banked
 26353  018866  515C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26354  018868  115D               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26355  01886A  115E               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26356  01886C  B4D8               	btfsc	status,2,c
 26357  01886E  0012               	return	
 26358                           
 26359                           ; BSR set to: 2
 26360                           ;tmr5.c: 172: {
 26361                           ;tmr5.c: 173: TMR5_InterruptHandler();
 26362  018870  D801               	call	i2u2607_48
 26363  018872  0012               	return	
 26364  018874                     i2u2607_48:
 26365  018874  0005               	push	
 26366  018876  6EFA               	movwf	pclath,c
 26367  018878  515C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26368  01887A  6EFD               	movwf	tosl,c
 26369  01887C  515D               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26370  01887E  6EFE               	movwf	tosh,c
 26371  018880  515E               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26372  018882  6EFF               	movwf	tosu,c
 26373  018884  50FA               	movf	pclath,w,c
 26374  018886  0012               	return		;indir
 26375  018888                     __end_of_TMR5_ISR:
 26376                           	opt stack 0
 26377                           tosu	equ	0xFFF
 26378                           tosh	equ	0xFFE
 26379                           tosl	equ	0xFFD
 26380                           pclatu	equ	0xFFB
 26381                           pclath	equ	0xFFA
 26382                           tblptru	equ	0xFF8
 26383                           tblptrh	equ	0xFF7
 26384                           tblptrl	equ	0xFF6
 26385                           tablat	equ	0xFF5
 26386                           prodh	equ	0xFF4
 26387                           prodl	equ	0xFF3
 26388                           intcon	equ	0xFF2
 26389                           indf0	equ	0xFEF
 26390                           postinc0	equ	0xFEE
 26391                           fsr0h	equ	0xFEA
 26392                           fsr0l	equ	0xFE9
 26393                           wreg	equ	0xFE8
 26394                           indf1	equ	0xFE7
 26395                           postdec1	equ	0xFE5
 26396                           plusw1	equ	0xFE3
 26397                           fsr1h	equ	0xFE2
 26398                           fsr1l	equ	0xFE1
 26399                           bsr	equ	0xFE0
 26400                           indf2	equ	0xFDF
 26401                           postinc2	equ	0xFDE
 26402                           postdec2	equ	0xFDD
 26403                           plusw2	equ	0xFDB
 26404                           fsr2h	equ	0xFDA
 26405                           fsr2l	equ	0xFD9
 26406                           status	equ	0xFD8
 26407                           
 26408 ;; *************** function _TMR5_WriteTimer *****************
 26409 ;; Defined at:
 26410 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 26411 ;; Parameters:    Size  Location     Type
 26412 ;;  timerVal        2    0[COMRAM] unsigned int 
 26413 ;; Auto vars:     Size  Location     Type
 26414 ;;		None
 26415 ;; Return value:  Size  Location     Type
 26416 ;;                  1    wreg      void 
 26417 ;; Registers used:
 26418 ;;		wreg, status,2
 26419 ;; Tracked objects:
 26420 ;;		On entry : 0/0
 26421 ;;		On exit  : 0/0
 26422 ;;		Unchanged: 0/0
 26423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26428 ;;Total ram usage:        2 bytes
 26429 ;; Hardware stack levels used:    1
 26430 ;; This function calls:
 26431 ;;		Nothing
 26432 ;; This function is called by:
 26433 ;;		_TMR5_ISR
 26434 ;;		_TMR5_Reload
 26435 ;; This function uses a non-reentrant model
 26436 ;;
 26437                           
 26438                           	psect	text86
 26439  018B46                     __ptext86:
 26440                           	opt stack 0
 26441  018B46                     _TMR5_WriteTimer:
 26442                           	opt stack 17
 26443                           
 26444                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 26445                           
 26446                           ;incstack = 0
 26447  018B46  A4C3               	btfss	4035,2,c	;volatile
 26448  018B48  D007               	goto	i2l714
 26449                           
 26450                           ;tmr5.c: 130: {
 26451                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 26452  018B4A  90C3               	bcf	4035,0,c	;volatile
 26453                           
 26454                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 26455  018B4C  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 26456  018B4E  6EC2               	movwf	4034,c	;volatile
 26457                           
 26458                           ;tmr5.c: 136: TMR5L = timerVal;
 26459  018B50  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 26460                           
 26461                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 26462  018B54  80C3               	bsf	4035,0,c	;volatile
 26463                           
 26464                           ;tmr5.c: 140: }
 26465  018B56  0012               	return	
 26466  018B58                     i2l714:
 26467                           
 26468                           ;tmr5.c: 141: else
 26469                           ;tmr5.c: 142: {
 26470                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 26471  018B58  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 26472  018B5A  6EC2               	movwf	4034,c	;volatile
 26473                           
 26474                           ;tmr5.c: 145: TMR5L = timerVal;
 26475  018B5C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 26476  018B60  0012               	return	
 26477  018B62                     __end_of_TMR5_WriteTimer:
 26478                           	opt stack 0
 26479                           tosu	equ	0xFFF
 26480                           tosh	equ	0xFFE
 26481                           tosl	equ	0xFFD
 26482                           pclatu	equ	0xFFB
 26483                           pclath	equ	0xFFA
 26484                           tblptru	equ	0xFF8
 26485                           tblptrh	equ	0xFF7
 26486                           tblptrl	equ	0xFF6
 26487                           tablat	equ	0xFF5
 26488                           prodh	equ	0xFF4
 26489                           prodl	equ	0xFF3
 26490                           intcon	equ	0xFF2
 26491                           indf0	equ	0xFEF
 26492                           postinc0	equ	0xFEE
 26493                           fsr0h	equ	0xFEA
 26494                           fsr0l	equ	0xFE9
 26495                           wreg	equ	0xFE8
 26496                           indf1	equ	0xFE7
 26497                           postdec1	equ	0xFE5
 26498                           plusw1	equ	0xFE3
 26499                           fsr1h	equ	0xFE2
 26500                           fsr1l	equ	0xFE1
 26501                           bsr	equ	0xFE0
 26502                           indf2	equ	0xFDF
 26503                           postinc2	equ	0xFDE
 26504                           postdec2	equ	0xFDD
 26505                           plusw2	equ	0xFDB
 26506                           fsr2h	equ	0xFDA
 26507                           fsr2l	equ	0xFD9
 26508                           status	equ	0xFD8
 26509                           
 26510 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26511 ;; Defined at:
 26512 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26513 ;; Parameters:    Size  Location     Type
 26514 ;;		None
 26515 ;; Auto vars:     Size  Location     Type
 26516 ;;		None
 26517 ;; Return value:  Size  Location     Type
 26518 ;;                  1    wreg      void 
 26519 ;; Registers used:
 26520 ;;		None
 26521 ;; Tracked objects:
 26522 ;;		On entry : 0/0
 26523 ;;		On exit  : 0/0
 26524 ;;		Unchanged: 0/0
 26525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26530 ;;Total ram usage:        0 bytes
 26531 ;; Hardware stack levels used:    1
 26532 ;; This function calls:
 26533 ;;		Nothing
 26534 ;; This function is called by:
 26535 ;;		_TMR5_Initialize
 26536 ;;		_TMR5_ISR
 26537 ;; This function uses a non-reentrant model
 26538 ;;
 26539                           
 26540                           	psect	text87
 26541  018CF4                     __ptext87:
 26542                           	opt stack 0
 26543  018CF4                     _TMR5_DefaultInterruptHandler:
 26544                           	opt stack 17
 26545                           
 26546                           ;incstack = 0
 26547  018CF4  0012               	return		;funcret
 26548  018CF6                     __end_of_TMR5_DefaultInterruptHandler:
 26549                           	opt stack 0
 26550                           tosu	equ	0xFFF
 26551                           tosh	equ	0xFFE
 26552                           tosl	equ	0xFFD
 26553                           pclatu	equ	0xFFB
 26554                           pclath	equ	0xFFA
 26555                           tblptru	equ	0xFF8
 26556                           tblptrh	equ	0xFF7
 26557                           tblptrl	equ	0xFF6
 26558                           tablat	equ	0xFF5
 26559                           prodh	equ	0xFF4
 26560                           prodl	equ	0xFF3
 26561                           intcon	equ	0xFF2
 26562                           indf0	equ	0xFEF
 26563                           postinc0	equ	0xFEE
 26564                           fsr0h	equ	0xFEA
 26565                           fsr0l	equ	0xFE9
 26566                           wreg	equ	0xFE8
 26567                           indf1	equ	0xFE7
 26568                           postdec1	equ	0xFE5
 26569                           plusw1	equ	0xFE3
 26570                           fsr1h	equ	0xFE2
 26571                           fsr1l	equ	0xFE1
 26572                           bsr	equ	0xFE0
 26573                           indf2	equ	0xFDF
 26574                           postinc2	equ	0xFDE
 26575                           postdec2	equ	0xFDD
 26576                           plusw2	equ	0xFDB
 26577                           fsr2h	equ	0xFDA
 26578                           fsr2l	equ	0xFD9
 26579                           status	equ	0xFD8
 26580                           
 26581 ;; *************** function _EUSART2_Receive_ISR *****************
 26582 ;; Defined at:
 26583 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 26584 ;; Parameters:    Size  Location     Type
 26585 ;;		None
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;		None
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  1    wreg      void 
 26590 ;; Registers used:
 26591 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/0
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26601 ;;Total ram usage:        0 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; Hardware stack levels required when called:    3
 26604 ;; This function calls:
 26605 ;;		i2_printf
 26606 ;; This function is called by:
 26607 ;;		_EUSART2_Initialize
 26608 ;;		_INTERRUPT_InterruptManagerHigh
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text88
 26613  01785E                     __ptext88:
 26614                           	opt stack 0
 26615  01785E                     _EUSART2_Receive_ISR:
 26616                           	opt stack 15
 26617                           
 26618                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 26619                           
 26620                           ;incstack = 0
 26621  01785E  010E               	movlb	14	; () banked
 26622  017860  A3F5               	btfss	245,1,b	;volatile
 26623  017862  D003               	goto	i2l409
 26624                           
 26625                           ; BSR set to: 14
 26626                           ;eusart2.c: 221: {
 26627                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 26628  017864  99F5               	bcf	245,4,b	;volatile
 26629                           
 26630                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 26631  017866  89F5               	bsf	245,4,b	;volatile
 26632                           
 26633                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 26634  017868  827E               	bsf	3966,1,c	;volatile
 26635  01786A                     i2l409:
 26636                           
 26637                           ; BSR set to: 14
 26638                           ;eusart2.c: 227: }
 26639                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 26640  01786A  927E               	bcf	3966,1,c	;volatile
 26641                           
 26642                           ; BSR set to: 14
 26643                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 26644  01786C  0100               	movlb	0	; () banked
 26645  01786E  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 26646  017870  0D01               	mullw	1
 26647  017872  0E00               	movlw	low _eusart2RxBuffer
 26648  017874  24F3               	addwf	prodl,w,c
 26649  017876  6ED9               	movwf	fsr2l,c
 26650  017878  0E02               	movlw	high _eusart2RxBuffer
 26651  01787A  20F4               	addwfc	prodh,w,c
 26652  01787C  6EDA               	movwf	fsr2h,c
 26653  01787E  CEF1 FFDF          	movff	3825,indf2	;volatile
 26654                           
 26655                           ; BSR set to: 0
 26656  017882  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 26657                           
 26658                           ; BSR set to: 0
 26659                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 26660  017884  0E3F               	movlw	63
 26661  017886  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 26662  017888  D002               	goto	i2l410
 26663                           
 26664                           ; BSR set to: 0
 26665                           ;eusart2.c: 234: {
 26666                           ;eusart2.c: 235: eusart2RxHead = 0;
 26667  01788A  0E00               	movlw	0
 26668  01788C  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 26669  01788E                     i2l410:
 26670                           
 26671                           ; BSR set to: 0
 26672                           ;eusart2.c: 236: }
 26673                           ;eusart2.c: 237: eusart2RxCount++;
 26674                           
 26675                           ; BSR set to: 0
 26676  01788E  0101               	movlb	1	; () banked
 26677  017890  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 26678                           
 26679                           ; BSR set to: 1
 26680                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 26681  017892  0E0A               	movlw	10
 26682  017894  010E               	movlb	14	; () banked
 26683  017896  19F1               	xorwf	241,w,b	;volatile
 26684  017898  B4D8               	btfsc	status,2,c
 26685  01789A  D004               	goto	i2u1896_40
 26686                           
 26687                           ; BSR set to: 14
 26688  01789C  0E0D               	movlw	13
 26689  01789E  19F1               	xorwf	241,w,b	;volatile
 26690  0178A0  A4D8               	btfss	status,2,c
 26691  0178A2  D006               	goto	i2l411
 26692  0178A4                     i2u1896_40:
 26693                           
 26694                           ; BSR set to: 14
 26695                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 26696  0178A4  0100               	movlb	0	; () banked
 26697  0178A6  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 26698                           
 26699                           ; BSR set to: 0
 26700                           ;eusart2.c: 248: RC2REG = 0;
 26701  0178A8  0E00               	movlw	0
 26702  0178AA  010E               	movlb	14	; () banked
 26703  0178AC  6FF1               	movwf	241,b	;volatile
 26704                           
 26705                           ;eusart2.c: 250: }
 26706  0178AE  D002               	goto	i2l414
 26707  0178B0                     i2l411:
 26708                           
 26709                           ; BSR set to: 14
 26710                           ;eusart2.c: 252: else {
 26711                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 26712  0178B0  0100               	movlb	0	; () banked
 26713  0178B2  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 26714  0178B4                     i2l414:
 26715                           
 26716                           ;eusart2.c: 256: }
 26717                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 26718                           
 26719                           ; BSR set to: 0
 26720  0178B4  0E08               	movlw	8
 26721  0178B6  010E               	movlb	14	; () banked
 26722  0178B8  19F1               	xorwf	241,w,b	;volatile
 26723  0178BA  A4D8               	btfss	status,2,c
 26724  0178BC  0012               	return	
 26725                           
 26726                           ; BSR set to: 14
 26727                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 26728  0178BE  0100               	movlb	0	; () banked
 26729  0178C0  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 26730  0178C2  0D01               	mullw	1
 26731  0178C4  0E00               	movlw	low _eusart2RxBuffer
 26732  0178C6  24F3               	addwf	prodl,w,c
 26733  0178C8  6ED9               	movwf	fsr2l,c
 26734  0178CA  0E02               	movlw	high _eusart2RxBuffer
 26735  0178CC  20F4               	addwfc	prodh,w,c
 26736  0178CE  6EDA               	movwf	fsr2h,c
 26737  0178D0  0E00               	movlw	0
 26738  0178D2  6EDF               	movwf	indf2,c
 26739                           
 26740                           ; BSR set to: 0
 26741                           ;eusart2.c: 262: eusart2RxHead--;
 26742  0178D4  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 26743                           
 26744                           ; BSR set to: 0
 26745                           ;eusart2.c: 265: printf("\033[K");
 26746  0178D6  0EC5               	movlw	low STR_1
 26747  0178D8  6F88               	movwf	i2printf@f& (0+255),b
 26748  0178DA  0EFF               	movlw	high STR_1
 26749  0178DC  6F89               	movwf	(i2printf@f+1)& (0+255),b
 26750  0178DE  EC86  F08E         	call	i2_printf	;wreg free
 26751                           
 26752                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 26753  0178E2  0101               	movlb	1	; () banked
 26754  0178E4  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 26755  0178E6  0100               	movlb	0	; () banked
 26756  0178E8  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 26757  0178EA  B4D8               	btfsc	status,2,c
 26758  0178EC  D00B               	goto	i2l416
 26759                           
 26760                           ; BSR set to: 0
 26761                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 26762  0178EE  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 26763  0178F0  0D01               	mullw	1
 26764  0178F2  0E00               	movlw	low _eusart2RxBuffer
 26765  0178F4  24F3               	addwf	prodl,w,c
 26766  0178F6  6ED9               	movwf	fsr2l,c
 26767  0178F8  0E02               	movlw	high _eusart2RxBuffer
 26768  0178FA  20F4               	addwfc	prodh,w,c
 26769  0178FC  6EDA               	movwf	fsr2h,c
 26770  0178FE  0E00               	movlw	0
 26771  017900  6EDF               	movwf	indf2,c
 26772                           
 26773                           ; BSR set to: 0
 26774                           ;eusart2.c: 270: eusart2RxHead--;
 26775  017902  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 26776  017904                     i2l416:
 26777                           
 26778                           ; BSR set to: 0
 26779                           ;eusart2.c: 272: }
 26780                           ;eusart2.c: 274: RC2REG = 0;
 26781                           
 26782                           ; BSR set to: 0
 26783  017904  0E00               	movlw	0
 26784  017906  010E               	movlb	14	; () banked
 26785  017908  6FF1               	movwf	241,b	;volatile
 26786  01790A  0012               	return	
 26787  01790C                     __end_of_EUSART2_Receive_ISR:
 26788                           	opt stack 0
 26789                           tosu	equ	0xFFF
 26790                           tosh	equ	0xFFE
 26791                           tosl	equ	0xFFD
 26792                           pclatu	equ	0xFFB
 26793                           pclath	equ	0xFFA
 26794                           tblptru	equ	0xFF8
 26795                           tblptrh	equ	0xFF7
 26796                           tblptrl	equ	0xFF6
 26797                           tablat	equ	0xFF5
 26798                           prodh	equ	0xFF4
 26799                           prodl	equ	0xFF3
 26800                           intcon	equ	0xFF2
 26801                           indf0	equ	0xFEF
 26802                           postinc0	equ	0xFEE
 26803                           fsr0h	equ	0xFEA
 26804                           fsr0l	equ	0xFE9
 26805                           wreg	equ	0xFE8
 26806                           indf1	equ	0xFE7
 26807                           postdec1	equ	0xFE5
 26808                           plusw1	equ	0xFE3
 26809                           fsr1h	equ	0xFE2
 26810                           fsr1l	equ	0xFE1
 26811                           bsr	equ	0xFE0
 26812                           indf2	equ	0xFDF
 26813                           postinc2	equ	0xFDE
 26814                           postdec2	equ	0xFDD
 26815                           plusw2	equ	0xFDB
 26816                           fsr2h	equ	0xFDA
 26817                           fsr2l	equ	0xFD9
 26818                           status	equ	0xFD8
 26819                           
 26820 ;; *************** function i2_printf *****************
 26821 ;; Defined at:
 26822 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26823 ;; Parameters:    Size  Location     Type
 26824 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 26825 ;;		 -> STR_132(30), STR_131(46), STR_130(39), STR_129(62), 
 26826 ;;		 -> STR_128(55), STR_127(2361), STR_125(33), STR_123(46), 
 26827 ;;		 -> STR_121(51), STR_119(53), STR_117(58), STR_115(71), 
 26828 ;;		 -> STR_114(63), STR_113(37), STR_112(46), STR_111(102), 
 26829 ;;		 -> STR_110(86), STR_108(25), STR_106(42), STR_105(53), 
 26830 ;;		 -> STR_104(31), STR_102(29), STR_101(28), STR_99(42), 
 26831 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 26832 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(58), 
 26833 ;;		 -> STR_81(36), STR_79(36), STR_77(37), STR_75(45), 
 26834 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 26835 ;;		 -> STR_59(54), STR_58(64), STR_56(59), STR_54(85), 
 26836 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 26837 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 26838 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 26839 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 26840 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 26841 ;; Auto vars:     Size  Location     Type
 26842 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 26843 ;;  printf          4   65[BANK0 ] unsigned long 
 26844 ;;  printf          4   59[BANK0 ] struct .
 26845 ;;  printf          2   77[BANK0 ] int 
 26846 ;;  printf          2   75[BANK0 ] int 
 26847 ;;  printf          2   73[BANK0 ] unsigned short 
 26848 ;;  printf          2   63[BANK0 ] int 
 26849 ;;  printf          2   57[BANK0 ] PTR void [1]
 26850 ;;		 -> ?i2_printf(2), ?_printf(2), 
 26851 ;;  printf          2   55[BANK0 ] unsigned int 
 26852 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 26853 ;;		 -> STR_146(7), printf@c(1), STR_145(16), STR_144(22), 
 26854 ;;		 -> STR_143(21), STR_142(27), STR_141(41), STR_140(32), 
 26855 ;;		 -> STR_139(19), STR_138(16), STR_137(15), STR_136(16), 
 26856 ;;		 -> STR_135(10), STR_134(13), STR_133(12), ringBufferLUT@channel_name(22), 
 26857 ;;		 -> TRIAC_Firing_Angle(4), 
 26858 ;;  printf          1   79[BANK0 ] char 
 26859 ;;  printf          1   52[BANK0 ] unsigned char 
 26860 ;;  printf          1    0        unsigned char 
 26861 ;; Return value:  Size  Location     Type
 26862 ;;                  2   40[BANK0 ] int 
 26863 ;; Registers used:
 26864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26865 ;; Tracked objects:
 26866 ;;		On entry : 0/0
 26867 ;;		On exit  : 0/0
 26868 ;;		Unchanged: 0/0
 26869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26870 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26871 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26872 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26873 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26874 ;;Total ram usage:       40 bytes
 26875 ;; Hardware stack levels used:    1
 26876 ;; Hardware stack levels required when called:    2
 26877 ;; This function calls:
 26878 ;;		i2___awdiv
 26879 ;;		i2___fladd
 26880 ;;		i2___flge
 26881 ;;		i2___flmul
 26882 ;;		i2___flneg
 26883 ;;		i2___flsub
 26884 ;;		i2___fltol
 26885 ;;		i2___lldiv
 26886 ;;		i2___llmod
 26887 ;;		i2___wmul
 26888 ;;		i2___xxtofl
 26889 ;;		i2__div_to_l_
 26890 ;;		i2__tdiv_to_l_
 26891 ;;		i2_fround
 26892 ;;		i2_isdigit
 26893 ;;		i2_putch
 26894 ;;		i2_scale
 26895 ;; This function is called by:
 26896 ;;		_EUSART2_Receive_ISR
 26897 ;; This function uses a non-reentrant model
 26898 ;;
 26899                           
 26900                           	psect	text89
 26901  011D0C                     __ptext89:
 26902                           	opt stack 0
 26903  011D0C                     i2_printf:
 26904                           	opt stack 15
 26905                           
 26906                           ;doprnt.c: 466: va_list ap;
 26907                           ;doprnt.c: 499: signed char c;
 26908                           ;doprnt.c: 501: int width;
 26909                           ;doprnt.c: 504: int prec;
 26910                           ;doprnt.c: 508: unsigned short flag;
 26911                           ;doprnt.c: 515: char d;
 26912                           ;doprnt.c: 516: double fval;
 26913                           ;doprnt.c: 517: int exp;
 26914                           ;doprnt.c: 523: union {
 26915                           ;doprnt.c: 524: unsigned long vd;
 26916                           ;doprnt.c: 525: double integ;
 26917                           ;doprnt.c: 526: } tmpval;
 26918                           ;doprnt.c: 528: unsigned long val;
 26919                           ;doprnt.c: 529: unsigned len;
 26920                           ;doprnt.c: 530: const char * cp;
 26921                           ;doprnt.c: 533: *ap = __va_start();
 26922                           
 26923                           ; BSR set to: 14
 26924                           ;incstack = 0
 26925  011D0C  0E8A               	movlw	low (?i2_printf+2)
 26926  011D0E  0100               	movlb	0	; () banked
 26927  011D10  6F99               	movwf	i2printf@ap& (0+255),b
 26928  011D12  0E00               	movlw	high (?i2_printf+2)
 26929  011D14  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 26930                           
 26931                           ;doprnt.c: 536: while(c = *f++) {
 26932  011D16  EF49  F095         	goto	i2u1882_40
 26933  011D1A                     
 26934                           ; BSR set to: 0
 26935                           ;doprnt.c: 538: if(c != '%')
 26936                           
 26937                           ; BSR set to: 0
 26938  011D1A  0E25               	movlw	37
 26939  011D1C  19AF               	xorwf	i2printf@c& (0+255),w,b
 26940  011D1E  B4D8               	btfsc	status,2,c
 26941  011D20  D005               	goto	i2l1406
 26942                           
 26943                           ; BSR set to: 0
 26944                           ;doprnt.c: 540: {
 26945                           ;doprnt.c: 541: (putch(c) );
 26946  011D22  51AF               	movf	i2printf@c& (0+255),w,b
 26947  011D24  EC59  F0C6         	call	i2_putch
 26948                           
 26949                           ;doprnt.c: 542: continue;
 26950  011D28  EF49  F095         	goto	i2u1882_40
 26951  011D2C                     i2l1406:
 26952                           
 26953                           ;doprnt.c: 543: }
 26954                           ;doprnt.c: 546: width = 0;
 26955  011D2C  0E00               	movlw	0
 26956  011D2E  0100               	movlb	0	; () banked
 26957  011D30  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 26958  011D32  0E00               	movlw	0
 26959  011D34  6FAB               	movwf	i2printf@width& (0+255),b
 26960                           
 26961                           ;doprnt.c: 548: flag = 0;
 26962  011D36  0E00               	movlw	0
 26963  011D38  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 26964  011D3A  0E00               	movlw	0
 26965  011D3C  6FA9               	movwf	i2printf@flag& (0+255),b
 26966                           
 26967                           ; BSR set to: 0
 26968                           ;doprnt.c: 551: switch(*f) {
 26969                           
 26970                           ;doprnt.c: 550: for(;;) {
 26971  011D3E  D004               	goto	i2l1408
 26972  011D40                     
 26973                           ;doprnt.c: 580: flag |= 0x04;
 26974                           
 26975                           ; BSR set to: 0
 26976  011D40  0100               	movlb	0	; () banked
 26977  011D42  85A9               	bsf	i2printf@flag& (0+255),2,b
 26978                           
 26979                           ;doprnt.c: 581: f++;
 26980  011D44  4B88               	infsnz	i2printf@f& (0+255),f,b
 26981  011D46  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 26982  011D48                     i2l1408:
 26983                           
 26984                           ; BSR set to: 0
 26985  011D48  C088  FFF6         	movff	i2printf@f,tblptrl
 26986  011D4C  C089  FFF7         	movff	i2printf@f+1,tblptrh
 26987  011D50  0E00               	movlw	low (__mediumconst shr (0+16))
 26988  011D52  6EF8               	movwf	tblptru,c
 26989  011D54  0E0D               	movlw	(high __ramtop+-1)
 26990  011D56  64F7               	cpfsgt	tblptrh,c
 26991  011D58  D003               	bra	i2u1808_47
 26992  011D5A  0008               	tblrd		*
 26993  011D5C  50F5               	movf	tablat,w,c
 26994  011D5E  D005               	bra	i2u1808_40
 26995  011D60                     i2u1808_47:
 26996  011D60  CFF6 FFE9          	movff	tblptrl,fsr0l
 26997  011D64  CFF7 FFEA          	movff	tblptrh,fsr0h
 26998  011D68  50EF               	movf	indf0,w,c
 26999  011D6A                     i2u1808_40:
 27000                           
 27001                           ; Switch size 1, requested type "space"
 27002                           ; Number of cases is 1, Range of values is 48 to 48
 27003                           ; switch strategies available:
 27004                           ; Name         Instructions Cycles
 27005                           ; simple_byte            4     3 (average)
 27006                           ;	Chosen strategy is simple_byte
 27007  011D6A  0A30               	xorlw	48	; case 48
 27008  011D6C  B4D8               	btfsc	status,2,c
 27009  011D6E  D7E8               	goto	i2l1409
 27010                           
 27011                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 27012                           
 27013                           ;doprnt.c: 586: }
 27014                           
 27015                           ;doprnt.c: 585: break;
 27016  011D70  C088  FFF6         	movff	i2printf@f,tblptrl
 27017  011D74  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27018  011D78  0E00               	movlw	low (__mediumconst shr (0+16))
 27019  011D7A  6EF8               	movwf	tblptru,c
 27020  011D7C  0E0D               	movlw	(high __ramtop+-1)
 27021  011D7E  64F7               	cpfsgt	tblptrh,c
 27022  011D80  D003               	bra	i2u1809_47
 27023  011D82  0008               	tblrd		*
 27024  011D84  50F5               	movf	tablat,w,c
 27025  011D86  D005               	bra	i2u1809_40
 27026  011D88                     i2u1809_47:
 27027  011D88  CFF6 FFE9          	movff	tblptrl,fsr0l
 27028  011D8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 27029  011D90  50EF               	movf	indf0,w,c
 27030  011D92                     i2u1809_40:
 27031  011D92  EC78  F0C5         	call	i2_isdigit
 27032  011D96  A0D8               	btfss	status,0,c
 27033  011D98  D04B               	goto	i2u1813_40
 27034                           
 27035                           ;doprnt.c: 598: width = 0;
 27036  011D9A  0E00               	movlw	0
 27037  011D9C  0100               	movlb	0	; () banked
 27038  011D9E  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 27039  011DA0  0E00               	movlw	0
 27040  011DA2  6FAB               	movwf	i2printf@width& (0+255),b
 27041  011DA4                     
 27042                           ;doprnt.c: 600: width *= 10;
 27043                           
 27044                           ; BSR set to: 0
 27045  011DA4  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 27046  011DA8  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 27047  011DAC  0E00               	movlw	0
 27048  011DAE  6E04               	movwf	i2___wmul@multiplicand+1,c
 27049  011DB0  0E0A               	movlw	10
 27050  011DB2  6E03               	movwf	i2___wmul@multiplicand,c
 27051  011DB4  EC32  F0C5         	call	i2___wmul	;wreg free
 27052  011DB8  C001  F0AB         	movff	?i2___wmul,i2printf@width
 27053  011DBC  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 27054                           
 27055                           ;doprnt.c: 601: width += *f++ - '0';
 27056  011DC0  0ED0               	movlw	208
 27057  011DC2  0100               	movlb	0	; () banked
 27058  011DC4  6F8A               	movwf	??i2_printf& (0+255),b
 27059  011DC6  0EFF               	movlw	255
 27060  011DC8  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27061  011DCA  C088  FFF6         	movff	i2printf@f,tblptrl
 27062  011DCE  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27063  011DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 27064  011DD4  6EF8               	movwf	tblptru,c
 27065  011DD6  0E0D               	movlw	(high __ramtop+-1)
 27066  011DD8  64F7               	cpfsgt	tblptrh,c
 27067  011DDA  D003               	bra	i2u1811_47
 27068  011DDC  0008               	tblrd		*
 27069  011DDE  50F5               	movf	tablat,w,c
 27070  011DE0  D005               	bra	i2u1811_40
 27071  011DE2                     i2u1811_47:
 27072  011DE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 27073  011DE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 27074  011DEA  50EF               	movf	indf0,w,c
 27075  011DEC                     i2u1811_40:
 27076  011DEC  0100               	movlb	0	; () banked
 27077  011DEE  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 27078  011DF0  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 27079  011DF2  518A               	movf	??i2_printf& (0+255),w,b
 27080  011DF4  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 27081  011DF6  518B               	movf	(??i2_printf+1)& (0+255),w,b
 27082  011DF8  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 27083  011DFA  518C               	movf	(??i2_printf+2)& (0+255),w,b
 27084  011DFC  27AB               	addwf	i2printf@width& (0+255),f,b
 27085  011DFE  518D               	movf	(??i2_printf+3)& (0+255),w,b
 27086  011E00  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 27087                           
 27088                           ; BSR set to: 0
 27089  011E02  4B88               	infsnz	i2printf@f& (0+255),f,b
 27090  011E04  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27091                           
 27092                           ; BSR set to: 0
 27093                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 27094  011E06  C088  FFF6         	movff	i2printf@f,tblptrl
 27095  011E0A  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27096  011E0E  0E00               	movlw	low (__mediumconst shr (0+16))
 27097  011E10  6EF8               	movwf	tblptru,c
 27098  011E12  0E0D               	movlw	(high __ramtop+-1)
 27099  011E14  64F7               	cpfsgt	tblptrh,c
 27100  011E16  D003               	bra	i2u1812_47
 27101  011E18  0008               	tblrd		*
 27102  011E1A  50F5               	movf	tablat,w,c
 27103  011E1C  D005               	bra	i2u1812_40
 27104  011E1E                     i2u1812_47:
 27105  011E1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 27106  011E22  CFF7 FFEA          	movff	tblptrh,fsr0h
 27107  011E26  50EF               	movf	indf0,w,c
 27108  011E28                     i2u1812_40:
 27109  011E28  EC78  F0C5         	call	i2_isdigit
 27110  011E2C  B0D8               	btfsc	status,0,c
 27111  011E2E  D7BA               	goto	i2l1414
 27112  011E30                     i2u1813_40:
 27113                           
 27114                           ;doprnt.c: 608: }
 27115                           ;doprnt.c: 611: if(*f == '.') {
 27116  011E30  C088  FFF6         	movff	i2printf@f,tblptrl
 27117  011E34  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27118  011E38  0E00               	movlw	low (__mediumconst shr (0+16))
 27119  011E3A  6EF8               	movwf	tblptru,c
 27120  011E3C  0E0D               	movlw	(high __ramtop+-1)
 27121  011E3E  64F7               	cpfsgt	tblptrh,c
 27122  011E40  D003               	bra	i2u1814_47
 27123  011E42  0008               	tblrd		*
 27124  011E44  50F5               	movf	tablat,w,c
 27125  011E46  D005               	bra	i2u1814_40
 27126  011E48                     i2u1814_47:
 27127  011E48  CFF6 FFE9          	movff	tblptrl,fsr0l
 27128  011E4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 27129  011E50  50EF               	movf	indf0,w,c
 27130  011E52                     i2u1814_40:
 27131  011E52  0A2E               	xorlw	46
 27132  011E54  A4D8               	btfss	status,2,c
 27133  011E56  D048               	goto	i2l1416
 27134                           
 27135                           ;doprnt.c: 612: flag |= 0x4000;
 27136  011E58  0100               	movlb	0	; () banked
 27137  011E5A  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 27138                           
 27139                           ;doprnt.c: 613: f++;
 27140  011E5C  4B88               	infsnz	i2printf@f& (0+255),f,b
 27141  011E5E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27142                           
 27143                           ; BSR set to: 0
 27144                           ;doprnt.c: 620: {
 27145                           ;doprnt.c: 621: prec = 0;
 27146  011E60  0E00               	movlw	0
 27147  011E62  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27148  011E64  0E00               	movlw	0
 27149  011E66  6FAD               	movwf	i2printf@prec& (0+255),b
 27150                           
 27151                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 27152  011E68  D029               	goto	i2l1417
 27153  011E6A                     
 27154                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 27155                           
 27156                           ; BSR set to: 0
 27157  011E6A  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 27158  011E6E  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 27159  011E72  0E00               	movlw	0
 27160  011E74  6E04               	movwf	i2___wmul@multiplicand+1,c
 27161  011E76  0E0A               	movlw	10
 27162  011E78  6E03               	movwf	i2___wmul@multiplicand,c
 27163  011E7A  EC32  F0C5         	call	i2___wmul	;wreg free
 27164  011E7E  C088  FFF6         	movff	i2printf@f,tblptrl
 27165  011E82  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27166  011E86  0E00               	movlw	low (__mediumconst shr (0+16))
 27167  011E88  6EF8               	movwf	tblptru,c
 27168  011E8A  0E0D               	movlw	(high __ramtop+-1)
 27169  011E8C  64F7               	cpfsgt	tblptrh,c
 27170  011E8E  D003               	bra	i2u1816_47
 27171  011E90  0008               	tblrd		*
 27172  011E92  50F5               	movf	tablat,w,c
 27173  011E94  D005               	bra	i2u1816_40
 27174  011E96                     i2u1816_47:
 27175  011E96  CFF6 FFE9          	movff	tblptrl,fsr0l
 27176  011E9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27177  011E9E  50EF               	movf	indf0,w,c
 27178  011EA0                     i2u1816_40:
 27179  011EA0  0100               	movlb	0	; () banked
 27180  011EA2  6F8A               	movwf	??i2_printf& (0+255),b
 27181  011EA4  518A               	movf	??i2_printf& (0+255),w,b
 27182  011EA6  2601               	addwf	?i2___wmul,f,c
 27183  011EA8  0E00               	movlw	0
 27184  011EAA  2202               	addwfc	?i2___wmul+1,f,c
 27185  011EAC  0ED0               	movlw	208
 27186  011EAE  2401               	addwf	?i2___wmul,w,c
 27187  011EB0  6FAD               	movwf	i2printf@prec& (0+255),b
 27188  011EB2  0EFF               	movlw	255
 27189  011EB4  2002               	addwfc	?i2___wmul+1,w,c
 27190  011EB6  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27191                           
 27192                           ; BSR set to: 0
 27193  011EB8  4B88               	infsnz	i2printf@f& (0+255),f,b
 27194  011EBA  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27195  011EBC                     i2l1417:
 27196                           
 27197                           ; BSR set to: 0
 27198                           
 27199                           ; BSR set to: 0
 27200  011EBC  C088  FFF6         	movff	i2printf@f,tblptrl
 27201  011EC0  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27202  011EC4  0E00               	movlw	low (__mediumconst shr (0+16))
 27203  011EC6  6EF8               	movwf	tblptru,c
 27204  011EC8  0E0D               	movlw	(high __ramtop+-1)
 27205  011ECA  64F7               	cpfsgt	tblptrh,c
 27206  011ECC  D003               	bra	i2u1817_47
 27207  011ECE  0008               	tblrd		*
 27208  011ED0  50F5               	movf	tablat,w,c
 27209  011ED2  D005               	bra	i2u1817_40
 27210  011ED4                     i2u1817_47:
 27211  011ED4  CFF6 FFE9          	movff	tblptrl,fsr0l
 27212  011ED8  CFF7 FFEA          	movff	tblptrh,fsr0h
 27213  011EDC  50EF               	movf	indf0,w,c
 27214  011EDE                     i2u1817_40:
 27215  011EDE  EC78  F0C5         	call	i2_isdigit
 27216  011EE2  A0D8               	btfss	status,0,c
 27217  011EE4  D0A4               	goto	i2l1421
 27218  011EE6  D7C1               	goto	i2l1418
 27219  011EE8                     i2l1416:
 27220                           
 27221                           ;doprnt.c: 626: prec = 0;
 27222  011EE8  0E00               	movlw	0
 27223  011EEA  0100               	movlb	0	; () banked
 27224  011EEC  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27225  011EEE  0E00               	movlw	0
 27226  011EF0  6FAD               	movwf	i2printf@prec& (0+255),b
 27227                           
 27228                           ; BSR set to: 0
 27229                           ;doprnt.c: 628: flag |= 0x1000;
 27230  011EF2  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;doprnt.c: 630: }
 27234                           ;doprnt.c: 635: switch(c = *f++) {
 27235  011EF4  D09C               	goto	i2l1421
 27236  011EF6                     
 27237                           ; BSR set to: 0
 27238                           ;doprnt.c: 663: flag |= 0x400;
 27239                           
 27240                           ; BSR set to: 0
 27241  011EF6  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 27242                           
 27243                           ; BSR set to: 0
 27244                           ;doprnt.c: 698: case 'i':
 27245                           ;doprnt.c: 699: break;
 27246                           
 27247                           ; BSR set to: 0
 27248                           
 27249                           ;doprnt.c: 697: case 'd':
 27250                           
 27251                           ;doprnt.c: 664: break;
 27252  011EF8  D0D1               	goto	i2l1425
 27253  011EFA                     
 27254                           ; BSR set to: 0
 27255                           ;doprnt.c: 718: case 'x':
 27256                           ;doprnt.c: 721: flag |= 0x80;
 27257                           
 27258                           ; BSR set to: 0
 27259                           
 27260                           ; BSR set to: 0
 27261  011EFA  8FA9               	bsf	i2printf@flag& (0+255),7,b
 27262                           
 27263                           ;doprnt.c: 723: break;
 27264  011EFC  D0CF               	goto	i2l1425
 27265  011EFE                     
 27266                           ; BSR set to: 0
 27267                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 27268                           
 27269                           ; BSR set to: 0
 27270  011EFE  C099  FFD9         	movff	i2printf@ap,fsr2l
 27271  011F02  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27272  011F06  CFDE F095          	movff	postinc2,i2printf@cp
 27273  011F0A  CFDD F096          	movff	postdec2,i2printf@cp+1
 27274                           
 27275                           ; BSR set to: 0
 27276  011F0E  0E02               	movlw	2
 27277  011F10  2799               	addwf	i2printf@ap& (0+255),f,b
 27278  011F12  0E00               	movlw	0
 27279  011F14  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27280                           
 27281                           ; BSR set to: 0
 27282                           ;doprnt.c: 740: if(!cp)
 27283  011F16  5195               	movf	i2printf@cp& (0+255),w,b
 27284  011F18  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 27285  011F1A  A4D8               	btfss	status,2,c
 27286  011F1C  D004               	goto	i2l1431
 27287                           
 27288                           ; BSR set to: 0
 27289                           ;doprnt.c: 741: cp = "(null)";
 27290  011F1E  0E86               	movlw	low STR_146
 27291  011F20  6F95               	movwf	i2printf@cp& (0+255),b
 27292  011F22  0EFF               	movlw	high STR_146
 27293  011F24  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 27294  011F26                     i2l1431:
 27295                           
 27296                           ; BSR set to: 0
 27297                           ;doprnt.c: 745: len = 0;
 27298                           
 27299                           ; BSR set to: 0
 27300  011F26  0E00               	movlw	0
 27301  011F28  6F98               	movwf	(i2printf@len+1)& (0+255),b
 27302  011F2A  0E00               	movlw	0
 27303  011F2C  6F97               	movwf	i2printf@len& (0+255),b
 27304                           
 27305                           ;doprnt.c: 746: while(cp[len])
 27306  011F2E  D003               	goto	i2l1432
 27307  011F30                     
 27308                           ;doprnt.c: 747: len++;
 27309                           
 27310                           ; BSR set to: 0
 27311  011F30  0100               	movlb	0	; () banked
 27312  011F32  4B97               	infsnz	i2printf@len& (0+255),f,b
 27313  011F34  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 27314  011F36                     i2l1432:
 27315                           
 27316                           ; BSR set to: 0
 27317                           
 27318                           ; BSR set to: 0
 27319  011F36  5197               	movf	i2printf@len& (0+255),w,b
 27320  011F38  2595               	addwf	i2printf@cp& (0+255),w,b
 27321  011F3A  6F8A               	movwf	??i2_printf& (0+255),b
 27322  011F3C  5198               	movf	(i2printf@len+1)& (0+255),w,b
 27323  011F3E  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 27324  011F40  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27325  011F42  C08A  FFF6         	movff	??i2_printf,tblptrl
 27326  011F46  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 27327  011F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 27328  011F4C  6EF8               	movwf	tblptru,c
 27329  011F4E  0E0D               	movlw	(high __ramtop+-1)
 27330  011F50  64F7               	cpfsgt	tblptrh,c
 27331  011F52  D003               	bra	i2u1820_47
 27332  011F54  0008               	tblrd		*
 27333  011F56  50F5               	movf	tablat,w,c
 27334  011F58  D005               	bra	i2u1820_40
 27335  011F5A                     i2u1820_47:
 27336  011F5A  CFF6 FFE9          	movff	tblptrl,fsr0l
 27337  011F5E  CFF7 FFEA          	movff	tblptrh,fsr0h
 27338  011F62  50EF               	movf	indf0,w,c
 27339  011F64                     i2u1820_40:
 27340  011F64  0900               	iorlw	0
 27341  011F66  A4D8               	btfss	status,2,c
 27342  011F68  D7E3               	goto	i2l1433
 27343  011F6A                     i2u1821_40:
 27344                           
 27345                           ;doprnt.c: 753: if(prec && prec < len)
 27346                           
 27347                           ;doprnt.c: 750: dostring:
 27348  011F6A  0100               	movlb	0	; () banked
 27349  011F6C  51AD               	movf	i2printf@prec& (0+255),w,b
 27350  011F6E  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 27351  011F70  B4D8               	btfsc	status,2,c
 27352  011F72  D00A               	goto	i2l1436
 27353                           
 27354                           ; BSR set to: 0
 27355  011F74  5197               	movf	i2printf@len& (0+255),w,b
 27356  011F76  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27357  011F78  5198               	movf	(i2printf@len+1)& (0+255),w,b
 27358  011F7A  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 27359  011F7C  B0D8               	btfsc	status,0,c
 27360  011F7E  D004               	goto	i2l1436
 27361                           
 27362                           ; BSR set to: 0
 27363                           ;doprnt.c: 754: len = prec;
 27364  011F80  C0AD  F097         	movff	i2printf@prec,i2printf@len
 27365  011F84  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 27366  011F88                     i2l1436:
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;doprnt.c: 757: if(width > len)
 27370                           
 27371                           ; BSR set to: 0
 27372  011F88  51AB               	movf	i2printf@width& (0+255),w,b
 27373  011F8A  5D97               	subwf	i2printf@len& (0+255),w,b
 27374  011F8C  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 27375  011F8E  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 27376  011F90  B0D8               	btfsc	status,0,c
 27377  011F92  D005               	goto	i2l1437
 27378                           
 27379                           ; BSR set to: 0
 27380                           ;doprnt.c: 758: width -= len;
 27381  011F94  5197               	movf	i2printf@len& (0+255),w,b
 27382  011F96  5FAB               	subwf	i2printf@width& (0+255),f,b
 27383  011F98  5198               	movf	(i2printf@len+1)& (0+255),w,b
 27384  011F9A  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 27385  011F9C  D008               	goto	i2l1439
 27386  011F9E                     i2l1437:
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;doprnt.c: 759: else
 27390                           ;doprnt.c: 760: width = 0;
 27391                           
 27392                           ; BSR set to: 0
 27393  011F9E  0E00               	movlw	0
 27394  011FA0  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 27395  011FA2  0E00               	movlw	0
 27396  011FA4  6FAB               	movwf	i2printf@width& (0+255),b
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;doprnt.c: 764: while(width--)
 27400  011FA6  D003               	goto	i2l1439
 27401  011FA8                     i2l14592:
 27402                           
 27403                           ; BSR set to: 0
 27404                           ;doprnt.c: 765: (putch(' ') );
 27405  011FA8  0E20               	movlw	32
 27406  011FAA  EC59  F0C6         	call	i2_putch
 27407  011FAE                     i2l1439:
 27408  011FAE  0100               	movlb	0	; () banked
 27409  011FB0  07AB               	decf	i2printf@width& (0+255),f,b
 27410  011FB2  A0D8               	btfss	status,0,c
 27411  011FB4  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27412  011FB6  29AB               	incf	i2printf@width& (0+255),w,b
 27413  011FB8  E1F7               	bnz	i2l14592
 27414  011FBA  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 27415  011FBC  B4D8               	btfsc	status,2,c
 27416  011FBE  D017               	goto	i2l1442
 27417  011FC0  D7F3               	goto	i2l1440
 27418  011FC2                     i2l14596:
 27419                           
 27420                           ; BSR set to: 0
 27421                           ;doprnt.c: 768: (putch(*cp++) );
 27422  011FC2  C095  FFF6         	movff	i2printf@cp,tblptrl
 27423  011FC6  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 27424  011FCA  0E00               	movlw	low (__mediumconst shr (0+16))
 27425  011FCC  6EF8               	movwf	tblptru,c
 27426  011FCE  0E0D               	movlw	(high __ramtop+-1)
 27427  011FD0  64F7               	cpfsgt	tblptrh,c
 27428  011FD2  D003               	bra	i2u1826_47
 27429  011FD4  0008               	tblrd		*
 27430  011FD6  50F5               	movf	tablat,w,c
 27431  011FD8  D005               	bra	i2u1826_40
 27432  011FDA                     i2u1826_47:
 27433  011FDA  CFF6 FFE9          	movff	tblptrl,fsr0l
 27434  011FDE  CFF7 FFEA          	movff	tblptrh,fsr0h
 27435  011FE2  50EF               	movf	indf0,w,c
 27436  011FE4                     i2u1826_40:
 27437  011FE4  EC59  F0C6         	call	i2_putch
 27438  011FE8  0100               	movlb	0	; () banked
 27439  011FEA  4B95               	infsnz	i2printf@cp& (0+255),f,b
 27440  011FEC  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 27441  011FEE                     i2l1442:
 27442                           
 27443                           ; BSR set to: 0
 27444                           
 27445                           ; BSR set to: 0
 27446  011FEE  0797               	decf	i2printf@len& (0+255),f,b
 27447  011FF0  A0D8               	btfss	status,0,c
 27448  011FF2  0798               	decf	(i2printf@len+1)& (0+255),f,b
 27449  011FF4  2997               	incf	i2printf@len& (0+255),w,b
 27450  011FF6  E1E5               	bnz	i2l14596
 27451  011FF8  2998               	incf	(i2printf@len+1)& (0+255),w,b
 27452  011FFA  B4D8               	btfsc	status,2,c
 27453  011FFC  EF49  F095         	goto	i2u1882_40
 27454  012000  D7E0               	goto	i2l1443
 27455  012002                     
 27456                           ; BSR set to: 0
 27457                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 27458                           
 27459                           ; BSR set to: 0
 27460  012002  C099  FFD9         	movff	i2printf@ap,fsr2l
 27461  012006  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27462  01200A  50DF               	movf	indf2,w,c
 27463  01200C  6FAF               	movwf	i2printf@c& (0+255),b
 27464                           
 27465                           ; BSR set to: 0
 27466  01200E  0E02               	movlw	2
 27467  012010  2799               	addwf	i2printf@ap& (0+255),f,b
 27468  012012  0E00               	movlw	0
 27469  012014  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27470  012016                     
 27471                           ; BSR set to: 0
 27472                           ;doprnt.c: 805: cp = (char *)&c;
 27473                           
 27474                           ; BSR set to: 0
 27475  012016  0EAF               	movlw	low i2printf@c
 27476  012018  6F95               	movwf	i2printf@cp& (0+255),b
 27477  01201A  0E00               	movlw	high i2printf@c
 27478  01201C  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 27479                           
 27480                           ; BSR set to: 0
 27481                           ;doprnt.c: 806: len = 1;
 27482  01201E  0E00               	movlw	0
 27483  012020  6F98               	movwf	(i2printf@len+1)& (0+255),b
 27484  012022  0E01               	movlw	1
 27485  012024  6F97               	movwf	i2printf@len& (0+255),b
 27486                           
 27487                           ;doprnt.c: 807: goto dostring;
 27488  012026  D7A1               	goto	i2u1821_40
 27489  012028                     
 27490                           ; BSR set to: 0
 27491                           ;doprnt.c: 818: flag |= 0xC0;
 27492                           
 27493                           ; BSR set to: 0
 27494  012028  0EC0               	movlw	192
 27495  01202A  13A9               	iorwf	i2printf@flag& (0+255),f,b
 27496                           
 27497                           ; BSR set to: 0
 27498                           ;doprnt.c: 822: }
 27499                           
 27500                           ;doprnt.c: 819: break;
 27501  01202C  D037               	goto	i2l1425
 27502  01202E                     i2l1421:
 27503                           
 27504                           ; BSR set to: 0
 27505  01202E  0100               	movlb	0	; () banked
 27506  012030  5188               	movf	i2printf@f& (0+255),w,b
 27507  012032  6F8A               	movwf	??i2_printf& (0+255),b
 27508  012034  5189               	movf	(i2printf@f+1)& (0+255),w,b
 27509  012036  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27510  012038  4B88               	infsnz	i2printf@f& (0+255),f,b
 27511  01203A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27512  01203C  C08A  FFF6         	movff	??i2_printf,tblptrl
 27513  012040  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 27514  012044  0E00               	movlw	low (__mediumconst shr (0+16))
 27515  012046  6EF8               	movwf	tblptru,c
 27516  012048  0E0D               	movlw	(high __ramtop+-1)
 27517  01204A  64F7               	cpfsgt	tblptrh,c
 27518  01204C  D003               	bra	i2u1828_47
 27519  01204E  0008               	tblrd		*
 27520  012050  50F5               	movf	tablat,w,c
 27521  012052  D005               	bra	i2u1828_40
 27522  012054                     i2u1828_47:
 27523  012054  CFF6 FFE9          	movff	tblptrl,fsr0l
 27524  012058  CFF7 FFEA          	movff	tblptrh,fsr0h
 27525  01205C  50EF               	movf	indf0,w,c
 27526  01205E                     i2u1828_40:
 27527  01205E  0100               	movlb	0	; () banked
 27528  012060  6FAF               	movwf	i2printf@c& (0+255),b
 27529  012062  51AF               	movf	i2printf@c& (0+255),w,b
 27530                           
 27531                           ; Switch size 1, requested type "space"
 27532                           ; Number of cases is 9, Range of values is 0 to 120
 27533                           ; switch strategies available:
 27534                           ; Name         Instructions Cycles
 27535                           ; simple_byte           28    15 (average)
 27536                           ;	Chosen strategy is simple_byte
 27537  012064  0A00               	xorlw	0	; case 0
 27538  012066  B4D8               	btfsc	status,2,c
 27539  012068  0012               	return	
 27540  01206A  0A58               	xorlw	88	; case 88
 27541  01206C  B4D8               	btfsc	status,2,c
 27542  01206E  D745               	goto	i2l1428
 27543  012070  0A3B               	xorlw	59	; case 99
 27544  012072  B4D8               	btfsc	status,2,c
 27545  012074  D7C6               	goto	i2l1445
 27546  012076  0A07               	xorlw	7	; case 100
 27547  012078  B4D8               	btfsc	status,2,c
 27548  01207A  D010               	goto	i2l1425
 27549  01207C  0A02               	xorlw	2	; case 102
 27550  01207E  B4D8               	btfsc	status,2,c
 27551  012080  D73A               	goto	i2l1424
 27552  012082  0A0F               	xorlw	15	; case 105
 27553  012084  B4D8               	btfsc	status,2,c
 27554  012086  D00A               	goto	i2l1425
 27555  012088  0A1A               	xorlw	26	; case 115
 27556  01208A  B4D8               	btfsc	status,2,c
 27557  01208C  D738               	goto	i2l1430
 27558  01208E  0A06               	xorlw	6	; case 117
 27559  012090  B4D8               	btfsc	status,2,c
 27560  012092  D7CA               	goto	i2l1447
 27561  012094  0A0D               	xorlw	13	; case 120
 27562  012096  B4D8               	btfsc	status,2,c
 27563  012098  D730               	goto	i2l1428
 27564  01209A  D7BD               	goto	i2l1446
 27565  01209C                     i2l1425:
 27566                           
 27567                           ; BSR set to: 0
 27568                           ;doprnt.c: 825: if(flag & (0x700)) {
 27569                           
 27570                           ; BSR set to: 0
 27571  01209C  0E07               	movlw	7
 27572  01209E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27573  0120A0  B4D8               	btfsc	status,2,c
 27574  0120A2  D33B               	goto	i2l1448
 27575                           
 27576                           ; BSR set to: 0
 27577                           ;doprnt.c: 827: if(flag & 0x1000)
 27578  0120A4  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 27579  0120A6  D004               	goto	i2l1449
 27580                           
 27581                           ; BSR set to: 0
 27582                           ;doprnt.c: 829: prec = 6;
 27583  0120A8  0E00               	movlw	0
 27584  0120AA  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27585  0120AC  0E06               	movlw	6
 27586  0120AE  6FAD               	movwf	i2printf@prec& (0+255),b
 27587  0120B0                     i2l1449:
 27588                           
 27589                           ; BSR set to: 0
 27590                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 27591                           
 27592                           ; BSR set to: 0
 27593  0120B0  C099  FFD9         	movff	i2printf@ap,fsr2l
 27594  0120B4  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27595  0120B8  CFDE F0A5          	movff	postinc2,i2printf@fval
 27596  0120BC  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 27597  0120C0  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 27598  0120C4  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 27599                           
 27600                           ; BSR set to: 0
 27601  0120C8  0E04               	movlw	4
 27602  0120CA  2799               	addwf	i2printf@ap& (0+255),f,b
 27603  0120CC  0E00               	movlw	0
 27604  0120CE  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27605                           
 27606                           ; BSR set to: 0
 27607                           ;doprnt.c: 831: if(fval < 0.0) {
 27608  0120D0  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 27609  0120D2  D015               	goto	i2l1450
 27610                           
 27611                           ; BSR set to: 0
 27612                           ;doprnt.c: 832: fval = -fval;
 27613  0120D4  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 27614  0120D8  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 27615  0120DC  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 27616  0120E0  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 27617  0120E4  ECA4  F0C4         	call	i2___flneg	;wreg free
 27618  0120E8  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 27619  0120EC  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 27620  0120F0  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 27621  0120F4  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 27622                           
 27623                           ;doprnt.c: 833: flag |= 0x03;
 27624  0120F8  0E03               	movlw	3
 27625  0120FA  0100               	movlb	0	; () banked
 27626  0120FC  13A9               	iorwf	i2printf@flag& (0+255),f,b
 27627  0120FE                     i2l1450:
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;doprnt.c: 834: }
 27631                           ;doprnt.c: 835: exp = 0;
 27632                           
 27633                           ; BSR set to: 0
 27634  0120FE  0E00               	movlw	0
 27635  012100  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 27636  012102  0E00               	movlw	0
 27637  012104  6F9F               	movwf	i2printf@exp& (0+255),b
 27638                           
 27639                           ; BSR set to: 0
 27640                           ;doprnt.c: 836: if( fval!=0) {
 27641  012106  51A5               	movf	i2printf@fval& (0+255),w,b
 27642  012108  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 27643  01210A  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 27644  01210C  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 27645  01210E  B4D8               	btfsc	status,2,c
 27646  012110  D082               	goto	i2l1455
 27647                           
 27648                           ; BSR set to: 0
 27649                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 27650  012112  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 27651  012114  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 27652  012116  0F82               	addlw	130
 27653  012118  6F9F               	movwf	i2printf@exp& (0+255),b
 27654  01211A  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 27655  01211C  0EFF               	movlw	255
 27656  01211E  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 27657                           
 27658                           ; BSR set to: 0
 27659                           ;doprnt.c: 838: exp--;
 27660  012120  079F               	decf	i2printf@exp& (0+255),f,b
 27661  012122  A0D8               	btfss	status,0,c
 27662  012124  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;doprnt.c: 839: exp *= 3;
 27666  012126  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 27667  01212A  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 27668  01212E  0E00               	movlw	0
 27669  012130  6E04               	movwf	i2___wmul@multiplicand+1,c
 27670  012132  0E03               	movlw	3
 27671  012134  6E03               	movwf	i2___wmul@multiplicand,c
 27672  012136  EC32  F0C5         	call	i2___wmul	;wreg free
 27673  01213A  C001  F09F         	movff	?i2___wmul,i2printf@exp
 27674  01213E  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 27675                           
 27676                           ;doprnt.c: 840: exp /= 10;
 27677  012142  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 27678  012146  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 27679  01214A  0E00               	movlw	0
 27680  01214C  6E0A               	movwf	i2___awdiv@divisor+1,c
 27681  01214E  0E0A               	movlw	10
 27682  012150  6E09               	movwf	i2___awdiv@divisor,c
 27683  012152  EC33  F0BE         	call	i2___awdiv	;wreg free
 27684  012156  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 27685  01215A  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 27686                           
 27687                           ;doprnt.c: 841: if(exp < 0)
 27688  01215E  0100               	movlb	0	; () banked
 27689  012160  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 27690  012162  D003               	goto	i2l1452
 27691                           
 27692                           ; BSR set to: 0
 27693                           ;doprnt.c: 842: exp--;
 27694  012164  079F               	decf	i2printf@exp& (0+255),f,b
 27695  012166  A0D8               	btfss	status,0,c
 27696  012168  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27697  01216A                     i2l1452:
 27698                           
 27699                           ; BSR set to: 0
 27700                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 27701                           
 27702                           ; BSR set to: 0
 27703  01216A  519F               	movf	i2printf@exp& (0+255),w,b
 27704  01216C  0800               	sublw	0
 27705  01216E  ECAA  F09C         	call	i2_scale
 27706  012172  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 27707  012176  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 27708  01217A  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 27709  01217E  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 27710                           
 27711                           ;doprnt.c: 847: tmpval.integ *= fval;
 27712  012182  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 27713  012186  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 27714  01218A  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 27715  01218E  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 27716  012192  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 27717  012196  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 27718  01219A  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 27719  01219E  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 27720  0121A2  EC47  F0A2         	call	i2___flmul	;wreg free
 27721  0121A6  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 27722  0121AA  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 27723  0121AE  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 27724  0121B2  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 27725                           
 27726                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 27727  0121B6  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 27728  0121BA  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 27729  0121BE  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 27730  0121C2  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 27731  0121C6  0E00               	movlw	0
 27732  0121C8  6E38               	movwf	i2___flge@ff2,c
 27733  0121CA  0E00               	movlw	0
 27734  0121CC  6E39               	movwf	i2___flge@ff2+1,c
 27735  0121CE  0E80               	movlw	128
 27736  0121D0  6E3A               	movwf	i2___flge@ff2+2,c
 27737  0121D2  0E3F               	movlw	63
 27738  0121D4  6E3B               	movwf	i2___flge@ff2+3,c
 27739  0121D6  ECE6  F0B8         	call	i2___flge	;wreg free
 27740  0121DA  B0D8               	btfsc	status,0,c
 27741  0121DC  D005               	goto	i2l1453
 27742                           
 27743                           ;doprnt.c: 849: exp--;
 27744  0121DE  0100               	movlb	0	; () banked
 27745  0121E0  079F               	decf	i2printf@exp& (0+255),f,b
 27746  0121E2  A0D8               	btfss	status,0,c
 27747  0121E4  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27748  0121E6  D017               	goto	i2l1455
 27749  0121E8                     i2l1453:
 27750                           
 27751                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 27752                           
 27753                           ; BSR set to: 0
 27754  0121E8  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 27755  0121EC  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 27756  0121F0  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 27757  0121F4  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 27758  0121F8  0E00               	movlw	0
 27759  0121FA  6E38               	movwf	i2___flge@ff2,c
 27760  0121FC  0E00               	movlw	0
 27761  0121FE  6E39               	movwf	i2___flge@ff2+1,c
 27762  012200  0E20               	movlw	32
 27763  012202  6E3A               	movwf	i2___flge@ff2+2,c
 27764  012204  0E41               	movlw	65
 27765  012206  6E3B               	movwf	i2___flge@ff2+3,c
 27766  012208  ECE6  F0B8         	call	i2___flge	;wreg free
 27767  01220C  A0D8               	btfss	status,0,c
 27768  01220E  D003               	goto	i2l1455
 27769                           
 27770                           ;doprnt.c: 851: exp++;
 27771  012210  0100               	movlb	0	; () banked
 27772  012212  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 27773  012214  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 27774  012216                     i2l1455:
 27775                           
 27776                           ;doprnt.c: 852: }
 27777                           ;doprnt.c: 1112: if(prec <= 12)
 27778                           
 27779                           ; BSR set to: 0
 27780                           
 27781                           ; BSR set to: 0
 27782                           
 27783                           ; BSR set to: 0
 27784  012216  0100               	movlb	0	; () banked
 27785  012218  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 27786  01221A  D006               	goto	i2u1836_40
 27787  01221C  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27788  01221E  E121               	bnz	i2l14664
 27789  012220  0E0D               	movlw	13
 27790  012222  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27791  012224  B0D8               	btfsc	status,0,c
 27792  012226  D01D               	goto	i2l1456
 27793  012228                     i2u1836_40:
 27794                           
 27795                           ; BSR set to: 0
 27796                           ;doprnt.c: 1113: fval += fround(prec);
 27797  012228  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 27798  01222C  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 27799  012230  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 27800  012234  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 27801  012238  51AD               	movf	i2printf@prec& (0+255),w,b
 27802  01223A  ECA8  F0AF         	call	i2_fround
 27803  01223E  C049  F05A         	movff	?i2_fround,i2___fladd@a
 27804  012242  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 27805  012246  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 27806  01224A  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 27807  01224E  EC8E  F0A5         	call	i2___fladd	;wreg free
 27808  012252  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 27809  012256  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 27810  01225A  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 27811  01225E  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 27812  012262                     i2l1456:
 27813  012262                     i2l14664:
 27814                           
 27815                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 27816  012262  0100               	movlb	0	; () banked
 27817  012264  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 27818  012266  D006               	goto	i2u1837_40
 27819  012268  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 27820  01226A  E122               	bnz	i2l14672
 27821  01226C  0E0A               	movlw	10
 27822  01226E  5D9F               	subwf	i2printf@exp& (0+255),w,b
 27823  012270  B0D8               	btfsc	status,0,c
 27824  012272  D01E               	goto	i2u1840_40
 27825  012274                     i2u1837_40:
 27826                           
 27827                           ; BSR set to: 0
 27828  012274  51A5               	movf	i2printf@fval& (0+255),w,b
 27829  012276  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 27830  012278  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 27831  01227A  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 27832  01227C  B4D8               	btfsc	status,2,c
 27833  01227E  D063               	goto	i2l1457
 27834                           
 27835                           ; BSR set to: 0
 27836  012280  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 27837  012284  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 27838  012288  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 27839  01228C  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 27840  012290  ECEE  F0BA         	call	i2___fltol	;wreg free
 27841  012294  0100               	movlb	0	; () banked
 27842  012296  516C               	movf	?i2___fltol& (0+255),w,b
 27843  012298  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 27844  01229A  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 27845  01229C  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 27846  01229E  B4D8               	btfsc	status,2,c
 27847                           
 27848                           ; BSR set to: 0
 27849  0122A0  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 27850  0122A2  D051               	goto	i2l1457
 27851  0122A4  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 27852  0122A6  E104               	bnz	i2l14672
 27853  0122A8  0E02               	movlw	2
 27854  0122AA  5D9F               	subwf	i2printf@exp& (0+255),w,b
 27855  0122AC  A0D8               	btfss	status,0,c
 27856  0122AE  D04B               	goto	i2l1457
 27857  0122B0                     i2u1840_40:
 27858  0122B0                     i2l14672:
 27859                           
 27860                           ; BSR set to: 0
 27861                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 27862  0122B0  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 27863  0122B4  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 27864  0122B8  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 27865  0122BC  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 27866  0122C0  0E5F               	movlw	95
 27867  0122C2  6E38               	movwf	i2___flge@ff2,c
 27868  0122C4  0E70               	movlw	112
 27869  0122C6  6E39               	movwf	i2___flge@ff2+1,c
 27870  0122C8  0E89               	movlw	137
 27871  0122CA  6E3A               	movwf	i2___flge@ff2+2,c
 27872  0122CC  0E40               	movlw	64
 27873  0122CE  6E3B               	movwf	i2___flge@ff2+3,c
 27874  0122D0  ECE6  F0B8         	call	i2___flge	;wreg free
 27875  0122D4  B0D8               	btfsc	status,0,c
 27876  0122D6  D003               	goto	i2l1460
 27877                           
 27878                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 27879  0122D8  0100               	movlb	0	; () banked
 27880  0122DA  0EF7               	movlw	247
 27881  0122DC  D002               	goto	L16
 27882  0122DE                     i2l1460:
 27883                           
 27884                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 27885                           
 27886                           ; BSR set to: 0
 27887  0122DE  0100               	movlb	0	; () banked
 27888  0122E0  0EF8               	movlw	248
 27889  0122E2                     L16:
 27890  0122E2  279F               	addwf	i2printf@exp& (0+255),f,b
 27891  0122E4  0EFF               	movlw	255
 27892  0122E6  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 27896                           
 27897                           ; BSR set to: 0
 27898  0122E8  519F               	movf	i2printf@exp& (0+255),w,b
 27899  0122EA  ECAA  F09C         	call	i2_scale
 27900  0122EE  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 27901  0122F2  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 27902  0122F6  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 27903  0122FA  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 27904  0122FE  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 27905  012302  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 27906  012306  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 27907  01230A  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 27908  01230E  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 27909  012312  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 27910  012316  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 27911  01231A  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 27912  01231E  EC2F  F0B7         	call	i2__div_to_l_	;wreg free
 27913  012322  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 27914  012326  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 27915  01232A  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 27916  01232E  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 27917                           
 27918                           ;doprnt.c: 1129: fval = 0.0;
 27919  012332  0E00               	movlw	0
 27920  012334  0100               	movlb	0	; () banked
 27921  012336  6FA5               	movwf	i2printf@fval& (0+255),b
 27922  012338  0E00               	movlw	0
 27923  01233A  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 27924  01233C  0E00               	movlw	0
 27925  01233E  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 27926  012340  0E00               	movlw	0
 27927  012342  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 27928                           
 27929                           ;doprnt.c: 1130: } else {
 27930  012344  D03C               	goto	i2l1466
 27931  012346                     i2l1457:
 27932                           
 27933                           ; BSR set to: 0
 27934                           ;doprnt.c: 1131: val = (unsigned long)fval;
 27935                           
 27936                           ; BSR set to: 0
 27937  012346  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 27938  01234A  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 27939  01234E  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 27940  012352  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 27941  012356  ECEE  F0BA         	call	i2___fltol	;wreg free
 27942  01235A  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 27943  01235E  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 27944  012362  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 27945  012366  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 27946                           
 27947                           ;doprnt.c: 1132: fval -= (double)val;
 27948  01236A  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 27949  01236E  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 27950  012372  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 27951  012376  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 27952  01237A  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 27953  01237E  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 27954  012382  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 27955  012386  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 27956  01238A  0E00               	movlw	0
 27957  01238C  ECBF  F0B4         	call	i2___xxtofl
 27958  012390  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 27959  012394  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 27960  012398  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 27961  01239C  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 27962  0123A0  ECDC  F0C2         	call	i2___flsub	;wreg free
 27963  0123A4  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 27964  0123A8  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 27965  0123AC  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 27966  0123B0  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 27967                           
 27968                           ;doprnt.c: 1133: exp = 0;
 27969  0123B4  0E00               	movlw	0
 27970  0123B6  0100               	movlb	0	; () banked
 27971  0123B8  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 27972  0123BA  0E00               	movlw	0
 27973  0123BC  6F9F               	movwf	i2printf@exp& (0+255),b
 27974  0123BE                     i2l1466:
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;doprnt.c: 1134: }
 27978                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 27979                           
 27980                           ; BSR set to: 0
 27981  0123BE  0E01               	movlw	1
 27982  0123C0  6FAF               	movwf	i2printf@c& (0+255),b
 27983  0123C2                     i2l14692:
 27984                           
 27985                           ; BSR set to: 0
 27986  0123C2  0E0A               	movlw	10
 27987  0123C4  19AF               	xorwf	i2printf@c& (0+255),w,b
 27988  0123C6  B4D8               	btfsc	status,2,c
 27989  0123C8  D01B               	goto	i2u1844_40
 27990                           
 27991                           ; BSR set to: 0
 27992                           ;doprnt.c: 1137: if(val < dpowers[c])
 27993                           
 27994                           ; BSR set to: 0
 27995                           
 27996                           ; BSR set to: 0
 27997  0123CA  51AF               	movf	i2printf@c& (0+255),w,b
 27998  0123CC  0D04               	mullw	4
 27999  0123CE  0EF9               	movlw	low _dpowers
 28000  0123D0  24F3               	addwf	prodl,w,c
 28001  0123D2  6EF6               	movwf	tblptrl,c
 28002  0123D4  0EE8               	movlw	high _dpowers
 28003  0123D6  20F4               	addwfc	prodh,w,c
 28004  0123D8  6EF7               	movwf	tblptrh,c
 28005  0123DA                     	if	1	;There are 3 active tblptr bytes
 28006  0123DA  6AF8               	clrf	tblptru,c
 28007  0123DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28008  0123DE  22F8               	addwfc	tblptru,f,c
 28009  0123E0                     	endif
 28010  0123E0  0009               	tblrd		*+
 28011  0123E2  50F5               	movf	tablat,w,c
 28012  0123E4  5DA1               	subwf	i2printf@val& (0+255),w,b
 28013  0123E6  0009               	tblrd		*+
 28014  0123E8  50F5               	movf	tablat,w,c
 28015  0123EA  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 28016  0123EC  0009               	tblrd		*+
 28017  0123EE  50F5               	movf	tablat,w,c
 28018  0123F0  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 28019  0123F2  0009               	tblrd		*+
 28020  0123F4  50F5               	movf	tablat,w,c
 28021  0123F6  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 28022  0123F8  A0D8               	btfss	status,0,c
 28023  0123FA  D002               	goto	i2u1844_40
 28024                           
 28025                           ; BSR set to: 0
 28026                           
 28027                           ; BSR set to: 0
 28028                           
 28029                           ; BSR set to: 0
 28030                           ;doprnt.c: 1138: break;
 28031  0123FC  2BAF               	incf	i2printf@c& (0+255),f,b
 28032  0123FE  D7E1               	goto	i2l14692
 28033  012400                     i2u1844_40:
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;doprnt.c: 1142: width -= prec + c + exp;
 28037                           
 28038                           ; BSR set to: 0
 28039  012400  C0AF  F08A         	movff	i2printf@c,??i2_printf
 28040  012404  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 28041  012406  BF8A               	btfsc	??i2_printf& (0+255),7,b
 28042  012408  078B               	decf	(??i2_printf+1)& (0+255),f,b
 28043  01240A  51AD               	movf	i2printf@prec& (0+255),w,b
 28044  01240C  278A               	addwf	??i2_printf& (0+255),f,b
 28045  01240E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28046  012410  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 28047  012412  519F               	movf	i2printf@exp& (0+255),w,b
 28048  012414  278A               	addwf	??i2_printf& (0+255),f,b
 28049  012416  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 28050  012418  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 28051  01241A  518A               	movf	??i2_printf& (0+255),w,b
 28052  01241C  5FAB               	subwf	i2printf@width& (0+255),f,b
 28053  01241E  518B               	movf	(??i2_printf+1)& (0+255),w,b
 28054  012420  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 28055                           
 28056                           ;doprnt.c: 1143: if(
 28057                           ;doprnt.c: 1147: prec)
 28058  012422  51AD               	movf	i2printf@prec& (0+255),w,b
 28059  012424  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 28060  012426  B4D8               	btfsc	status,2,c
 28061  012428  D003               	goto	i2l1470
 28062                           
 28063                           ; BSR set to: 0
 28064                           ;doprnt.c: 1148: width--;
 28065  01242A  07AB               	decf	i2printf@width& (0+255),f,b
 28066  01242C  A0D8               	btfss	status,0,c
 28067  01242E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28068  012430                     i2l1470:
 28069                           
 28070                           ; BSR set to: 0
 28071                           ;doprnt.c: 1149: if(flag & 0x03)
 28072                           
 28073                           ; BSR set to: 0
 28074  012430  0E03               	movlw	3
 28075  012432  15A9               	andwf	i2printf@flag& (0+255),w,b
 28076  012434  6F8A               	movwf	??i2_printf& (0+255),b
 28077  012436  0E00               	movlw	0
 28078  012438  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28079  01243A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28080  01243C  518A               	movf	??i2_printf& (0+255),w,b
 28081  01243E  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28082  012440  B4D8               	btfsc	status,2,c
 28083  012442  D003               	goto	i2l1471
 28084                           
 28085                           ; BSR set to: 0
 28086                           ;doprnt.c: 1150: width--;
 28087  012444  07AB               	decf	i2printf@width& (0+255),f,b
 28088  012446  A0D8               	btfss	status,0,c
 28089  012448  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28090  01244A                     i2l1471:
 28091                           
 28092                           ; BSR set to: 0
 28093                           ;doprnt.c: 1153: if(flag & 0x04) {
 28094                           
 28095                           ; BSR set to: 0
 28096  01244A  A5A9               	btfss	i2printf@flag& (0+255),2,b
 28097  01244C  D025               	goto	i2l1478
 28098                           
 28099                           ; BSR set to: 0
 28100                           ;doprnt.c: 1157: if(flag & 0x03)
 28101  01244E  0E03               	movlw	3
 28102  012450  15A9               	andwf	i2printf@flag& (0+255),w,b
 28103  012452  6F8A               	movwf	??i2_printf& (0+255),b
 28104  012454  0E00               	movlw	0
 28105  012456  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28106  012458  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28107  01245A  518A               	movf	??i2_printf& (0+255),w,b
 28108  01245C  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28109  01245E  B4D8               	btfsc	status,2,c
 28110  012460  D00B               	goto	i2l1474
 28111                           
 28112                           ; BSR set to: 0
 28113                           ;doprnt.c: 1159: (putch('-') );
 28114  012462  0E2D               	movlw	45
 28115  012464  EC59  F0C6         	call	i2_putch
 28116                           
 28117                           ;doprnt.c: 1168: while(width > 0) {
 28118  012468  D007               	goto	i2l1474
 28119  01246A                     i2l14718:
 28120                           
 28121                           ;doprnt.c: 1169: (putch('0') );
 28122  01246A  0E30               	movlw	48
 28123  01246C  EC59  F0C6         	call	i2_putch
 28124                           
 28125                           ;doprnt.c: 1170: width--;
 28126  012470  0100               	movlb	0	; () banked
 28127  012472  07AB               	decf	i2printf@width& (0+255),f,b
 28128  012474  A0D8               	btfss	status,0,c
 28129  012476  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28130  012478                     i2l1474:
 28131                           
 28132                           ; BSR set to: 0
 28133  012478  0100               	movlb	0	; () banked
 28134  01247A  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 28135  01247C  D06B               	goto	i2l1482
 28136  01247E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28137  012480  E1F4               	bnz	i2l14718
 28138  012482  05AB               	decf	i2printf@width& (0+255),w,b
 28139  012484  A0D8               	btfss	status,0,c
 28140  012486  D066               	goto	i2l1482
 28141  012488  D7F0               	goto	i2l1475
 28142  01248A                     i2l14724:
 28143                           
 28144                           ; BSR set to: 0
 28145                           ;doprnt.c: 1181: (putch(' ') );
 28146  01248A  0E20               	movlw	32
 28147  01248C  EC59  F0C6         	call	i2_putch
 28148                           
 28149                           ;doprnt.c: 1182: width--;
 28150  012490  0100               	movlb	0	; () banked
 28151  012492  07AB               	decf	i2printf@width& (0+255),f,b
 28152  012494  A0D8               	btfss	status,0,c
 28153  012496  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28154  012498                     i2l1478:
 28155                           
 28156                           ; BSR set to: 0
 28157                           
 28158                           ; BSR set to: 0
 28159  012498  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 28160  01249A  D005               	goto	i2u1850_40
 28161  01249C  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28162  01249E  E1F5               	bnz	i2l14724
 28163  0124A0  05AB               	decf	i2printf@width& (0+255),w,b
 28164  0124A2  B0D8               	btfsc	status,0,c
 28165  0124A4  D7F2               	goto	i2l1479
 28166  0124A6                     i2u1850_40:
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;doprnt.c: 1183: }
 28170                           ;doprnt.c: 1188: if(flag & 0x03)
 28171                           
 28172                           ; BSR set to: 0
 28173  0124A6  0E03               	movlw	3
 28174  0124A8  15A9               	andwf	i2printf@flag& (0+255),w,b
 28175  0124AA  6F8A               	movwf	??i2_printf& (0+255),b
 28176  0124AC  0E00               	movlw	0
 28177  0124AE  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28178  0124B0  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28179  0124B2  518A               	movf	??i2_printf& (0+255),w,b
 28180  0124B4  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28181  0124B6  B4D8               	btfsc	status,2,c
 28182  0124B8  D04D               	goto	i2l1482
 28183                           
 28184                           ; BSR set to: 0
 28185                           ;doprnt.c: 1190: (putch('-') );
 28186  0124BA  0E2D               	movlw	45
 28187  0124BC  EC59  F0C6         	call	i2_putch
 28188                           
 28189                           ;doprnt.c: 1195: }
 28190                           ;doprnt.c: 1196: while(c--) {
 28191  0124C0  D049               	goto	i2l1482
 28192  0124C2                     
 28193                           ;doprnt.c: 1200: {
 28194                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 28195  0124C2  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 28196  0124C6  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28197  0124CA  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28198  0124CE  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28199  0124D2  0100               	movlb	0	; () banked
 28200  0124D4  51AF               	movf	i2printf@c& (0+255),w,b
 28201  0124D6  0D04               	mullw	4
 28202  0124D8  0EF9               	movlw	low _dpowers
 28203  0124DA  24F3               	addwf	prodl,w,c
 28204  0124DC  6EF6               	movwf	tblptrl,c
 28205  0124DE  0EE8               	movlw	high _dpowers
 28206  0124E0  20F4               	addwfc	prodh,w,c
 28207  0124E2  6EF7               	movwf	tblptrh,c
 28208  0124E4                     	if	1	;There are 3 active tblptr bytes
 28209  0124E4  6AF8               	clrf	tblptru,c
 28210  0124E6  0E00               	movlw	low (__mediumconst shr (0+16))
 28211  0124E8  22F8               	addwfc	tblptru,f,c
 28212  0124EA                     	endif
 28213  0124EA  0009               	tblrd		*+
 28214  0124EC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28215  0124F0  0009               	tblrd		*+
 28216  0124F2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28217  0124F6  0009               	tblrd		*+
 28218  0124F8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28219  0124FC  000A               	tblrd		*-
 28220  0124FE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28221  012502  EC75  F0BE         	call	i2___lldiv	;wreg free
 28222  012506  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 28223  01250A  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 28224  01250E  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 28225  012512  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 28226                           
 28227                           ;doprnt.c: 1202: tmpval.vd %= 10;
 28228  012516  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 28229  01251A  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 28230  01251E  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 28231  012522  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 28232  012526  0E0A               	movlw	10
 28233  012528  6E12               	movwf	i2___llmod@divisor,c
 28234  01252A  0E00               	movlw	0
 28235  01252C  6E13               	movwf	i2___llmod@divisor+1,c
 28236  01252E  0E00               	movlw	0
 28237  012530  6E14               	movwf	i2___llmod@divisor+2,c
 28238  012532  0E00               	movlw	0
 28239  012534  6E15               	movwf	i2___llmod@divisor+3,c
 28240  012536  EC76  F0C0         	call	i2___llmod	;wreg free
 28241  01253A  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 28242  01253E  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 28243  012542  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 28244  012546  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 28245                           
 28246                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 28247  01254A  0100               	movlb	0	; () banked
 28248  01254C  519B               	movf	i2printf@tmpval& (0+255),w,b
 28249  01254E  0F30               	addlw	48
 28250  012550  EC59  F0C6         	call	i2_putch
 28251  012554                     i2l1482:
 28252  012554  0100               	movlb	0	; () banked
 28253  012556  07AF               	decf	i2printf@c& (0+255),f,b
 28254  012558  29AF               	incf	i2printf@c& (0+255),w,b
 28255  01255A  B4D8               	btfsc	status,2,c
 28256  01255C  D008               	goto	i2l1485
 28257  01255E  D7B1               	goto	i2l1483
 28258  012560                     i2l14742:
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;doprnt.c: 1208: (putch('0') );
 28262  012560  0E30               	movlw	48
 28263  012562  EC59  F0C6         	call	i2_putch
 28264                           
 28265                           ;doprnt.c: 1209: exp--;
 28266  012566  0100               	movlb	0	; () banked
 28267  012568  079F               	decf	i2printf@exp& (0+255),f,b
 28268  01256A  A0D8               	btfss	status,0,c
 28269  01256C  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 28270  01256E                     i2l1485:
 28271                           
 28272                           ; BSR set to: 0
 28273                           
 28274                           ; BSR set to: 0
 28275  01256E  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 28276  012570  D005               	goto	i2u1853_40
 28277  012572  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 28278  012574  E1F5               	bnz	i2l14742
 28279  012576  059F               	decf	i2printf@exp& (0+255),w,b
 28280  012578  B0D8               	btfsc	status,0,c
 28281  01257A  D7F2               	goto	i2l1486
 28282  01257C                     i2u1853_40:
 28283                           
 28284                           ; BSR set to: 0
 28285                           ;doprnt.c: 1210: }
 28286                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 28287                           
 28288                           ; BSR set to: 0
 28289  01257C  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 28290  01257E  D009               	goto	i2l1488
 28291  012580  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28292  012582  E104               	bnz	i2u1854_40
 28293  012584  0E09               	movlw	9
 28294  012586  5DAD               	subwf	i2printf@prec& (0+255),w,b
 28295  012588  A0D8               	btfss	status,0,c
 28296  01258A  D003               	goto	i2l1488
 28297  01258C                     i2u1854_40:
 28298                           
 28299                           ; BSR set to: 0
 28300                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 28301  01258C  0E08               	movlw	8
 28302  01258E  6FAF               	movwf	i2printf@c& (0+255),b
 28303  012590  D002               	goto	i2l1489
 28304  012592                     i2l1488:
 28305                           
 28306                           ; BSR set to: 0
 28307                           ;doprnt.c: 1213: else
 28308                           ;doprnt.c: 1214: c = prec;
 28309  012592  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 28310  012596                     i2l1489:
 28311                           
 28312                           ; BSR set to: 0
 28313                           ;doprnt.c: 1215: prec -= c;
 28314                           
 28315                           ; BSR set to: 0
 28316  012596  51AF               	movf	i2printf@c& (0+255),w,b
 28317  012598  5FAD               	subwf	i2printf@prec& (0+255),f,b
 28318  01259A  0E00               	movlw	0
 28319  01259C  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28320  01259E  0EFF               	movlw	255
 28321  0125A0  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 28322                           
 28323                           ; BSR set to: 0
 28324                           ;doprnt.c: 1219: if(c)
 28325  0125A2  51AF               	movf	i2printf@c& (0+255),w,b
 28326  0125A4  B4D8               	btfsc	status,2,c
 28327  0125A6  D003               	goto	i2l1490
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;doprnt.c: 1221: (putch('.') );
 28331  0125A8  0E2E               	movlw	46
 28332  0125AA  EC59  F0C6         	call	i2_putch
 28333  0125AE                     i2l1490:
 28334                           
 28335                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 28336  0125AE  0100               	movlb	0	; () banked
 28337  0125B0  51AF               	movf	i2printf@c& (0+255),w,b
 28338  0125B2  ECAA  F09C         	call	i2_scale
 28339  0125B6  C049  F090         	movff	?i2_scale,i2_printf$4146
 28340  0125BA  C04A  F091         	movff	?i2_scale+1,i2_printf$4146+1
 28341  0125BE  C04B  F092         	movff	?i2_scale+2,i2_printf$4146+2
 28342  0125C2  C04C  F093         	movff	?i2_scale+3,i2_printf$4146+3
 28343                           
 28344                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 28345  0125C6  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 28346  0125CA  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 28347  0125CE  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 28348  0125D2  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 28349  0125D6  C090  F030         	movff	i2_printf$4146,i2___flmul@b
 28350  0125DA  C091  F031         	movff	i2_printf$4146+1,i2___flmul@b+1
 28351  0125DE  C092  F032         	movff	i2_printf$4146+2,i2___flmul@b+2
 28352  0125E2  C093  F033         	movff	i2_printf$4146+3,i2___flmul@b+3
 28353  0125E6  EC47  F0A2         	call	i2___flmul	;wreg free
 28354  0125EA  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 28355  0125EE  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 28356  0125F2  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 28357  0125F6  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 28358  0125FA  ECEE  F0BA         	call	i2___fltol	;wreg free
 28359  0125FE  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 28360  012602  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 28361  012606  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 28362  01260A  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 28363                           
 28364                           ;doprnt.c: 1228: while(c--) {
 28365  01260E  D073               	goto	i2l1491
 28366  012610                     
 28367                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 28368  012610  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 28369  012614  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28370  012618  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28371  01261C  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28372  012620  0100               	movlb	0	; () banked
 28373  012622  51AF               	movf	i2printf@c& (0+255),w,b
 28374  012624  0D04               	mullw	4
 28375  012626  0EF9               	movlw	low _dpowers
 28376  012628  24F3               	addwf	prodl,w,c
 28377  01262A  6EF6               	movwf	tblptrl,c
 28378  01262C  0EE8               	movlw	high _dpowers
 28379  01262E  20F4               	addwfc	prodh,w,c
 28380  012630  6EF7               	movwf	tblptrh,c
 28381  012632                     	if	1	;There are 3 active tblptr bytes
 28382  012632  6AF8               	clrf	tblptru,c
 28383  012634  0E00               	movlw	low (__mediumconst shr (0+16))
 28384  012636  22F8               	addwfc	tblptru,f,c
 28385  012638                     	endif
 28386  012638  0009               	tblrd		*+
 28387  01263A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28388  01263E  0009               	tblrd		*+
 28389  012640  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28390  012644  0009               	tblrd		*+
 28391  012646  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28392  01264A  000A               	tblrd		*-
 28393  01264C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28394  012650  EC75  F0BE         	call	i2___lldiv	;wreg free
 28395  012654  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 28396  012658  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 28397  01265C  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 28398  012660  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 28399                           
 28400                           ;doprnt.c: 1230: tmpval.vd %= 10;
 28401  012664  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 28402  012668  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 28403  01266C  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 28404  012670  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 28405  012674  0E0A               	movlw	10
 28406  012676  6E12               	movwf	i2___llmod@divisor,c
 28407  012678  0E00               	movlw	0
 28408  01267A  6E13               	movwf	i2___llmod@divisor+1,c
 28409  01267C  0E00               	movlw	0
 28410  01267E  6E14               	movwf	i2___llmod@divisor+2,c
 28411  012680  0E00               	movlw	0
 28412  012682  6E15               	movwf	i2___llmod@divisor+3,c
 28413  012684  EC76  F0C0         	call	i2___llmod	;wreg free
 28414  012688  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 28415  01268C  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 28416  012690  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 28417  012694  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 28418                           
 28419                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 28420  012698  0100               	movlb	0	; () banked
 28421  01269A  519B               	movf	i2printf@tmpval& (0+255),w,b
 28422  01269C  0F30               	addlw	48
 28423  01269E  EC59  F0C6         	call	i2_putch
 28424                           
 28425                           ;doprnt.c: 1232: val %= dpowers[c];
 28426  0126A2  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 28427  0126A6  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 28428  0126AA  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 28429  0126AE  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 28430  0126B2  0100               	movlb	0	; () banked
 28431  0126B4  51AF               	movf	i2printf@c& (0+255),w,b
 28432  0126B6  0D04               	mullw	4
 28433  0126B8  0EF9               	movlw	low _dpowers
 28434  0126BA  24F3               	addwf	prodl,w,c
 28435  0126BC  6EF6               	movwf	tblptrl,c
 28436  0126BE  0EE8               	movlw	high _dpowers
 28437  0126C0  20F4               	addwfc	prodh,w,c
 28438  0126C2  6EF7               	movwf	tblptrh,c
 28439  0126C4                     	if	1	;There are 3 active tblptr bytes
 28440  0126C4  6AF8               	clrf	tblptru,c
 28441  0126C6  0E00               	movlw	low (__mediumconst shr (0+16))
 28442  0126C8  22F8               	addwfc	tblptru,f,c
 28443  0126CA                     	endif
 28444  0126CA  0009               	tblrd		*+
 28445  0126CC  CFF5 F012          	movff	tablat,i2___llmod@divisor
 28446  0126D0  0009               	tblrd		*+
 28447  0126D2  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 28448  0126D6  0009               	tblrd		*+
 28449  0126D8  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 28450  0126DC  000A               	tblrd		*-
 28451  0126DE  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 28452  0126E2  EC76  F0C0         	call	i2___llmod	;wreg free
 28453  0126E6  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 28454  0126EA  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 28455  0126EE  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 28456  0126F2  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 28457  0126F6                     i2l1491:
 28458  0126F6  0100               	movlb	0	; () banked
 28459  0126F8  07AF               	decf	i2printf@c& (0+255),f,b
 28460  0126FA  29AF               	incf	i2printf@c& (0+255),w,b
 28461  0126FC  B4D8               	btfsc	status,2,c
 28462  0126FE  D008               	goto	i2l1494
 28463  012700  D787               	goto	i2l1492
 28464  012702                     
 28465                           ; BSR set to: 0
 28466                           ;doprnt.c: 1236: (putch('0') );
 28467                           
 28468                           ; BSR set to: 0
 28469  012702  0E30               	movlw	48
 28470  012704  EC59  F0C6         	call	i2_putch
 28471                           
 28472                           ;doprnt.c: 1237: prec--;
 28473  012708  0100               	movlb	0	; () banked
 28474  01270A  07AD               	decf	i2printf@prec& (0+255),f,b
 28475  01270C  A0D8               	btfss	status,0,c
 28476  01270E  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 28477  012710                     i2l1494:
 28478                           
 28479                           ; BSR set to: 0
 28480                           
 28481                           ; BSR set to: 0
 28482  012710  51AD               	movf	i2printf@prec& (0+255),w,b
 28483  012712  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 28484  012714  B4D8               	btfsc	status,2,c
 28485  012716  D1BD               	goto	i2u1882_40
 28486  012718  D7F4               	goto	i2l1495
 28487  01271A                     i2l1448:
 28488                           
 28489                           ; BSR set to: 0
 28490                           ;doprnt.c: 1246: }
 28491                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 28492                           
 28493                           ; BSR set to: 0
 28494  01271A  0EC0               	movlw	192
 28495  01271C  15A9               	andwf	i2printf@flag& (0+255),w,b
 28496  01271E  6F8A               	movwf	??i2_printf& (0+255),b
 28497  012720  0E00               	movlw	0
 28498  012722  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28499  012724  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28500  012726  518A               	movf	??i2_printf& (0+255),w,b
 28501  012728  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28502  01272A  A4D8               	btfss	status,2,c
 28503  01272C  D01E               	goto	i2l1497
 28504                           
 28505                           ; BSR set to: 0
 28506                           ;doprnt.c: 1253: {
 28507                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 28508  01272E  C099  FFD9         	movff	i2printf@ap,fsr2l
 28509  012732  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 28510  012736  CFDE F0A1          	movff	postinc2,i2printf@val
 28511  01273A  CFDD F0A2          	movff	postdec2,i2printf@val+1
 28512  01273E  0E00               	movlw	0
 28513  012740  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 28514  012742  0EFF               	movlw	-1
 28515  012744  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 28516  012746  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 28517                           
 28518                           ; BSR set to: 0
 28519  012748  0E02               	movlw	2
 28520  01274A  2799               	addwf	i2printf@ap& (0+255),f,b
 28521  01274C  0E00               	movlw	0
 28522  01274E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 28523                           
 28524                           ; BSR set to: 0
 28525                           ;doprnt.c: 1261: if((long)val < 0) {
 28526  012750  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 28527  012752  D01D               	goto	i2l1499
 28528                           
 28529                           ; BSR set to: 0
 28530                           ;doprnt.c: 1262: flag |= 0x03;
 28531  012754  0E03               	movlw	3
 28532  012756  13A9               	iorwf	i2printf@flag& (0+255),f,b
 28533                           
 28534                           ; BSR set to: 0
 28535                           ;doprnt.c: 1263: val = -val;
 28536  012758  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 28537  01275A  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 28538  01275C  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 28539  01275E  6DA1               	negf	i2printf@val& (0+255),b
 28540  012760  0E00               	movlw	0
 28541  012762  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 28542  012764  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 28543  012766  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 28544                           
 28545                           ; BSR set to: 0
 28546                           ;doprnt.c: 1264: }
 28547                           ;doprnt.c: 1266: }
 28548  012768  D012               	goto	i2l1499
 28549  01276A                     i2l1497:
 28550                           
 28551                           ; BSR set to: 0
 28552                           ;doprnt.c: 1268: else
 28553                           ;doprnt.c: 1273: {
 28554                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 28555                           
 28556                           ; BSR set to: 0
 28557  01276A  C099  FFD9         	movff	i2printf@ap,fsr2l
 28558  01276E  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 28559  012772  CFDE F08A          	movff	postinc2,??i2_printf
 28560  012776  CFDD F08B          	movff	postdec2,??i2_printf+1
 28561  01277A  C08A  F0A1         	movff	??i2_printf,i2printf@val
 28562  01277E  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 28563  012782  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 28564  012784  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 28565                           
 28566                           ; BSR set to: 0
 28567  012786  0E02               	movlw	2
 28568  012788  2799               	addwf	i2printf@ap& (0+255),f,b
 28569  01278A  0E00               	movlw	0
 28570  01278C  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 28571  01278E                     i2l1499:
 28572                           
 28573                           ; BSR set to: 0
 28574                           ;doprnt.c: 1287: }
 28575                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 28576                           
 28577                           ; BSR set to: 0
 28578  01278E  51AD               	movf	i2printf@prec& (0+255),w,b
 28579  012790  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 28580  012792  A4D8               	btfss	status,2,c
 28581  012794  D04B               	goto	i2l1501
 28582                           
 28583                           ; BSR set to: 0
 28584  012796  51A1               	movf	i2printf@val& (0+255),w,b
 28585  012798  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 28586  01279A  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 28587  01279C  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 28588  01279E  A4D8               	btfss	status,2,c
 28589  0127A0  D045               	goto	i2l1501
 28590                           
 28591                           ; BSR set to: 0
 28592                           ;doprnt.c: 1291: prec++;
 28593  0127A2  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 28594  0127A4  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 28598  0127A6  D042               	goto	i2l1501
 28599  0127A8                     
 28600                           ; BSR set to: 0
 28601                           ;doprnt.c: 1302: case 0xC0:
 28602                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 28603                           
 28604                           ; BSR set to: 0
 28605                           
 28606                           ; BSR set to: 0
 28607  0127A8  0E01               	movlw	1
 28608  0127AA  6FAF               	movwf	i2printf@c& (0+255),b
 28609  0127AC                     i2l14802:
 28610                           
 28611                           ; BSR set to: 0
 28612  0127AC  0E0A               	movlw	10
 28613  0127AE  19AF               	xorwf	i2printf@c& (0+255),w,b
 28614  0127B0  B4D8               	btfsc	status,2,c
 28615  0127B2  D047               	goto	i2l1507
 28616                           
 28617                           ; BSR set to: 0
 28618                           ;doprnt.c: 1306: if(val < dpowers[c])
 28619                           
 28620                           ; BSR set to: 0
 28621                           
 28622                           ; BSR set to: 0
 28623  0127B4  51AF               	movf	i2printf@c& (0+255),w,b
 28624  0127B6  0D04               	mullw	4
 28625  0127B8  0EF9               	movlw	low _dpowers
 28626  0127BA  24F3               	addwf	prodl,w,c
 28627  0127BC  6EF6               	movwf	tblptrl,c
 28628  0127BE  0EE8               	movlw	high _dpowers
 28629  0127C0  20F4               	addwfc	prodh,w,c
 28630  0127C2  6EF7               	movwf	tblptrh,c
 28631  0127C4                     	if	1	;There are 3 active tblptr bytes
 28632  0127C4  6AF8               	clrf	tblptru,c
 28633  0127C6  0E00               	movlw	low (__mediumconst shr (0+16))
 28634  0127C8  22F8               	addwfc	tblptru,f,c
 28635  0127CA                     	endif
 28636  0127CA  0009               	tblrd		*+
 28637  0127CC  50F5               	movf	tablat,w,c
 28638  0127CE  5DA1               	subwf	i2printf@val& (0+255),w,b
 28639  0127D0  0009               	tblrd		*+
 28640  0127D2  50F5               	movf	tablat,w,c
 28641  0127D4  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 28642  0127D6  0009               	tblrd		*+
 28643  0127D8  50F5               	movf	tablat,w,c
 28644  0127DA  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 28645  0127DC  0009               	tblrd		*+
 28646  0127DE  50F5               	movf	tablat,w,c
 28647  0127E0  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 28648  0127E2  A0D8               	btfss	status,0,c
 28649  0127E4  D02E               	goto	i2l1507
 28650                           
 28651                           ; BSR set to: 0
 28652                           
 28653                           ; BSR set to: 0
 28654                           
 28655                           ; BSR set to: 0
 28656                           ;doprnt.c: 1307: break;
 28657  0127E6  2BAF               	incf	i2printf@c& (0+255),f,b
 28658  0127E8  D7E1               	goto	i2l14802
 28659  0127EA                     
 28660                           ; BSR set to: 0
 28661                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 28662                           
 28663                           ; BSR set to: 0
 28664  0127EA  0E01               	movlw	1
 28665  0127EC  6FAF               	movwf	i2printf@c& (0+255),b
 28666  0127EE                     i2l14816:
 28667                           
 28668                           ; BSR set to: 0
 28669  0127EE  0E08               	movlw	8
 28670  0127F0  19AF               	xorwf	i2printf@c& (0+255),w,b
 28671  0127F2  B4D8               	btfsc	status,2,c
 28672  0127F4  D026               	goto	i2l1507
 28673                           
 28674                           ; BSR set to: 0
 28675                           ;doprnt.c: 1317: if(val < hexpowers[c])
 28676                           
 28677                           ; BSR set to: 0
 28678                           
 28679                           ; BSR set to: 0
 28680  0127F6  51AF               	movf	i2printf@c& (0+255),w,b
 28681  0127F8  0D04               	mullw	4
 28682  0127FA  0E21               	movlw	low _hexpowers
 28683  0127FC  24F3               	addwf	prodl,w,c
 28684  0127FE  6EF6               	movwf	tblptrl,c
 28685  012800  0EE9               	movlw	high _hexpowers
 28686  012802  20F4               	addwfc	prodh,w,c
 28687  012804  6EF7               	movwf	tblptrh,c
 28688  012806                     	if	1	;There are 3 active tblptr bytes
 28689  012806  6AF8               	clrf	tblptru,c
 28690  012808  0E00               	movlw	low (__mediumconst shr (0+16))
 28691  01280A  22F8               	addwfc	tblptru,f,c
 28692  01280C                     	endif
 28693  01280C  0009               	tblrd		*+
 28694  01280E  50F5               	movf	tablat,w,c
 28695  012810  5DA1               	subwf	i2printf@val& (0+255),w,b
 28696  012812  0009               	tblrd		*+
 28697  012814  50F5               	movf	tablat,w,c
 28698  012816  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 28699  012818  0009               	tblrd		*+
 28700  01281A  50F5               	movf	tablat,w,c
 28701  01281C  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 28702  01281E  0009               	tblrd		*+
 28703  012820  50F5               	movf	tablat,w,c
 28704  012822  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 28705  012824  A0D8               	btfss	status,0,c
 28706  012826  D00D               	goto	i2l1507
 28707                           
 28708                           ; BSR set to: 0
 28709                           
 28710                           ; BSR set to: 0
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;doprnt.c: 1318: break;
 28714  012828  2BAF               	incf	i2printf@c& (0+255),f,b
 28715  01282A  D7E1               	goto	i2l14816
 28716  01282C                     i2l1501:
 28717                           
 28718                           ; BSR set to: 0
 28719                           
 28720                           ; BSR set to: 0
 28721  01282C  51A9               	movf	i2printf@flag& (0+255),w,b
 28722  01282E  0BC0               	andlw	192
 28723                           
 28724                           ; Switch size 1, requested type "space"
 28725                           ; Number of cases is 3, Range of values is 0 to 192
 28726                           ; switch strategies available:
 28727                           ; Name         Instructions Cycles
 28728                           ; simple_byte           10     6 (average)
 28729                           ;	Chosen strategy is simple_byte
 28730  012830  0A00               	xorlw	0	; case 0
 28731  012832  B4D8               	btfsc	status,2,c
 28732  012834  D7B9               	goto	i2l1502
 28733  012836  0A80               	xorlw	128	; case 128
 28734  012838  B4D8               	btfsc	status,2,c
 28735  01283A  D7D7               	goto	i2l1508
 28736  01283C  0A40               	xorlw	64	; case 192
 28737  01283E  B4D8               	btfsc	status,2,c
 28738  012840  D7B3               	goto	i2l1502
 28739  012842                     i2l1507:
 28740                           
 28741                           ; BSR set to: 0
 28742                           ;doprnt.c: 1339: if(c < prec)
 28743                           
 28744                           ; BSR set to: 0
 28745  012842  0E80               	movlw	128
 28746  012844  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28747  012846  0E7F               	movlw	127
 28748  012848  6F8A               	movwf	??i2_printf& (0+255),b
 28749  01284A  51AD               	movf	i2printf@prec& (0+255),w,b
 28750  01284C  5DAF               	subwf	i2printf@c& (0+255),w,b
 28751  01284E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28752  012850  0A80               	xorlw	128
 28753  012852  598A               	subwfb	??i2_printf& (0+255),w,b
 28754  012854  B0D8               	btfsc	status,0,c
 28755  012856  D003               	goto	i2l1512
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;doprnt.c: 1340: c = prec;
 28759  012858  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 28760  01285C  D010               	goto	i2l1514
 28761  01285E                     i2l1512:
 28762                           
 28763                           ; BSR set to: 0
 28764                           ;doprnt.c: 1341: else if(prec < c)
 28765                           
 28766                           ; BSR set to: 0
 28767  01285E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28768  012860  0A80               	xorlw	128
 28769  012862  6F8A               	movwf	??i2_printf& (0+255),b
 28770  012864  51AF               	movf	i2printf@c& (0+255),w,b
 28771  012866  5DAD               	subwf	i2printf@prec& (0+255),w,b
 28772  012868  0E80               	movlw	128
 28773  01286A  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28774  01286C  0E7F               	movlw	127
 28775  01286E  598A               	subwfb	??i2_printf& (0+255),w,b
 28776  012870  B0D8               	btfsc	status,0,c
 28777  012872  D005               	goto	i2l1514
 28778                           
 28779                           ; BSR set to: 0
 28780                           ;doprnt.c: 1342: prec = c;
 28781  012874  51AF               	movf	i2printf@c& (0+255),w,b
 28782  012876  6FAD               	movwf	i2printf@prec& (0+255),b
 28783  012878  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 28784  01287A  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 28785  01287C  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 28786  01287E                     i2l1514:
 28787                           
 28788                           ; BSR set to: 0
 28789                           ;doprnt.c: 1345: if(width && flag & 0x03)
 28790                           
 28791                           ; BSR set to: 0
 28792                           
 28793                           ; BSR set to: 0
 28794  01287E  51AB               	movf	i2printf@width& (0+255),w,b
 28795  012880  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28796  012882  B4D8               	btfsc	status,2,c
 28797  012884  D00D               	goto	i2l1515
 28798                           
 28799                           ; BSR set to: 0
 28800  012886  0E03               	movlw	3
 28801  012888  15A9               	andwf	i2printf@flag& (0+255),w,b
 28802  01288A  6F8A               	movwf	??i2_printf& (0+255),b
 28803  01288C  0E00               	movlw	0
 28804  01288E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28805  012890  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28806  012892  518A               	movf	??i2_printf& (0+255),w,b
 28807  012894  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28808  012896  B4D8               	btfsc	status,2,c
 28809  012898  D003               	goto	i2l1515
 28810                           
 28811                           ; BSR set to: 0
 28812                           ;doprnt.c: 1346: width--;
 28813  01289A  07AB               	decf	i2printf@width& (0+255),f,b
 28814  01289C  A0D8               	btfss	status,0,c
 28815  01289E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28816  0128A0                     i2l1515:
 28817                           
 28818                           ; BSR set to: 0
 28819                           ;doprnt.c: 1348: if(flag & 0x4000) {
 28820                           
 28821                           ; BSR set to: 0
 28822  0128A0  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 28823  0128A2  D013               	goto	i2l1518
 28824                           
 28825                           ; BSR set to: 0
 28826                           ;doprnt.c: 1349: if(width > prec)
 28827  0128A4  51AB               	movf	i2printf@width& (0+255),w,b
 28828  0128A6  5DAD               	subwf	i2printf@prec& (0+255),w,b
 28829  0128A8  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28830  0128AA  0A80               	xorlw	128
 28831  0128AC  6F8A               	movwf	??i2_printf& (0+255),b
 28832  0128AE  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28833  0128B0  0A80               	xorlw	128
 28834  0128B2  598A               	subwfb	??i2_printf& (0+255),w,b
 28835  0128B4  B0D8               	btfsc	status,0,c
 28836  0128B6  D005               	goto	i2l1517
 28837                           
 28838                           ; BSR set to: 0
 28839                           ;doprnt.c: 1350: width -= prec;
 28840  0128B8  51AD               	movf	i2printf@prec& (0+255),w,b
 28841  0128BA  5FAB               	subwf	i2printf@width& (0+255),f,b
 28842  0128BC  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28843  0128BE  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 28844  0128C0  D004               	goto	i2l1518
 28845  0128C2                     i2l1517:
 28846                           
 28847                           ; BSR set to: 0
 28848                           ;doprnt.c: 1351: else
 28849                           ;doprnt.c: 1352: width = 0;
 28850                           
 28851                           ; BSR set to: 0
 28852  0128C2  0E00               	movlw	0
 28853  0128C4  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 28854  0128C6  0E00               	movlw	0
 28855  0128C8  6FAB               	movwf	i2printf@width& (0+255),b
 28856  0128CA                     i2l1518:
 28857                           
 28858                           ; BSR set to: 0
 28859                           ;doprnt.c: 1353: }
 28860                           ;doprnt.c: 1381: if(width > c)
 28861                           
 28862                           ; BSR set to: 0
 28863                           
 28864                           ; BSR set to: 0
 28865  0128CA  0E80               	movlw	128
 28866  0128CC  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28867  0128CE  0E7F               	movlw	127
 28868  0128D0  6F8A               	movwf	??i2_printf& (0+255),b
 28869  0128D2  51AB               	movf	i2printf@width& (0+255),w,b
 28870  0128D4  5DAF               	subwf	i2printf@c& (0+255),w,b
 28871  0128D6  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28872  0128D8  0A80               	xorlw	128
 28873  0128DA  598A               	subwfb	??i2_printf& (0+255),w,b
 28874  0128DC  B0D8               	btfsc	status,0,c
 28875  0128DE  D007               	goto	i2l1519
 28876                           
 28877                           ; BSR set to: 0
 28878                           ;doprnt.c: 1382: width -= c;
 28879  0128E0  51AF               	movf	i2printf@c& (0+255),w,b
 28880  0128E2  5FAB               	subwf	i2printf@width& (0+255),f,b
 28881  0128E4  0E00               	movlw	0
 28882  0128E6  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28883  0128E8  0EFF               	movlw	255
 28884  0128EA  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 28885  0128EC  D004               	goto	i2l1520
 28886  0128EE                     i2l1519:
 28887                           
 28888                           ; BSR set to: 0
 28889                           ;doprnt.c: 1383: else
 28890                           ;doprnt.c: 1384: width = 0;
 28891                           
 28892                           ; BSR set to: 0
 28893  0128EE  0E00               	movlw	0
 28894  0128F0  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 28895  0128F2  0E00               	movlw	0
 28896  0128F4  6FAB               	movwf	i2printf@width& (0+255),b
 28897  0128F6                     i2l1520:
 28898                           
 28899                           ; BSR set to: 0
 28900                           ;doprnt.c: 1387: if(flag & 0x04) {
 28901                           
 28902                           ; BSR set to: 0
 28903  0128F6  A5A9               	btfss	i2printf@flag& (0+255),2,b
 28904  0128F8  D01A               	goto	i2l1521
 28905                           
 28906                           ; BSR set to: 0
 28907                           ;doprnt.c: 1392: if(flag & 0x03)
 28908  0128FA  0E03               	movlw	3
 28909  0128FC  15A9               	andwf	i2printf@flag& (0+255),w,b
 28910  0128FE  6F8A               	movwf	??i2_printf& (0+255),b
 28911  012900  0E00               	movlw	0
 28912  012902  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28913  012904  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28914  012906  518A               	movf	??i2_printf& (0+255),w,b
 28915  012908  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28916  01290A  B4D8               	btfsc	status,2,c
 28917  01290C  D003               	goto	i2l1522
 28918                           
 28919                           ; BSR set to: 0
 28920                           ;doprnt.c: 1393: (putch('-') );
 28921  01290E  0E2D               	movlw	45
 28922  012910  EC59  F0C6         	call	i2_putch
 28923  012914                     i2l1522:
 28924                           
 28925                           ;doprnt.c: 1415: if(width)
 28926  012914  0100               	movlb	0	; () banked
 28927  012916  51AB               	movf	i2printf@width& (0+255),w,b
 28928  012918  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28929  01291A  B4D8               	btfsc	status,2,c
 28930  01291C  D0B1               	goto	i2l1531
 28931                           
 28932                           ; BSR set to: 0
 28933                           ;doprnt.c: 1417: (putch('0') );
 28934                           
 28935                           ; BSR set to: 0
 28936                           
 28937                           ;doprnt.c: 1416: do
 28938  01291E  0E30               	movlw	48
 28939  012920  EC59  F0C6         	call	i2_putch
 28940                           
 28941                           ;doprnt.c: 1418: while(--width);
 28942  012924  0100               	movlb	0	; () banked
 28943  012926  07AB               	decf	i2printf@width& (0+255),f,b
 28944  012928  A0D8               	btfss	status,0,c
 28945  01292A  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28946  01292C  D7F4               	goto	L26
 28947  01292E                     i2l1521:
 28948                           
 28949                           ; BSR set to: 0
 28950                           ;doprnt.c: 1422: {
 28951                           ;doprnt.c: 1424: if(width
 28952                           ;doprnt.c: 1428: )
 28953                           
 28954                           ; BSR set to: 0
 28955  01292E  51AB               	movf	i2printf@width& (0+255),w,b
 28956  012930  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28957  012932  B4D8               	btfsc	status,2,c
 28958  012934  D00B               	goto	i2u1880_40
 28959  012936                     i2u1879_40:
 28960                           
 28961                           ; BSR set to: 0
 28962                           ;doprnt.c: 1430: (putch(' ') );
 28963                           
 28964                           ; BSR set to: 0
 28965                           
 28966                           ;doprnt.c: 1429: do
 28967  012936  0E20               	movlw	32
 28968  012938  EC59  F0C6         	call	i2_putch
 28969                           
 28970                           ;doprnt.c: 1431: while(--width);
 28971  01293C  0100               	movlb	0	; () banked
 28972  01293E  07AB               	decf	i2printf@width& (0+255),f,b
 28973  012940  A0D8               	btfss	status,0,c
 28974  012942  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28975  012944  51AB               	movf	i2printf@width& (0+255),w,b
 28976  012946  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28977  012948  A4D8               	btfss	status,2,c
 28978  01294A  D7F5               	goto	i2u1879_40
 28979  01294C                     i2u1880_40:
 28980                           
 28981                           ; BSR set to: 0
 28982                           ;doprnt.c: 1438: if(flag & 0x03)
 28983                           
 28984                           ; BSR set to: 0
 28985                           
 28986                           ; BSR set to: 0
 28987  01294C  0E03               	movlw	3
 28988  01294E  15A9               	andwf	i2printf@flag& (0+255),w,b
 28989  012950  6F8A               	movwf	??i2_printf& (0+255),b
 28990  012952  0E00               	movlw	0
 28991  012954  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28992  012956  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28993  012958  518A               	movf	??i2_printf& (0+255),w,b
 28994  01295A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28995  01295C  B4D8               	btfsc	status,2,c
 28996  01295E  D090               	goto	i2l1531
 28997                           
 28998                           ; BSR set to: 0
 28999                           ;doprnt.c: 1439: (putch('-') );
 29000  012960  0E2D               	movlw	45
 29001  012962  EC59  F0C6         	call	i2_putch
 29002                           
 29003                           ;doprnt.c: 1469: }
 29004                           ;doprnt.c: 1474: while(prec--) {
 29005  012966  D08C               	goto	i2l1531
 29006  012968                     
 29007                           ;doprnt.c: 1486: case 0xC0:
 29008                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 29009  012968  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 29010  01296C  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 29011  012970  0100               	movlb	0	; () banked
 29012  012972  90D8               	bcf	status,0,c
 29013  012974  378A               	rlcf	??i2_printf& (0+255),f,b
 29014  012976  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 29015  012978  90D8               	bcf	status,0,c
 29016  01297A  378A               	rlcf	??i2_printf& (0+255),f,b
 29017  01297C  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 29018  01297E  0EF9               	movlw	low _dpowers
 29019  012980  258A               	addwf	??i2_printf& (0+255),w,b
 29020  012982  6EF6               	movwf	tblptrl,c
 29021  012984  0EE8               	movlw	high _dpowers
 29022  012986  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 29023  012988  6EF7               	movwf	tblptrh,c
 29024  01298A                     	if	1	;There are 3 active tblptr bytes
 29025  01298A  6AF8               	clrf	tblptru,c
 29026  01298C  0E00               	movlw	low (__mediumconst shr (0+16))
 29027  01298E  22F8               	addwfc	tblptru,f,c
 29028  012990                     	endif
 29029  012990  0009               	tblrd		*+
 29030  012992  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 29031  012996  0009               	tblrd		*+
 29032  012998  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 29033  01299C  0009               	tblrd		*+
 29034  01299E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 29035  0129A2  000A               	tblrd		*-
 29036  0129A4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 29037  0129A8  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 29038  0129AC  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 29039  0129B0  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 29040  0129B4  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 29041  0129B8  EC75  F0BE         	call	i2___lldiv	;wreg free
 29042  0129BC  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 29043  0129C0  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 29044  0129C4  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 29045  0129C8  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 29046  0129CC  0E0A               	movlw	10
 29047  0129CE  6E12               	movwf	i2___llmod@divisor,c
 29048  0129D0  0E00               	movlw	0
 29049  0129D2  6E13               	movwf	i2___llmod@divisor+1,c
 29050  0129D4  0E00               	movlw	0
 29051  0129D6  6E14               	movwf	i2___llmod@divisor+2,c
 29052  0129D8  0E00               	movlw	0
 29053  0129DA  6E15               	movwf	i2___llmod@divisor+3,c
 29054  0129DC  EC76  F0C0         	call	i2___llmod	;wreg free
 29055  0129E0  500E               	movf	?i2___llmod,w,c
 29056  0129E2  0F30               	addlw	48
 29057  0129E4  0100               	movlb	0	; () banked
 29058  0129E6  6FAF               	movwf	i2printf@c& (0+255),b
 29059                           
 29060                           ;doprnt.c: 1491: break;
 29061  0129E8  D048               	goto	i2l1536
 29062  0129EA                     
 29063                           ; BSR set to: 0
 29064                           ;doprnt.c: 1499: {
 29065                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 29066                           
 29067                           ; BSR set to: 0
 29068  0129EA  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 29069  0129EE  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 29070  0129F2  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 29071  0129F6  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 29072  0129FA  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 29073  0129FE  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 29074  012A02  90D8               	bcf	status,0,c
 29075  012A04  378A               	rlcf	??i2_printf& (0+255),f,b
 29076  012A06  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 29077  012A08  90D8               	bcf	status,0,c
 29078  012A0A  378A               	rlcf	??i2_printf& (0+255),f,b
 29079  012A0C  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 29080  012A0E  0E21               	movlw	low _hexpowers
 29081  012A10  258A               	addwf	??i2_printf& (0+255),w,b
 29082  012A12  6EF6               	movwf	tblptrl,c
 29083  012A14  0EE9               	movlw	high _hexpowers
 29084  012A16  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 29085  012A18  6EF7               	movwf	tblptrh,c
 29086  012A1A                     	if	1	;There are 3 active tblptr bytes
 29087  012A1A  6AF8               	clrf	tblptru,c
 29088  012A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 29089  012A1E  22F8               	addwfc	tblptru,f,c
 29090  012A20                     	endif
 29091  012A20  0009               	tblrd		*+
 29092  012A22  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 29093  012A26  0009               	tblrd		*+
 29094  012A28  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 29095  012A2C  0009               	tblrd		*+
 29096  012A2E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 29097  012A32  000A               	tblrd		*-
 29098  012A34  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 29099  012A38  EC75  F0BE         	call	i2___lldiv	;wreg free
 29100  012A3C  5001               	movf	?i2___lldiv,w,c
 29101  012A3E  0B0F               	andlw	15
 29102  012A40  0100               	movlb	0	; () banked
 29103  012A42  6F94               	movwf	i2printf@idx& (0+255),b
 29104                           
 29105                           ; BSR set to: 0
 29106                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 29107  012A44  5194               	movf	i2printf@idx& (0+255),w,b
 29108  012A46  0D01               	mullw	1
 29109  012A48  0E9F               	movlw	low STR_147
 29110  012A4A  24F3               	addwf	prodl,w,c
 29111  012A4C  6EF6               	movwf	tblptrl,c
 29112  012A4E  0EFD               	movlw	high STR_147
 29113  012A50  20F4               	addwfc	prodh,w,c
 29114  012A52  6EF7               	movwf	tblptrh,c
 29115  012A54                     	if	1	;There are 3 active tblptr bytes
 29116  012A54  6AF8               	clrf	tblptru,c
 29117  012A56  0E00               	movlw	low (__mediumconst shr (0+16))
 29118  012A58  22F8               	addwfc	tblptru,f,c
 29119  012A5A                     	endif
 29120  012A5A  0008               	tblrd		*
 29121  012A5C  CFF5 F0AF          	movff	tablat,i2printf@c
 29122                           
 29123                           ; BSR set to: 0
 29124                           ;doprnt.c: 1523: }
 29125                           
 29126                           ;doprnt.c: 1508: }
 29127                           ;doprnt.c: 1510: break;
 29128  012A60  D00C               	goto	i2l1536
 29129  012A62                     i2l14890:
 29130  012A62  0100               	movlb	0	; () banked
 29131  012A64  51A9               	movf	i2printf@flag& (0+255),w,b
 29132  012A66  0BC0               	andlw	192
 29133                           
 29134                           ; Switch size 1, requested type "space"
 29135                           ; Number of cases is 3, Range of values is 0 to 192
 29136                           ; switch strategies available:
 29137                           ; Name         Instructions Cycles
 29138                           ; simple_byte           10     6 (average)
 29139                           ;	Chosen strategy is simple_byte
 29140  012A68  0A00               	xorlw	0	; case 0
 29141  012A6A  B4D8               	btfsc	status,2,c
 29142  012A6C  D77D               	goto	i2l1534
 29143  012A6E  0A80               	xorlw	128	; case 128
 29144  012A70  B4D8               	btfsc	status,2,c
 29145  012A72  D7BB               	goto	i2l1537
 29146  012A74  0A40               	xorlw	64	; case 192
 29147  012A76  B4D8               	btfsc	status,2,c
 29148  012A78  D777               	goto	i2l1534
 29149  012A7A                     i2l1536:
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;doprnt.c: 1524: (putch(c) );
 29153                           
 29154                           ; BSR set to: 0
 29155  012A7A  51AF               	movf	i2printf@c& (0+255),w,b
 29156  012A7C  EC59  F0C6         	call	i2_putch
 29157  012A80                     i2l1531:
 29158  012A80  0100               	movlb	0	; () banked
 29159  012A82  07AD               	decf	i2printf@prec& (0+255),f,b
 29160  012A84  A0D8               	btfss	status,0,c
 29161  012A86  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 29162  012A88  29AD               	incf	i2printf@prec& (0+255),w,b
 29163  012A8A  E1EB               	bnz	i2l14890
 29164  012A8C  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 29165  012A8E  A4D8               	btfss	status,2,c
 29166  012A90  D7E8               	goto	i2l1533
 29167  012A92                     i2u1882_40:
 29168                           
 29169                           ; BSR set to: 0
 29170                           
 29171                           ; BSR set to: 0
 29172  012A92  0100               	movlb	0	; () banked
 29173  012A94  5188               	movf	i2printf@f& (0+255),w,b
 29174  012A96  6F8A               	movwf	??i2_printf& (0+255),b
 29175  012A98  5189               	movf	(i2printf@f+1)& (0+255),w,b
 29176  012A9A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 29177  012A9C  4B88               	infsnz	i2printf@f& (0+255),f,b
 29178  012A9E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29179  012AA0  C08A  FFF6         	movff	??i2_printf,tblptrl
 29180  012AA4  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 29181  012AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 29182  012AAA  6EF8               	movwf	tblptru,c
 29183  012AAC  0E0D               	movlw	(high __ramtop+-1)
 29184  012AAE  64F7               	cpfsgt	tblptrh,c
 29185  012AB0  D003               	bra	i2u1883_47
 29186  012AB2  0008               	tblrd		*
 29187  012AB4  50F5               	movf	tablat,w,c
 29188  012AB6  D005               	bra	i2u1883_40
 29189  012AB8                     i2u1883_47:
 29190  012AB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 29191  012ABC  CFF7 FFEA          	movff	tblptrh,fsr0h
 29192  012AC0  50EF               	movf	indf0,w,c
 29193  012AC2                     i2u1883_40:
 29194  012AC2  0100               	movlb	0	; () banked
 29195  012AC4  6FAF               	movwf	i2printf@c& (0+255),b
 29196  012AC6  51AF               	movf	i2printf@c& (0+255),w,b
 29197  012AC8  B4D8               	btfsc	status,2,c
 29198  012ACA  0012               	return	
 29199  012ACC  EF8D  F08E         	goto	i2l1405
 29200  012AD0                     __end_ofi2_printf:
 29201                           	opt stack 0
 29202                           tosu	equ	0xFFF
 29203                           tosh	equ	0xFFE
 29204                           tosl	equ	0xFFD
 29205                           pclatu	equ	0xFFB
 29206                           pclath	equ	0xFFA
 29207                           tblptru	equ	0xFF8
 29208                           tblptrh	equ	0xFF7
 29209                           tblptrl	equ	0xFF6
 29210                           tablat	equ	0xFF5
 29211                           prodh	equ	0xFF4
 29212                           prodl	equ	0xFF3
 29213                           intcon	equ	0xFF2
 29214                           indf0	equ	0xFEF
 29215                           postinc0	equ	0xFEE
 29216                           fsr0h	equ	0xFEA
 29217                           fsr0l	equ	0xFE9
 29218                           wreg	equ	0xFE8
 29219                           indf1	equ	0xFE7
 29220                           postdec1	equ	0xFE5
 29221                           plusw1	equ	0xFE3
 29222                           fsr1h	equ	0xFE2
 29223                           fsr1l	equ	0xFE1
 29224                           bsr	equ	0xFE0
 29225                           indf2	equ	0xFDF
 29226                           postinc2	equ	0xFDE
 29227                           postdec2	equ	0xFDD
 29228                           plusw2	equ	0xFDB
 29229                           fsr2h	equ	0xFDA
 29230                           fsr2l	equ	0xFD9
 29231                           status	equ	0xFD8
 29232                           
 29233 ;; *************** function i2_scale *****************
 29234 ;; Defined at:
 29235 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 29236 ;; Parameters:    Size  Location     Type
 29237 ;;  scl             1    wreg     char 
 29238 ;; Auto vars:     Size  Location     Type
 29239 ;;  scl             1   80[COMRAM] char 
 29240 ;; Return value:  Size  Location     Type
 29241 ;;                  4   72[COMRAM] char 
 29242 ;; Registers used:
 29243 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29244 ;; Tracked objects:
 29245 ;;		On entry : 0/0
 29246 ;;		On exit  : 0/0
 29247 ;;		Unchanged: 0/0
 29248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29250 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29252 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29253 ;;Total ram usage:        9 bytes
 29254 ;; Hardware stack levels used:    1
 29255 ;; Hardware stack levels required when called:    1
 29256 ;; This function calls:
 29257 ;;		i2___awdiv
 29258 ;;		i2___awmod
 29259 ;;		i2___flmul
 29260 ;; This function is called by:
 29261 ;;		i2_printf
 29262 ;; This function uses a non-reentrant model
 29263 ;;
 29264                           
 29265                           	psect	text90
 29266  013954                     __ptext90:
 29267                           	opt stack 0
 29268  013954                     i2_scale:
 29269                           	opt stack 15
 29270                           
 29271                           ; BSR set to: 0
 29272                           ;incstack = 0
 29273                           ;i2scale@scl stored from wreg
 29274  013954  6E51               	movwf	i2scale@scl,c
 29275                           
 29276                           ;doprnt.c: 428: if(scl < 0) {
 29277  013956  AE51               	btfss	i2scale@scl,7,c
 29278  013958  D11F               	goto	i2l1394
 29279                           
 29280                           ;doprnt.c: 429: scl = -scl;
 29281  01395A  6C51               	negf	i2scale@scl,c
 29282                           
 29283                           ;doprnt.c: 430: if(scl>=110)
 29284  01395C  5051               	movf	i2scale@scl,w,c
 29285  01395E  0A80               	xorlw	128
 29286  013960  0F12               	addlw	-238
 29287  013962  A0D8               	btfss	status,0,c
 29288  013964  D0A1               	goto	i2l1395
 29289                           
 29290                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 29291  013966  0E00               	movlw	0
 29292  013968  6E0A               	movwf	i2___awdiv@divisor+1,c
 29293  01396A  0E0A               	movlw	10
 29294  01396C  6E09               	movwf	i2___awdiv@divisor,c
 29295  01396E  0E00               	movlw	0
 29296  013970  6E04               	movwf	i2___awmod@divisor+1,c
 29297  013972  0E64               	movlw	100
 29298  013974  6E03               	movwf	i2___awmod@divisor,c
 29299  013976  5051               	movf	i2scale@scl,w,c
 29300  013978  6E01               	movwf	i2___awmod@dividend,c
 29301  01397A  6A02               	clrf	i2___awmod@dividend+1,c
 29302  01397C  BE01               	btfsc	i2___awmod@dividend,7,c
 29303  01397E  0602               	decf	i2___awmod@dividend+1,f,c
 29304  013980  EC6A  F0BF         	call	i2___awmod	;wreg free
 29305  013984  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 29306  013988  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 29307  01398C  EC33  F0BE         	call	i2___awdiv	;wreg free
 29308  013990  90D8               	bcf	status,0,c
 29309  013992  3607               	rlcf	?i2___awdiv,f,c
 29310  013994  3608               	rlcf	?i2___awdiv+1,f,c
 29311  013996  90D8               	bcf	status,0,c
 29312  013998  3607               	rlcf	?i2___awdiv,f,c
 29313  01399A  3608               	rlcf	?i2___awdiv+1,f,c
 29314  01399C  0E24               	movlw	36
 29315  01399E  2607               	addwf	?i2___awdiv,f,c
 29316  0139A0  0E00               	movlw	0
 29317  0139A2  2208               	addwfc	?i2___awdiv+1,f,c
 29318  0139A4  0EC5               	movlw	low __npowers_
 29319  0139A6  2407               	addwf	?i2___awdiv,w,c
 29320  0139A8  6EF6               	movwf	tblptrl,c
 29321  0139AA  0EE8               	movlw	high __npowers_
 29322  0139AC  2008               	addwfc	?i2___awdiv+1,w,c
 29323  0139AE  6EF7               	movwf	tblptrh,c
 29324  0139B0                     	if	1	;There are 3 active tblptr bytes
 29325  0139B0  6AF8               	clrf	tblptru,c
 29326  0139B2  0E00               	movlw	low (__mediumconst shr (0+16))
 29327  0139B4  22F8               	addwfc	tblptru,f,c
 29328  0139B6                     	endif
 29329  0139B6  0009               	tblrd		*+
 29330  0139B8  CFF5 F034          	movff	tablat,i2___flmul@a
 29331  0139BC  0009               	tblrd		*+
 29332  0139BE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29333  0139C2  0009               	tblrd		*+
 29334  0139C4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29335  0139C8  000A               	tblrd		*-
 29336  0139CA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29337  0139CE  0E00               	movlw	0
 29338  0139D0  6E0A               	movwf	i2___awdiv@divisor+1,c
 29339  0139D2  0E64               	movlw	100
 29340  0139D4  6E09               	movwf	i2___awdiv@divisor,c
 29341  0139D6  5051               	movf	i2scale@scl,w,c
 29342  0139D8  6E07               	movwf	i2___awdiv@dividend,c
 29343  0139DA  6A08               	clrf	i2___awdiv@dividend+1,c
 29344  0139DC  BE07               	btfsc	i2___awdiv@dividend,7,c
 29345  0139DE  0608               	decf	i2___awdiv@dividend+1,f,c
 29346  0139E0  EC33  F0BE         	call	i2___awdiv	;wreg free
 29347  0139E4  90D8               	bcf	status,0,c
 29348  0139E6  3607               	rlcf	?i2___awdiv,f,c
 29349  0139E8  3608               	rlcf	?i2___awdiv+1,f,c
 29350  0139EA  90D8               	bcf	status,0,c
 29351  0139EC  3607               	rlcf	?i2___awdiv,f,c
 29352  0139EE  3608               	rlcf	?i2___awdiv+1,f,c
 29353  0139F0  0E48               	movlw	72
 29354  0139F2  2607               	addwf	?i2___awdiv,f,c
 29355  0139F4  0E00               	movlw	0
 29356  0139F6  2208               	addwfc	?i2___awdiv+1,f,c
 29357  0139F8  0EC5               	movlw	low __npowers_
 29358  0139FA  2407               	addwf	?i2___awdiv,w,c
 29359  0139FC  6EF6               	movwf	tblptrl,c
 29360  0139FE  0EE8               	movlw	high __npowers_
 29361  013A00  2008               	addwfc	?i2___awdiv+1,w,c
 29362  013A02  6EF7               	movwf	tblptrh,c
 29363  013A04                     	if	1	;There are 3 active tblptr bytes
 29364  013A04  6AF8               	clrf	tblptru,c
 29365  013A06  0E00               	movlw	low (__mediumconst shr (0+16))
 29366  013A08  22F8               	addwfc	tblptru,f,c
 29367  013A0A                     	endif
 29368  013A0A  0009               	tblrd		*+
 29369  013A0C  CFF5 F030          	movff	tablat,i2___flmul@b
 29370  013A10  0009               	tblrd		*+
 29371  013A12  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29372  013A16  0009               	tblrd		*+
 29373  013A18  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29374  013A1C  000A               	tblrd		*-
 29375  013A1E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29376  013A22  EC47  F0A2         	call	i2___flmul	;wreg free
 29377  013A26  C030  F04D         	movff	?i2___flmul,i2_scale$4145
 29378  013A2A  C031  F04E         	movff	?i2___flmul+1,i2_scale$4145+1
 29379  013A2E  C032  F04F         	movff	?i2___flmul+2,i2_scale$4145+2
 29380  013A32  C033  F050         	movff	?i2___flmul+3,i2_scale$4145+3
 29381                           
 29382                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 29383  013A36  C04D  F030         	movff	i2_scale$4145,i2___flmul@b
 29384  013A3A  C04E  F031         	movff	i2_scale$4145+1,i2___flmul@b+1
 29385  013A3E  C04F  F032         	movff	i2_scale$4145+2,i2___flmul@b+2
 29386  013A42  C050  F033         	movff	i2_scale$4145+3,i2___flmul@b+3
 29387  013A46  0E00               	movlw	0
 29388  013A48  6E04               	movwf	i2___awmod@divisor+1,c
 29389  013A4A  0E0A               	movlw	10
 29390  013A4C  6E03               	movwf	i2___awmod@divisor,c
 29391  013A4E  5051               	movf	i2scale@scl,w,c
 29392  013A50  6E01               	movwf	i2___awmod@dividend,c
 29393  013A52  6A02               	clrf	i2___awmod@dividend+1,c
 29394  013A54  BE01               	btfsc	i2___awmod@dividend,7,c
 29395  013A56  0602               	decf	i2___awmod@dividend+1,f,c
 29396  013A58  EC6A  F0BF         	call	i2___awmod	;wreg free
 29397  013A5C  90D8               	bcf	status,0,c
 29398  013A5E  3601               	rlcf	?i2___awmod,f,c
 29399  013A60  3602               	rlcf	?i2___awmod+1,f,c
 29400  013A62  90D8               	bcf	status,0,c
 29401  013A64  3601               	rlcf	?i2___awmod,f,c
 29402  013A66  3602               	rlcf	?i2___awmod+1,f,c
 29403  013A68  0EC5               	movlw	low __npowers_
 29404  013A6A  2401               	addwf	?i2___awmod,w,c
 29405  013A6C  6EF6               	movwf	tblptrl,c
 29406  013A6E  0EE8               	movlw	high __npowers_
 29407  013A70  2002               	addwfc	?i2___awmod+1,w,c
 29408  013A72  6EF7               	movwf	tblptrh,c
 29409  013A74                     	if	1	;There are 3 active tblptr bytes
 29410  013A74  6AF8               	clrf	tblptru,c
 29411  013A76  0E00               	movlw	low (__mediumconst shr (0+16))
 29412  013A78  22F8               	addwfc	tblptru,f,c
 29413  013A7A                     	endif
 29414  013A7A  0009               	tblrd		*+
 29415  013A7C  CFF5 F034          	movff	tablat,i2___flmul@a
 29416  013A80  0009               	tblrd		*+
 29417  013A82  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29418  013A86  0009               	tblrd		*+
 29419  013A88  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29420  013A8C  000A               	tblrd		*-
 29421  013A8E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29422  013A92  EC47  F0A2         	call	i2___flmul	;wreg free
 29423  013A96  C030  F049         	movff	?i2___flmul,?i2_scale
 29424  013A9A  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29425  013A9E  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29426  013AA2  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29427  013AA6  0012               	return	
 29428  013AA8                     i2l1395:
 29429                           
 29430                           ;doprnt.c: 432: else if(scl > 10)
 29431  013AA8  5051               	movf	i2scale@scl,w,c
 29432  013AAA  0A80               	xorlw	128
 29433  013AAC  0F75               	addlw	-139
 29434  013AAE  A0D8               	btfss	status,0,c
 29435  013AB0  D05B               	goto	i2l1398
 29436                           
 29437                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 29438  013AB2  0E00               	movlw	0
 29439  013AB4  6E0A               	movwf	i2___awdiv@divisor+1,c
 29440  013AB6  0E0A               	movlw	10
 29441  013AB8  6E09               	movwf	i2___awdiv@divisor,c
 29442  013ABA  5051               	movf	i2scale@scl,w,c
 29443  013ABC  6E07               	movwf	i2___awdiv@dividend,c
 29444  013ABE  6A08               	clrf	i2___awdiv@dividend+1,c
 29445  013AC0  BE07               	btfsc	i2___awdiv@dividend,7,c
 29446  013AC2  0608               	decf	i2___awdiv@dividend+1,f,c
 29447  013AC4  EC33  F0BE         	call	i2___awdiv	;wreg free
 29448  013AC8  90D8               	bcf	status,0,c
 29449  013ACA  3607               	rlcf	?i2___awdiv,f,c
 29450  013ACC  3608               	rlcf	?i2___awdiv+1,f,c
 29451  013ACE  90D8               	bcf	status,0,c
 29452  013AD0  3607               	rlcf	?i2___awdiv,f,c
 29453  013AD2  3608               	rlcf	?i2___awdiv+1,f,c
 29454  013AD4  0E24               	movlw	36
 29455  013AD6  2607               	addwf	?i2___awdiv,f,c
 29456  013AD8  0E00               	movlw	0
 29457  013ADA  2208               	addwfc	?i2___awdiv+1,f,c
 29458  013ADC  0EC5               	movlw	low __npowers_
 29459  013ADE  2407               	addwf	?i2___awdiv,w,c
 29460  013AE0  6EF6               	movwf	tblptrl,c
 29461  013AE2  0EE8               	movlw	high __npowers_
 29462  013AE4  2008               	addwfc	?i2___awdiv+1,w,c
 29463  013AE6  6EF7               	movwf	tblptrh,c
 29464  013AE8                     	if	1	;There are 3 active tblptr bytes
 29465  013AE8  6AF8               	clrf	tblptru,c
 29466  013AEA  0E00               	movlw	low (__mediumconst shr (0+16))
 29467  013AEC  22F8               	addwfc	tblptru,f,c
 29468  013AEE                     	endif
 29469  013AEE  0009               	tblrd		*+
 29470  013AF0  CFF5 F030          	movff	tablat,i2___flmul@b
 29471  013AF4  0009               	tblrd		*+
 29472  013AF6  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29473  013AFA  0009               	tblrd		*+
 29474  013AFC  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29475  013B00  000A               	tblrd		*-
 29476  013B02  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29477  013B06  0E00               	movlw	0
 29478  013B08  6E04               	movwf	i2___awmod@divisor+1,c
 29479  013B0A  0E0A               	movlw	10
 29480  013B0C  6E03               	movwf	i2___awmod@divisor,c
 29481  013B0E  5051               	movf	i2scale@scl,w,c
 29482  013B10  6E01               	movwf	i2___awmod@dividend,c
 29483  013B12  6A02               	clrf	i2___awmod@dividend+1,c
 29484  013B14  BE01               	btfsc	i2___awmod@dividend,7,c
 29485  013B16  0602               	decf	i2___awmod@dividend+1,f,c
 29486  013B18  EC6A  F0BF         	call	i2___awmod	;wreg free
 29487  013B1C  90D8               	bcf	status,0,c
 29488  013B1E  3601               	rlcf	?i2___awmod,f,c
 29489  013B20  3602               	rlcf	?i2___awmod+1,f,c
 29490  013B22  90D8               	bcf	status,0,c
 29491  013B24  3601               	rlcf	?i2___awmod,f,c
 29492  013B26  3602               	rlcf	?i2___awmod+1,f,c
 29493  013B28  0EC5               	movlw	low __npowers_
 29494  013B2A  2401               	addwf	?i2___awmod,w,c
 29495  013B2C  6EF6               	movwf	tblptrl,c
 29496  013B2E  0EE8               	movlw	high __npowers_
 29497  013B30  2002               	addwfc	?i2___awmod+1,w,c
 29498  013B32  6EF7               	movwf	tblptrh,c
 29499  013B34                     	if	1	;There are 3 active tblptr bytes
 29500  013B34  6AF8               	clrf	tblptru,c
 29501  013B36  0E00               	movlw	low (__mediumconst shr (0+16))
 29502  013B38  22F8               	addwfc	tblptru,f,c
 29503  013B3A                     	endif
 29504  013B3A  0009               	tblrd		*+
 29505  013B3C  CFF5 F034          	movff	tablat,i2___flmul@a
 29506  013B40  0009               	tblrd		*+
 29507  013B42  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29508  013B46  0009               	tblrd		*+
 29509  013B48  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29510  013B4C  000A               	tblrd		*-
 29511  013B4E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29512  013B52  EC47  F0A2         	call	i2___flmul	;wreg free
 29513  013B56  C030  F049         	movff	?i2___flmul,?i2_scale
 29514  013B5A  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29515  013B5E  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29516  013B62  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29517  013B66  0012               	return	
 29518  013B68                     i2l1398:
 29519                           
 29520                           ;doprnt.c: 434: return _npowers_[scl];
 29521  013B68  5051               	movf	i2scale@scl,w,c
 29522  013B6A  0D04               	mullw	4
 29523  013B6C  0EC5               	movlw	low __npowers_
 29524  013B6E  24F3               	addwf	prodl,w,c
 29525  013B70  6EF6               	movwf	tblptrl,c
 29526  013B72  0EE8               	movlw	high __npowers_
 29527  013B74  20F4               	addwfc	prodh,w,c
 29528  013B76  6EF7               	movwf	tblptrh,c
 29529  013B78                     	if	1	;There are 3 active tblptr bytes
 29530  013B78  6AF8               	clrf	tblptru,c
 29531  013B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 29532  013B7C  22F8               	addwfc	tblptru,f,c
 29533  013B7E                     	endif
 29534  013B7E  0009               	tblrd		*+
 29535  013B80  CFF5 F049          	movff	tablat,?i2_scale
 29536  013B84  0009               	tblrd		*+
 29537  013B86  CFF5 F04A          	movff	tablat,?i2_scale+1
 29538  013B8A  0009               	tblrd		*+
 29539  013B8C  CFF5 F04B          	movff	tablat,?i2_scale+2
 29540  013B90  000A               	tblrd		*-
 29541  013B92  CFF5 F04C          	movff	tablat,?i2_scale+3
 29542  013B96  0012               	return	
 29543  013B98                     i2l1394:
 29544                           
 29545                           ;doprnt.c: 435: }
 29546                           ;doprnt.c: 436: if(scl>=110)
 29547  013B98  5051               	movf	i2scale@scl,w,c
 29548  013B9A  0A80               	xorlw	128
 29549  013B9C  0F12               	addlw	-238
 29550  013B9E  A0D8               	btfss	status,0,c
 29551  013BA0  D0A1               	goto	i2l1399
 29552                           
 29553                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 29554  013BA2  0E00               	movlw	0
 29555  013BA4  6E0A               	movwf	i2___awdiv@divisor+1,c
 29556  013BA6  0E0A               	movlw	10
 29557  013BA8  6E09               	movwf	i2___awdiv@divisor,c
 29558  013BAA  0E00               	movlw	0
 29559  013BAC  6E04               	movwf	i2___awmod@divisor+1,c
 29560  013BAE  0E64               	movlw	100
 29561  013BB0  6E03               	movwf	i2___awmod@divisor,c
 29562  013BB2  5051               	movf	i2scale@scl,w,c
 29563  013BB4  6E01               	movwf	i2___awmod@dividend,c
 29564  013BB6  6A02               	clrf	i2___awmod@dividend+1,c
 29565  013BB8  BE01               	btfsc	i2___awmod@dividend,7,c
 29566  013BBA  0602               	decf	i2___awmod@dividend+1,f,c
 29567  013BBC  EC6A  F0BF         	call	i2___awmod	;wreg free
 29568  013BC0  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 29569  013BC4  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 29570  013BC8  EC33  F0BE         	call	i2___awdiv	;wreg free
 29571  013BCC  90D8               	bcf	status,0,c
 29572  013BCE  3607               	rlcf	?i2___awdiv,f,c
 29573  013BD0  3608               	rlcf	?i2___awdiv+1,f,c
 29574  013BD2  90D8               	bcf	status,0,c
 29575  013BD4  3607               	rlcf	?i2___awdiv,f,c
 29576  013BD6  3608               	rlcf	?i2___awdiv+1,f,c
 29577  013BD8  0E24               	movlw	36
 29578  013BDA  2607               	addwf	?i2___awdiv,f,c
 29579  013BDC  0E00               	movlw	0
 29580  013BDE  2208               	addwfc	?i2___awdiv+1,f,c
 29581  013BE0  0E91               	movlw	low __powers_
 29582  013BE2  2407               	addwf	?i2___awdiv,w,c
 29583  013BE4  6EF6               	movwf	tblptrl,c
 29584  013BE6  0EE8               	movlw	high __powers_
 29585  013BE8  2008               	addwfc	?i2___awdiv+1,w,c
 29586  013BEA  6EF7               	movwf	tblptrh,c
 29587  013BEC                     	if	1	;There are 3 active tblptr bytes
 29588  013BEC  6AF8               	clrf	tblptru,c
 29589  013BEE  0E00               	movlw	low (__mediumconst shr (0+16))
 29590  013BF0  22F8               	addwfc	tblptru,f,c
 29591  013BF2                     	endif
 29592  013BF2  0009               	tblrd		*+
 29593  013BF4  CFF5 F034          	movff	tablat,i2___flmul@a
 29594  013BF8  0009               	tblrd		*+
 29595  013BFA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29596  013BFE  0009               	tblrd		*+
 29597  013C00  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29598  013C04  000A               	tblrd		*-
 29599  013C06  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29600  013C0A  0E00               	movlw	0
 29601  013C0C  6E0A               	movwf	i2___awdiv@divisor+1,c
 29602  013C0E  0E64               	movlw	100
 29603  013C10  6E09               	movwf	i2___awdiv@divisor,c
 29604  013C12  5051               	movf	i2scale@scl,w,c
 29605  013C14  6E07               	movwf	i2___awdiv@dividend,c
 29606  013C16  6A08               	clrf	i2___awdiv@dividend+1,c
 29607  013C18  BE07               	btfsc	i2___awdiv@dividend,7,c
 29608  013C1A  0608               	decf	i2___awdiv@dividend+1,f,c
 29609  013C1C  EC33  F0BE         	call	i2___awdiv	;wreg free
 29610  013C20  90D8               	bcf	status,0,c
 29611  013C22  3607               	rlcf	?i2___awdiv,f,c
 29612  013C24  3608               	rlcf	?i2___awdiv+1,f,c
 29613  013C26  90D8               	bcf	status,0,c
 29614  013C28  3607               	rlcf	?i2___awdiv,f,c
 29615  013C2A  3608               	rlcf	?i2___awdiv+1,f,c
 29616  013C2C  0E48               	movlw	72
 29617  013C2E  2607               	addwf	?i2___awdiv,f,c
 29618  013C30  0E00               	movlw	0
 29619  013C32  2208               	addwfc	?i2___awdiv+1,f,c
 29620  013C34  0E91               	movlw	low __powers_
 29621  013C36  2407               	addwf	?i2___awdiv,w,c
 29622  013C38  6EF6               	movwf	tblptrl,c
 29623  013C3A  0EE8               	movlw	high __powers_
 29624  013C3C  2008               	addwfc	?i2___awdiv+1,w,c
 29625  013C3E  6EF7               	movwf	tblptrh,c
 29626  013C40                     	if	1	;There are 3 active tblptr bytes
 29627  013C40  6AF8               	clrf	tblptru,c
 29628  013C42  0E00               	movlw	low (__mediumconst shr (0+16))
 29629  013C44  22F8               	addwfc	tblptru,f,c
 29630  013C46                     	endif
 29631  013C46  0009               	tblrd		*+
 29632  013C48  CFF5 F030          	movff	tablat,i2___flmul@b
 29633  013C4C  0009               	tblrd		*+
 29634  013C4E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29635  013C52  0009               	tblrd		*+
 29636  013C54  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29637  013C58  000A               	tblrd		*-
 29638  013C5A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29639  013C5E  EC47  F0A2         	call	i2___flmul	;wreg free
 29640  013C62  C030  F04D         	movff	?i2___flmul,i2_scale$4145
 29641  013C66  C031  F04E         	movff	?i2___flmul+1,i2_scale$4145+1
 29642  013C6A  C032  F04F         	movff	?i2___flmul+2,i2_scale$4145+2
 29643  013C6E  C033  F050         	movff	?i2___flmul+3,i2_scale$4145+3
 29644                           
 29645                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 29646  013C72  C04D  F030         	movff	i2_scale$4145,i2___flmul@b
 29647  013C76  C04E  F031         	movff	i2_scale$4145+1,i2___flmul@b+1
 29648  013C7A  C04F  F032         	movff	i2_scale$4145+2,i2___flmul@b+2
 29649  013C7E  C050  F033         	movff	i2_scale$4145+3,i2___flmul@b+3
 29650  013C82  0E00               	movlw	0
 29651  013C84  6E04               	movwf	i2___awmod@divisor+1,c
 29652  013C86  0E0A               	movlw	10
 29653  013C88  6E03               	movwf	i2___awmod@divisor,c
 29654  013C8A  5051               	movf	i2scale@scl,w,c
 29655  013C8C  6E01               	movwf	i2___awmod@dividend,c
 29656  013C8E  6A02               	clrf	i2___awmod@dividend+1,c
 29657  013C90  BE01               	btfsc	i2___awmod@dividend,7,c
 29658  013C92  0602               	decf	i2___awmod@dividend+1,f,c
 29659  013C94  EC6A  F0BF         	call	i2___awmod	;wreg free
 29660  013C98  90D8               	bcf	status,0,c
 29661  013C9A  3601               	rlcf	?i2___awmod,f,c
 29662  013C9C  3602               	rlcf	?i2___awmod+1,f,c
 29663  013C9E  90D8               	bcf	status,0,c
 29664  013CA0  3601               	rlcf	?i2___awmod,f,c
 29665  013CA2  3602               	rlcf	?i2___awmod+1,f,c
 29666  013CA4  0E91               	movlw	low __powers_
 29667  013CA6  2401               	addwf	?i2___awmod,w,c
 29668  013CA8  6EF6               	movwf	tblptrl,c
 29669  013CAA  0EE8               	movlw	high __powers_
 29670  013CAC  2002               	addwfc	?i2___awmod+1,w,c
 29671  013CAE  6EF7               	movwf	tblptrh,c
 29672  013CB0                     	if	1	;There are 3 active tblptr bytes
 29673  013CB0  6AF8               	clrf	tblptru,c
 29674  013CB2  0E00               	movlw	low (__mediumconst shr (0+16))
 29675  013CB4  22F8               	addwfc	tblptru,f,c
 29676  013CB6                     	endif
 29677  013CB6  0009               	tblrd		*+
 29678  013CB8  CFF5 F034          	movff	tablat,i2___flmul@a
 29679  013CBC  0009               	tblrd		*+
 29680  013CBE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29681  013CC2  0009               	tblrd		*+
 29682  013CC4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29683  013CC8  000A               	tblrd		*-
 29684  013CCA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29685  013CCE  EC47  F0A2         	call	i2___flmul	;wreg free
 29686  013CD2  C030  F049         	movff	?i2___flmul,?i2_scale
 29687  013CD6  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29688  013CDA  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29689  013CDE  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29690  013CE2  0012               	return	
 29691  013CE4                     i2l1399:
 29692                           
 29693                           ;doprnt.c: 438: else if(scl > 10)
 29694  013CE4  5051               	movf	i2scale@scl,w,c
 29695  013CE6  0A80               	xorlw	128
 29696  013CE8  0F75               	addlw	-139
 29697  013CEA  A0D8               	btfss	status,0,c
 29698  013CEC  D05B               	goto	i2l1401
 29699                           
 29700                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 29701  013CEE  0E00               	movlw	0
 29702  013CF0  6E0A               	movwf	i2___awdiv@divisor+1,c
 29703  013CF2  0E0A               	movlw	10
 29704  013CF4  6E09               	movwf	i2___awdiv@divisor,c
 29705  013CF6  5051               	movf	i2scale@scl,w,c
 29706  013CF8  6E07               	movwf	i2___awdiv@dividend,c
 29707  013CFA  6A08               	clrf	i2___awdiv@dividend+1,c
 29708  013CFC  BE07               	btfsc	i2___awdiv@dividend,7,c
 29709  013CFE  0608               	decf	i2___awdiv@dividend+1,f,c
 29710  013D00  EC33  F0BE         	call	i2___awdiv	;wreg free
 29711  013D04  90D8               	bcf	status,0,c
 29712  013D06  3607               	rlcf	?i2___awdiv,f,c
 29713  013D08  3608               	rlcf	?i2___awdiv+1,f,c
 29714  013D0A  90D8               	bcf	status,0,c
 29715  013D0C  3607               	rlcf	?i2___awdiv,f,c
 29716  013D0E  3608               	rlcf	?i2___awdiv+1,f,c
 29717  013D10  0E24               	movlw	36
 29718  013D12  2607               	addwf	?i2___awdiv,f,c
 29719  013D14  0E00               	movlw	0
 29720  013D16  2208               	addwfc	?i2___awdiv+1,f,c
 29721  013D18  0E91               	movlw	low __powers_
 29722  013D1A  2407               	addwf	?i2___awdiv,w,c
 29723  013D1C  6EF6               	movwf	tblptrl,c
 29724  013D1E  0EE8               	movlw	high __powers_
 29725  013D20  2008               	addwfc	?i2___awdiv+1,w,c
 29726  013D22  6EF7               	movwf	tblptrh,c
 29727  013D24                     	if	1	;There are 3 active tblptr bytes
 29728  013D24  6AF8               	clrf	tblptru,c
 29729  013D26  0E00               	movlw	low (__mediumconst shr (0+16))
 29730  013D28  22F8               	addwfc	tblptru,f,c
 29731  013D2A                     	endif
 29732  013D2A  0009               	tblrd		*+
 29733  013D2C  CFF5 F030          	movff	tablat,i2___flmul@b
 29734  013D30  0009               	tblrd		*+
 29735  013D32  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29736  013D36  0009               	tblrd		*+
 29737  013D38  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29738  013D3C  000A               	tblrd		*-
 29739  013D3E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29740  013D42  0E00               	movlw	0
 29741  013D44  6E04               	movwf	i2___awmod@divisor+1,c
 29742  013D46  0E0A               	movlw	10
 29743  013D48  6E03               	movwf	i2___awmod@divisor,c
 29744  013D4A  5051               	movf	i2scale@scl,w,c
 29745  013D4C  6E01               	movwf	i2___awmod@dividend,c
 29746  013D4E  6A02               	clrf	i2___awmod@dividend+1,c
 29747  013D50  BE01               	btfsc	i2___awmod@dividend,7,c
 29748  013D52  0602               	decf	i2___awmod@dividend+1,f,c
 29749  013D54  EC6A  F0BF         	call	i2___awmod	;wreg free
 29750  013D58  90D8               	bcf	status,0,c
 29751  013D5A  3601               	rlcf	?i2___awmod,f,c
 29752  013D5C  3602               	rlcf	?i2___awmod+1,f,c
 29753  013D5E  90D8               	bcf	status,0,c
 29754  013D60  3601               	rlcf	?i2___awmod,f,c
 29755  013D62  3602               	rlcf	?i2___awmod+1,f,c
 29756  013D64  0E91               	movlw	low __powers_
 29757  013D66  2401               	addwf	?i2___awmod,w,c
 29758  013D68  6EF6               	movwf	tblptrl,c
 29759  013D6A  0EE8               	movlw	high __powers_
 29760  013D6C  2002               	addwfc	?i2___awmod+1,w,c
 29761  013D6E  6EF7               	movwf	tblptrh,c
 29762  013D70                     	if	1	;There are 3 active tblptr bytes
 29763  013D70  6AF8               	clrf	tblptru,c
 29764  013D72  0E00               	movlw	low (__mediumconst shr (0+16))
 29765  013D74  22F8               	addwfc	tblptru,f,c
 29766  013D76                     	endif
 29767  013D76  0009               	tblrd		*+
 29768  013D78  CFF5 F034          	movff	tablat,i2___flmul@a
 29769  013D7C  0009               	tblrd		*+
 29770  013D7E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29771  013D82  0009               	tblrd		*+
 29772  013D84  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29773  013D88  000A               	tblrd		*-
 29774  013D8A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29775  013D8E  EC47  F0A2         	call	i2___flmul	;wreg free
 29776  013D92  C030  F049         	movff	?i2___flmul,?i2_scale
 29777  013D96  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29778  013D9A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29779  013D9E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29780  013DA2  0012               	return	
 29781  013DA4                     i2l1401:
 29782                           
 29783                           ;doprnt.c: 440: return _powers_[scl];
 29784  013DA4  5051               	movf	i2scale@scl,w,c
 29785  013DA6  0D04               	mullw	4
 29786  013DA8  0E91               	movlw	low __powers_
 29787  013DAA  24F3               	addwf	prodl,w,c
 29788  013DAC  6EF6               	movwf	tblptrl,c
 29789  013DAE  0EE8               	movlw	high __powers_
 29790  013DB0  20F4               	addwfc	prodh,w,c
 29791  013DB2  6EF7               	movwf	tblptrh,c
 29792  013DB4                     	if	1	;There are 3 active tblptr bytes
 29793  013DB4  6AF8               	clrf	tblptru,c
 29794  013DB6  0E00               	movlw	low (__mediumconst shr (0+16))
 29795  013DB8  22F8               	addwfc	tblptru,f,c
 29796  013DBA                     	endif
 29797  013DBA  0009               	tblrd		*+
 29798  013DBC  CFF5 F049          	movff	tablat,?i2_scale
 29799  013DC0  0009               	tblrd		*+
 29800  013DC2  CFF5 F04A          	movff	tablat,?i2_scale+1
 29801  013DC6  0009               	tblrd		*+
 29802  013DC8  CFF5 F04B          	movff	tablat,?i2_scale+2
 29803  013DCC  000A               	tblrd		*-
 29804  013DCE  CFF5 F04C          	movff	tablat,?i2_scale+3
 29805  013DD2  0012               	return	
 29806  013DD4                     __end_ofi2_scale:
 29807                           	opt stack 0
 29808                           tosu	equ	0xFFF
 29809                           tosh	equ	0xFFE
 29810                           tosl	equ	0xFFD
 29811                           pclatu	equ	0xFFB
 29812                           pclath	equ	0xFFA
 29813                           tblptru	equ	0xFF8
 29814                           tblptrh	equ	0xFF7
 29815                           tblptrl	equ	0xFF6
 29816                           tablat	equ	0xFF5
 29817                           prodh	equ	0xFF4
 29818                           prodl	equ	0xFF3
 29819                           intcon	equ	0xFF2
 29820                           indf0	equ	0xFEF
 29821                           postinc0	equ	0xFEE
 29822                           fsr0h	equ	0xFEA
 29823                           fsr0l	equ	0xFE9
 29824                           wreg	equ	0xFE8
 29825                           indf1	equ	0xFE7
 29826                           postdec1	equ	0xFE5
 29827                           plusw1	equ	0xFE3
 29828                           fsr1h	equ	0xFE2
 29829                           fsr1l	equ	0xFE1
 29830                           bsr	equ	0xFE0
 29831                           indf2	equ	0xFDF
 29832                           postinc2	equ	0xFDE
 29833                           postdec2	equ	0xFDD
 29834                           plusw2	equ	0xFDB
 29835                           fsr2h	equ	0xFDA
 29836                           fsr2l	equ	0xFD9
 29837                           status	equ	0xFD8
 29838                           
 29839 ;; *************** function i2_putch *****************
 29840 ;; Defined at:
 29841 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 29842 ;; Parameters:    Size  Location     Type
 29843 ;;  txData          1    wreg     unsigned char 
 29844 ;; Auto vars:     Size  Location     Type
 29845 ;;  txData          1    1[COMRAM] unsigned char 
 29846 ;; Return value:  Size  Location     Type
 29847 ;;                  1    wreg      void 
 29848 ;; Registers used:
 29849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29850 ;; Tracked objects:
 29851 ;;		On entry : 0/0
 29852 ;;		On exit  : 0/0
 29853 ;;		Unchanged: 0/0
 29854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29859 ;;Total ram usage:        1 bytes
 29860 ;; Hardware stack levels used:    1
 29861 ;; Hardware stack levels required when called:    1
 29862 ;; This function calls:
 29863 ;;		i2_EUSART2_Write
 29864 ;; This function is called by:
 29865 ;;		i2_printf
 29866 ;; This function uses a non-reentrant model
 29867 ;;
 29868                           
 29869                           	psect	text91
 29870  018CB2                     __ptext91:
 29871                           	opt stack 0
 29872  018CB2                     i2_putch:
 29873                           	opt stack 15
 29874                           
 29875                           ;incstack = 0
 29876                           ;i2putch@txData stored from wreg
 29877  018CB2  6E02               	movwf	i2putch@txData,c
 29878                           
 29879                           ;eusart2.c: 195: EUSART2_Write(txData);
 29880  018CB4  5002               	movf	i2putch@txData,w,c
 29881  018CB6  EC6F  F0C2         	call	i2_EUSART2_Write
 29882  018CBA  0012               	return		;funcret
 29883  018CBC                     __end_ofi2_putch:
 29884                           	opt stack 0
 29885                           tosu	equ	0xFFF
 29886                           tosh	equ	0xFFE
 29887                           tosl	equ	0xFFD
 29888                           pclatu	equ	0xFFB
 29889                           pclath	equ	0xFFA
 29890                           tblptru	equ	0xFF8
 29891                           tblptrh	equ	0xFF7
 29892                           tblptrl	equ	0xFF6
 29893                           tablat	equ	0xFF5
 29894                           prodh	equ	0xFF4
 29895                           prodl	equ	0xFF3
 29896                           intcon	equ	0xFF2
 29897                           indf0	equ	0xFEF
 29898                           postinc0	equ	0xFEE
 29899                           fsr0h	equ	0xFEA
 29900                           fsr0l	equ	0xFE9
 29901                           wreg	equ	0xFE8
 29902                           indf1	equ	0xFE7
 29903                           postdec1	equ	0xFE5
 29904                           plusw1	equ	0xFE3
 29905                           fsr1h	equ	0xFE2
 29906                           fsr1l	equ	0xFE1
 29907                           bsr	equ	0xFE0
 29908                           indf2	equ	0xFDF
 29909                           postinc2	equ	0xFDE
 29910                           postdec2	equ	0xFDD
 29911                           plusw2	equ	0xFDB
 29912                           fsr2h	equ	0xFDA
 29913                           fsr2l	equ	0xFD9
 29914                           status	equ	0xFD8
 29915                           
 29916 ;; *************** function i2_EUSART2_Write *****************
 29917 ;; Defined at:
 29918 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 29919 ;; Parameters:    Size  Location     Type
 29920 ;;  txData          1    wreg     unsigned char 
 29921 ;; Auto vars:     Size  Location     Type
 29922 ;;  txData          1    0[COMRAM] unsigned char 
 29923 ;; Return value:  Size  Location     Type
 29924 ;;                  1    wreg      void 
 29925 ;; Registers used:
 29926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29927 ;; Tracked objects:
 29928 ;;		On entry : 0/0
 29929 ;;		On exit  : 0/0
 29930 ;;		Unchanged: 0/0
 29931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29936 ;;Total ram usage:        1 bytes
 29937 ;; Hardware stack levels used:    1
 29938 ;; This function calls:
 29939 ;;		Nothing
 29940 ;; This function is called by:
 29941 ;;		i2_putch
 29942 ;; This function uses a non-reentrant model
 29943 ;;
 29944                           
 29945                           	psect	text92
 29946  0184DE                     __ptext92:
 29947                           	opt stack 0
 29948  0184DE                     i2_EUSART2_Write:
 29949                           	opt stack 15
 29950                           
 29951                           ;incstack = 0
 29952                           ;i2EUSART2_Write@txData stored from wreg
 29953  0184DE  6E01               	movwf	i2EUSART2_Write@txData,c
 29954                           
 29955                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 29956  0184E0  D002               	goto	i2l388
 29957  0184E2                     i2l389:
 29958                           
 29959                           ; BSR set to: 1
 29960  0184E2  0004               	clrwdt		;# 
 29961                           
 29962                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 29963  0184E4  827E               	bsf	3966,1,c	;volatile
 29964  0184E6                     i2l388:
 29965  0184E6  0101               	movlb	1	; () banked
 29966  0184E8  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 29967  0184EA  B4D8               	btfsc	status,2,c
 29968  0184EC  D7FA               	goto	i2l389
 29969                           
 29970                           ; BSR set to: 1
 29971                           ;eusart2.c: 167: }
 29972                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 29973  0184EE  927E               	bcf	3966,1,c	;volatile
 29974                           
 29975                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 29976  0184F0  010E               	movlb	14	; () banked
 29977  0184F2  BD2C               	btfsc	44,6,b	;volatile
 29978  0184F4  D003               	goto	i2l391
 29979                           
 29980                           ; BSR set to: 14
 29981                           ;eusart2.c: 172: {
 29982                           ;eusart2.c: 173: TX2REG = txData;
 29983  0184F6  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 29984                           
 29985                           ;eusart2.c: 174: }
 29986  0184FA  D013               	goto	i2l392
 29987  0184FC                     i2l391:
 29988                           
 29989                           ; BSR set to: 14
 29990                           ;eusart2.c: 175: else
 29991                           ;eusart2.c: 176: {
 29992                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 29993  0184FC  9D2C               	bcf	44,6,b	;volatile
 29994                           
 29995                           ; BSR set to: 14
 29996                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 29997  0184FE  0101               	movlb	1	; () banked
 29998  018500  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 29999  018502  0D01               	mullw	1
 30000  018504  0E00               	movlw	low _eusart2TxBuffer
 30001  018506  24F3               	addwf	prodl,w,c
 30002  018508  6ED9               	movwf	fsr2l,c
 30003  01850A  0E03               	movlw	high _eusart2TxBuffer
 30004  01850C  20F4               	addwfc	prodh,w,c
 30005  01850E  6EDA               	movwf	fsr2h,c
 30006  018510  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 30007                           
 30008                           ; BSR set to: 1
 30009  018514  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 30010                           
 30011                           ; BSR set to: 1
 30012                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 30013  018516  0E7F               	movlw	127
 30014  018518  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 30015  01851A  D002               	goto	i2l393
 30016                           
 30017                           ; BSR set to: 1
 30018                           ;eusart2.c: 180: {
 30019                           ;eusart2.c: 181: eusart2TxHead = 0;
 30020  01851C  0E00               	movlw	0
 30021  01851E  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 30022  018520                     i2l393:
 30023                           
 30024                           ; BSR set to: 1
 30025                           ;eusart2.c: 182: }
 30026                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 30027                           
 30028                           ; BSR set to: 1
 30029  018520  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 30030  018522                     i2l392:
 30031                           
 30032                           ;eusart2.c: 184: }
 30033                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 30034                           
 30035                           ; BSR set to: 1
 30036  018522  010E               	movlb	14	; () banked
 30037  018524  8D2C               	bsf	44,6,b	;volatile
 30038                           
 30039                           ; BSR set to: 14
 30040  018526  0012               	return		;funcret
 30041  018528                     __end_ofi2_EUSART2_Write:
 30042                           	opt stack 0
 30043                           tosu	equ	0xFFF
 30044                           tosh	equ	0xFFE
 30045                           tosl	equ	0xFFD
 30046                           pclatu	equ	0xFFB
 30047                           pclath	equ	0xFFA
 30048                           tblptru	equ	0xFF8
 30049                           tblptrh	equ	0xFF7
 30050                           tblptrl	equ	0xFF6
 30051                           tablat	equ	0xFF5
 30052                           prodh	equ	0xFF4
 30053                           prodl	equ	0xFF3
 30054                           intcon	equ	0xFF2
 30055                           indf0	equ	0xFEF
 30056                           postinc0	equ	0xFEE
 30057                           fsr0h	equ	0xFEA
 30058                           fsr0l	equ	0xFE9
 30059                           wreg	equ	0xFE8
 30060                           indf1	equ	0xFE7
 30061                           postdec1	equ	0xFE5
 30062                           plusw1	equ	0xFE3
 30063                           fsr1h	equ	0xFE2
 30064                           fsr1l	equ	0xFE1
 30065                           bsr	equ	0xFE0
 30066                           indf2	equ	0xFDF
 30067                           postinc2	equ	0xFDE
 30068                           postdec2	equ	0xFDD
 30069                           plusw2	equ	0xFDB
 30070                           fsr2h	equ	0xFDA
 30071                           fsr2l	equ	0xFD9
 30072                           status	equ	0xFD8
 30073                           
 30074 ;; *************** function i2_isdigit *****************
 30075 ;; Defined at:
 30076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 30077 ;; Parameters:    Size  Location     Type
 30078 ;;  c               1    wreg     unsigned char 
 30079 ;; Auto vars:     Size  Location     Type
 30080 ;;  c               1    2[COMRAM] unsigned char 
 30081 ;; Return value:  Size  Location     Type
 30082 ;;		None               void
 30083 ;; Registers used:
 30084 ;;		wreg, status,2, status,0
 30085 ;; Tracked objects:
 30086 ;;		On entry : 0/0
 30087 ;;		On exit  : 0/0
 30088 ;;		Unchanged: 0/0
 30089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30093 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30094 ;;Total ram usage:        3 bytes
 30095 ;; Hardware stack levels used:    1
 30096 ;; This function calls:
 30097 ;;		Nothing
 30098 ;; This function is called by:
 30099 ;;		i2_printf
 30100 ;; This function uses a non-reentrant model
 30101 ;;
 30102                           
 30103                           	psect	text93
 30104  018AF0                     __ptext93:
 30105                           	opt stack 0
 30106  018AF0                     i2_isdigit:
 30107                           	opt stack 16
 30108                           
 30109                           ; BSR set to: 14
 30110                           ;incstack = 0
 30111                           ;i2isdigit@c stored from wreg
 30112  018AF0  6E03               	movwf	i2isdigit@c,c
 30113  018AF2  0E00               	movlw	0
 30114  018AF4  6E02               	movwf	i2_isdigit$3228,c
 30115  018AF6  0E3A               	movlw	58
 30116  018AF8  6003               	cpfslt	i2isdigit@c,c
 30117  018AFA  D005               	goto	i2l1972
 30118  018AFC  0E2F               	movlw	47
 30119  018AFE  6403               	cpfsgt	i2isdigit@c,c
 30120  018B00  D002               	goto	i2l1972
 30121  018B02  0E01               	movlw	1
 30122  018B04  6E02               	movwf	i2_isdigit$3228,c
 30123  018B06                     i2l1972:
 30124  018B06  C002  F001         	movff	i2_isdigit$3228,??i2_isdigit
 30125  018B0A  3001               	rrcf	??i2_isdigit,w,c
 30126  018B0C  0012               	return	
 30127  018B0E                     __end_ofi2_isdigit:
 30128                           	opt stack 0
 30129                           tosu	equ	0xFFF
 30130                           tosh	equ	0xFFE
 30131                           tosl	equ	0xFFD
 30132                           pclatu	equ	0xFFB
 30133                           pclath	equ	0xFFA
 30134                           tblptru	equ	0xFF8
 30135                           tblptrh	equ	0xFF7
 30136                           tblptrl	equ	0xFF6
 30137                           tablat	equ	0xFF5
 30138                           prodh	equ	0xFF4
 30139                           prodl	equ	0xFF3
 30140                           intcon	equ	0xFF2
 30141                           indf0	equ	0xFEF
 30142                           postinc0	equ	0xFEE
 30143                           fsr0h	equ	0xFEA
 30144                           fsr0l	equ	0xFE9
 30145                           wreg	equ	0xFE8
 30146                           indf1	equ	0xFE7
 30147                           postdec1	equ	0xFE5
 30148                           plusw1	equ	0xFE3
 30149                           fsr1h	equ	0xFE2
 30150                           fsr1l	equ	0xFE1
 30151                           bsr	equ	0xFE0
 30152                           indf2	equ	0xFDF
 30153                           postinc2	equ	0xFDE
 30154                           postdec2	equ	0xFDD
 30155                           plusw2	equ	0xFDB
 30156                           fsr2h	equ	0xFDA
 30157                           fsr2l	equ	0xFD9
 30158                           status	equ	0xFD8
 30159                           
 30160 ;; *************** function i2_fround *****************
 30161 ;; Defined at:
 30162 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;  prec            1    wreg     unsigned char 
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;  prec            1   84[COMRAM] unsigned char 
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  4   72[COMRAM] unsigned char 
 30169 ;; Registers used:
 30170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30171 ;; Tracked objects:
 30172 ;;		On entry : 0/0
 30173 ;;		On exit  : 0/0
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30177 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30179 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30180 ;;Total ram usage:       13 bytes
 30181 ;; Hardware stack levels used:    1
 30182 ;; Hardware stack levels required when called:    1
 30183 ;; This function calls:
 30184 ;;		i2___awdiv
 30185 ;;		i2___awmod
 30186 ;;		i2___flmul
 30187 ;; This function is called by:
 30188 ;;		i2_printf
 30189 ;; This function uses a non-reentrant model
 30190 ;;
 30191                           
 30192                           	psect	text94
 30193  015F50                     __ptext94:
 30194                           	opt stack 0
 30195  015F50                     i2_fround:
 30196                           	opt stack 15
 30197                           
 30198                           ;incstack = 0
 30199                           ;i2fround@prec stored from wreg
 30200  015F50  6E55               	movwf	i2fround@prec,c
 30201                           
 30202                           ;doprnt.c: 413: if(prec>=110)
 30203  015F52  0E6D               	movlw	109
 30204  015F54  6455               	cpfsgt	i2fround@prec,c
 30205  015F56  D0B5               	goto	i2l1388
 30206                           
 30207                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30208  015F58  0E00               	movlw	0
 30209  015F5A  6E0A               	movwf	i2___awdiv@divisor+1,c
 30210  015F5C  0E0A               	movlw	10
 30211  015F5E  6E09               	movwf	i2___awdiv@divisor,c
 30212  015F60  0E00               	movlw	0
 30213  015F62  6E04               	movwf	i2___awmod@divisor+1,c
 30214  015F64  0E64               	movlw	100
 30215  015F66  6E03               	movwf	i2___awmod@divisor,c
 30216  015F68  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 30217  015F6C  6A02               	clrf	i2___awmod@dividend+1,c
 30218  015F6E  EC6A  F0BF         	call	i2___awmod	;wreg free
 30219  015F72  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 30220  015F76  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 30221  015F7A  EC33  F0BE         	call	i2___awdiv	;wreg free
 30222  015F7E  90D8               	bcf	status,0,c
 30223  015F80  3607               	rlcf	?i2___awdiv,f,c
 30224  015F82  3608               	rlcf	?i2___awdiv+1,f,c
 30225  015F84  90D8               	bcf	status,0,c
 30226  015F86  3607               	rlcf	?i2___awdiv,f,c
 30227  015F88  3608               	rlcf	?i2___awdiv+1,f,c
 30228  015F8A  0E24               	movlw	36
 30229  015F8C  2607               	addwf	?i2___awdiv,f,c
 30230  015F8E  0E00               	movlw	0
 30231  015F90  2208               	addwfc	?i2___awdiv+1,f,c
 30232  015F92  0EC5               	movlw	low __npowers_
 30233  015F94  2407               	addwf	?i2___awdiv,w,c
 30234  015F96  6EF6               	movwf	tblptrl,c
 30235  015F98  0EE8               	movlw	high __npowers_
 30236  015F9A  2008               	addwfc	?i2___awdiv+1,w,c
 30237  015F9C  6EF7               	movwf	tblptrh,c
 30238  015F9E                     	if	1	;There are 3 active tblptr bytes
 30239  015F9E  6AF8               	clrf	tblptru,c
 30240  015FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 30241  015FA2  22F8               	addwfc	tblptru,f,c
 30242  015FA4                     	endif
 30243  015FA4  0009               	tblrd		*+
 30244  015FA6  CFF5 F034          	movff	tablat,i2___flmul@a
 30245  015FAA  0009               	tblrd		*+
 30246  015FAC  CFF5 F035          	movff	tablat,i2___flmul@a+1
 30247  015FB0  0009               	tblrd		*+
 30248  015FB2  CFF5 F036          	movff	tablat,i2___flmul@a+2
 30249  015FB6  000A               	tblrd		*-
 30250  015FB8  CFF5 F037          	movff	tablat,i2___flmul@a+3
 30251  015FBC  0E00               	movlw	0
 30252  015FBE  6E0A               	movwf	i2___awdiv@divisor+1,c
 30253  015FC0  0E64               	movlw	100
 30254  015FC2  6E09               	movwf	i2___awdiv@divisor,c
 30255  015FC4  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 30256  015FC8  6A08               	clrf	i2___awdiv@dividend+1,c
 30257  015FCA  EC33  F0BE         	call	i2___awdiv	;wreg free
 30258  015FCE  90D8               	bcf	status,0,c
 30259  015FD0  3607               	rlcf	?i2___awdiv,f,c
 30260  015FD2  3608               	rlcf	?i2___awdiv+1,f,c
 30261  015FD4  90D8               	bcf	status,0,c
 30262  015FD6  3607               	rlcf	?i2___awdiv,f,c
 30263  015FD8  3608               	rlcf	?i2___awdiv+1,f,c
 30264  015FDA  0E48               	movlw	72
 30265  015FDC  2607               	addwf	?i2___awdiv,f,c
 30266  015FDE  0E00               	movlw	0
 30267  015FE0  2208               	addwfc	?i2___awdiv+1,f,c
 30268  015FE2  0EC5               	movlw	low __npowers_
 30269  015FE4  2407               	addwf	?i2___awdiv,w,c
 30270  015FE6  6EF6               	movwf	tblptrl,c
 30271  015FE8  0EE8               	movlw	high __npowers_
 30272  015FEA  2008               	addwfc	?i2___awdiv+1,w,c
 30273  015FEC  6EF7               	movwf	tblptrh,c
 30274  015FEE                     	if	1	;There are 3 active tblptr bytes
 30275  015FEE  6AF8               	clrf	tblptru,c
 30276  015FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 30277  015FF2  22F8               	addwfc	tblptru,f,c
 30278  015FF4                     	endif
 30279  015FF4  0009               	tblrd		*+
 30280  015FF6  CFF5 F030          	movff	tablat,i2___flmul@b
 30281  015FFA  0009               	tblrd		*+
 30282  015FFC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 30283  016000  0009               	tblrd		*+
 30284  016002  CFF5 F032          	movff	tablat,i2___flmul@b+2
 30285  016006  000A               	tblrd		*-
 30286  016008  CFF5 F033          	movff	tablat,i2___flmul@b+3
 30287  01600C  EC47  F0A2         	call	i2___flmul	;wreg free
 30288  016010  C030  F051         	movff	?i2___flmul,i2_fround$4143
 30289  016014  C031  F052         	movff	?i2___flmul+1,i2_fround$4143+1
 30290  016018  C032  F053         	movff	?i2___flmul+2,i2_fround$4143+2
 30291  01601C  C033  F054         	movff	?i2___flmul+3,i2_fround$4143+3
 30292                           
 30293                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30294  016020  0E00               	movlw	0
 30295  016022  6E04               	movwf	i2___awmod@divisor+1,c
 30296  016024  0E0A               	movlw	10
 30297  016026  6E03               	movwf	i2___awmod@divisor,c
 30298  016028  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 30299  01602C  6A02               	clrf	i2___awmod@dividend+1,c
 30300  01602E  EC6A  F0BF         	call	i2___awmod	;wreg free
 30301  016032  90D8               	bcf	status,0,c
 30302  016034  3601               	rlcf	?i2___awmod,f,c
 30303  016036  3602               	rlcf	?i2___awmod+1,f,c
 30304  016038  90D8               	bcf	status,0,c
 30305  01603A  3601               	rlcf	?i2___awmod,f,c
 30306  01603C  3602               	rlcf	?i2___awmod+1,f,c
 30307  01603E  0EC5               	movlw	low __npowers_
 30308  016040  2401               	addwf	?i2___awmod,w,c
 30309  016042  6EF6               	movwf	tblptrl,c
 30310  016044  0EE8               	movlw	high __npowers_
 30311  016046  2002               	addwfc	?i2___awmod+1,w,c
 30312  016048  6EF7               	movwf	tblptrh,c
 30313  01604A                     	if	1	;There are 3 active tblptr bytes
 30314  01604A  6AF8               	clrf	tblptru,c
 30315  01604C  0E00               	movlw	low (__mediumconst shr (0+16))
 30316  01604E  22F8               	addwfc	tblptru,f,c
 30317  016050                     	endif
 30318  016050  0009               	tblrd		*+
 30319  016052  CFF5 F034          	movff	tablat,i2___flmul@a
 30320  016056  0009               	tblrd		*+
 30321  016058  CFF5 F035          	movff	tablat,i2___flmul@a+1
 30322  01605C  0009               	tblrd		*+
 30323  01605E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 30324  016062  000A               	tblrd		*-
 30325  016064  CFF5 F037          	movff	tablat,i2___flmul@a+3
 30326  016068  C051  F030         	movff	i2_fround$4143,i2___flmul@b
 30327  01606C  C052  F031         	movff	i2_fround$4143+1,i2___flmul@b+1
 30328  016070  C053  F032         	movff	i2_fround$4143+2,i2___flmul@b+2
 30329  016074  C054  F033         	movff	i2_fround$4143+3,i2___flmul@b+3
 30330  016078  EC47  F0A2         	call	i2___flmul	;wreg free
 30331  01607C  C030  F04D         	movff	?i2___flmul,i2_fround$4144
 30332  016080  C031  F04E         	movff	?i2___flmul+1,i2_fround$4144+1
 30333  016084  C032  F04F         	movff	?i2___flmul+2,i2_fround$4144+2
 30334  016088  C033  F050         	movff	?i2___flmul+3,i2_fround$4144+3
 30335                           
 30336                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30337  01608C  C04D  F030         	movff	i2_fround$4144,i2___flmul@b
 30338  016090  C04E  F031         	movff	i2_fround$4144+1,i2___flmul@b+1
 30339  016094  C04F  F032         	movff	i2_fround$4144+2,i2___flmul@b+2
 30340  016098  C050  F033         	movff	i2_fround$4144+3,i2___flmul@b+3
 30341  01609C  0E00               	movlw	0
 30342  01609E  6E34               	movwf	i2___flmul@a,c
 30343  0160A0  0E00               	movlw	0
 30344  0160A2  6E35               	movwf	i2___flmul@a+1,c
 30345  0160A4  0E00               	movlw	0
 30346  0160A6  6E36               	movwf	i2___flmul@a+2,c
 30347  0160A8  0E3F               	movlw	63
 30348  0160AA  6E37               	movwf	i2___flmul@a+3,c
 30349  0160AC  EC47  F0A2         	call	i2___flmul	;wreg free
 30350  0160B0  C030  F049         	movff	?i2___flmul,?i2_fround
 30351  0160B4  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 30352  0160B8  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 30353  0160BC  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 30354  0160C0  0012               	return	
 30355  0160C2                     i2l1388:
 30356                           
 30357                           ;doprnt.c: 415: else if(prec > 10)
 30358  0160C2  0E0A               	movlw	10
 30359  0160C4  6455               	cpfsgt	i2fround@prec,c
 30360  0160C6  D071               	goto	i2l1391
 30361                           
 30362                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 30363  0160C8  0E00               	movlw	0
 30364  0160CA  6E04               	movwf	i2___awmod@divisor+1,c
 30365  0160CC  0E0A               	movlw	10
 30366  0160CE  6E03               	movwf	i2___awmod@divisor,c
 30367  0160D0  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 30368  0160D4  6A02               	clrf	i2___awmod@dividend+1,c
 30369  0160D6  EC6A  F0BF         	call	i2___awmod	;wreg free
 30370  0160DA  90D8               	bcf	status,0,c
 30371  0160DC  3601               	rlcf	?i2___awmod,f,c
 30372  0160DE  3602               	rlcf	?i2___awmod+1,f,c
 30373  0160E0  90D8               	bcf	status,0,c
 30374  0160E2  3601               	rlcf	?i2___awmod,f,c
 30375  0160E4  3602               	rlcf	?i2___awmod+1,f,c
 30376  0160E6  0EC5               	movlw	low __npowers_
 30377  0160E8  2401               	addwf	?i2___awmod,w,c
 30378  0160EA  6EF6               	movwf	tblptrl,c
 30379  0160EC  0EE8               	movlw	high __npowers_
 30380  0160EE  2002               	addwfc	?i2___awmod+1,w,c
 30381  0160F0  6EF7               	movwf	tblptrh,c
 30382  0160F2                     	if	1	;There are 3 active tblptr bytes
 30383  0160F2  6AF8               	clrf	tblptru,c
 30384  0160F4  0E00               	movlw	low (__mediumconst shr (0+16))
 30385  0160F6  22F8               	addwfc	tblptru,f,c
 30386  0160F8                     	endif
 30387  0160F8  0009               	tblrd		*+
 30388  0160FA  CFF5 F034          	movff	tablat,i2___flmul@a
 30389  0160FE  0009               	tblrd		*+
 30390  016100  CFF5 F035          	movff	tablat,i2___flmul@a+1
 30391  016104  0009               	tblrd		*+
 30392  016106  CFF5 F036          	movff	tablat,i2___flmul@a+2
 30393  01610A  000A               	tblrd		*-
 30394  01610C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 30395  016110  0E00               	movlw	0
 30396  016112  6E0A               	movwf	i2___awdiv@divisor+1,c
 30397  016114  0E0A               	movlw	10
 30398  016116  6E09               	movwf	i2___awdiv@divisor,c
 30399  016118  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 30400  01611C  6A08               	clrf	i2___awdiv@dividend+1,c
 30401  01611E  EC33  F0BE         	call	i2___awdiv	;wreg free
 30402  016122  90D8               	bcf	status,0,c
 30403  016124  3607               	rlcf	?i2___awdiv,f,c
 30404  016126  3608               	rlcf	?i2___awdiv+1,f,c
 30405  016128  90D8               	bcf	status,0,c
 30406  01612A  3607               	rlcf	?i2___awdiv,f,c
 30407  01612C  3608               	rlcf	?i2___awdiv+1,f,c
 30408  01612E  0E24               	movlw	36
 30409  016130  2607               	addwf	?i2___awdiv,f,c
 30410  016132  0E00               	movlw	0
 30411  016134  2208               	addwfc	?i2___awdiv+1,f,c
 30412  016136  0EC5               	movlw	low __npowers_
 30413  016138  2407               	addwf	?i2___awdiv,w,c
 30414  01613A  6EF6               	movwf	tblptrl,c
 30415  01613C  0EE8               	movlw	high __npowers_
 30416  01613E  2008               	addwfc	?i2___awdiv+1,w,c
 30417  016140  6EF7               	movwf	tblptrh,c
 30418  016142                     	if	1	;There are 3 active tblptr bytes
 30419  016142  6AF8               	clrf	tblptru,c
 30420  016144  0E00               	movlw	low (__mediumconst shr (0+16))
 30421  016146  22F8               	addwfc	tblptru,f,c
 30422  016148                     	endif
 30423  016148  0009               	tblrd		*+
 30424  01614A  CFF5 F030          	movff	tablat,i2___flmul@b
 30425  01614E  0009               	tblrd		*+
 30426  016150  CFF5 F031          	movff	tablat,i2___flmul@b+1
 30427  016154  0009               	tblrd		*+
 30428  016156  CFF5 F032          	movff	tablat,i2___flmul@b+2
 30429  01615A  000A               	tblrd		*-
 30430  01615C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 30431  016160  EC47  F0A2         	call	i2___flmul	;wreg free
 30432  016164  C030  F051         	movff	?i2___flmul,i2_fround$4143
 30433  016168  C031  F052         	movff	?i2___flmul+1,i2_fround$4143+1
 30434  01616C  C032  F053         	movff	?i2___flmul+2,i2_fround$4143+2
 30435  016170  C033  F054         	movff	?i2___flmul+3,i2_fround$4143+3
 30436                           
 30437                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 30438  016174  C051  F030         	movff	i2_fround$4143,i2___flmul@b
 30439  016178  C052  F031         	movff	i2_fround$4143+1,i2___flmul@b+1
 30440  01617C  C053  F032         	movff	i2_fround$4143+2,i2___flmul@b+2
 30441  016180  C054  F033         	movff	i2_fround$4143+3,i2___flmul@b+3
 30442  016184  0E00               	movlw	0
 30443  016186  6E34               	movwf	i2___flmul@a,c
 30444  016188  0E00               	movlw	0
 30445  01618A  6E35               	movwf	i2___flmul@a+1,c
 30446  01618C  0E00               	movlw	0
 30447  01618E  6E36               	movwf	i2___flmul@a+2,c
 30448  016190  0E3F               	movlw	63
 30449  016192  6E37               	movwf	i2___flmul@a+3,c
 30450  016194  EC47  F0A2         	call	i2___flmul	;wreg free
 30451  016198  C030  F049         	movff	?i2___flmul,?i2_fround
 30452  01619C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 30453  0161A0  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 30454  0161A4  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 30455  0161A8  0012               	return	
 30456  0161AA                     i2l1391:
 30457                           
 30458                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 30459  0161AA  5055               	movf	i2fround@prec,w,c
 30460  0161AC  0D04               	mullw	4
 30461  0161AE  0EC5               	movlw	low __npowers_
 30462  0161B0  24F3               	addwf	prodl,w,c
 30463  0161B2  6EF6               	movwf	tblptrl,c
 30464  0161B4  0EE8               	movlw	high __npowers_
 30465  0161B6  20F4               	addwfc	prodh,w,c
 30466  0161B8  6EF7               	movwf	tblptrh,c
 30467  0161BA                     	if	1	;There are 3 active tblptr bytes
 30468  0161BA  6AF8               	clrf	tblptru,c
 30469  0161BC  0E00               	movlw	low (__mediumconst shr (0+16))
 30470  0161BE  22F8               	addwfc	tblptru,f,c
 30471  0161C0                     	endif
 30472  0161C0  0009               	tblrd		*+
 30473  0161C2  CFF5 F030          	movff	tablat,i2___flmul@b
 30474  0161C6  0009               	tblrd		*+
 30475  0161C8  CFF5 F031          	movff	tablat,i2___flmul@b+1
 30476  0161CC  0009               	tblrd		*+
 30477  0161CE  CFF5 F032          	movff	tablat,i2___flmul@b+2
 30478  0161D2  000A               	tblrd		*-
 30479  0161D4  CFF5 F033          	movff	tablat,i2___flmul@b+3
 30480  0161D8  0E00               	movlw	0
 30481  0161DA  6E34               	movwf	i2___flmul@a,c
 30482  0161DC  0E00               	movlw	0
 30483  0161DE  6E35               	movwf	i2___flmul@a+1,c
 30484  0161E0  0E00               	movlw	0
 30485  0161E2  6E36               	movwf	i2___flmul@a+2,c
 30486  0161E4  0E3F               	movlw	63
 30487  0161E6  6E37               	movwf	i2___flmul@a+3,c
 30488  0161E8  EC47  F0A2         	call	i2___flmul	;wreg free
 30489  0161EC  C030  F049         	movff	?i2___flmul,?i2_fround
 30490  0161F0  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 30491  0161F4  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 30492  0161F8  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 30493  0161FC  0012               	return	
 30494  0161FE                     __end_ofi2_fround:
 30495                           	opt stack 0
 30496                           tosu	equ	0xFFF
 30497                           tosh	equ	0xFFE
 30498                           tosl	equ	0xFFD
 30499                           pclatu	equ	0xFFB
 30500                           pclath	equ	0xFFA
 30501                           tblptru	equ	0xFF8
 30502                           tblptrh	equ	0xFF7
 30503                           tblptrl	equ	0xFF6
 30504                           tablat	equ	0xFF5
 30505                           prodh	equ	0xFF4
 30506                           prodl	equ	0xFF3
 30507                           intcon	equ	0xFF2
 30508                           indf0	equ	0xFEF
 30509                           postinc0	equ	0xFEE
 30510                           fsr0h	equ	0xFEA
 30511                           fsr0l	equ	0xFE9
 30512                           wreg	equ	0xFE8
 30513                           indf1	equ	0xFE7
 30514                           postdec1	equ	0xFE5
 30515                           plusw1	equ	0xFE3
 30516                           fsr1h	equ	0xFE2
 30517                           fsr1l	equ	0xFE1
 30518                           bsr	equ	0xFE0
 30519                           indf2	equ	0xFDF
 30520                           postinc2	equ	0xFDE
 30521                           postdec2	equ	0xFDD
 30522                           plusw2	equ	0xFDB
 30523                           fsr2h	equ	0xFDA
 30524                           fsr2l	equ	0xFD9
 30525                           status	equ	0xFD8
 30526                           
 30527 ;; *************** function i2___awmod *****************
 30528 ;; Defined at:
 30529 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 30530 ;; Parameters:    Size  Location     Type
 30531 ;;  dividend        2    0[COMRAM] int 
 30532 ;;  divisor         2    2[COMRAM] int 
 30533 ;; Auto vars:     Size  Location     Type
 30534 ;;  __awmod         1    5[COMRAM] unsigned char 
 30535 ;;  __awmod         1    4[COMRAM] unsigned char 
 30536 ;; Return value:  Size  Location     Type
 30537 ;;                  2    0[COMRAM] int 
 30538 ;; Registers used:
 30539 ;;		wreg, status,2, status,0
 30540 ;; Tracked objects:
 30541 ;;		On entry : 0/0
 30542 ;;		On exit  : 0/0
 30543 ;;		Unchanged: 0/0
 30544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30548 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30549 ;;Total ram usage:        6 bytes
 30550 ;; Hardware stack levels used:    1
 30551 ;; This function calls:
 30552 ;;		Nothing
 30553 ;; This function is called by:
 30554 ;;		i2_fround
 30555 ;;		i2_scale
 30556 ;; This function uses a non-reentrant model
 30557 ;;
 30558                           
 30559                           	psect	text95
 30560  017ED4                     __ptext95:
 30561                           	opt stack 0
 30562  017ED4                     i2___awmod:
 30563                           	opt stack 15
 30564                           
 30565                           ;incstack = 0
 30566  017ED4  0E00               	movlw	0
 30567  017ED6  6E06               	movwf	i2___awmod@sign,c
 30568  017ED8  AE02               	btfss	i2___awmod@dividend+1,7,c
 30569  017EDA  D006               	goto	i2l1777
 30570  017EDC  6C01               	negf	i2___awmod@dividend,c
 30571  017EDE  1E02               	comf	i2___awmod@dividend+1,f,c
 30572  017EE0  B0D8               	btfsc	status,0,c
 30573  017EE2  2A02               	incf	i2___awmod@dividend+1,f,c
 30574  017EE4  0E01               	movlw	1
 30575  017EE6  6E06               	movwf	i2___awmod@sign,c
 30576  017EE8                     i2l1777:
 30577  017EE8  AE04               	btfss	i2___awmod@divisor+1,7,c
 30578  017EEA  D004               	goto	i2l1778
 30579  017EEC  6C03               	negf	i2___awmod@divisor,c
 30580  017EEE  1E04               	comf	i2___awmod@divisor+1,f,c
 30581  017EF0  B0D8               	btfsc	status,0,c
 30582  017EF2  2A04               	incf	i2___awmod@divisor+1,f,c
 30583  017EF4                     i2l1778:
 30584  017EF4  5003               	movf	i2___awmod@divisor,w,c
 30585  017EF6  1004               	iorwf	i2___awmod@divisor+1,w,c
 30586  017EF8  B4D8               	btfsc	status,2,c
 30587  017EFA  D018               	goto	i2l1785
 30588  017EFC  0E01               	movlw	1
 30589  017EFE  6E05               	movwf	i2___awmod@counter,c
 30590  017F00  D004               	goto	i2l1780
 30591  017F02  90D8               	bcf	status,0,c
 30592  017F04  3603               	rlcf	i2___awmod@divisor,f,c
 30593  017F06  3604               	rlcf	i2___awmod@divisor+1,f,c
 30594  017F08  2A05               	incf	i2___awmod@counter,f,c
 30595  017F0A                     i2l1780:
 30596  017F0A  AE04               	btfss	i2___awmod@divisor+1,7,c
 30597  017F0C  D7FA               	goto	i2l1781
 30598  017F0E                     i2u1665_40:
 30599  017F0E  5003               	movf	i2___awmod@divisor,w,c
 30600  017F10  5C01               	subwf	i2___awmod@dividend,w,c
 30601  017F12  5004               	movf	i2___awmod@divisor+1,w,c
 30602  017F14  5802               	subwfb	i2___awmod@dividend+1,w,c
 30603  017F16  A0D8               	btfss	status,0,c
 30604  017F18  D004               	goto	i2l1784
 30605  017F1A  5003               	movf	i2___awmod@divisor,w,c
 30606  017F1C  5E01               	subwf	i2___awmod@dividend,f,c
 30607  017F1E  5004               	movf	i2___awmod@divisor+1,w,c
 30608  017F20  5A02               	subwfb	i2___awmod@dividend+1,f,c
 30609  017F22                     i2l1784:
 30610  017F22  90D8               	bcf	status,0,c
 30611  017F24  3204               	rrcf	i2___awmod@divisor+1,f,c
 30612  017F26  3203               	rrcf	i2___awmod@divisor,f,c
 30613  017F28  2E05               	decfsz	i2___awmod@counter,f,c
 30614  017F2A  D7F1               	goto	i2u1665_40
 30615  017F2C                     i2l1785:
 30616  017F2C  5006               	movf	i2___awmod@sign,w,c
 30617  017F2E  B4D8               	btfsc	status,2,c
 30618  017F30  D004               	goto	i2l1786
 30619  017F32  6C01               	negf	i2___awmod@dividend,c
 30620  017F34  1E02               	comf	i2___awmod@dividend+1,f,c
 30621  017F36  B0D8               	btfsc	status,0,c
 30622  017F38  2A02               	incf	i2___awmod@dividend+1,f,c
 30623  017F3A                     i2l1786:
 30624  017F3A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 30625  017F3E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 30626  017F42  0012               	return	
 30627  017F44                     __end_ofi2___awmod:
 30628                           	opt stack 0
 30629                           tosu	equ	0xFFF
 30630                           tosh	equ	0xFFE
 30631                           tosl	equ	0xFFD
 30632                           pclatu	equ	0xFFB
 30633                           pclath	equ	0xFFA
 30634                           tblptru	equ	0xFF8
 30635                           tblptrh	equ	0xFF7
 30636                           tblptrl	equ	0xFF6
 30637                           tablat	equ	0xFF5
 30638                           prodh	equ	0xFF4
 30639                           prodl	equ	0xFF3
 30640                           intcon	equ	0xFF2
 30641                           indf0	equ	0xFEF
 30642                           postinc0	equ	0xFEE
 30643                           fsr0h	equ	0xFEA
 30644                           fsr0l	equ	0xFE9
 30645                           wreg	equ	0xFE8
 30646                           indf1	equ	0xFE7
 30647                           postdec1	equ	0xFE5
 30648                           plusw1	equ	0xFE3
 30649                           fsr1h	equ	0xFE2
 30650                           fsr1l	equ	0xFE1
 30651                           bsr	equ	0xFE0
 30652                           indf2	equ	0xFDF
 30653                           postinc2	equ	0xFDE
 30654                           postdec2	equ	0xFDD
 30655                           plusw2	equ	0xFDB
 30656                           fsr2h	equ	0xFDA
 30657                           fsr2l	equ	0xFD9
 30658                           status	equ	0xFD8
 30659                           
 30660 ;; *************** function i2___awdiv *****************
 30661 ;; Defined at:
 30662 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 30663 ;; Parameters:    Size  Location     Type
 30664 ;;  dividend        2    6[COMRAM] int 
 30665 ;;  divisor         2    8[COMRAM] int 
 30666 ;; Auto vars:     Size  Location     Type
 30667 ;;  __awdiv         2   12[COMRAM] int 
 30668 ;;  __awdiv         1   11[COMRAM] unsigned char 
 30669 ;;  __awdiv         1   10[COMRAM] unsigned char 
 30670 ;; Return value:  Size  Location     Type
 30671 ;;                  2    6[COMRAM] int 
 30672 ;; Registers used:
 30673 ;;		wreg, status,2, status,0
 30674 ;; Tracked objects:
 30675 ;;		On entry : 0/0
 30676 ;;		On exit  : 0/0
 30677 ;;		Unchanged: 0/0
 30678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30680 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30682 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30683 ;;Total ram usage:        8 bytes
 30684 ;; Hardware stack levels used:    1
 30685 ;; This function calls:
 30686 ;;		Nothing
 30687 ;; This function is called by:
 30688 ;;		i2_fround
 30689 ;;		i2_scale
 30690 ;;		i2_printf
 30691 ;; This function uses a non-reentrant model
 30692 ;;
 30693                           
 30694                           	psect	text96
 30695  017C66                     __ptext96:
 30696                           	opt stack 0
 30697  017C66                     i2___awdiv:
 30698                           	opt stack 15
 30699                           
 30700                           ;incstack = 0
 30701  017C66  0E00               	movlw	0
 30702  017C68  6E0C               	movwf	i2___awdiv@sign,c
 30703  017C6A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 30704  017C6C  D006               	goto	i2l1764
 30705  017C6E  6C09               	negf	i2___awdiv@divisor,c
 30706  017C70  1E0A               	comf	i2___awdiv@divisor+1,f,c
 30707  017C72  B0D8               	btfsc	status,0,c
 30708  017C74  2A0A               	incf	i2___awdiv@divisor+1,f,c
 30709  017C76  0E01               	movlw	1
 30710  017C78  6E0C               	movwf	i2___awdiv@sign,c
 30711  017C7A                     i2l1764:
 30712  017C7A  AE08               	btfss	i2___awdiv@dividend+1,7,c
 30713  017C7C  D006               	goto	i2l1765
 30714  017C7E  6C07               	negf	i2___awdiv@dividend,c
 30715  017C80  1E08               	comf	i2___awdiv@dividend+1,f,c
 30716  017C82  B0D8               	btfsc	status,0,c
 30717  017C84  2A08               	incf	i2___awdiv@dividend+1,f,c
 30718  017C86  0E01               	movlw	1
 30719  017C88  1A0C               	xorwf	i2___awdiv@sign,f,c
 30720  017C8A                     i2l1765:
 30721  017C8A  0E00               	movlw	0
 30722  017C8C  6E0E               	movwf	i2___awdiv@quotient+1,c
 30723  017C8E  0E00               	movlw	0
 30724  017C90  6E0D               	movwf	i2___awdiv@quotient,c
 30725  017C92  5009               	movf	i2___awdiv@divisor,w,c
 30726  017C94  100A               	iorwf	i2___awdiv@divisor+1,w,c
 30727  017C96  B4D8               	btfsc	status,2,c
 30728  017C98  D01C               	goto	i2l1772
 30729  017C9A  0E01               	movlw	1
 30730  017C9C  6E0B               	movwf	i2___awdiv@counter,c
 30731  017C9E  D004               	goto	i2l1767
 30732  017CA0  90D8               	bcf	status,0,c
 30733  017CA2  3609               	rlcf	i2___awdiv@divisor,f,c
 30734  017CA4  360A               	rlcf	i2___awdiv@divisor+1,f,c
 30735  017CA6  2A0B               	incf	i2___awdiv@counter,f,c
 30736  017CA8                     i2l1767:
 30737  017CA8  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 30738  017CAA  D7FA               	goto	i2l1768
 30739  017CAC                     i2u1659_40:
 30740  017CAC  90D8               	bcf	status,0,c
 30741  017CAE  360D               	rlcf	i2___awdiv@quotient,f,c
 30742  017CB0  360E               	rlcf	i2___awdiv@quotient+1,f,c
 30743  017CB2  5009               	movf	i2___awdiv@divisor,w,c
 30744  017CB4  5C07               	subwf	i2___awdiv@dividend,w,c
 30745  017CB6  500A               	movf	i2___awdiv@divisor+1,w,c
 30746  017CB8  5808               	subwfb	i2___awdiv@dividend+1,w,c
 30747  017CBA  A0D8               	btfss	status,0,c
 30748  017CBC  D005               	goto	i2l1771
 30749  017CBE  5009               	movf	i2___awdiv@divisor,w,c
 30750  017CC0  5E07               	subwf	i2___awdiv@dividend,f,c
 30751  017CC2  500A               	movf	i2___awdiv@divisor+1,w,c
 30752  017CC4  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 30753  017CC6  800D               	bsf	i2___awdiv@quotient,0,c
 30754  017CC8                     i2l1771:
 30755  017CC8  90D8               	bcf	status,0,c
 30756  017CCA  320A               	rrcf	i2___awdiv@divisor+1,f,c
 30757  017CCC  3209               	rrcf	i2___awdiv@divisor,f,c
 30758  017CCE  2E0B               	decfsz	i2___awdiv@counter,f,c
 30759  017CD0  D7ED               	goto	i2u1659_40
 30760  017CD2                     i2l1772:
 30761  017CD2  500C               	movf	i2___awdiv@sign,w,c
 30762  017CD4  B4D8               	btfsc	status,2,c
 30763  017CD6  D004               	goto	i2l1773
 30764  017CD8  6C0D               	negf	i2___awdiv@quotient,c
 30765  017CDA  1E0E               	comf	i2___awdiv@quotient+1,f,c
 30766  017CDC  B0D8               	btfsc	status,0,c
 30767  017CDE  2A0E               	incf	i2___awdiv@quotient+1,f,c
 30768  017CE0                     i2l1773:
 30769  017CE0  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 30770  017CE4  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30771  017CE8  0012               	return	
 30772  017CEA                     __end_ofi2___awdiv:
 30773                           	opt stack 0
 30774                           tosu	equ	0xFFF
 30775                           tosh	equ	0xFFE
 30776                           tosl	equ	0xFFD
 30777                           pclatu	equ	0xFFB
 30778                           pclath	equ	0xFFA
 30779                           tblptru	equ	0xFF8
 30780                           tblptrh	equ	0xFF7
 30781                           tblptrl	equ	0xFF6
 30782                           tablat	equ	0xFF5
 30783                           prodh	equ	0xFF4
 30784                           prodl	equ	0xFF3
 30785                           intcon	equ	0xFF2
 30786                           indf0	equ	0xFEF
 30787                           postinc0	equ	0xFEE
 30788                           fsr0h	equ	0xFEA
 30789                           fsr0l	equ	0xFE9
 30790                           wreg	equ	0xFE8
 30791                           indf1	equ	0xFE7
 30792                           postdec1	equ	0xFE5
 30793                           plusw1	equ	0xFE3
 30794                           fsr1h	equ	0xFE2
 30795                           fsr1l	equ	0xFE1
 30796                           bsr	equ	0xFE0
 30797                           indf2	equ	0xFDF
 30798                           postinc2	equ	0xFDE
 30799                           postdec2	equ	0xFDD
 30800                           plusw2	equ	0xFDB
 30801                           fsr2h	equ	0xFDA
 30802                           fsr2l	equ	0xFD9
 30803                           status	equ	0xFD8
 30804                           
 30805 ;; *************** function i2__tdiv_to_l_ *****************
 30806 ;; Defined at:
 30807 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 30808 ;; Parameters:    Size  Location     Type
 30809 ;;  f1              3    0[COMRAM] float 
 30810 ;;  f2              3    3[COMRAM] float 
 30811 ;; Auto vars:     Size  Location     Type
 30812 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 30813 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 30814 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 30815 ;; Return value:  Size  Location     Type
 30816 ;;                  4    0[COMRAM] unsigned long 
 30817 ;; Registers used:
 30818 ;;		wreg, status,2, status,0
 30819 ;; Tracked objects:
 30820 ;;		On entry : 0/0
 30821 ;;		On exit  : 0/0
 30822 ;;		Unchanged: 0/0
 30823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30824 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30825 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30826 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30827 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30828 ;;Total ram usage:       15 bytes
 30829 ;; Hardware stack levels used:    1
 30830 ;; This function calls:
 30831 ;;		Nothing
 30832 ;; This function is called by:
 30833 ;;		i2_printf
 30834 ;; This function uses a non-reentrant model
 30835 ;;
 30836                           
 30837                           	psect	text97
 30838  016C02                     __ptext97:
 30839                           	opt stack 0
 30840  016C02                     i2__tdiv_to_l_:
 30841                           	opt stack 16
 30842                           
 30843                           ;incstack = 0
 30844  016C02  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 30845  016C06  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 30846  016C08  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 30847  016C0A  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 30848  016C0C  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 30849  016C0E  E301               	bnc	u1726_41
 30850  016C10  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 30851  016C12                     u1726_41:
 30852  016C12  5007               	movf	??i2__tdiv_to_l_,w,c
 30853  016C14  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 30854  016C16  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 30855  016C18  A4D8               	btfss	status,2,c
 30856  016C1A  D009               	goto	i2l1912
 30857  016C1C  0E00               	movlw	0
 30858  016C1E  6E01               	movwf	?i2__tdiv_to_l_,c
 30859  016C20  0E00               	movlw	0
 30860  016C22  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30861  016C24  0E00               	movlw	0
 30862  016C26  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30863  016C28  0E00               	movlw	0
 30864  016C2A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30865  016C2C  0012               	return	
 30866  016C2E                     i2l1912:
 30867  016C2E  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 30868  016C32  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 30869  016C34  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 30870  016C36  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 30871  016C38  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 30872  016C3A  E301               	bnc	u1728_41
 30873  016C3C  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 30874  016C3E                     u1728_41:
 30875  016C3E  5007               	movf	??i2__tdiv_to_l_,w,c
 30876  016C40  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 30877  016C42  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 30878  016C44  A4D8               	btfss	status,2,c
 30879  016C46  D009               	goto	i2l1914
 30880  016C48  0E00               	movlw	0
 30881  016C4A  6E01               	movwf	?i2__tdiv_to_l_,c
 30882  016C4C  0E00               	movlw	0
 30883  016C4E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30884  016C50  0E00               	movlw	0
 30885  016C52  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30886  016C54  0E00               	movlw	0
 30887  016C56  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30888  016C58  0012               	return	
 30889  016C5A                     i2l1914:
 30890  016C5A  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 30891  016C5C  0EFF               	movlw	255
 30892  016C5E  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 30893  016C60  0EFF               	movlw	255
 30894  016C62  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 30895  016C64  0E00               	movlw	0
 30896  016C66  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 30897  016C68  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 30898  016C6A  0EFF               	movlw	255
 30899  016C6C  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 30900  016C6E  0EFF               	movlw	255
 30901  016C70  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 30902  016C72  0E00               	movlw	0
 30903  016C74  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 30904  016C76  0E00               	movlw	0
 30905  016C78  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 30906  016C7A  0E00               	movlw	0
 30907  016C7C  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 30908  016C7E  0E00               	movlw	0
 30909  016C80  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 30910  016C82  0E00               	movlw	0
 30911  016C84  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 30912  016C86  0E7F               	movlw	127
 30913  016C88  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 30914  016C8A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 30915  016C8C  0F98               	addlw	152
 30916  016C8E  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 30917  016C90  0E18               	movlw	24
 30918  016C92  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 30919  016C94                     i2l1915:
 30920  016C94  90D8               	bcf	status,0,c
 30921  016C96  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 30922  016C98  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 30923  016C9A  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 30924  016C9C  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 30925  016C9E  5004               	movf	i2__tdiv_to_l_@f2,w,c
 30926  016CA0  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 30927  016CA2  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 30928  016CA4  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 30929  016CA6  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 30930  016CA8  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 30931  016CAA  A0D8               	btfss	status,0,c
 30932  016CAC  D007               	goto	i2l1916
 30933  016CAE  5004               	movf	i2__tdiv_to_l_@f2,w,c
 30934  016CB0  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 30935  016CB2  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 30936  016CB4  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 30937  016CB6  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 30938  016CB8  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 30939  016CBA  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 30940  016CBC                     i2l1916:
 30941  016CBC  90D8               	bcf	status,0,c
 30942  016CBE  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 30943  016CC0  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 30944  016CC2  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 30945  016CC4  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 30946  016CC6  D7E6               	goto	i2l1915
 30947  016CC8  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 30948  016CCA  D016               	goto	i2l1918
 30949  016CCC  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 30950  016CCE  0A80               	xorlw	128
 30951  016CD0  0F97               	addlw	151
 30952  016CD2  B0D8               	btfsc	status,0,c
 30953  016CD4  D009               	goto	i2l1919
 30954  016CD6  0E00               	movlw	0
 30955  016CD8  6E01               	movwf	?i2__tdiv_to_l_,c
 30956  016CDA  0E00               	movlw	0
 30957  016CDC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30958  016CDE  0E00               	movlw	0
 30959  016CE0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30960  016CE2  0E00               	movlw	0
 30961  016CE4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30962  016CE6  0012               	return	
 30963  016CE8                     i2l1919:
 30964  016CE8  90D8               	bcf	status,0,c
 30965  016CEA  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 30966  016CEC  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 30967  016CEE  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 30968  016CF0  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 30969  016CF2  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 30970  016CF4  D7F9               	goto	i2l1919
 30971  016CF6  D015               	goto	i2u1734_40
 30972  016CF8                     i2l1918:
 30973  016CF8  0E17               	movlw	23
 30974  016CFA  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 30975  016CFC  D00F               	goto	i2l1924
 30976  016CFE  0E00               	movlw	0
 30977  016D00  6E01               	movwf	?i2__tdiv_to_l_,c
 30978  016D02  0E00               	movlw	0
 30979  016D04  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30980  016D06  0E00               	movlw	0
 30981  016D08  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30982  016D0A  0E00               	movlw	0
 30983  016D0C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30984  016D0E  0012               	return	
 30985  016D10  90D8               	bcf	status,0,c
 30986  016D12  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 30987  016D14  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 30988  016D16  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 30989  016D18  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 30990  016D1A  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 30991  016D1C                     i2l1924:
 30992  016D1C  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 30993  016D1E  A4D8               	btfss	status,2,c
 30994  016D20  D7F7               	goto	i2l1925
 30995  016D22                     i2u1734_40:
 30996  016D22  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 30997  016D26  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 30998  016D2A  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 30999  016D2E  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 31000  016D32  0012               	return		;funcret
 31001  016D34                     __end_ofi2__tdiv_to_l_:
 31002                           	opt stack 0
 31003                           tosu	equ	0xFFF
 31004                           tosh	equ	0xFFE
 31005                           tosl	equ	0xFFD
 31006                           pclatu	equ	0xFFB
 31007                           pclath	equ	0xFFA
 31008                           tblptru	equ	0xFF8
 31009                           tblptrh	equ	0xFF7
 31010                           tblptrl	equ	0xFF6
 31011                           tablat	equ	0xFF5
 31012                           prodh	equ	0xFF4
 31013                           prodl	equ	0xFF3
 31014                           intcon	equ	0xFF2
 31015                           indf0	equ	0xFEF
 31016                           postinc0	equ	0xFEE
 31017                           fsr0h	equ	0xFEA
 31018                           fsr0l	equ	0xFE9
 31019                           wreg	equ	0xFE8
 31020                           indf1	equ	0xFE7
 31021                           postdec1	equ	0xFE5
 31022                           plusw1	equ	0xFE3
 31023                           fsr1h	equ	0xFE2
 31024                           fsr1l	equ	0xFE1
 31025                           bsr	equ	0xFE0
 31026                           indf2	equ	0xFDF
 31027                           postinc2	equ	0xFDE
 31028                           postdec2	equ	0xFDD
 31029                           plusw2	equ	0xFDB
 31030                           fsr2h	equ	0xFDA
 31031                           fsr2l	equ	0xFD9
 31032                           status	equ	0xFD8
 31033                           
 31034 ;; *************** function i2__div_to_l_ *****************
 31035 ;; Defined at:
 31036 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 31037 ;; Parameters:    Size  Location     Type
 31038 ;;  f1              4    0[COMRAM] unsigned long 
 31039 ;;  f2              4    4[COMRAM] unsigned long 
 31040 ;; Auto vars:     Size  Location     Type
 31041 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 31042 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 31043 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 31044 ;; Return value:  Size  Location     Type
 31045 ;;                  4    0[COMRAM] unsigned long 
 31046 ;; Registers used:
 31047 ;;		wreg, status,2, status,0
 31048 ;; Tracked objects:
 31049 ;;		On entry : 0/0
 31050 ;;		On exit  : 0/0
 31051 ;;		Unchanged: 0/0
 31052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31053 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31054 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31056 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31057 ;;Total ram usage:       14 bytes
 31058 ;; Hardware stack levels used:    1
 31059 ;; This function calls:
 31060 ;;		Nothing
 31061 ;; This function is called by:
 31062 ;;		i2_printf
 31063 ;; This function uses a non-reentrant model
 31064 ;;
 31065                           
 31066                           	psect	text98
 31067  016E5E                     __ptext98:
 31068                           	opt stack 0
 31069  016E5E                     i2__div_to_l_:
 31070                           	opt stack 16
 31071                           
 31072                           ;incstack = 0
 31073  016E5E  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 31074  016E60  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 31075  016E62  6E0E               	movwf	i2__div_to_l_@exp1,c
 31076  016E64  500E               	movf	i2__div_to_l_@exp1,w,c
 31077  016E66  A4D8               	btfss	status,2,c
 31078  016E68  D009               	goto	i2l1808
 31079  016E6A  0E00               	movlw	0
 31080  016E6C  6E01               	movwf	?i2__div_to_l_,c
 31081  016E6E  0E00               	movlw	0
 31082  016E70  6E02               	movwf	?i2__div_to_l_+1,c
 31083  016E72  0E00               	movlw	0
 31084  016E74  6E03               	movwf	?i2__div_to_l_+2,c
 31085  016E76  0E00               	movlw	0
 31086  016E78  6E04               	movwf	?i2__div_to_l_+3,c
 31087  016E7A  0012               	return	
 31088  016E7C                     i2l1808:
 31089  016E7C  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 31090  016E7E  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 31091  016E80  6E0D               	movwf	i2__div_to_l_@cntr,c
 31092  016E82  500D               	movf	i2__div_to_l_@cntr,w,c
 31093  016E84  A4D8               	btfss	status,2,c
 31094  016E86  D009               	goto	i2l1810
 31095  016E88  0E00               	movlw	0
 31096  016E8A  6E01               	movwf	?i2__div_to_l_,c
 31097  016E8C  0E00               	movlw	0
 31098  016E8E  6E02               	movwf	?i2__div_to_l_+1,c
 31099  016E90  0E00               	movlw	0
 31100  016E92  6E03               	movwf	?i2__div_to_l_+2,c
 31101  016E94  0E00               	movlw	0
 31102  016E96  6E04               	movwf	?i2__div_to_l_+3,c
 31103  016E98  0012               	return	
 31104  016E9A                     i2l1810:
 31105  016E9A  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 31106  016E9C  0EFF               	movlw	255
 31107  016E9E  1601               	andwf	i2__div_to_l_@f1,f,c
 31108  016EA0  0EFF               	movlw	255
 31109  016EA2  1602               	andwf	i2__div_to_l_@f1+1,f,c
 31110  016EA4  0EFF               	movlw	255
 31111  016EA6  1603               	andwf	i2__div_to_l_@f1+2,f,c
 31112  016EA8  0E00               	movlw	0
 31113  016EAA  1604               	andwf	i2__div_to_l_@f1+3,f,c
 31114  016EAC  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 31115  016EAE  0EFF               	movlw	255
 31116  016EB0  1605               	andwf	i2__div_to_l_@f2,f,c
 31117  016EB2  0EFF               	movlw	255
 31118  016EB4  1606               	andwf	i2__div_to_l_@f2+1,f,c
 31119  016EB6  0EFF               	movlw	255
 31120  016EB8  1607               	andwf	i2__div_to_l_@f2+2,f,c
 31121  016EBA  0E00               	movlw	0
 31122  016EBC  1608               	andwf	i2__div_to_l_@f2+3,f,c
 31123  016EBE  0E00               	movlw	0
 31124  016EC0  6E09               	movwf	i2__div_to_l_@quot,c
 31125  016EC2  0E00               	movlw	0
 31126  016EC4  6E0A               	movwf	i2__div_to_l_@quot+1,c
 31127  016EC6  0E00               	movlw	0
 31128  016EC8  6E0B               	movwf	i2__div_to_l_@quot+2,c
 31129  016ECA  0E00               	movlw	0
 31130  016ECC  6E0C               	movwf	i2__div_to_l_@quot+3,c
 31131  016ECE  0E7F               	movlw	127
 31132  016ED0  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 31133  016ED2  500D               	movf	i2__div_to_l_@cntr,w,c
 31134  016ED4  0FA0               	addlw	160
 31135  016ED6  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 31136  016ED8  0E20               	movlw	32
 31137  016EDA  6E0D               	movwf	i2__div_to_l_@cntr,c
 31138  016EDC  90D8               	bcf	status,0,c
 31139  016EDE  3609               	rlcf	i2__div_to_l_@quot,f,c
 31140  016EE0  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 31141  016EE2  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 31142  016EE4  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 31143  016EE6  5005               	movf	i2__div_to_l_@f2,w,c
 31144  016EE8  5C01               	subwf	i2__div_to_l_@f1,w,c
 31145  016EEA  5006               	movf	i2__div_to_l_@f2+1,w,c
 31146  016EEC  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 31147  016EEE  5007               	movf	i2__div_to_l_@f2+2,w,c
 31148  016EF0  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 31149  016EF2  5008               	movf	i2__div_to_l_@f2+3,w,c
 31150  016EF4  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 31151  016EF6  A0D8               	btfss	status,0,c
 31152  016EF8  D009               	goto	i2l1812
 31153  016EFA  5005               	movf	i2__div_to_l_@f2,w,c
 31154  016EFC  5E01               	subwf	i2__div_to_l_@f1,f,c
 31155  016EFE  5006               	movf	i2__div_to_l_@f2+1,w,c
 31156  016F00  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 31157  016F02  5007               	movf	i2__div_to_l_@f2+2,w,c
 31158  016F04  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 31159  016F06  5008               	movf	i2__div_to_l_@f2+3,w,c
 31160  016F08  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 31161  016F0A  8009               	bsf	i2__div_to_l_@quot,0,c
 31162  016F0C                     i2l1812:
 31163  016F0C  90D8               	bcf	status,0,c
 31164  016F0E  3601               	rlcf	i2__div_to_l_@f1,f,c
 31165  016F10  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 31166  016F12  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 31167  016F14  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 31168  016F16  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 31169  016F18  D7E1               	goto	i2l1811
 31170  016F1A  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 31171  016F1C  D016               	goto	i2l1814
 31172  016F1E  500E               	movf	i2__div_to_l_@exp1,w,c
 31173  016F20  0A80               	xorlw	128
 31174  016F22  0F9F               	addlw	159
 31175  016F24  B0D8               	btfsc	status,0,c
 31176  016F26  D009               	goto	i2l1815
 31177  016F28  0E00               	movlw	0
 31178  016F2A  6E01               	movwf	?i2__div_to_l_,c
 31179  016F2C  0E00               	movlw	0
 31180  016F2E  6E02               	movwf	?i2__div_to_l_+1,c
 31181  016F30  0E00               	movlw	0
 31182  016F32  6E03               	movwf	?i2__div_to_l_+2,c
 31183  016F34  0E00               	movlw	0
 31184  016F36  6E04               	movwf	?i2__div_to_l_+3,c
 31185  016F38  0012               	return	
 31186  016F3A                     i2l1815:
 31187  016F3A  90D8               	bcf	status,0,c
 31188  016F3C  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 31189  016F3E  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 31190  016F40  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 31191  016F42  3209               	rrcf	i2__div_to_l_@quot,f,c
 31192  016F44  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 31193  016F46  D7F9               	goto	i2l1815
 31194  016F48  D015               	goto	i2u1725_40
 31195  016F4A                     i2l1814:
 31196  016F4A  0E1F               	movlw	31
 31197  016F4C  640E               	cpfsgt	i2__div_to_l_@exp1,c
 31198  016F4E  D00F               	goto	i2l1820
 31199  016F50  0E00               	movlw	0
 31200  016F52  6E01               	movwf	?i2__div_to_l_,c
 31201  016F54  0E00               	movlw	0
 31202  016F56  6E02               	movwf	?i2__div_to_l_+1,c
 31203  016F58  0E00               	movlw	0
 31204  016F5A  6E03               	movwf	?i2__div_to_l_+2,c
 31205  016F5C  0E00               	movlw	0
 31206  016F5E  6E04               	movwf	?i2__div_to_l_+3,c
 31207  016F60  0012               	return	
 31208  016F62  90D8               	bcf	status,0,c
 31209  016F64  3609               	rlcf	i2__div_to_l_@quot,f,c
 31210  016F66  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 31211  016F68  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 31212  016F6A  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 31213  016F6C  060E               	decf	i2__div_to_l_@exp1,f,c
 31214  016F6E                     i2l1820:
 31215  016F6E  500E               	movf	i2__div_to_l_@exp1,w,c
 31216  016F70  A4D8               	btfss	status,2,c
 31217  016F72  D7F7               	goto	i2l1821
 31218  016F74                     i2u1725_40:
 31219  016F74  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 31220  016F78  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 31221  016F7C  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 31222  016F80  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 31223  016F84  0012               	return		;funcret
 31224  016F86                     __end_ofi2__div_to_l_:
 31225                           	opt stack 0
 31226                           tosu	equ	0xFFF
 31227                           tosh	equ	0xFFE
 31228                           tosl	equ	0xFFD
 31229                           pclatu	equ	0xFFB
 31230                           pclath	equ	0xFFA
 31231                           tblptru	equ	0xFF8
 31232                           tblptrh	equ	0xFF7
 31233                           tblptrl	equ	0xFF6
 31234                           tablat	equ	0xFF5
 31235                           prodh	equ	0xFF4
 31236                           prodl	equ	0xFF3
 31237                           intcon	equ	0xFF2
 31238                           indf0	equ	0xFEF
 31239                           postinc0	equ	0xFEE
 31240                           fsr0h	equ	0xFEA
 31241                           fsr0l	equ	0xFE9
 31242                           wreg	equ	0xFE8
 31243                           indf1	equ	0xFE7
 31244                           postdec1	equ	0xFE5
 31245                           plusw1	equ	0xFE3
 31246                           fsr1h	equ	0xFE2
 31247                           fsr1l	equ	0xFE1
 31248                           bsr	equ	0xFE0
 31249                           indf2	equ	0xFDF
 31250                           postinc2	equ	0xFDE
 31251                           postdec2	equ	0xFDD
 31252                           plusw2	equ	0xFDB
 31253                           fsr2h	equ	0xFDA
 31254                           fsr2l	equ	0xFD9
 31255                           status	equ	0xFD8
 31256                           
 31257 ;; *************** function i2___wmul *****************
 31258 ;; Defined at:
 31259 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 31260 ;; Parameters:    Size  Location     Type
 31261 ;;  multiplier      2    0[COMRAM] unsigned int 
 31262 ;;  multiplicand    2    2[COMRAM] unsigned int 
 31263 ;; Auto vars:     Size  Location     Type
 31264 ;;  __wmul          2    4[COMRAM] unsigned int 
 31265 ;; Return value:  Size  Location     Type
 31266 ;;                  2    0[COMRAM] unsigned int 
 31267 ;; Registers used:
 31268 ;;		wreg, status,2, status,0, prodl, prodh
 31269 ;; Tracked objects:
 31270 ;;		On entry : 0/0
 31271 ;;		On exit  : 0/0
 31272 ;;		Unchanged: 0/0
 31273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31278 ;;Total ram usage:        6 bytes
 31279 ;; Hardware stack levels used:    1
 31280 ;; This function calls:
 31281 ;;		Nothing
 31282 ;; This function is called by:
 31283 ;;		i2_printf
 31284 ;; This function uses a non-reentrant model
 31285 ;;
 31286                           
 31287                           	psect	text99
 31288  018A64                     __ptext99:
 31289                           	opt stack 0
 31290  018A64                     i2___wmul:
 31291                           	opt stack 16
 31292                           
 31293                           ;incstack = 0
 31294  018A64  5001               	movf	i2___wmul@multiplier,w,c
 31295  018A66  0203               	mulwf	i2___wmul@multiplicand,c
 31296  018A68  CFF3 F005          	movff	prodl,i2___wmul@product
 31297  018A6C  CFF4 F006          	movff	prodh,i2___wmul@product+1
 31298  018A70  5001               	movf	i2___wmul@multiplier,w,c
 31299  018A72  0204               	mulwf	i2___wmul@multiplicand+1,c
 31300  018A74  50F3               	movf	prodl,w,c
 31301  018A76  2606               	addwf	i2___wmul@product+1,f,c
 31302  018A78  5002               	movf	i2___wmul@multiplier+1,w,c
 31303  018A7A  0203               	mulwf	i2___wmul@multiplicand,c
 31304  018A7C  50F3               	movf	prodl,w,c
 31305  018A7E  2606               	addwf	i2___wmul@product+1,f,c
 31306  018A80  C005  F001         	movff	i2___wmul@product,?i2___wmul
 31307  018A84  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 31308  018A88  0012               	return	
 31309  018A8A                     __end_ofi2___wmul:
 31310                           	opt stack 0
 31311                           tosu	equ	0xFFF
 31312                           tosh	equ	0xFFE
 31313                           tosl	equ	0xFFD
 31314                           pclatu	equ	0xFFB
 31315                           pclath	equ	0xFFA
 31316                           tblptru	equ	0xFF8
 31317                           tblptrh	equ	0xFF7
 31318                           tblptrl	equ	0xFF6
 31319                           tablat	equ	0xFF5
 31320                           prodh	equ	0xFF4
 31321                           prodl	equ	0xFF3
 31322                           intcon	equ	0xFF2
 31323                           indf0	equ	0xFEF
 31324                           postinc0	equ	0xFEE
 31325                           fsr0h	equ	0xFEA
 31326                           fsr0l	equ	0xFE9
 31327                           wreg	equ	0xFE8
 31328                           indf1	equ	0xFE7
 31329                           postdec1	equ	0xFE5
 31330                           plusw1	equ	0xFE3
 31331                           fsr1h	equ	0xFE2
 31332                           fsr1l	equ	0xFE1
 31333                           bsr	equ	0xFE0
 31334                           indf2	equ	0xFDF
 31335                           postinc2	equ	0xFDE
 31336                           postdec2	equ	0xFDD
 31337                           plusw2	equ	0xFDB
 31338                           fsr2h	equ	0xFDA
 31339                           fsr2l	equ	0xFD9
 31340                           status	equ	0xFD8
 31341                           
 31342 ;; *************** function i2___llmod *****************
 31343 ;; Defined at:
 31344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 31345 ;; Parameters:    Size  Location     Type
 31346 ;;  dividend        4   13[COMRAM] unsigned long 
 31347 ;;  divisor         4   17[COMRAM] unsigned long 
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;  __llmod         1   21[COMRAM] unsigned char 
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  4   13[COMRAM] unsigned long 
 31352 ;; Registers used:
 31353 ;;		wreg, status,2, status,0
 31354 ;; Tracked objects:
 31355 ;;		On entry : 0/0
 31356 ;;		On exit  : 0/0
 31357 ;;		Unchanged: 0/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31359 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31362 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31363 ;;Total ram usage:        9 bytes
 31364 ;; Hardware stack levels used:    1
 31365 ;; This function calls:
 31366 ;;		Nothing
 31367 ;; This function is called by:
 31368 ;;		i2_printf
 31369 ;; This function uses a non-reentrant model
 31370 ;;
 31371                           
 31372                           	psect	text100
 31373  0180EC                     __ptext100:
 31374                           	opt stack 0
 31375  0180EC                     i2___llmod:
 31376                           	opt stack 16
 31377                           
 31378                           ;incstack = 0
 31379  0180EC  5012               	movf	i2___llmod@divisor,w,c
 31380  0180EE  1013               	iorwf	i2___llmod@divisor+1,w,c
 31381  0180F0  1014               	iorwf	i2___llmod@divisor+2,w,c
 31382  0180F2  1015               	iorwf	i2___llmod@divisor+3,w,c
 31383  0180F4  B4D8               	btfsc	status,2,c
 31384  0180F6  D024               	goto	i2l2013
 31385  0180F8  0E01               	movlw	1
 31386  0180FA  6E16               	movwf	i2___llmod@counter,c
 31387  0180FC  D006               	goto	i2l2008
 31388  0180FE  90D8               	bcf	status,0,c
 31389  018100  3612               	rlcf	i2___llmod@divisor,f,c
 31390  018102  3613               	rlcf	i2___llmod@divisor+1,f,c
 31391  018104  3614               	rlcf	i2___llmod@divisor+2,f,c
 31392  018106  3615               	rlcf	i2___llmod@divisor+3,f,c
 31393  018108  2A16               	incf	i2___llmod@counter,f,c
 31394  01810A                     i2l2008:
 31395  01810A  AE15               	btfss	i2___llmod@divisor+3,7,c
 31396  01810C  D7F8               	goto	i2l2009
 31397  01810E                     i2u1741_40:
 31398  01810E  5012               	movf	i2___llmod@divisor,w,c
 31399  018110  5C0E               	subwf	i2___llmod@dividend,w,c
 31400  018112  5013               	movf	i2___llmod@divisor+1,w,c
 31401  018114  580F               	subwfb	i2___llmod@dividend+1,w,c
 31402  018116  5014               	movf	i2___llmod@divisor+2,w,c
 31403  018118  5810               	subwfb	i2___llmod@dividend+2,w,c
 31404  01811A  5015               	movf	i2___llmod@divisor+3,w,c
 31405  01811C  5811               	subwfb	i2___llmod@dividend+3,w,c
 31406  01811E  A0D8               	btfss	status,0,c
 31407  018120  D008               	goto	i2l2012
 31408  018122  5012               	movf	i2___llmod@divisor,w,c
 31409  018124  5E0E               	subwf	i2___llmod@dividend,f,c
 31410  018126  5013               	movf	i2___llmod@divisor+1,w,c
 31411  018128  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 31412  01812A  5014               	movf	i2___llmod@divisor+2,w,c
 31413  01812C  5A10               	subwfb	i2___llmod@dividend+2,f,c
 31414  01812E  5015               	movf	i2___llmod@divisor+3,w,c
 31415  018130  5A11               	subwfb	i2___llmod@dividend+3,f,c
 31416  018132                     i2l2012:
 31417  018132  90D8               	bcf	status,0,c
 31418  018134  3215               	rrcf	i2___llmod@divisor+3,f,c
 31419  018136  3214               	rrcf	i2___llmod@divisor+2,f,c
 31420  018138  3213               	rrcf	i2___llmod@divisor+1,f,c
 31421  01813A  3212               	rrcf	i2___llmod@divisor,f,c
 31422  01813C  2E16               	decfsz	i2___llmod@counter,f,c
 31423  01813E  D7E7               	goto	i2u1741_40
 31424  018140                     i2l2013:
 31425  018140  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 31426  018144  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 31427  018148  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 31428  01814C  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 31429  018150  0012               	return		;funcret
 31430  018152                     __end_ofi2___llmod:
 31431                           	opt stack 0
 31432                           tosu	equ	0xFFF
 31433                           tosh	equ	0xFFE
 31434                           tosl	equ	0xFFD
 31435                           pclatu	equ	0xFFB
 31436                           pclath	equ	0xFFA
 31437                           tblptru	equ	0xFF8
 31438                           tblptrh	equ	0xFF7
 31439                           tblptrl	equ	0xFF6
 31440                           tablat	equ	0xFF5
 31441                           prodh	equ	0xFF4
 31442                           prodl	equ	0xFF3
 31443                           intcon	equ	0xFF2
 31444                           indf0	equ	0xFEF
 31445                           postinc0	equ	0xFEE
 31446                           fsr0h	equ	0xFEA
 31447                           fsr0l	equ	0xFE9
 31448                           wreg	equ	0xFE8
 31449                           indf1	equ	0xFE7
 31450                           postdec1	equ	0xFE5
 31451                           plusw1	equ	0xFE3
 31452                           fsr1h	equ	0xFE2
 31453                           fsr1l	equ	0xFE1
 31454                           bsr	equ	0xFE0
 31455                           indf2	equ	0xFDF
 31456                           postinc2	equ	0xFDE
 31457                           postdec2	equ	0xFDD
 31458                           plusw2	equ	0xFDB
 31459                           fsr2h	equ	0xFDA
 31460                           fsr2l	equ	0xFD9
 31461                           status	equ	0xFD8
 31462                           
 31463 ;; *************** function i2___lldiv *****************
 31464 ;; Defined at:
 31465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 31466 ;; Parameters:    Size  Location     Type
 31467 ;;  dividend        4    0[COMRAM] unsigned long 
 31468 ;;  divisor         4    4[COMRAM] unsigned long 
 31469 ;; Auto vars:     Size  Location     Type
 31470 ;;  __lldiv         4    8[COMRAM] unsigned long 
 31471 ;;  __lldiv         1   12[COMRAM] unsigned char 
 31472 ;; Return value:  Size  Location     Type
 31473 ;;                  4    0[COMRAM] unsigned long 
 31474 ;; Registers used:
 31475 ;;		wreg, status,2, status,0
 31476 ;; Tracked objects:
 31477 ;;		On entry : 0/0
 31478 ;;		On exit  : 0/0
 31479 ;;		Unchanged: 0/0
 31480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31481 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31482 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31484 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31485 ;;Total ram usage:       13 bytes
 31486 ;; Hardware stack levels used:    1
 31487 ;; This function calls:
 31488 ;;		Nothing
 31489 ;; This function is called by:
 31490 ;;		i2_printf
 31491 ;; This function uses a non-reentrant model
 31492 ;;
 31493                           
 31494                           	psect	text101
 31495  017CEA                     __ptext101:
 31496                           	opt stack 0
 31497  017CEA                     i2___lldiv:
 31498                           	opt stack 16
 31499                           
 31500                           ;incstack = 0
 31501  017CEA  0E00               	movlw	0
 31502  017CEC  6E09               	movwf	i2___lldiv@quotient,c
 31503  017CEE  0E00               	movlw	0
 31504  017CF0  6E0A               	movwf	i2___lldiv@quotient+1,c
 31505  017CF2  0E00               	movlw	0
 31506  017CF4  6E0B               	movwf	i2___lldiv@quotient+2,c
 31507  017CF6  0E00               	movlw	0
 31508  017CF8  6E0C               	movwf	i2___lldiv@quotient+3,c
 31509  017CFA  5005               	movf	i2___lldiv@divisor,w,c
 31510  017CFC  1006               	iorwf	i2___lldiv@divisor+1,w,c
 31511  017CFE  1007               	iorwf	i2___lldiv@divisor+2,w,c
 31512  017D00  1008               	iorwf	i2___lldiv@divisor+3,w,c
 31513  017D02  B4D8               	btfsc	status,2,c
 31514  017D04  D02A               	goto	i2l2003
 31515  017D06  0E01               	movlw	1
 31516  017D08  6E0D               	movwf	i2___lldiv@counter,c
 31517  017D0A  D006               	goto	i2l1998
 31518  017D0C  90D8               	bcf	status,0,c
 31519  017D0E  3605               	rlcf	i2___lldiv@divisor,f,c
 31520  017D10  3606               	rlcf	i2___lldiv@divisor+1,f,c
 31521  017D12  3607               	rlcf	i2___lldiv@divisor+2,f,c
 31522  017D14  3608               	rlcf	i2___lldiv@divisor+3,f,c
 31523  017D16  2A0D               	incf	i2___lldiv@counter,f,c
 31524  017D18                     i2l1998:
 31525  017D18  AE08               	btfss	i2___lldiv@divisor+3,7,c
 31526  017D1A  D7F8               	goto	i2l1999
 31527  017D1C                     i2u1738_40:
 31528  017D1C  90D8               	bcf	status,0,c
 31529  017D1E  3609               	rlcf	i2___lldiv@quotient,f,c
 31530  017D20  360A               	rlcf	i2___lldiv@quotient+1,f,c
 31531  017D22  360B               	rlcf	i2___lldiv@quotient+2,f,c
 31532  017D24  360C               	rlcf	i2___lldiv@quotient+3,f,c
 31533  017D26  5005               	movf	i2___lldiv@divisor,w,c
 31534  017D28  5C01               	subwf	i2___lldiv@dividend,w,c
 31535  017D2A  5006               	movf	i2___lldiv@divisor+1,w,c
 31536  017D2C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 31537  017D2E  5007               	movf	i2___lldiv@divisor+2,w,c
 31538  017D30  5803               	subwfb	i2___lldiv@dividend+2,w,c
 31539  017D32  5008               	movf	i2___lldiv@divisor+3,w,c
 31540  017D34  5804               	subwfb	i2___lldiv@dividend+3,w,c
 31541  017D36  A0D8               	btfss	status,0,c
 31542  017D38  D009               	goto	i2l2002
 31543  017D3A  5005               	movf	i2___lldiv@divisor,w,c
 31544  017D3C  5E01               	subwf	i2___lldiv@dividend,f,c
 31545  017D3E  5006               	movf	i2___lldiv@divisor+1,w,c
 31546  017D40  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 31547  017D42  5007               	movf	i2___lldiv@divisor+2,w,c
 31548  017D44  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 31549  017D46  5008               	movf	i2___lldiv@divisor+3,w,c
 31550  017D48  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 31551  017D4A  8009               	bsf	i2___lldiv@quotient,0,c
 31552  017D4C                     i2l2002:
 31553  017D4C  90D8               	bcf	status,0,c
 31554  017D4E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 31555  017D50  3207               	rrcf	i2___lldiv@divisor+2,f,c
 31556  017D52  3206               	rrcf	i2___lldiv@divisor+1,f,c
 31557  017D54  3205               	rrcf	i2___lldiv@divisor,f,c
 31558  017D56  2E0D               	decfsz	i2___lldiv@counter,f,c
 31559  017D58  D7E1               	goto	i2u1738_40
 31560  017D5A                     i2l2003:
 31561  017D5A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 31562  017D5E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 31563  017D62  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 31564  017D66  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 31565  017D6A  0012               	return		;funcret
 31566  017D6C                     __end_ofi2___lldiv:
 31567                           	opt stack 0
 31568                           tosu	equ	0xFFF
 31569                           tosh	equ	0xFFE
 31570                           tosl	equ	0xFFD
 31571                           pclatu	equ	0xFFB
 31572                           pclath	equ	0xFFA
 31573                           tblptru	equ	0xFF8
 31574                           tblptrh	equ	0xFF7
 31575                           tblptrl	equ	0xFF6
 31576                           tablat	equ	0xFF5
 31577                           prodh	equ	0xFF4
 31578                           prodl	equ	0xFF3
 31579                           intcon	equ	0xFF2
 31580                           indf0	equ	0xFEF
 31581                           postinc0	equ	0xFEE
 31582                           fsr0h	equ	0xFEA
 31583                           fsr0l	equ	0xFE9
 31584                           wreg	equ	0xFE8
 31585                           indf1	equ	0xFE7
 31586                           postdec1	equ	0xFE5
 31587                           plusw1	equ	0xFE3
 31588                           fsr1h	equ	0xFE2
 31589                           fsr1l	equ	0xFE1
 31590                           bsr	equ	0xFE0
 31591                           indf2	equ	0xFDF
 31592                           postinc2	equ	0xFDE
 31593                           postdec2	equ	0xFDD
 31594                           plusw2	equ	0xFDB
 31595                           fsr2h	equ	0xFDA
 31596                           fsr2l	equ	0xFD9
 31597                           status	equ	0xFD8
 31598                           
 31599 ;; *************** function _ADCC_ThresholdISR *****************
 31600 ;; Defined at:
 31601 ;;		line 298 in file "mcc_generated_files/adcc.c"
 31602 ;; Parameters:    Size  Location     Type
 31603 ;;		None
 31604 ;; Auto vars:     Size  Location     Type
 31605 ;;		None
 31606 ;; Return value:  Size  Location     Type
 31607 ;;                  1    wreg      void 
 31608 ;; Registers used:
 31609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31610 ;; Tracked objects:
 31611 ;;		On entry : 0/0
 31612 ;;		On exit  : 0/0
 31613 ;;		Unchanged: 0/0
 31614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31619 ;;Total ram usage:        0 bytes
 31620 ;; Hardware stack levels used:    1
 31621 ;; Hardware stack levels required when called:    7
 31622 ;; This function calls:
 31623 ;;		Absolute function
 31624 ;;		_ADCC_DefaultInterruptHandler
 31625 ;;		_ADCPostProcessingCallback
 31626 ;; This function is called by:
 31627 ;;		_INTERRUPT_InterruptManagerHigh
 31628 ;; This function uses a non-reentrant model
 31629 ;;
 31630                           
 31631                           	psect	text102
 31632  0189F0                     __ptext102:
 31633                           	opt stack 0
 31634  0189F0                     _ADCC_ThresholdISR:
 31635                           	opt stack 11
 31636                           
 31637                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 31638                           
 31639                           ;incstack = 0
 31640  0189F0  010E               	movlb	14	; () banked
 31641  0189F2  9334               	bcf	52,1,b	;volatile
 31642                           
 31643                           ; BSR set to: 14
 31644                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 31645  0189F4  0102               	movlb	2	; () banked
 31646  0189F6  5162               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31647  0189F8  1163               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31648  0189FA  1164               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31649  0189FC  B4D8               	btfsc	status,2,c
 31650  0189FE  0012               	return	
 31651                           
 31652                           ; BSR set to: 2
 31653                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 31654  018A00  D801               	call	i2u2609_48
 31655  018A02  0012               	return	
 31656  018A04                     i2u2609_48:
 31657  018A04  0005               	push	
 31658  018A06  6EFA               	movwf	pclath,c
 31659  018A08  5162               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31660  018A0A  6EFD               	movwf	tosl,c
 31661  018A0C  5163               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31662  018A0E  6EFE               	movwf	tosh,c
 31663  018A10  5164               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31664  018A12  6EFF               	movwf	tosu,c
 31665  018A14  50FA               	movf	pclath,w,c
 31666  018A16  0012               	return		;indir
 31667  018A18                     __end_of_ADCC_ThresholdISR:
 31668                           	opt stack 0
 31669                           tosu	equ	0xFFF
 31670                           tosh	equ	0xFFE
 31671                           tosl	equ	0xFFD
 31672                           pclatu	equ	0xFFB
 31673                           pclath	equ	0xFFA
 31674                           tblptru	equ	0xFF8
 31675                           tblptrh	equ	0xFF7
 31676                           tblptrl	equ	0xFF6
 31677                           tablat	equ	0xFF5
 31678                           prodh	equ	0xFF4
 31679                           prodl	equ	0xFF3
 31680                           intcon	equ	0xFF2
 31681                           indf0	equ	0xFEF
 31682                           postinc0	equ	0xFEE
 31683                           fsr0h	equ	0xFEA
 31684                           fsr0l	equ	0xFE9
 31685                           wreg	equ	0xFE8
 31686                           indf1	equ	0xFE7
 31687                           postdec1	equ	0xFE5
 31688                           plusw1	equ	0xFE3
 31689                           fsr1h	equ	0xFE2
 31690                           fsr1l	equ	0xFE1
 31691                           bsr	equ	0xFE0
 31692                           indf2	equ	0xFDF
 31693                           postinc2	equ	0xFDE
 31694                           postdec2	equ	0xFDD
 31695                           plusw2	equ	0xFDB
 31696                           fsr2h	equ	0xFDA
 31697                           fsr2l	equ	0xFD9
 31698                           status	equ	0xFD8
 31699                           
 31700 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31701 ;; Defined at:
 31702 ;;		line 310 in file "mcc_generated_files/adcc.c"
 31703 ;; Parameters:    Size  Location     Type
 31704 ;;		None
 31705 ;; Auto vars:     Size  Location     Type
 31706 ;;		None
 31707 ;; Return value:  Size  Location     Type
 31708 ;;                  1    wreg      void 
 31709 ;; Registers used:
 31710 ;;		None
 31711 ;; Tracked objects:
 31712 ;;		On entry : 0/0
 31713 ;;		On exit  : 0/0
 31714 ;;		Unchanged: 0/0
 31715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31720 ;;Total ram usage:        0 bytes
 31721 ;; Hardware stack levels used:    1
 31722 ;; This function calls:
 31723 ;;		Nothing
 31724 ;; This function is called by:
 31725 ;;		_ADCC_Initialize
 31726 ;;		_ADCC_ThresholdISR
 31727 ;; This function uses a non-reentrant model
 31728 ;;
 31729                           
 31730                           	psect	text103
 31731  018CF6                     __ptext103:
 31732                           	opt stack 0
 31733  018CF6                     _ADCC_DefaultInterruptHandler:
 31734                           	opt stack 17
 31735                           
 31736                           ;incstack = 0
 31737  018CF6  0012               	return		;funcret
 31738  018CF8                     __end_of_ADCC_DefaultInterruptHandler:
 31739                           	opt stack 0
 31740                           tosu	equ	0xFFF
 31741                           tosh	equ	0xFFE
 31742                           tosl	equ	0xFFD
 31743                           pclatu	equ	0xFFB
 31744                           pclath	equ	0xFFA
 31745                           tblptru	equ	0xFF8
 31746                           tblptrh	equ	0xFF7
 31747                           tblptrl	equ	0xFF6
 31748                           tablat	equ	0xFF5
 31749                           prodh	equ	0xFF4
 31750                           prodl	equ	0xFF3
 31751                           intcon	equ	0xFF2
 31752                           indf0	equ	0xFEF
 31753                           postinc0	equ	0xFEE
 31754                           fsr0h	equ	0xFEA
 31755                           fsr0l	equ	0xFE9
 31756                           wreg	equ	0xFE8
 31757                           indf1	equ	0xFE7
 31758                           postdec1	equ	0xFE5
 31759                           plusw1	equ	0xFE3
 31760                           fsr1h	equ	0xFE2
 31761                           fsr1l	equ	0xFE1
 31762                           bsr	equ	0xFE0
 31763                           indf2	equ	0xFDF
 31764                           postinc2	equ	0xFDE
 31765                           postdec2	equ	0xFDD
 31766                           plusw2	equ	0xFDB
 31767                           fsr2h	equ	0xFDA
 31768                           fsr2l	equ	0xFD9
 31769                           status	equ	0xFD8
 31770                           
 31771 ;; *************** function _ADCPostProcessingCallback *****************
 31772 ;; Defined at:
 31773 ;;		line 170 in file "main.c"
 31774 ;; Parameters:    Size  Location     Type
 31775 ;;		None
 31776 ;; Auto vars:     Size  Location     Type
 31777 ;;  current_adc_    1  117[BANK0 ] enum E17425
 31778 ;; Return value:  Size  Location     Type
 31779 ;;                  1    wreg      void 
 31780 ;; Registers used:
 31781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31782 ;; Tracked objects:
 31783 ;;		On entry : 0/0
 31784 ;;		On exit  : 0/0
 31785 ;;		Unchanged: 0/0
 31786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31788 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31790 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31791 ;;Total ram usage:       21 bytes
 31792 ;; Hardware stack levels used:    1
 31793 ;; Hardware stack levels required when called:    6
 31794 ;; This function calls:
 31795 ;;		_ADCC_GetConversionResult
 31796 ;;		_ADCC_GetFilterValue
 31797 ;;		_ADCC_HasAccumulatorOverflowed
 31798 ;;		_ADCC_StopConversion
 31799 ;;		_abs
 31800 ;;		_currentMeasuredToPeak
 31801 ;;		_peakToRMS
 31802 ;;		i2_TMR7_StopTimer
 31803 ;;		i2___fladd
 31804 ;;		i2___fldiv
 31805 ;;		i2___flge
 31806 ;;		i2___flmul
 31807 ;;		i2___flneg
 31808 ;;		i2___fltol
 31809 ;;		i2___xxtofl
 31810 ;; This function is called by:
 31811 ;;		_main
 31812 ;;		_ADCC_ThresholdISR
 31813 ;; This function uses a non-reentrant model
 31814 ;;
 31815                           
 31816                           	psect	text104
 31817  012AD0                     __ptext104:
 31818                           	opt stack 0
 31819  012AD0                     _ADCPostProcessingCallback:
 31820                           	opt stack 11
 31821                           
 31822                           ;main.c: 173: ADCC_StopConversion();
 31823                           
 31824                           ;incstack = 0
 31825  012AD0  EC76  F0C6         	call	_ADCC_StopConversion	;wreg free
 31826                           
 31827                           ;main.c: 176: adcc_channel_t current_adc_channel = ADPCH;
 31828  012AD4  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 31829                           
 31830                           ;main.c: 179: switch (current_adc_channel) {
 31831  012AD8  EF40  F09A         	goto	i2l969
 31832  012ADC                     
 31833                           ;main.c: 183: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 31834  012ADC  ECDF  F0C5         	call	_ADCC_GetConversionResult	;wreg free
 31835  012AE0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 31836  012AE4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 31837  012AE8  6A07               	clrf	i2___xxtofl@val+2,c
 31838  012AEA  6A08               	clrf	i2___xxtofl@val+3,c
 31839  012AEC  0E00               	movlw	0
 31840  012AEE  ECBF  F0B4         	call	i2___xxtofl
 31841  012AF2  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31842  012AF6  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 31843  012AFA  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 31844  012AFE  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 31845  012B02  0E0D               	movlw	13
 31846  012B04  6E34               	movwf	i2___flmul@a,c
 31847  012B06  0E68               	movlw	104
 31848  012B08  6E35               	movwf	i2___flmul@a+1,c
 31849  012B0A  0E53               	movlw	83
 31850  012B0C  6E36               	movwf	i2___flmul@a+2,c
 31851  012B0E  0E3B               	movlw	59
 31852  012B10  6E37               	movwf	i2___flmul@a+3,c
 31853  012B12  EC47  F0A2         	call	i2___flmul	;wreg free
 31854  012B16  C030  F1D3         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 31855  012B1A  C031  F1D4         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 31856  012B1E  C032  F1D5         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 31857  012B22  C033  F1D6         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 31858                           
 31859                           ;main.c: 185: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 31860  012B26  0E0A               	movlw	10
 31861  012B28  6E34               	movwf	i2___flge@ff1,c
 31862  012B2A  0ED7               	movlw	215
 31863  012B2C  6E35               	movwf	i2___flge@ff1+1,c
 31864  012B2E  0E23               	movlw	35
 31865  012B30  6E36               	movwf	i2___flge@ff1+2,c
 31866  012B32  0E3C               	movlw	60
 31867  012B34  6E37               	movwf	i2___flge@ff1+3,c
 31868  012B36  C1D3  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 31869  012B3A  C1D4  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 31870  012B3E  C1D5  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 31871  012B42  C1D6  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 31872  012B46  ECE6  F0B8         	call	i2___flge	;wreg free
 31873  012B4A  A0D8               	btfss	status,0,c
 31874  012B4C  D005               	goto	i2u1747_40
 31875  012B4E  EC53  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31876  012B52  0900               	iorlw	0
 31877  012B54  B4D8               	btfsc	status,2,c
 31878  012B56  D007               	goto	i2l971
 31879  012B58                     i2u1747_40:
 31880                           
 31881                           ;main.c: 187: LATFbits.LATF3 = 1;
 31882  012B58  867E               	bsf	3966,3,c	;volatile
 31883                           
 31884                           ;main.c: 188: adc_error_flag = 1;
 31885  012B5A  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31886                           
 31887                           ;main.c: 190: PIE5bits.TMR7IE = 0;
 31888  012B5C  010E               	movlb	14	; () banked
 31889  012B5E  9D2E               	bcf	46,6,b	;volatile
 31890                           
 31891                           ; BSR set to: 14
 31892                           ;main.c: 191: TMR7_StopTimer();
 31893  012B60  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 31894                           
 31895                           ;main.c: 192: return;
 31896  012B64  0012               	return	
 31897  012B66                     i2l971:
 31898                           
 31899                           ;main.c: 194: }
 31900                           ;main.c: 196: next_channel = channel_FVR_buf1;
 31901  012B66  0E3F               	movlw	63
 31902  012B68  0101               	movlb	1	; () banked
 31903  012B6A  6FE8               	movwf	_next_channel& (0+255),b
 31904                           
 31905                           ;main.c: 198: break;
 31906  012B6C  0012               	return	
 31907  012B6E                     
 31908                           ;main.c: 203: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 31909                           
 31910                           ; BSR set to: 1
 31911  012B6E  0E0D               	movlw	13
 31912  012B70  6E34               	movwf	i2___flmul@a,c
 31913  012B72  0E68               	movlw	104
 31914  012B74  6E35               	movwf	i2___flmul@a+1,c
 31915  012B76  0E53               	movlw	83
 31916  012B78  6E36               	movwf	i2___flmul@a+2,c
 31917  012B7A  0E3B               	movlw	59
 31918  012B7C  6E37               	movwf	i2___flmul@a+3,c
 31919  012B7E  ECDF  F0C5         	call	_ADCC_GetConversionResult	;wreg free
 31920  012B82  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 31921  012B86  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 31922  012B8A  6A07               	clrf	i2___xxtofl@val+2,c
 31923  012B8C  6A08               	clrf	i2___xxtofl@val+3,c
 31924  012B8E  0E00               	movlw	0
 31925  012B90  ECBF  F0B4         	call	i2___xxtofl
 31926  012B94  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31927  012B98  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 31928  012B9C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 31929  012BA0  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 31930  012BA4  EC47  F0A2         	call	i2___flmul	;wreg free
 31931  012BA8  C030  F056         	movff	?i2___flmul,i2___fladd@b
 31932  012BAC  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 31933  012BB0  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 31934  012BB4  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 31935  012BB8  C1D3  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 31936  012BBC  C1D4  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 31937  012BC0  C1D5  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 31938  012BC4  C1D6  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 31939  012BC8  EC8E  F0A5         	call	i2___fladd	;wreg free
 31940  012BCC  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 31941  012BD0  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 31942  012BD4  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 31943  012BD8  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 31944                           
 31945                           ;main.c: 204: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 31946  012BDC  0E6F               	movlw	111
 31947  012BDE  6E13               	movwf	i2___fldiv@b,c
 31948  012BE0  0E12               	movlw	18
 31949  012BE2  6E14               	movwf	i2___fldiv@b+1,c
 31950  012BE4  0E03               	movlw	3
 31951  012BE6  6E15               	movwf	i2___fldiv@b+2,c
 31952  012BE8  0E40               	movlw	64
 31953  012BEA  6E16               	movwf	i2___fldiv@b+3,c
 31954  012BEC  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 31955  012BF0  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 31956  012BF4  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 31957  012BF8  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 31958  012BFC  EC4E  F0AE         	call	i2___fldiv	;wreg free
 31959  012C00  C013  F258         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 31960  012C04  C014  F259         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 31961  012C08  C015  F25A         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 31962  012C0C  C016  F25B         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 31963                           
 31964                           ;main.c: 206: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 31965  012C10  0E00               	movlw	0
 31966  012C12  6E34               	movwf	i2___flge@ff1,c
 31967  012C14  0E00               	movlw	0
 31968  012C16  6E35               	movwf	i2___flge@ff1+1,c
 31969  012C18  0E20               	movlw	32
 31970  012C1A  6E36               	movwf	i2___flge@ff1+2,c
 31971  012C1C  0E40               	movlw	64
 31972  012C1E  6E37               	movwf	i2___flge@ff1+3,c
 31973  012C20  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 31974  012C24  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 31975  012C28  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 31976  012C2C  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 31977  012C30  ECE6  F0B8         	call	i2___flge	;wreg free
 31978  012C34  A0D8               	btfss	status,0,c
 31979  012C36  D019               	goto	i2u1750_40
 31980  012C38  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 31981  012C3C  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 31982  012C40  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 31983  012C44  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 31984  012C48  0E00               	movlw	0
 31985  012C4A  6E38               	movwf	i2___flge@ff2,c
 31986  012C4C  0E00               	movlw	0
 31987  012C4E  6E39               	movwf	i2___flge@ff2+1,c
 31988  012C50  0E00               	movlw	0
 31989  012C52  6E3A               	movwf	i2___flge@ff2+2,c
 31990  012C54  0E40               	movlw	64
 31991  012C56  6E3B               	movwf	i2___flge@ff2+3,c
 31992  012C58  ECE6  F0B8         	call	i2___flge	;wreg free
 31993  012C5C  A0D8               	btfss	status,0,c
 31994  012C5E  D005               	goto	i2u1750_40
 31995  012C60  EC53  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31996  012C64  0900               	iorlw	0
 31997  012C66  B4D8               	btfsc	status,2,c
 31998  012C68  D007               	goto	i2l977
 31999  012C6A                     i2u1750_40:
 32000                           
 32001                           ;main.c: 208: LATFbits.LATF3 = 1;
 32002  012C6A  867E               	bsf	3966,3,c	;volatile
 32003                           
 32004                           ;main.c: 209: adc_error_flag = 1;
 32005  012C6C  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32006                           
 32007                           ;main.c: 211: PIE5bits.TMR7IE = 0;
 32008  012C6E  010E               	movlb	14	; () banked
 32009  012C70  9D2E               	bcf	46,6,b	;volatile
 32010                           
 32011                           ; BSR set to: 14
 32012                           ;main.c: 212: TMR7_StopTimer();
 32013  012C72  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32014                           
 32015                           ;main.c: 213: return;
 32016  012C76  0012               	return	
 32017  012C78                     i2l977:
 32018                           
 32019                           ;main.c: 215: }
 32020                           ;main.c: 217: next_channel = POS3P3_ADC;
 32021  012C78  0E22               	movlw	34
 32022  012C7A  0101               	movlb	1	; () banked
 32023  012C7C  6FE8               	movwf	_next_channel& (0+255),b
 32024                           
 32025                           ;main.c: 219: break;
 32026  012C7E  0012               	return	
 32027  012C80                     
 32028                           ;main.c: 224: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 32029                           
 32030                           ; BSR set to: 1
 32031  012C80  C258  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 32032  012C84  C259  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 32033  012C88  C25A  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 32034  012C8C  C25B  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 32035  012C90  ECD5  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 32036  012C94  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 32037  012C98  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 32038  012C9C  6A07               	clrf	i2___xxtofl@val+2,c
 32039  012C9E  6A08               	clrf	i2___xxtofl@val+3,c
 32040  012CA0  0E00               	movlw	0
 32041  012CA2  ECBF  F0B4         	call	i2___xxtofl
 32042  012CA6  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 32043  012CAA  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 32044  012CAE  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 32045  012CB2  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 32046  012CB6  EC47  F0A2         	call	i2___flmul	;wreg free
 32047  012CBA  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4133
 32048  012CBE  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4133+1
 32049  012CC2  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4133+2
 32050  012CC6  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4133+3
 32051                           
 32052                           ;main.c: 224: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 32053  012CCA  C0D6  F030         	movff	_ADCPostProcessingCallback$4133,i2___flmul@b
 32054  012CCE  C0D7  F031         	movff	_ADCPostProcessingCallback$4133+1,i2___flmul@b+1
 32055  012CD2  C0D8  F032         	movff	_ADCPostProcessingCallback$4133+2,i2___flmul@b+2
 32056  012CD6  C0D9  F033         	movff	_ADCPostProcessingCallback$4133+3,i2___flmul@b+3
 32057  012CDA  0E0D               	movlw	13
 32058  012CDC  6E34               	movwf	i2___flmul@a,c
 32059  012CDE  0E68               	movlw	104
 32060  012CE0  6E35               	movwf	i2___flmul@a+1,c
 32061  012CE2  0ED3               	movlw	211
 32062  012CE4  6E36               	movwf	i2___flmul@a+2,c
 32063  012CE6  0E3B               	movlw	59
 32064  012CE8  6E37               	movwf	i2___flmul@a+3,c
 32065  012CEA  EC47  F0A2         	call	i2___flmul	;wreg free
 32066  012CEE  C030  F1CF         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 32067  012CF2  C031  F1D0         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 32068  012CF6  C032  F1D1         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 32069  012CFA  C033  F1D2         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 32070                           
 32071                           ;main.c: 226: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 32072  012CFE  0E00               	movlw	0
 32073  012D00  6E34               	movwf	i2___flge@ff1,c
 32074  012D02  0E00               	movlw	0
 32075  012D04  6E35               	movwf	i2___flge@ff1+1,c
 32076  012D06  0E60               	movlw	96
 32077  012D08  6E36               	movwf	i2___flge@ff1+2,c
 32078  012D0A  0E40               	movlw	64
 32079  012D0C  6E37               	movwf	i2___flge@ff1+3,c
 32080  012D0E  C1CF  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 32081  012D12  C1D0  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 32082  012D16  C1D1  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 32083  012D1A  C1D2  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 32084  012D1E  ECE6  F0B8         	call	i2___flge	;wreg free
 32085  012D22  A0D8               	btfss	status,0,c
 32086  012D24  D005               	goto	i2u1752_40
 32087  012D26  EC53  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32088  012D2A  0900               	iorlw	0
 32089  012D2C  B4D8               	btfsc	status,2,c
 32090  012D2E  D007               	goto	i2l981
 32091  012D30                     i2u1752_40:
 32092                           
 32093                           ;main.c: 228: LATFbits.LATF3 = 1;
 32094  012D30  867E               	bsf	3966,3,c	;volatile
 32095                           
 32096                           ;main.c: 229: adc_error_flag = 1;
 32097  012D32  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32098                           
 32099                           ;main.c: 231: PIE5bits.TMR7IE = 0;
 32100  012D34  010E               	movlb	14	; () banked
 32101  012D36  9D2E               	bcf	46,6,b	;volatile
 32102                           
 32103                           ; BSR set to: 14
 32104                           ;main.c: 232: TMR7_StopTimer();
 32105  012D38  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32106                           
 32107                           ;main.c: 233: return;
 32108  012D3C  0012               	return	
 32109  012D3E                     i2l981:
 32110                           
 32111                           ;main.c: 235: }
 32112                           ;main.c: 237: next_channel = ISNS_ADC;
 32113  012D3E  0E00               	movlw	0
 32114  012D40  0101               	movlb	1	; () banked
 32115  012D42  6FE8               	movwf	_next_channel& (0+255),b
 32116                           
 32117                           ;main.c: 239: break;
 32118  012D44  0012               	return	
 32119  012D46                     
 32120                           ;main.c: 244: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 32121                           
 32122                           ; BSR set to: 1
 32123  012D46  0E00               	movlw	0
 32124  012D48  6E17               	movwf	i2___fldiv@a,c
 32125  012D4A  0EC0               	movlw	192
 32126  012D4C  6E18               	movwf	i2___fldiv@a+1,c
 32127  012D4E  0E7F               	movlw	127
 32128  012D50  6E19               	movwf	i2___fldiv@a+2,c
 32129  012D52  0E44               	movlw	68
 32130  012D54  6E1A               	movwf	i2___fldiv@a+3,c
 32131  012D56  C1CF  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 32132  012D5A  C1D0  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 32133  012D5E  C1D1  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 32134  012D62  C1D2  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 32135  012D66  EC4E  F0AE         	call	i2___fldiv	;wreg free
 32136  012D6A  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 32137  012D6E  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 32138  012D72  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 32139  012D76  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 32140  012D7A  ECD5  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 32141  012D7E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 32142  012D82  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 32143  012D86  6A07               	clrf	i2___xxtofl@val+2,c
 32144  012D88  6A08               	clrf	i2___xxtofl@val+3,c
 32145  012D8A  0E00               	movlw	0
 32146  012D8C  ECBF  F0B4         	call	i2___xxtofl
 32147  012D90  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 32148  012D94  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 32149  012D98  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 32150  012D9C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 32151  012DA0  EC47  F0A2         	call	i2___flmul	;wreg free
 32152  012DA4  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4133
 32153  012DA8  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4133+1
 32154  012DAC  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4133+2
 32155  012DB0  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4133+3
 32156                           
 32157                           ;main.c: 244: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 32158  012DB4  C0D6  F030         	movff	_ADCPostProcessingCallback$4133,i2___flmul@b
 32159  012DB8  C0D7  F031         	movff	_ADCPostProcessingCallback$4133+1,i2___flmul@b+1
 32160  012DBC  C0D8  F032         	movff	_ADCPostProcessingCallback$4133+2,i2___flmul@b+2
 32161  012DC0  C0D9  F033         	movff	_ADCPostProcessingCallback$4133+3,i2___flmul@b+3
 32162  012DC4  0E35               	movlw	53
 32163  012DC6  6E34               	movwf	i2___flmul@a,c
 32164  012DC8  0E5E               	movlw	94
 32165  012DCA  6E35               	movwf	i2___flmul@a+1,c
 32166  012DCC  0EF2               	movlw	242
 32167  012DCE  6E36               	movwf	i2___flmul@a+2,c
 32168  012DD0  0E3F               	movlw	63
 32169  012DD2  6E37               	movwf	i2___flmul@a+3,c
 32170  012DD4  EC47  F0A2         	call	i2___flmul	;wreg free
 32171  012DD8  C030  F1C3         	movff	?i2___flmul,_Imeas	;volatile
 32172  012DDC  C031  F1C4         	movff	?i2___flmul+1,_Imeas+1	;volatile
 32173  012DE0  C032  F1C5         	movff	?i2___flmul+2,_Imeas+2	;volatile
 32174  012DE4  C033  F1C6         	movff	?i2___flmul+3,_Imeas+3	;volatile
 32175                           
 32176                           ;main.c: 248: if (LATGbits.LATG0 != 1) {
 32177  012DE8  B07F               	btfsc	3967,0,c	;volatile
 32178  012DEA  D128               	goto	i2l985
 32179                           
 32180                           ;main.c: 253: if (load_enable) {
 32181  012DEC  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 32182  012DEE  D0CD               	goto	i2l986
 32183                           
 32184                           ;main.c: 256: if (dimming_period < 0x7FEE) {
 32185  012DF0  0EEE               	movlw	238
 32186  012DF2  0100               	movlb	0	; () banked
 32187  012DF4  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 32188  012DF6  0E7F               	movlw	127
 32189  012DF8  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 32190  012DFA  B0D8               	btfsc	status,0,c
 32191  012DFC  D052               	goto	i2l987
 32192                           
 32193                           ; BSR set to: 0
 32194                           ;main.c: 258: Ipk = Imeas;
 32195  012DFE  C1C3  F1C7         	movff	_Imeas,_Ipk	;volatile
 32196  012E02  C1C4  F1C8         	movff	_Imeas+1,_Ipk+1	;volatile
 32197  012E06  C1C5  F1C9         	movff	_Imeas+2,_Ipk+2	;volatile
 32198  012E0A  C1C6  F1CA         	movff	_Imeas+3,_Ipk+3	;volatile
 32199                           
 32200                           ; BSR set to: 0
 32201                           ;main.c: 259: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32202  012E0E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32203  012E12  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32204  012E16  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32205  012E1A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32206  012E1E  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32207  012E22  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32208  012E26  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32209  012E2A  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32210  012E2E  ECFF  F0B0         	call	_peakToRMS	;wreg free
 32211  012E32  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4134
 32212  012E36  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4134+1
 32213  012E3A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4134+2
 32214  012E3E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4134+3
 32215                           
 32216                           ;main.c: 259: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32217  012E42  C2C8  F05A         	movff	_Irms_offset,i2___fladd@a
 32218  012E46  C2C9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 32219  012E4A  C2CA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 32220  012E4E  C2CB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 32221  012E52  C0DA  F056         	movff	_ADCPostProcessingCallback$4134,i2___fladd@b
 32222  012E56  C0DB  F057         	movff	_ADCPostProcessingCallback$4134+1,i2___fladd@b+1
 32223  012E5A  C0DC  F058         	movff	_ADCPostProcessingCallback$4134+2,i2___fladd@b+2
 32224  012E5E  C0DD  F059         	movff	_ADCPostProcessingCallback$4134+3,i2___fladd@b+3
 32225  012E62  EC8E  F0A5         	call	i2___fladd	;wreg free
 32226  012E66  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 32227  012E6A  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 32228  012E6E  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 32229  012E72  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 32230  012E76  ECEE  F0BA         	call	i2___fltol	;wreg free
 32231  012E7A  C06C  F076         	movff	?i2___fltol,abs@a
 32232  012E7E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 32233  012E82  ECBB  F0C4         	call	_abs	;wreg free
 32234  012E86  0100               	movlb	0	; () banked
 32235  012E88  C076  F005         	movff	?_abs,i2___xxtofl@val
 32236  012E8C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 32237  012E90  0E00               	movlw	0
 32238  012E92  BE06               	btfsc	i2___xxtofl@val+1,7,c
 32239  012E94  0EFF               	movlw	-1
 32240  012E96  6E07               	movwf	i2___xxtofl@val+2,c
 32241  012E98  6E08               	movwf	i2___xxtofl@val+3,c
 32242  012E9A  0E01               	movlw	1
 32243  012E9C  ECBF  F0B4         	call	i2___xxtofl
 32244  012EA0  D063               	goto	L17
 32245  012EA2                     i2l987:
 32246                           
 32247                           ;main.c: 264: else {
 32248                           ;main.c: 266: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 32249  012EA2  C1C3  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 32250  012EA6  C1C4  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 32251  012EAA  C1C5  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 32252  012EAE  C1C6  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 32253  012EB2  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 32254  012EB6  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 32255  012EBA  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 32256  012EBE  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 32257  012EC2  ECB6  F0BE         	call	_currentMeasuredToPeak	;wreg free
 32258  012EC6  C099  F1C7         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 32259  012ECA  C09A  F1C8         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 32260  012ECE  C09B  F1C9         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 32261  012ED2  C09C  F1CA         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 32262                           
 32263                           ;main.c: 267: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32264  012ED6  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32265  012EDA  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32266  012EDE  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32267  012EE2  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32268  012EE6  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32269  012EEA  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32270  012EEE  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32271  012EF2  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32272  012EF6  ECFF  F0B0         	call	_peakToRMS	;wreg free
 32273  012EFA  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4134
 32274  012EFE  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4134+1
 32275  012F02  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4134+2
 32276  012F06  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4134+3
 32277                           
 32278                           ;main.c: 267: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32279  012F0A  C2C8  F05A         	movff	_Irms_offset,i2___fladd@a
 32280  012F0E  C2C9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 32281  012F12  C2CA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 32282  012F16  C2CB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 32283  012F1A  C0DA  F056         	movff	_ADCPostProcessingCallback$4134,i2___fladd@b
 32284  012F1E  C0DB  F057         	movff	_ADCPostProcessingCallback$4134+1,i2___fladd@b+1
 32285  012F22  C0DC  F058         	movff	_ADCPostProcessingCallback$4134+2,i2___fladd@b+2
 32286  012F26  C0DD  F059         	movff	_ADCPostProcessingCallback$4134+3,i2___fladd@b+3
 32287  012F2A  EC8E  F0A5         	call	i2___fladd	;wreg free
 32288  012F2E  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 32289  012F32  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 32290  012F36  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 32291  012F3A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 32292  012F3E  ECEE  F0BA         	call	i2___fltol	;wreg free
 32293  012F42  C06C  F076         	movff	?i2___fltol,abs@a
 32294  012F46  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 32295  012F4A  ECBB  F0C4         	call	_abs	;wreg free
 32296  012F4E  0100               	movlb	0	; () banked
 32297  012F50  C076  F005         	movff	?_abs,i2___xxtofl@val
 32298  012F54  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 32299  012F58  0E00               	movlw	0
 32300  012F5A  BE06               	btfsc	i2___xxtofl@val+1,7,c
 32301  012F5C  0EFF               	movlw	-1
 32302  012F5E  6E07               	movwf	i2___xxtofl@val+2,c
 32303  012F60  6E08               	movwf	i2___xxtofl@val+3,c
 32304  012F62  0E01               	movlw	1
 32305  012F64  ECBF  F0B4         	call	i2___xxtofl
 32306  012F68                     L17:
 32307  012F68  C005  F0F6         	movff	?i2___xxtofl,_Irms	;volatile
 32308  012F6C  C006  F0F7         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 32309  012F70  C007  F0F8         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 32310  012F74  C008  F0F9         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 32311                           
 32312                           ;main.c: 269: }
 32313                           ;main.c: 271: Vpk = Vpk_const;
 32314  012F78  C2CC  F250         	movff	_Vpk_const,_Vpk	;volatile
 32315  012F7C  C2CD  F251         	movff	_Vpk_const+1,_Vpk+1	;volatile
 32316  012F80  C2CE  F252         	movff	_Vpk_const+2,_Vpk+2	;volatile
 32317  012F84  C2CF  F253         	movff	_Vpk_const+3,_Vpk+3	;volatile
 32318                           
 32319                           ;main.c: 273: }
 32320  012F88  D02C               	goto	i2l989
 32321  012F8A                     i2l986:
 32322                           
 32323                           ;main.c: 275: else {
 32324                           ;main.c: 277: Ipk = 0.0;
 32325  012F8A  0E00               	movlw	0
 32326  012F8C  0101               	movlb	1	; () banked
 32327  012F8E  6FC7               	movwf	_Ipk& (0+255),b	;volatile
 32328  012F90  0E00               	movlw	0
 32329  012F92  6FC8               	movwf	(_Ipk+1)& (0+255),b	;volatile
 32330  012F94  0E00               	movlw	0
 32331  012F96  6FC9               	movwf	(_Ipk+2)& (0+255),b	;volatile
 32332  012F98  0E00               	movlw	0
 32333  012F9A  6FCA               	movwf	(_Ipk+3)& (0+255),b	;volatile
 32334                           
 32335                           ;main.c: 278: Vpk = 0.0;
 32336  012F9C  0E00               	movlw	0
 32337  012F9E  0102               	movlb	2	; () banked
 32338  012FA0  6F50               	movwf	_Vpk& (0+255),b	;volatile
 32339  012FA2  0E00               	movlw	0
 32340  012FA4  6F51               	movwf	(_Vpk+1)& (0+255),b	;volatile
 32341  012FA6  0E00               	movlw	0
 32342  012FA8  6F52               	movwf	(_Vpk+2)& (0+255),b	;volatile
 32343  012FAA  0E00               	movlw	0
 32344  012FAC  6F53               	movwf	(_Vpk+3)& (0+255),b	;volatile
 32345                           
 32346                           ; BSR set to: 2
 32347                           ;main.c: 279: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 32348  012FAE  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32349  012FB2  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32350  012FB6  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32351  012FBA  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32352  012FBE  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32353  012FC2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32354  012FC6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32355  012FCA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32356  012FCE  ECFF  F0B0         	call	_peakToRMS	;wreg free
 32357  012FD2  C0B1  F0F6         	movff	?_peakToRMS,_Irms	;volatile
 32358  012FD6  C0B2  F0F7         	movff	?_peakToRMS+1,_Irms+1	;volatile
 32359  012FDA  C0B3  F0F8         	movff	?_peakToRMS+2,_Irms+2	;volatile
 32360  012FDE  C0B4  F0F9         	movff	?_peakToRMS+3,_Irms+3	;volatile
 32361  012FE2                     i2l989:
 32362                           
 32363                           ;main.c: 281: }
 32364                           ;main.c: 283: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 32365  012FE2  C250  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 32366  012FE6  C251  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 32367  012FEA  C252  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 32368  012FEE  C253  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 32369  012FF2  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32370  012FF6  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32371  012FFA  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32372  012FFE  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32373  013002  ECFF  F0B0         	call	_peakToRMS	;wreg free
 32374  013006  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 32375  01300A  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 32376  01300E  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 32377  013012  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 32378                           
 32379                           ;main.c: 284: Avg_Power = Vrms * Irms;
 32380  013016  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 32381  01301A  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 32382  01301E  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 32383  013022  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 32384  013026  C0F6  F034         	movff	_Irms,i2___flmul@a	;volatile
 32385  01302A  C0F7  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 32386  01302E  C0F8  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 32387  013032  C0F9  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 32388  013036  EC47  F0A2         	call	i2___flmul	;wreg free
 32389  01303A  D087               	goto	L18
 32390  01303C                     i2l985:
 32391                           
 32392                           ;main.c: 289: else {
 32393                           ;main.c: 291: Ipk = Imeas;
 32394  01303C  C1C3  F1C7         	movff	_Imeas,_Ipk	;volatile
 32395  013040  C1C4  F1C8         	movff	_Imeas+1,_Ipk+1	;volatile
 32396  013044  C1C5  F1C9         	movff	_Imeas+2,_Ipk+2	;volatile
 32397  013048  C1C6  F1CA         	movff	_Imeas+3,_Ipk+3	;volatile
 32398                           
 32399                           ;main.c: 292: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 32400  01304C  0E00               	movlw	0
 32401  01304E  0100               	movlb	0	; () banked
 32402  013050  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 32403  013052  0E00               	movlw	0
 32404  013054  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 32405  013056  0E00               	movlw	0
 32406  013058  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 32407  01305A  0E00               	movlw	0
 32408  01305C  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 32409  01305E  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32410  013062  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32411  013066  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32412  01306A  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32413  01306E  ECFF  F0B0         	call	_peakToRMS	;wreg free
 32414  013072  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4134
 32415  013076  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4134+1
 32416  01307A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4134+2
 32417  01307E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4134+3
 32418                           
 32419                           ;main.c: 292: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 32420  013082  C2C8  F05A         	movff	_Irms_offset,i2___fladd@a
 32421  013086  C2C9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 32422  01308A  C2CA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 32423  01308E  C2CB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 32424  013092  C0DA  F056         	movff	_ADCPostProcessingCallback$4134,i2___fladd@b
 32425  013096  C0DB  F057         	movff	_ADCPostProcessingCallback$4134+1,i2___fladd@b+1
 32426  01309A  C0DC  F058         	movff	_ADCPostProcessingCallback$4134+2,i2___fladd@b+2
 32427  01309E  C0DD  F059         	movff	_ADCPostProcessingCallback$4134+3,i2___fladd@b+3
 32428  0130A2  EC8E  F0A5         	call	i2___fladd	;wreg free
 32429  0130A6  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 32430  0130AA  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 32431  0130AE  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 32432  0130B2  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 32433  0130B6  ECEE  F0BA         	call	i2___fltol	;wreg free
 32434  0130BA  C06C  F076         	movff	?i2___fltol,abs@a
 32435  0130BE  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 32436  0130C2  ECBB  F0C4         	call	_abs	;wreg free
 32437  0130C6  0100               	movlb	0	; () banked
 32438  0130C8  C076  F005         	movff	?_abs,i2___xxtofl@val
 32439  0130CC  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 32440  0130D0  0E00               	movlw	0
 32441  0130D2  BE06               	btfsc	i2___xxtofl@val+1,7,c
 32442  0130D4  0EFF               	movlw	-1
 32443  0130D6  6E07               	movwf	i2___xxtofl@val+2,c
 32444  0130D8  6E08               	movwf	i2___xxtofl@val+3,c
 32445  0130DA  0E01               	movlw	1
 32446  0130DC  ECBF  F0B4         	call	i2___xxtofl
 32447  0130E0  C005  F0F6         	movff	?i2___xxtofl,_Irms	;volatile
 32448  0130E4  C006  F0F7         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 32449  0130E8  C007  F0F8         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 32450  0130EC  C008  F0F9         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 32451                           
 32452                           ;main.c: 293: Vrms = peakToRMS(Vpk_const, 0.0);
 32453  0130F0  C2CC  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 32454  0130F4  C2CD  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 32455  0130F8  C2CE  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 32456  0130FC  C2CF  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 32457  013100  0E00               	movlw	0
 32458  013102  0100               	movlb	0	; () banked
 32459  013104  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 32460  013106  0E00               	movlw	0
 32461  013108  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 32462  01310A  0E00               	movlw	0
 32463  01310C  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 32464  01310E  0E00               	movlw	0
 32465  013110  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 32466  013112  ECFF  F0B0         	call	_peakToRMS	;wreg free
 32467  013116  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 32468  01311A  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 32469  01311E  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 32470  013122  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 32471                           
 32472                           ;main.c: 294: Avg_Power = Vrms * Irms;
 32473  013126  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 32474  01312A  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 32475  01312E  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 32476  013132  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 32477  013136  C0F6  F034         	movff	_Irms,i2___flmul@a	;volatile
 32478  01313A  C0F7  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 32479  01313E  C0F8  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 32480  013142  C0F9  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 32481  013146  EC47  F0A2         	call	i2___flmul	;wreg free
 32482  01314A                     L18:
 32483  01314A  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 32484  01314E  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 32485  013152  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 32486  013156  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 32487                           
 32488                           ;main.c: 296: }
 32489                           ;main.c: 298: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 32490  01315A  0E00               	movlw	0
 32491  01315C  6E34               	movwf	i2___flge@ff1,c
 32492  01315E  0E00               	movlw	0
 32493  013160  6E35               	movwf	i2___flge@ff1+1,c
 32494  013162  0EA0               	movlw	160
 32495  013164  6E36               	movwf	i2___flge@ff1+2,c
 32496  013166  0E40               	movlw	64
 32497  013168  6E37               	movwf	i2___flge@ff1+3,c
 32498  01316A  C0F6  F038         	movff	_Irms,i2___flge@ff2	;volatile
 32499  01316E  C0F7  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 32500  013172  C0F8  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 32501  013176  C0F9  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 32502  01317A  ECE6  F0B8         	call	i2___flge	;wreg free
 32503  01317E  A0D8               	btfss	status,0,c
 32504  013180  D005               	goto	i2u1757_40
 32505  013182  EC53  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32506  013186  0900               	iorlw	0
 32507  013188  B4D8               	btfsc	status,2,c
 32508  01318A  D007               	goto	i2l991
 32509  01318C                     i2u1757_40:
 32510                           
 32511                           ;main.c: 300: LATFbits.LATF3 = 1;
 32512  01318C  867E               	bsf	3966,3,c	;volatile
 32513                           
 32514                           ;main.c: 301: adc_error_flag = 1;
 32515  01318E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32516                           
 32517                           ;main.c: 303: PIE5bits.TMR7IE = 0;
 32518  013190  010E               	movlb	14	; () banked
 32519  013192  9D2E               	bcf	46,6,b	;volatile
 32520                           
 32521                           ; BSR set to: 14
 32522                           ;main.c: 304: TMR7_StopTimer();
 32523  013194  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32524                           
 32525                           ;main.c: 305: return;
 32526  013198  0012               	return	
 32527  01319A                     i2l991:
 32528                           
 32529                           ;main.c: 307: }
 32530                           ;main.c: 309: next_channel = POS12_ADC;
 32531  01319A  0E04               	movlw	4
 32532  01319C  0101               	movlb	1	; () banked
 32533  01319E  6FE8               	movwf	_next_channel& (0+255),b
 32534                           
 32535                           ;main.c: 311: break;
 32536  0131A0  0012               	return	
 32537  0131A2                     
 32538                           ;main.c: 316: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 32539                           
 32540                           ; BSR set to: 1
 32541  0131A2  0E00               	movlw	0
 32542  0131A4  6E17               	movwf	i2___fldiv@a,c
 32543  0131A6  0EC0               	movlw	192
 32544  0131A8  6E18               	movwf	i2___fldiv@a+1,c
 32545  0131AA  0E7F               	movlw	127
 32546  0131AC  6E19               	movwf	i2___fldiv@a+2,c
 32547  0131AE  0E44               	movlw	68
 32548  0131B0  6E1A               	movwf	i2___fldiv@a+3,c
 32549  0131B2  C1CF  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 32550  0131B6  C1D0  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 32551  0131BA  C1D1  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 32552  0131BE  C1D2  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 32553  0131C2  EC4E  F0AE         	call	i2___fldiv	;wreg free
 32554  0131C6  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 32555  0131CA  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 32556  0131CE  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 32557  0131D2  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 32558  0131D6  ECD5  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 32559  0131DA  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 32560  0131DE  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 32561  0131E2  6A07               	clrf	i2___xxtofl@val+2,c
 32562  0131E4  6A08               	clrf	i2___xxtofl@val+3,c
 32563  0131E6  0E00               	movlw	0
 32564  0131E8  ECBF  F0B4         	call	i2___xxtofl
 32565  0131EC  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 32566  0131F0  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 32567  0131F4  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 32568  0131F8  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 32569  0131FC  EC47  F0A2         	call	i2___flmul	;wreg free
 32570  013200  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4133
 32571  013204  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4133+1
 32572  013208  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4133+2
 32573  01320C  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4133+3
 32574                           
 32575                           ;main.c: 316: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 32576  013210  C0D6  F030         	movff	_ADCPostProcessingCallback$4133,i2___flmul@b
 32577  013214  C0D7  F031         	movff	_ADCPostProcessingCallback$4133+1,i2___flmul@b+1
 32578  013218  C0D8  F032         	movff	_ADCPostProcessingCallback$4133+2,i2___flmul@b+2
 32579  01321C  C0D9  F033         	movff	_ADCPostProcessingCallback$4133+3,i2___flmul@b+3
 32580  013220  0E3E               	movlw	62
 32581  013222  6E34               	movwf	i2___flmul@a,c
 32582  013224  0EF8               	movlw	248
 32583  013226  6E35               	movwf	i2___flmul@a+1,c
 32584  013228  0E80               	movlw	128
 32585  01322A  6E36               	movwf	i2___flmul@a+2,c
 32586  01322C  0E40               	movlw	64
 32587  01322E  6E37               	movwf	i2___flmul@a+3,c
 32588  013230  EC47  F0A2         	call	i2___flmul	;wreg free
 32589  013234  C030  F1CB         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 32590  013238  C031  F1CC         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 32591  01323C  C032  F1CD         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 32592  013240  C033  F1CE         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 32593                           
 32594                           ;main.c: 318: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 32595  013244  0E9A               	movlw	154
 32596  013246  6E34               	movwf	i2___flge@ff1,c
 32597  013248  0E99               	movlw	153
 32598  01324A  6E35               	movwf	i2___flge@ff1+1,c
 32599  01324C  0E59               	movlw	89
 32600  01324E  6E36               	movwf	i2___flge@ff1+2,c
 32601  013250  0E41               	movlw	65
 32602  013252  6E37               	movwf	i2___flge@ff1+3,c
 32603  013254  C1CB  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 32604  013258  C1CC  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 32605  01325C  C1CD  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 32606  013260  C1CE  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 32607  013264  ECE6  F0B8         	call	i2___flge	;wreg free
 32608  013268  A0D8               	btfss	status,0,c
 32609  01326A  D005               	goto	i2u1759_40
 32610  01326C  EC53  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32611  013270  0900               	iorlw	0
 32612  013272  B4D8               	btfsc	status,2,c
 32613  013274  D007               	goto	i2l995
 32614  013276                     i2u1759_40:
 32615                           
 32616                           ;main.c: 320: LATFbits.LATF3 = 1;
 32617  013276  867E               	bsf	3966,3,c	;volatile
 32618                           
 32619                           ;main.c: 321: adc_error_flag = 1;
 32620  013278  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32621                           
 32622                           ;main.c: 323: PIE5bits.TMR7IE = 0;
 32623  01327A  010E               	movlb	14	; () banked
 32624  01327C  9D2E               	bcf	46,6,b	;volatile
 32625                           
 32626                           ; BSR set to: 14
 32627                           ;main.c: 324: TMR7_StopTimer();
 32628  01327E  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32629                           
 32630                           ;main.c: 325: return;
 32631  013282  0012               	return	
 32632  013284                     i2l995:
 32633                           
 32634                           ;main.c: 327: }
 32635                           ;main.c: 329: next_channel = channel_Temp;
 32636  013284  0E3D               	movlw	61
 32637  013286  0101               	movlb	1	; () banked
 32638  013288  6FE8               	movwf	_next_channel& (0+255),b
 32639                           
 32640                           ;main.c: 331: break;
 32641  01328A  0012               	return	
 32642  01328C                     
 32643                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32644                           
 32645                           ; BSR set to: 1
 32646  01328C  0E00               	movlw	0
 32647  01328E  6E17               	movwf	i2___fldiv@a,c
 32648  013290  0E00               	movlw	0
 32649  013292  6E18               	movwf	i2___fldiv@a+1,c
 32650  013294  0E00               	movlw	0
 32651  013296  6E19               	movwf	i2___fldiv@a+2,c
 32652  013298  0E40               	movlw	64
 32653  01329A  6E1A               	movwf	i2___fldiv@a+3,c
 32654  01329C  C1CF  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 32655  0132A0  C1D0  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 32656  0132A4  C1D1  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 32657  0132A8  C1D2  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 32658  0132AC  EC4E  F0AE         	call	i2___fldiv	;wreg free
 32659  0132B0  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 32660  0132B4  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 32661  0132B8  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 32662  0132BC  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 32663  0132C0  0E00               	movlw	0
 32664  0132C2  6E5A               	movwf	i2___fladd@a,c
 32665  0132C4  0E00               	movlw	0
 32666  0132C6  6E5B               	movwf	i2___fladd@a+1,c
 32667  0132C8  0E80               	movlw	128
 32668  0132CA  6E5C               	movwf	i2___fladd@a+2,c
 32669  0132CC  0E3F               	movlw	63
 32670  0132CE  6E5D               	movwf	i2___fladd@a+3,c
 32671  0132D0  0E00               	movlw	0
 32672  0132D2  6E17               	movwf	i2___fldiv@a,c
 32673  0132D4  0EC0               	movlw	192
 32674  0132D6  6E18               	movwf	i2___fldiv@a+1,c
 32675  0132D8  0E7F               	movlw	127
 32676  0132DA  6E19               	movwf	i2___fldiv@a+2,c
 32677  0132DC  0E44               	movlw	68
 32678  0132DE  6E1A               	movwf	i2___fldiv@a+3,c
 32679  0132E0  ECD5  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 32680  0132E4  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 32681  0132E8  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 32682  0132EC  6A07               	clrf	i2___xxtofl@val+2,c
 32683  0132EE  6A08               	clrf	i2___xxtofl@val+3,c
 32684  0132F0  0E00               	movlw	0
 32685  0132F2  ECBF  F0B4         	call	i2___xxtofl
 32686  0132F6  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 32687  0132FA  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 32688  0132FE  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 32689  013302  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 32690  013306  EC4E  F0AE         	call	i2___fldiv	;wreg free
 32691  01330A  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 32692  01330E  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 32693  013312  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 32694  013316  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 32695  01331A  ECA4  F0C4         	call	i2___flneg	;wreg free
 32696  01331E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32697  013322  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32698  013326  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32699  01332A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32700  01332E  EC8E  F0A5         	call	i2___fladd	;wreg free
 32701  013332  C056  F030         	movff	?i2___fladd,i2___flmul@b
 32702  013336  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 32703  01333A  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 32704  01333E  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 32705  013342  EC47  F0A2         	call	i2___flmul	;wreg free
 32706  013346  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4135
 32707  01334A  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4135+1
 32708  01334E  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4135+2
 32709  013352  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4135+3
 32710                           
 32711                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32712  013356  0EDA               	movlw	218
 32713  013358  6E17               	movwf	i2___fldiv@a,c
 32714  01335A  0E03               	movlw	3
 32715  01335C  6E18               	movwf	i2___fldiv@a+1,c
 32716  01335E  0EAD               	movlw	173
 32717  013360  6E19               	movwf	i2___fldiv@a+2,c
 32718  013362  0E3A               	movlw	58
 32719  013364  6E1A               	movwf	i2___fldiv@a+3,c
 32720  013366  0E39               	movlw	57
 32721  013368  6E5A               	movwf	i2___fladd@a,c
 32722  01336A  0EB4               	movlw	180
 32723  01336C  6E5B               	movwf	i2___fladd@a+1,c
 32724  01336E  0E28               	movlw	40
 32725  013370  6E5C               	movwf	i2___fladd@a+2,c
 32726  013372  0E3F               	movlw	63
 32727  013374  6E5D               	movwf	i2___fladd@a+3,c
 32728  013376  C0C9  F02C         	movff	_ADCPostProcessingCallback$4135,i2___flneg@f1
 32729  01337A  C0CA  F02D         	movff	_ADCPostProcessingCallback$4135+1,i2___flneg@f1+1
 32730  01337E  C0CB  F02E         	movff	_ADCPostProcessingCallback$4135+2,i2___flneg@f1+2
 32731  013382  C0CC  F02F         	movff	_ADCPostProcessingCallback$4135+3,i2___flneg@f1+3
 32732  013386  ECA4  F0C4         	call	i2___flneg	;wreg free
 32733  01338A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32734  01338E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32735  013392  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32736  013396  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32737  01339A  EC8E  F0A5         	call	i2___fladd	;wreg free
 32738  01339E  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 32739  0133A2  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 32740  0133A6  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 32741  0133AA  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 32742  0133AE  EC4E  F0AE         	call	i2___fldiv	;wreg free
 32743  0133B2  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4136
 32744  0133B6  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4136+1
 32745  0133BA  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4136+2
 32746  0133BE  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4136+3
 32747                           
 32748                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32749  0133C2  C2D0  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 32750  0133C6  C2D1  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 32751  0133CA  C2D2  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 32752  0133CE  C2D3  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 32753  0133D2  C0CD  F056         	movff	_ADCPostProcessingCallback$4136,i2___fladd@b
 32754  0133D6  C0CE  F057         	movff	_ADCPostProcessingCallback$4136+1,i2___fladd@b+1
 32755  0133DA  C0CF  F058         	movff	_ADCPostProcessingCallback$4136+2,i2___fladd@b+2
 32756  0133DE  C0D0  F059         	movff	_ADCPostProcessingCallback$4136+3,i2___fladd@b+3
 32757  0133E2  EC8E  F0A5         	call	i2___fladd	;wreg free
 32758  0133E6  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4137
 32759  0133EA  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4137+1
 32760  0133EE  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4137+2
 32761  0133F2  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4137+3
 32762                           
 32763                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32764  0133F6  C0D1  F056         	movff	_ADCPostProcessingCallback$4137,i2___fladd@b
 32765  0133FA  C0D2  F057         	movff	_ADCPostProcessingCallback$4137+1,i2___fladd@b+1
 32766  0133FE  C0D3  F058         	movff	_ADCPostProcessingCallback$4137+2,i2___fladd@b+2
 32767  013402  C0D4  F059         	movff	_ADCPostProcessingCallback$4137+3,i2___fladd@b+3
 32768  013406  0E00               	movlw	0
 32769  013408  6E5A               	movwf	i2___fladd@a,c
 32770  01340A  0E00               	movlw	0
 32771  01340C  6E5B               	movwf	i2___fladd@a+1,c
 32772  01340E  0E20               	movlw	32
 32773  013410  6E5C               	movwf	i2___fladd@a+2,c
 32774  013412  0EC2               	movlw	194
 32775  013414  6E5D               	movwf	i2___fladd@a+3,c
 32776  013416  EC8E  F0A5         	call	i2___fladd	;wreg free
 32777  01341A  C056  F254         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 32778  01341E  C057  F255         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 32779  013422  C058  F256         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 32780  013426  C059  F257         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 32781                           
 32782                           ;main.c: 338: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 32783  01342A  0E00               	movlw	0
 32784  01342C  6E34               	movwf	i2___flge@ff1,c
 32785  01342E  0E00               	movlw	0
 32786  013430  6E35               	movwf	i2___flge@ff1+1,c
 32787  013432  0E20               	movlw	32
 32788  013434  6E36               	movwf	i2___flge@ff1+2,c
 32789  013436  0E42               	movlw	66
 32790  013438  6E37               	movwf	i2___flge@ff1+3,c
 32791  01343A  C254  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 32792  01343E  C255  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 32793  013442  C256  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 32794  013446  C257  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 32795  01344A  ECE6  F0B8         	call	i2___flge	;wreg free
 32796  01344E  A0D8               	btfss	status,0,c
 32797  013450  D005               	goto	i2u1761_40
 32798  013452  EC53  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32799  013456  0900               	iorlw	0
 32800  013458  B4D8               	btfsc	status,2,c
 32801  01345A  D007               	goto	i2l999
 32802  01345C                     i2u1761_40:
 32803                           
 32804                           ;main.c: 340: LATFbits.LATF3 = 1;
 32805  01345C  867E               	bsf	3966,3,c	;volatile
 32806                           
 32807                           ;main.c: 341: adc_error_flag = 1;
 32808  01345E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32809                           
 32810                           ;main.c: 343: PIE5bits.TMR7IE = 0;
 32811  013460  010E               	movlb	14	; () banked
 32812  013462  9D2E               	bcf	46,6,b	;volatile
 32813                           
 32814                           ; BSR set to: 14
 32815                           ;main.c: 344: TMR7_StopTimer();
 32816  013464  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32817                           
 32818                           ;main.c: 345: return;
 32819  013468  0012               	return	
 32820  01346A                     i2l999:
 32821                           
 32822                           ;main.c: 347: }
 32823                           ;main.c: 349: next_channel = channel_VSS;
 32824  01346A  0E3C               	movlw	60
 32825  01346C  0101               	movlb	1	; () banked
 32826  01346E  6FE8               	movwf	_next_channel& (0+255),b
 32827                           
 32828                           ;main.c: 351: break;
 32829  013470  0012               	return	
 32830  013472                     i2l1002:
 32831                           
 32832                           ; BSR set to: 0
 32833                           ;main.c: 356: LATFbits.LATF3 = 1;
 32834  013472  867E               	bsf	3966,3,c	;volatile
 32835                           
 32836                           ;main.c: 357: adc_error_flag = 1;
 32837  013474  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32838                           
 32839                           ; BSR set to: 0
 32840                           ;main.c: 359: PIE5bits.TMR7IE == 0;
 32841  013476  010E               	movlb	14	; () banked
 32842  013478  512E               	movf	46,w,b	;volatile
 32843                           
 32844                           ; BSR set to: 14
 32845                           ;main.c: 360: TMR7_StopTimer();
 32846  01347A  EC73  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32847                           
 32848                           ;main.c: 363: }
 32849                           
 32850                           ;main.c: 361: break;
 32851  01347E  0012               	return	
 32852  013480                     i2l969:
 32853  013480  0100               	movlb	0	; () banked
 32854  013482  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 32855                           
 32856                           ; Switch size 1, requested type "space"
 32857                           ; Number of cases is 6, Range of values is 0 to 63
 32858                           ; switch strategies available:
 32859                           ; Name         Instructions Cycles
 32860                           ; simple_byte           19    10 (average)
 32861                           ;	Chosen strategy is simple_byte
 32862  013484  0A00               	xorlw	0	; case 0
 32863  013486  B4D8               	btfsc	status,2,c
 32864  013488  D45E               	goto	i2l984
 32865  01348A  0A04               	xorlw	4	; case 4
 32866  01348C  B4D8               	btfsc	status,2,c
 32867  01348E  D689               	goto	i2l994
 32868  013490  0A26               	xorlw	38	; case 34
 32869  013492  B4D8               	btfsc	status,2,c
 32870  013494  EF40  F096         	goto	i2l980
 32871  013498  0A1E               	xorlw	30	; case 60
 32872  01349A  B4D8               	btfsc	status,2,c
 32873  01349C  EF6E  F095         	goto	i2l970
 32874  0134A0  0A01               	xorlw	1	; case 61
 32875  0134A2  B4D8               	btfsc	status,2,c
 32876  0134A4  D6F3               	goto	i2l998
 32877  0134A6  0A02               	xorlw	2	; case 63
 32878  0134A8  B4D8               	btfsc	status,2,c
 32879  0134AA  EFB7  F095         	goto	i2l976
 32880  0134AE  D7E1               	goto	i2l1002
 32881  0134B0                     __end_of_ADCPostProcessingCallback:
 32882                           	opt stack 0
 32883                           tosu	equ	0xFFF
 32884                           tosh	equ	0xFFE
 32885                           tosl	equ	0xFFD
 32886                           pclatu	equ	0xFFB
 32887                           pclath	equ	0xFFA
 32888                           tblptru	equ	0xFF8
 32889                           tblptrh	equ	0xFF7
 32890                           tblptrl	equ	0xFF6
 32891                           tablat	equ	0xFF5
 32892                           prodh	equ	0xFF4
 32893                           prodl	equ	0xFF3
 32894                           intcon	equ	0xFF2
 32895                           indf0	equ	0xFEF
 32896                           postinc0	equ	0xFEE
 32897                           fsr0h	equ	0xFEA
 32898                           fsr0l	equ	0xFE9
 32899                           wreg	equ	0xFE8
 32900                           indf1	equ	0xFE7
 32901                           postdec1	equ	0xFE5
 32902                           plusw1	equ	0xFE3
 32903                           fsr1h	equ	0xFE2
 32904                           fsr1l	equ	0xFE1
 32905                           bsr	equ	0xFE0
 32906                           indf2	equ	0xFDF
 32907                           postinc2	equ	0xFDE
 32908                           postdec2	equ	0xFDD
 32909                           plusw2	equ	0xFDB
 32910                           fsr2h	equ	0xFDA
 32911                           fsr2l	equ	0xFD9
 32912                           status	equ	0xFD8
 32913                           
 32914 ;; *************** function i2_TMR7_StopTimer *****************
 32915 ;; Defined at:
 32916 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 32917 ;; Parameters:    Size  Location     Type
 32918 ;;		None
 32919 ;; Auto vars:     Size  Location     Type
 32920 ;;		None
 32921 ;; Return value:  Size  Location     Type
 32922 ;;                  1    wreg      void 
 32923 ;; Registers used:
 32924 ;;		None
 32925 ;; Tracked objects:
 32926 ;;		On entry : 0/0
 32927 ;;		On exit  : 0/0
 32928 ;;		Unchanged: 0/0
 32929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32934 ;;Total ram usage:        0 bytes
 32935 ;; Hardware stack levels used:    1
 32936 ;; This function calls:
 32937 ;;		Nothing
 32938 ;; This function is called by:
 32939 ;;		_ADCPostProcessingCallback
 32940 ;; This function uses a non-reentrant model
 32941 ;;
 32942                           
 32943                           	psect	text105
 32944  018CE6                     __ptext105:
 32945                           	opt stack 0
 32946  018CE6                     i2_TMR7_StopTimer:
 32947                           	opt stack 16
 32948                           
 32949                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 32950                           
 32951                           ;incstack = 0
 32952  018CE6  010F               	movlb	15	; () banked
 32953  018CE8  9130               	bcf	48,0,b	;volatile
 32954                           
 32955                           ; BSR set to: 15
 32956  018CEA  0012               	return		;funcret
 32957  018CEC                     __end_ofi2_TMR7_StopTimer:
 32958                           	opt stack 0
 32959                           tosu	equ	0xFFF
 32960                           tosh	equ	0xFFE
 32961                           tosl	equ	0xFFD
 32962                           pclatu	equ	0xFFB
 32963                           pclath	equ	0xFFA
 32964                           tblptru	equ	0xFF8
 32965                           tblptrh	equ	0xFF7
 32966                           tblptrl	equ	0xFF6
 32967                           tablat	equ	0xFF5
 32968                           prodh	equ	0xFF4
 32969                           prodl	equ	0xFF3
 32970                           intcon	equ	0xFF2
 32971                           indf0	equ	0xFEF
 32972                           postinc0	equ	0xFEE
 32973                           fsr0h	equ	0xFEA
 32974                           fsr0l	equ	0xFE9
 32975                           wreg	equ	0xFE8
 32976                           indf1	equ	0xFE7
 32977                           postdec1	equ	0xFE5
 32978                           plusw1	equ	0xFE3
 32979                           fsr1h	equ	0xFE2
 32980                           fsr1l	equ	0xFE1
 32981                           bsr	equ	0xFE0
 32982                           indf2	equ	0xFDF
 32983                           postinc2	equ	0xFDE
 32984                           postdec2	equ	0xFDD
 32985                           plusw2	equ	0xFDB
 32986                           fsr2h	equ	0xFDA
 32987                           fsr2l	equ	0xFD9
 32988                           status	equ	0xFD8
 32989                           
 32990 ;; *************** function _peakToRMS *****************
 32991 ;; Defined at:
 32992 ;;		line 113 in file "main.c"
 32993 ;; Parameters:    Size  Location     Type
 32994 ;;  Peak            4   81[BANK0 ] void 
 32995 ;;  Angle           4   85[BANK0 ] void 
 32996 ;; Auto vars:     Size  Location     Type
 32997 ;;  RMS             4  101[BANK0 ] void 
 32998 ;; Return value:  Size  Location     Type
 32999 ;;                  4   81[BANK0 ] void 
 33000 ;; Registers used:
 33001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33002 ;; Tracked objects:
 33003 ;;		On entry : 0/0
 33004 ;;		On exit  : 0/0
 33005 ;;		Unchanged: 0/0
 33006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33007 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33008 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33010 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33011 ;;Total ram usage:       24 bytes
 33012 ;; Hardware stack levels used:    1
 33013 ;; Hardware stack levels required when called:    5
 33014 ;; This function calls:
 33015 ;;		_acos
 33016 ;;		_sin
 33017 ;;		_sqrt
 33018 ;;		i2___fladd
 33019 ;;		i2___fldiv
 33020 ;;		i2___flmul
 33021 ;;		i2___flneg
 33022 ;; This function is called by:
 33023 ;;		_ADCPostProcessingCallback
 33024 ;; This function uses a non-reentrant model
 33025 ;;
 33026                           
 33027                           	psect	text106
 33028  0161FE                     __ptext106:
 33029                           	opt stack 0
 33030  0161FE                     _peakToRMS:
 33031                           	opt stack 11
 33032                           
 33033                           ;main.c: 116: double RMS = 0.0;
 33034                           
 33035                           ; BSR set to: 15
 33036                           ;incstack = 0
 33037  0161FE  0E00               	movlw	0
 33038  016200  0100               	movlb	0	; () banked
 33039  016202  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 33040  016204  0E00               	movlw	0
 33041  016206  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 33042  016208  0E00               	movlw	0
 33043  01620A  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 33044  01620C  0E00               	movlw	0
 33045  01620E  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;main.c: 119: RMS = 2.0 * acos(-1.0);
 33049  016210  0E00               	movlw	0
 33050  016212  6FA9               	movwf	acos@x& (0+255),b
 33051  016214  0E00               	movlw	0
 33052  016216  6FAA               	movwf	(acos@x+1)& (0+255),b
 33053  016218  0E80               	movlw	128
 33054  01621A  6FAB               	movwf	(acos@x+2)& (0+255),b
 33055  01621C  0EBF               	movlw	191
 33056  01621E  6FAC               	movwf	(acos@x+3)& (0+255),b
 33057  016220  ECA2  F0BF         	call	_acos	;wreg free
 33058  016224  C0A9  F0C1         	movff	?_acos,_peakToRMS$4130
 33059  016228  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4130+1
 33060  01622C  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4130+2
 33061  016230  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4130+3
 33062                           
 33063                           ;main.c: 119: RMS = 2.0 * acos(-1.0);
 33064  016234  C0C1  F030         	movff	_peakToRMS$4130,i2___flmul@b
 33065  016238  C0C2  F031         	movff	_peakToRMS$4130+1,i2___flmul@b+1
 33066  01623C  C0C3  F032         	movff	_peakToRMS$4130+2,i2___flmul@b+2
 33067  016240  C0C4  F033         	movff	_peakToRMS$4130+3,i2___flmul@b+3
 33068  016244  0E00               	movlw	0
 33069  016246  6E34               	movwf	i2___flmul@a,c
 33070  016248  0E00               	movlw	0
 33071  01624A  6E35               	movwf	i2___flmul@a+1,c
 33072  01624C  0E00               	movlw	0
 33073  01624E  6E36               	movwf	i2___flmul@a+2,c
 33074  016250  0E40               	movlw	64
 33075  016252  6E37               	movwf	i2___flmul@a+3,c
 33076  016254  EC47  F0A2         	call	i2___flmul	;wreg free
 33077  016258  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 33078  01625C  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 33079  016260  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 33080  016264  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 33081                           
 33082                           ;main.c: 120: RMS = RMS - (2.0 * Angle);
 33083  016268  0E00               	movlw	0
 33084  01626A  6E34               	movwf	i2___flmul@a,c
 33085  01626C  0E00               	movlw	0
 33086  01626E  6E35               	movwf	i2___flmul@a+1,c
 33087  016270  0E00               	movlw	0
 33088  016272  6E36               	movwf	i2___flmul@a+2,c
 33089  016274  0E40               	movlw	64
 33090  016276  6E37               	movwf	i2___flmul@a+3,c
 33091  016278  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 33092  01627C  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 33093  016280  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 33094  016284  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 33095  016288  EC47  F0A2         	call	i2___flmul	;wreg free
 33096  01628C  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 33097  016290  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 33098  016294  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 33099  016298  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 33100  01629C  ECA4  F0C4         	call	i2___flneg	;wreg free
 33101  0162A0  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33102  0162A4  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33103  0162A8  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33104  0162AC  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33105  0162B0  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 33106  0162B4  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 33107  0162B8  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 33108  0162BC  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 33109  0162C0  EC8E  F0A5         	call	i2___fladd	;wreg free
 33110  0162C4  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 33111  0162C8  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 33112  0162CC  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 33113  0162D0  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 33114                           
 33115                           ;main.c: 121: RMS = RMS + sin(2.0 * Angle);
 33116  0162D4  0E00               	movlw	0
 33117  0162D6  6E34               	movwf	i2___flmul@a,c
 33118  0162D8  0E00               	movlw	0
 33119  0162DA  6E35               	movwf	i2___flmul@a+1,c
 33120  0162DC  0E00               	movlw	0
 33121  0162DE  6E36               	movwf	i2___flmul@a+2,c
 33122  0162E0  0E40               	movlw	64
 33123  0162E2  6E37               	movwf	i2___flmul@a+3,c
 33124  0162E4  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 33125  0162E8  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 33126  0162EC  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 33127  0162F0  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 33128  0162F4  EC47  F0A2         	call	i2___flmul	;wreg free
 33129  0162F8  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4131
 33130  0162FC  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4131+1
 33131  016300  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4131+2
 33132  016304  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4131+3
 33133                           
 33134                           ;main.c: 121: RMS = RMS + sin(2.0 * Angle);
 33135  016308  C0B9  F088         	movff	_peakToRMS$4131,sin@f
 33136  01630C  C0BA  F089         	movff	_peakToRMS$4131+1,sin@f+1
 33137  016310  C0BB  F08A         	movff	_peakToRMS$4131+2,sin@f+2
 33138  016314  C0BC  F08B         	movff	_peakToRMS$4131+3,sin@f+3
 33139  016318  ECAF  F0A8         	call	_sin	;wreg free
 33140  01631C  C088  F0BD         	movff	?_sin,_peakToRMS$4132
 33141  016320  C089  F0BE         	movff	?_sin+1,_peakToRMS$4132+1
 33142  016324  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4132+2
 33143  016328  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4132+3
 33144                           
 33145                           ;main.c: 121: RMS = RMS + sin(2.0 * Angle);
 33146  01632C  C0BD  F056         	movff	_peakToRMS$4132,i2___fladd@b
 33147  016330  C0BE  F057         	movff	_peakToRMS$4132+1,i2___fladd@b+1
 33148  016334  C0BF  F058         	movff	_peakToRMS$4132+2,i2___fladd@b+2
 33149  016338  C0C0  F059         	movff	_peakToRMS$4132+3,i2___fladd@b+3
 33150  01633C  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 33151  016340  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 33152  016344  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 33153  016348  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 33154  01634C  EC8E  F0A5         	call	i2___fladd	;wreg free
 33155  016350  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 33156  016354  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 33157  016358  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 33158  01635C  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 33159                           
 33160                           ;main.c: 122: RMS = RMS / (4.0 * acos(-1.0));
 33161  016360  0E00               	movlw	0
 33162  016362  0100               	movlb	0	; () banked
 33163  016364  6FA9               	movwf	acos@x& (0+255),b
 33164  016366  0E00               	movlw	0
 33165  016368  6FAA               	movwf	(acos@x+1)& (0+255),b
 33166  01636A  0E80               	movlw	128
 33167  01636C  6FAB               	movwf	(acos@x+2)& (0+255),b
 33168  01636E  0EBF               	movlw	191
 33169  016370  6FAC               	movwf	(acos@x+3)& (0+255),b
 33170  016372  ECA2  F0BF         	call	_acos	;wreg free
 33171  016376  C0A9  F0C1         	movff	?_acos,_peakToRMS$4130
 33172  01637A  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4130+1
 33173  01637E  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4130+2
 33174  016382  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4130+3
 33175                           
 33176                           ;main.c: 122: RMS = RMS / (4.0 * acos(-1.0));
 33177  016386  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 33178  01638A  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 33179  01638E  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 33180  016392  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 33181  016396  0E00               	movlw	0
 33182  016398  6E34               	movwf	i2___flmul@a,c
 33183  01639A  0E00               	movlw	0
 33184  01639C  6E35               	movwf	i2___flmul@a+1,c
 33185  01639E  0E80               	movlw	128
 33186  0163A0  6E36               	movwf	i2___flmul@a+2,c
 33187  0163A2  0E40               	movlw	64
 33188  0163A4  6E37               	movwf	i2___flmul@a+3,c
 33189  0163A6  C0C1  F030         	movff	_peakToRMS$4130,i2___flmul@b
 33190  0163AA  C0C2  F031         	movff	_peakToRMS$4130+1,i2___flmul@b+1
 33191  0163AE  C0C3  F032         	movff	_peakToRMS$4130+2,i2___flmul@b+2
 33192  0163B2  C0C4  F033         	movff	_peakToRMS$4130+3,i2___flmul@b+3
 33193  0163B6  EC47  F0A2         	call	i2___flmul	;wreg free
 33194  0163BA  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 33195  0163BE  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 33196  0163C2  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 33197  0163C6  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 33198  0163CA  EC4E  F0AE         	call	i2___fldiv	;wreg free
 33199  0163CE  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 33200  0163D2  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 33201  0163D6  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 33202  0163DA  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 33203                           
 33204                           ;main.c: 123: RMS = sqrt(RMS);
 33205  0163DE  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 33206  0163E2  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 33207  0163E6  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 33208  0163EA  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 33209  0163EE  EC2C  F0AA         	call	_sqrt	;wreg free
 33210  0163F2  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 33211  0163F6  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 33212  0163FA  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 33213  0163FE  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 33214                           
 33215                           ;main.c: 124: RMS = Peak * RMS;
 33216  016402  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 33217  016406  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 33218  01640A  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 33219  01640E  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 33220  016412  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 33221  016416  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 33222  01641A  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 33223  01641E  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 33224  016422  EC47  F0A2         	call	i2___flmul	;wreg free
 33225  016426  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 33226  01642A  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 33227  01642E  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 33228  016432  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 33229                           
 33230                           ;main.c: 125: return RMS;
 33231  016436  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 33232  01643A  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 33233  01643E  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 33234  016442  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 33235  016446  0012               	return	
 33236  016448                     __end_of_peakToRMS:
 33237                           	opt stack 0
 33238                           tosu	equ	0xFFF
 33239                           tosh	equ	0xFFE
 33240                           tosl	equ	0xFFD
 33241                           pclatu	equ	0xFFB
 33242                           pclath	equ	0xFFA
 33243                           tblptru	equ	0xFF8
 33244                           tblptrh	equ	0xFF7
 33245                           tblptrl	equ	0xFF6
 33246                           tablat	equ	0xFF5
 33247                           prodh	equ	0xFF4
 33248                           prodl	equ	0xFF3
 33249                           intcon	equ	0xFF2
 33250                           indf0	equ	0xFEF
 33251                           postinc0	equ	0xFEE
 33252                           fsr0h	equ	0xFEA
 33253                           fsr0l	equ	0xFE9
 33254                           wreg	equ	0xFE8
 33255                           indf1	equ	0xFE7
 33256                           postdec1	equ	0xFE5
 33257                           plusw1	equ	0xFE3
 33258                           fsr1h	equ	0xFE2
 33259                           fsr1l	equ	0xFE1
 33260                           bsr	equ	0xFE0
 33261                           indf2	equ	0xFDF
 33262                           postinc2	equ	0xFDE
 33263                           postdec2	equ	0xFDD
 33264                           plusw2	equ	0xFDB
 33265                           fsr2h	equ	0xFDA
 33266                           fsr2l	equ	0xFD9
 33267                           status	equ	0xFD8
 33268                           
 33269 ;; *************** function _acos *****************
 33270 ;; Defined at:
 33271 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 33272 ;; Parameters:    Size  Location     Type
 33273 ;;  x               4   73[BANK0 ] void 
 33274 ;; Auto vars:     Size  Location     Type
 33275 ;;		None
 33276 ;; Return value:  Size  Location     Type
 33277 ;;                  4   73[BANK0 ] void 
 33278 ;; Registers used:
 33279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33280 ;; Tracked objects:
 33281 ;;		On entry : 0/0
 33282 ;;		On exit  : 0/0
 33283 ;;		Unchanged: 0/0
 33284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33289 ;;Total ram usage:        8 bytes
 33290 ;; Hardware stack levels used:    1
 33291 ;; Hardware stack levels required when called:    4
 33292 ;; This function calls:
 33293 ;;		_asin
 33294 ;;		i2___fladd
 33295 ;;		i2___flneg
 33296 ;; This function is called by:
 33297 ;;		_peakToRMS
 33298 ;; This function uses a non-reentrant model
 33299 ;;
 33300                           
 33301                           	psect	text107
 33302  017F44                     __ptext107:
 33303                           	opt stack 0
 33304  017F44                     _acos:
 33305                           	opt stack 11
 33306                           
 33307                           ;incstack = 0
 33308  017F44  C0A9  F091         	movff	acos@x,asin@x
 33309  017F48  C0AA  F092         	movff	acos@x+1,asin@x+1
 33310  017F4C  C0AB  F093         	movff	acos@x+2,asin@x+2
 33311  017F50  C0AC  F094         	movff	acos@x+3,asin@x+3
 33312  017F54  EC2D  F0A7         	call	_asin	;wreg free
 33313  017F58  C091  F0AD         	movff	?_asin,_acos$4138
 33314  017F5C  C092  F0AE         	movff	?_asin+1,_acos$4138+1
 33315  017F60  C093  F0AF         	movff	?_asin+2,_acos$4138+2
 33316  017F64  C094  F0B0         	movff	?_asin+3,_acos$4138+3
 33317  017F68  C0AD  F02C         	movff	_acos$4138,i2___flneg@f1
 33318  017F6C  C0AE  F02D         	movff	_acos$4138+1,i2___flneg@f1+1
 33319  017F70  C0AF  F02E         	movff	_acos$4138+2,i2___flneg@f1+2
 33320  017F74  C0B0  F02F         	movff	_acos$4138+3,i2___flneg@f1+3
 33321  017F78  ECA4  F0C4         	call	i2___flneg	;wreg free
 33322  017F7C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33323  017F80  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33324  017F84  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33325  017F88  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33326  017F8C  0EDB               	movlw	219
 33327  017F8E  6E5A               	movwf	i2___fladd@a,c
 33328  017F90  0E0F               	movlw	15
 33329  017F92  6E5B               	movwf	i2___fladd@a+1,c
 33330  017F94  0EC9               	movlw	201
 33331  017F96  6E5C               	movwf	i2___fladd@a+2,c
 33332  017F98  0E3F               	movlw	63
 33333  017F9A  6E5D               	movwf	i2___fladd@a+3,c
 33334  017F9C  EC8E  F0A5         	call	i2___fladd	;wreg free
 33335  017FA0  C056  F0A9         	movff	?i2___fladd,?_acos
 33336  017FA4  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 33337  017FA8  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 33338  017FAC  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 33339  017FB0  0012               	return	
 33340  017FB2                     __end_of_acos:
 33341                           	opt stack 0
 33342                           tosu	equ	0xFFF
 33343                           tosh	equ	0xFFE
 33344                           tosl	equ	0xFFD
 33345                           pclatu	equ	0xFFB
 33346                           pclath	equ	0xFFA
 33347                           tblptru	equ	0xFF8
 33348                           tblptrh	equ	0xFF7
 33349                           tblptrl	equ	0xFF6
 33350                           tablat	equ	0xFF5
 33351                           prodh	equ	0xFF4
 33352                           prodl	equ	0xFF3
 33353                           intcon	equ	0xFF2
 33354                           indf0	equ	0xFEF
 33355                           postinc0	equ	0xFEE
 33356                           fsr0h	equ	0xFEA
 33357                           fsr0l	equ	0xFE9
 33358                           wreg	equ	0xFE8
 33359                           indf1	equ	0xFE7
 33360                           postdec1	equ	0xFE5
 33361                           plusw1	equ	0xFE3
 33362                           fsr1h	equ	0xFE2
 33363                           fsr1l	equ	0xFE1
 33364                           bsr	equ	0xFE0
 33365                           indf2	equ	0xFDF
 33366                           postinc2	equ	0xFDE
 33367                           postdec2	equ	0xFDD
 33368                           plusw2	equ	0xFDB
 33369                           fsr2h	equ	0xFDA
 33370                           fsr2l	equ	0xFD9
 33371                           status	equ	0xFD8
 33372                           
 33373 ;; *************** function _asin *****************
 33374 ;; Defined at:
 33375 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 33376 ;; Parameters:    Size  Location     Type
 33377 ;;  x               4   49[BANK0 ] void 
 33378 ;; Auto vars:     Size  Location     Type
 33379 ;;  y               4   65[BANK0 ] void 
 33380 ;;  sgn             4   53[BANK0 ] void 
 33381 ;; Return value:  Size  Location     Type
 33382 ;;                  4   49[BANK0 ] void 
 33383 ;; Registers used:
 33384 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33385 ;; Tracked objects:
 33386 ;;		On entry : 0/0
 33387 ;;		On exit  : 0/0
 33388 ;;		Unchanged: 0/0
 33389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33391 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33393 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33394 ;;Total ram usage:       24 bytes
 33395 ;; Hardware stack levels used:    1
 33396 ;; Hardware stack levels required when called:    3
 33397 ;; This function calls:
 33398 ;;		_atan
 33399 ;;		_fabs
 33400 ;;		_sqrt
 33401 ;;		i2___fladd
 33402 ;;		i2___fldiv
 33403 ;;		i2___flge
 33404 ;;		i2___flmul
 33405 ;;		i2___flneg
 33406 ;; This function is called by:
 33407 ;;		_acos
 33408 ;; This function uses a non-reentrant model
 33409 ;;
 33410                           
 33411                           	psect	text108
 33412  014E5A                     __ptext108:
 33413                           	opt stack 0
 33414  014E5A                     _asin:
 33415                           	opt stack 11
 33416                           
 33417                           ;incstack = 0
 33418  014E5A  0E00               	movlw	0
 33419  014E5C  6E34               	movwf	i2___flge@ff1,c
 33420  014E5E  0E00               	movlw	0
 33421  014E60  6E35               	movwf	i2___flge@ff1+1,c
 33422  014E62  0E80               	movlw	128
 33423  014E64  6E36               	movwf	i2___flge@ff1+2,c
 33424  014E66  0E3F               	movlw	63
 33425  014E68  6E37               	movwf	i2___flge@ff1+3,c
 33426  014E6A  C091  F030         	movff	asin@x,fabs@d
 33427  014E6E  C092  F031         	movff	asin@x+1,fabs@d+1
 33428  014E72  C093  F032         	movff	asin@x+2,fabs@d+2
 33429  014E76  C094  F033         	movff	asin@x+3,fabs@d+3
 33430  014E7A  ECA0  F0C3         	call	_fabs	;wreg free
 33431  014E7E  C030  F038         	movff	?_fabs,i2___flge@ff2
 33432  014E82  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 33433  014E86  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 33434  014E8A  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 33435  014E8E  ECE6  F0B8         	call	i2___flge	;wreg free
 33436  014E92  B0D8               	btfsc	status,0,c
 33437  014E94  D00F               	goto	i2l1688
 33438  014E96  0E00               	movlw	0
 33439  014E98  0102               	movlb	2	; () banked
 33440  014E9A  6F6F               	movwf	(_errno+1)& (0+255),b
 33441  014E9C  0E21               	movlw	33
 33442  014E9E  6F6E               	movwf	_errno& (0+255),b
 33443  014EA0  0E00               	movlw	0
 33444  014EA2  0100               	movlb	0	; () banked
 33445  014EA4  6F91               	movwf	?_asin& (0+255),b
 33446  014EA6  0E00               	movlw	0
 33447  014EA8  6F92               	movwf	(?_asin+1)& (0+255),b
 33448  014EAA  0E00               	movlw	0
 33449  014EAC  6F93               	movwf	(?_asin+2)& (0+255),b
 33450  014EAE  0E00               	movlw	0
 33451  014EB0  6F94               	movwf	(?_asin+3)& (0+255),b
 33452                           
 33453                           ; BSR set to: 0
 33454  014EB2  0012               	return	
 33455  014EB4                     i2l1688:
 33456                           
 33457                           ; BSR set to: 0
 33458  014EB4  0E00               	movlw	0
 33459  014EB6  0100               	movlb	0	; () banked
 33460  014EB8  6F95               	movwf	asin@sgn& (0+255),b
 33461  014EBA  0E00               	movlw	0
 33462  014EBC  6F96               	movwf	(asin@sgn+1)& (0+255),b
 33463  014EBE  0E80               	movlw	128
 33464  014EC0  6F97               	movwf	(asin@sgn+2)& (0+255),b
 33465  014EC2  0E3F               	movlw	63
 33466  014EC4  6F98               	movwf	(asin@sgn+3)& (0+255),b
 33467                           
 33468                           ; BSR set to: 0
 33469  014EC6  C091  F034         	movff	asin@x,i2___flmul@a
 33470  014ECA  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 33471  014ECE  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 33472  014ED2  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 33473  014ED6  C091  F030         	movff	asin@x,i2___flmul@b
 33474  014EDA  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 33475  014EDE  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 33476  014EE2  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 33477  014EE6  EC47  F0A2         	call	i2___flmul	;wreg free
 33478  014EEA  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 33479  014EEE  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 33480  014EF2  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 33481  014EF6  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 33482  014EFA  ECA4  F0C4         	call	i2___flneg	;wreg free
 33483  014EFE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33484  014F02  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33485  014F06  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33486  014F0A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33487  014F0E  0E00               	movlw	0
 33488  014F10  6E5A               	movwf	i2___fladd@a,c
 33489  014F12  0E00               	movlw	0
 33490  014F14  6E5B               	movwf	i2___fladd@a+1,c
 33491  014F16  0E80               	movlw	128
 33492  014F18  6E5C               	movwf	i2___fladd@a+2,c
 33493  014F1A  0E3F               	movlw	63
 33494  014F1C  6E5D               	movwf	i2___fladd@a+3,c
 33495  014F1E  EC8E  F0A5         	call	i2___fladd	;wreg free
 33496  014F22  C056  F06C         	movff	?i2___fladd,sqrt@a
 33497  014F26  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 33498  014F2A  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 33499  014F2E  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 33500  014F32  EC2C  F0AA         	call	_sqrt	;wreg free
 33501  014F36  C06C  F0A1         	movff	?_sqrt,asin@y
 33502  014F3A  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 33503  014F3E  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 33504  014F42  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 33505  014F46  C091  F030         	movff	asin@x,fabs@d
 33506  014F4A  C092  F031         	movff	asin@x+1,fabs@d+1
 33507  014F4E  C093  F032         	movff	asin@x+2,fabs@d+2
 33508  014F52  C094  F033         	movff	asin@x+3,fabs@d+3
 33509  014F56  ECA0  F0C3         	call	_fabs	;wreg free
 33510  014F5A  C030  F034         	movff	?_fabs,i2___flge@ff1
 33511  014F5E  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 33512  014F62  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 33513  014F66  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 33514  014F6A  0E8F               	movlw	143
 33515  014F6C  6E38               	movwf	i2___flge@ff2,c
 33516  014F6E  0EC2               	movlw	194
 33517  014F70  6E39               	movwf	i2___flge@ff2+1,c
 33518  014F72  0E35               	movlw	53
 33519  014F74  6E3A               	movwf	i2___flge@ff2+2,c
 33520  014F76  0E3F               	movlw	63
 33521  014F78  6E3B               	movwf	i2___flge@ff2+3,c
 33522  014F7A  ECE6  F0B8         	call	i2___flge	;wreg free
 33523  014F7E  B0D8               	btfsc	status,0,c
 33524  014F80  D02D               	goto	i2l1690
 33525  014F82  C091  F013         	movff	asin@x,i2___fldiv@b
 33526  014F86  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 33527  014F8A  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 33528  014F8E  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 33529  014F92  C0A1  F017         	movff	asin@y,i2___fldiv@a
 33530  014F96  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 33531  014F9A  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 33532  014F9E  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 33533  014FA2  EC4E  F0AE         	call	i2___fldiv	;wreg free
 33534  014FA6  C013  F0A5         	movff	?i2___fldiv,_asin$4139
 33535  014FAA  C014  F0A6         	movff	?i2___fldiv+1,_asin$4139+1
 33536  014FAE  C015  F0A7         	movff	?i2___fldiv+2,_asin$4139+2
 33537  014FB2  C016  F0A8         	movff	?i2___fldiv+3,_asin$4139+3
 33538  014FB6  C0A5  F07C         	movff	_asin$4139,atan@f
 33539  014FBA  C0A6  F07D         	movff	_asin$4139+1,atan@f+1
 33540  014FBE  C0A7  F07E         	movff	_asin$4139+2,atan@f+2
 33541  014FC2  C0A8  F07F         	movff	_asin$4139+3,atan@f+3
 33542  014FC6  EC24  F0B2         	call	_atan	;wreg free
 33543  014FCA  C07C  F091         	movff	?_atan,?_asin
 33544  014FCE  C07D  F092         	movff	?_atan+1,?_asin+1
 33545  014FD2  C07E  F093         	movff	?_atan+2,?_asin+2
 33546  014FD6  C07F  F094         	movff	?_atan+3,?_asin+3
 33547  014FDA  0012               	return	
 33548  014FDC                     i2l1690:
 33549  014FDC  0100               	movlb	0	; () banked
 33550  014FDE  AF94               	btfss	(asin@x+3)& (0+255),7,b
 33551  014FE0  D06D               	goto	i2l1691
 33552                           
 33553                           ; BSR set to: 0
 33554  014FE2  C091  F017         	movff	asin@x,i2___fldiv@a
 33555  014FE6  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 33556  014FEA  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 33557  014FEE  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 33558  014FF2  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 33559  014FF6  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 33560  014FFA  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 33561  014FFE  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 33562  015002  ECA4  F0C4         	call	i2___flneg	;wreg free
 33563  015006  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 33564  01500A  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 33565  01500E  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 33566  015012  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 33567  015016  EC4E  F0AE         	call	i2___fldiv	;wreg free
 33568  01501A  C013  F0A5         	movff	?i2___fldiv,_asin$4139
 33569  01501E  C014  F0A6         	movff	?i2___fldiv+1,_asin$4139+1
 33570  015022  C015  F0A7         	movff	?i2___fldiv+2,_asin$4139+2
 33571  015026  C016  F0A8         	movff	?i2___fldiv+3,_asin$4139+3
 33572  01502A  C0A5  F07C         	movff	_asin$4139,atan@f
 33573  01502E  C0A6  F07D         	movff	_asin$4139+1,atan@f+1
 33574  015032  C0A7  F07E         	movff	_asin$4139+2,atan@f+2
 33575  015036  C0A8  F07F         	movff	_asin$4139+3,atan@f+3
 33576  01503A  EC24  F0B2         	call	_atan	;wreg free
 33577  01503E  C07C  F09D         	movff	?_atan,_asin$4140
 33578  015042  C07D  F09E         	movff	?_atan+1,_asin$4140+1
 33579  015046  C07E  F09F         	movff	?_atan+2,_asin$4140+2
 33580  01504A  C07F  F0A0         	movff	?_atan+3,_asin$4140+3
 33581  01504E  0EDB               	movlw	219
 33582  015050  6E5A               	movwf	i2___fladd@a,c
 33583  015052  0E0F               	movlw	15
 33584  015054  6E5B               	movwf	i2___fladd@a+1,c
 33585  015056  0EC9               	movlw	201
 33586  015058  6E5C               	movwf	i2___fladd@a+2,c
 33587  01505A  0E3F               	movlw	63
 33588  01505C  6E5D               	movwf	i2___fladd@a+3,c
 33589  01505E  C09D  F02C         	movff	_asin$4140,i2___flneg@f1
 33590  015062  C09E  F02D         	movff	_asin$4140+1,i2___flneg@f1+1
 33591  015066  C09F  F02E         	movff	_asin$4140+2,i2___flneg@f1+2
 33592  01506A  C0A0  F02F         	movff	_asin$4140+3,i2___flneg@f1+3
 33593  01506E  ECA4  F0C4         	call	i2___flneg	;wreg free
 33594  015072  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33595  015076  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33596  01507A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33597  01507E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33598  015082  EC8E  F0A5         	call	i2___fladd	;wreg free
 33599  015086  C056  F099         	movff	?i2___fladd,_asin$4141
 33600  01508A  C057  F09A         	movff	?i2___fladd+1,_asin$4141+1
 33601  01508E  C058  F09B         	movff	?i2___fladd+2,_asin$4141+2
 33602  015092  C059  F09C         	movff	?i2___fladd+3,_asin$4141+3
 33603  015096  C099  F02C         	movff	_asin$4141,i2___flneg@f1
 33604  01509A  C09A  F02D         	movff	_asin$4141+1,i2___flneg@f1+1
 33605  01509E  C09B  F02E         	movff	_asin$4141+2,i2___flneg@f1+2
 33606  0150A2  C09C  F02F         	movff	_asin$4141+3,i2___flneg@f1+3
 33607  0150A6  ECA4  F0C4         	call	i2___flneg	;wreg free
 33608  0150AA  C02C  F091         	movff	?i2___flneg,?_asin
 33609  0150AE  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 33610  0150B2  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 33611  0150B6  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 33612  0150BA  0012               	return	
 33613  0150BC                     i2l1691:
 33614  0150BC  C091  F017         	movff	asin@x,i2___fldiv@a
 33615  0150C0  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 33616  0150C4  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 33617  0150C8  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 33618  0150CC  C0A1  F013         	movff	asin@y,i2___fldiv@b
 33619  0150D0  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 33620  0150D4  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 33621  0150D8  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 33622  0150DC  EC4E  F0AE         	call	i2___fldiv	;wreg free
 33623  0150E0  C013  F0A5         	movff	?i2___fldiv,_asin$4139
 33624  0150E4  C014  F0A6         	movff	?i2___fldiv+1,_asin$4139+1
 33625  0150E8  C015  F0A7         	movff	?i2___fldiv+2,_asin$4139+2
 33626  0150EC  C016  F0A8         	movff	?i2___fldiv+3,_asin$4139+3
 33627  0150F0  C0A5  F07C         	movff	_asin$4139,atan@f
 33628  0150F4  C0A6  F07D         	movff	_asin$4139+1,atan@f+1
 33629  0150F8  C0A7  F07E         	movff	_asin$4139+2,atan@f+2
 33630  0150FC  C0A8  F07F         	movff	_asin$4139+3,atan@f+3
 33631  015100  EC24  F0B2         	call	_atan	;wreg free
 33632  015104  C07C  F09D         	movff	?_atan,_asin$4140
 33633  015108  C07D  F09E         	movff	?_atan+1,_asin$4140+1
 33634  01510C  C07E  F09F         	movff	?_atan+2,_asin$4140+2
 33635  015110  C07F  F0A0         	movff	?_atan+3,_asin$4140+3
 33636  015114  C09D  F02C         	movff	_asin$4140,i2___flneg@f1
 33637  015118  C09E  F02D         	movff	_asin$4140+1,i2___flneg@f1+1
 33638  01511C  C09F  F02E         	movff	_asin$4140+2,i2___flneg@f1+2
 33639  015120  C0A0  F02F         	movff	_asin$4140+3,i2___flneg@f1+3
 33640  015124  ECA4  F0C4         	call	i2___flneg	;wreg free
 33641  015128  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33642  01512C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33643  015130  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33644  015134  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33645  015138  0EDB               	movlw	219
 33646  01513A  6E5A               	movwf	i2___fladd@a,c
 33647  01513C  0E0F               	movlw	15
 33648  01513E  6E5B               	movwf	i2___fladd@a+1,c
 33649  015140  0EC9               	movlw	201
 33650  015142  6E5C               	movwf	i2___fladd@a+2,c
 33651  015144  0E3F               	movlw	63
 33652  015146  6E5D               	movwf	i2___fladd@a+3,c
 33653  015148  EC8E  F0A5         	call	i2___fladd	;wreg free
 33654  01514C  C056  F091         	movff	?i2___fladd,?_asin
 33655  015150  C057  F092         	movff	?i2___fladd+1,?_asin+1
 33656  015154  C058  F093         	movff	?i2___fladd+2,?_asin+2
 33657  015158  C059  F094         	movff	?i2___fladd+3,?_asin+3
 33658  01515C  0012               	return	
 33659  01515E                     __end_of_asin:
 33660                           	opt stack 0
 33661                           tosu	equ	0xFFF
 33662                           tosh	equ	0xFFE
 33663                           tosl	equ	0xFFD
 33664                           pclatu	equ	0xFFB
 33665                           pclath	equ	0xFFA
 33666                           tblptru	equ	0xFF8
 33667                           tblptrh	equ	0xFF7
 33668                           tblptrl	equ	0xFF6
 33669                           tablat	equ	0xFF5
 33670                           prodh	equ	0xFF4
 33671                           prodl	equ	0xFF3
 33672                           intcon	equ	0xFF2
 33673                           indf0	equ	0xFEF
 33674                           postinc0	equ	0xFEE
 33675                           fsr0h	equ	0xFEA
 33676                           fsr0l	equ	0xFE9
 33677                           wreg	equ	0xFE8
 33678                           indf1	equ	0xFE7
 33679                           postdec1	equ	0xFE5
 33680                           plusw1	equ	0xFE3
 33681                           fsr1h	equ	0xFE2
 33682                           fsr1l	equ	0xFE1
 33683                           bsr	equ	0xFE0
 33684                           indf2	equ	0xFDF
 33685                           postinc2	equ	0xFDE
 33686                           postdec2	equ	0xFDD
 33687                           plusw2	equ	0xFDB
 33688                           fsr2h	equ	0xFDA
 33689                           fsr2l	equ	0xFD9
 33690                           status	equ	0xFD8
 33691                           
 33692 ;; *************** function _sqrt *****************
 33693 ;; Defined at:
 33694 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 33695 ;; Parameters:    Size  Location     Type
 33696 ;;  a               4   12[BANK0 ] void 
 33697 ;; Auto vars:     Size  Location     Type
 33698 ;;  frac            4   37[BANK0 ] unsigned long 
 33699 ;;  root            4   33[BANK0 ] struct .
 33700 ;;  grs             4   27[BANK0 ] unsigned long 
 33701 ;;  tfrac           4   22[BANK0 ] unsigned long 
 33702 ;;  exp             2   31[BANK0 ] int 
 33703 ;;  p               1   26[BANK0 ] unsigned char 
 33704 ;;  i               1   21[BANK0 ] unsigned char 
 33705 ;;  sign            1   20[BANK0 ] unsigned char 
 33706 ;; Return value:  Size  Location     Type
 33707 ;;                  4   12[BANK0 ] unsigned char 
 33708 ;; Registers used:
 33709 ;;		wreg, status,2, status,0
 33710 ;; Tracked objects:
 33711 ;;		On entry : 0/0
 33712 ;;		On exit  : 0/0
 33713 ;;		Unchanged: 0/0
 33714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33716 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33717 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33718 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33719 ;;Total ram usage:       29 bytes
 33720 ;; Hardware stack levels used:    1
 33721 ;; This function calls:
 33722 ;;		Nothing
 33723 ;; This function is called by:
 33724 ;;		_peakToRMS
 33725 ;;		_asin
 33726 ;; This function uses a non-reentrant model
 33727 ;;
 33728                           
 33729                           	psect	text109
 33730  015458                     __ptext109:
 33731                           	opt stack 0
 33732  015458                     _sqrt:
 33733                           	opt stack 15
 33734                           
 33735                           ;incstack = 0
 33736  015458  0100               	movlb	0	; () banked
 33737  01545A  516F               	movf	(sqrt@a+3)& (0+255),w,b
 33738  01545C  0B80               	andlw	128
 33739  01545E  6F74               	movwf	sqrt@sign& (0+255),b
 33740  015460  516F               	movf	(sqrt@a+3)& (0+255),w,b
 33741  015462  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 33742  015464  6F7A               	movwf	sqrt@p& (0+255),b
 33743                           
 33744                           ; BSR set to: 0
 33745  015466  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 33746                           
 33747                           ; BSR set to: 0
 33748  015468  817A               	bsf	sqrt@p& (0+255),0,b
 33749                           
 33750                           ; BSR set to: 0
 33751                           
 33752                           ; BSR set to: 0
 33753  01546A  C07A  F07F         	movff	sqrt@p,sqrt@exp
 33754  01546E  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 33755                           
 33756                           ; BSR set to: 0
 33757  015470  0EFF               	movlw	255
 33758  015472  156C               	andwf	sqrt@a& (0+255),w,b
 33759  015474  6F85               	movwf	sqrt@frac& (0+255),b
 33760  015476  0EFF               	movlw	255
 33761  015478  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 33762  01547A  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 33763  01547C  0E7F               	movlw	127
 33764  01547E  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 33765  015480  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 33766  015482  0E00               	movlw	0
 33767  015484  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 33768  015486  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 33769                           
 33770                           ; BSR set to: 0
 33771  015488  517F               	movf	sqrt@exp& (0+255),w,b
 33772  01548A  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33773  01548C  B4D8               	btfsc	status,2,c
 33774  01548E  D005               	goto	i2l2217
 33775                           
 33776                           ; BSR set to: 0
 33777  015490  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 33778                           
 33779                           ; BSR set to: 0
 33780  015492  297F               	incf	sqrt@exp& (0+255),w,b
 33781  015494  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33782  015496  A4D8               	btfss	status,2,c
 33783  015498  D008               	goto	i2l2219
 33784  01549A                     i2l2217:
 33785                           
 33786                           ; BSR set to: 0
 33787                           
 33788                           ; BSR set to: 0
 33789  01549A  0E00               	movlw	0
 33790  01549C  6F85               	movwf	sqrt@frac& (0+255),b
 33791  01549E  0E00               	movlw	0
 33792  0154A0  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 33793  0154A2  0E00               	movlw	0
 33794  0154A4  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 33795  0154A6  0E00               	movlw	0
 33796  0154A8  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 33797  0154AA                     i2l2219:
 33798                           
 33799                           ; BSR set to: 0
 33800                           
 33801                           ; BSR set to: 0
 33802  0154AA  517F               	movf	sqrt@exp& (0+255),w,b
 33803  0154AC  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33804  0154AE  A4D8               	btfss	status,2,c
 33805  0154B0  D009               	goto	i2l2220
 33806                           
 33807                           ; BSR set to: 0
 33808  0154B2  0E00               	movlw	0
 33809  0154B4  6F6C               	movwf	?_sqrt& (0+255),b
 33810  0154B6  0E00               	movlw	0
 33811  0154B8  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 33812  0154BA  0E00               	movlw	0
 33813  0154BC  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 33814  0154BE  0E00               	movlw	0
 33815  0154C0  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 33816                           
 33817                           ; BSR set to: 0
 33818  0154C2  0012               	return	
 33819  0154C4                     i2l2220:
 33820                           
 33821                           ; BSR set to: 0
 33822                           
 33823                           ; BSR set to: 0
 33824  0154C4  5174               	movf	sqrt@sign& (0+255),w,b
 33825  0154C6  B4D8               	btfsc	status,2,c
 33826  0154C8  D01A               	goto	i2l2222
 33827                           
 33828                           ; BSR set to: 0
 33829  0154CA  0E00               	movlw	0
 33830  0154CC  6F81               	movwf	sqrt@root& (0+255),b
 33831  0154CE  0E00               	movlw	0
 33832  0154D0  6F82               	movwf	(sqrt@root+1)& (0+255),b
 33833  0154D2  0E40               	movlw	64
 33834  0154D4  6F83               	movwf	(sqrt@root+2)& (0+255),b
 33835  0154D6  0E00               	movlw	0
 33836  0154D8  6F84               	movwf	(sqrt@root+3)& (0+255),b
 33837                           
 33838                           ; BSR set to: 0
 33839  0154DA  0E80               	movlw	128
 33840  0154DC  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 33841  0154DE  0EFF               	movlw	255
 33842  0154E0  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 33843                           
 33844                           ; BSR set to: 0
 33845  0154E2  0E00               	movlw	0
 33846  0154E4  0102               	movlb	2	; () banked
 33847  0154E6  6F6F               	movwf	(_errno+1)& (0+255),b
 33848  0154E8  0E21               	movlw	33
 33849  0154EA  6F6E               	movwf	_errno& (0+255),b
 33850                           
 33851                           ; BSR set to: 2
 33852  0154EC  C081  F06C         	movff	sqrt@root,?_sqrt
 33853  0154F0  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 33854  0154F4  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 33855  0154F8  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 33856                           
 33857                           ; BSR set to: 2
 33858  0154FC  0012               	return	
 33859  0154FE                     i2l2222:
 33860                           
 33861                           ; BSR set to: 2
 33862  0154FE  0100               	movlb	0	; () banked
 33863  015500  297F               	incf	sqrt@exp& (0+255),w,b
 33864  015502  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33865  015504  A4D8               	btfss	status,2,c
 33866  015506  D011               	goto	i2l2223
 33867                           
 33868                           ; BSR set to: 0
 33869  015508  0E00               	movlw	0
 33870  01550A  6F81               	movwf	sqrt@root& (0+255),b
 33871  01550C  0E00               	movlw	0
 33872  01550E  6F82               	movwf	(sqrt@root+1)& (0+255),b
 33873  015510  0E80               	movlw	128
 33874  015512  6F83               	movwf	(sqrt@root+2)& (0+255),b
 33875  015514  0E7F               	movlw	127
 33876  015516  6F84               	movwf	(sqrt@root+3)& (0+255),b
 33877                           
 33878                           ; BSR set to: 0
 33879  015518  C081  F06C         	movff	sqrt@root,?_sqrt
 33880  01551C  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 33881  015520  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 33882  015524  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 33883                           
 33884                           ; BSR set to: 0
 33885  015528  0012               	return	
 33886  01552A                     i2l2223:
 33887                           
 33888                           ; BSR set to: 0
 33889                           
 33890                           ; BSR set to: 0
 33891  01552A  0E81               	movlw	129
 33892  01552C  277F               	addwf	sqrt@exp& (0+255),f,b
 33893  01552E  0EFF               	movlw	255
 33894  015530  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 33895  015532  517F               	movf	sqrt@exp& (0+255),w,b
 33896  015534  0B01               	andlw	1
 33897  015536  6F7A               	movwf	sqrt@p& (0+255),b
 33898  015538  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 33899  01553A  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 33900  01553C  337F               	rrcf	sqrt@exp& (0+255),f,b
 33901  01553E  0E7F               	movlw	127
 33902  015540  277F               	addwf	sqrt@exp& (0+255),f,b
 33903  015542  0E00               	movlw	0
 33904  015544  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 33905  015546  90D8               	bcf	status,0,c
 33906  015548  3585               	rlcf	sqrt@frac& (0+255),w,b
 33907  01554A  6F76               	movwf	sqrt@tfrac& (0+255),b
 33908  01554C  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 33909  01554E  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 33910  015550  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 33911  015552  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 33912  015554  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 33913  015556  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 33914                           
 33915                           ; BSR set to: 0
 33916  015558  0E00               	movlw	0
 33917  01555A  6F85               	movwf	sqrt@frac& (0+255),b
 33918  01555C  0E00               	movlw	0
 33919  01555E  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 33920  015560  0E00               	movlw	0
 33921  015562  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 33922  015564  0E00               	movlw	0
 33923  015566  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 33924                           
 33925                           ; BSR set to: 0
 33926  015568  0E00               	movlw	0
 33927  01556A  6F7B               	movwf	sqrt@grs& (0+255),b
 33928  01556C  0E00               	movlw	0
 33929  01556E  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 33930  015570  0E00               	movlw	0
 33931  015572  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 33932  015574  0E01               	movlw	1
 33933  015576  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 33934                           
 33935                           ; BSR set to: 0
 33936  015578  517A               	movf	sqrt@p& (0+255),w,b
 33937  01557A  B4D8               	btfsc	status,2,c
 33938  01557C  D005               	goto	i2l2224
 33939                           
 33940                           ; BSR set to: 0
 33941  01557E  90D8               	bcf	status,0,c
 33942  015580  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 33943  015582  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 33944  015584  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 33945  015586  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 33946  015588                     i2l2224:
 33947                           
 33948                           ; BSR set to: 0
 33949                           
 33950                           ; BSR set to: 0
 33951  015588  0E00               	movlw	0
 33952  01558A  6F75               	movwf	sqrt@i& (0+255),b
 33953  01558C  D052               	goto	i2l2225
 33954  01558E                     
 33955                           ; BSR set to: 0
 33956                           
 33957                           ; BSR set to: 0
 33958  01558E  517B               	movf	sqrt@grs& (0+255),w,b
 33959  015590  1385               	iorwf	sqrt@frac& (0+255),f,b
 33960  015592  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 33961  015594  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 33962  015596  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 33963  015598  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 33964  01559A  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 33965  01559C  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 33966  01559E  5185               	movf	sqrt@frac& (0+255),w,b
 33967  0155A0  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 33968  0155A2  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 33969  0155A4  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 33970  0155A6  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 33971  0155A8  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 33972  0155AA  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 33973  0155AC  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 33974  0155AE  A0D8               	btfss	status,0,c
 33975  0155B0  D011               	goto	i2l2227
 33976                           
 33977                           ; BSR set to: 0
 33978  0155B2  5185               	movf	sqrt@frac& (0+255),w,b
 33979  0155B4  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 33980  0155B6  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 33981  0155B8  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 33982  0155BA  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 33983  0155BC  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 33984  0155BE  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 33985  0155C0  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 33986  0155C2  517B               	movf	sqrt@grs& (0+255),w,b
 33987  0155C4  2785               	addwf	sqrt@frac& (0+255),f,b
 33988  0155C6  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 33989  0155C8  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 33990  0155CA  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 33991  0155CC  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 33992  0155CE  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 33993  0155D0  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 33994  0155D2  D014               	goto	i2l2228
 33995  0155D4                     i2l2227:
 33996                           
 33997                           ; BSR set to: 0
 33998                           
 33999                           ; BSR set to: 0
 34000  0155D4  C07B  F070         	movff	sqrt@grs,??_sqrt
 34001  0155D8  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 34002  0155DC  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 34003  0155E0  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 34004  0155E4  1F70               	comf	??_sqrt& (0+255),f,b
 34005  0155E6  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 34006  0155E8  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 34007  0155EA  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 34008  0155EC  5170               	movf	??_sqrt& (0+255),w,b
 34009  0155EE  1785               	andwf	sqrt@frac& (0+255),f,b
 34010  0155F0  5171               	movf	(??_sqrt+1)& (0+255),w,b
 34011  0155F2  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 34012  0155F4  5172               	movf	(??_sqrt+2)& (0+255),w,b
 34013  0155F6  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 34014  0155F8  5173               	movf	(??_sqrt+3)& (0+255),w,b
 34015  0155FA  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 34016  0155FC                     i2l2228:
 34017                           
 34018                           ; BSR set to: 0
 34019                           
 34020                           ; BSR set to: 0
 34021  0155FC  C07B  F070         	movff	sqrt@grs,??_sqrt
 34022  015600  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 34023  015604  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 34024  015608  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 34025  01560C  90D8               	bcf	status,0,c
 34026  01560E  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 34027  015610  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 34028  015612  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 34029  015614  3370               	rrcf	??_sqrt& (0+255),f,b
 34030  015616  C070  F07B         	movff	??_sqrt,sqrt@grs
 34031  01561A  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 34032  01561E  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 34033  015622  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 34034                           
 34035                           ; BSR set to: 0
 34036  015626  90D8               	bcf	status,0,c
 34037  015628  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 34038  01562A  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 34039  01562C  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 34040  01562E  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 34041                           
 34042                           ; BSR set to: 0
 34043  015630  2B75               	incf	sqrt@i& (0+255),f,b
 34044  015632                     i2l2225:
 34045                           
 34046                           ; BSR set to: 0
 34047                           
 34048                           ; BSR set to: 0
 34049  015632  0E18               	movlw	24
 34050  015634  6575               	cpfsgt	sqrt@i& (0+255),b
 34051  015636  D7AB               	goto	i2l2226
 34052                           
 34053                           ; BSR set to: 0
 34054                           
 34055                           ; BSR set to: 0
 34056  015638  C085  F070         	movff	sqrt@frac,??_sqrt
 34057  01563C  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 34058  015640  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 34059  015644  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 34060  015648  90D8               	bcf	status,0,c
 34061  01564A  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 34062  01564C  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 34063  01564E  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 34064  015650  3370               	rrcf	??_sqrt& (0+255),f,b
 34065  015652  C070  F085         	movff	??_sqrt,sqrt@frac
 34066  015656  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 34067  01565A  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 34068  01565E  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 34069                           
 34070                           ; BSR set to: 0
 34071  015662  0E01               	movlw	1
 34072  015664  1585               	andwf	sqrt@frac& (0+255),w,b
 34073  015666  6F7B               	movwf	sqrt@grs& (0+255),b
 34074  015668  0E00               	movlw	0
 34075  01566A  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 34076  01566C  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 34077  01566E  0E00               	movlw	0
 34078  015670  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 34079  015672  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 34080  015674  0E00               	movlw	0
 34081  015676  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 34082  015678  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 34083                           
 34084                           ; BSR set to: 0
 34085  01567A  C085  F070         	movff	sqrt@frac,??_sqrt
 34086  01567E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 34087  015682  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 34088  015686  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 34089  01568A  90D8               	bcf	status,0,c
 34090  01568C  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 34091  01568E  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 34092  015690  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 34093  015692  3370               	rrcf	??_sqrt& (0+255),f,b
 34094  015694  C070  F085         	movff	??_sqrt,sqrt@frac
 34095  015698  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 34096  01569C  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 34097  0156A0  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 34098  0156A4  517B               	movf	sqrt@grs& (0+255),w,b
 34099  0156A6  2785               	addwf	sqrt@frac& (0+255),f,b
 34100  0156A8  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 34101  0156AA  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 34102  0156AC  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 34103  0156AE  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 34104  0156B0  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 34105  0156B2  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 34106                           
 34107                           ; BSR set to: 0
 34108  0156B4  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 34109  0156B6  D017               	goto	i2l2230
 34110                           
 34111                           ; BSR set to: 0
 34112  0156B8  C085  F070         	movff	sqrt@frac,??_sqrt
 34113  0156BC  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 34114  0156C0  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 34115  0156C4  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 34116  0156C8  90D8               	bcf	status,0,c
 34117  0156CA  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 34118  0156CC  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 34119  0156CE  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 34120  0156D0  3370               	rrcf	??_sqrt& (0+255),f,b
 34121  0156D2  C070  F085         	movff	??_sqrt,sqrt@frac
 34122  0156D6  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 34123  0156DA  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 34124  0156DE  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 34125  0156E2  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 34126  0156E4  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 34127  0156E6                     i2l2230:
 34128                           
 34129                           ; BSR set to: 0
 34130                           
 34131                           ; BSR set to: 0
 34132  0156E6  0EFF               	movlw	255
 34133  0156E8  1585               	andwf	sqrt@frac& (0+255),w,b
 34134  0156EA  6F81               	movwf	sqrt@root& (0+255),b
 34135  0156EC  0EFF               	movlw	255
 34136  0156EE  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 34137  0156F0  6F82               	movwf	(sqrt@root+1)& (0+255),b
 34138  0156F2  0E7F               	movlw	127
 34139  0156F4  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 34140  0156F6  6F83               	movwf	(sqrt@root+2)& (0+255),b
 34141  0156F8  0E00               	movlw	0
 34142  0156FA  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 34143  0156FC  6F84               	movwf	(sqrt@root+3)& (0+255),b
 34144                           
 34145                           ; BSR set to: 0
 34146  0156FE  C07F  F07A         	movff	sqrt@exp,sqrt@p
 34147                           
 34148                           ; BSR set to: 0
 34149  015702  B17A               	btfsc	sqrt@p& (0+255),0,b
 34150                           
 34151                           ; BSR set to: 0
 34152  015704  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 34153                           
 34154                           ; BSR set to: 0
 34155                           
 34156                           ; BSR set to: 0
 34157  015706  90D8               	bcf	status,0,c
 34158  015708  317A               	rrcf	sqrt@p& (0+255),w,b
 34159  01570A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 34160                           
 34161                           ; BSR set to: 0
 34162  01570C  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 34163                           
 34164                           ; BSR set to: 0
 34165  01570E  C081  F06C         	movff	sqrt@root,?_sqrt
 34166  015712  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 34167  015716  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 34168  01571A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 34169  01571E  0012               	return	
 34170  015720                     __end_of_sqrt:
 34171                           	opt stack 0
 34172                           tosu	equ	0xFFF
 34173                           tosh	equ	0xFFE
 34174                           tosl	equ	0xFFD
 34175                           pclatu	equ	0xFFB
 34176                           pclath	equ	0xFFA
 34177                           tblptru	equ	0xFF8
 34178                           tblptrh	equ	0xFF7
 34179                           tblptrl	equ	0xFF6
 34180                           tablat	equ	0xFF5
 34181                           prodh	equ	0xFF4
 34182                           prodl	equ	0xFF3
 34183                           intcon	equ	0xFF2
 34184                           indf0	equ	0xFEF
 34185                           postinc0	equ	0xFEE
 34186                           fsr0h	equ	0xFEA
 34187                           fsr0l	equ	0xFE9
 34188                           wreg	equ	0xFE8
 34189                           indf1	equ	0xFE7
 34190                           postdec1	equ	0xFE5
 34191                           plusw1	equ	0xFE3
 34192                           fsr1h	equ	0xFE2
 34193                           fsr1l	equ	0xFE1
 34194                           bsr	equ	0xFE0
 34195                           indf2	equ	0xFDF
 34196                           postinc2	equ	0xFDE
 34197                           postdec2	equ	0xFDD
 34198                           plusw2	equ	0xFDB
 34199                           fsr2h	equ	0xFDA
 34200                           fsr2l	equ	0xFD9
 34201                           status	equ	0xFD8
 34202                           
 34203 ;; *************** function _atan *****************
 34204 ;; Defined at:
 34205 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 34206 ;; Parameters:    Size  Location     Type
 34207 ;;  f               4   28[BANK0 ] unsigned char 
 34208 ;; Auto vars:     Size  Location     Type
 34209 ;;  val             4   45[BANK0 ] unsigned char 
 34210 ;;  val_squared     4   41[BANK0 ] unsigned char 
 34211 ;;  x               4   36[BANK0 ] unsigned char 
 34212 ;;  y               4   32[BANK0 ] unsigned char 
 34213 ;;  recip           1   40[BANK0 ] unsigned char 
 34214 ;; Return value:  Size  Location     Type
 34215 ;;                  4   28[BANK0 ] unsigned char 
 34216 ;; Registers used:
 34217 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34218 ;; Tracked objects:
 34219 ;;		On entry : 0/0
 34220 ;;		On exit  : 0/0
 34221 ;;		Unchanged: 0/0
 34222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34224 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34226 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34227 ;;Total ram usage:       21 bytes
 34228 ;; Hardware stack levels used:    1
 34229 ;; Hardware stack levels required when called:    2
 34230 ;; This function calls:
 34231 ;;		_eval_poly
 34232 ;;		_fabs
 34233 ;;		i2___fladd
 34234 ;;		i2___fldiv
 34235 ;;		i2___flge
 34236 ;;		i2___flmul
 34237 ;;		i2___flneg
 34238 ;; This function is called by:
 34239 ;;		_asin
 34240 ;; This function uses a non-reentrant model
 34241 ;;
 34242                           
 34243                           	psect	text110
 34244  016448                     __ptext110:
 34245                           	opt stack 0
 34246  016448                     _atan:
 34247                           	opt stack 11
 34248                           
 34249                           ;incstack = 0
 34250  016448  C07C  F030         	movff	atan@f,fabs@d
 34251  01644C  C07D  F031         	movff	atan@f+1,fabs@d+1
 34252  016450  C07E  F032         	movff	atan@f+2,fabs@d+2
 34253  016454  C07F  F033         	movff	atan@f+3,fabs@d+3
 34254  016458  ECA0  F0C3         	call	_fabs	;wreg free
 34255  01645C  C030  F08D         	movff	?_fabs,atan@val
 34256  016460  C031  F08E         	movff	?_fabs+1,atan@val+1
 34257  016464  C032  F08F         	movff	?_fabs+2,atan@val+2
 34258  016468  C033  F090         	movff	?_fabs+3,atan@val+3
 34259  01646C  0100               	movlb	0	; () banked
 34260  01646E  518D               	movf	atan@val& (0+255),w,b
 34261  016470  118E               	iorwf	(atan@val+1)& (0+255),w,b
 34262  016472  118F               	iorwf	(atan@val+2)& (0+255),w,b
 34263  016474  1190               	iorwf	(atan@val+3)& (0+255),w,b
 34264  016476  A4D8               	btfss	status,2,c
 34265  016478  D009               	goto	i2l1707
 34266                           
 34267                           ; BSR set to: 0
 34268  01647A  0E00               	movlw	0
 34269  01647C  6F7C               	movwf	?_atan& (0+255),b
 34270  01647E  0E00               	movlw	0
 34271  016480  6F7D               	movwf	(?_atan+1)& (0+255),b
 34272  016482  0E00               	movlw	0
 34273  016484  6F7E               	movwf	(?_atan+2)& (0+255),b
 34274  016486  0E00               	movlw	0
 34275  016488  6F7F               	movwf	(?_atan+3)& (0+255),b
 34276                           
 34277                           ; BSR set to: 0
 34278  01648A  0012               	return	
 34279  01648C                     i2l1707:
 34280                           
 34281                           ; BSR set to: 0
 34282                           
 34283                           ; BSR set to: 0
 34284  01648C  0E00               	movlw	0
 34285  01648E  6E34               	movwf	i2___flge@ff1,c
 34286  016490  0E00               	movlw	0
 34287  016492  6E35               	movwf	i2___flge@ff1+1,c
 34288  016494  0E80               	movlw	128
 34289  016496  6E36               	movwf	i2___flge@ff1+2,c
 34290  016498  0E3F               	movlw	63
 34291  01649A  6E37               	movwf	i2___flge@ff1+3,c
 34292  01649C  C08D  F038         	movff	atan@val,i2___flge@ff2
 34293  0164A0  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 34294  0164A4  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 34295  0164A8  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 34296  0164AC  ECE6  F0B8         	call	i2___flge	;wreg free
 34297  0164B0  B0D8               	btfsc	status,0,c
 34298  0164B2  D002               	goto	i2u1495_40
 34299  0164B4  0E01               	movlw	1
 34300  0164B6  D001               	goto	i2u1496_40
 34301  0164B8                     i2u1495_40:
 34302  0164B8  0E00               	movlw	0
 34303  0164BA                     i2u1496_40:
 34304  0164BA  0100               	movlb	0	; () banked
 34305  0164BC  6F88               	movwf	atan@recip& (0+255),b
 34306  0164BE  5188               	movf	atan@recip& (0+255),w,b
 34307  0164C0  B4D8               	btfsc	status,2,c
 34308  0164C2  D01A               	goto	i2l1709
 34309                           
 34310                           ; BSR set to: 0
 34311  0164C4  0E00               	movlw	0
 34312  0164C6  6E13               	movwf	i2___fldiv@b,c
 34313  0164C8  0E00               	movlw	0
 34314  0164CA  6E14               	movwf	i2___fldiv@b+1,c
 34315  0164CC  0E80               	movlw	128
 34316  0164CE  6E15               	movwf	i2___fldiv@b+2,c
 34317  0164D0  0E3F               	movlw	63
 34318  0164D2  6E16               	movwf	i2___fldiv@b+3,c
 34319  0164D4  C08D  F017         	movff	atan@val,i2___fldiv@a
 34320  0164D8  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 34321  0164DC  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 34322  0164E0  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 34323  0164E4  EC4E  F0AE         	call	i2___fldiv	;wreg free
 34324  0164E8  C013  F08D         	movff	?i2___fldiv,atan@val
 34325  0164EC  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 34326  0164F0  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 34327  0164F4  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 34328  0164F8                     i2l1709:
 34329  0164F8  C08D  F030         	movff	atan@val,i2___flmul@b
 34330  0164FC  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 34331  016500  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 34332  016504  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 34333  016508  C08D  F034         	movff	atan@val,i2___flmul@a
 34334  01650C  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 34335  016510  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 34336  016514  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 34337  016518  EC47  F0A2         	call	i2___flmul	;wreg free
 34338  01651C  C030  F089         	movff	?i2___flmul,atan@val_squared
 34339  016520  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 34340  016524  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 34341  016528  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 34342  01652C  C089  F06C         	movff	atan@val_squared,eval_poly@x
 34343  016530  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 34344  016534  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 34345  016538  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 34346  01653C  0E71               	movlw	low atan@coeff_b
 34347  01653E  0100               	movlb	0	; () banked
 34348  016540  6F70               	movwf	eval_poly@d& (0+255),b
 34349  016542  0EE9               	movlw	high atan@coeff_b
 34350  016544  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34351  016546  0E00               	movlw	0
 34352  016548  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34353  01654A  0E04               	movlw	4
 34354  01654C  6F72               	movwf	eval_poly@n& (0+255),b
 34355  01654E  ECFF  F0B9         	call	_eval_poly	;wreg free
 34356  016552  C06C  F080         	movff	?_eval_poly,atan@y
 34357  016556  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 34358  01655A  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 34359  01655E  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 34360  016562  C089  F06C         	movff	atan@val_squared,eval_poly@x
 34361  016566  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 34362  01656A  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 34363  01656E  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 34364  016572  0E45               	movlw	low atan@coeff_a
 34365  016574  0100               	movlb	0	; () banked
 34366  016576  6F70               	movwf	eval_poly@d& (0+255),b
 34367  016578  0EE9               	movlw	high atan@coeff_a
 34368  01657A  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34369  01657C  0E00               	movlw	0
 34370  01657E  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34371  016580  0E05               	movlw	5
 34372  016582  6F72               	movwf	eval_poly@n& (0+255),b
 34373  016584  ECFF  F0B9         	call	_eval_poly	;wreg free
 34374  016588  C06C  F084         	movff	?_eval_poly,atan@x
 34375  01658C  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 34376  016590  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 34377  016594  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 34378  016598  C08D  F030         	movff	atan@val,i2___flmul@b
 34379  01659C  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 34380  0165A0  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 34381  0165A4  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 34382  0165A8  C080  F017         	movff	atan@y,i2___fldiv@a
 34383  0165AC  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 34384  0165B0  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 34385  0165B4  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 34386  0165B8  C084  F013         	movff	atan@x,i2___fldiv@b
 34387  0165BC  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 34388  0165C0  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 34389  0165C4  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 34390  0165C8  EC4E  F0AE         	call	i2___fldiv	;wreg free
 34391  0165CC  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 34392  0165D0  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 34393  0165D4  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 34394  0165D8  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 34395  0165DC  EC47  F0A2         	call	i2___flmul	;wreg free
 34396  0165E0  C030  F08D         	movff	?i2___flmul,atan@val
 34397  0165E4  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 34398  0165E8  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 34399  0165EC  C033  F090         	movff	?i2___flmul+3,atan@val+3
 34400  0165F0  0100               	movlb	0	; () banked
 34401  0165F2  5188               	movf	atan@recip& (0+255),w,b
 34402  0165F4  B4D8               	btfsc	status,2,c
 34403  0165F6  D024               	goto	i2l1710
 34404                           
 34405                           ; BSR set to: 0
 34406  0165F8  C08D  F02C         	movff	atan@val,i2___flneg@f1
 34407  0165FC  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 34408  016600  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 34409  016604  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 34410  016608  ECA4  F0C4         	call	i2___flneg	;wreg free
 34411  01660C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 34412  016610  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 34413  016614  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 34414  016618  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 34415  01661C  0EDB               	movlw	219
 34416  01661E  6E5A               	movwf	i2___fladd@a,c
 34417  016620  0E0F               	movlw	15
 34418  016622  6E5B               	movwf	i2___fladd@a+1,c
 34419  016624  0EC9               	movlw	201
 34420  016626  6E5C               	movwf	i2___fladd@a+2,c
 34421  016628  0E3F               	movlw	63
 34422  01662A  6E5D               	movwf	i2___fladd@a+3,c
 34423  01662C  EC8E  F0A5         	call	i2___fladd	;wreg free
 34424  016630  C056  F08D         	movff	?i2___fladd,atan@val
 34425  016634  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 34426  016638  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 34427  01663C  C059  F090         	movff	?i2___fladd+3,atan@val+3
 34428  016640                     i2l1710:
 34429  016640  0100               	movlb	0	; () banked
 34430  016642  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 34431  016644  D009               	goto	i2l1712
 34432                           
 34433                           ; BSR set to: 0
 34434  016646  C08D  F07C         	movff	atan@val,?_atan
 34435  01664A  C08E  F07D         	movff	atan@val+1,?_atan+1
 34436  01664E  C08F  F07E         	movff	atan@val+2,?_atan+2
 34437  016652  C090  F07F         	movff	atan@val+3,?_atan+3
 34438  016656  0012               	return	
 34439  016658                     i2l1712:
 34440                           
 34441                           ; BSR set to: 0
 34442                           
 34443                           ; BSR set to: 0
 34444  016658  C08D  F02C         	movff	atan@val,i2___flneg@f1
 34445  01665C  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 34446  016660  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 34447  016664  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 34448  016668  ECA4  F0C4         	call	i2___flneg	;wreg free
 34449  01666C  C02C  F07C         	movff	?i2___flneg,?_atan
 34450  016670  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 34451  016674  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 34452  016678  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 34453  01667C  0012               	return	
 34454  01667E                     __end_of_atan:
 34455                           	opt stack 0
 34456                           tosu	equ	0xFFF
 34457                           tosh	equ	0xFFE
 34458                           tosl	equ	0xFFD
 34459                           pclatu	equ	0xFFB
 34460                           pclath	equ	0xFFA
 34461                           tblptru	equ	0xFF8
 34462                           tblptrh	equ	0xFF7
 34463                           tblptrl	equ	0xFF6
 34464                           tablat	equ	0xFF5
 34465                           prodh	equ	0xFF4
 34466                           prodl	equ	0xFF3
 34467                           intcon	equ	0xFF2
 34468                           indf0	equ	0xFEF
 34469                           postinc0	equ	0xFEE
 34470                           fsr0h	equ	0xFEA
 34471                           fsr0l	equ	0xFE9
 34472                           wreg	equ	0xFE8
 34473                           indf1	equ	0xFE7
 34474                           postdec1	equ	0xFE5
 34475                           plusw1	equ	0xFE3
 34476                           fsr1h	equ	0xFE2
 34477                           fsr1l	equ	0xFE1
 34478                           bsr	equ	0xFE0
 34479                           indf2	equ	0xFDF
 34480                           postinc2	equ	0xFDE
 34481                           postdec2	equ	0xFDD
 34482                           plusw2	equ	0xFDB
 34483                           fsr2h	equ	0xFDA
 34484                           fsr2l	equ	0xFD9
 34485                           status	equ	0xFD8
 34486                           
 34487 ;; *************** function _fabs *****************
 34488 ;; Defined at:
 34489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 34490 ;; Parameters:    Size  Location     Type
 34491 ;;  d               4   47[COMRAM] unsigned char 
 34492 ;; Auto vars:     Size  Location     Type
 34493 ;;		None
 34494 ;; Return value:  Size  Location     Type
 34495 ;;                  4   47[COMRAM] unsigned char 
 34496 ;; Registers used:
 34497 ;;		wreg, status,2, status,0, cstack
 34498 ;; Tracked objects:
 34499 ;;		On entry : 0/0
 34500 ;;		On exit  : 0/0
 34501 ;;		Unchanged: 0/0
 34502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34507 ;;Total ram usage:        4 bytes
 34508 ;; Hardware stack levels used:    1
 34509 ;; Hardware stack levels required when called:    1
 34510 ;; This function calls:
 34511 ;;		i2___flneg
 34512 ;; This function is called by:
 34513 ;;		_asin
 34514 ;;		_atan
 34515 ;; This function uses a non-reentrant model
 34516 ;;
 34517                           
 34518                           	psect	text111
 34519  018740                     __ptext111:
 34520                           	opt stack 0
 34521  018740                     _fabs:
 34522                           	opt stack 12
 34523                           
 34524                           ;incstack = 0
 34525  018740  AE33               	btfss	fabs@d+3,7,c
 34526  018742  D013               	goto	i2l1804
 34527  018744  C030  F02C         	movff	fabs@d,i2___flneg@f1
 34528  018748  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 34529  01874C  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 34530  018750  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 34531  018754  ECA4  F0C4         	call	i2___flneg	;wreg free
 34532  018758  C02C  F030         	movff	?i2___flneg,?_fabs
 34533  01875C  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 34534  018760  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 34535  018764  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 34536  018768  0012               	return	
 34537  01876A                     i2l1804:
 34538  01876A  C030  F030         	movff	fabs@d,?_fabs
 34539  01876E  C031  F031         	movff	fabs@d+1,?_fabs+1
 34540  018772  C032  F032         	movff	fabs@d+2,?_fabs+2
 34541  018776  C033  F033         	movff	fabs@d+3,?_fabs+3
 34542  01877A  0012               	return		;funcret
 34543  01877C                     __end_of_fabs:
 34544                           	opt stack 0
 34545                           tosu	equ	0xFFF
 34546                           tosh	equ	0xFFE
 34547                           tosl	equ	0xFFD
 34548                           pclatu	equ	0xFFB
 34549                           pclath	equ	0xFFA
 34550                           tblptru	equ	0xFF8
 34551                           tblptrh	equ	0xFF7
 34552                           tblptrl	equ	0xFF6
 34553                           tablat	equ	0xFF5
 34554                           prodh	equ	0xFF4
 34555                           prodl	equ	0xFF3
 34556                           intcon	equ	0xFF2
 34557                           indf0	equ	0xFEF
 34558                           postinc0	equ	0xFEE
 34559                           fsr0h	equ	0xFEA
 34560                           fsr0l	equ	0xFE9
 34561                           wreg	equ	0xFE8
 34562                           indf1	equ	0xFE7
 34563                           postdec1	equ	0xFE5
 34564                           plusw1	equ	0xFE3
 34565                           fsr1h	equ	0xFE2
 34566                           fsr1l	equ	0xFE1
 34567                           bsr	equ	0xFE0
 34568                           indf2	equ	0xFDF
 34569                           postinc2	equ	0xFDE
 34570                           postdec2	equ	0xFDD
 34571                           plusw2	equ	0xFDB
 34572                           fsr2h	equ	0xFDA
 34573                           fsr2l	equ	0xFD9
 34574                           status	equ	0xFD8
 34575                           
 34576 ;; *************** function _currentMeasuredToPeak *****************
 34577 ;; Defined at:
 34578 ;;		line 130 in file "main.c"
 34579 ;; Parameters:    Size  Location     Type
 34580 ;;  Measured        4   57[BANK0 ] unsigned char 
 34581 ;;  Angle           4   61[BANK0 ] unsigned char 
 34582 ;; Auto vars:     Size  Location     Type
 34583 ;;  Peak            4   65[BANK0 ] unsigned char 
 34584 ;; Return value:  Size  Location     Type
 34585 ;;                  4   57[BANK0 ] unsigned char 
 34586 ;; Registers used:
 34587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34588 ;; Tracked objects:
 34589 ;;		On entry : 0/0
 34590 ;;		On exit  : 0/0
 34591 ;;		Unchanged: 0/0
 34592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34593 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34594 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34597 ;;Total ram usage:       12 bytes
 34598 ;; Hardware stack levels used:    1
 34599 ;; Hardware stack levels required when called:    3
 34600 ;; This function calls:
 34601 ;;		_sin
 34602 ;;		i2___fldiv
 34603 ;; This function is called by:
 34604 ;;		_ADCPostProcessingCallback
 34605 ;; This function uses a non-reentrant model
 34606 ;;
 34607                           
 34608                           	psect	text112
 34609  017D6C                     __ptext112:
 34610                           	opt stack 0
 34611  017D6C                     _currentMeasuredToPeak:
 34612                           	opt stack 13
 34613                           
 34614                           ;main.c: 133: double Peak = 0.0;
 34615                           
 34616                           ;incstack = 0
 34617  017D6C  0E00               	movlw	0
 34618  017D6E  0100               	movlb	0	; () banked
 34619  017D70  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 34620  017D72  0E00               	movlw	0
 34621  017D74  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 34622  017D76  0E00               	movlw	0
 34623  017D78  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 34624  017D7A  0E00               	movlw	0
 34625  017D7C  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 34626                           
 34627                           ; BSR set to: 0
 34628                           ;main.c: 136: Peak = sin(Angle);
 34629  017D7E  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 34630  017D82  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 34631  017D86  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 34632  017D8A  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 34633  017D8E  ECAF  F0A8         	call	_sin	;wreg free
 34634  017D92  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 34635  017D96  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 34636  017D9A  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 34637  017D9E  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 34638                           
 34639                           ;main.c: 137: Peak = Measured / Peak;
 34640  017DA2  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 34641  017DA6  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 34642  017DAA  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 34643  017DAE  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 34644  017DB2  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 34645  017DB6  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 34646  017DBA  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 34647  017DBE  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 34648  017DC2  EC4E  F0AE         	call	i2___fldiv	;wreg free
 34649  017DC6  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 34650  017DCA  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 34651  017DCE  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 34652  017DD2  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 34653                           
 34654                           ;main.c: 138: return Peak;
 34655  017DD6  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 34656  017DDA  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 34657  017DDE  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 34658  017DE2  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 34659  017DE6  0012               	return	
 34660  017DE8                     __end_of_currentMeasuredToPeak:
 34661                           	opt stack 0
 34662                           tosu	equ	0xFFF
 34663                           tosh	equ	0xFFE
 34664                           tosl	equ	0xFFD
 34665                           pclatu	equ	0xFFB
 34666                           pclath	equ	0xFFA
 34667                           tblptru	equ	0xFF8
 34668                           tblptrh	equ	0xFF7
 34669                           tblptrl	equ	0xFF6
 34670                           tablat	equ	0xFF5
 34671                           prodh	equ	0xFF4
 34672                           prodl	equ	0xFF3
 34673                           intcon	equ	0xFF2
 34674                           indf0	equ	0xFEF
 34675                           postinc0	equ	0xFEE
 34676                           fsr0h	equ	0xFEA
 34677                           fsr0l	equ	0xFE9
 34678                           wreg	equ	0xFE8
 34679                           indf1	equ	0xFE7
 34680                           postdec1	equ	0xFE5
 34681                           plusw1	equ	0xFE3
 34682                           fsr1h	equ	0xFE2
 34683                           fsr1l	equ	0xFE1
 34684                           bsr	equ	0xFE0
 34685                           indf2	equ	0xFDF
 34686                           postinc2	equ	0xFDE
 34687                           postdec2	equ	0xFDD
 34688                           plusw2	equ	0xFDB
 34689                           fsr2h	equ	0xFDA
 34690                           fsr2l	equ	0xFD9
 34691                           status	equ	0xFD8
 34692                           
 34693 ;; *************** function _sin *****************
 34694 ;; Defined at:
 34695 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 34696 ;; Parameters:    Size  Location     Type
 34697 ;;  f               4   40[BANK0 ] unsigned char 
 34698 ;; Auto vars:     Size  Location     Type
 34699 ;;  x2              4   52[BANK0 ] unsigned char 
 34700 ;;  y               4   44[BANK0 ] unsigned char 
 34701 ;;  sgn             1   56[BANK0 ] unsigned char 
 34702 ;; Return value:  Size  Location     Type
 34703 ;;                  4   40[BANK0 ] unsigned char 
 34704 ;; Registers used:
 34705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34706 ;; Tracked objects:
 34707 ;;		On entry : 0/0
 34708 ;;		On exit  : 0/0
 34709 ;;		Unchanged: 0/0
 34710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34712 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34714 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34715 ;;Total ram usage:       17 bytes
 34716 ;; Hardware stack levels used:    1
 34717 ;; Hardware stack levels required when called:    2
 34718 ;; This function calls:
 34719 ;;		_eval_poly
 34720 ;;		_floor
 34721 ;;		i2___fladd
 34722 ;;		i2___fldiv
 34723 ;;		i2___flge
 34724 ;;		i2___flmul
 34725 ;;		i2___flneg
 34726 ;;		i2___flsub
 34727 ;; This function is called by:
 34728 ;;		_peakToRMS
 34729 ;;		_currentMeasuredToPeak
 34730 ;; This function uses a non-reentrant model
 34731 ;;
 34732                           
 34733                           	psect	text113
 34734  01515E                     __ptext113:
 34735                           	opt stack 0
 34736  01515E                     _sin:
 34737                           	opt stack 13
 34738                           
 34739                           ;incstack = 0
 34740  01515E  0E00               	movlw	0
 34741  015160  0100               	movlb	0	; () banked
 34742  015162  6F98               	movwf	sin@sgn& (0+255),b
 34743                           
 34744                           ; BSR set to: 0
 34745  015164  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 34746  015166  D015               	goto	i2l2087
 34747                           
 34748                           ; BSR set to: 0
 34749  015168  C088  F02C         	movff	sin@f,i2___flneg@f1
 34750  01516C  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 34751  015170  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 34752  015174  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 34753  015178  ECA4  F0C4         	call	i2___flneg	;wreg free
 34754  01517C  C02C  F088         	movff	?i2___flneg,sin@f
 34755  015180  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 34756  015184  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 34757  015188  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 34758  01518C  0E01               	movlw	1
 34759  01518E  0100               	movlb	0	; () banked
 34760  015190  6F98               	movwf	sin@sgn& (0+255),b
 34761  015192                     i2l2087:
 34762                           
 34763                           ; BSR set to: 0
 34764                           
 34765                           ; BSR set to: 0
 34766  015192  C088  F030         	movff	sin@f,i2___flmul@b
 34767  015196  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34768  01519A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34769  01519E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34770  0151A2  0E83               	movlw	131
 34771  0151A4  6E34               	movwf	i2___flmul@a,c
 34772  0151A6  0EF9               	movlw	249
 34773  0151A8  6E35               	movwf	i2___flmul@a+1,c
 34774  0151AA  0E22               	movlw	34
 34775  0151AC  6E36               	movwf	i2___flmul@a+2,c
 34776  0151AE  0E3E               	movlw	62
 34777  0151B0  6E37               	movwf	i2___flmul@a+3,c
 34778  0151B2  EC47  F0A2         	call	i2___flmul	;wreg free
 34779  0151B6  C030  F088         	movff	?i2___flmul,sin@f
 34780  0151BA  C031  F089         	movff	?i2___flmul+1,sin@f+1
 34781  0151BE  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 34782  0151C2  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 34783  0151C6  C088  F080         	movff	sin@f,i2___flsub@b
 34784  0151CA  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 34785  0151CE  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 34786  0151D2  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 34787  0151D6  C088  F076         	movff	sin@f,floor@x
 34788  0151DA  C089  F077         	movff	sin@f+1,floor@x+1
 34789  0151DE  C08A  F078         	movff	sin@f+2,floor@x+2
 34790  0151E2  C08B  F079         	movff	sin@f+3,floor@x+3
 34791  0151E6  EC76  F0B9         	call	_floor	;wreg free
 34792  0151EA  C076  F084         	movff	?_floor,i2___flsub@a
 34793  0151EE  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 34794  0151F2  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 34795  0151F6  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 34796  0151FA  ECDC  F0C2         	call	i2___flsub	;wreg free
 34797  0151FE  C080  F088         	movff	?i2___flsub,sin@f
 34798  015202  C081  F089         	movff	?i2___flsub+1,sin@f+1
 34799  015206  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 34800  01520A  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 34801  01520E  C088  F030         	movff	sin@f,i2___flmul@b
 34802  015212  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34803  015216  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34804  01521A  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34805  01521E  0E00               	movlw	0
 34806  015220  6E34               	movwf	i2___flmul@a,c
 34807  015222  0E00               	movlw	0
 34808  015224  6E35               	movwf	i2___flmul@a+1,c
 34809  015226  0E80               	movlw	128
 34810  015228  6E36               	movwf	i2___flmul@a+2,c
 34811  01522A  0E40               	movlw	64
 34812  01522C  6E37               	movwf	i2___flmul@a+3,c
 34813  01522E  EC47  F0A2         	call	i2___flmul	;wreg free
 34814  015232  C030  F088         	movff	?i2___flmul,sin@f
 34815  015236  C031  F089         	movff	?i2___flmul+1,sin@f+1
 34816  01523A  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 34817  01523E  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 34818  015242  0E00               	movlw	0
 34819  015244  6E34               	movwf	i2___flge@ff1,c
 34820  015246  0E00               	movlw	0
 34821  015248  6E35               	movwf	i2___flge@ff1+1,c
 34822  01524A  0E00               	movlw	0
 34823  01524C  6E36               	movwf	i2___flge@ff1+2,c
 34824  01524E  0E40               	movlw	64
 34825  015250  6E37               	movwf	i2___flge@ff1+3,c
 34826  015252  C088  F038         	movff	sin@f,i2___flge@ff2
 34827  015256  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 34828  01525A  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 34829  01525E  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 34830  015262  ECE6  F0B8         	call	i2___flge	;wreg free
 34831  015266  B0D8               	btfsc	status,0,c
 34832  015268  D023               	goto	i2l2088
 34833  01526A  C088  F080         	movff	sin@f,i2___flsub@b
 34834  01526E  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 34835  015272  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 34836  015276  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 34837  01527A  0E00               	movlw	0
 34838  01527C  0100               	movlb	0	; () banked
 34839  01527E  6F84               	movwf	i2___flsub@a& (0+255),b
 34840  015280  0E00               	movlw	0
 34841  015282  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 34842  015284  0E00               	movlw	0
 34843  015286  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 34844  015288  0E40               	movlw	64
 34845  01528A  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 34846  01528C  ECDC  F0C2         	call	i2___flsub	;wreg free
 34847  015290  C080  F088         	movff	?i2___flsub,sin@f
 34848  015294  C081  F089         	movff	?i2___flsub+1,sin@f+1
 34849  015298  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 34850  01529C  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 34851  0152A0  0100               	movlb	0	; () banked
 34852  0152A2  5198               	movf	sin@sgn& (0+255),w,b
 34853  0152A4  A4D8               	btfss	status,2,c
 34854  0152A6  D002               	goto	i2u1642_40
 34855  0152A8  0E01               	movlw	1
 34856  0152AA  D001               	goto	i2u1643_40
 34857  0152AC                     i2u1642_40:
 34858  0152AC  0E00               	movlw	0
 34859  0152AE                     i2u1643_40:
 34860  0152AE  6F98               	movwf	sin@sgn& (0+255),b
 34861  0152B0                     i2l2088:
 34862                           
 34863                           ; BSR set to: 0
 34864  0152B0  0E00               	movlw	0
 34865  0152B2  6E34               	movwf	i2___flge@ff1,c
 34866  0152B4  0E00               	movlw	0
 34867  0152B6  6E35               	movwf	i2___flge@ff1+1,c
 34868  0152B8  0E80               	movlw	128
 34869  0152BA  6E36               	movwf	i2___flge@ff1+2,c
 34870  0152BC  0E3F               	movlw	63
 34871  0152BE  6E37               	movwf	i2___flge@ff1+3,c
 34872  0152C0  C088  F038         	movff	sin@f,i2___flge@ff2
 34873  0152C4  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 34874  0152C8  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 34875  0152CC  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 34876  0152D0  ECE6  F0B8         	call	i2___flge	;wreg free
 34877  0152D4  B0D8               	btfsc	status,0,c
 34878  0152D6  D024               	goto	i2l2089
 34879  0152D8  C088  F02C         	movff	sin@f,i2___flneg@f1
 34880  0152DC  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 34881  0152E0  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 34882  0152E4  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 34883  0152E8  ECA4  F0C4         	call	i2___flneg	;wreg free
 34884  0152EC  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 34885  0152F0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 34886  0152F4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 34887  0152F8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 34888  0152FC  0E00               	movlw	0
 34889  0152FE  6E5A               	movwf	i2___fladd@a,c
 34890  015300  0E00               	movlw	0
 34891  015302  6E5B               	movwf	i2___fladd@a+1,c
 34892  015304  0E00               	movlw	0
 34893  015306  6E5C               	movwf	i2___fladd@a+2,c
 34894  015308  0E40               	movlw	64
 34895  01530A  6E5D               	movwf	i2___fladd@a+3,c
 34896  01530C  EC8E  F0A5         	call	i2___fladd	;wreg free
 34897  015310  C056  F088         	movff	?i2___fladd,sin@f
 34898  015314  C057  F089         	movff	?i2___fladd+1,sin@f+1
 34899  015318  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 34900  01531C  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 34901  015320                     i2l2089:
 34902  015320  C088  F030         	movff	sin@f,i2___flmul@b
 34903  015324  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34904  015328  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34905  01532C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34906  015330  C088  F034         	movff	sin@f,i2___flmul@a
 34907  015334  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 34908  015338  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 34909  01533C  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 34910  015340  EC47  F0A2         	call	i2___flmul	;wreg free
 34911  015344  C030  F094         	movff	?i2___flmul,sin@x2
 34912  015348  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 34913  01534C  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 34914  015350  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 34915  015354  C094  F06C         	movff	sin@x2,eval_poly@x
 34916  015358  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 34917  01535C  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 34918  015360  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 34919  015364  0E85               	movlw	low sin@coeff_b
 34920  015366  0100               	movlb	0	; () banked
 34921  015368  6F70               	movwf	eval_poly@d& (0+255),b
 34922  01536A  0EE9               	movlw	high sin@coeff_b
 34923  01536C  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34924  01536E  0E00               	movlw	0
 34925  015370  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34926  015372  0E03               	movlw	3
 34927  015374  6F72               	movwf	eval_poly@n& (0+255),b
 34928  015376  ECFF  F0B9         	call	_eval_poly	;wreg free
 34929  01537A  C06C  F08C         	movff	?_eval_poly,sin@y
 34930  01537E  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 34931  015382  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 34932  015386  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 34933  01538A  C08C  F017         	movff	sin@y,i2___fldiv@a
 34934  01538E  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 34935  015392  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 34936  015396  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 34937  01539A  0E00               	movlw	0
 34938  01539C  0100               	movlb	0	; () banked
 34939  01539E  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34940  0153A0  0E04               	movlw	4
 34941  0153A2  6F72               	movwf	eval_poly@n& (0+255),b
 34942  0153A4  0E5D               	movlw	low sin@coeff_a
 34943  0153A6  6F70               	movwf	eval_poly@d& (0+255),b
 34944  0153A8  0EE9               	movlw	high sin@coeff_a
 34945  0153AA  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34946  0153AC  C094  F06C         	movff	sin@x2,eval_poly@x
 34947  0153B0  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 34948  0153B4  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 34949  0153B8  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 34950  0153BC  ECFF  F0B9         	call	_eval_poly	;wreg free
 34951  0153C0  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 34952  0153C4  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 34953  0153C8  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 34954  0153CC  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 34955  0153D0  EC4E  F0AE         	call	i2___fldiv	;wreg free
 34956  0153D4  C013  F090         	movff	?i2___fldiv,_sin$4142
 34957  0153D8  C014  F091         	movff	?i2___fldiv+1,_sin$4142+1
 34958  0153DC  C015  F092         	movff	?i2___fldiv+2,_sin$4142+2
 34959  0153E0  C016  F093         	movff	?i2___fldiv+3,_sin$4142+3
 34960  0153E4  C088  F030         	movff	sin@f,i2___flmul@b
 34961  0153E8  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34962  0153EC  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34963  0153F0  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34964  0153F4  C090  F034         	movff	_sin$4142,i2___flmul@a
 34965  0153F8  C091  F035         	movff	_sin$4142+1,i2___flmul@a+1
 34966  0153FC  C092  F036         	movff	_sin$4142+2,i2___flmul@a+2
 34967  015400  C093  F037         	movff	_sin$4142+3,i2___flmul@a+3
 34968  015404  EC47  F0A2         	call	i2___flmul	;wreg free
 34969  015408  C030  F088         	movff	?i2___flmul,sin@f
 34970  01540C  C031  F089         	movff	?i2___flmul+1,sin@f+1
 34971  015410  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 34972  015414  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 34973  015418  0100               	movlb	0	; () banked
 34974  01541A  5198               	movf	sin@sgn& (0+255),w,b
 34975  01541C  B4D8               	btfsc	status,2,c
 34976  01541E  D013               	goto	i2l2090
 34977                           
 34978                           ; BSR set to: 0
 34979  015420  C088  F02C         	movff	sin@f,i2___flneg@f1
 34980  015424  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 34981  015428  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 34982  01542C  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 34983  015430  ECA4  F0C4         	call	i2___flneg	;wreg free
 34984  015434  C02C  F088         	movff	?i2___flneg,?_sin
 34985  015438  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 34986  01543C  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 34987  015440  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 34988  015444  0012               	return	
 34989  015446                     i2l2090:
 34990                           
 34991                           ; BSR set to: 0
 34992  015446  C088  F088         	movff	sin@f,?_sin
 34993  01544A  C089  F089         	movff	sin@f+1,?_sin+1
 34994  01544E  C08A  F08A         	movff	sin@f+2,?_sin+2
 34995  015452  C08B  F08B         	movff	sin@f+3,?_sin+3
 34996  015456  0012               	return		;funcret
 34997  015458                     __end_of_sin:
 34998                           	opt stack 0
 34999                           tosu	equ	0xFFF
 35000                           tosh	equ	0xFFE
 35001                           tosl	equ	0xFFD
 35002                           pclatu	equ	0xFFB
 35003                           pclath	equ	0xFFA
 35004                           tblptru	equ	0xFF8
 35005                           tblptrh	equ	0xFF7
 35006                           tblptrl	equ	0xFF6
 35007                           tablat	equ	0xFF5
 35008                           prodh	equ	0xFF4
 35009                           prodl	equ	0xFF3
 35010                           intcon	equ	0xFF2
 35011                           indf0	equ	0xFEF
 35012                           postinc0	equ	0xFEE
 35013                           fsr0h	equ	0xFEA
 35014                           fsr0l	equ	0xFE9
 35015                           wreg	equ	0xFE8
 35016                           indf1	equ	0xFE7
 35017                           postdec1	equ	0xFE5
 35018                           plusw1	equ	0xFE3
 35019                           fsr1h	equ	0xFE2
 35020                           fsr1l	equ	0xFE1
 35021                           bsr	equ	0xFE0
 35022                           indf2	equ	0xFDF
 35023                           postinc2	equ	0xFDE
 35024                           postdec2	equ	0xFDD
 35025                           plusw2	equ	0xFDB
 35026                           fsr2h	equ	0xFDA
 35027                           fsr2l	equ	0xFD9
 35028                           status	equ	0xFD8
 35029                           
 35030 ;; *************** function i2___flsub *****************
 35031 ;; Defined at:
 35032 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 35033 ;; Parameters:    Size  Location     Type
 35034 ;;  b               4   32[BANK0 ] unsigned char 
 35035 ;;  a               4   36[BANK0 ] unsigned char 
 35036 ;; Auto vars:     Size  Location     Type
 35037 ;;		None
 35038 ;; Return value:  Size  Location     Type
 35039 ;;                  4   32[BANK0 ] unsigned char 
 35040 ;; Registers used:
 35041 ;;		wreg, status,2, status,0, cstack
 35042 ;; Tracked objects:
 35043 ;;		On entry : 0/0
 35044 ;;		On exit  : 0/0
 35045 ;;		Unchanged: 0/0
 35046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35047 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35050 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35051 ;;Total ram usage:        8 bytes
 35052 ;; Hardware stack levels used:    1
 35053 ;; Hardware stack levels required when called:    1
 35054 ;; This function calls:
 35055 ;;		i2___fladd
 35056 ;; This function is called by:
 35057 ;;		_sin
 35058 ;;		i2_printf
 35059 ;; This function uses a non-reentrant model
 35060 ;;
 35061                           
 35062                           	psect	text114
 35063  0185B8                     __ptext114:
 35064                           	opt stack 0
 35065  0185B8                     i2___flsub:
 35066                           	opt stack 15
 35067                           
 35068                           ;incstack = 0
 35069  0185B8  0E00               	movlw	0
 35070  0185BA  0100               	movlb	0	; () banked
 35071  0185BC  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 35072  0185BE  0E00               	movlw	0
 35073  0185C0  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 35074  0185C2  0E00               	movlw	0
 35075  0185C4  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 35076  0185C6  0E80               	movlw	128
 35077  0185C8  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 35078                           
 35079                           ; BSR set to: 0
 35080  0185CA  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 35081  0185CE  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 35082  0185D2  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 35083  0185D6  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 35084  0185DA  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 35085  0185DE  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 35086  0185E2  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 35087  0185E6  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 35088  0185EA  EC8E  F0A5         	call	i2___fladd	;wreg free
 35089  0185EE  C056  F080         	movff	?i2___fladd,?i2___flsub
 35090  0185F2  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 35091  0185F6  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 35092  0185FA  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 35093  0185FE  0012               	return	
 35094  018600                     __end_ofi2___flsub:
 35095                           	opt stack 0
 35096                           tosu	equ	0xFFF
 35097                           tosh	equ	0xFFE
 35098                           tosl	equ	0xFFD
 35099                           pclatu	equ	0xFFB
 35100                           pclath	equ	0xFFA
 35101                           tblptru	equ	0xFF8
 35102                           tblptrh	equ	0xFF7
 35103                           tblptrl	equ	0xFF6
 35104                           tablat	equ	0xFF5
 35105                           prodh	equ	0xFF4
 35106                           prodl	equ	0xFF3
 35107                           intcon	equ	0xFF2
 35108                           indf0	equ	0xFEF
 35109                           postinc0	equ	0xFEE
 35110                           fsr0h	equ	0xFEA
 35111                           fsr0l	equ	0xFE9
 35112                           wreg	equ	0xFE8
 35113                           indf1	equ	0xFE7
 35114                           postdec1	equ	0xFE5
 35115                           plusw1	equ	0xFE3
 35116                           fsr1h	equ	0xFE2
 35117                           fsr1l	equ	0xFE1
 35118                           bsr	equ	0xFE0
 35119                           indf2	equ	0xFDF
 35120                           postinc2	equ	0xFDE
 35121                           postdec2	equ	0xFDD
 35122                           plusw2	equ	0xFDB
 35123                           fsr2h	equ	0xFDA
 35124                           fsr2l	equ	0xFD9
 35125                           status	equ	0xFD8
 35126                           
 35127 ;; *************** function i2___flneg *****************
 35128 ;; Defined at:
 35129 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 35130 ;; Parameters:    Size  Location     Type
 35131 ;;  f1              4   43[COMRAM] unsigned char 
 35132 ;; Auto vars:     Size  Location     Type
 35133 ;;		None
 35134 ;; Return value:  Size  Location     Type
 35135 ;;                  4   43[COMRAM] unsigned char 
 35136 ;; Registers used:
 35137 ;;		wreg, status,2, status,0
 35138 ;; Tracked objects:
 35139 ;;		On entry : 0/0
 35140 ;;		On exit  : 0/0
 35141 ;;		Unchanged: 0/0
 35142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35146 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35147 ;;Total ram usage:        4 bytes
 35148 ;; Hardware stack levels used:    1
 35149 ;; This function calls:
 35150 ;;		Nothing
 35151 ;; This function is called by:
 35152 ;;		_peakToRMS
 35153 ;;		_ADCPostProcessingCallback
 35154 ;;		_acos
 35155 ;;		_asin
 35156 ;;		_atan
 35157 ;;		_fabs
 35158 ;;		_sin
 35159 ;;		i2_printf
 35160 ;; This function uses a non-reentrant model
 35161 ;;
 35162                           
 35163                           	psect	text115
 35164  018948                     __ptext115:
 35165                           	opt stack 0
 35166  018948                     i2___flneg:
 35167                           	opt stack 16
 35168                           
 35169                           ;incstack = 0
 35170  018948  502C               	movf	i2___flneg@f1,w,c
 35171  01894A  102D               	iorwf	i2___flneg@f1+1,w,c
 35172  01894C  102E               	iorwf	i2___flneg@f1+2,w,c
 35173  01894E  102F               	iorwf	i2___flneg@f1+3,w,c
 35174  018950  B4D8               	btfsc	status,2,c
 35175  018952  D008               	goto	i2l1832
 35176  018954  0E00               	movlw	0
 35177  018956  1A2C               	xorwf	i2___flneg@f1,f,c
 35178  018958  0E00               	movlw	0
 35179  01895A  1A2D               	xorwf	i2___flneg@f1+1,f,c
 35180  01895C  0E00               	movlw	0
 35181  01895E  1A2E               	xorwf	i2___flneg@f1+2,f,c
 35182  018960  0E80               	movlw	128
 35183  018962  1A2F               	xorwf	i2___flneg@f1+3,f,c
 35184  018964                     i2l1832:
 35185  018964  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 35186  018968  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 35187  01896C  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 35188  018970  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 35189  018974  0012               	return	
 35190  018976                     __end_ofi2___flneg:
 35191                           	opt stack 0
 35192                           tosu	equ	0xFFF
 35193                           tosh	equ	0xFFE
 35194                           tosl	equ	0xFFD
 35195                           pclatu	equ	0xFFB
 35196                           pclath	equ	0xFFA
 35197                           tblptru	equ	0xFF8
 35198                           tblptrh	equ	0xFF7
 35199                           tblptrl	equ	0xFF6
 35200                           tablat	equ	0xFF5
 35201                           prodh	equ	0xFF4
 35202                           prodl	equ	0xFF3
 35203                           intcon	equ	0xFF2
 35204                           indf0	equ	0xFEF
 35205                           postinc0	equ	0xFEE
 35206                           fsr0h	equ	0xFEA
 35207                           fsr0l	equ	0xFE9
 35208                           wreg	equ	0xFE8
 35209                           indf1	equ	0xFE7
 35210                           postdec1	equ	0xFE5
 35211                           plusw1	equ	0xFE3
 35212                           fsr1h	equ	0xFE2
 35213                           fsr1l	equ	0xFE1
 35214                           bsr	equ	0xFE0
 35215                           indf2	equ	0xFDF
 35216                           postinc2	equ	0xFDE
 35217                           postdec2	equ	0xFDD
 35218                           plusw2	equ	0xFDB
 35219                           fsr2h	equ	0xFDA
 35220                           fsr2l	equ	0xFD9
 35221                           status	equ	0xFD8
 35222                           
 35223 ;; *************** function i2___fldiv *****************
 35224 ;; Defined at:
 35225 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 35226 ;; Parameters:    Size  Location     Type
 35227 ;;  b               4   18[COMRAM] unsigned char 
 35228 ;;  a               4   22[COMRAM] unsigned char 
 35229 ;; Auto vars:     Size  Location     Type
 35230 ;;  __fldiv         4   37[COMRAM] unsigned long 
 35231 ;;  __fldiv         4   31[COMRAM] unsigned long 
 35232 ;;  __fldiv         2   35[COMRAM] int 
 35233 ;;  __fldiv         1   42[COMRAM] unsigned char 
 35234 ;;  __fldiv         1   41[COMRAM] unsigned char 
 35235 ;;  __fldiv         1   30[COMRAM] unsigned char 
 35236 ;; Return value:  Size  Location     Type
 35237 ;;                  4   18[COMRAM] unsigned char 
 35238 ;; Registers used:
 35239 ;;		wreg, status,2, status,0
 35240 ;; Tracked objects:
 35241 ;;		On entry : 0/0
 35242 ;;		On exit  : 0/0
 35243 ;;		Unchanged: 0/0
 35244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35245 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35246 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35247 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35248 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35249 ;;Total ram usage:       25 bytes
 35250 ;; Hardware stack levels used:    1
 35251 ;; This function calls:
 35252 ;;		Nothing
 35253 ;; This function is called by:
 35254 ;;		_peakToRMS
 35255 ;;		_currentMeasuredToPeak
 35256 ;;		_ADCPostProcessingCallback
 35257 ;;		_asin
 35258 ;;		_atan
 35259 ;;		_sin
 35260 ;; This function uses a non-reentrant model
 35261 ;;
 35262                           
 35263                           	psect	text116
 35264  015C9C                     __ptext116:
 35265                           	opt stack 0
 35266  015C9C                     i2___fldiv:
 35267                           	opt stack 16
 35268                           
 35269                           ;incstack = 0
 35270  015C9C  5016               	movf	i2___fldiv@b+3,w,c
 35271  015C9E  0B80               	andlw	128
 35272  015CA0  6E1F               	movwf	i2___fldiv@sign,c
 35273  015CA2  5016               	movf	i2___fldiv@b+3,w,c
 35274  015CA4  2416               	addwf	i2___fldiv@b+3,w,c
 35275  015CA6  6E2A               	movwf	i2___fldiv@bexp,c
 35276  015CA8  BE15               	btfsc	i2___fldiv@b+2,7,c
 35277  015CAA  802A               	bsf	i2___fldiv@bexp,0,c
 35278  015CAC  502A               	movf	i2___fldiv@bexp,w,c
 35279  015CAE  B4D8               	btfsc	status,2,c
 35280  015CB0  D00D               	goto	i2l2152
 35281  015CB2  282A               	incf	i2___fldiv@bexp,w,c
 35282  015CB4  A4D8               	btfss	status,2,c
 35283  015CB6  D008               	goto	i2l2153
 35284  015CB8  0E00               	movlw	0
 35285  015CBA  6E13               	movwf	i2___fldiv@b,c
 35286  015CBC  0E00               	movlw	0
 35287  015CBE  6E14               	movwf	i2___fldiv@b+1,c
 35288  015CC0  0E00               	movlw	0
 35289  015CC2  6E15               	movwf	i2___fldiv@b+2,c
 35290  015CC4  0E00               	movlw	0
 35291  015CC6  6E16               	movwf	i2___fldiv@b+3,c
 35292  015CC8                     i2l2153:
 35293  015CC8  8E15               	bsf	i2___fldiv@b+2,7,c
 35294  015CCA  D006               	goto	L19
 35295  015CCC                     i2l2152:
 35296  015CCC  0E00               	movlw	0
 35297  015CCE  6E13               	movwf	i2___fldiv@b,c
 35298  015CD0  0E00               	movlw	0
 35299  015CD2  6E14               	movwf	i2___fldiv@b+1,c
 35300  015CD4  0E00               	movlw	0
 35301  015CD6  6E15               	movwf	i2___fldiv@b+2,c
 35302  015CD8                     L19:
 35303  015CD8  0E00               	movlw	0
 35304  015CDA  6E16               	movwf	i2___fldiv@b+3,c
 35305  015CDC  501A               	movf	i2___fldiv@a+3,w,c
 35306  015CDE  0B80               	andlw	128
 35307  015CE0  1A1F               	xorwf	i2___fldiv@sign,f,c
 35308  015CE2  501A               	movf	i2___fldiv@a+3,w,c
 35309  015CE4  241A               	addwf	i2___fldiv@a+3,w,c
 35310  015CE6  6E2B               	movwf	i2___fldiv@aexp,c
 35311  015CE8  BE19               	btfsc	i2___fldiv@a+2,7,c
 35312  015CEA  802B               	bsf	i2___fldiv@aexp,0,c
 35313  015CEC  502B               	movf	i2___fldiv@aexp,w,c
 35314  015CEE  B4D8               	btfsc	status,2,c
 35315  015CF0  D00D               	goto	i2l2156
 35316  015CF2  282B               	incf	i2___fldiv@aexp,w,c
 35317  015CF4  A4D8               	btfss	status,2,c
 35318  015CF6  D008               	goto	i2l2157
 35319  015CF8  0E00               	movlw	0
 35320  015CFA  6E17               	movwf	i2___fldiv@a,c
 35321  015CFC  0E00               	movlw	0
 35322  015CFE  6E18               	movwf	i2___fldiv@a+1,c
 35323  015D00  0E00               	movlw	0
 35324  015D02  6E19               	movwf	i2___fldiv@a+2,c
 35325  015D04  0E00               	movlw	0
 35326  015D06  6E1A               	movwf	i2___fldiv@a+3,c
 35327  015D08                     i2l2157:
 35328  015D08  8E19               	bsf	i2___fldiv@a+2,7,c
 35329  015D0A  D006               	goto	L20
 35330  015D0C                     i2l2156:
 35331  015D0C  0E00               	movlw	0
 35332  015D0E  6E17               	movwf	i2___fldiv@a,c
 35333  015D10  0E00               	movlw	0
 35334  015D12  6E18               	movwf	i2___fldiv@a+1,c
 35335  015D14  0E00               	movlw	0
 35336  015D16  6E19               	movwf	i2___fldiv@a+2,c
 35337  015D18                     L20:
 35338  015D18  0E00               	movlw	0
 35339  015D1A  6E1A               	movwf	i2___fldiv@a+3,c
 35340  015D1C  5017               	movf	i2___fldiv@a,w,c
 35341  015D1E  1018               	iorwf	i2___fldiv@a+1,w,c
 35342  015D20  1019               	iorwf	i2___fldiv@a+2,w,c
 35343  015D22  101A               	iorwf	i2___fldiv@a+3,w,c
 35344  015D24  A4D8               	btfss	status,2,c
 35345  015D26  D015               	goto	i2l2159
 35346  015D28  0E00               	movlw	0
 35347  015D2A  6E13               	movwf	i2___fldiv@b,c
 35348  015D2C  0E00               	movlw	0
 35349  015D2E  6E14               	movwf	i2___fldiv@b+1,c
 35350  015D30  0E00               	movlw	0
 35351  015D32  6E15               	movwf	i2___fldiv@b+2,c
 35352  015D34  0E00               	movlw	0
 35353  015D36  6E16               	movwf	i2___fldiv@b+3,c
 35354  015D38  0E80               	movlw	128
 35355  015D3A  1215               	iorwf	i2___fldiv@b+2,f,c
 35356  015D3C  0E7F               	movlw	127
 35357  015D3E  1216               	iorwf	i2___fldiv@b+3,f,c
 35358  015D40  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 35359  015D44  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 35360  015D48  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 35361  015D4C  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 35362  015D50  0012               	return	
 35363  015D52                     i2l2159:
 35364  015D52  502A               	movf	i2___fldiv@bexp,w,c
 35365  015D54  A4D8               	btfss	status,2,c
 35366  015D56  D011               	goto	i2l2161
 35367  015D58  0E00               	movlw	0
 35368  015D5A  6E13               	movwf	i2___fldiv@b,c
 35369  015D5C  0E00               	movlw	0
 35370  015D5E  6E14               	movwf	i2___fldiv@b+1,c
 35371  015D60  0E00               	movlw	0
 35372  015D62  6E15               	movwf	i2___fldiv@b+2,c
 35373  015D64  0E00               	movlw	0
 35374  015D66  6E16               	movwf	i2___fldiv@b+3,c
 35375  015D68  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 35376  015D6C  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 35377  015D70  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 35378  015D74  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 35379  015D78  0012               	return	
 35380  015D7A                     i2l2161:
 35381  015D7A  502B               	movf	i2___fldiv@aexp,w,c
 35382  015D7C  6E1B               	movwf	??i2___fldiv& (0+255),c
 35383  015D7E  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 35384  015D80  1E1B               	comf	??i2___fldiv,f,c
 35385  015D82  1E1C               	comf	??i2___fldiv+1,f,c
 35386  015D84  4A1B               	infsnz	??i2___fldiv,f,c
 35387  015D86  2A1C               	incf	??i2___fldiv+1,f,c
 35388  015D88  502A               	movf	i2___fldiv@bexp,w,c
 35389  015D8A  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 35390  015D8C  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 35391  015D8E  501B               	movf	??i2___fldiv,w,c
 35392  015D90  261D               	addwf	??i2___fldiv+2,f,c
 35393  015D92  501C               	movf	??i2___fldiv+1,w,c
 35394  015D94  221E               	addwfc	??i2___fldiv+3,f,c
 35395  015D96  0E7F               	movlw	127
 35396  015D98  241D               	addwf	??i2___fldiv+2,w,c
 35397  015D9A  6E24               	movwf	i2___fldiv@new_exp,c
 35398  015D9C  0E00               	movlw	0
 35399  015D9E  201E               	addwfc	??i2___fldiv+3,w,c
 35400  015DA0  6E25               	movwf	i2___fldiv@new_exp+1,c
 35401  015DA2  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 35402  015DA6  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 35403  015DAA  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 35404  015DAE  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 35405  015DB2  0E00               	movlw	0
 35406  015DB4  6E13               	movwf	i2___fldiv@b,c
 35407  015DB6  0E00               	movlw	0
 35408  015DB8  6E14               	movwf	i2___fldiv@b+1,c
 35409  015DBA  0E00               	movlw	0
 35410  015DBC  6E15               	movwf	i2___fldiv@b+2,c
 35411  015DBE  0E00               	movlw	0
 35412  015DC0  6E16               	movwf	i2___fldiv@b+3,c
 35413  015DC2  0E00               	movlw	0
 35414  015DC4  6E26               	movwf	i2___fldiv@grs,c
 35415  015DC6  0E00               	movlw	0
 35416  015DC8  6E27               	movwf	i2___fldiv@grs+1,c
 35417  015DCA  0E00               	movlw	0
 35418  015DCC  6E28               	movwf	i2___fldiv@grs+2,c
 35419  015DCE  0E00               	movlw	0
 35420  015DD0  6E29               	movwf	i2___fldiv@grs+3,c
 35421  015DD2  0E00               	movlw	0
 35422  015DD4  6E2B               	movwf	i2___fldiv@aexp,c
 35423  015DD6  D028               	goto	i2l2162
 35424  015DD8  502B               	movf	i2___fldiv@aexp,w,c
 35425  015DDA  B4D8               	btfsc	status,2,c
 35426  015DDC  D011               	goto	i2l2164
 35427  015DDE  90D8               	bcf	status,0,c
 35428  015DE0  3620               	rlcf	i2___fldiv@rem,f,c
 35429  015DE2  3621               	rlcf	i2___fldiv@rem+1,f,c
 35430  015DE4  3622               	rlcf	i2___fldiv@rem+2,f,c
 35431  015DE6  3623               	rlcf	i2___fldiv@rem+3,f,c
 35432  015DE8  90D8               	bcf	status,0,c
 35433  015DEA  3613               	rlcf	i2___fldiv@b,f,c
 35434  015DEC  3614               	rlcf	i2___fldiv@b+1,f,c
 35435  015DEE  3615               	rlcf	i2___fldiv@b+2,f,c
 35436  015DF0  3616               	rlcf	i2___fldiv@b+3,f,c
 35437  015DF2  BE29               	btfsc	i2___fldiv@grs+3,7,c
 35438  015DF4  8013               	bsf	i2___fldiv@b,0,c
 35439  015DF6  90D8               	bcf	status,0,c
 35440  015DF8  3626               	rlcf	i2___fldiv@grs,f,c
 35441  015DFA  3627               	rlcf	i2___fldiv@grs+1,f,c
 35442  015DFC  3628               	rlcf	i2___fldiv@grs+2,f,c
 35443  015DFE  3629               	rlcf	i2___fldiv@grs+3,f,c
 35444  015E00                     i2l2164:
 35445  015E00  5017               	movf	i2___fldiv@a,w,c
 35446  015E02  5C20               	subwf	i2___fldiv@rem,w,c
 35447  015E04  5018               	movf	i2___fldiv@a+1,w,c
 35448  015E06  5821               	subwfb	i2___fldiv@rem+1,w,c
 35449  015E08  5019               	movf	i2___fldiv@a+2,w,c
 35450  015E0A  5822               	subwfb	i2___fldiv@rem+2,w,c
 35451  015E0C  501A               	movf	i2___fldiv@a+3,w,c
 35452  015E0E  5823               	subwfb	i2___fldiv@rem+3,w,c
 35453  015E10  A0D8               	btfss	status,0,c
 35454  015E12  D009               	goto	i2l2166
 35455  015E14  8C29               	bsf	i2___fldiv@grs+3,6,c
 35456  015E16  5017               	movf	i2___fldiv@a,w,c
 35457  015E18  5E20               	subwf	i2___fldiv@rem,f,c
 35458  015E1A  5018               	movf	i2___fldiv@a+1,w,c
 35459  015E1C  5A21               	subwfb	i2___fldiv@rem+1,f,c
 35460  015E1E  5019               	movf	i2___fldiv@a+2,w,c
 35461  015E20  5A22               	subwfb	i2___fldiv@rem+2,f,c
 35462  015E22  501A               	movf	i2___fldiv@a+3,w,c
 35463  015E24  5A23               	subwfb	i2___fldiv@rem+3,f,c
 35464  015E26                     i2l2166:
 35465  015E26  2A2B               	incf	i2___fldiv@aexp,f,c
 35466  015E28                     i2l2162:
 35467  015E28  0E19               	movlw	25
 35468  015E2A  642B               	cpfsgt	i2___fldiv@aexp,c
 35469  015E2C  D7D5               	goto	i2l2163
 35470  015E2E  5020               	movf	i2___fldiv@rem,w,c
 35471  015E30  1021               	iorwf	i2___fldiv@rem+1,w,c
 35472  015E32  1022               	iorwf	i2___fldiv@rem+2,w,c
 35473  015E34  1023               	iorwf	i2___fldiv@rem+3,w,c
 35474  015E36  B4D8               	btfsc	status,2,c
 35475  015E38  D011               	goto	i2l2169
 35476  015E3A  8026               	bsf	i2___fldiv@grs,0,c
 35477  015E3C  D00F               	goto	i2l2169
 35478  015E3E  90D8               	bcf	status,0,c
 35479  015E40  3613               	rlcf	i2___fldiv@b,f,c
 35480  015E42  3614               	rlcf	i2___fldiv@b+1,f,c
 35481  015E44  3615               	rlcf	i2___fldiv@b+2,f,c
 35482  015E46  3616               	rlcf	i2___fldiv@b+3,f,c
 35483  015E48  BE29               	btfsc	i2___fldiv@grs+3,7,c
 35484  015E4A  8013               	bsf	i2___fldiv@b,0,c
 35485  015E4C  90D8               	bcf	status,0,c
 35486  015E4E  3626               	rlcf	i2___fldiv@grs,f,c
 35487  015E50  3627               	rlcf	i2___fldiv@grs+1,f,c
 35488  015E52  3628               	rlcf	i2___fldiv@grs+2,f,c
 35489  015E54  3629               	rlcf	i2___fldiv@grs+3,f,c
 35490  015E56  0624               	decf	i2___fldiv@new_exp,f,c
 35491  015E58  A0D8               	btfss	status,0,c
 35492  015E5A  0625               	decf	i2___fldiv@new_exp+1,f,c
 35493  015E5C                     i2l2169:
 35494  015E5C  AE15               	btfss	i2___fldiv@b+2,7,c
 35495  015E5E  D7EF               	goto	i2l2170
 35496  015E60  0E00               	movlw	0
 35497  015E62  6E2B               	movwf	i2___fldiv@aexp,c
 35498  015E64  AE29               	btfss	i2___fldiv@grs+3,7,c
 35499  015E66  D016               	goto	i2l2176
 35500  015E68  0EFF               	movlw	255
 35501  015E6A  1426               	andwf	i2___fldiv@grs,w,c
 35502  015E6C  6E1B               	movwf	??i2___fldiv& (0+255),c
 35503  015E6E  0EFF               	movlw	255
 35504  015E70  1427               	andwf	i2___fldiv@grs+1,w,c
 35505  015E72  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 35506  015E74  0EFF               	movlw	255
 35507  015E76  1428               	andwf	i2___fldiv@grs+2,w,c
 35508  015E78  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 35509  015E7A  0E7F               	movlw	127
 35510  015E7C  1429               	andwf	i2___fldiv@grs+3,w,c
 35511  015E7E  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 35512  015E80  501B               	movf	??i2___fldiv,w,c
 35513  015E82  101C               	iorwf	??i2___fldiv+1,w,c
 35514  015E84  101D               	iorwf	??i2___fldiv+2,w,c
 35515  015E86  101E               	iorwf	??i2___fldiv+3,w,c
 35516  015E88  A4D8               	btfss	status,2,c
 35517  015E8A  D002               	goto	i2u1452_40
 35518  015E8C  A013               	btfss	i2___fldiv@b,0,c
 35519  015E8E  D002               	goto	i2l2176
 35520  015E90                     i2u1452_40:
 35521  015E90  0E01               	movlw	1
 35522  015E92  6E2B               	movwf	i2___fldiv@aexp,c
 35523  015E94                     i2l2176:
 35524  015E94  502B               	movf	i2___fldiv@aexp,w,c
 35525  015E96  B4D8               	btfsc	status,2,c
 35526  015E98  D01F               	goto	i2l2178
 35527  015E9A  0E01               	movlw	1
 35528  015E9C  2613               	addwf	i2___fldiv@b,f,c
 35529  015E9E  0E00               	movlw	0
 35530  015EA0  2214               	addwfc	i2___fldiv@b+1,f,c
 35531  015EA2  2215               	addwfc	i2___fldiv@b+2,f,c
 35532  015EA4  2216               	addwfc	i2___fldiv@b+3,f,c
 35533  015EA6  A016               	btfss	i2___fldiv@b+3,0,c
 35534  015EA8  D017               	goto	i2l2178
 35535  015EAA  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 35536  015EAE  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 35537  015EB2  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 35538  015EB6  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 35539  015EBA  341E               	rlcf	??i2___fldiv+3,w,c
 35540  015EBC  321E               	rrcf	??i2___fldiv+3,f,c
 35541  015EBE  321D               	rrcf	??i2___fldiv+2,f,c
 35542  015EC0  321C               	rrcf	??i2___fldiv+1,f,c
 35543  015EC2  321B               	rrcf	??i2___fldiv,f,c
 35544  015EC4  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 35545  015EC8  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 35546  015ECC  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 35547  015ED0  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 35548  015ED4  4A24               	infsnz	i2___fldiv@new_exp,f,c
 35549  015ED6  2A25               	incf	i2___fldiv@new_exp+1,f,c
 35550  015ED8                     i2l2178:
 35551  015ED8  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 35552  015EDA  D010               	goto	i2l2179
 35553  015EDC  5025               	movf	i2___fldiv@new_exp+1,w,c
 35554  015EDE  E103               	bnz	i2u1455_40
 35555  015EE0  2824               	incf	i2___fldiv@new_exp,w,c
 35556  015EE2  A0D8               	btfss	status,0,c
 35557  015EE4  D00B               	goto	i2l2179
 35558  015EE6                     i2u1455_40:
 35559  015EE6  0E00               	movlw	0
 35560  015EE8  6E25               	movwf	i2___fldiv@new_exp+1,c
 35561  015EEA  6824               	setf	i2___fldiv@new_exp,c
 35562  015EEC  0E00               	movlw	0
 35563  015EEE  6E13               	movwf	i2___fldiv@b,c
 35564  015EF0  0E00               	movlw	0
 35565  015EF2  6E14               	movwf	i2___fldiv@b+1,c
 35566  015EF4  0E00               	movlw	0
 35567  015EF6  6E15               	movwf	i2___fldiv@b+2,c
 35568  015EF8  0E00               	movlw	0
 35569  015EFA  6E16               	movwf	i2___fldiv@b+3,c
 35570  015EFC                     i2l2179:
 35571  015EFC  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 35572  015EFE  D005               	goto	i2u1456_40
 35573  015F00  5025               	movf	i2___fldiv@new_exp+1,w,c
 35574  015F02  E111               	bnz	i2l11988
 35575  015F04  0424               	decf	i2___fldiv@new_exp,w,c
 35576  015F06  B0D8               	btfsc	status,0,c
 35577  015F08  D00E               	goto	i2l2180
 35578  015F0A                     i2u1456_40:
 35579  015F0A  0E00               	movlw	0
 35580  015F0C  6E25               	movwf	i2___fldiv@new_exp+1,c
 35581  015F0E  0E00               	movlw	0
 35582  015F10  6E24               	movwf	i2___fldiv@new_exp,c
 35583  015F12  0E00               	movlw	0
 35584  015F14  6E13               	movwf	i2___fldiv@b,c
 35585  015F16  0E00               	movlw	0
 35586  015F18  6E14               	movwf	i2___fldiv@b+1,c
 35587  015F1A  0E00               	movlw	0
 35588  015F1C  6E15               	movwf	i2___fldiv@b+2,c
 35589  015F1E  0E00               	movlw	0
 35590  015F20  6E16               	movwf	i2___fldiv@b+3,c
 35591  015F22  0E00               	movlw	0
 35592  015F24  6E1F               	movwf	i2___fldiv@sign,c
 35593  015F26                     i2l2180:
 35594  015F26                     i2l11988:
 35595  015F26  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 35596  015F2A  A02A               	btfss	i2___fldiv@bexp,0,c
 35597  015F2C  D002               	goto	i2l2181
 35598  015F2E  8E15               	bsf	i2___fldiv@b+2,7,c
 35599  015F30  D001               	goto	i2l2182
 35600  015F32                     i2l2181:
 35601  015F32  9E15               	bcf	i2___fldiv@b+2,7,c
 35602  015F34                     i2l2182:
 35603  015F34  90D8               	bcf	status,0,c
 35604  015F36  302A               	rrcf	i2___fldiv@bexp,w,c
 35605  015F38  6E16               	movwf	i2___fldiv@b+3,c
 35606  015F3A  501F               	movf	i2___fldiv@sign,w,c
 35607  015F3C  1216               	iorwf	i2___fldiv@b+3,f,c
 35608  015F3E  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 35609  015F42  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 35610  015F46  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 35611  015F4A  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 35612  015F4E  0012               	return	
 35613  015F50                     __end_ofi2___fldiv:
 35614                           	opt stack 0
 35615                           tosu	equ	0xFFF
 35616                           tosh	equ	0xFFE
 35617                           tosl	equ	0xFFD
 35618                           pclatu	equ	0xFFB
 35619                           pclath	equ	0xFFA
 35620                           tblptru	equ	0xFF8
 35621                           tblptrh	equ	0xFF7
 35622                           tblptrl	equ	0xFF6
 35623                           tablat	equ	0xFF5
 35624                           prodh	equ	0xFF4
 35625                           prodl	equ	0xFF3
 35626                           intcon	equ	0xFF2
 35627                           indf0	equ	0xFEF
 35628                           postinc0	equ	0xFEE
 35629                           fsr0h	equ	0xFEA
 35630                           fsr0l	equ	0xFE9
 35631                           wreg	equ	0xFE8
 35632                           indf1	equ	0xFE7
 35633                           postdec1	equ	0xFE5
 35634                           plusw1	equ	0xFE3
 35635                           fsr1h	equ	0xFE2
 35636                           fsr1l	equ	0xFE1
 35637                           bsr	equ	0xFE0
 35638                           indf2	equ	0xFDF
 35639                           postinc2	equ	0xFDE
 35640                           postdec2	equ	0xFDD
 35641                           plusw2	equ	0xFDB
 35642                           fsr2h	equ	0xFDA
 35643                           fsr2l	equ	0xFD9
 35644                           status	equ	0xFD8
 35645                           
 35646 ;; *************** function _floor *****************
 35647 ;; Defined at:
 35648 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 35649 ;; Parameters:    Size  Location     Type
 35650 ;;  x               4   22[BANK0 ] unsigned char 
 35651 ;; Auto vars:     Size  Location     Type
 35652 ;;  i               4   26[BANK0 ] unsigned char 
 35653 ;;  expon           2   30[BANK0 ] int 
 35654 ;; Return value:  Size  Location     Type
 35655 ;;                  4   22[BANK0 ] int 
 35656 ;; Registers used:
 35657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35658 ;; Tracked objects:
 35659 ;;		On entry : 0/0
 35660 ;;		On exit  : 0/0
 35661 ;;		Unchanged: 0/0
 35662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35664 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35666 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35667 ;;Total ram usage:       10 bytes
 35668 ;; Hardware stack levels used:    1
 35669 ;; Hardware stack levels required when called:    1
 35670 ;; This function calls:
 35671 ;;		_frexp
 35672 ;;		i2___fladd
 35673 ;;		i2___flge
 35674 ;;		i2___fltol
 35675 ;;		i2___xxtofl
 35676 ;; This function is called by:
 35677 ;;		_sin
 35678 ;; This function uses a non-reentrant model
 35679 ;;
 35680                           
 35681                           	psect	text117
 35682  0172EC                     __ptext117:
 35683                           	opt stack 0
 35684  0172EC                     _floor:
 35685                           	opt stack 13
 35686                           
 35687                           ;incstack = 0
 35688  0172EC  C076  F001         	movff	floor@x,frexp@value
 35689  0172F0  C077  F002         	movff	floor@x+1,frexp@value+1
 35690  0172F4  C078  F003         	movff	floor@x+2,frexp@value+2
 35691  0172F8  C079  F004         	movff	floor@x+3,frexp@value+3
 35692  0172FC  0E7E               	movlw	low floor@expon
 35693  0172FE  6E05               	movwf	frexp@eptr,c
 35694  017300  0E00               	movlw	high floor@expon
 35695  017302  6E06               	movwf	frexp@eptr+1,c
 35696  017304  ECF4  F0BE         	call	_frexp	;wreg free
 35697  017308  0100               	movlb	0	; () banked
 35698  01730A  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 35699  01730C  D014               	goto	i2l2309
 35700                           
 35701                           ; BSR set to: 0
 35702  01730E  AF79               	btfss	(floor@x+3)& (0+255),7,b
 35703  017310  D009               	goto	i2l2310
 35704                           
 35705                           ; BSR set to: 0
 35706  017312  0E00               	movlw	0
 35707  017314  6F76               	movwf	?_floor& (0+255),b
 35708  017316  0E00               	movlw	0
 35709  017318  6F77               	movwf	(?_floor+1)& (0+255),b
 35710  01731A  0E80               	movlw	128
 35711  01731C  6F78               	movwf	(?_floor+2)& (0+255),b
 35712  01731E  0EBF               	movlw	191
 35713  017320  6F79               	movwf	(?_floor+3)& (0+255),b
 35714                           
 35715                           ; BSR set to: 0
 35716  017322  0012               	return	
 35717  017324                     i2l2310:
 35718                           
 35719                           ; BSR set to: 0
 35720                           
 35721                           ; BSR set to: 0
 35722  017324  0E00               	movlw	0
 35723  017326  6F76               	movwf	?_floor& (0+255),b
 35724  017328  0E00               	movlw	0
 35725  01732A  6F77               	movwf	(?_floor+1)& (0+255),b
 35726  01732C  0E00               	movlw	0
 35727  01732E  6F78               	movwf	(?_floor+2)& (0+255),b
 35728  017330  0E00               	movlw	0
 35729  017332  6F79               	movwf	(?_floor+3)& (0+255),b
 35730                           
 35731                           ; BSR set to: 0
 35732  017334  0012               	return	
 35733  017336                     i2l2309:
 35734                           
 35735                           ; BSR set to: 0
 35736                           
 35737                           ; BSR set to: 0
 35738  017336  517F               	movf	(floor@expon+1)& (0+255),w,b
 35739  017338  E104               	bnz	i2u1636_40
 35740  01733A  0E1D               	movlw	29
 35741  01733C  5D7E               	subwf	floor@expon& (0+255),w,b
 35742  01733E  A0D8               	btfss	status,0,c
 35743  017340  D009               	goto	i2l2312
 35744  017342                     i2u1636_40:
 35745                           
 35746                           ; BSR set to: 0
 35747  017342  C076  F076         	movff	floor@x,?_floor
 35748  017346  C077  F077         	movff	floor@x+1,?_floor+1
 35749  01734A  C078  F078         	movff	floor@x+2,?_floor+2
 35750  01734E  C079  F079         	movff	floor@x+3,?_floor+3
 35751  017352  0012               	return	
 35752  017354                     i2l2312:
 35753                           
 35754                           ; BSR set to: 0
 35755                           
 35756                           ; BSR set to: 0
 35757  017354  C076  F06C         	movff	floor@x,i2___fltol@f1
 35758  017358  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 35759  01735C  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 35760  017360  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 35761  017364  ECEE  F0BA         	call	i2___fltol	;wreg free
 35762  017368  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 35763  01736C  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 35764  017370  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 35765  017374  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 35766  017378  0E01               	movlw	1
 35767  01737A  ECBF  F0B4         	call	i2___xxtofl
 35768  01737E  C005  F07A         	movff	?i2___xxtofl,floor@i
 35769  017382  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 35770  017386  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 35771  01738A  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 35772  01738E  C076  F034         	movff	floor@x,i2___flge@ff1
 35773  017392  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 35774  017396  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 35775  01739A  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 35776  01739E  C07A  F038         	movff	floor@i,i2___flge@ff2
 35777  0173A2  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 35778  0173A6  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 35779  0173AA  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 35780  0173AE  ECE6  F0B8         	call	i2___flge	;wreg free
 35781  0173B2  B0D8               	btfsc	status,0,c
 35782  0173B4  D01B               	goto	i2l2313
 35783  0173B6  C07A  F056         	movff	floor@i,i2___fladd@b
 35784  0173BA  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 35785  0173BE  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 35786  0173C2  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 35787  0173C6  0E00               	movlw	0
 35788  0173C8  6E5A               	movwf	i2___fladd@a,c
 35789  0173CA  0E00               	movlw	0
 35790  0173CC  6E5B               	movwf	i2___fladd@a+1,c
 35791  0173CE  0E80               	movlw	128
 35792  0173D0  6E5C               	movwf	i2___fladd@a+2,c
 35793  0173D2  0EBF               	movlw	191
 35794  0173D4  6E5D               	movwf	i2___fladd@a+3,c
 35795  0173D6  EC8E  F0A5         	call	i2___fladd	;wreg free
 35796  0173DA  C056  F076         	movff	?i2___fladd,?_floor
 35797  0173DE  C057  F077         	movff	?i2___fladd+1,?_floor+1
 35798  0173E2  C058  F078         	movff	?i2___fladd+2,?_floor+2
 35799  0173E6  C059  F079         	movff	?i2___fladd+3,?_floor+3
 35800  0173EA  0012               	return	
 35801  0173EC                     i2l2313:
 35802  0173EC  C07A  F076         	movff	floor@i,?_floor
 35803  0173F0  C07B  F077         	movff	floor@i+1,?_floor+1
 35804  0173F4  C07C  F078         	movff	floor@i+2,?_floor+2
 35805  0173F8  C07D  F079         	movff	floor@i+3,?_floor+3
 35806  0173FC  0012               	return		;funcret
 35807  0173FE                     __end_of_floor:
 35808                           	opt stack 0
 35809                           tosu	equ	0xFFF
 35810                           tosh	equ	0xFFE
 35811                           tosl	equ	0xFFD
 35812                           pclatu	equ	0xFFB
 35813                           pclath	equ	0xFFA
 35814                           tblptru	equ	0xFF8
 35815                           tblptrh	equ	0xFF7
 35816                           tblptrl	equ	0xFF6
 35817                           tablat	equ	0xFF5
 35818                           prodh	equ	0xFF4
 35819                           prodl	equ	0xFF3
 35820                           intcon	equ	0xFF2
 35821                           indf0	equ	0xFEF
 35822                           postinc0	equ	0xFEE
 35823                           fsr0h	equ	0xFEA
 35824                           fsr0l	equ	0xFE9
 35825                           wreg	equ	0xFE8
 35826                           indf1	equ	0xFE7
 35827                           postdec1	equ	0xFE5
 35828                           plusw1	equ	0xFE3
 35829                           fsr1h	equ	0xFE2
 35830                           fsr1l	equ	0xFE1
 35831                           bsr	equ	0xFE0
 35832                           indf2	equ	0xFDF
 35833                           postinc2	equ	0xFDE
 35834                           postdec2	equ	0xFDD
 35835                           plusw2	equ	0xFDB
 35836                           fsr2h	equ	0xFDA
 35837                           fsr2l	equ	0xFD9
 35838                           status	equ	0xFD8
 35839                           
 35840 ;; *************** function i2___xxtofl *****************
 35841 ;; Defined at:
 35842 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 35843 ;; Parameters:    Size  Location     Type
 35844 ;;  sign            1    wreg     unsigned char 
 35845 ;;  val             4    4[COMRAM] long 
 35846 ;; Auto vars:     Size  Location     Type
 35847 ;;  sign            1   12[COMRAM] unsigned char 
 35848 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 35849 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 35850 ;; Return value:  Size  Location     Type
 35851 ;;                  4    4[COMRAM] unsigned char 
 35852 ;; Registers used:
 35853 ;;		wreg, status,2, status,0
 35854 ;; Tracked objects:
 35855 ;;		On entry : 0/0
 35856 ;;		On exit  : 0/0
 35857 ;;		Unchanged: 0/0
 35858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35860 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35862 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35863 ;;Total ram usage:       14 bytes
 35864 ;; Hardware stack levels used:    1
 35865 ;; This function calls:
 35866 ;;		Nothing
 35867 ;; This function is called by:
 35868 ;;		_ADCPostProcessingCallback
 35869 ;;		_floor
 35870 ;;		i2_printf
 35871 ;; This function uses a non-reentrant model
 35872 ;;
 35873                           
 35874                           	psect	text118
 35875  01697E                     __ptext118:
 35876                           	opt stack 0
 35877  01697E                     i2___xxtofl:
 35878                           	opt stack 16
 35879                           
 35880                           ;incstack = 0
 35881                           ;i2___xxtofl@sign stored from wreg
 35882  01697E  6E0D               	movwf	i2___xxtofl@sign,c
 35883  016980  500D               	movf	i2___xxtofl@sign,w,c
 35884  016982  A4D8               	btfss	status,2,c
 35885  016984  AE08               	btfss	i2___xxtofl@val+3,7,c
 35886  016986  D01A               	goto	i2l2288
 35887  016988  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 35888  01698C  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 35889  016990  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 35890  016994  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 35891  016998  1E09               	comf	??i2___xxtofl,f,c
 35892  01699A  1E0A               	comf	??i2___xxtofl+1,f,c
 35893  01699C  1E0B               	comf	??i2___xxtofl+2,f,c
 35894  01699E  1E0C               	comf	??i2___xxtofl+3,f,c
 35895  0169A0  2A09               	incf	??i2___xxtofl,f,c
 35896  0169A2  0E00               	movlw	0
 35897  0169A4  220A               	addwfc	??i2___xxtofl+1,f,c
 35898  0169A6  220B               	addwfc	??i2___xxtofl+2,f,c
 35899  0169A8  220C               	addwfc	??i2___xxtofl+3,f,c
 35900  0169AA  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 35901  0169AE  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 35902  0169B2  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 35903  0169B6  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 35904  0169BA  D008               	goto	i2l2289
 35905  0169BC                     i2l2288:
 35906  0169BC  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 35907  0169C0  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 35908  0169C4  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 35909  0169C8  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 35910  0169CC                     i2l2289:
 35911  0169CC  5005               	movf	i2___xxtofl@val,w,c
 35912  0169CE  1006               	iorwf	i2___xxtofl@val+1,w,c
 35913  0169D0  1007               	iorwf	i2___xxtofl@val+2,w,c
 35914  0169D2  1008               	iorwf	i2___xxtofl@val+3,w,c
 35915  0169D4  A4D8               	btfss	status,2,c
 35916  0169D6  D009               	goto	i2l2290
 35917  0169D8  0E00               	movlw	0
 35918  0169DA  6E05               	movwf	?i2___xxtofl,c
 35919  0169DC  0E00               	movlw	0
 35920  0169DE  6E06               	movwf	?i2___xxtofl+1,c
 35921  0169E0  0E00               	movlw	0
 35922  0169E2  6E07               	movwf	?i2___xxtofl+2,c
 35923  0169E4  0E00               	movlw	0
 35924  0169E6  6E08               	movwf	?i2___xxtofl+3,c
 35925  0169E8  0012               	return	
 35926  0169EA                     i2l2290:
 35927  0169EA  0E96               	movlw	150
 35928  0169EC  6E0E               	movwf	i2___xxtofl@exp,c
 35929  0169EE  D006               	goto	i2l2292
 35930  0169F0  2A0E               	incf	i2___xxtofl@exp,f,c
 35931  0169F2  90D8               	bcf	status,0,c
 35932  0169F4  3212               	rrcf	i2___xxtofl@arg+3,f,c
 35933  0169F6  3211               	rrcf	i2___xxtofl@arg+2,f,c
 35934  0169F8  3210               	rrcf	i2___xxtofl@arg+1,f,c
 35935  0169FA  320F               	rrcf	i2___xxtofl@arg,f,c
 35936  0169FC                     i2l2292:
 35937  0169FC  0E00               	movlw	0
 35938  0169FE  140F               	andwf	i2___xxtofl@arg,w,c
 35939  016A00  6E09               	movwf	??i2___xxtofl& (0+255),c
 35940  016A02  0E00               	movlw	0
 35941  016A04  1410               	andwf	i2___xxtofl@arg+1,w,c
 35942  016A06  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 35943  016A08  0E00               	movlw	0
 35944  016A0A  1411               	andwf	i2___xxtofl@arg+2,w,c
 35945  016A0C  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 35946  016A0E  0EFE               	movlw	254
 35947  016A10  1412               	andwf	i2___xxtofl@arg+3,w,c
 35948  016A12  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 35949  016A14  5009               	movf	??i2___xxtofl,w,c
 35950  016A16  100A               	iorwf	??i2___xxtofl+1,w,c
 35951  016A18  100B               	iorwf	??i2___xxtofl+2,w,c
 35952  016A1A  100C               	iorwf	??i2___xxtofl+3,w,c
 35953  016A1C  B4D8               	btfsc	status,2,c
 35954  016A1E  D00D               	goto	i2l2295
 35955  016A20  D7E7               	goto	i2l2293
 35956  016A22  2A0E               	incf	i2___xxtofl@exp,f,c
 35957  016A24  0E01               	movlw	1
 35958  016A26  260F               	addwf	i2___xxtofl@arg,f,c
 35959  016A28  0E00               	movlw	0
 35960  016A2A  2210               	addwfc	i2___xxtofl@arg+1,f,c
 35961  016A2C  2211               	addwfc	i2___xxtofl@arg+2,f,c
 35962  016A2E  2212               	addwfc	i2___xxtofl@arg+3,f,c
 35963  016A30  90D8               	bcf	status,0,c
 35964  016A32  3212               	rrcf	i2___xxtofl@arg+3,f,c
 35965  016A34  3211               	rrcf	i2___xxtofl@arg+2,f,c
 35966  016A36  3210               	rrcf	i2___xxtofl@arg+1,f,c
 35967  016A38  320F               	rrcf	i2___xxtofl@arg,f,c
 35968  016A3A                     i2l2295:
 35969  016A3A  0E00               	movlw	0
 35970  016A3C  140F               	andwf	i2___xxtofl@arg,w,c
 35971  016A3E  6E09               	movwf	??i2___xxtofl& (0+255),c
 35972  016A40  0E00               	movlw	0
 35973  016A42  1410               	andwf	i2___xxtofl@arg+1,w,c
 35974  016A44  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 35975  016A46  0E00               	movlw	0
 35976  016A48  1411               	andwf	i2___xxtofl@arg+2,w,c
 35977  016A4A  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 35978  016A4C  0EFF               	movlw	255
 35979  016A4E  1412               	andwf	i2___xxtofl@arg+3,w,c
 35980  016A50  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 35981  016A52  5009               	movf	??i2___xxtofl,w,c
 35982  016A54  100A               	iorwf	??i2___xxtofl+1,w,c
 35983  016A56  100B               	iorwf	??i2___xxtofl+2,w,c
 35984  016A58  100C               	iorwf	??i2___xxtofl+3,w,c
 35985  016A5A  B4D8               	btfsc	status,2,c
 35986  016A5C  D007               	goto	i2l2298
 35987  016A5E  D7E1               	goto	i2l2296
 35988  016A60  060E               	decf	i2___xxtofl@exp,f,c
 35989  016A62  90D8               	bcf	status,0,c
 35990  016A64  360F               	rlcf	i2___xxtofl@arg,f,c
 35991  016A66  3610               	rlcf	i2___xxtofl@arg+1,f,c
 35992  016A68  3611               	rlcf	i2___xxtofl@arg+2,f,c
 35993  016A6A  3612               	rlcf	i2___xxtofl@arg+3,f,c
 35994  016A6C                     i2l2298:
 35995  016A6C  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 35996  016A6E  D003               	goto	i2u1544_40
 35997  016A70  0E02               	movlw	2
 35998  016A72  600E               	cpfslt	i2___xxtofl@exp,c
 35999  016A74  D7F5               	goto	i2l2299
 36000  016A76                     i2u1544_40:
 36001  016A76  B00E               	btfsc	i2___xxtofl@exp,0,c
 36002  016A78  D008               	goto	i2l2303
 36003  016A7A  0EFF               	movlw	255
 36004  016A7C  160F               	andwf	i2___xxtofl@arg,f,c
 36005  016A7E  0EFF               	movlw	255
 36006  016A80  1610               	andwf	i2___xxtofl@arg+1,f,c
 36007  016A82  0E7F               	movlw	127
 36008  016A84  1611               	andwf	i2___xxtofl@arg+2,f,c
 36009  016A86  0EFF               	movlw	255
 36010  016A88  1612               	andwf	i2___xxtofl@arg+3,f,c
 36011  016A8A                     i2l2303:
 36012  016A8A  90D8               	bcf	status,0,c
 36013  016A8C  320E               	rrcf	i2___xxtofl@exp,f,c
 36014  016A8E  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 36015  016A92  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 36016  016A94  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 36017  016A96  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 36018  016A98  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 36019  016A9C  6A0B               	clrf	??i2___xxtofl+2,c
 36020  016A9E  6A0A               	clrf	??i2___xxtofl+1,c
 36021  016AA0  6A09               	clrf	??i2___xxtofl,c
 36022  016AA2  5009               	movf	??i2___xxtofl,w,c
 36023  016AA4  120F               	iorwf	i2___xxtofl@arg,f,c
 36024  016AA6  500A               	movf	??i2___xxtofl+1,w,c
 36025  016AA8  1210               	iorwf	i2___xxtofl@arg+1,f,c
 36026  016AAA  500B               	movf	??i2___xxtofl+2,w,c
 36027  016AAC  1211               	iorwf	i2___xxtofl@arg+2,f,c
 36028  016AAE  500C               	movf	??i2___xxtofl+3,w,c
 36029  016AB0  1212               	iorwf	i2___xxtofl@arg+3,f,c
 36030  016AB2  500D               	movf	i2___xxtofl@sign,w,c
 36031  016AB4  A4D8               	btfss	status,2,c
 36032  016AB6  AE08               	btfss	i2___xxtofl@val+3,7,c
 36033  016AB8  D001               	goto	i2l2304
 36034  016ABA  8E12               	bsf	i2___xxtofl@arg+3,7,c
 36035  016ABC                     i2l2304:
 36036  016ABC  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 36037  016AC0  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 36038  016AC4  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 36039  016AC8  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 36040  016ACC  0012               	return	
 36041  016ACE                     __end_ofi2___xxtofl:
 36042                           	opt stack 0
 36043                           tosu	equ	0xFFF
 36044                           tosh	equ	0xFFE
 36045                           tosl	equ	0xFFD
 36046                           pclatu	equ	0xFFB
 36047                           pclath	equ	0xFFA
 36048                           tblptru	equ	0xFF8
 36049                           tblptrh	equ	0xFF7
 36050                           tblptrl	equ	0xFF6
 36051                           tablat	equ	0xFF5
 36052                           prodh	equ	0xFF4
 36053                           prodl	equ	0xFF3
 36054                           intcon	equ	0xFF2
 36055                           indf0	equ	0xFEF
 36056                           postinc0	equ	0xFEE
 36057                           fsr0h	equ	0xFEA
 36058                           fsr0l	equ	0xFE9
 36059                           wreg	equ	0xFE8
 36060                           indf1	equ	0xFE7
 36061                           postdec1	equ	0xFE5
 36062                           plusw1	equ	0xFE3
 36063                           fsr1h	equ	0xFE2
 36064                           fsr1l	equ	0xFE1
 36065                           bsr	equ	0xFE0
 36066                           indf2	equ	0xFDF
 36067                           postinc2	equ	0xFDE
 36068                           postdec2	equ	0xFDD
 36069                           plusw2	equ	0xFDB
 36070                           fsr2h	equ	0xFDA
 36071                           fsr2l	equ	0xFD9
 36072                           status	equ	0xFD8
 36073                           
 36074 ;; *************** function i2___fltol *****************
 36075 ;; Defined at:
 36076 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 36077 ;; Parameters:    Size  Location     Type
 36078 ;;  f1              4   12[BANK0 ] unsigned char 
 36079 ;; Auto vars:     Size  Location     Type
 36080 ;;  __fltol         1   21[BANK0 ] unsigned char 
 36081 ;;  __fltol         1   20[BANK0 ] unsigned char 
 36082 ;; Return value:  Size  Location     Type
 36083 ;;                  4   12[BANK0 ] long 
 36084 ;; Registers used:
 36085 ;;		wreg, status,2, status,0
 36086 ;; Tracked objects:
 36087 ;;		On entry : 0/0
 36088 ;;		On exit  : 0/0
 36089 ;;		Unchanged: 0/0
 36090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36093 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36094 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36095 ;;Total ram usage:       10 bytes
 36096 ;; Hardware stack levels used:    1
 36097 ;; This function calls:
 36098 ;;		Nothing
 36099 ;; This function is called by:
 36100 ;;		_ADCPostProcessingCallback
 36101 ;;		_floor
 36102 ;;		i2_printf
 36103 ;; This function uses a non-reentrant model
 36104 ;;
 36105                           
 36106                           	psect	text119
 36107  0175DC                     __ptext119:
 36108                           	opt stack 0
 36109  0175DC                     i2___fltol:
 36110                           	opt stack 16
 36111                           
 36112                           ;incstack = 0
 36113  0175DC  0100               	movlb	0	; () banked
 36114  0175DE  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 36115  0175E0  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 36116  0175E2  6F75               	movwf	i2___fltol@exp1& (0+255),b
 36117  0175E4  5175               	movf	i2___fltol@exp1& (0+255),w,b
 36118  0175E6  A4D8               	btfss	status,2,c
 36119  0175E8  D009               	goto	i2l1855
 36120                           
 36121                           ; BSR set to: 0
 36122  0175EA  0E00               	movlw	0
 36123  0175EC  6F6C               	movwf	?i2___fltol& (0+255),b
 36124  0175EE  0E00               	movlw	0
 36125  0175F0  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 36126  0175F2  0E00               	movlw	0
 36127  0175F4  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 36128  0175F6  0E00               	movlw	0
 36129  0175F8  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 36130                           
 36131                           ; BSR set to: 0
 36132  0175FA  0012               	return	
 36133  0175FC                     i2l1855:
 36134                           
 36135                           ; BSR set to: 0
 36136                           
 36137                           ; BSR set to: 0
 36138  0175FC  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 36139  017600  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 36140  017604  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 36141  017608  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 36142  01760C  0E20               	movlw	32
 36143  01760E  D005               	goto	i2u1532_40
 36144  017610                     i2u1532_45:
 36145  017610  90D8               	bcf	status,0,c
 36146  017612  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 36147  017614  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 36148  017616  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 36149  017618  3370               	rrcf	??i2___fltol& (0+255),f,b
 36150  01761A                     i2u1532_40:
 36151  01761A  2EE8               	decfsz	wreg,f,c
 36152  01761C  D7F9               	goto	i2u1532_45
 36153  01761E  5170               	movf	??i2___fltol& (0+255),w,b
 36154  017620  6F74               	movwf	i2___fltol@sign1& (0+255),b
 36155                           
 36156                           ; BSR set to: 0
 36157  017622  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 36158                           
 36159                           ; BSR set to: 0
 36160  017624  0EFF               	movlw	255
 36161  017626  176C               	andwf	i2___fltol@f1& (0+255),f,b
 36162  017628  0EFF               	movlw	255
 36163  01762A  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 36164  01762C  0EFF               	movlw	255
 36165  01762E  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 36166  017630  0E00               	movlw	0
 36167  017632  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 36168                           
 36169                           ; BSR set to: 0
 36170  017634  0E96               	movlw	150
 36171  017636  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 36172                           
 36173                           ; BSR set to: 0
 36174  017638  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 36175  01763A  D016               	goto	i2l1857
 36176                           
 36177                           ; BSR set to: 0
 36178  01763C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 36179  01763E  0A80               	xorlw	128
 36180  017640  0F97               	addlw	151
 36181  017642  B0D8               	btfsc	status,0,c
 36182  017644  D009               	goto	i2l1858
 36183                           
 36184                           ; BSR set to: 0
 36185  017646  0E00               	movlw	0
 36186  017648  6F6C               	movwf	?i2___fltol& (0+255),b
 36187  01764A  0E00               	movlw	0
 36188  01764C  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 36189  01764E  0E00               	movlw	0
 36190  017650  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 36191  017652  0E00               	movlw	0
 36192  017654  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 36193                           
 36194                           ; BSR set to: 0
 36195  017656  0012               	return	
 36196  017658                     i2l1858:
 36197                           
 36198                           ; BSR set to: 0
 36199                           
 36200                           ; BSR set to: 0
 36201                           
 36202                           ; BSR set to: 0
 36203  017658  90D8               	bcf	status,0,c
 36204  01765A  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 36205  01765C  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 36206  01765E  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 36207  017660  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 36208                           
 36209                           ; BSR set to: 0
 36210  017662  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 36211  017664  D7F9               	goto	i2l1858
 36212                           
 36213                           ; BSR set to: 0
 36214  017666  D015               	goto	i2u1536_40
 36215  017668                     i2l1857:
 36216                           
 36217                           ; BSR set to: 0
 36218                           
 36219                           ; BSR set to: 0
 36220  017668  0E1F               	movlw	31
 36221  01766A  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 36222  01766C  D00F               	goto	i2l1863
 36223                           
 36224                           ; BSR set to: 0
 36225  01766E  0E00               	movlw	0
 36226  017670  6F6C               	movwf	?i2___fltol& (0+255),b
 36227  017672  0E00               	movlw	0
 36228  017674  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 36229  017676  0E00               	movlw	0
 36230  017678  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 36231  01767A  0E00               	movlw	0
 36232  01767C  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 36233                           
 36234                           ; BSR set to: 0
 36235  01767E  0012               	return	
 36236  017680                     
 36237                           ; BSR set to: 0
 36238                           
 36239                           ; BSR set to: 0
 36240  017680  90D8               	bcf	status,0,c
 36241  017682  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 36242  017684  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 36243  017686  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 36244  017688  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 36245  01768A  0775               	decf	i2___fltol@exp1& (0+255),f,b
 36246  01768C                     i2l1863:
 36247                           
 36248                           ; BSR set to: 0
 36249                           
 36250                           ; BSR set to: 0
 36251  01768C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 36252  01768E  A4D8               	btfss	status,2,c
 36253  017690  D7F7               	goto	i2l1864
 36254  017692                     i2u1536_40:
 36255                           
 36256                           ; BSR set to: 0
 36257                           
 36258                           ; BSR set to: 0
 36259                           
 36260                           ; BSR set to: 0
 36261  017692  5174               	movf	i2___fltol@sign1& (0+255),w,b
 36262  017694  B4D8               	btfsc	status,2,c
 36263  017696  D008               	goto	i2l1866
 36264                           
 36265                           ; BSR set to: 0
 36266  017698  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 36267  01769A  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 36268  01769C  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 36269  01769E  6D6C               	negf	i2___fltol@f1& (0+255),b
 36270  0176A0  0E00               	movlw	0
 36271  0176A2  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 36272  0176A4  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 36273  0176A6  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 36274  0176A8                     i2l1866:
 36275                           
 36276                           ; BSR set to: 0
 36277                           
 36278                           ; BSR set to: 0
 36279  0176A8  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 36280  0176AC  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 36281  0176B0  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 36282  0176B4  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 36283  0176B8  0012               	return	
 36284  0176BA                     __end_ofi2___fltol:
 36285                           	opt stack 0
 36286                           tosu	equ	0xFFF
 36287                           tosh	equ	0xFFE
 36288                           tosl	equ	0xFFD
 36289                           pclatu	equ	0xFFB
 36290                           pclath	equ	0xFFA
 36291                           tblptru	equ	0xFF8
 36292                           tblptrh	equ	0xFF7
 36293                           tblptrl	equ	0xFF6
 36294                           tablat	equ	0xFF5
 36295                           prodh	equ	0xFF4
 36296                           prodl	equ	0xFF3
 36297                           intcon	equ	0xFF2
 36298                           indf0	equ	0xFEF
 36299                           postinc0	equ	0xFEE
 36300                           fsr0h	equ	0xFEA
 36301                           fsr0l	equ	0xFE9
 36302                           wreg	equ	0xFE8
 36303                           indf1	equ	0xFE7
 36304                           postdec1	equ	0xFE5
 36305                           plusw1	equ	0xFE3
 36306                           fsr1h	equ	0xFE2
 36307                           fsr1l	equ	0xFE1
 36308                           bsr	equ	0xFE0
 36309                           indf2	equ	0xFDF
 36310                           postinc2	equ	0xFDE
 36311                           postdec2	equ	0xFDD
 36312                           plusw2	equ	0xFDB
 36313                           fsr2h	equ	0xFDA
 36314                           fsr2l	equ	0xFD9
 36315                           status	equ	0xFD8
 36316                           
 36317 ;; *************** function i2___flge *****************
 36318 ;; Defined at:
 36319 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 36320 ;; Parameters:    Size  Location     Type
 36321 ;;  ff1             4   51[COMRAM] long 
 36322 ;;  ff2             4   55[COMRAM] long 
 36323 ;; Auto vars:     Size  Location     Type
 36324 ;;		None
 36325 ;; Return value:  Size  Location     Type
 36326 ;;		None               void
 36327 ;; Registers used:
 36328 ;;		wreg, status,2, status,0
 36329 ;; Tracked objects:
 36330 ;;		On entry : 0/0
 36331 ;;		On exit  : 0/0
 36332 ;;		Unchanged: 0/0
 36333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36334 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36337 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36338 ;;Total ram usage:       12 bytes
 36339 ;; Hardware stack levels used:    1
 36340 ;; This function calls:
 36341 ;;		Nothing
 36342 ;; This function is called by:
 36343 ;;		_ADCPostProcessingCallback
 36344 ;;		_asin
 36345 ;;		_atan
 36346 ;;		_sin
 36347 ;;		_floor
 36348 ;;		i2_printf
 36349 ;; This function uses a non-reentrant model
 36350 ;;
 36351                           
 36352                           	psect	text120
 36353  0171CC                     __ptext120:
 36354                           	opt stack 0
 36355  0171CC                     i2___flge:
 36356                           	opt stack 16
 36357                           
 36358                           ; BSR set to: 0
 36359                           ;incstack = 0
 36360  0171CC  0E00               	movlw	0
 36361  0171CE  1434               	andwf	i2___flge@ff1,w,c
 36362  0171D0  6E3C               	movwf	??i2___flge& (0+255),c
 36363  0171D2  0E00               	movlw	0
 36364  0171D4  1435               	andwf	i2___flge@ff1+1,w,c
 36365  0171D6  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 36366  0171D8  0E80               	movlw	128
 36367  0171DA  1436               	andwf	i2___flge@ff1+2,w,c
 36368  0171DC  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 36369  0171DE  0E7F               	movlw	127
 36370  0171E0  1437               	andwf	i2___flge@ff1+3,w,c
 36371  0171E2  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 36372  0171E4  503C               	movf	??i2___flge,w,c
 36373  0171E6  103D               	iorwf	??i2___flge+1,w,c
 36374  0171E8  103E               	iorwf	??i2___flge+2,w,c
 36375  0171EA  103F               	iorwf	??i2___flge+3,w,c
 36376  0171EC  A4D8               	btfss	status,2,c
 36377  0171EE  D008               	goto	i2l1825
 36378  0171F0  0E00               	movlw	0
 36379  0171F2  6E34               	movwf	i2___flge@ff1,c
 36380  0171F4  0E00               	movlw	0
 36381  0171F6  6E35               	movwf	i2___flge@ff1+1,c
 36382  0171F8  0E00               	movlw	0
 36383  0171FA  6E36               	movwf	i2___flge@ff1+2,c
 36384  0171FC  0E00               	movlw	0
 36385  0171FE  6E37               	movwf	i2___flge@ff1+3,c
 36386  017200                     i2l1825:
 36387  017200  0E00               	movlw	0
 36388  017202  1438               	andwf	i2___flge@ff2,w,c
 36389  017204  6E3C               	movwf	??i2___flge& (0+255),c
 36390  017206  0E00               	movlw	0
 36391  017208  1439               	andwf	i2___flge@ff2+1,w,c
 36392  01720A  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 36393  01720C  0E80               	movlw	128
 36394  01720E  143A               	andwf	i2___flge@ff2+2,w,c
 36395  017210  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 36396  017212  0E7F               	movlw	127
 36397  017214  143B               	andwf	i2___flge@ff2+3,w,c
 36398  017216  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 36399  017218  503C               	movf	??i2___flge,w,c
 36400  01721A  103D               	iorwf	??i2___flge+1,w,c
 36401  01721C  103E               	iorwf	??i2___flge+2,w,c
 36402  01721E  103F               	iorwf	??i2___flge+3,w,c
 36403  017220  A4D8               	btfss	status,2,c
 36404  017222  D008               	goto	i2l1826
 36405  017224  0E00               	movlw	0
 36406  017226  6E38               	movwf	i2___flge@ff2,c
 36407  017228  0E00               	movlw	0
 36408  01722A  6E39               	movwf	i2___flge@ff2+1,c
 36409  01722C  0E00               	movlw	0
 36410  01722E  6E3A               	movwf	i2___flge@ff2+2,c
 36411  017230  0E00               	movlw	0
 36412  017232  6E3B               	movwf	i2___flge@ff2+3,c
 36413  017234                     i2l1826:
 36414  017234  AE37               	btfss	i2___flge@ff1+3,7,c
 36415  017236  D01D               	goto	i2l1827
 36416  017238  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 36417  01723C  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 36418  017240  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 36419  017244  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 36420  017248  1E3C               	comf	??i2___flge,f,c
 36421  01724A  1E3D               	comf	??i2___flge+1,f,c
 36422  01724C  1E3E               	comf	??i2___flge+2,f,c
 36423  01724E  1E3F               	comf	??i2___flge+3,f,c
 36424  017250  2A3C               	incf	??i2___flge,f,c
 36425  017252  0E00               	movlw	0
 36426  017254  223D               	addwfc	??i2___flge+1,f,c
 36427  017256  223E               	addwfc	??i2___flge+2,f,c
 36428  017258  223F               	addwfc	??i2___flge+3,f,c
 36429  01725A  0E00               	movlw	0
 36430  01725C  243C               	addwf	??i2___flge,w,c
 36431  01725E  6E34               	movwf	i2___flge@ff1,c
 36432  017260  0E00               	movlw	0
 36433  017262  203D               	addwfc	??i2___flge+1,w,c
 36434  017264  6E35               	movwf	i2___flge@ff1+1,c
 36435  017266  0E00               	movlw	0
 36436  017268  203E               	addwfc	??i2___flge+2,w,c
 36437  01726A  6E36               	movwf	i2___flge@ff1+2,c
 36438  01726C  0E80               	movlw	128
 36439  01726E  203F               	addwfc	??i2___flge+3,w,c
 36440  017270  6E37               	movwf	i2___flge@ff1+3,c
 36441  017272                     i2l1827:
 36442  017272  AE3B               	btfss	i2___flge@ff2+3,7,c
 36443  017274  D01D               	goto	i2l1828
 36444  017276  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 36445  01727A  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 36446  01727E  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 36447  017282  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 36448  017286  1E3C               	comf	??i2___flge,f,c
 36449  017288  1E3D               	comf	??i2___flge+1,f,c
 36450  01728A  1E3E               	comf	??i2___flge+2,f,c
 36451  01728C  1E3F               	comf	??i2___flge+3,f,c
 36452  01728E  2A3C               	incf	??i2___flge,f,c
 36453  017290  0E00               	movlw	0
 36454  017292  223D               	addwfc	??i2___flge+1,f,c
 36455  017294  223E               	addwfc	??i2___flge+2,f,c
 36456  017296  223F               	addwfc	??i2___flge+3,f,c
 36457  017298  0E00               	movlw	0
 36458  01729A  243C               	addwf	??i2___flge,w,c
 36459  01729C  6E38               	movwf	i2___flge@ff2,c
 36460  01729E  0E00               	movlw	0
 36461  0172A0  203D               	addwfc	??i2___flge+1,w,c
 36462  0172A2  6E39               	movwf	i2___flge@ff2+1,c
 36463  0172A4  0E00               	movlw	0
 36464  0172A6  203E               	addwfc	??i2___flge+2,w,c
 36465  0172A8  6E3A               	movwf	i2___flge@ff2+2,c
 36466  0172AA  0E80               	movlw	128
 36467  0172AC  203F               	addwfc	??i2___flge+3,w,c
 36468  0172AE  6E3B               	movwf	i2___flge@ff2+3,c
 36469  0172B0                     i2l1828:
 36470  0172B0  0E00               	movlw	0
 36471  0172B2  1A34               	xorwf	i2___flge@ff1,f,c
 36472  0172B4  0E00               	movlw	0
 36473  0172B6  1A35               	xorwf	i2___flge@ff1+1,f,c
 36474  0172B8  0E00               	movlw	0
 36475  0172BA  1A36               	xorwf	i2___flge@ff1+2,f,c
 36476  0172BC  0E80               	movlw	128
 36477  0172BE  1A37               	xorwf	i2___flge@ff1+3,f,c
 36478  0172C0  0E00               	movlw	0
 36479  0172C2  1A38               	xorwf	i2___flge@ff2,f,c
 36480  0172C4  0E00               	movlw	0
 36481  0172C6  1A39               	xorwf	i2___flge@ff2+1,f,c
 36482  0172C8  0E00               	movlw	0
 36483  0172CA  1A3A               	xorwf	i2___flge@ff2+2,f,c
 36484  0172CC  0E80               	movlw	128
 36485  0172CE  1A3B               	xorwf	i2___flge@ff2+3,f,c
 36486  0172D0  5038               	movf	i2___flge@ff2,w,c
 36487  0172D2  5C34               	subwf	i2___flge@ff1,w,c
 36488  0172D4  5039               	movf	i2___flge@ff2+1,w,c
 36489  0172D6  5835               	subwfb	i2___flge@ff1+1,w,c
 36490  0172D8  503A               	movf	i2___flge@ff2+2,w,c
 36491  0172DA  5836               	subwfb	i2___flge@ff1+2,w,c
 36492  0172DC  503B               	movf	i2___flge@ff2+3,w,c
 36493  0172DE  5837               	subwfb	i2___flge@ff1+3,w,c
 36494  0172E0  B0D8               	btfsc	status,0,c
 36495  0172E2  D002               	goto	i2l11060
 36496  0172E4  90D8               	bcf	status,0,c
 36497  0172E6  0012               	return	
 36498  0172E8                     i2l11060:
 36499  0172E8  80D8               	bsf	status,0,c
 36500  0172EA  0012               	return	
 36501  0172EC                     __end_ofi2___flge:
 36502                           	opt stack 0
 36503                           tosu	equ	0xFFF
 36504                           tosh	equ	0xFFE
 36505                           tosl	equ	0xFFD
 36506                           pclatu	equ	0xFFB
 36507                           pclath	equ	0xFFA
 36508                           tblptru	equ	0xFF8
 36509                           tblptrh	equ	0xFF7
 36510                           tblptrl	equ	0xFF6
 36511                           tablat	equ	0xFF5
 36512                           prodh	equ	0xFF4
 36513                           prodl	equ	0xFF3
 36514                           intcon	equ	0xFF2
 36515                           indf0	equ	0xFEF
 36516                           postinc0	equ	0xFEE
 36517                           fsr0h	equ	0xFEA
 36518                           fsr0l	equ	0xFE9
 36519                           wreg	equ	0xFE8
 36520                           indf1	equ	0xFE7
 36521                           postdec1	equ	0xFE5
 36522                           plusw1	equ	0xFE3
 36523                           fsr1h	equ	0xFE2
 36524                           fsr1l	equ	0xFE1
 36525                           bsr	equ	0xFE0
 36526                           indf2	equ	0xFDF
 36527                           postinc2	equ	0xFDE
 36528                           postdec2	equ	0xFDD
 36529                           plusw2	equ	0xFDB
 36530                           fsr2h	equ	0xFDA
 36531                           fsr2l	equ	0xFD9
 36532                           status	equ	0xFD8
 36533                           
 36534 ;; *************** function _frexp *****************
 36535 ;; Defined at:
 36536 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 36537 ;; Parameters:    Size  Location     Type
 36538 ;;  value           4    0[COMRAM] long 
 36539 ;;  eptr            2    4[COMRAM] PTR int 
 36540 ;;		 -> floor@expon(2), 
 36541 ;; Auto vars:     Size  Location     Type
 36542 ;;		None
 36543 ;; Return value:  Size  Location     Type
 36544 ;;                  4    0[COMRAM] PTR int 
 36545 ;; Registers used:
 36546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36547 ;; Tracked objects:
 36548 ;;		On entry : 0/0
 36549 ;;		On exit  : 0/0
 36550 ;;		Unchanged: 0/0
 36551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36555 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36556 ;;Total ram usage:        8 bytes
 36557 ;; Hardware stack levels used:    1
 36558 ;; This function calls:
 36559 ;;		Nothing
 36560 ;; This function is called by:
 36561 ;;		_floor
 36562 ;; This function uses a non-reentrant model
 36563 ;;
 36564                           
 36565                           	psect	text121
 36566  017DE8                     __ptext121:
 36567                           	opt stack 0
 36568  017DE8                     _frexp:
 36569                           	opt stack 13
 36570                           
 36571                           ;incstack = 0
 36572  017DE8  5001               	movf	frexp@value,w,c
 36573  017DEA  1002               	iorwf	frexp@value+1,w,c
 36574  017DEC  1003               	iorwf	frexp@value+2,w,c
 36575  017DEE  1004               	iorwf	frexp@value+3,w,c
 36576  017DF0  A4D8               	btfss	status,2,c
 36577  017DF2  D009               	goto	i2l2318
 36578  017DF4  C005  FFD9         	movff	frexp@eptr,fsr2l
 36579  017DF8  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36580  017DFC  0E00               	movlw	0
 36581  017DFE  6EDE               	movwf	postinc2,c
 36582  017E00  0E00               	movlw	0
 36583  017E02  6EDD               	movwf	postdec2,c
 36584                           
 36585                           ;	Return value of _frexp is never used
 36586  017E04  0012               	return	
 36587  017E06                     i2l2318:
 36588  017E06  5004               	movf	frexp@value+3,w,c
 36589  017E08  0B7F               	andlw	127
 36590  017E0A  6E07               	movwf	??_frexp& (0+255),c
 36591  017E0C  6A08               	clrf	(??_frexp+1)& (0+255),c
 36592  017E0E  90D8               	bcf	status,0,c
 36593  017E10  3607               	rlcf	??_frexp,f,c
 36594  017E12  3608               	rlcf	??_frexp+1,f,c
 36595  017E14  C005  FFD9         	movff	frexp@eptr,fsr2l
 36596  017E18  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36597  017E1C  C007  FFDE         	movff	??_frexp,postinc2
 36598  017E20  C008  FFDD         	movff	??_frexp+1,postdec2
 36599  017E24  AE03               	btfss	frexp@value+2,7,c
 36600  017E26  D003               	goto	i2u1530_40
 36601  017E28  6A07               	clrf	??_frexp& (0+255),c
 36602  017E2A  2A07               	incf	??_frexp& (0+255),f,c
 36603  017E2C  D001               	goto	i2u1530_48
 36604  017E2E                     i2u1530_40:
 36605  017E2E  6A07               	clrf	??_frexp& (0+255),c
 36606  017E30                     i2u1530_48:
 36607  017E30  5007               	movf	??_frexp,w,c
 36608  017E32  C005  FFD9         	movff	frexp@eptr,fsr2l
 36609  017E36  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36610  017E3A  12DE               	iorwf	postinc2,f,c
 36611  017E3C  0E00               	movlw	0
 36612  017E3E  12DD               	iorwf	postdec2,f,c
 36613  017E40  C005  FFD9         	movff	frexp@eptr,fsr2l
 36614  017E44  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36615  017E48  0E82               	movlw	130
 36616  017E4A  26DE               	addwf	postinc2,f,c
 36617  017E4C  0EFF               	movlw	255
 36618  017E4E  22DD               	addwfc	postdec2,f,c
 36619  017E50  8004               	bsf	frexp@value+3,0,c
 36620  017E52  8204               	bsf	frexp@value+3,1,c
 36621  017E54  8404               	bsf	frexp@value+3,2,c
 36622  017E56  8604               	bsf	frexp@value+3,3,c
 36623  017E58  8804               	bsf	frexp@value+3,4,c
 36624  017E5A  8A04               	bsf	frexp@value+3,5,c
 36625  017E5C  9C04               	bcf	frexp@value+3,6,c
 36626  017E5E  9E03               	bcf	frexp@value+2,7,c
 36627  017E60  0012               	return	
 36628  017E62                     __end_of_frexp:
 36629                           	opt stack 0
 36630                           tosu	equ	0xFFF
 36631                           tosh	equ	0xFFE
 36632                           tosl	equ	0xFFD
 36633                           pclatu	equ	0xFFB
 36634                           pclath	equ	0xFFA
 36635                           tblptru	equ	0xFF8
 36636                           tblptrh	equ	0xFF7
 36637                           tblptrl	equ	0xFF6
 36638                           tablat	equ	0xFF5
 36639                           prodh	equ	0xFF4
 36640                           prodl	equ	0xFF3
 36641                           intcon	equ	0xFF2
 36642                           indf0	equ	0xFEF
 36643                           postinc0	equ	0xFEE
 36644                           fsr0h	equ	0xFEA
 36645                           fsr0l	equ	0xFE9
 36646                           wreg	equ	0xFE8
 36647                           indf1	equ	0xFE7
 36648                           postdec1	equ	0xFE5
 36649                           plusw1	equ	0xFE3
 36650                           fsr1h	equ	0xFE2
 36651                           fsr1l	equ	0xFE1
 36652                           bsr	equ	0xFE0
 36653                           indf2	equ	0xFDF
 36654                           postinc2	equ	0xFDE
 36655                           postdec2	equ	0xFDD
 36656                           plusw2	equ	0xFDB
 36657                           fsr2h	equ	0xFDA
 36658                           fsr2l	equ	0xFD9
 36659                           status	equ	0xFD8
 36660                           
 36661 ;; *************** function _eval_poly *****************
 36662 ;; Defined at:
 36663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 36664 ;; Parameters:    Size  Location     Type
 36665 ;;  x               4   12[BANK0 ] PTR int 
 36666 ;;  d               2   16[BANK0 ] PTR const 
 36667 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 36668 ;;  n               2   18[BANK0 ] int 
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;  res             4   24[BANK0 ] int 
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  4   12[BANK0 ] int 
 36673 ;; Registers used:
 36674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36675 ;; Tracked objects:
 36676 ;;		On entry : 0/0
 36677 ;;		On exit  : 0/0
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36680 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36681 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36682 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;Total ram usage:       16 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:    1
 36687 ;; This function calls:
 36688 ;;		i2___fladd
 36689 ;;		i2___flmul
 36690 ;; This function is called by:
 36691 ;;		_atan
 36692 ;;		_sin
 36693 ;; This function uses a non-reentrant model
 36694 ;;
 36695                           
 36696                           	psect	text122
 36697  0173FE                     __ptext122:
 36698                           	opt stack 0
 36699  0173FE                     _eval_poly:
 36700                           	opt stack 13
 36701                           
 36702                           ;incstack = 0
 36703  0173FE  C072  F074         	movff	eval_poly@n,??_eval_poly
 36704  017402  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 36705  017406  0100               	movlb	0	; () banked
 36706  017408  90D8               	bcf	status,0,c
 36707  01740A  3774               	rlcf	??_eval_poly& (0+255),f,b
 36708  01740C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36709  01740E  90D8               	bcf	status,0,c
 36710  017410  3774               	rlcf	??_eval_poly& (0+255),f,b
 36711  017412  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36712  017414  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 36713  017418  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 36714  01741C  5174               	movf	??_eval_poly& (0+255),w,b
 36715  01741E  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 36716  017420  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 36717  017422  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 36718  017424  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 36719  017428  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 36720  01742C                     	if	0	;tblptru may be non-zero
 36721  01742C                     	endif
 36722  01742C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36723  01742C  0E00               	movlw	low (__mediumconst shr (0+16))
 36724  01742E  6EF8               	movwf	tblptru,c
 36725  017430                     	endif
 36726  017430  0009               	tblrd		*+
 36727  017432  CFF5 F078          	movff	tablat,eval_poly@res
 36728  017436  0009               	tblrd		*+
 36729  017438  CFF5 F079          	movff	tablat,eval_poly@res+1
 36730  01743C  0009               	tblrd		*+
 36731  01743E  CFF5 F07A          	movff	tablat,eval_poly@res+2
 36732  017442  000A               	tblrd		*-
 36733  017444  CFF5 F07B          	movff	tablat,eval_poly@res+3
 36734  017448  D04C               	goto	i2l1798
 36735  01744A                     
 36736                           ; BSR set to: 0
 36737                           
 36738                           ; BSR set to: 0
 36739  01744A  C078  F034         	movff	eval_poly@res,i2___flmul@a
 36740  01744E  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 36741  017452  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 36742  017456  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 36743  01745A  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 36744  01745E  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 36745  017462  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 36746  017466  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 36747  01746A  EC47  F0A2         	call	i2___flmul	;wreg free
 36748  01746E  C030  F056         	movff	?i2___flmul,i2___fladd@b
 36749  017472  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 36750  017476  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 36751  01747A  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 36752  01747E  0100               	movlb	0	; () banked
 36753  017480  0772               	decf	eval_poly@n& (0+255),f,b
 36754  017482  A0D8               	btfss	status,0,c
 36755  017484  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 36756  017486  C072  F074         	movff	eval_poly@n,??_eval_poly
 36757  01748A  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 36758  01748E  90D8               	bcf	status,0,c
 36759  017490  3774               	rlcf	??_eval_poly& (0+255),f,b
 36760  017492  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36761  017494  90D8               	bcf	status,0,c
 36762  017496  3774               	rlcf	??_eval_poly& (0+255),f,b
 36763  017498  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36764  01749A  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 36765  01749E  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 36766  0174A2  5174               	movf	??_eval_poly& (0+255),w,b
 36767  0174A4  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 36768  0174A6  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 36769  0174A8  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 36770  0174AA  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 36771  0174AE  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 36772  0174B2                     	if	0	;tblptru may be non-zero
 36773  0174B2                     	endif
 36774  0174B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36775  0174B2  0E00               	movlw	low (__mediumconst shr (0+16))
 36776  0174B4  6EF8               	movwf	tblptru,c
 36777  0174B6                     	endif
 36778  0174B6  0009               	tblrd		*+
 36779  0174B8  CFF5 F05A          	movff	tablat,i2___fladd@a
 36780  0174BC  0009               	tblrd		*+
 36781  0174BE  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 36782  0174C2  0009               	tblrd		*+
 36783  0174C4  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 36784  0174C8  000A               	tblrd		*-
 36785  0174CA  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 36786  0174CE  EC8E  F0A5         	call	i2___fladd	;wreg free
 36787  0174D2  C056  F078         	movff	?i2___fladd,eval_poly@res
 36788  0174D6  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 36789  0174DA  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 36790  0174DE  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 36791  0174E2                     i2l1798:
 36792  0174E2  0100               	movlb	0	; () banked
 36793  0174E4  5172               	movf	eval_poly@n& (0+255),w,b
 36794  0174E6  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 36795  0174E8  A4D8               	btfss	status,2,c
 36796  0174EA  D7AF               	goto	i2l1799
 36797                           
 36798                           ; BSR set to: 0
 36799  0174EC  C078  F06C         	movff	eval_poly@res,?_eval_poly
 36800  0174F0  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 36801  0174F4  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 36802  0174F8  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 36803                           
 36804                           ; BSR set to: 0
 36805  0174FC  0012               	return		;funcret
 36806  0174FE                     __end_of_eval_poly:
 36807                           	opt stack 0
 36808                           tosu	equ	0xFFF
 36809                           tosh	equ	0xFFE
 36810                           tosl	equ	0xFFD
 36811                           pclatu	equ	0xFFB
 36812                           pclath	equ	0xFFA
 36813                           tblptru	equ	0xFF8
 36814                           tblptrh	equ	0xFF7
 36815                           tblptrl	equ	0xFF6
 36816                           tablat	equ	0xFF5
 36817                           prodh	equ	0xFF4
 36818                           prodl	equ	0xFF3
 36819                           intcon	equ	0xFF2
 36820                           indf0	equ	0xFEF
 36821                           postinc0	equ	0xFEE
 36822                           fsr0h	equ	0xFEA
 36823                           fsr0l	equ	0xFE9
 36824                           wreg	equ	0xFE8
 36825                           indf1	equ	0xFE7
 36826                           postdec1	equ	0xFE5
 36827                           plusw1	equ	0xFE3
 36828                           fsr1h	equ	0xFE2
 36829                           fsr1l	equ	0xFE1
 36830                           bsr	equ	0xFE0
 36831                           indf2	equ	0xFDF
 36832                           postinc2	equ	0xFDE
 36833                           postdec2	equ	0xFDD
 36834                           plusw2	equ	0xFDB
 36835                           fsr2h	equ	0xFDA
 36836                           fsr2l	equ	0xFD9
 36837                           status	equ	0xFD8
 36838                           
 36839 ;; *************** function i2___flmul *****************
 36840 ;; Defined at:
 36841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 36842 ;; Parameters:    Size  Location     Type
 36843 ;;  b               4   47[COMRAM] int 
 36844 ;;  a               4   51[COMRAM] int 
 36845 ;; Auto vars:     Size  Location     Type
 36846 ;;  __flmul         4   66[COMRAM] struct .
 36847 ;;  __flmul         4   61[COMRAM] unsigned long 
 36848 ;;  __flmul         2   70[COMRAM] struct .
 36849 ;;  __flmul         1   65[COMRAM] unsigned char 
 36850 ;;  __flmul         1   60[COMRAM] unsigned char 
 36851 ;;  __flmul         1   59[COMRAM] unsigned char 
 36852 ;; Return value:  Size  Location     Type
 36853 ;;                  4   47[COMRAM] unsigned char 
 36854 ;; Registers used:
 36855 ;;		wreg, status,2, status,0, prodl, prodh
 36856 ;; Tracked objects:
 36857 ;;		On entry : 0/0
 36858 ;;		On exit  : 0/0
 36859 ;;		Unchanged: 0/0
 36860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36861 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36862 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36863 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36864 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36865 ;;Total ram usage:       25 bytes
 36866 ;; Hardware stack levels used:    1
 36867 ;; This function calls:
 36868 ;;		Nothing
 36869 ;; This function is called by:
 36870 ;;		_peakToRMS
 36871 ;;		_ADCPostProcessingCallback
 36872 ;;		_asin
 36873 ;;		_atan
 36874 ;;		_eval_poly
 36875 ;;		_sin
 36876 ;;		i2_fround
 36877 ;;		i2_scale
 36878 ;;		i2_printf
 36879 ;; This function uses a non-reentrant model
 36880 ;;
 36881                           
 36882                           	psect	text123
 36883  01448E                     __ptext123:
 36884                           	opt stack 0
 36885  01448E                     i2___flmul:
 36886                           	opt stack 15
 36887                           
 36888                           ; BSR set to: 0
 36889                           ;incstack = 0
 36890  01448E  5033               	movf	i2___flmul@b+3,w,c
 36891  014490  0B80               	andlw	128
 36892  014492  6E3C               	movwf	i2___flmul@sign,c
 36893  014494  5033               	movf	i2___flmul@b+3,w,c
 36894  014496  2433               	addwf	i2___flmul@b+3,w,c
 36895  014498  6E42               	movwf	i2___flmul@bexp,c
 36896  01449A  BE32               	btfsc	i2___flmul@b+2,7,c
 36897  01449C  8042               	bsf	i2___flmul@bexp,0,c
 36898  01449E  5042               	movf	i2___flmul@bexp,w,c
 36899  0144A0  B4D8               	btfsc	status,2,c
 36900  0144A2  D00D               	goto	i2l2186
 36901  0144A4  2842               	incf	i2___flmul@bexp,w,c
 36902  0144A6  A4D8               	btfss	status,2,c
 36903  0144A8  D008               	goto	i2l2187
 36904  0144AA  0E00               	movlw	0
 36905  0144AC  6E30               	movwf	i2___flmul@b,c
 36906  0144AE  0E00               	movlw	0
 36907  0144B0  6E31               	movwf	i2___flmul@b+1,c
 36908  0144B2  0E00               	movlw	0
 36909  0144B4  6E32               	movwf	i2___flmul@b+2,c
 36910  0144B6  0E00               	movlw	0
 36911  0144B8  6E33               	movwf	i2___flmul@b+3,c
 36912  0144BA                     i2l2187:
 36913  0144BA  8E32               	bsf	i2___flmul@b+2,7,c
 36914  0144BC  D008               	goto	i2l2188
 36915  0144BE                     i2l2186:
 36916  0144BE  0E00               	movlw	0
 36917  0144C0  6E30               	movwf	i2___flmul@b,c
 36918  0144C2  0E00               	movlw	0
 36919  0144C4  6E31               	movwf	i2___flmul@b+1,c
 36920  0144C6  0E00               	movlw	0
 36921  0144C8  6E32               	movwf	i2___flmul@b+2,c
 36922  0144CA  0E00               	movlw	0
 36923  0144CC  6E33               	movwf	i2___flmul@b+3,c
 36924  0144CE                     i2l2188:
 36925  0144CE  5037               	movf	i2___flmul@a+3,w,c
 36926  0144D0  0B80               	andlw	128
 36927  0144D2  1A3C               	xorwf	i2___flmul@sign,f,c
 36928  0144D4  5037               	movf	i2___flmul@a+3,w,c
 36929  0144D6  2437               	addwf	i2___flmul@a+3,w,c
 36930  0144D8  6E3D               	movwf	i2___flmul@aexp,c
 36931  0144DA  BE36               	btfsc	i2___flmul@a+2,7,c
 36932  0144DC  803D               	bsf	i2___flmul@aexp,0,c
 36933  0144DE  503D               	movf	i2___flmul@aexp,w,c
 36934  0144E0  B4D8               	btfsc	status,2,c
 36935  0144E2  D00D               	goto	i2l2190
 36936  0144E4  283D               	incf	i2___flmul@aexp,w,c
 36937  0144E6  A4D8               	btfss	status,2,c
 36938  0144E8  D008               	goto	i2l2191
 36939  0144EA  0E00               	movlw	0
 36940  0144EC  6E34               	movwf	i2___flmul@a,c
 36941  0144EE  0E00               	movlw	0
 36942  0144F0  6E35               	movwf	i2___flmul@a+1,c
 36943  0144F2  0E00               	movlw	0
 36944  0144F4  6E36               	movwf	i2___flmul@a+2,c
 36945  0144F6  0E00               	movlw	0
 36946  0144F8  6E37               	movwf	i2___flmul@a+3,c
 36947  0144FA                     i2l2191:
 36948  0144FA  8E36               	bsf	i2___flmul@a+2,7,c
 36949  0144FC  D008               	goto	i2l2192
 36950  0144FE                     i2l2190:
 36951  0144FE  0E00               	movlw	0
 36952  014500  6E34               	movwf	i2___flmul@a,c
 36953  014502  0E00               	movlw	0
 36954  014504  6E35               	movwf	i2___flmul@a+1,c
 36955  014506  0E00               	movlw	0
 36956  014508  6E36               	movwf	i2___flmul@a+2,c
 36957  01450A  0E00               	movlw	0
 36958  01450C  6E37               	movwf	i2___flmul@a+3,c
 36959  01450E                     i2l2192:
 36960  01450E  503D               	movf	i2___flmul@aexp,w,c
 36961  014510  B4D8               	btfsc	status,2,c
 36962  014512  D003               	goto	i2u1343_40
 36963  014514  5042               	movf	i2___flmul@bexp,w,c
 36964  014516  A4D8               	btfss	status,2,c
 36965  014518  D009               	goto	i2l2193
 36966  01451A                     i2u1343_40:
 36967  01451A  0E00               	movlw	0
 36968  01451C  6E30               	movwf	?i2___flmul,c
 36969  01451E  0E00               	movlw	0
 36970  014520  6E31               	movwf	?i2___flmul+1,c
 36971  014522  0E00               	movlw	0
 36972  014524  6E32               	movwf	?i2___flmul+2,c
 36973  014526  0E00               	movlw	0
 36974  014528  6E33               	movwf	?i2___flmul+3,c
 36975  01452A  0012               	return	
 36976  01452C                     i2l2193:
 36977  01452C  5036               	movf	i2___flmul@a+2,w,c
 36978  01452E  0230               	mulwf	i2___flmul@b,c
 36979  014530  CFF3 F047          	movff	prodl,i2___flmul@temp
 36980  014534  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36981  014538  5047               	movf	i2___flmul@temp,w,c
 36982  01453A  6E3E               	movwf	i2___flmul@grs,c
 36983  01453C  6A3F               	clrf	i2___flmul@grs+1,c
 36984  01453E  6A40               	clrf	i2___flmul@grs+2,c
 36985  014540  6A41               	clrf	i2___flmul@grs+3,c
 36986  014542  5048               	movf	i2___flmul@temp+1,w,c
 36987  014544  6E43               	movwf	i2___flmul@prod,c
 36988  014546  6A44               	clrf	i2___flmul@prod+1,c
 36989  014548  6A45               	clrf	i2___flmul@prod+2,c
 36990  01454A  6A46               	clrf	i2___flmul@prod+3,c
 36991  01454C  5035               	movf	i2___flmul@a+1,w,c
 36992  01454E  0231               	mulwf	i2___flmul@b+1,c
 36993  014550  CFF3 F047          	movff	prodl,i2___flmul@temp
 36994  014554  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36995  014558  5047               	movf	i2___flmul@temp,w,c
 36996  01455A  263E               	addwf	i2___flmul@grs,f,c
 36997  01455C  0E00               	movlw	0
 36998  01455E  223F               	addwfc	i2___flmul@grs+1,f,c
 36999  014560  2240               	addwfc	i2___flmul@grs+2,f,c
 37000  014562  2241               	addwfc	i2___flmul@grs+3,f,c
 37001  014564  5048               	movf	i2___flmul@temp+1,w,c
 37002  014566  2643               	addwf	i2___flmul@prod,f,c
 37003  014568  0E00               	movlw	0
 37004  01456A  2244               	addwfc	i2___flmul@prod+1,f,c
 37005  01456C  2245               	addwfc	i2___flmul@prod+2,f,c
 37006  01456E  2246               	addwfc	i2___flmul@prod+3,f,c
 37007  014570  5034               	movf	i2___flmul@a,w,c
 37008  014572  0232               	mulwf	i2___flmul@b+2,c
 37009  014574  CFF3 F047          	movff	prodl,i2___flmul@temp
 37010  014578  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37011  01457C  5047               	movf	i2___flmul@temp,w,c
 37012  01457E  263E               	addwf	i2___flmul@grs,f,c
 37013  014580  0E00               	movlw	0
 37014  014582  223F               	addwfc	i2___flmul@grs+1,f,c
 37015  014584  2240               	addwfc	i2___flmul@grs+2,f,c
 37016  014586  2241               	addwfc	i2___flmul@grs+3,f,c
 37017  014588  5048               	movf	i2___flmul@temp+1,w,c
 37018  01458A  2643               	addwf	i2___flmul@prod,f,c
 37019  01458C  0E00               	movlw	0
 37020  01458E  2244               	addwfc	i2___flmul@prod+1,f,c
 37021  014590  2245               	addwfc	i2___flmul@prod+2,f,c
 37022  014592  2246               	addwfc	i2___flmul@prod+3,f,c
 37023  014594  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 37024  014598  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 37025  01459C  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 37026  0145A0  6A3E               	clrf	i2___flmul@grs,c
 37027  0145A2  5034               	movf	i2___flmul@a,w,c
 37028  0145A4  0231               	mulwf	i2___flmul@b+1,c
 37029  0145A6  CFF3 F047          	movff	prodl,i2___flmul@temp
 37030  0145AA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37031  0145AE  5047               	movf	i2___flmul@temp,w,c
 37032  0145B0  263E               	addwf	i2___flmul@grs,f,c
 37033  0145B2  5048               	movf	i2___flmul@temp+1,w,c
 37034  0145B4  223F               	addwfc	i2___flmul@grs+1,f,c
 37035  0145B6  0E00               	movlw	0
 37036  0145B8  2240               	addwfc	i2___flmul@grs+2,f,c
 37037  0145BA  0E00               	movlw	0
 37038  0145BC  2241               	addwfc	i2___flmul@grs+3,f,c
 37039  0145BE  5035               	movf	i2___flmul@a+1,w,c
 37040  0145C0  0230               	mulwf	i2___flmul@b,c
 37041  0145C2  CFF3 F047          	movff	prodl,i2___flmul@temp
 37042  0145C6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37043  0145CA  5047               	movf	i2___flmul@temp,w,c
 37044  0145CC  263E               	addwf	i2___flmul@grs,f,c
 37045  0145CE  5048               	movf	i2___flmul@temp+1,w,c
 37046  0145D0  223F               	addwfc	i2___flmul@grs+1,f,c
 37047  0145D2  0E00               	movlw	0
 37048  0145D4  2240               	addwfc	i2___flmul@grs+2,f,c
 37049  0145D6  0E00               	movlw	0
 37050  0145D8  2241               	addwfc	i2___flmul@grs+3,f,c
 37051  0145DA  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 37052  0145DE  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 37053  0145E2  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 37054  0145E6  6A3E               	clrf	i2___flmul@grs,c
 37055  0145E8  5034               	movf	i2___flmul@a,w,c
 37056  0145EA  0230               	mulwf	i2___flmul@b,c
 37057  0145EC  CFF3 F047          	movff	prodl,i2___flmul@temp
 37058  0145F0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37059  0145F4  5047               	movf	i2___flmul@temp,w,c
 37060  0145F6  263E               	addwf	i2___flmul@grs,f,c
 37061  0145F8  5048               	movf	i2___flmul@temp+1,w,c
 37062  0145FA  223F               	addwfc	i2___flmul@grs+1,f,c
 37063  0145FC  0E00               	movlw	0
 37064  0145FE  2240               	addwfc	i2___flmul@grs+2,f,c
 37065  014600  0E00               	movlw	0
 37066  014602  2241               	addwfc	i2___flmul@grs+3,f,c
 37067  014604  5036               	movf	i2___flmul@a+2,w,c
 37068  014606  0231               	mulwf	i2___flmul@b+1,c
 37069  014608  CFF3 F047          	movff	prodl,i2___flmul@temp
 37070  01460C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37071  014610  5047               	movf	i2___flmul@temp,w,c
 37072  014612  2643               	addwf	i2___flmul@prod,f,c
 37073  014614  5048               	movf	i2___flmul@temp+1,w,c
 37074  014616  2244               	addwfc	i2___flmul@prod+1,f,c
 37075  014618  0E00               	movlw	0
 37076  01461A  2245               	addwfc	i2___flmul@prod+2,f,c
 37077  01461C  0E00               	movlw	0
 37078  01461E  2246               	addwfc	i2___flmul@prod+3,f,c
 37079  014620  5035               	movf	i2___flmul@a+1,w,c
 37080  014622  0232               	mulwf	i2___flmul@b+2,c
 37081  014624  CFF3 F047          	movff	prodl,i2___flmul@temp
 37082  014628  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37083  01462C  5047               	movf	i2___flmul@temp,w,c
 37084  01462E  2643               	addwf	i2___flmul@prod,f,c
 37085  014630  5048               	movf	i2___flmul@temp+1,w,c
 37086  014632  2244               	addwfc	i2___flmul@prod+1,f,c
 37087  014634  0E00               	movlw	0
 37088  014636  2245               	addwfc	i2___flmul@prod+2,f,c
 37089  014638  0E00               	movlw	0
 37090  01463A  2246               	addwfc	i2___flmul@prod+3,f,c
 37091  01463C  5036               	movf	i2___flmul@a+2,w,c
 37092  01463E  0232               	mulwf	i2___flmul@b+2,c
 37093  014640  CFF3 F047          	movff	prodl,i2___flmul@temp
 37094  014644  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 37095  014648  5047               	movf	i2___flmul@temp,w,c
 37096  01464A  6E38               	movwf	??i2___flmul& (0+255),c
 37097  01464C  5048               	movf	i2___flmul@temp+1,w,c
 37098  01464E  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 37099  014650  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 37100  014652  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 37101  014654  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 37102  014658  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 37103  01465C  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 37104  014660  6A38               	clrf	??i2___flmul,c
 37105  014662  5038               	movf	??i2___flmul,w,c
 37106  014664  2643               	addwf	i2___flmul@prod,f,c
 37107  014666  5039               	movf	??i2___flmul+1,w,c
 37108  014668  2244               	addwfc	i2___flmul@prod+1,f,c
 37109  01466A  503A               	movf	??i2___flmul+2,w,c
 37110  01466C  2245               	addwfc	i2___flmul@prod+2,f,c
 37111  01466E  503B               	movf	??i2___flmul+3,w,c
 37112  014670  2246               	addwfc	i2___flmul@prod+3,f,c
 37113  014672  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 37114  014676  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 37115  01467A  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 37116  01467E  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 37117  014682  0E19               	movlw	25
 37118  014684  D005               	goto	i2u1344_40
 37119  014686                     i2u1344_45:
 37120  014686  90D8               	bcf	status,0,c
 37121  014688  323B               	rrcf	??i2___flmul+3,f,c
 37122  01468A  323A               	rrcf	??i2___flmul+2,f,c
 37123  01468C  3239               	rrcf	??i2___flmul+1,f,c
 37124  01468E  3238               	rrcf	??i2___flmul,f,c
 37125  014690                     i2u1344_40:
 37126  014690  2EE8               	decfsz	wreg,f,c
 37127  014692  D7F9               	goto	i2u1344_45
 37128  014694  5038               	movf	??i2___flmul,w,c
 37129  014696  2643               	addwf	i2___flmul@prod,f,c
 37130  014698  5039               	movf	??i2___flmul+1,w,c
 37131  01469A  2244               	addwfc	i2___flmul@prod+1,f,c
 37132  01469C  503A               	movf	??i2___flmul+2,w,c
 37133  01469E  2245               	addwfc	i2___flmul@prod+2,f,c
 37134  0146A0  503B               	movf	??i2___flmul+3,w,c
 37135  0146A2  2246               	addwfc	i2___flmul@prod+3,f,c
 37136  0146A4  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 37137  0146A8  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 37138  0146AC  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 37139  0146B0  6A3E               	clrf	i2___flmul@grs,c
 37140  0146B2  503D               	movf	i2___flmul@aexp,w,c
 37141  0146B4  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 37142  0146B8  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 37143  0146BA  2638               	addwf	??i2___flmul,f,c
 37144  0146BC  0E00               	movlw	0
 37145  0146BE  2239               	addwfc	??i2___flmul+1,f,c
 37146  0146C0  0E82               	movlw	130
 37147  0146C2  2438               	addwf	??i2___flmul,w,c
 37148  0146C4  6E47               	movwf	i2___flmul@temp,c
 37149  0146C6  0EFF               	movlw	255
 37150  0146C8  2039               	addwfc	??i2___flmul+1,w,c
 37151  0146CA  6E48               	movwf	i2___flmul@temp+1,c
 37152  0146CC  D00F               	goto	i2l2197
 37153  0146CE  90D8               	bcf	status,0,c
 37154  0146D0  3643               	rlcf	i2___flmul@prod,f,c
 37155  0146D2  3644               	rlcf	i2___flmul@prod+1,f,c
 37156  0146D4  3645               	rlcf	i2___flmul@prod+2,f,c
 37157  0146D6  3646               	rlcf	i2___flmul@prod+3,f,c
 37158  0146D8  BE41               	btfsc	i2___flmul@grs+3,7,c
 37159  0146DA  8043               	bsf	i2___flmul@prod,0,c
 37160  0146DC  90D8               	bcf	status,0,c
 37161  0146DE  363E               	rlcf	i2___flmul@grs,f,c
 37162  0146E0  363F               	rlcf	i2___flmul@grs+1,f,c
 37163  0146E2  3640               	rlcf	i2___flmul@grs+2,f,c
 37164  0146E4  3641               	rlcf	i2___flmul@grs+3,f,c
 37165  0146E6  0647               	decf	i2___flmul@temp,f,c
 37166  0146E8  A0D8               	btfss	status,0,c
 37167  0146EA  0648               	decf	i2___flmul@temp+1,f,c
 37168  0146EC                     i2l2197:
 37169  0146EC  AE45               	btfss	i2___flmul@prod+2,7,c
 37170  0146EE  D7EF               	goto	i2l2198
 37171  0146F0  0E00               	movlw	0
 37172  0146F2  6E3D               	movwf	i2___flmul@aexp,c
 37173  0146F4  AE41               	btfss	i2___flmul@grs+3,7,c
 37174  0146F6  D016               	goto	i2l2204
 37175  0146F8  0EFF               	movlw	255
 37176  0146FA  143E               	andwf	i2___flmul@grs,w,c
 37177  0146FC  6E38               	movwf	??i2___flmul& (0+255),c
 37178  0146FE  0EFF               	movlw	255
 37179  014700  143F               	andwf	i2___flmul@grs+1,w,c
 37180  014702  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 37181  014704  0EFF               	movlw	255
 37182  014706  1440               	andwf	i2___flmul@grs+2,w,c
 37183  014708  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 37184  01470A  0E7F               	movlw	127
 37185  01470C  1441               	andwf	i2___flmul@grs+3,w,c
 37186  01470E  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 37187  014710  5038               	movf	??i2___flmul,w,c
 37188  014712  1039               	iorwf	??i2___flmul+1,w,c
 37189  014714  103A               	iorwf	??i2___flmul+2,w,c
 37190  014716  103B               	iorwf	??i2___flmul+3,w,c
 37191  014718  A4D8               	btfss	status,2,c
 37192  01471A  D002               	goto	i2u1349_40
 37193  01471C  A043               	btfss	i2___flmul@prod,0,c
 37194  01471E  D002               	goto	i2l2204
 37195  014720                     i2u1349_40:
 37196  014720  0E01               	movlw	1
 37197  014722  6E3D               	movwf	i2___flmul@aexp,c
 37198  014724                     i2l2204:
 37199  014724  503D               	movf	i2___flmul@aexp,w,c
 37200  014726  B4D8               	btfsc	status,2,c
 37201  014728  D01F               	goto	i2l2206
 37202  01472A  0E01               	movlw	1
 37203  01472C  2643               	addwf	i2___flmul@prod,f,c
 37204  01472E  0E00               	movlw	0
 37205  014730  2244               	addwfc	i2___flmul@prod+1,f,c
 37206  014732  2245               	addwfc	i2___flmul@prod+2,f,c
 37207  014734  2246               	addwfc	i2___flmul@prod+3,f,c
 37208  014736  A046               	btfss	i2___flmul@prod+3,0,c
 37209  014738  D017               	goto	i2l2206
 37210  01473A  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 37211  01473E  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 37212  014742  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 37213  014746  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 37214  01474A  343B               	rlcf	??i2___flmul+3,w,c
 37215  01474C  323B               	rrcf	??i2___flmul+3,f,c
 37216  01474E  323A               	rrcf	??i2___flmul+2,f,c
 37217  014750  3239               	rrcf	??i2___flmul+1,f,c
 37218  014752  3238               	rrcf	??i2___flmul,f,c
 37219  014754  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 37220  014758  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 37221  01475C  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 37222  014760  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 37223  014764  4A47               	infsnz	i2___flmul@temp,f,c
 37224  014766  2A48               	incf	i2___flmul@temp+1,f,c
 37225  014768                     i2l2206:
 37226  014768  BE48               	btfsc	i2___flmul@temp+1,7,c
 37227  01476A  D00D               	goto	i2l2207
 37228  01476C  5048               	movf	i2___flmul@temp+1,w,c
 37229  01476E  E103               	bnz	i2u1352_40
 37230  014770  2847               	incf	i2___flmul@temp,w,c
 37231  014772  A0D8               	btfss	status,0,c
 37232  014774  D008               	goto	i2l2207
 37233  014776                     i2u1352_40:
 37234  014776  0E00               	movlw	0
 37235  014778  6E43               	movwf	i2___flmul@prod,c
 37236  01477A  0E00               	movlw	0
 37237  01477C  6E44               	movwf	i2___flmul@prod+1,c
 37238  01477E  0E80               	movlw	128
 37239  014780  6E45               	movwf	i2___flmul@prod+2,c
 37240  014782  0E7F               	movlw	127
 37241  014784  D020               	goto	L21
 37242  014786                     i2l2207:
 37243  014786  BE48               	btfsc	i2___flmul@temp+1,7,c
 37244  014788  D005               	goto	i2u1353_40
 37245  01478A  5048               	movf	i2___flmul@temp+1,w,c
 37246  01478C  E10E               	bnz	i2l2209
 37247  01478E  0447               	decf	i2___flmul@temp,w,c
 37248  014790  B0D8               	btfsc	status,0,c
 37249  014792  D00B               	goto	i2l2209
 37250  014794                     i2u1353_40:
 37251  014794  0E00               	movlw	0
 37252  014796  6E43               	movwf	i2___flmul@prod,c
 37253  014798  0E00               	movlw	0
 37254  01479A  6E44               	movwf	i2___flmul@prod+1,c
 37255  01479C  0E00               	movlw	0
 37256  01479E  6E45               	movwf	i2___flmul@prod+2,c
 37257  0147A0  0E00               	movlw	0
 37258  0147A2  6E46               	movwf	i2___flmul@prod+3,c
 37259  0147A4  0E00               	movlw	0
 37260  0147A6  6E3C               	movwf	i2___flmul@sign,c
 37261  0147A8  D00F               	goto	i2l2210
 37262  0147AA                     i2l2209:
 37263  0147AA  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 37264  0147AE  0EFF               	movlw	255
 37265  0147B0  1643               	andwf	i2___flmul@prod,f,c
 37266  0147B2  0EFF               	movlw	255
 37267  0147B4  1644               	andwf	i2___flmul@prod+1,f,c
 37268  0147B6  0E7F               	movlw	127
 37269  0147B8  1645               	andwf	i2___flmul@prod+2,f,c
 37270  0147BA  0E00               	movlw	0
 37271  0147BC  1646               	andwf	i2___flmul@prod+3,f,c
 37272  0147BE  B042               	btfsc	i2___flmul@bexp,0,c
 37273  0147C0  8E45               	bsf	i2___flmul@prod+2,7,c
 37274  0147C2  90D8               	bcf	status,0,c
 37275  0147C4  3042               	rrcf	i2___flmul@bexp,w,c
 37276  0147C6                     L21:
 37277  0147C6  6E46               	movwf	i2___flmul@prod+3,c
 37278  0147C8                     i2l2210:
 37279  0147C8  503C               	movf	i2___flmul@sign,w,c
 37280  0147CA  1246               	iorwf	i2___flmul@prod+3,f,c
 37281  0147CC  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 37282  0147D0  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 37283  0147D4  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 37284  0147D8  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 37285  0147DC  0012               	return	
 37286  0147DE                     __end_ofi2___flmul:
 37287                           	opt stack 0
 37288                           tosu	equ	0xFFF
 37289                           tosh	equ	0xFFE
 37290                           tosl	equ	0xFFD
 37291                           pclatu	equ	0xFFB
 37292                           pclath	equ	0xFFA
 37293                           tblptru	equ	0xFF8
 37294                           tblptrh	equ	0xFF7
 37295                           tblptrl	equ	0xFF6
 37296                           tablat	equ	0xFF5
 37297                           prodh	equ	0xFF4
 37298                           prodl	equ	0xFF3
 37299                           intcon	equ	0xFF2
 37300                           indf0	equ	0xFEF
 37301                           postinc0	equ	0xFEE
 37302                           fsr0h	equ	0xFEA
 37303                           fsr0l	equ	0xFE9
 37304                           wreg	equ	0xFE8
 37305                           indf1	equ	0xFE7
 37306                           postdec1	equ	0xFE5
 37307                           plusw1	equ	0xFE3
 37308                           fsr1h	equ	0xFE2
 37309                           fsr1l	equ	0xFE1
 37310                           bsr	equ	0xFE0
 37311                           indf2	equ	0xFDF
 37312                           postinc2	equ	0xFDE
 37313                           postdec2	equ	0xFDD
 37314                           plusw2	equ	0xFDB
 37315                           fsr2h	equ	0xFDA
 37316                           fsr2l	equ	0xFD9
 37317                           status	equ	0xFD8
 37318                           
 37319 ;; *************** function i2___fladd *****************
 37320 ;; Defined at:
 37321 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 37322 ;; Parameters:    Size  Location     Type
 37323 ;;  b               4   85[COMRAM] unsigned char 
 37324 ;;  a               4   89[COMRAM] unsigned char 
 37325 ;; Auto vars:     Size  Location     Type
 37326 ;;  __fladd         1   11[BANK0 ] unsigned char 
 37327 ;;  __fladd         1   10[BANK0 ] unsigned char 
 37328 ;;  __fladd         1    9[BANK0 ] unsigned char 
 37329 ;;  __fladd         1    8[BANK0 ] unsigned char 
 37330 ;; Return value:  Size  Location     Type
 37331 ;;                  4   85[COMRAM] unsigned char 
 37332 ;; Registers used:
 37333 ;;		wreg, status,2, status,0
 37334 ;; Tracked objects:
 37335 ;;		On entry : 0/0
 37336 ;;		On exit  : 0/0
 37337 ;;		Unchanged: 0/0
 37338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37339 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37340 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37341 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37342 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37343 ;;Total ram usage:       20 bytes
 37344 ;; Hardware stack levels used:    1
 37345 ;; This function calls:
 37346 ;;		Nothing
 37347 ;; This function is called by:
 37348 ;;		_peakToRMS
 37349 ;;		_ADCPostProcessingCallback
 37350 ;;		_acos
 37351 ;;		_asin
 37352 ;;		_atan
 37353 ;;		_eval_poly
 37354 ;;		_sin
 37355 ;;		_floor
 37356 ;;		i2_printf
 37357 ;;		i2___flsub
 37358 ;; This function uses a non-reentrant model
 37359 ;;
 37360                           
 37361                           	psect	text124
 37362  014B1C                     __ptext124:
 37363                           	opt stack 0
 37364  014B1C                     i2___fladd:
 37365                           	opt stack 15
 37366                           
 37367                           ;incstack = 0
 37368  014B1C  5059               	movf	i2___fladd@b+3,w,c
 37369  014B1E  0B80               	andlw	128
 37370  014B20  0100               	movlb	0	; () banked
 37371  014B22  6F68               	movwf	i2___fladd@signs& (0+255),b
 37372  014B24  5059               	movf	i2___fladd@b+3,w,c
 37373  014B26  2459               	addwf	i2___fladd@b+3,w,c
 37374  014B28  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 37375                           
 37376                           ; BSR set to: 0
 37377  014B2A  BE58               	btfsc	i2___fladd@b+2,7,c
 37378                           
 37379                           ; BSR set to: 0
 37380  014B2C  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 37381                           
 37382                           ; BSR set to: 0
 37383                           
 37384                           ; BSR set to: 0
 37385  014B2E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37386  014B30  B4D8               	btfsc	status,2,c
 37387  014B32  D00D               	goto	i2l2095
 37388                           
 37389                           ; BSR set to: 0
 37390  014B34  296A               	incf	i2___fladd@bexp& (0+255),w,b
 37391  014B36  A4D8               	btfss	status,2,c
 37392  014B38  D008               	goto	i2l2096
 37393                           
 37394                           ; BSR set to: 0
 37395  014B3A  0E00               	movlw	0
 37396  014B3C  6E56               	movwf	i2___fladd@b,c
 37397  014B3E  0E00               	movlw	0
 37398  014B40  6E57               	movwf	i2___fladd@b+1,c
 37399  014B42  0E00               	movlw	0
 37400  014B44  6E58               	movwf	i2___fladd@b+2,c
 37401  014B46  0E00               	movlw	0
 37402  014B48  6E59               	movwf	i2___fladd@b+3,c
 37403  014B4A                     i2l2096:
 37404                           
 37405                           ; BSR set to: 0
 37406                           
 37407                           ; BSR set to: 0
 37408  014B4A  8E58               	bsf	i2___fladd@b+2,7,c
 37409  014B4C  D006               	goto	L22
 37410  014B4E                     i2l2095:
 37411                           
 37412                           ; BSR set to: 0
 37413                           
 37414                           ; BSR set to: 0
 37415  014B4E  0E00               	movlw	0
 37416  014B50  6E56               	movwf	i2___fladd@b,c
 37417  014B52  0E00               	movlw	0
 37418  014B54  6E57               	movwf	i2___fladd@b+1,c
 37419  014B56  0E00               	movlw	0
 37420  014B58  6E58               	movwf	i2___fladd@b+2,c
 37421  014B5A                     L22:
 37422  014B5A  0E00               	movlw	0
 37423  014B5C  6E59               	movwf	i2___fladd@b+3,c
 37424                           
 37425                           ; BSR set to: 0
 37426                           
 37427                           ; BSR set to: 0
 37428  014B5E  505D               	movf	i2___fladd@a+3,w,c
 37429  014B60  0B80               	andlw	128
 37430  014B62  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37431                           
 37432                           ; BSR set to: 0
 37433  014B64  5168               	movf	i2___fladd@signs& (0+255),w,b
 37434  014B66  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 37435  014B68  A4D8               	btfss	status,2,c
 37436                           
 37437                           ; BSR set to: 0
 37438  014B6A  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 37439                           
 37440                           ; BSR set to: 0
 37441                           
 37442                           ; BSR set to: 0
 37443  014B6C  505D               	movf	i2___fladd@a+3,w,c
 37444  014B6E  245D               	addwf	i2___fladd@a+3,w,c
 37445  014B70  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37446                           
 37447                           ; BSR set to: 0
 37448  014B72  BE5C               	btfsc	i2___fladd@a+2,7,c
 37449                           
 37450                           ; BSR set to: 0
 37451  014B74  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 37452                           
 37453                           ; BSR set to: 0
 37454                           
 37455                           ; BSR set to: 0
 37456  014B76  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37457  014B78  B4D8               	btfsc	status,2,c
 37458  014B7A  D00D               	goto	i2l2100
 37459                           
 37460                           ; BSR set to: 0
 37461  014B7C  2969               	incf	i2___fladd@aexp& (0+255),w,b
 37462  014B7E  A4D8               	btfss	status,2,c
 37463  014B80  D008               	goto	i2l2101
 37464                           
 37465                           ; BSR set to: 0
 37466  014B82  0E00               	movlw	0
 37467  014B84  6E5A               	movwf	i2___fladd@a,c
 37468  014B86  0E00               	movlw	0
 37469  014B88  6E5B               	movwf	i2___fladd@a+1,c
 37470  014B8A  0E00               	movlw	0
 37471  014B8C  6E5C               	movwf	i2___fladd@a+2,c
 37472  014B8E  0E00               	movlw	0
 37473  014B90  6E5D               	movwf	i2___fladd@a+3,c
 37474  014B92                     i2l2101:
 37475                           
 37476                           ; BSR set to: 0
 37477                           
 37478                           ; BSR set to: 0
 37479  014B92  8E5C               	bsf	i2___fladd@a+2,7,c
 37480  014B94  D006               	goto	L23
 37481  014B96                     i2l2100:
 37482                           
 37483                           ; BSR set to: 0
 37484                           
 37485                           ; BSR set to: 0
 37486  014B96  0E00               	movlw	0
 37487  014B98  6E5A               	movwf	i2___fladd@a,c
 37488  014B9A  0E00               	movlw	0
 37489  014B9C  6E5B               	movwf	i2___fladd@a+1,c
 37490  014B9E  0E00               	movlw	0
 37491  014BA0  6E5C               	movwf	i2___fladd@a+2,c
 37492  014BA2                     L23:
 37493  014BA2  0E00               	movlw	0
 37494  014BA4  6E5D               	movwf	i2___fladd@a+3,c
 37495                           
 37496                           ; BSR set to: 0
 37497                           
 37498                           ; BSR set to: 0
 37499  014BA6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37500  014BA8  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 37501  014BAA  B0D8               	btfsc	status,0,c
 37502  014BAC  D022               	goto	i2l2103
 37503                           
 37504                           ; BSR set to: 0
 37505  014BAE  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 37506  014BB0  D002               	goto	i2l2104
 37507                           
 37508                           ; BSR set to: 0
 37509  014BB2  0E80               	movlw	128
 37510  014BB4  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 37511  014BB6                     i2l2104:
 37512                           
 37513                           ; BSR set to: 0
 37514                           
 37515                           ; BSR set to: 0
 37516  014BB6  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 37517                           
 37518                           ; BSR set to: 0
 37519  014BBA  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 37520                           
 37521                           ; BSR set to: 0
 37522  014BBE  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 37523                           
 37524                           ; BSR set to: 0
 37525  014BC2  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 37526                           
 37527                           ; BSR set to: 0
 37528  014BC6  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 37529                           
 37530                           ; BSR set to: 0
 37531  014BCA  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 37532                           
 37533                           ; BSR set to: 0
 37534  014BCE  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 37535                           
 37536                           ; BSR set to: 0
 37537  014BD2  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 37538                           
 37539                           ; BSR set to: 0
 37540  014BD6  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 37541                           
 37542                           ; BSR set to: 0
 37543  014BDA  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 37544                           
 37545                           ; BSR set to: 0
 37546  014BDE  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 37547                           
 37548                           ; BSR set to: 0
 37549  014BE2  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 37550                           
 37551                           ; BSR set to: 0
 37552  014BE6  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 37553                           
 37554                           ; BSR set to: 0
 37555  014BEA  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 37556                           
 37557                           ; BSR set to: 0
 37558  014BEE  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 37559  014BF2                     i2l2103:
 37560                           
 37561                           ; BSR set to: 0
 37562                           
 37563                           ; BSR set to: 0
 37564  014BF2  0E00               	movlw	0
 37565  014BF4  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37566                           
 37567                           ; BSR set to: 0
 37568  014BF6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37569  014BF8  6F60               	movwf	??i2___fladd& (0+255),b
 37570  014BFA  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 37571  014BFC  1F60               	comf	??i2___fladd& (0+255),f,b
 37572  014BFE  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 37573  014C00  4B60               	infsnz	??i2___fladd& (0+255),f,b
 37574  014C02  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 37575  014C04  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37576  014C06  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 37577  014C08  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 37578  014C0A  5160               	movf	??i2___fladd& (0+255),w,b
 37579  014C0C  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 37580  014C0E  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 37581  014C10  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 37582  014C12  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 37583  014C14  D02C               	goto	i2l2107
 37584  014C16  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 37585  014C18  E104               	bnz	i2u1306_40
 37586  014C1A  0E1A               	movlw	26
 37587  014C1C  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 37588  014C1E  A0D8               	btfss	status,0,c
 37589  014C20  D026               	goto	i2l2107
 37590  014C22                     i2u1306_40:
 37591                           
 37592                           ; BSR set to: 0
 37593  014C22  5056               	movf	i2___fladd@b,w,c
 37594  014C24  1057               	iorwf	i2___fladd@b+1,w,c
 37595  014C26  1058               	iorwf	i2___fladd@b+2,w,c
 37596  014C28  1059               	iorwf	i2___fladd@b+3,w,c
 37597  014C2A  B4D8               	btfsc	status,2,c
 37598  014C2C  D002               	goto	i2u1307_40
 37599  014C2E  0E01               	movlw	1
 37600  014C30  D001               	goto	i2u1308_40
 37601  014C32                     i2u1307_40:
 37602  014C32  0E00               	movlw	0
 37603  014C34                     i2u1308_40:
 37604  014C34  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37605                           
 37606                           ; BSR set to: 0
 37607  014C36  0E00               	movlw	0
 37608  014C38  6E56               	movwf	i2___fladd@b,c
 37609  014C3A  0E00               	movlw	0
 37610  014C3C  6E57               	movwf	i2___fladd@b+1,c
 37611  014C3E  0E00               	movlw	0
 37612  014C40  6E58               	movwf	i2___fladd@b+2,c
 37613  014C42  0E00               	movlw	0
 37614  014C44  6E59               	movwf	i2___fladd@b+3,c
 37615                           
 37616                           ; BSR set to: 0
 37617  014C46  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 37618  014C4A  D015               	goto	i2u1311_40
 37619  014C4C                     i2l2108:
 37620                           
 37621                           ; BSR set to: 0
 37622  014C4C  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 37623  014C4E  D005               	goto	i2l2109
 37624                           
 37625                           ; BSR set to: 0
 37626  014C50  90D8               	bcf	status,0,c
 37627  014C52  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 37628  014C54  0901               	iorlw	1
 37629  014C56  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37630  014C58  D002               	goto	i2l2110
 37631  014C5A                     i2l2109:
 37632                           
 37633                           ; BSR set to: 0
 37634                           
 37635                           ; BSR set to: 0
 37636  014C5A  90D8               	bcf	status,0,c
 37637  014C5C  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 37638  014C5E                     i2l2110:
 37639                           
 37640                           ; BSR set to: 0
 37641                           
 37642                           ; BSR set to: 0
 37643  014C5E  B056               	btfsc	i2___fladd@b,0,c
 37644                           
 37645                           ; BSR set to: 0
 37646  014C60  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 37647                           
 37648                           ; BSR set to: 0
 37649                           
 37650                           ; BSR set to: 0
 37651  014C62  3459               	rlcf	i2___fladd@b+3,w,c
 37652  014C64  3259               	rrcf	i2___fladd@b+3,f,c
 37653  014C66  3258               	rrcf	i2___fladd@b+2,f,c
 37654  014C68  3257               	rrcf	i2___fladd@b+1,f,c
 37655  014C6A  3256               	rrcf	i2___fladd@b,f,c
 37656                           
 37657                           ; BSR set to: 0
 37658  014C6C  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 37659  014C6E                     i2l2107:
 37660                           
 37661                           ; BSR set to: 0
 37662  014C6E  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37663  014C70  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 37664  014C72  A0D8               	btfss	status,0,c
 37665  014C74  D7EB               	goto	i2l2108
 37666  014C76                     i2u1311_40:
 37667                           
 37668                           ; BSR set to: 0
 37669                           
 37670                           ; BSR set to: 0
 37671  014C76  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 37672  014C78  D029               	goto	i2l2113
 37673                           
 37674                           ; BSR set to: 0
 37675  014C7A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37676  014C7C  A4D8               	btfss	status,2,c
 37677  014C7E  D009               	goto	i2l2114
 37678                           
 37679                           ; BSR set to: 0
 37680  014C80  0E00               	movlw	0
 37681  014C82  6E56               	movwf	?i2___fladd,c
 37682  014C84  0E00               	movlw	0
 37683  014C86  6E57               	movwf	?i2___fladd+1,c
 37684  014C88  0E00               	movlw	0
 37685  014C8A  6E58               	movwf	?i2___fladd+2,c
 37686  014C8C  0E00               	movlw	0
 37687  014C8E  6E59               	movwf	?i2___fladd+3,c
 37688                           
 37689                           ; BSR set to: 0
 37690  014C90  0012               	return	
 37691  014C92                     i2l2114:
 37692                           
 37693                           ; BSR set to: 0
 37694                           
 37695                           ; BSR set to: 0
 37696  014C92  505A               	movf	i2___fladd@a,w,c
 37697  014C94  2656               	addwf	i2___fladd@b,f,c
 37698  014C96  505B               	movf	i2___fladd@a+1,w,c
 37699  014C98  2257               	addwfc	i2___fladd@b+1,f,c
 37700  014C9A  505C               	movf	i2___fladd@a+2,w,c
 37701  014C9C  2258               	addwfc	i2___fladd@b+2,f,c
 37702  014C9E  505D               	movf	i2___fladd@a+3,w,c
 37703  014CA0  2259               	addwfc	i2___fladd@b+3,f,c
 37704                           
 37705                           ; BSR set to: 0
 37706  014CA2  A059               	btfss	i2___fladd@b+3,0,c
 37707  014CA4  D083               	goto	i2u1324_40
 37708                           
 37709                           ; BSR set to: 0
 37710  014CA6  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 37711  014CA8  D006               	goto	i2l2117
 37712                           
 37713                           ; BSR set to: 0
 37714  014CAA  90D8               	bcf	status,0,c
 37715  014CAC  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 37716  014CAE  516B               	movf	i2___fladd@grs& (0+255),w,b
 37717  014CB0  0901               	iorlw	1
 37718  014CB2  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37719  014CB4  D002               	goto	i2l2118
 37720  014CB6                     i2l2117:
 37721                           
 37722                           ; BSR set to: 0
 37723                           
 37724                           ; BSR set to: 0
 37725  014CB6  90D8               	bcf	status,0,c
 37726  014CB8  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 37727  014CBA                     i2l2118:
 37728                           
 37729                           ; BSR set to: 0
 37730                           
 37731                           ; BSR set to: 0
 37732  014CBA  B056               	btfsc	i2___fladd@b,0,c
 37733                           
 37734                           ; BSR set to: 0
 37735  014CBC  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 37736                           
 37737                           ; BSR set to: 0
 37738                           
 37739                           ; BSR set to: 0
 37740  014CBE  3459               	rlcf	i2___fladd@b+3,w,c
 37741  014CC0  3259               	rrcf	i2___fladd@b+3,f,c
 37742  014CC2  3258               	rrcf	i2___fladd@b+2,f,c
 37743  014CC4  3257               	rrcf	i2___fladd@b+1,f,c
 37744  014CC6  3256               	rrcf	i2___fladd@b,f,c
 37745                           
 37746                           ; BSR set to: 0
 37747  014CC8  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 37748                           
 37749                           ; BSR set to: 0
 37750  014CCA  D070               	goto	i2u1324_40
 37751  014CCC                     i2l2113:
 37752                           
 37753                           ; BSR set to: 0
 37754                           
 37755                           ; BSR set to: 0
 37756  014CCC  505A               	movf	i2___fladd@a,w,c
 37757  014CCE  5C56               	subwf	i2___fladd@b,w,c
 37758  014CD0  505B               	movf	i2___fladd@a+1,w,c
 37759  014CD2  5857               	subwfb	i2___fladd@b+1,w,c
 37760  014CD4  505C               	movf	i2___fladd@a+2,w,c
 37761  014CD6  5858               	subwfb	i2___fladd@b+2,w,c
 37762  014CD8  5059               	movf	i2___fladd@b+3,w,c
 37763  014CDA  0A80               	xorlw	128
 37764  014CDC  6F60               	movwf	??i2___fladd& (0+255),b
 37765  014CDE  505D               	movf	i2___fladd@a+3,w,c
 37766  014CE0  0A80               	xorlw	128
 37767  014CE2  5960               	subwfb	??i2___fladd& (0+255),w,b
 37768  014CE4  B0D8               	btfsc	status,0,c
 37769  014CE6  D036               	goto	i2l2121
 37770                           
 37771                           ; BSR set to: 0
 37772  014CE8  C056  F060         	movff	i2___fladd@b,??i2___fladd
 37773  014CEC  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 37774  014CF0  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 37775  014CF4  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 37776  014CF8  1F60               	comf	??i2___fladd& (0+255),f,b
 37777  014CFA  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 37778  014CFC  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 37779  014CFE  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 37780  014D00  2B60               	incf	??i2___fladd& (0+255),f,b
 37781  014D02  0E00               	movlw	0
 37782  014D04  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 37783  014D06  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 37784  014D08  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 37785  014D0A  505A               	movf	i2___fladd@a,w,c
 37786  014D0C  2560               	addwf	??i2___fladd& (0+255),w,b
 37787  014D0E  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 37788  014D10  505B               	movf	i2___fladd@a+1,w,c
 37789  014D12  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 37790  014D14  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 37791  014D16  505C               	movf	i2___fladd@a+2,w,c
 37792  014D18  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 37793  014D1A  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 37794  014D1C  505D               	movf	i2___fladd@a+3,w,c
 37795  014D1E  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 37796  014D20  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 37797  014D22  0EFF               	movlw	255
 37798  014D24  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 37799  014D26  6E56               	movwf	i2___fladd@b,c
 37800  014D28  0EFF               	movlw	255
 37801  014D2A  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 37802  014D2C  6E57               	movwf	i2___fladd@b+1,c
 37803  014D2E  0EFF               	movlw	255
 37804  014D30  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 37805  014D32  6E58               	movwf	i2___fladd@b+2,c
 37806  014D34  0EFF               	movlw	255
 37807  014D36  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 37808  014D38  6E59               	movwf	i2___fladd@b+3,c
 37809  014D3A  0E80               	movlw	128
 37810  014D3C  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 37811                           
 37812                           ; BSR set to: 0
 37813  014D3E  6D6B               	negf	i2___fladd@grs& (0+255),b
 37814                           
 37815                           ; BSR set to: 0
 37816  014D40  516B               	movf	i2___fladd@grs& (0+255),w,b
 37817  014D42  A4D8               	btfss	status,2,c
 37818  014D44  D00F               	goto	i2l2123
 37819                           
 37820                           ; BSR set to: 0
 37821  014D46  0E01               	movlw	1
 37822  014D48  2656               	addwf	i2___fladd@b,f,c
 37823  014D4A  0E00               	movlw	0
 37824  014D4C  2257               	addwfc	i2___fladd@b+1,f,c
 37825  014D4E  2258               	addwfc	i2___fladd@b+2,f,c
 37826  014D50  2259               	addwfc	i2___fladd@b+3,f,c
 37827                           
 37828                           ; BSR set to: 0
 37829  014D52  D008               	goto	i2l2123
 37830  014D54                     i2l2121:
 37831                           
 37832                           ; BSR set to: 0
 37833                           
 37834                           ; BSR set to: 0
 37835  014D54  505A               	movf	i2___fladd@a,w,c
 37836  014D56  5E56               	subwf	i2___fladd@b,f,c
 37837  014D58  505B               	movf	i2___fladd@a+1,w,c
 37838  014D5A  5A57               	subwfb	i2___fladd@b+1,f,c
 37839  014D5C  505C               	movf	i2___fladd@a+2,w,c
 37840  014D5E  5A58               	subwfb	i2___fladd@b+2,f,c
 37841  014D60  505D               	movf	i2___fladd@a+3,w,c
 37842  014D62  5A59               	subwfb	i2___fladd@b+3,f,c
 37843  014D64                     i2l2123:
 37844                           
 37845                           ; BSR set to: 0
 37846  014D64  5056               	movf	i2___fladd@b,w,c
 37847  014D66  1057               	iorwf	i2___fladd@b+1,w,c
 37848  014D68  1058               	iorwf	i2___fladd@b+2,w,c
 37849  014D6A  1059               	iorwf	i2___fladd@b+3,w,c
 37850  014D6C  A4D8               	btfss	status,2,c
 37851  014D6E  D01C               	goto	i2l2130
 37852                           
 37853                           ; BSR set to: 0
 37854  014D70  516B               	movf	i2___fladd@grs& (0+255),w,b
 37855  014D72  A4D8               	btfss	status,2,c
 37856  014D74  D019               	goto	i2l2130
 37857                           
 37858                           ; BSR set to: 0
 37859  014D76  0E00               	movlw	0
 37860  014D78  6E56               	movwf	?i2___fladd,c
 37861  014D7A  0E00               	movlw	0
 37862  014D7C  6E57               	movwf	?i2___fladd+1,c
 37863  014D7E  0E00               	movlw	0
 37864  014D80  6E58               	movwf	?i2___fladd+2,c
 37865  014D82  0E00               	movlw	0
 37866  014D84  6E59               	movwf	?i2___fladd+3,c
 37867                           
 37868                           ; BSR set to: 0
 37869  014D86  0012               	return	
 37870  014D88                     
 37871                           ; BSR set to: 0
 37872                           
 37873                           ; BSR set to: 0
 37874  014D88  90D8               	bcf	status,0,c
 37875  014D8A  3656               	rlcf	i2___fladd@b,f,c
 37876  014D8C  3657               	rlcf	i2___fladd@b+1,f,c
 37877  014D8E  3658               	rlcf	i2___fladd@b+2,f,c
 37878  014D90  3659               	rlcf	i2___fladd@b+3,f,c
 37879                           
 37880                           ; BSR set to: 0
 37881  014D92  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 37882                           
 37883                           ; BSR set to: 0
 37884  014D94  8056               	bsf	i2___fladd@b,0,c
 37885                           
 37886                           ; BSR set to: 0
 37887                           
 37888                           ; BSR set to: 0
 37889  014D96  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 37890  014D98  D002               	goto	i2l2128
 37891                           
 37892                           ; BSR set to: 0
 37893  014D9A  80D8               	bsf	status,0,c
 37894  014D9C  D001               	goto	L24
 37895  014D9E                     i2l2128:
 37896                           
 37897                           ; BSR set to: 0
 37898                           
 37899                           ; BSR set to: 0
 37900  014D9E  90D8               	bcf	status,0,c
 37901  014DA0                     L24:
 37902  014DA0  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 37903                           
 37904                           ; BSR set to: 0
 37905                           
 37906                           ; BSR set to: 0
 37907  014DA2  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37908  014DA4  A4D8               	btfss	status,2,c
 37909                           
 37910                           ; BSR set to: 0
 37911  014DA6  076A               	decf	i2___fladd@bexp& (0+255),f,b
 37912  014DA8                     i2l2130:
 37913                           
 37914                           ; BSR set to: 0
 37915                           
 37916                           ; BSR set to: 0
 37917                           
 37918                           ; BSR set to: 0
 37919  014DA8  AE58               	btfss	i2___fladd@b+2,7,c
 37920  014DAA  D7EE               	goto	i2l2126
 37921  014DAC                     i2u1324_40:
 37922                           
 37923                           ; BSR set to: 0
 37924                           
 37925                           ; BSR set to: 0
 37926                           
 37927                           ; BSR set to: 0
 37928  014DAC  0E00               	movlw	0
 37929  014DAE  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37930                           
 37931                           ; BSR set to: 0
 37932  014DB0  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 37933  014DB2  D00A               	goto	i2l2135
 37934                           
 37935                           ; BSR set to: 0
 37936  014DB4  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 37937  014DB8  0E7F               	movlw	127
 37938  014DBA  1760               	andwf	??i2___fladd& (0+255),f,b
 37939  014DBC  A4D8               	btfss	status,2,c
 37940  014DBE  D002               	goto	i2u1327_40
 37941                           
 37942                           ; BSR set to: 0
 37943                           
 37944                           ; BSR set to: 0
 37945  014DC0  A056               	btfss	i2___fladd@b,0,c
 37946  014DC2  D002               	goto	i2l2135
 37947  014DC4                     i2u1327_40:
 37948                           
 37949                           ; BSR set to: 0
 37950  014DC4  0E01               	movlw	1
 37951  014DC6  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37952  014DC8                     i2l2135:
 37953                           
 37954                           ; BSR set to: 0
 37955                           
 37956                           ; BSR set to: 0
 37957                           
 37958                           ; BSR set to: 0
 37959  014DC8  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37960  014DCA  B4D8               	btfsc	status,2,c
 37961  014DCC  D020               	goto	i2l2138
 37962                           
 37963                           ; BSR set to: 0
 37964  014DCE  0E01               	movlw	1
 37965  014DD0  2656               	addwf	i2___fladd@b,f,c
 37966  014DD2  0E00               	movlw	0
 37967  014DD4  2257               	addwfc	i2___fladd@b+1,f,c
 37968  014DD6  2258               	addwfc	i2___fladd@b+2,f,c
 37969  014DD8  2259               	addwfc	i2___fladd@b+3,f,c
 37970                           
 37971                           ; BSR set to: 0
 37972  014DDA  A059               	btfss	i2___fladd@b+3,0,c
 37973  014DDC  D018               	goto	i2l2138
 37974                           
 37975                           ; BSR set to: 0
 37976  014DDE  C056  F060         	movff	i2___fladd@b,??i2___fladd
 37977  014DE2  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 37978  014DE6  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 37979  014DEA  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 37980  014DEE  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 37981  014DF0  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 37982  014DF2  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 37983  014DF4  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 37984  014DF6  3360               	rrcf	??i2___fladd& (0+255),f,b
 37985  014DF8  C060  F056         	movff	??i2___fladd,i2___fladd@b
 37986  014DFC  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 37987  014E00  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 37988  014E04  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 37989  014E08  296A               	incf	i2___fladd@bexp& (0+255),w,b
 37990  014E0A  A4D8               	btfss	status,2,c
 37991                           
 37992                           ; BSR set to: 0
 37993  014E0C  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 37994  014E0E                     i2l2138:
 37995                           
 37996                           ; BSR set to: 0
 37997                           
 37998                           ; BSR set to: 0
 37999                           
 38000                           ; BSR set to: 0
 38001                           
 38002                           ; BSR set to: 0
 38003  014E0E  296A               	incf	i2___fladd@bexp& (0+255),w,b
 38004  014E10  B4D8               	btfsc	status,2,c
 38005  014E12  D003               	goto	i2u1332_40
 38006                           
 38007                           ; BSR set to: 0
 38008  014E14  516A               	movf	i2___fladd@bexp& (0+255),w,b
 38009  014E16  A4D8               	btfss	status,2,c
 38010  014E18  D00D               	goto	i2l2142
 38011  014E1A                     i2u1332_40:
 38012                           
 38013                           ; BSR set to: 0
 38014                           
 38015                           ; BSR set to: 0
 38016  014E1A  0E00               	movlw	0
 38017  014E1C  6E56               	movwf	i2___fladd@b,c
 38018  014E1E  0E00               	movlw	0
 38019  014E20  6E57               	movwf	i2___fladd@b+1,c
 38020  014E22  0E00               	movlw	0
 38021  014E24  6E58               	movwf	i2___fladd@b+2,c
 38022  014E26  0E00               	movlw	0
 38023  014E28  6E59               	movwf	i2___fladd@b+3,c
 38024  014E2A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 38025  014E2C  A4D8               	btfss	status,2,c
 38026  014E2E  D002               	goto	i2l2142
 38027                           
 38028                           ; BSR set to: 0
 38029  014E30  0E00               	movlw	0
 38030  014E32  6F68               	movwf	i2___fladd@signs& (0+255),b
 38031  014E34                     i2l2142:
 38032                           
 38033                           ; BSR set to: 0
 38034                           
 38035                           ; BSR set to: 0
 38036                           
 38037                           ; BSR set to: 0
 38038  014E34  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 38039  014E36  D002               	goto	i2l2143
 38040                           
 38041                           ; BSR set to: 0
 38042  014E38  8E58               	bsf	i2___fladd@b+2,7,c
 38043  014E3A  D001               	goto	i2l2144
 38044  014E3C                     i2l2143:
 38045                           
 38046                           ; BSR set to: 0
 38047                           
 38048                           ; BSR set to: 0
 38049  014E3C  9E58               	bcf	i2___fladd@b+2,7,c
 38050  014E3E                     i2l2144:
 38051                           
 38052                           ; BSR set to: 0
 38053                           
 38054                           ; BSR set to: 0
 38055  014E3E  90D8               	bcf	status,0,c
 38056  014E40  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 38057  014E42  6E59               	movwf	i2___fladd@b+3,c
 38058                           
 38059                           ; BSR set to: 0
 38060  014E44  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 38061                           
 38062                           ; BSR set to: 0
 38063  014E46  8E59               	bsf	i2___fladd@b+3,7,c
 38064                           
 38065                           ; BSR set to: 0
 38066                           
 38067                           ; BSR set to: 0
 38068  014E48  C056  F056         	movff	i2___fladd@b,?i2___fladd
 38069  014E4C  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 38070  014E50  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 38071  014E54  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 38072  014E58  0012               	return	
 38073  014E5A                     __end_ofi2___fladd:
 38074                           	opt stack 0
 38075                           tosu	equ	0xFFF
 38076                           tosh	equ	0xFFE
 38077                           tosl	equ	0xFFD
 38078                           pclatu	equ	0xFFB
 38079                           pclath	equ	0xFFA
 38080                           tblptru	equ	0xFF8
 38081                           tblptrh	equ	0xFF7
 38082                           tblptrl	equ	0xFF6
 38083                           tablat	equ	0xFF5
 38084                           prodh	equ	0xFF4
 38085                           prodl	equ	0xFF3
 38086                           intcon	equ	0xFF2
 38087                           indf0	equ	0xFEF
 38088                           postinc0	equ	0xFEE
 38089                           fsr0h	equ	0xFEA
 38090                           fsr0l	equ	0xFE9
 38091                           wreg	equ	0xFE8
 38092                           indf1	equ	0xFE7
 38093                           postdec1	equ	0xFE5
 38094                           plusw1	equ	0xFE3
 38095                           fsr1h	equ	0xFE2
 38096                           fsr1l	equ	0xFE1
 38097                           bsr	equ	0xFE0
 38098                           indf2	equ	0xFDF
 38099                           postinc2	equ	0xFDE
 38100                           postdec2	equ	0xFDD
 38101                           plusw2	equ	0xFDB
 38102                           fsr2h	equ	0xFDA
 38103                           fsr2l	equ	0xFD9
 38104                           status	equ	0xFD8
 38105                           
 38106 ;; *************** function _abs *****************
 38107 ;; Defined at:
 38108 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 38109 ;; Parameters:    Size  Location     Type
 38110 ;;  a               2   22[BANK0 ] int 
 38111 ;; Auto vars:     Size  Location     Type
 38112 ;;		None
 38113 ;; Return value:  Size  Location     Type
 38114 ;;                  2   22[BANK0 ] int 
 38115 ;; Registers used:
 38116 ;;		wreg, status,2, status,0
 38117 ;; Tracked objects:
 38118 ;;		On entry : 0/0
 38119 ;;		On exit  : 0/0
 38120 ;;		Unchanged: 0/0
 38121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38122 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38125 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38126 ;;Total ram usage:        4 bytes
 38127 ;; Hardware stack levels used:    1
 38128 ;; This function calls:
 38129 ;;		Nothing
 38130 ;; This function is called by:
 38131 ;;		_ADCPostProcessingCallback
 38132 ;; This function uses a non-reentrant model
 38133 ;;
 38134                           
 38135                           	psect	text125
 38136  018976                     __ptext125:
 38137                           	opt stack 0
 38138  018976                     _abs:
 38139                           	opt stack 16
 38140                           
 38141                           ; BSR set to: 0
 38142                           ;incstack = 0
 38143  018976  0100               	movlb	0	; () banked
 38144  018978  AF77               	btfss	(abs@a+1)& (0+255),7,b
 38145  01897A  D00D               	goto	i2l1590
 38146                           
 38147                           ; BSR set to: 0
 38148  01897C  C076  F078         	movff	abs@a,??_abs
 38149  018980  C077  F079         	movff	abs@a+1,??_abs+1
 38150  018984  1F78               	comf	??_abs& (0+255),f,b
 38151  018986  1F79               	comf	(??_abs+1)& (0+255),f,b
 38152  018988  4B78               	infsnz	??_abs& (0+255),f,b
 38153  01898A  2B79               	incf	(??_abs+1)& (0+255),f,b
 38154  01898C  C078  F076         	movff	??_abs,?_abs
 38155  018990  C079  F077         	movff	??_abs+1,?_abs+1
 38156  018994  0012               	return	
 38157  018996                     i2l1590:
 38158                           
 38159                           ; BSR set to: 0
 38160  018996  C076  F076         	movff	abs@a,?_abs
 38161  01899A  C077  F077         	movff	abs@a+1,?_abs+1
 38162                           
 38163                           ; BSR set to: 0
 38164  01899E  0012               	return		;funcret
 38165  0189A0                     __end_of_abs:
 38166                           	opt stack 0
 38167                           tosu	equ	0xFFF
 38168                           tosh	equ	0xFFE
 38169                           tosl	equ	0xFFD
 38170                           pclatu	equ	0xFFB
 38171                           pclath	equ	0xFFA
 38172                           tblptru	equ	0xFF8
 38173                           tblptrh	equ	0xFF7
 38174                           tblptrl	equ	0xFF6
 38175                           tablat	equ	0xFF5
 38176                           prodh	equ	0xFF4
 38177                           prodl	equ	0xFF3
 38178                           intcon	equ	0xFF2
 38179                           indf0	equ	0xFEF
 38180                           postinc0	equ	0xFEE
 38181                           fsr0h	equ	0xFEA
 38182                           fsr0l	equ	0xFE9
 38183                           wreg	equ	0xFE8
 38184                           indf1	equ	0xFE7
 38185                           postdec1	equ	0xFE5
 38186                           plusw1	equ	0xFE3
 38187                           fsr1h	equ	0xFE2
 38188                           fsr1l	equ	0xFE1
 38189                           bsr	equ	0xFE0
 38190                           indf2	equ	0xFDF
 38191                           postinc2	equ	0xFDE
 38192                           postdec2	equ	0xFDD
 38193                           plusw2	equ	0xFDB
 38194                           fsr2h	equ	0xFDA
 38195                           fsr2l	equ	0xFD9
 38196                           status	equ	0xFD8
 38197                           
 38198 ;; *************** function _ADCC_StopConversion *****************
 38199 ;; Defined at:
 38200 ;;		line 162 in file "mcc_generated_files/adcc.c"
 38201 ;; Parameters:    Size  Location     Type
 38202 ;;		None
 38203 ;; Auto vars:     Size  Location     Type
 38204 ;;		None
 38205 ;; Return value:  Size  Location     Type
 38206 ;;                  1    wreg      void 
 38207 ;; Registers used:
 38208 ;;		None
 38209 ;; Tracked objects:
 38210 ;;		On entry : 0/0
 38211 ;;		On exit  : 0/0
 38212 ;;		Unchanged: 0/0
 38213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38218 ;;Total ram usage:        0 bytes
 38219 ;; Hardware stack levels used:    1
 38220 ;; This function calls:
 38221 ;;		Nothing
 38222 ;; This function is called by:
 38223 ;;		_ADCPostProcessingCallback
 38224 ;; This function uses a non-reentrant model
 38225 ;;
 38226                           
 38227                           	psect	text126
 38228  018CEC                     __ptext126:
 38229                           	opt stack 0
 38230  018CEC                     _ADCC_StopConversion:
 38231                           	opt stack 16
 38232                           
 38233                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 38234                           
 38235                           ; BSR set to: 0
 38236                           ;incstack = 0
 38237  018CEC  9060               	bcf	3936,0,c	;volatile
 38238  018CEE  0012               	return		;funcret
 38239  018CF0                     __end_of_ADCC_StopConversion:
 38240                           	opt stack 0
 38241                           tosu	equ	0xFFF
 38242                           tosh	equ	0xFFE
 38243                           tosl	equ	0xFFD
 38244                           pclatu	equ	0xFFB
 38245                           pclath	equ	0xFFA
 38246                           tblptru	equ	0xFF8
 38247                           tblptrh	equ	0xFF7
 38248                           tblptrl	equ	0xFF6
 38249                           tablat	equ	0xFF5
 38250                           prodh	equ	0xFF4
 38251                           prodl	equ	0xFF3
 38252                           intcon	equ	0xFF2
 38253                           indf0	equ	0xFEF
 38254                           postinc0	equ	0xFEE
 38255                           fsr0h	equ	0xFEA
 38256                           fsr0l	equ	0xFE9
 38257                           wreg	equ	0xFE8
 38258                           indf1	equ	0xFE7
 38259                           postdec1	equ	0xFE5
 38260                           plusw1	equ	0xFE3
 38261                           fsr1h	equ	0xFE2
 38262                           fsr1l	equ	0xFE1
 38263                           bsr	equ	0xFE0
 38264                           indf2	equ	0xFDF
 38265                           postinc2	equ	0xFDE
 38266                           postdec2	equ	0xFDD
 38267                           plusw2	equ	0xFDB
 38268                           fsr2h	equ	0xFDA
 38269                           fsr2l	equ	0xFD9
 38270                           status	equ	0xFD8
 38271                           
 38272 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 38273 ;; Defined at:
 38274 ;;		line 216 in file "mcc_generated_files/adcc.c"
 38275 ;; Parameters:    Size  Location     Type
 38276 ;;		None
 38277 ;; Auto vars:     Size  Location     Type
 38278 ;;		None
 38279 ;; Return value:  Size  Location     Type
 38280 ;;                  1    wreg      unsigned char 
 38281 ;; Registers used:
 38282 ;;		wreg
 38283 ;; Tracked objects:
 38284 ;;		On entry : 0/0
 38285 ;;		On exit  : 0/0
 38286 ;;		Unchanged: 0/0
 38287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38292 ;;Total ram usage:        0 bytes
 38293 ;; Hardware stack levels used:    1
 38294 ;; This function calls:
 38295 ;;		Nothing
 38296 ;; This function is called by:
 38297 ;;		_ADCPostProcessingCallback
 38298 ;; This function uses a non-reentrant model
 38299 ;;
 38300                           
 38301                           	psect	text127
 38302  018CA6                     __ptext127:
 38303                           	opt stack 0
 38304  018CA6                     _ADCC_HasAccumulatorOverflowed:
 38305                           	opt stack 16
 38306                           
 38307                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 38308                           
 38309                           ;incstack = 0
 38310  018CA6  AE65               	btfss	3941,7,c	;volatile
 38311  018CA8  D002               	goto	i2u1668_40
 38312  018CAA  0E01               	movlw	1
 38313  018CAC  0012               	return	
 38314  018CAE                     i2u1668_40:
 38315  018CAE  0E00               	movlw	0
 38316  018CB0  0012               	return	
 38317  018CB2                     __end_of_ADCC_HasAccumulatorOverflowed:
 38318                           	opt stack 0
 38319                           tosu	equ	0xFFF
 38320                           tosh	equ	0xFFE
 38321                           tosl	equ	0xFFD
 38322                           pclatu	equ	0xFFB
 38323                           pclath	equ	0xFFA
 38324                           tblptru	equ	0xFF8
 38325                           tblptrh	equ	0xFF7
 38326                           tblptrl	equ	0xFF6
 38327                           tablat	equ	0xFF5
 38328                           prodh	equ	0xFF4
 38329                           prodl	equ	0xFF3
 38330                           intcon	equ	0xFF2
 38331                           indf0	equ	0xFEF
 38332                           postinc0	equ	0xFEE
 38333                           fsr0h	equ	0xFEA
 38334                           fsr0l	equ	0xFE9
 38335                           wreg	equ	0xFE8
 38336                           indf1	equ	0xFE7
 38337                           postdec1	equ	0xFE5
 38338                           plusw1	equ	0xFE3
 38339                           fsr1h	equ	0xFE2
 38340                           fsr1l	equ	0xFE1
 38341                           bsr	equ	0xFE0
 38342                           indf2	equ	0xFDF
 38343                           postinc2	equ	0xFDE
 38344                           postdec2	equ	0xFDD
 38345                           plusw2	equ	0xFDB
 38346                           fsr2h	equ	0xFDA
 38347                           fsr2l	equ	0xFD9
 38348                           status	equ	0xFD8
 38349                           
 38350 ;; *************** function _ADCC_GetFilterValue *****************
 38351 ;; Defined at:
 38352 ;;		line 222 in file "mcc_generated_files/adcc.c"
 38353 ;; Parameters:    Size  Location     Type
 38354 ;;		None
 38355 ;; Auto vars:     Size  Location     Type
 38356 ;;		None
 38357 ;; Return value:  Size  Location     Type
 38358 ;;                  2    0[COMRAM] unsigned int 
 38359 ;; Registers used:
 38360 ;;		wreg, status,2, status,0
 38361 ;; Tracked objects:
 38362 ;;		On entry : 0/0
 38363 ;;		On exit  : 0/0
 38364 ;;		Unchanged: 0/0
 38365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38370 ;;Total ram usage:        4 bytes
 38371 ;; Hardware stack levels used:    1
 38372 ;; This function calls:
 38373 ;;		Nothing
 38374 ;; This function is called by:
 38375 ;;		_ADCPostProcessingCallback
 38376 ;; This function uses a non-reentrant model
 38377 ;;
 38378                           
 38379                           	psect	text128
 38380  018BAA                     __ptext128:
 38381                           	opt stack 0
 38382  018BAA                     _ADCC_GetFilterValue:
 38383                           	opt stack 16
 38384                           
 38385                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 38386                           
 38387                           ;incstack = 0
 38388  018BAA  5073               	movf	3955,w,c	;volatile
 38389  018BAC  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 38390  018BAE  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 38391  018BB0  5072               	movf	3954,w,c	;volatile
 38392  018BB2  2403               	addwf	??_ADCC_GetFilterValue,w,c
 38393  018BB4  6E01               	movwf	?_ADCC_GetFilterValue,c
 38394  018BB6  0E00               	movlw	0
 38395  018BB8  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 38396  018BBA  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 38397  018BBC  0012               	return	
 38398  018BBE                     __end_of_ADCC_GetFilterValue:
 38399                           	opt stack 0
 38400                           tosu	equ	0xFFF
 38401                           tosh	equ	0xFFE
 38402                           tosl	equ	0xFFD
 38403                           pclatu	equ	0xFFB
 38404                           pclath	equ	0xFFA
 38405                           tblptru	equ	0xFF8
 38406                           tblptrh	equ	0xFF7
 38407                           tblptrl	equ	0xFF6
 38408                           tablat	equ	0xFF5
 38409                           prodh	equ	0xFF4
 38410                           prodl	equ	0xFF3
 38411                           intcon	equ	0xFF2
 38412                           indf0	equ	0xFEF
 38413                           postinc0	equ	0xFEE
 38414                           fsr0h	equ	0xFEA
 38415                           fsr0l	equ	0xFE9
 38416                           wreg	equ	0xFE8
 38417                           indf1	equ	0xFE7
 38418                           postdec1	equ	0xFE5
 38419                           plusw1	equ	0xFE3
 38420                           fsr1h	equ	0xFE2
 38421                           fsr1l	equ	0xFE1
 38422                           bsr	equ	0xFE0
 38423                           indf2	equ	0xFDF
 38424                           postinc2	equ	0xFDE
 38425                           postdec2	equ	0xFDD
 38426                           plusw2	equ	0xFDB
 38427                           fsr2h	equ	0xFDA
 38428                           fsr2l	equ	0xFD9
 38429                           status	equ	0xFD8
 38430                           
 38431 ;; *************** function _ADCC_GetConversionResult *****************
 38432 ;; Defined at:
 38433 ;;		line 130 in file "mcc_generated_files/adcc.c"
 38434 ;; Parameters:    Size  Location     Type
 38435 ;;		None
 38436 ;; Auto vars:     Size  Location     Type
 38437 ;;		None
 38438 ;; Return value:  Size  Location     Type
 38439 ;;                  2    0[COMRAM] unsigned int 
 38440 ;; Registers used:
 38441 ;;		wreg, status,2, status,0
 38442 ;; Tracked objects:
 38443 ;;		On entry : 0/0
 38444 ;;		On exit  : 0/0
 38445 ;;		Unchanged: 0/0
 38446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38450 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38451 ;;Total ram usage:        4 bytes
 38452 ;; Hardware stack levels used:    1
 38453 ;; This function calls:
 38454 ;;		Nothing
 38455 ;; This function is called by:
 38456 ;;		_ADCPostProcessingCallback
 38457 ;; This function uses a non-reentrant model
 38458 ;;
 38459                           
 38460                           	psect	text129
 38461  018BBE                     __ptext129:
 38462                           	opt stack 0
 38463  018BBE                     _ADCC_GetConversionResult:
 38464                           	opt stack 16
 38465                           
 38466                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 38467                           
 38468                           ;incstack = 0
 38469  018BBE  5064               	movf	3940,w,c	;volatile
 38470  018BC0  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 38471  018BC2  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 38472  018BC4  5063               	movf	3939,w,c	;volatile
 38473  018BC6  2403               	addwf	??_ADCC_GetConversionResult,w,c
 38474  018BC8  6E01               	movwf	?_ADCC_GetConversionResult,c
 38475  018BCA  0E00               	movlw	0
 38476  018BCC  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 38477  018BCE  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 38478  018BD0  0012               	return	
 38479  018BD2                     __end_of_ADCC_GetConversionResult:
 38480                           	opt stack 0
 38481                           tosu	equ	0xFFF
 38482                           tosh	equ	0xFFE
 38483                           tosl	equ	0xFFD
 38484                           pclatu	equ	0xFFB
 38485                           pclath	equ	0xFFA
 38486                           tblptru	equ	0xFF8
 38487                           tblptrh	equ	0xFF7
 38488                           tblptrl	equ	0xFF6
 38489                           tablat	equ	0xFF5
 38490                           prodh	equ	0xFF4
 38491                           prodl	equ	0xFF3
 38492                           intcon	equ	0xFF2
 38493                           indf0	equ	0xFEF
 38494                           postinc0	equ	0xFEE
 38495                           fsr0h	equ	0xFEA
 38496                           fsr0l	equ	0xFE9
 38497                           wreg	equ	0xFE8
 38498                           indf1	equ	0xFE7
 38499                           postdec1	equ	0xFE5
 38500                           plusw1	equ	0xFE3
 38501                           fsr1h	equ	0xFE2
 38502                           fsr1l	equ	0xFE1
 38503                           bsr	equ	0xFE0
 38504                           indf2	equ	0xFDF
 38505                           postinc2	equ	0xFDE
 38506                           postdec2	equ	0xFDD
 38507                           plusw2	equ	0xFDB
 38508                           fsr2h	equ	0xFDA
 38509                           fsr2l	equ	0xFD9
 38510                           status	equ	0xFD8
 38511                           tosu	equ	0xFFF
 38512                           tosh	equ	0xFFE
 38513                           tosl	equ	0xFFD
 38514                           pclatu	equ	0xFFB
 38515                           pclath	equ	0xFFA
 38516                           tblptru	equ	0xFF8
 38517                           tblptrh	equ	0xFF7
 38518                           tblptrl	equ	0xFF6
 38519                           tablat	equ	0xFF5
 38520                           prodh	equ	0xFF4
 38521                           prodl	equ	0xFF3
 38522                           intcon	equ	0xFF2
 38523                           indf0	equ	0xFEF
 38524                           postinc0	equ	0xFEE
 38525                           fsr0h	equ	0xFEA
 38526                           fsr0l	equ	0xFE9
 38527                           wreg	equ	0xFE8
 38528                           indf1	equ	0xFE7
 38529                           postdec1	equ	0xFE5
 38530                           plusw1	equ	0xFE3
 38531                           fsr1h	equ	0xFE2
 38532                           fsr1l	equ	0xFE1
 38533                           bsr	equ	0xFE0
 38534                           indf2	equ	0xFDF
 38535                           postinc2	equ	0xFDE
 38536                           postdec2	equ	0xFDD
 38537                           plusw2	equ	0xFDB
 38538                           fsr2h	equ	0xFDA
 38539                           fsr2l	equ	0xFD9
 38540                           status	equ	0xFD8
 38541                           
 38542                           	psect	text130
 38543  000000                     __ptext130:
 38544                           	opt stack 0
 38545                           tosu	equ	0xFFF
 38546                           tosh	equ	0xFFE
 38547                           tosl	equ	0xFFD
 38548                           pclatu	equ	0xFFB
 38549                           pclath	equ	0xFFA
 38550                           tblptru	equ	0xFF8
 38551                           tblptrh	equ	0xFF7
 38552                           tblptrl	equ	0xFF6
 38553                           tablat	equ	0xFF5
 38554                           prodh	equ	0xFF4
 38555                           prodl	equ	0xFF3
 38556                           intcon	equ	0xFF2
 38557                           indf0	equ	0xFEF
 38558                           postinc0	equ	0xFEE
 38559                           fsr0h	equ	0xFEA
 38560                           fsr0l	equ	0xFE9
 38561                           wreg	equ	0xFE8
 38562                           indf1	equ	0xFE7
 38563                           postdec1	equ	0xFE5
 38564                           plusw1	equ	0xFE3
 38565                           fsr1h	equ	0xFE2
 38566                           fsr1l	equ	0xFE1
 38567                           bsr	equ	0xFE0
 38568                           indf2	equ	0xFDF
 38569                           postinc2	equ	0xFDE
 38570                           postdec2	equ	0xFDD
 38571                           plusw2	equ	0xFDB
 38572                           fsr2h	equ	0xFDA
 38573                           fsr2l	equ	0xFD9
 38574                           status	equ	0xFD8
 38575                           
 38576                           	psect	rparam
 38577  0000                     tosu	equ	0xFFF
 38578                           tosh	equ	0xFFE
 38579                           tosl	equ	0xFFD
 38580                           pclatu	equ	0xFFB
 38581                           pclath	equ	0xFFA
 38582                           tblptru	equ	0xFF8
 38583                           tblptrh	equ	0xFF7
 38584                           tblptrl	equ	0xFF6
 38585                           tablat	equ	0xFF5
 38586                           prodh	equ	0xFF4
 38587                           prodl	equ	0xFF3
 38588                           intcon	equ	0xFF2
 38589                           indf0	equ	0xFEF
 38590                           postinc0	equ	0xFEE
 38591                           fsr0h	equ	0xFEA
 38592                           fsr0l	equ	0xFE9
 38593                           wreg	equ	0xFE8
 38594                           indf1	equ	0xFE7
 38595                           postdec1	equ	0xFE5
 38596                           plusw1	equ	0xFE3
 38597                           fsr1h	equ	0xFE2
 38598                           fsr1l	equ	0xFE1
 38599                           bsr	equ	0xFE0
 38600                           indf2	equ	0xFDF
 38601                           postinc2	equ	0xFDE
 38602                           postdec2	equ	0xFDD
 38603                           plusw2	equ	0xFDB
 38604                           fsr2h	equ	0xFDA
 38605                           fsr2l	equ	0xFD9
 38606                           status	equ	0xFD8
 38607                           
 38608                           	psect	temp
 38609  00005F                     btemp:
 38610                           	opt stack 0
 38611  00005F                     	ds	1
 38612  0000                     int$flags	set	btemp
 38613  0000                     wtemp6	set	btemp+1
 38614                           tosu	equ	0xFFF
 38615                           tosh	equ	0xFFE
 38616                           tosl	equ	0xFFD
 38617                           pclatu	equ	0xFFB
 38618                           pclath	equ	0xFFA
 38619                           tblptru	equ	0xFF8
 38620                           tblptrh	equ	0xFF7
 38621                           tblptrl	equ	0xFF6
 38622                           tablat	equ	0xFF5
 38623                           prodh	equ	0xFF4
 38624                           prodl	equ	0xFF3
 38625                           intcon	equ	0xFF2
 38626                           indf0	equ	0xFEF
 38627                           postinc0	equ	0xFEE
 38628                           fsr0h	equ	0xFEA
 38629                           fsr0l	equ	0xFE9
 38630                           wreg	equ	0xFE8
 38631                           indf1	equ	0xFE7
 38632                           postdec1	equ	0xFE5
 38633                           plusw1	equ	0xFE3
 38634                           fsr1h	equ	0xFE2
 38635                           fsr1l	equ	0xFE1
 38636                           bsr	equ	0xFE0
 38637                           indf2	equ	0xFDF
 38638                           postinc2	equ	0xFDE
 38639                           postdec2	equ	0xFDD
 38640                           plusw2	equ	0xFDB
 38641                           fsr2h	equ	0xFDA
 38642                           fsr2l	equ	0xFD9
 38643                           status	equ	0xFD8


Data Sizes:
    Strings     5738
    Constant    260
    Data        43
    BSS         354
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     24     237
    BANK3           256     43     171
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_126(CODE[5]), STR_124(CODE[17]), STR_122(CODE[11]), STR_120(CODE[17]), 
		 -> STR_118(CODE[14]), STR_116(CODE[16]), STR_107(CODE[13]), STR_103(CODE[17]), 
		 -> STR_100(CODE[14]), STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), 
		 -> STR_92(CODE[15]), STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), 
		 -> STR_84(CODE[14]), STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), 
		 -> STR_76(CODE[16]), STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), 
		 -> STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), 
		 -> STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK3[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_146(CODE[7]), printf@c(BANK1[1]), STR_145(CODE[16]), STR_144(CODE[22]), 
		 -> STR_143(CODE[21]), STR_142(CODE[27]), STR_141(CODE[41]), STR_140(CODE[32]), 
		 -> STR_139(CODE[19]), STR_138(CODE[16]), STR_137(CODE[15]), STR_136(CODE[16]), 
		 -> STR_135(CODE[10]), STR_134(CODE[13]), STR_133(CODE[12]), ringBufferLUT@channel_name(BANK3[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2361
		 -> STR_132(CODE[30]), STR_131(CODE[46]), STR_130(CODE[39]), STR_129(CODE[62]), 
		 -> STR_128(CODE[55]), STR_127(CODE[2361]), STR_125(CODE[33]), STR_123(CODE[46]), 
		 -> STR_121(CODE[51]), STR_119(CODE[53]), STR_117(CODE[58]), STR_115(CODE[71]), 
		 -> STR_114(CODE[63]), STR_113(CODE[37]), STR_112(CODE[46]), STR_111(CODE[102]), 
		 -> STR_110(CODE[86]), STR_108(CODE[25]), STR_106(CODE[42]), STR_105(CODE[53]), 
		 -> STR_104(CODE[31]), STR_102(CODE[29]), STR_101(CODE[28]), STR_99(CODE[42]), 
		 -> STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), 
		 -> STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[58]), 
		 -> STR_81(CODE[36]), STR_79(CODE[36]), STR_77(CODE[37]), STR_75(CODE[45]), 
		 -> STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), 
		 -> STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[59]), STR_54(CODE[85]), 
		 -> STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_144(CODE[22]), STR_143(CODE[21]), STR_142(CODE[27]), STR_141(CODE[41]), 
		 -> STR_140(CODE[32]), STR_139(CODE[19]), STR_138(CODE[16]), STR_137(CODE[15]), 
		 -> STR_136(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_135(CODE[10]), STR_134(CODE[13]), STR_133(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_135(CODE[10]), STR_134(CODE[13]), STR_133(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_135(CODE[10]), STR_134(CODE[13]), STR_133(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_145(CODE[16]), STR_144(CODE[22]), STR_143(CODE[21]), STR_142(CODE[27]), 
		 -> STR_141(CODE[41]), STR_140(CODE[32]), STR_139(CODE[19]), STR_138(CODE[16]), 
		 -> STR_137(CODE[15]), STR_136(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  859401
                                             22 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                             ___flge
                    _getCauseOfReset
               _readDoubleFromEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  104246
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  518302
                                            184 BANK1      3     3      0
                                             16 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       47    45      2  517111
                                            180 BANK1      4     2      2
                                              0 BANK3     43    43      0
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeDoubleToEEPROM                                 12     6      6    1895
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     478
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  124443
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  124443
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  104246
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    8186
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1155
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5576
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  104246
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  104246
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19276
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   18781
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11764
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10022
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9226
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    3430
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  196383
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   40465
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   40465
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   ___flge
   _getCauseOfReset
   _readDoubleFromEEPROM
     _DATAEE_ReadByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy
   _writeDoubleToEEPROM
     _DATAEE_WriteByte

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2B      AB      12       66.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100     18      ED      10       92.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37B       8        0.0%
DATA                 0      0     37B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 06 13:59:07 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
                 __end_of_readDoubleFromEEPROM 82BC               __end_of_TMR5_SetInterruptHandler 8C6E  
                                 ___fldiv@sign 0149                                    __CFG_CP$OFF 000000  
                                           l57 8B40                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 8CC4                                             bsr 000FE0  
                          ___wmul@multiplicand 0119                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                 __end_of_heartbeatTimerCallback 86C6  
                                          l381 8534                                            l382 8530  
                                          l391 8468                                            l392 848E  
                                          l384 855E                                            l393 848C  
                                          l388 8452                                            l389 844E  
                                          l789 86F0                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                    i2___fladd@a 005A  
                                  i2___fladd@b 0056                                            _Ipk 01C7  
                                          _Vpk 0250                                            _abs 8976  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString 81B2                                            _sin 515E  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 697E                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                               ??_TMR7_StopTimer 0117  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0164  
                                 ___flmul@sign 0162                                   ___flmul@temp 016D  
                                 ___flmul@prod 0169                                   __CFG_LVP$OFF 000000  
                                 __CFG_ZCD$OFF 000000                                   ___fltol@exp1 0181  
                                         l1010 6754                                           l1100 40E0  
                                         l1012 67C2                                           l1101 4008  
                                         l1102 4116                                           l1110 40C8  
                                         l1103 4020                                           l1104 4038  
                                         l1105 4050                                           l2002 7C46  
                                         l1106 4068                                           l1210 007A  
                                         l2003 7C54                                           l1107 4080  
                                         l1051 6FA6                                           ?_abs 0076  
                                         l2100 4858                                           l2012 80CC  
                                         l1108 4098                                           l1220 0204  
                                         l1212 00CC                                           l2101 4854  
                                         l2013 80DA                                           l1109 40B0  
                                         l1053 6FE4                                           l2110 4920  
                                         l1230 03C8                                           l1222 02A0  
                                         l1214 013A                                           l1054 6FC6  
                                         l2103 48B4                                           l1231 02F0  
                                         l1223 025A                                           l2104 4878  
                                         l2008 80A4                                           l1080 3EA0  
                                         l1240 0458                                           l1232 0308  
                                         l1208 003E                                           l1056 7032  
                                         l2121 4A16                                           l2113 498E  
                                         l2009 8098                                           l1401 3922  
                                         l1321 8170                                           l1081 3DF8  
                                         l1233 0320                                           l1057 7004  
                                         l1330 82C4                                           l2130 4A6A  
                                         l2114 4954                                           l2210 4478  
                                         l1322 817A                                           l1090 3EE2  
                                         l1082 3ECA                                           l1250 05BA  
                                         l1242 04C4                                           l1226 0408  
                                         l1234 0338                                           l1218 01A0  
                                         l2123 4A26                                           l2107 4930  
                                         l1091 3FF0                                           l1083 3E10  
                                         l1243 04A0                                           l1227 03E4  
                                         l1235 0350                                           l1340 82EC  
                                         l1332 82CC                                           l2108 490E  
                                         l2204 43D4                                           l1092 3EFA  
                                         l1084 3E28                                           l1260 0754  
                                         l1252 060C                                           l1228 0398  
                                         l1236 0368                                           l2117 4978  
                                         l2109 491C                                           l1501 1A66  
                                         l1421 1264                                           l1405 0F4C  
                                         l1317 8184                                           l1093 3F12  
                                         l1085 3E40                                           l1237 0380  
                                         l1229 02D8                                           l1342 82F4  
                                         l1334 82D4                                           l2142 4AF6  
                                         l2126 4A4A                                           l2118 497C  
                                         l2206 4418                                           l1502 19E2  
                                         l1430 1134                                           l1414 0FD6  
                                         l1406 0F5E                                           l1318 8166  
                                         l1094 3F2A                                           l1086 3E58  
                                         l1270 08E0                                           l1262 07A6  
                                         l1254 065E                                           l1246 0516  
                                         l2143 4AFE                                           l2135 4A8A  
                                         l2303 693A                                           l2207 4436  
                                         l1431 115C                                           l1095 3F42  
                                         l1087 3E70                                           l1271 08BC  
                                         l1336 82DC                                           l2144 4B00  
                                         l2128 4A60                                           l2304 696C  
                                         l1520 1B30                                           l1512 1A98  
                                         l1440 11DE                                           l1432 116C  
                                         l1424 112C                                           l1416 111E  
                                         l1408 0F7A                                           l2152 5A18  
                                         l1096 3F5A                                           l1088 3E88  
                                         l1360 835C                                           l1280 09BA  
                                         l1264 07EA                                           l1256 06B0  
                                         l1248 0568                                           l2209 445A  
                                         l1521 1B68                                           l1425 12D2  
                                         l1433 1166                                           l1417 10F2  
                                         l1409 0F72                                           l2161 5AC6  
                                         l2153 5A14                                           l1089 3FBA  
                                         l1097 3F72                                           l1338 82E4  
                                         l2138 4AD0                                           l1522 1B4E  
                                         l1514 1AB8                                           l1450 1334  
                                         l1442 1224                                           l1418 109E  
                                         l2170 5B8A                                           l2162 5B74  
                                         l2234 840C                                           l1098 3F8A  
                                         l1290 0C8E                                           l1282 0C3C  
                                         l1274 0972                                           l1266 082E  
                                         l1258 0702                                           l1531 1CBC  
                                         l1515 1ADA                                           l1507 1A7C  
                                         l1443 11F8                                           l2163 5B24  
                                         l1363 827A                                           l2243 836A  
                                         l2251 87C8                                           l2235 8406  
                                         l1099 3FA2                                           l1283 09F4  
                                         l1275 0928                                           l1508 1A24  
                                         l1460 1516                                           l1452 13A2  
                                         l1436 11BE                                           l1428 1130  
                                         l2180 5C72                                           l2164 5B4C  
                                         l2156 5A58                                           l1364 82AA  
                                         l2244 8360                                           l2252 87BE  
                                         l2340 7AAC                                           l1292 0CE0  
                                         l1268 0876                                           l1533 1C9E  
                                         l1517 1AFC                                           l1453 1422  
                                         l1445 1238                                           l1437 11D4  
                                         l2181 5C7E                                           l2157 5A54  
                                         l1349 88E0                                           l2333 8798  
                                         l2237 8426                                           l1285 0AB0  
                                         l1277 094E                                           l2190 41AE  
                                         l1534 1BA2                                           l1518 1B04  
                                         l1470 1666                                           l1446 124C  
                                         l2182 5C80                                           l2166 5B72  
                                         l2238 841C                                           l1294 0D60  
                                         l2095 4810                                           l2191 41AA  
                                         l1391 5990                                           l1519 1B28  
                                         l1471 1680                                           l1455 1450  
                                         l1447 125E                                           l1439 11E4  
                                         l2159 5A9E                                           l2096 480C  
                                         l2192 41BE                                           l1536 1CB6  
                                         l1448 1954                                           l1456 149A  
                                         l2176 5BE0                                           l2280 7AD2  
                                         l2264 8026                                           l1296 0DE0  
                                         l2193 41DC                                           l1537 1C26  
                                         l1457 157C                                           l1449 12E6  
                                         l2169 5BA8                                           l2257 8222  
                                         l2281 7B0E                                           l2265 8056  
                                         l2290 689A                                           l1810 6D72  
                                         l2186 416E                                           l1394 3708  
                                         l1490 17E6                                           l1482 178C  
                                         l1474 16AE                                           l1466 15F4  
                                         l2178 5C24                                           l2258 821C  
                                         l2338 7AB4                                           l1298 0E7E  
                                         l1811 6DB4                                           l2187 416A  
                                         l1395 3610                                           l1491 1930  
                                         l1483 16F8                                           l1475 16A0  
                                         l2179 5C48                                           l2339 7A42  
                                         l2267 8072                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l2292 68AC                                           l1820 6E46  
                                         l1812 6DE4                                           l2188 417E  
                                         l1388 58A0                                           l1492 1848  
                                         l2268 8062                                           l2293 68A0  
                                         l1821 6E3A                                           l2197 439C  
                                         l1485 17A6                                           l1814 6E22  
                                         l2198 437E                                           l1398 36D6  
                                         l1494 194A                                           l1486 1798  
                                         l1478 16CE                                           l2295 68EA  
                                         l1815 6E12                                           l1399 385C  
                                         l1495 193C                                           l1479 16C0  
                                         l1751 7754                                           l2279 7B3A  
                                         l1832 8908                                           l2296 68D2  
                                         l2288 686C                                           l1808 6D54  
                                         l1912 6AFC                                           l1488 17CA  
                                         l1752 7716                                           l1825 70E0  
                                         l2289 687C                                           l1497 19A4  
                                         l1489 17CE                                           l1745 76C2  
                                         l1826 7114                                           l2298 691C  
                                         l1914 6B28                                           l1754 7788  
                                         l1746 76BC                                           l1827 7152  
                                         l2299 6910                                           l1915 6B62  
                                         l1771 7BC0                                           l1499 19C8  
                                         l1828 7190                                           l1924 6BEA  
                                         l1916 6B8A                                           l1772 7BCA  
                                         l1764 7B72                                           l1780 7E9A  
                                         l1748 7704                                           l1925 6BDE  
                                         l1773 7BD8                                           l1765 7B82  
                                         l1781 7E92                                           l1918 6BC6  
                         _ADCC_StartConversion 8C98                                           l1863 75AE  
                                         l1855 751E                                           l1919 6BB6  
                                         l1767 7BA0                                           l1864 75A2  
                                         l1768 7B98                                           l1784 7EB2  
                                         l1857 758A                                           l1785 7EBC  
                                         l1777 7E78                                           l1866 75CA  
                                         l1858 757A                                           l1786 7ECA  
                                         l1778 7E84                                           l1972 8AC8  
                                         l1998 7C12                                           l1999 7C06  
                                         ?_sin 0088                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC5                                           STR_2 FFB0  
                                         STR_3 FFB9                                           STR_4 F2CE  
                                         STR_6 FFB0                                           STR_7 FFB9  
                                         STR_9 FFBD                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 019D  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _PLLR 007230  
                                         _TMR6 000FAF                            _writeDoubleToEEPROM 830E  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                                   i2___flge@ff1 0034  
                                 i2___flge@ff2 0038                                           _Irms 00F6  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 8448  
              ??_ADCC_HasAccumulatorOverflowed 0001                                           _Vrms 01BF  
                                         abs@a 0076                                           _acos 7F44  
                                         _fabs 8740                 ringBufferLUT@max_current_print 039A  
                                         _atan 6448                                           _asin 4E5A  
                                         _atoi 76BA                                           _main 667E  
                                         _line 0270                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 5458  
                                 i2___flneg@f1 002C                  __end_of_ADCC_ClearAccumulator 8CE6  
                                         sin@f 0088                                           sin@y 008C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 01D7  
                                 i2___fltol@f1 006C                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 3DD4                   __end_of_EUSART2_Transmit_ISR 8820  
                              __end_ofi2_putch 8CBC                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
              readDoubleFromEEPROM@output_data 011D                       __size_ofi2_EUSART2_Write 004A  
                                        ??_abs 0078                      __size_of_DATAEE_WriteByte 003E  
                              _timer7ReloadVal 01D9                                          ??_sin 005E  
                         ?_writeDoubleToEEPROM 011B                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0124                               __end_of_HLVD_ISR 8CD4  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 8B46  
                     ?_terminal_textAttributes 01B2                              ??_TMR7_WriteTimer 0102  
                                        l18314 11DE                                          l17452 71C8  
                                        ?_acos 00A9                                          l18414 15F8  
                                        l18318 11F8                                          l18440 16A0  
                                        ?_fabs 0030                                          l18612 1C9E  
                                        l18524 19E6                                          l19092 5C72  
                                        l19332 0A60                                          l19316 09E4  
                                        l18446 16C0                                          l19334 0AB0  
                                        l19326 0A2A                                          l19166 024A  
                                        l18464 1798                                          l19600 819E  
                                        l18640 8062                                          l19176 029A  
                                        l19424 6F96                                          l18538 1A28  
                                        l18394 14E8                                          l18386 149A  
                                        l19602 81A8                                          l19434 6FBC  
                                        l18780 7A42                                          l18828 8328  
                                ___fltol@sign1 0180                                          l18964 7750  
                                        ?_atan 007C                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 4B1C                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 5C9C  
                                        _ADREF 000F58                                __end_of___awdiv 7BE2  
                              __end_of___flneg 891A                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FD24                                          STR_21 FFCC  
                                        STR_30 FF42                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 F597                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FE0F                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FDB0  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF67  
                                        STR_52 F8EE                                __end_of___awmod 7ED4  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF51                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FCE2                                          STR_54 F4FE  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FF12                                          STR_71 FE65  
                                        STR_47 FE45                                          STR_64 FEE9  
                                        STR_80 FD8D                                          STR_72 FD3B  
                                        STR_48 F857                                          STR_56 F699  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF72                                          STR_65 FEF7  
                                        STR_73 FDD2                                          STR_81 FB38  
                                        STR_82 FF1F                                          STR_66 FEB1  
                                        STR_90 FD50                                          STR_58 F5DC  
                                        STR_74 F59A                                          STR_67 FD10  
                                        STR_91 FBA2                                          STR_75 F9A7  
                                        STR_59 F7B7                                          STR_83 F70E  
                                        STR_68 FF7C                                          STR_84 FEBF  
                                        STR_92 FE93                                          STR_76 FE25  
                                        STR_77 FAEE                                          STR_85 FAC9  
                                        STR_69 F8BE                                          STR_93 F748  
                                        STR_94 FEA2                                          STR_78 FE84  
                                        STR_86 FC96                                          STR_87 FBE5  
                                        STR_79 FB5C                                          STR_95 FA7A  
                                        STR_96 FE55                                          STR_88 FD65  
                              __end_of___flmul 448E                                          STR_89 FB80  
                                        STR_97 FA51                                          STR_98 FF45  
                                        STR_99 F9D4                                __end_of___flsub 85B8  
                              __end_of___fltol 75DC                                __end_of___lldiv 7C66  
                                        ?_sqrt 006C                                ___awdiv@divisor 011F  
                              __end_of___llmod 80EC                                          u23100 48E4  
                                        u23110 48F4                                          u23120 48F6  
                                        u24100 7C16                                          u23310 4A86  
                                        u23150 4938                                          u24030 753C  
                                        _T5CLK 000FC6                                          u25000 1CCE  
                                        u24130 80A8                                          u24210 6926  
                                        u25010 1CFE                                          u24035 7532  
                                        u24300 105C                                          u25100 8244  
                                        u24070 75B4                                          u24310 1064  
                                        u23360 4ADC                                          u23280 4A6E  
                                        u24320 1086                                          _T5CON 000FC3  
                                        u25017 1CF4                                          u23530 43D0  
                                        u25130 7A74                                          u24307 1052  
                                        u25107 823A                                          u23620 7BA4  
                                        u24340 10D6                                          u24260 0F9C  
                                        u25220 83A2                                          u23470 41CA  
                                        u24350 1114                                          u24270 0FC4  
                                        u24327 107C                                          _T7CLK 000F33  
                                        u23560 4426                                          u23480 4340  
                                        u24440 121A                                          _T6CON 000FB1  
                                        u23801 6AE0                                          u25241 815C  
                                        u23570 4444                                          u24290 1020  
                                        u24347 10CC                                          u24267 0F92  
                                        u24620 1636                                          u24540 1460  
                                        u24460 1294                                          u24380 119A  
                                        u25180 82AA                                          u23821 6B0C  
                                        u23485 4336                                          u24357 110A  
                                        u24277 0FBA                                          u24710 17B4  
                                        u24550 14AC                                          u24390 11A0  
                                        u26150 6FBC                                 __CFG_DEBUG$OFF 000000  
                                        u24447 1210                                          u25255 8730  
                                        u25095 8700                                          u23680 7E9E  
                                        u24720 17C4                                          u25096 8702  
                                        _T7CON 000F30                                          u24297 1016  
                                        u25530 5BDC                                          u25290 7B52  
                                        u24467 128A                                          u24387 1190  
                                        u24580 14E8                                          u25700 029A  
                                        u23950 6E4C                                          u26407 6692  
                                        u23880 6BF0                                          u24680 16DC  
                                        u25560 5C32                                          u25570 5C56  
                                        u25650 010A                                          _T6HLT 000FB2  
                   _ADCC_ADTI_InterruptHandler 0262                                          u24970 1B70  
                                        u24980 1B86                                          u25970 0A2A  
                                        u25980 0A52                                          u25990 0A60  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 881A                                          i1l227 00A8  
                                        i1l404 8816                                          i1l229 00B2  
                                        i2l212 77FC                                          i2l214 7808  
                                        i2l216 7812                                          i1l640 8A56  
                                        i2l410 788E                                          i2l411 78B0  
                                        i2l414 78B4                                          i2l416 7904  
                                        i2l409 786A                                          _T6TMR 000FAF  
                                        i2l391 84FC                                          i2l392 8522  
                                        i2l393 8520                                          i2l714 8B58  
                                        _T6RST 000FB4                                          i2l388 84E6  
                                        i2l389 84E2                                          i1l965 86C2  
                                        i2l970 2ADC                                          i2l971 2B66  
                                        i2l980 2C80                                ___awdiv@counter 0121  
                                        i2l981 2D3E                                          i2l991 319A  
                                        i2l984 2D46                                          i2l976 2B6E  
                                        i2l969 3480                                          i2l985 303C  
                                        i2l977 2C78                                          i2l994 31A2  
                                        i2l986 2F8A                                          i2l995 3284  
                                        i2l987 2EA2                                          i2l989 2FE2  
                                        i2l998 328C                                          i2l999 346A  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 6E5E  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a E971                             __end_ofsin@coeff_b E995  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01C3  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 8888                               __end_of_TMR6_ISR 89F0  
                             __end_of_TMR7_ISR 8854                                _DATAEE_ReadByte 8B62  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01B8                                __end_of_dpowers E921  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 72EC  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 7DE8  
                                        _errno 026E                          ?_ADCC_StartConversion 0001  
                                        _scale 34B0                                __end_of_isdigit 8AD0  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 8C36                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 72EC                                          sin@x2 0094  
                                        tablat 000FF5                               __end_ofi2___wmul 8A8A  
                                        plusw1 000FE3                                          plusw2 000FDB  
                               ??_EUSART2_Read 0117                   __size_of_ADCC_GetFilterValue 0014  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 7AD0                                __end_of_strncpy 8084  
                             __end_ofi2_fround 61FE                 ?_INTERRUPT_InterruptManagerLow 0001  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                                  i2printf@width 00AB  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf 2AD0  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 8C7C         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 8C6E                                _TMR5_Initialize 8494  
                              __initialization 79AE                              i2___lldiv@divisor 0005  
                                 __end_of_acos 7FB2                                   __end_of_fabs 877C  
                                 __end_of_atan 667E                                   __end_of_asin 515E  
                                 __end_of_atoi 7792                                   __end_of_main 682A  
                            i2___lldiv@counter 000D                               _max_Irms_address E943  
                                 __end_of_sqrt 5720                                     i2printf@ap 0099  
                                   i2printf@cp 0095                          ??_writeDoubleToEEPROM 0121  
                        __end_of_ringBufferLUT 0F3E                                 __CFG_SCANE$OFF 000000  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                                         ??_acos 005E  
                                       ??_fabs 0034                                         ??_atan 005E  
                                       ??_asin 005E                                         ??_atoi 011F  
                                       ??_main 02EA                       _TMR5_SetInterruptHandler 8C60  
                                       ??_sqrt 0070                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                                  ?i2___xxtofl 0005                         getUserID@initialOffset 0125  
                              _TMR6_Initialize 8888                             _TRIAC_Firing_Angle 00F2  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 801C                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01E1  
                                       ?_floor 0076                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 016F                                         STR_100 FECD  
                                       _ADLTHL 000F6A                                         STR_101 FC5F  
                                       STR_102 FC42                                         STR_110 F4A8  
                                       STR_103 FDC1                                         STR_111 F442  
                                       STR_120 FDE3                                         STR_104 FC05  
                                       STR_112 F94B                                         STR_113 FB13  
                                       STR_121 F88B                                         STR_105 F7ED  
                                       STR_122 FF5C                                         STR_130 FAA2  
                                       STR_106 F9FE                                         STR_114 F61C  
                                       _ADRESH 000F64                                         STR_107 FF2C  
                                       STR_123 F979                                         STR_131 F91D  
                                       STR_115 F553                                         STR_116 FE35  
                                       STR_124 FDF4                                         STR_108 FCB0  
                                       STR_132 FC24                                         STR_140 FA31  
                                       STR_109 FCC9                                         STR_125 FBC4  
                                       STR_117 F6D4                                         STR_133 FF39  
                                       STR_141 FA28                                         STR_126 FFAB  
                                       STR_118 FEDB                                         _ADRESL 000F63  
                                       STR_134 FF05                                         STR_142 FC7B  
                                       STR_119 F822                                         STR_127 E995  
                                       STR_135 FF7C                                         STR_143 FD26  
                                       STR_128 F780                                         STR_144 FCFA  
                                       STR_136 FE05                                         STR_145 FE05  
                                       STR_129 F65B                                         STR_137 FE75  
                                       STR_146 FF86                                         STR_138 FE15  
                                       STR_147 FD9F                                         STR_139 FD7A  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                           _readDoubleFromEEPROM 826A  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1002 3472                                         i2l2002 7D4C  
                                       i2l2003 7D5A                                         i2l2100 4B96  
                                       i2l2012 8132                                         i2l2101 4B92  
                                       i2l2013 8140                                         i2l2110 4C5E  
                                       i2l2103 4BF2                                         i2l2104 4BB6  
                                       i2l2008 810A                                         i2l2121 4D54  
                                       i2l2113 4CCC                                         i2l2009 80FE  
                                       i2l1401 3DA4                                         i2l2130 4DA8  
                                       i2l2114 4C92                                         i2l2210 47C8  
                                       i2l2123 4D64                                         i2l2107 4C6E  
                                       i2l2108 4C4C                                         i2l2204 4724  
                                       i2l2220 54C4                                         i2l2117 4CB6  
                                       i2l2109 4C5A                                         i2l1501 282C  
                                       i2l1421 202E                                         i2l1405 1D1A  
                                       i2l2142 4E34                                         i2l2126 4D88  
                                       i2l2118 4CBA                                         i2l2206 4768  
                                       i2l2310 7324                                         i2l2230 56E6  
                                       i2l2222 54FE                                         i2l1502 27A8  
                                       i2l1430 1EFE                                         i2l1414 1DA4  
                                       i2l1406 1D2C                                         i2l2143 4E3C  
                                       i2l2135 4DC8                                         i2l2207 4786  
                                       i2l2303 6A8A                                         i2l2223 552A  
                                       i2l1431 1F26                                         i2l2144 4E3E  
                                       i2l2128 4D9E                                         i2l2304 6ABC  
                                       i2l2312 7354                                         i2l2152 5CCC  
                                       i2l2224 5588                                         i2l1520 28F6  
                                       i2l1512 285E                                         i2l1440 1FA8  
                                       i2l1432 1F36                                         i2l1424 1EF6  
                                       i2l1416 1EE8                                         i2l1408 1D48  
                                       i2l2209 47AA                                         i2l2313 73EC  
                                       i2l2161 5D7A                                         i2l2153 5CC8  
                                       i2l2225 5632                                         i2l2217 549A  
                                       i2l1521 292E                                         i2l1425 209C  
                                       i2l1433 1F30                                         i2l1417 1EBC  
                                       i2l1409 1D40                                         i2l2138 4E0E  
                                       i2l2170 5E3E                                         i2l2162 5E28  
                                       i2l2090 5446                                         i2l2226 558E  
                                       i2l1522 2914                                         i2l1514 287E  
                                       i2l1450 20FE                                         i2l1442 1FEE  
                                       i2l1418 1E6A                                         i2l2163 5DD8  
                                       i2l2227 55D4                                         i2l2219 54AA  
                                       i2l1531 2A80                                         i2l1515 28A0  
                                       i2l1507 2842                                         i2l1443 1FC2  
                                       i2l2180 5F26                                         i2l2164 5E00  
                                       i2l2156 5D0C                                         i2l2228 55FC  
                                       i2l1508 27EA                                         i2l1460 22DE  
                                       i2l1452 216A                                         i2l1436 1F88  
                                       i2l1428 1EFA                                         i2l2309 7336  
                                       i2l2181 5F32                                         i2l2157 5D08  
                                       i2l1533 2A62                                         i2l1517 28C2  
                                       i2l1453 21E8                                         i2l1445 2002  
                                       i2l1437 1F9E                                         i2l2190 44FE  
                                       i2l2318 7E06                                         i2l2182 5F34  
                                       i2l2166 5E26                                         i2l1710 6640  
                                       i2l1534 2968                                         i2l1518 28CA  
                                       i2l1470 2430                                         i2l1446 2016  
                                       i2l2095 4B4E                                         i2l2191 44FA  
                                       i2l2159 5D52                                         i2l2087 5192  
                                       i2l1391 61AA                                         i2l1519 28EE  
                                       i2l1471 244A                                         i2l1455 2216  
                                       i2l1447 2028                                         i2l1439 1FAE  
                                       i2l2096 4B4A                                         i2l2192 450E  
                                       i2l2176 5E94                                         i2l2088 52B0  
                                       i2l1712 6658                                         i2l1536 2A7A  
                                       i2l1448 271A                                         i2l1456 2262  
                                       i2l2193 452C                                         i2l2169 5E5C  
                                       i2l2089 5320                                         i2l1537 29EA  
                                       i2l1457 2346                                         i2l1449 20B0  
                                       i2l2186 44BE                                         i2l2290 69EA  
                                       i2l2178 5ED8                                         i2l1810 6E9A  
                                       i2l1394 3B98                                         i2l1490 25AE  
                                       i2l1482 2554                                         i2l1474 2478  
                                       i2l1466 23BE                                         i2l2187 44BA  
                                       i2l2179 5EFC                                         i2l1707 648C  
                                       i2l1811 6EDC                                         i2l1395 3AA8  
                                       i2l1491 26F6                                         i2l1483 24C2  
                                       i2l1475 246A                                         i2l2188 44CE  
                                       i2l2292 69FC                                         i2l1804 876A  
                                       i2l1820 6F6E                                         i2l1812 6F0C  
                                       i2l1388 60C2                                         i2l1492 2610  
                                       i2l2197 46EC                                         i2l2293 69F0  
                                       i2l1709 64F8                                         i2l1821 6F62  
                                       i2l1485 256E                                         i2l1590 8996  
                                       i2l2198 46CE                                         i2l1814 6F4A  
                                       i2l1398 3B68                                         i2l1494 2710  
                                       i2l1486 2560                                         i2l1478 2498  
                                       i2l2295 6A3A                                         i2l1815 6F3A  
                                       i2l1399 3CE4                                         i2l1495 2702  
                                       i2l1479 248A                                         i2l2296 6A22  
                                       i2l2288 69BC                                         i2l1832 8964  
                                       i2l1808 6E7C                                         i2l1912 6C2E  
                                       i2l1488 2592                                         i2l1825 7200  
                                       i2l2289 69CC                                         i2l1497 276A  
                                       i2l1489 2596                                         i2l1826 7234  
                                       i2l2298 6A6C                                         i2l1690 4FDC  
                                       i2l1914 6C5A                                         i2l1827 7272  
                                       i2l2299 6A60                                         i2l1691 50BC  
                                       i2l1915 6C94                                         i2l1771 7CC8  
                                       i2l1499 278E                                         i2l1828 72B0  
                                       i2l1924 6D1C                                         i2l1916 6CBC  
                                       i2l1772 7CD2                                         i2l1764 7C7A  
                                       i2l1780 7F0A                                         i2l1925 6D10  
                                       i2l1773 7CE0                                         i2l1765 7C8A  
                                       i2l1781 7F02                                         i2l1918 6CF8  
                                       i2l1863 768C                                         i2l1855 75FC  
                                       i2l1919 6CE8                                         i2l1767 7CA8  
                                       i2l1864 7680                                         i2l1688 4EB4  
                                       i2l1768 7CA0                                         i2l1784 7F22  
                                       i2l1857 7668                                         i2l1785 7F2C  
                                       i2l1777 7EE8                                         i2l1866 76A8  
                                       i2l1858 7658                                         i2l1786 7F3A  
                                       i2l1778 7EF4                                         i2l1972 8B06  
                                       i2l1798 74E2                                         i2l1799 744A  
                                       i2l1998 7D18                                         i2l1999 7D0C  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                             __end_of___xxtofl 697E          __end_of_ADCC_DischargeSampleCapacitor 8CCC  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor 8CC4  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               i2___fladd@aexp 0069                                 i2___fladd@bexp 006A  
        __end_of_ADCC_HasAccumulatorOverflowed 8CB2         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed 8CA6                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 83AE                                   i2_scale$4145 004D  
                             __end_of__powers_ E8C5                __end_of_terminal_ringBufferPull 70AA  
                                       ___flge 70AA                              _ADCC_ThresholdISR 89F0  
                                    ??___fladd 0131                                         ___wmul 89A0  
                                    ??___fldiv 0145                                      ??___awdiv 0121  
                                    ??___flneg 0129                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___flmul 015E  
                                    ??___flsub 0145                                      ??___fltol 017C  
                                    ??___lldiv 011F                                      ??___llmod 012C  
                           ?_ADCC_ThresholdISR 0001                       ??_terminal_setCursorHome 01B2  
                                       _fround 5720                                         clear_0 7A06  
                                       clear_1 7A12                                         clear_2 7A1E  
                         _eusart2RxStringReady 07D8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                              ___awmod@counter 011B                                         _printf 0F3E  
                                       _strcat 83FC                                         _strchr 877C  
                      __end_of_DATAEE_ReadByte 8B7C                                         _strcmp 835E  
                                       _strcpy 87B4                                         _strlen 8212  
                               i2___awdiv@sign 000C                                         _strstr 7AD0  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02B0                               _background_color 01DC  
                              _ADCC_Initialize 81B2                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 2AD0                                 _PMD_Initialize 8B0E  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 4E5A  
                                    ??_isdigit 0117                              __end_ofi2___fldiv 5F50  
                            __end_ofi2___awdiv 7CEA                              __end_ofi2___flneg 8976  
                            __end_ofi2___awmod 7F44                              __end_ofi2___flmul 47DE  
                            __end_ofi2___flsub 8600                              __end_ofi2___fltol 76BA  
                            __end_ofi2___lldiv 7D6C                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod 8152  
                                 __mediumconst E890                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion 8CEC                           _EUSART2_Transmit_ISR 87EA  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                        ?_readDoubleFromEEPROM 0119                                 i2___flmul@aexp 003D  
                               i2___flmul@bexp 0042                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 01B2  
                               i2___flmul@sign 003C                                 i2___flmul@temp 0047  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 0014  
                              _eusart2RxBuffer 0200                                     ___flge@ff1 0117  
                                   ___flge@ff2 011B                        __end_of_TMR5_Initialize 84DE  
                                 ___xxtofl@arg 0121                              __end_ofi2_isdigit 8B0E  
                                 ___xxtofl@exp 0120                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00DE                              _SYSTEM_Initialize 891A  
                                 ___xxtofl@val 0117           __end_of_TMR7_DefaultInterruptHandler 8CF2  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 8CF0  
                              _eusart2TxBuffer 0300                                     __accesstop 0060  
                      __end_of__initialization 7A36                                 i2___fltol@exp1 0075  
                                   ___flneg@f1 0125                                      ?_HLVD_ISR 0001  
                               i2printf@tmpval 009B                             ?_SYSTEM_Initialize 0001  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
                                   ___fltol@f1 0178                                _TMR5_WriteTimer 8B46  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 000E                      __end_of_ADCC_ThresholdISR 8A18  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000A              terminal_ringBufferPull@charNumber 02E4  
                          __size_ofi2___xxtofl 0150                     __end_of_getMajorRevisionID 8740  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 01B2                                   __pidataBANK0 8CD4  
                                 __pidataBANK1 8CF8                                   __pidataBANK2 8A8A  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte 86C6                                  __end_of_floor 73FE  
                                __end_of_frexp 7E62                                  __end_of_scale 3954  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 8C44  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01B2                                    i2printf@len 0097  
                                  i2printf@exp 009F                                    i2printf@val 00A1  
                      __end_of_TMR6_Initialize 88BA                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 8B2A                          _getCauseOfResetString 88BA  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 8570  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 6C02  
                                   __div_to_l_ 6D34                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 8948  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E3  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01BB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01E0                                  _eusart2TxTail 01E2  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 83FC  
                           __size_of_peakToRMS 024A                                     ??_HLVD_ISR 0100  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 8A3E                          ??_ADCC_StopConversion 0001  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4130 00C1  
                               _peakToRMS$4131 00B9                                 _peakToRMS$4132 00BD  
                        ringBufferLUT@arg_buff 03A2                                    _Irms_offset 02C8  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2412 02E6                                        ?___wmul 0117  
                        _currentMeasuredToPeak 7D6C                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 8C60                        __end_of_ADCC_Initialize 8212  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 039E                                        ?_fround 016F  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler 8C98          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler 8C8A                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0182                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue 8BAA                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 8B7C                                        ?_strstr 0126  
                             ?_DATAEE_ReadByte 0117                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 8644                                        i2l11060 72E8  
                                      u1726_41 6C12                                        u1728_41 6C3E  
                                      i2l14802 27AC                                        i2l11988 5F26  
                                      i2l14724 248A                                        i2l14742 2560  
                                      i2l14718 246A                                        i2l14816 27EE  
                                      i2l14672 22B0                                        i2l14664 2262  
                                      i2l14592 1FA8                                        i2l14692 23C2  
                                      i2l14596 1FC2                                        i2l14890 2A62  
              writeDoubleToEEPROM@input_double 011B                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 790C  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 008A  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                       ??_readDoubleFromEEPROM 011D                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                       _acquisitionTimerCallback 8BE4  
                     __end_of_max_Irms_address E945                        __end_of_TMR5_WriteTimer 8B62  
             __size_of_terminal_textAttributes 0368                                        i2_scale 3954  
                             ?_TMR5_Initialize 0001                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch 8CB2  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset 8BE4  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 8BD2  
                            __end_of__npowers_ E8F9                                        __Hparam 0000  
                   __size_of_ADCC_ThresholdISR 0028                                     _scale$3942 0173  
                                      __Lparam 0000                              __end_of_getUserID 8644  
                        _ADCC_ClearAccumulator 8CE0                     ??_TMR5_SetInterruptHandler 011A  
                               _adc_error_flag 02F0                                __size_of___flge 0122  
                                      ___fladd 47DE                                        ___fldiv 59E6  
                                      ___awdiv 7B5C                                        ___flneg 88EA  
                                      ___awmod 7E62                                        ___flmul 413C  
                                      ___flsub 8570                                        ___fltol 74FE  
                                      ___lldiv 7BE2                                __size_of___wmul 0028  
                                      ___llmod 8084                         __end_of_FLASH_ReadByte 8B96  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 8686  
                                      __pcinit 79AE                              __end_of_eval_poly 74FE  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 667E                 readDoubleFromEEPROM@byte_index 0121  
                                      __ptext1 8BF6                                        __ptext2 6F86  
                                      __ptext3 0000                                        __ptext4 830E  
                                      __ptext5 86C6                                        __ptext6 8BD2  
                                      __ptext7 3DD4                                        __ptext8 801C  
                                      __ptext9 83FC                              __end_of_peakToRMS 6448  
                              __size_of_printf 0DCE                  currentMeasuredToPeak@Measured 0099  
                   ringBufferLUT@angle_degrees 0396                  ?_ADCC_SetADTIInterruptHandler 0117  
                              __size_of_strcat 004C                                  i2_fround$4143 0051  
                                i2_fround$4144 004D                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers E941  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers E8F9  
                        _OSCILLATOR_Initialize 8B2A                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit 8AAE                                atan@val_squared 0089  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                   ??___xxtofl 011B                               ___awmod@dividend 0117  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 03A7  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 002E  
                        i2EUSART2_Write@txData 0001                                        _strncmp 7A40  
                               __pintcode_body 7792                                        _strncpy 801C  
                         end_of_initialization 7A36                        __end_of_TMR7_WriteTimer 8A64  
                      getDeviceIDString@F17550 02C2                         _terminal_setCursorHome 8BF6  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                      i1u1105_20 8692  
                                    i1u1106_28 8696                                        int_func 7792  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u2611_28 89DC                                      i1u2613_28 8840  
                                    i1u2630_28 0086                        __size_of_TMR7_StopTimer 0006  
                                    i2u1311_40 4C76                                      i2u1306_40 4C22  
                                    i2u1307_40 4C32                                 i2___xxtofl@arg 000F  
                                    i2u1332_40 4E1A                                      i2u1324_40 4DAC  
                                    i2u1308_40 4C34                                      i2u1327_40 4DC4  
                                    i2u1343_40 451A                                 i2___xxtofl@exp 000E  
                                    i2u1352_40 4776                                      i2u1344_40 4690  
                                    i2u1344_45 4686                                      i2u1353_40 4794  
                               i2___xxtofl@val 0005                                      i2u1530_40 7E2E  
                                    i2u1530_48 7E30                                      i2u1532_40 761A  
                                    i2u1452_40 5E90                                      i2u1532_45 7610  
                                    i2u1349_40 4720                                      i2u1455_40 5EE6  
                                    i2u1536_40 7692                                      i2u1544_40 6A76  
                                    i2u1456_40 5F0A                                      i2u1642_40 52AC  
                                    i2u1643_40 52AE                                      i2u1811_40 1DEC  
                                    i2u1811_47 1DE2                                      i2u1636_40 7342  
                                    i2u1820_40 1F64                                      i2u1812_40 1E28  
                                    i2u1820_47 1F5A                                      i2u1812_47 1E1E  
                                    i2u1741_40 810E                                      i2u1725_40 6F74  
                                    i2u1821_40 1F6A                                      i2u1813_40 1E30  
                                    i2u1750_40 2C6A                                      i2u1734_40 6D22  
                                    i2u1814_40 1E52                                      i2u2621_48 77E6  
                                    i2u1814_47 1E48                                      i2u1495_40 64B8  
                                    i2u1496_40 64BA                                      i2u1752_40 2D30  
                                    i2u1840_40 22B0                                      i2u1816_40 1EA0  
                                    i2u1808_40 1D6A                                      i2u2607_48 8874  
                                    i2u1816_47 1E96                                      i2u1808_47 1D60  
                                    i2u1761_40 345C                                      i2u1665_40 7F0E  
                                    i2u1817_40 1EDE                                      i2u1809_40 1D92  
                                    i2u1817_47 1ED4                                      i2u1809_47 1D88  
                                    i2u2609_48 8A04                                      i2u1738_40 7D1C  
                                    i2u1850_40 24A6                                      i2u1826_40 1FE4  
                                    i2u1826_47 1FDA                                      i2u1747_40 2B58  
                                    i2u1659_40 7CAC                                      i2u1668_40 8CAE  
                                    i2u1844_40 2400                                      i2u1836_40 2228  
                                    i2u1828_40 205E                                      i2u1828_47 2054  
                                    i2u1757_40 318C                                      i2u1853_40 257C  
                                    i2u1837_40 2274                                      i2u1854_40 258C  
                                    i2u1759_40 3276                                      i2u1880_40 294C  
                                    i2u1882_40 2A92                                ___lldiv@divisor 011B  
                                    i2u1883_40 2AC2                                      i2u1883_47 2AB8  
                  __end_of_writeDoubleToEEPROM 835E                                      i2u1879_40 2936  
                                    i2u1896_40 78A4                                ___lldiv@counter 011F  
                           _EUSART2_Initialize 7FB2                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 84DE                                  ??_getDeviceID 0124  
                                      printf@c 01B1                                        printf@f 0182  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 6ACE  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
               _ADCPostProcessingCallback$4133 00D6                 _ADCPostProcessingCallback$4134 00DA  
               _ADCPostProcessingCallback$4135 00C9                 _ADCPostProcessingCallback$4136 00CD  
               _ADCPostProcessingCallback$4137 00D1                               ?_ADCC_Initialize 0001  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 02E8  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 8C52                          _TMR5_InterruptHandler 025C  
                             i2_TMR7_StopTimer 8CE6                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 011F                                    ___fldiv@grs 0150  
                                  ___fldiv@rem 014A                                i2___fltol@sign1 0074  
                                    i2___fladd 4B1C                                      i2___fldiv 5C9C  
                                    i2___awdiv 7C66                                      i2___flneg 8948  
                                    i2___awmod 7ED4                               __CFG_FEXTOSC$ECH 000000  
                                    i2___flmul 448E                                      i2___flsub 85B8  
                                    i2___fltol 75DC                                      i2___lldiv 7CEA  
                                    i2___llmod 80EC                       __end_of_DATAEE_WriteByte 8704  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 8C16                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 0F3E                                    ___flmul@grs 0165  
                                  printf@width 01AD                                   _EUSART2_Read 8528  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 8C26  
                           i2___awdiv@dividend 0007                         ?_ADCC_ClearAccumulator 0001  
                                    i2_isdigit 8AF0                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0008                                      _Avg_Power 01BB  
                 __end_of_INTERRUPT_Initialize 8BAA                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___flge 71CC  
                __end_of_terminal_printNewline 8C16                                 __end_of___wmul 89C8  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07D8                            __end_of_getDeviceID 8AF0  
                               __end_of_fround 59E6              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 007E  
                             i2___wmul@product 0005                                 __end_of_printf 1D0C  
                                i2_printf$4146 0090                             _getMajorRevisionID 8704  
                               __end_of_strcat 8448                                 __end_of_strchr 87B4  
                               __end_of_strcmp 83AE                                   i2printf@flag 00A9  
                               __end_of_strcpy 87EA                                 __end_of_strlen 826A  
                                 i2printf@fval 00A5                                 __end_of_strstr 7B5C  
                                 i2printf@prec 00AD                              __size_ofi2___flge 0120  
                          start_initialization 79AE                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 8CF6          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 8CF4                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 6C02                                    __end_of_abs 89A0  
                                  __end_of_sin 5458                                      i2printf@c 00AF  
                                    i2printf@f 0088                        _terminal_textAttributes 3DD4  
                                   ?i2___fladd 0056  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                                     ?i2___fldiv 0013  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 002C                                     ?i2___awmod 0001  
                                   ?i2___flmul 0030                                     ?i2___flsub 0080  
                                   ?i2___fltol 006C                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                  __size_of_ADCC_StartConversion 000E  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                            __size_ofi2_printf 0DC4                          __end_of_EUSART2_Write 8494  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 02D5                        __end_ofi2_EUSART2_Write 8528  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                          DATAEE_ReadByte@bAdd 0117                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 01E4                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F0  
                                  __pdataBANK1 01E8                                    __pdataBANK2 02B0  
                                     ??_fround 0173                                  _ringBufferLUT 0000  
               ??_terminal_textAttributesReset 01B4                                       ??_printf 018C  
            getCauseOfReset@return_reset_cause 0117           readDoubleFromEEPROM@starting_address 0119  
                            _POS3P3_ADC_Result 01CF                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                   __end_of_getMinorRevisionID 8A3E                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02CC                                     fround@prec 017B  
                               _eusart2RxCount 01DF                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 0141                                      ___fldiv@b 013D  
                                    _acos$4138 00AD                                      ___flmul@a 015A  
                                    ___flmul@b 0156                                      ___flsub@a 0141  
                                    ___flsub@b 013D                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 02D4  
                                __pcstackBANK3 0380                              __size_of___xxtofl 0154  
                                 _isdigit$3228 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 8C36                            EUSART2_Write@txData 0117  
                                 _load_on_time 0248                    __end_of_ADCC_StopConversion 8CF0  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4140 009D                                      _asin$4141 0099  
                                    _asin$4139 00A5                                       ?i2_putch 0001  
                                   sin@coeff_a E95D                                     sin@coeff_b E985  
                               _TMR7_StopTimer 8CDA                          _TMR6_InterruptHandler 0265  
                                    __pnvBANK2 02EC                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 790C                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 8AD0  
                                __pmediumconst E890                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 80EC                                      __ptext101 7CEA  
                                    __ptext110 6448                                      __ptext102 89F0  
                                     ?___flneg 0125                                      __ptext111 8740  
                                    __ptext103 8CF6                                      __ptext120 71CC  
                                    __ptext112 7D6C                                      __ptext104 2AD0  
                                    __ptext121 7DE8                                      __ptext113 515E  
                                    __ptext105 8CE6                                      __ptext130 0000  
                                    __ptext122 73FE                                      __ptext114 85B8  
                                    __ptext106 61FE                                      __ptext123 448E  
                                    __ptext115 8948                                      __ptext107 7F44  
                                    __ptext124 4B1C                                      __ptext116 5C9C  
                                    __ptext108 4E5A                                      __ptext125 8976  
                                    __ptext117 72EC                                      __ptext109 5458  
                                    __ptext126 8CEC                                      __ptext118 697E  
                                    __ptext127 8CA6                                      __ptext119 75DC  
                                    __ptext128 8BAA                                      __ptext129 8BBE  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler 8C52                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ E8C5  
                              _getCauseOfReset 82BC                                 ?_ringBufferLUT 01B4  
                                    _getUserID 8600              _EUSART2_TxDefaultInterruptHandler 026B  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F2  
                                  __tdiv_to_l_ 6ACE                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 011F                               _POS12_ADC_Result 01CB  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 024C                                      _eval_poly 73FE  
                    ??_terminal_textAttributes 01B4                                      _max_Power 0240  
                                    _attribute 01DE                                      _peakToRMS 61FE  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers E921                         _heartbeatTimerCallback 8686  
                               _dimming_period 00F0                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 0070  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                     __size_of_DATAEE_ReadByte 001A                                       ?_strncmp 011D  
                                     ?_strncpy 0117                  __size_of_readDoubleFromEEPROM 0052  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 8B96  
                       __end_of_TMR7_StopTimer 8CE0                                       _T6CLKCON 000FB3  
       terminal_textAttributes@input_attribute 01B3                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00AE  
                               ___wmul@product 011B                      currentMeasuredToPeak@Peak 00A1  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR 8CCC  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 8CEC  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 6E5E  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                                     _PIR8bits 000E3B                               ??_FLASH_ReadWord 011F  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                            i2___fldiv@new_exp 0024                                       _TMR5_ISR 8854  
                                     _TMR6_ISR 89C8                                       _TMR7_ISR 8820  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge 71CC                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0117                                       i2___wmul 8A64  
                      __size_of_FVR_Initialize 0008                                     printf@flag 01AB  
                                   printf@fval 01A3                                     printf@prec 01AF  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome 8C06  
                            i2___awdiv@divisor 0009                                       i2_fround 5F50  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue 8BBE                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf 1D0C                            __end_ofatan@coeff_a E95D  
                          __end_ofatan@coeff_b E985                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address E941  
                                    copy_data0 79C2                                      copy_data1 79F4  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 01DB                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                 ??_TMR5_DefaultInterruptHandler 0001  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 01E8  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset 830E                __end_of_terminal_textAttributes 413C  
                writeDoubleToEEPROM@input_data 0121                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 8BD2                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 8C8A         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 8C7C                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01B6  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 01DD  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F1  
             __end_of_acquisitionTimerCallback 8BF6                                    _fround$3940 0177  
                                  _fround$3941 0173                          __end_ofi2__tdiv_to_l_ 6D34  
                     _TMR7_SetInterruptHandler 8C44                          _TMR7_InterruptHandler 025F  
                           _ADC_Result_Scaling 0258        terminal_textAttributes@foreground_color 02D4  
                                     ___xxtofl 682A                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 8C26                               __size_of_isdigit 0022  
                    __end_of_max_Power_address E943                                       __ptext10 8C06  
                                     __ptext11 7AD0                                       __ptext20 8A18  
                                     __ptext12 7A40                                       __ptext21 8704  
                                     __ptext13 8212                                       __ptext30 8528  
                                     __ptext22 8152                                       __ptext14 877C  
                                     __ptext31 8C16                                       __ptext23 8AD0  
                                     __ptext15 87B4                                       __ptext40 7B5C  
                                     __ptext32 0F3E                                       __ptext24 8644  
                                     __ptext16 835E                                       __ptext41 6ACE  
                                     __ptext33 34B0                                       __ptext25 8B7C  
                                     __ptext17 826A                                       __ptext50 88EA  
                                     __ptext42 6D34                                       __ptext34 8C36  
                                     __ptext26 88BA                                       __ptext18 8B62  
                                     __ptext51 70AA                                       __ptext43 682A  
                                     __ptext35 8448                                       __ptext27 76BA  
                                     __ptext19 8600                                       __ptext60 8B0E  
                                     __ptext52 82BC                                       __ptext44 89A0  
                                     __ptext36 8AAE                                       __ptext28 59E6  
                                     __ptext61 790C                                       __ptext53 891A  
                                     __ptext45 8084                                       __ptext37 5720  
                                     __ptext29 8CDA                                       __ptext70 8C8A  
                                     __ptext62 8B2A                                       __ptext54 83AE  
                                     __ptext46 7BE2                                       __ptext38 413C  
                                     __ptext63 8B96                                       __ptext55 8C44  
                                     __ptext47 74FE                                       __ptext39 7E62  
                                     __ptext80 8CF2                                       __ptext72 8820  
                                     __ptext64 8C26                                       __ptext56 8888  
                                     __ptext48 8570                                       __ptext81 8686  
                                     __ptext73 8CF0                                       __ptext65 8CBC  
                                     __ptext57 8C52                                       __ptext49 47DE  
                                     __ptext90 3954                                       __ptext82 8CCC  
                                     __ptext74 8BE4                                       __ptext66 7FB2  
                                     __ptext58 8494                                       __ptext91 8CB2  
                                     __ptext83 87EA                                       __ptext75 8C98  
                                     __ptext67 8C6E                                       __ptext59 8C60  
                                     __ptext92 84DE                                       __ptext76 8CC4  
                                     __ptext68 8C7C                                       __ptext93 8AF0  
                                     __ptext85 8854                                       __ptext77 8CE0  
                                     __ptext69 81B2                                       __ptext94 5F50  
                                     __ptext86 8B46                                       __ptext78 8A3E  
                                     __ptext95 7ED4                                       __ptext87 8CF4  
                                     __ptext79 89C8                                       __ptext96 7C66  
                                     __ptext88 785E                                       __ptext97 6C02  
                                     __ptext89 1D0C                                       __ptext98 6E5E  
                                     __ptext99 8A64                                       _sin$4142 0090  
                                     __powers_ E891                            ringBufferLUT@userID 03A9  
                              _Temp_ADC_Offset 02D0                    DATAEE_WriteByte@GIEBitValue 011A  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                               i2_isdigit$3228 0002                                       _max_Irms 0244  
                              _Temp_ADC_Result 0254                                  __size_of_acos 006E  
                                __size_of_fabs 003C                                  __size_of_atan 0236  
                                __size_of_asin 0304                                  __size_of_atoi 00D8  
                                __size_of_main 01AC                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 02C8             __size_of_ADCPostProcessingCallback 09E0  
                         __end_ofi2__div_to_l_ 6F86                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                              ??_DATAEE_ReadByte 0119  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    ringBufferLUT@channel_name 0380                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 8CA6                                       int$flags 005F  
                                     atoi@sign 0121                                    ??_getUserID 0124  
                                    printf@idx 0196                                      printf@len 0199  
                                    printf@exp 01A1                                      printf@val 01A7  
                                  atan@coeff_a E945                                    atan@coeff_b E971  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 8C06  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076           __end_of_TMR6_DefaultInterruptHandler 8CF4  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 8CF2  
         __end_of_ADCC_DefaultInterruptHandler 8CF8          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 8CF6                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID 8A18  
                             __tdiv_to_l_@quot 0120                                i2___xxtofl@sign 000D  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 03A5                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                    _reset_cause 02EC  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01D3  
            __end_of_ADCPostProcessingCallback 34B0                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                   ?_getDeviceID 0122  
                                     printf@ap 019B                                       printf@cp 0197  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString 88EA  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult 8BBE  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 785E  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 785E  
      __size_of_INTERRUPT_InterruptManagerHigh 7856                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 8CBC                                    _printf$3943 0192  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01B4  
                             ___lldiv@quotient 0120                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 8152  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 79AE  
                            ??_ADCC_Initialize 011A                              i2__div_to_l_@exp1 000E  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull 6F86  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 0012                                   ___fladd@aexp 013A  
                                 ___fladd@bexp 013B                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 0268  
               __size_of_currentMeasuredToPeak 007C                  __end_of_currentMeasuredToPeak 7DE8  
                 __size_of_ADCC_StopConversion 0004  
