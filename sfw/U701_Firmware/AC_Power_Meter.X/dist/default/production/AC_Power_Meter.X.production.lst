

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 01 13:42:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133  0000                     
   134                           ; Version 1.45 (B)
   135                           ; Generated 30/01/2018 GMT
   136                           ; 
   137                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18LF67K40 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169                           	psect	idataBANK0
   170  015F80                     __pidataBANK0:
   171                           	opt stack 0
   172                           
   173                           ;initializer for _Vpk
   174                           ;main.c: 58: volatile bit eusart2RxStringReady = 0;
   175                           ;main.c: 61: unsigned long on_time = 0;
   176                           ;main.c: 64: double FVR_ADC_Result;
   177                           ;main.c: 65: double ADC_Result_Scaling;
   178                           ;main.c: 66: double POS3P3_ADC_Result;
   179                           ;main.c: 67: double POS12_ADC_Result;
   180                           ;main.c: 68: double Temp_ADC_Result;
   181                           ;main.c: 69: double Temp_ADC_Offset = -267.409;
   182  015F80  B5                 	db	181
   183  015F81  29                 	db	41
   184  015F82  43                 	db	67
   185                           
   186                           ;initializer for _Temp_ADC_Offset
   187  015F83  B4                 	db	180
   188  015F84  85                 	db	133
   189  015F85  C3                 	db	195
   190                           
   191                           	psect	mediumconst
   192  00F458                     __pmediumconst:
   193                           	opt stack 0
   194  00F458  00                 	db	0
   195  00F459                     _dpowers:
   196                           	opt stack 0
   197  00F459  0001               	dw	1
   198  00F45B  0000               	dw	0
   199  00F45D  000A               	dw	10
   200  00F45F  0000               	dw	0
   201  00F461  0064               	dw	100
   202  00F463  0000               	dw	0
   203  00F465  03E8               	dw	1000
   204  00F467  0000               	dw	0
   205  00F469  2710               	dw	10000
   206  00F46B  0000               	dw	0
   207  00F46D  86A0               	dw	34464
   208  00F46F  0001               	dw	1
   209  00F471  4240               	dw	16960
   210  00F473  000F               	dw	15
   211  00F475  9680               	dw	38528
   212  00F477  0098               	dw	152
   213  00F479  E100               	dw	57600
   214  00F47B  05F5               	dw	1525
   215  00F47D  CA00               	dw	51712
   216  00F47F  3B9A               	dw	15258
   217  00F481                     __end_of_dpowers:
   218                           	opt stack 0
   219  00F481                     __powers_:
   220                           	opt stack 0
   221  00F481  00                 	db	0
   222  00F482  80                 	db	128
   223  00F483  3F                 	db	63
   224  00F484  00                 	db	0
   225  00F485  20                 	db	32
   226  00F486  41                 	db	65
   227  00F487  00                 	db	0
   228  00F488  C8                 	db	200
   229  00F489  42                 	db	66
   230  00F48A  00                 	db	0
   231  00F48B  7A                 	db	122
   232  00F48C  44                 	db	68
   233  00F48D  40                 	db	64
   234  00F48E  1C                 	db	28
   235  00F48F  46                 	db	70
   236  00F490  50                 	db	80
   237  00F491  C3                 	db	195
   238  00F492  47                 	db	71
   239  00F493  24                 	db	36
   240  00F494  74                 	db	116
   241  00F495  49                 	db	73
   242  00F496  97                 	db	151
   243  00F497  18                 	db	24
   244  00F498  4B                 	db	75
   245  00F499  BC                 	db	188
   246  00F49A  BE                 	db	190
   247  00F49B  4C                 	db	76
   248  00F49C  6B                 	db	107
   249  00F49D  6E                 	db	110
   250  00F49E  4E                 	db	78
   251  00F49F  03                 	db	3
   252  00F4A0  15                 	db	21
   253  00F4A1  50                 	db	80
   254  00F4A2  79                 	db	121
   255  00F4A3  AD                 	db	173
   256  00F4A4  60                 	db	96
   257  00F4A5  F3                 	db	243
   258  00F4A6  49                 	db	73
   259  00F4A7  71                 	db	113
   260  00F4A8                     __end_of__powers_:
   261                           	opt stack 0
   262  00F4A8                     __npowers_:
   263                           	opt stack 0
   264  00F4A8  00                 	db	0
   265  00F4A9  80                 	db	128
   266  00F4AA  3F                 	db	63
   267  00F4AB  CD                 	db	205
   268  00F4AC  CC                 	db	204
   269  00F4AD  3D                 	db	61
   270  00F4AE  D7                 	db	215
   271  00F4AF  23                 	db	35
   272  00F4B0  3C                 	db	60
   273  00F4B1  12                 	db	18
   274  00F4B2  83                 	db	131
   275  00F4B3  3A                 	db	58
   276  00F4B4  B7                 	db	183
   277  00F4B5  D1                 	db	209
   278  00F4B6  38                 	db	56
   279  00F4B7  C6                 	db	198
   280  00F4B8  27                 	db	39
   281  00F4B9  37                 	db	55
   282  00F4BA  38                 	db	56
   283  00F4BB  86                 	db	134
   284  00F4BC  35                 	db	53
   285  00F4BD  C0                 	db	192
   286  00F4BE  D6                 	db	214
   287  00F4BF  33                 	db	51
   288  00F4C0  CC                 	db	204
   289  00F4C1  2B                 	db	43
   290  00F4C2  32                 	db	50
   291  00F4C3  70                 	db	112
   292  00F4C4  89                 	db	137
   293  00F4C5  30                 	db	48
   294  00F4C6  E7                 	db	231
   295  00F4C7  DB                 	db	219
   296  00F4C8  2E                 	db	46
   297  00F4C9  E5                 	db	229
   298  00F4CA  3C                 	db	60
   299  00F4CB  1E                 	db	30
   300  00F4CC  42                 	db	66
   301  00F4CD  A2                 	db	162
   302  00F4CE  0D                 	db	13
   303  00F4CF                     __end_of__npowers_:
   304                           	opt stack 0
   305  00F4CF                     atan@coeff_a:
   306                           	opt stack 0
   307  00F4CF  3C                 	db	60
   308  00F4D0  04                 	db	4
   309  00F4D1  42                 	db	66
   310  00F4D2  9F                 	db	159
   311  00F4D3  6A                 	db	106
   312  00F4D4  42                 	db	66
   313  00F4D5  90                 	db	144
   314  00F4D6  01                 	db	1
   315  00F4D7  42                 	db	66
   316  00F4D8  4D                 	db	77
   317  00F4D9  BB                 	db	187
   318  00F4DA  40                 	db	64
   319  00F4DB  EC                 	db	236
   320  00F4DC  47                 	db	71
   321  00F4DD  3E                 	db	62
   322  00F4DE  8E                 	db	142
   323  00F4DF  1F                 	db	31
   324  00F4E0  BB                 	db	187
   325  00F4E1                     __end_ofatan@coeff_a:
   326                           	opt stack 0
   327  00F4E1                     sin@coeff_a:
   328                           	opt stack 0
   329  00F4E1  F4                 	db	244
   330  00F4E2  4A                 	db	74
   331  00F4E3  48                 	db	72
   332  00F4E4  95                 	db	149
   333  00F4E5  95                 	db	149
   334  00F4E6  C7                 	db	199
   335  00F4E7  C1                 	db	193
   336  00F4E8  DC                 	db	220
   337  00F4E9  45                 	db	69
   338  00F4EA  DC                 	db	220
   339  00F4EB  6D                 	db	109
   340  00F4EC  C3                 	db	195
   341  00F4ED  B3                 	db	179
   342  00F4EE  33                 	db	51
   343  00F4EF  40                 	db	64
   344  00F4F0                     __end_ofsin@coeff_a:
   345                           	opt stack 0
   346  00F4F0                     atan@coeff_b:
   347                           	opt stack 0
   348  00F4F0  3C                 	db	60
   349  00F4F1  04                 	db	4
   350  00F4F2  42                 	db	66
   351  00F4F3  5A                 	db	90
   352  00F4F4  8B                 	db	139
   353  00F4F5  42                 	db	66
   354  00F4F6  04                 	db	4
   355  00F4F7  44                 	db	68
   356  00F4F8  42                 	db	66
   357  00F4F9  9C                 	db	156
   358  00F4FA  4F                 	db	79
   359  00F4FB  41                 	db	65
   360  00F4FC  00                 	db	0
   361  00F4FD  80                 	db	128
   362  00F4FE  3F                 	db	63
   363  00F4FF                     __end_ofatan@coeff_b:
   364                           	opt stack 0
   365  00F4FF                     sin@coeff_b:
   366                           	opt stack 0
   367  00F4FF  34                 	db	52
   368  00F500  01                 	db	1
   369  00F501  48                 	db	72
   370  00F502  9D                 	db	157
   371  00F503  B0                 	db	176
   372  00F504  45                 	db	69
   373  00F505  00                 	db	0
   374  00F506  DA                 	db	218
   375  00F507  42                 	db	66
   376  00F508  00                 	db	0
   377  00F509  80                 	db	128
   378  00F50A  3F                 	db	63
   379  00F50B                     __end_ofsin@coeff_b:
   380                           	opt stack 0
   381  0000                     _FVRCONbits	set	3780
   382  0000                     _FVRCON	set	3780
   383  0000                     _RC2REG	set	3825
   384  0000                     _RC2STAbits	set	3829
   385  0000                     _TX2REG	set	3826
   386  0000                     _TX2STAbits	set	3830
   387  0000                     _SP2BRGH	set	3828
   388  0000                     _SP2BRGL	set	3827
   389  0000                     _TX2STA	set	3830
   390  0000                     _RC2STA	set	3829
   391  0000                     _BAUD2CON	set	3831
   392  0000                     _PIR1bits	set	3636
   393  0000                     _PIE1bits	set	3626
   394  0000                     _PIR5bits	set	3640
   395  0000                     _PIE5bits	set	3630
   396  0000                     _PIR3bits	set	3638
   397  0000                     _PIE3bits	set	3628
   398  0000                     _IPR1bits	set	3616
   399  0000                     _IPR5bits	set	3620
   400  0000                     _IPR3bits	set	3618
   401  0000                     _RX2PPS	set	3601
   402  0000                     _RG7PPS	set	3721
   403  0000                     _SLRCONH	set	3774
   404  0000                     _SLRCONG	set	3769
   405  0000                     _SLRCONF	set	3761
   406  0000                     _SLRCONE	set	3756
   407  0000                     _SLRCOND	set	3748
   408  0000                     _SLRCONC	set	3743
   409  0000                     _SLRCONB	set	3735
   410  0000                     _SLRCONA	set	3727
   411  0000                     _ODCOND	set	3749
   412  0000                     _ODCONC	set	3744
   413  0000                     _ODCONH	set	3775
   414  0000                     _ODCONB	set	3736
   415  0000                     _ODCONG	set	3770
   416  0000                     _ODCONA	set	3728
   417  0000                     _ODCONF	set	3762
   418  0000                     _ODCONE	set	3757
   419  0000                     _WPUH	set	3776
   420  0000                     _WPUC	set	3745
   421  0000                     _WPUA	set	3729
   422  0000                     _WPUG	set	3771
   423  0000                     _WPUB	set	3737
   424  0000                     _WPUE	set	3758
   425  0000                     _WPUF	set	3763
   426  0000                     _WPUD	set	3750
   427  0000                     _ANSELA	set	3730
   428  0000                     _ANSELF	set	3764
   429  0000                     _ANSELG	set	3772
   430  0000                     _ANSELE	set	3759
   431  0000                     _ANSELB	set	3738
   432  0000                     _ANSELD	set	3751
   433  0000                     _PMD5	set	3665
   434  0000                     _PMD4	set	3664
   435  0000                     _PMD3	set	3663
   436  0000                     _PMD2	set	3662
   437  0000                     _PMD1	set	3661
   438  0000                     _PMD0	set	3660
   439  0000                     _OSCTUNE	set	3656
   440  0000                     _OSCFRQ	set	3657
   441  0000                     _OSCEN	set	3655
   442  0000                     _OSCCON3	set	3653
   443  0000                     _OSCCON1	set	3651
   444  0000                     _PLLR	set	29232
   445  0000                     _T7GCONbits	set	3889
   446  0000                     _T7CONbits	set	3888
   447  0000                     _T7CON	set	3888
   448  0000                     _TMR7L	set	3886
   449  0000                     _TMR7H	set	3887
   450  0000                     _T7CLK	set	3891
   451  0000                     _T7GATE	set	3890
   452  0000                     _T7GCON	set	3889
   453  0000                     _ADCON1bits	set	3929
   454  0000                     _ADCON2bits	set	3930
   455  0000                     _ADPRE	set	3934
   456  0000                     _ADCON3bits	set	3931
   457  0000                     _ADACQ	set	3932
   458  0000                     _ADCLK	set	3927
   459  0000                     _ADACT	set	3926
   460  0000                     _ADREF	set	3928
   461  0000                     _ADCON3	set	3931
   462  0000                     _ADCON2	set	3930
   463  0000                     _ADCON1	set	3929
   464  0000                     _ADCAP	set	3933
   465  0000                     _ADPCH	set	3935
   466  0000                     _T5GCONbits	set	4036
   467  0000                     _T5CONbits	set	4035
   468  0000                     _T5CON	set	4035
   469  0000                     _TMR5L	set	4033
   470  0000                     _TMR5H	set	4034
   471  0000                     _T5CLK	set	4038
   472  0000                     _T5GATE	set	4037
   473  0000                     _T5GCON	set	4036
   474  0000                     _LATGbits	set	3967
   475  0000                     _LATFbits	set	3966
   476  0000                     _ADERRL	set	3950
   477  0000                     _ADERRH	set	3951
   478  0000                     _ADPREVL	set	3937
   479  0000                     _ADPREVH	set	3938
   480  0000                     _ADFLTRL	set	3954
   481  0000                     _ADFLTRH	set	3955
   482  0000                     _ADSTATbits	set	3941
   483  0000                     _ADACCL	set	3952
   484  0000                     _ADACCH	set	3953
   485  0000                     _ADCNT	set	3943
   486  0000                     _ADRESL	set	3939
   487  0000                     _ADRESH	set	3940
   488  0000                     _ADCON0bits	set	3936
   489  0000                     _ADCON0	set	3936
   490  0000                     _ADSTAT	set	3941
   491  0000                     _ADRPT	set	3942
   492  0000                     _ADSTPTH	set	3945
   493  0000                     _ADSTPTL	set	3944
   494  0000                     _ADUTHH	set	3949
   495  0000                     _ADUTHL	set	3948
   496  0000                     _ADLTHH	set	3947
   497  0000                     _ADLTHL	set	3946
   498  0000                     _PR6	set	4016
   499  0000                     _TMR6	set	4015
   500  0000                     _T6CONbits	set	4017
   501  0000                     _T6RSTbits	set	4020
   502  0000                     _T6HLTbits	set	4018
   503  0000                     _T6CON	set	4017
   504  0000                     _T6TMR	set	4015
   505  0000                     _T6PR	set	4016
   506  0000                     _T6RST	set	4020
   507  0000                     _T6HLT	set	4018
   508  0000                     _T6CLKCON	set	4019
   509  0000                     _INTCONbits	set	4082
   510  0000                     _TRISD	set	3972
   511  0000                     _TRISC	set	3971
   512  0000                     _TRISH	set	3976
   513  0000                     _TRISB	set	3970
   514  0000                     _TRISG	set	3975
   515  0000                     _TRISA	set	3969
   516  0000                     _TRISF	set	3974
   517  0000                     _TRISE	set	3973
   518  0000                     _LATH	set	3968
   519  0000                     _LATC	set	3963
   520  0000                     _LATG	set	3967
   521  0000                     _LATB	set	3962
   522  0000                     _LATF	set	3966
   523  0000                     _LATA	set	3961
   524  0000                     _LATD	set	3964
   525  0000                     _LATE	set	3965
   526  00F50B                     STR_81:
   527  00F50B  4C                 	db	76	;'L'
   528  00F50C  69                 	db	105	;'i'
   529  00F50D  73                 	db	115	;'s'
   530  00F50E  74                 	db	116	;'t'
   531  00F50F  20                 	db	32
   532  00F510  6F                 	db	111	;'o'
   533  00F511  66                 	db	102	;'f'
   534  00F512  20                 	db	32
   535  00F513  73                 	db	115	;'s'
   536  00F514  75                 	db	117	;'u'
   537  00F515  70                 	db	112	;'p'
   538  00F516  70                 	db	112	;'p'
   539  00F517  6F                 	db	111	;'o'
   540  00F518  72                 	db	114	;'r'
   541  00F519  74                 	db	116	;'t'
   542  00F51A  65                 	db	101	;'e'
   543  00F51B  64                 	db	100	;'d'
   544  00F51C  20                 	db	32
   545  00F51D  63                 	db	99	;'c'
   546  00F51E  6F                 	db	111	;'o'
   547  00F51F  6D                 	db	109	;'m'
   548  00F520  6D                 	db	109	;'m'
   549  00F521  61                 	db	97	;'a'
   550  00F522  6E                 	db	110	;'n'
   551  00F523  64                 	db	100	;'d'
   552  00F524  73                 	db	115	;'s'
   553  00F525  3A                 	db	58	;':'
   554  00F526  0A                 	db	10
   555  00F527  0D                 	db	13
   556  00F528  20                 	db	32
   557  00F529  20                 	db	32
   558  00F52A  20                 	db	32
   559  00F52B  52                 	db	82	;'R'
   560  00F52C  65                 	db	101	;'e'
   561  00F52D  73                 	db	115	;'s'
   562  00F52E  65                 	db	101	;'e'
   563  00F52F  74                 	db	116	;'t'
   564  00F530  3A                 	db	58	;':'
   565  00F531  20                 	db	32
   566  00F532  43                 	db	67	;'C'
   567  00F533  6C                 	db	108	;'l'
   568  00F534  65                 	db	101	;'e'
   569  00F535  61                 	db	97	;'a'
   570  00F536  72                 	db	114	;'r'
   571  00F537  73                 	db	115	;'s'
   572  00F538  20                 	db	32
   573  00F539  74                 	db	116	;'t'
   574  00F53A  68                 	db	104	;'h'
   575  00F53B  65                 	db	101	;'e'
   576  00F53C  20                 	db	32
   577  00F53D  74                 	db	116	;'t'
   578  00F53E  65                 	db	101	;'e'
   579  00F53F  72                 	db	114	;'r'
   580  00F540  6D                 	db	109	;'m'
   581  00F541  69                 	db	105	;'i'
   582  00F542  6E                 	db	110	;'n'
   583  00F543  61                 	db	97	;'a'
   584  00F544  6C                 	db	108	;'l'
   585  00F545  20                 	db	32
   586  00F546  61                 	db	97	;'a'
   587  00F547  6E                 	db	110	;'n'
   588  00F548  64                 	db	100	;'d'
   589  00F549  20                 	db	32
   590  00F54A  72                 	db	114	;'r'
   591  00F54B  65                 	db	101	;'e'
   592  00F54C  73                 	db	115	;'s'
   593  00F54D  65                 	db	101	;'e'
   594  00F54E  74                 	db	116	;'t'
   595  00F54F  73                 	db	115	;'s'
   596  00F550  20                 	db	32
   597  00F551  74                 	db	116	;'t'
   598  00F552  68                 	db	104	;'h'
   599  00F553  65                 	db	101	;'e'
   600  00F554  20                 	db	32
   601  00F555  6D                 	db	109	;'m'
   602  00F556  69                 	db	105	;'i'
   603  00F557  63                 	db	99	;'c'
   604  00F558  72                 	db	114	;'r'
   605  00F559  6F                 	db	111	;'o'
   606  00F55A  0A                 	db	10
   607  00F55B  0D                 	db	13
   608  00F55C  20                 	db	32
   609  00F55D  20                 	db	32
   610  00F55E  20                 	db	32
   611  00F55F  43                 	db	67	;'C'
   612  00F560  6C                 	db	108	;'l'
   613  00F561  65                 	db	101	;'e'
   614  00F562  61                 	db	97	;'a'
   615  00F563  72                 	db	114	;'r'
   616  00F564  3A                 	db	58	;':'
   617  00F565  20                 	db	32
   618  00F566  43                 	db	67	;'C'
   619  00F567  6C                 	db	108	;'l'
   620  00F568  65                 	db	101	;'e'
   621  00F569  61                 	db	97	;'a'
   622  00F56A  72                 	db	114	;'r'
   623  00F56B  73                 	db	115	;'s'
   624  00F56C  20                 	db	32
   625  00F56D  74                 	db	116	;'t'
   626  00F56E  68                 	db	104	;'h'
   627  00F56F  65                 	db	101	;'e'
   628  00F570  20                 	db	32
   629  00F571  74                 	db	116	;'t'
   630  00F572  65                 	db	101	;'e'
   631  00F573  72                 	db	114	;'r'
   632  00F574  6D                 	db	109	;'m'
   633  00F575  69                 	db	105	;'i'
   634  00F576  6E                 	db	110	;'n'
   635  00F577  61                 	db	97	;'a'
   636  00F578  6C                 	db	108	;'l'
   637  00F579  20                 	db	32
   638  00F57A  62                 	db	98	;'b'
   639  00F57B  75                 	db	117	;'u'
   640  00F57C  74                 	db	116	;'t'
   641  00F57D  20                 	db	32
   642  00F57E  64                 	db	100	;'d'
   643  00F57F  6F                 	db	111	;'o'
   644  00F580  65                 	db	101	;'e'
   645  00F581  73                 	db	115	;'s'
   646  00F582  6E                 	db	110	;'n'
   647  00F583  27                 	db	39
   648  00F584  74                 	db	116	;'t'
   649  00F585  20                 	db	32
   650  00F586  72                 	db	114	;'r'
   651  00F587  65                 	db	101	;'e'
   652  00F588  73                 	db	115	;'s'
   653  00F589  65                 	db	101	;'e'
   654  00F58A  74                 	db	116	;'t'
   655  00F58B  20                 	db	32
   656  00F58C  74                 	db	116	;'t'
   657  00F58D  68                 	db	104	;'h'
   658  00F58E  65                 	db	101	;'e'
   659  00F58F  20                 	db	32
   660  00F590  6D                 	db	109	;'m'
   661  00F591  69                 	db	105	;'i'
   662  00F592  63                 	db	99	;'c'
   663  00F593  72                 	db	114	;'r'
   664  00F594  6F                 	db	111	;'o'
   665  00F595  0A                 	db	10
   666  00F596  0D                 	db	13
   667  00F597  20                 	db	32
   668  00F598  20                 	db	32
   669  00F599  20                 	db	32
   670  00F59A  2A                 	db	42
   671  00F59B  49                 	db	73	;'I'
   672  00F59C  44                 	db	68	;'D'
   673  00F59D  4E                 	db	78	;'N'
   674  00F59E  3F                 	db	63	;'?'
   675  00F59F  3A                 	db	58	;':'
   676  00F5A0  20                 	db	32
   677  00F5A1  52                 	db	82	;'R'
   678  00F5A2  65                 	db	101	;'e'
   679  00F5A3  74                 	db	116	;'t'
   680  00F5A4  75                 	db	117	;'u'
   681  00F5A5  72                 	db	114	;'r'
   682  00F5A6  6E                 	db	110	;'n'
   683  00F5A7  73                 	db	115	;'s'
   684  00F5A8  20                 	db	32
   685  00F5A9  64                 	db	100	;'d'
   686  00F5AA  65                 	db	101	;'e'
   687  00F5AB  76                 	db	118	;'v'
   688  00F5AC  69                 	db	105	;'i'
   689  00F5AD  63                 	db	99	;'c'
   690  00F5AE  65                 	db	101	;'e'
   691  00F5AF  20                 	db	32
   692  00F5B0  69                 	db	105	;'i'
   693  00F5B1  64                 	db	100	;'d'
   694  00F5B2  65                 	db	101	;'e'
   695  00F5B3  6E                 	db	110	;'n'
   696  00F5B4  74                 	db	116	;'t'
   697  00F5B5  69                 	db	105	;'i'
   698  00F5B6  66                 	db	102	;'f'
   699  00F5B7  69                 	db	105	;'i'
   700  00F5B8  63                 	db	99	;'c'
   701  00F5B9  61                 	db	97	;'a'
   702  00F5BA  74                 	db	116	;'t'
   703  00F5BB  69                 	db	105	;'i'
   704  00F5BC  6F                 	db	111	;'o'
   705  00F5BD  6E                 	db	110	;'n'
   706  00F5BE  0A                 	db	10
   707  00F5BF  0D                 	db	13
   708  00F5C0  20                 	db	32
   709  00F5C1  20                 	db	32
   710  00F5C2  20                 	db	32
   711  00F5C3  4D                 	db	77	;'M'
   712  00F5C4  65                 	db	101	;'e'
   713  00F5C5  61                 	db	97	;'a'
   714  00F5C6  73                 	db	115	;'s'
   715  00F5C7  75                 	db	117	;'u'
   716  00F5C8  72                 	db	114	;'r'
   717  00F5C9  65                 	db	101	;'e'
   718  00F5CA  20                 	db	32
   719  00F5CB  50                 	db	80	;'P'
   720  00F5CC  4F                 	db	79	;'O'
   721  00F5CD  53                 	db	83	;'S'
   722  00F5CE  33                 	db	51	;'3'
   723  00F5CF  50                 	db	80	;'P'
   724  00F5D0  33                 	db	51	;'3'
   725  00F5D1  3F                 	db	63	;'?'
   726  00F5D2  3A                 	db	58	;':'
   727  00F5D3  20                 	db	32
   728  00F5D4  52                 	db	82	;'R'
   729  00F5D5  65                 	db	101	;'e'
   730  00F5D6  74                 	db	116	;'t'
   731  00F5D7  75                 	db	117	;'u'
   732  00F5D8  72                 	db	114	;'r'
   733  00F5D9  6E                 	db	110	;'n'
   734  00F5DA  73                 	db	115	;'s'
   735  00F5DB  20                 	db	32
   736  00F5DC  2B                 	db	43
   737  00F5DD  33                 	db	51	;'3'
   738  00F5DE  2E                 	db	46
   739  00F5DF  33                 	db	51	;'3'
   740  00F5E0  56                 	db	86	;'V'
   741  00F5E1  20                 	db	32
   742  00F5E2  41                 	db	65	;'A'
   743  00F5E3  44                 	db	68	;'D'
   744  00F5E4  43                 	db	67	;'C'
   745  00F5E5  20                 	db	32
   746  00F5E6  43                 	db	67	;'C'
   747  00F5E7  6F                 	db	111	;'o'
   748  00F5E8  6E                 	db	110	;'n'
   749  00F5E9  76                 	db	118	;'v'
   750  00F5EA  65                 	db	101	;'e'
   751  00F5EB  72                 	db	114	;'r'
   752  00F5EC  73                 	db	115	;'s'
   753  00F5ED  69                 	db	105	;'i'
   754  00F5EE  6F                 	db	111	;'o'
   755  00F5EF  6E                 	db	110	;'n'
   756  00F5F0  20                 	db	32
   757  00F5F1  69                 	db	105	;'i'
   758  00F5F2  6E                 	db	110	;'n'
   759  00F5F3  20                 	db	32
   760  00F5F4  76                 	db	118	;'v'
   761  00F5F5  6F                 	db	111	;'o'
   762  00F5F6  6C                 	db	108	;'l'
   763  00F5F7  74                 	db	116	;'t'
   764  00F5F8  73                 	db	115	;'s'
   765  00F5F9  0A                 	db	10
   766  00F5FA  0D                 	db	13
   767  00F5FB  20                 	db	32
   768  00F5FC  20                 	db	32
   769  00F5FD  20                 	db	32
   770  00F5FE  4D                 	db	77	;'M'
   771  00F5FF  65                 	db	101	;'e'
   772  00F600  61                 	db	97	;'a'
   773  00F601  73                 	db	115	;'s'
   774  00F602  75                 	db	117	;'u'
   775  00F603  72                 	db	114	;'r'
   776  00F604  65                 	db	101	;'e'
   777  00F605  20                 	db	32
   778  00F606  50                 	db	80	;'P'
   779  00F607  4F                 	db	79	;'O'
   780  00F608  53                 	db	83	;'S'
   781  00F609  31                 	db	49	;'1'
   782  00F60A  32                 	db	50	;'2'
   783  00F60B  3F                 	db	63	;'?'
   784  00F60C  3A                 	db	58	;':'
   785  00F60D  20                 	db	32
   786  00F60E  52                 	db	82	;'R'
   787  00F60F  65                 	db	101	;'e'
   788  00F610  74                 	db	116	;'t'
   789  00F611  75                 	db	117	;'u'
   790  00F612  72                 	db	114	;'r'
   791  00F613  6E                 	db	110	;'n'
   792  00F614  73                 	db	115	;'s'
   793  00F615  20                 	db	32
   794  00F616  2B                 	db	43
   795  00F617  31                 	db	49	;'1'
   796  00F618  32                 	db	50	;'2'
   797  00F619  56                 	db	86	;'V'
   798  00F61A  20                 	db	32
   799  00F61B  41                 	db	65	;'A'
   800  00F61C  44                 	db	68	;'D'
   801  00F61D  43                 	db	67	;'C'
   802  00F61E  20                 	db	32
   803  00F61F  43                 	db	67	;'C'
   804  00F620  6F                 	db	111	;'o'
   805  00F621  6E                 	db	110	;'n'
   806  00F622  76                 	db	118	;'v'
   807  00F623  65                 	db	101	;'e'
   808  00F624  72                 	db	114	;'r'
   809  00F625  73                 	db	115	;'s'
   810  00F626  69                 	db	105	;'i'
   811  00F627  6F                 	db	111	;'o'
   812  00F628  6E                 	db	110	;'n'
   813  00F629  20                 	db	32
   814  00F62A  69                 	db	105	;'i'
   815  00F62B  6E                 	db	110	;'n'
   816  00F62C  20                 	db	32
   817  00F62D  76                 	db	118	;'v'
   818  00F62E  6F                 	db	111	;'o'
   819  00F62F  6C                 	db	108	;'l'
   820  00F630  74                 	db	116	;'t'
   821  00F631  73                 	db	115	;'s'
   822  00F632  0A                 	db	10
   823  00F633  0D                 	db	13
   824  00F634  20                 	db	32
   825  00F635  20                 	db	32
   826  00F636  20                 	db	32
   827  00F637  4D                 	db	77	;'M'
   828  00F638  65                 	db	101	;'e'
   829  00F639  61                 	db	97	;'a'
   830  00F63A  73                 	db	115	;'s'
   831  00F63B  75                 	db	117	;'u'
   832  00F63C  72                 	db	114	;'r'
   833  00F63D  65                 	db	101	;'e'
   834  00F63E  20                 	db	32
   835  00F63F  44                 	db	68	;'D'
   836  00F640  69                 	db	105	;'i'
   837  00F641  65                 	db	101	;'e'
   838  00F642  20                 	db	32
   839  00F643  54                 	db	84	;'T'
   840  00F644  65                 	db	101	;'e'
   841  00F645  6D                 	db	109	;'m'
   842  00F646  70                 	db	112	;'p'
   843  00F647  3F                 	db	63	;'?'
   844  00F648  3A                 	db	58	;':'
   845  00F649  20                 	db	32
   846  00F64A  52                 	db	82	;'R'
   847  00F64B  65                 	db	101	;'e'
   848  00F64C  74                 	db	116	;'t'
   849  00F64D  75                 	db	117	;'u'
   850  00F64E  72                 	db	114	;'r'
   851  00F64F  6E                 	db	110	;'n'
   852  00F650  73                 	db	115	;'s'
   853  00F651  20                 	db	32
   854  00F652  74                 	db	116	;'t'
   855  00F653  68                 	db	104	;'h'
   856  00F654  65                 	db	101	;'e'
   857  00F655  20                 	db	32
   858  00F656  6D                 	db	109	;'m'
   859  00F657  69                 	db	105	;'i'
   860  00F658  63                 	db	99	;'c'
   861  00F659  72                 	db	114	;'r'
   862  00F65A  6F                 	db	111	;'o'
   863  00F65B  63                 	db	99	;'c'
   864  00F65C  6F                 	db	111	;'o'
   865  00F65D  6E                 	db	110	;'n'
   866  00F65E  74                 	db	116	;'t'
   867  00F65F  72                 	db	114	;'r'
   868  00F660  6F                 	db	111	;'o'
   869  00F661  6C                 	db	108	;'l'
   870  00F662  6C                 	db	108	;'l'
   871  00F663  65                 	db	101	;'e'
   872  00F664  72                 	db	114	;'r'
   873  00F665  20                 	db	32
   874  00F666  64                 	db	100	;'d'
   875  00F667  69                 	db	105	;'i'
   876  00F668  65                 	db	101	;'e'
   877  00F669  20                 	db	32
   878  00F66A  74                 	db	116	;'t'
   879  00F66B  65                 	db	101	;'e'
   880  00F66C  6D                 	db	109	;'m'
   881  00F66D  70                 	db	112	;'p'
   882  00F66E  65                 	db	101	;'e'
   883  00F66F  72                 	db	114	;'r'
   884  00F670  61                 	db	97	;'a'
   885  00F671  74                 	db	116	;'t'
   886  00F672  75                 	db	117	;'u'
   887  00F673  72                 	db	114	;'r'
   888  00F674  65                 	db	101	;'e'
   889  00F675  20                 	db	32
   890  00F676  69                 	db	105	;'i'
   891  00F677  6E                 	db	110	;'n'
   892  00F678  20                 	db	32
   893  00F679  64                 	db	100	;'d'
   894  00F67A  65                 	db	101	;'e'
   895  00F67B  67                 	db	103	;'g'
   896  00F67C  72                 	db	114	;'r'
   897  00F67D  65                 	db	101	;'e'
   898  00F67E  65                 	db	101	;'e'
   899  00F67F  73                 	db	115	;'s'
   900  00F680  20                 	db	32
   901  00F681  43                 	db	67	;'C'
   902  00F682  0A                 	db	10
   903  00F683  0D                 	db	13
   904  00F684  20                 	db	32
   905  00F685  20                 	db	32
   906  00F686  20                 	db	32
   907  00F687  4D                 	db	77	;'M'
   908  00F688  65                 	db	101	;'e'
   909  00F689  61                 	db	97	;'a'
   910  00F68A  73                 	db	115	;'s'
   911  00F68B  75                 	db	117	;'u'
   912  00F68C  72                 	db	114	;'r'
   913  00F68D  65                 	db	101	;'e'
   914  00F68E  20                 	db	32
   915  00F68F  44                 	db	68	;'D'
   916  00F690  65                 	db	101	;'e'
   917  00F691  74                 	db	116	;'t'
   918  00F692  65                 	db	101	;'e'
   919  00F693  63                 	db	99	;'c'
   920  00F694  74                 	db	116	;'t'
   921  00F695  65                 	db	101	;'e'
   922  00F696  64                 	db	100	;'d'
   923  00F697  20                 	db	32
   924  00F698  43                 	db	67	;'C'
   925  00F699  75                 	db	117	;'u'
   926  00F69A  72                 	db	114	;'r'
   927  00F69B  72                 	db	114	;'r'
   928  00F69C  65                 	db	101	;'e'
   929  00F69D  6E                 	db	110	;'n'
   930  00F69E  74                 	db	116	;'t'
   931  00F69F  3F                 	db	63	;'?'
   932  00F6A0  3A                 	db	58	;':'
   933  00F6A1  20                 	db	32
   934  00F6A2  52                 	db	82	;'R'
   935  00F6A3  65                 	db	101	;'e'
   936  00F6A4  74                 	db	116	;'t'
   937  00F6A5  75                 	db	117	;'u'
   938  00F6A6  72                 	db	114	;'r'
   939  00F6A7  6E                 	db	110	;'n'
   940  00F6A8  73                 	db	115	;'s'
   941  00F6A9  20                 	db	32
   942  00F6AA  6D                 	db	109	;'m'
   943  00F6AB  65                 	db	101	;'e'
   944  00F6AC  61                 	db	97	;'a'
   945  00F6AD  73                 	db	115	;'s'
   946  00F6AE  75                 	db	117	;'u'
   947  00F6AF  72                 	db	114	;'r'
   948  00F6B0  65                 	db	101	;'e'
   949  00F6B1  64                 	db	100	;'d'
   950  00F6B2  20                 	db	32
   951  00F6B3  6F                 	db	111	;'o'
   952  00F6B4  75                 	db	117	;'u'
   953  00F6B5  74                 	db	116	;'t'
   954  00F6B6  70                 	db	112	;'p'
   955  00F6B7  75                 	db	117	;'u'
   956  00F6B8  74                 	db	116	;'t'
   957  00F6B9  20                 	db	32
   958  00F6BA  63                 	db	99	;'c'
   959  00F6BB  75                 	db	117	;'u'
   960  00F6BC  72                 	db	114	;'r'
   961  00F6BD  72                 	db	114	;'r'
   962  00F6BE  65                 	db	101	;'e'
   963  00F6BF  6E                 	db	110	;'n'
   964  00F6C0  74                 	db	116	;'t'
   965  00F6C1  20                 	db	32
   966  00F6C2  69                 	db	105	;'i'
   967  00F6C3  6E                 	db	110	;'n'
   968  00F6C4  20                 	db	32
   969  00F6C5  61                 	db	97	;'a'
   970  00F6C6  6D                 	db	109	;'m'
   971  00F6C7  70                 	db	112	;'p'
   972  00F6C8  73                 	db	115	;'s'
   973  00F6C9  20                 	db	32
   974  00F6CA  61                 	db	97	;'a'
   975  00F6CB  73                 	db	115	;'s'
   976  00F6CC  20                 	db	32
   977  00F6CD  73                 	db	115	;'s'
   978  00F6CE  65                 	db	101	;'e'
   979  00F6CF  65                 	db	101	;'e'
   980  00F6D0  6E                 	db	110	;'n'
   981  00F6D1  20                 	db	32
   982  00F6D2  62                 	db	98	;'b'
   983  00F6D3  79                 	db	121	;'y'
   984  00F6D4  20                 	db	32
   985  00F6D5  41                 	db	65	;'A'
   986  00F6D6  44                 	db	68	;'D'
   987  00F6D7  43                 	db	67	;'C'
   988  00F6D8  0A                 	db	10
   989  00F6D9  0D                 	db	13
   990  00F6DA  20                 	db	32
   991  00F6DB  20                 	db	32
   992  00F6DC  20                 	db	32
   993  00F6DD  4D                 	db	77	;'M'
   994  00F6DE  65                 	db	101	;'e'
   995  00F6DF  61                 	db	97	;'a'
   996  00F6E0  73                 	db	115	;'s'
   997  00F6E1  75                 	db	117	;'u'
   998  00F6E2  72                 	db	114	;'r'
   999  00F6E3  65                 	db	101	;'e'
  1000  00F6E4  20                 	db	32
  1001  00F6E5  52                 	db	82	;'R'
  1002  00F6E6  4D                 	db	77	;'M'
  1003  00F6E7  53                 	db	83	;'S'
  1004  00F6E8  20                 	db	32
  1005  00F6E9  43                 	db	67	;'C'
  1006  00F6EA  75                 	db	117	;'u'
  1007  00F6EB  72                 	db	114	;'r'
  1008  00F6EC  72                 	db	114	;'r'
  1009  00F6ED  65                 	db	101	;'e'
  1010  00F6EE  6E                 	db	110	;'n'
  1011  00F6EF  74                 	db	116	;'t'
  1012  00F6F0  3F                 	db	63	;'?'
  1013  00F6F1  3A                 	db	58	;':'
  1014  00F6F2  20                 	db	32
  1015  00F6F3  52                 	db	82	;'R'
  1016  00F6F4  65                 	db	101	;'e'
  1017  00F6F5  74                 	db	116	;'t'
  1018  00F6F6  75                 	db	117	;'u'
  1019  00F6F7  72                 	db	114	;'r'
  1020  00F6F8  6E                 	db	110	;'n'
  1021  00F6F9  73                 	db	115	;'s'
  1022  00F6FA  20                 	db	32
  1023  00F6FB  74                 	db	116	;'t'
  1024  00F6FC  68                 	db	104	;'h'
  1025  00F6FD  65                 	db	101	;'e'
  1026  00F6FE  20                 	db	32
  1027  00F6FF  63                 	db	99	;'c'
  1028  00F700  61                 	db	97	;'a'
  1029  00F701  6C                 	db	108	;'l'
  1030  00F702  63                 	db	99	;'c'
  1031  00F703  75                 	db	117	;'u'
  1032  00F704  6C                 	db	108	;'l'
  1033  00F705  61                 	db	97	;'a'
  1034  00F706  74                 	db	116	;'t'
  1035  00F707  65                 	db	101	;'e'
  1036  00F708  64                 	db	100	;'d'
  1037  00F709  20                 	db	32
  1038  00F70A  52                 	db	82	;'R'
  1039  00F70B  4D                 	db	77	;'M'
  1040  00F70C  53                 	db	83	;'S'
  1041  00F70D  20                 	db	32
  1042  00F70E  6F                 	db	111	;'o'
  1043  00F70F  75                 	db	117	;'u'
  1044  00F710  74                 	db	116	;'t'
  1045  00F711  70                 	db	112	;'p'
  1046  00F712  75                 	db	117	;'u'
  1047  00F713  74                 	db	116	;'t'
  1048  00F714  20                 	db	32
  1049  00F715  63                 	db	99	;'c'
  1050  00F716  75                 	db	117	;'u'
  1051  00F717  72                 	db	114	;'r'
  1052  00F718  72                 	db	114	;'r'
  1053  00F719  65                 	db	101	;'e'
  1054  00F71A  6E                 	db	110	;'n'
  1055  00F71B  74                 	db	116	;'t'
  1056  00F71C  20                 	db	32
  1057  00F71D  66                 	db	102	;'f'
  1058  00F71E  72                 	db	114	;'r'
  1059  00F71F  6F                 	db	111	;'o'
  1060  00F720  6D                 	db	109	;'m'
  1061  00F721  20                 	db	32
  1062  00F722  6D                 	db	109	;'m'
  1063  00F723  65                 	db	101	;'e'
  1064  00F724  61                 	db	97	;'a'
  1065  00F725  73                 	db	115	;'s'
  1066  00F726  75                 	db	117	;'u'
  1067  00F727  72                 	db	114	;'r'
  1068  00F728  65                 	db	101	;'e'
  1069  00F729  6D                 	db	109	;'m'
  1070  00F72A  65                 	db	101	;'e'
  1071  00F72B  6E                 	db	110	;'n'
  1072  00F72C  74                 	db	116	;'t'
  1073  00F72D  73                 	db	115	;'s'
  1074  00F72E  20                 	db	32
  1075  00F72F  61                 	db	97	;'a'
  1076  00F730  6E                 	db	110	;'n'
  1077  00F731  64                 	db	100	;'d'
  1078  00F732  20                 	db	32
  1079  00F733  54                 	db	84	;'T'
  1080  00F734  52                 	db	82	;'R'
  1081  00F735  49                 	db	73	;'I'
  1082  00F736  41                 	db	65	;'A'
  1083  00F737  43                 	db	67	;'C'
  1084  00F738  20                 	db	32
  1085  00F739  66                 	db	102	;'f'
  1086  00F73A  69                 	db	105	;'i'
  1087  00F73B  72                 	db	114	;'r'
  1088  00F73C  69                 	db	105	;'i'
  1089  00F73D  6E                 	db	110	;'n'
  1090  00F73E  67                 	db	103	;'g'
  1091  00F73F  20                 	db	32
  1092  00F740  61                 	db	97	;'a'
  1093  00F741  6E                 	db	110	;'n'
  1094  00F742  67                 	db	103	;'g'
  1095  00F743  6C                 	db	108	;'l'
  1096  00F744  65                 	db	101	;'e'
  1097  00F745  0A                 	db	10
  1098  00F746  0D                 	db	13
  1099  00F747  20                 	db	32
  1100  00F748  20                 	db	32
  1101  00F749  20                 	db	32
  1102  00F74A  4D                 	db	77	;'M'
  1103  00F74B  65                 	db	101	;'e'
  1104  00F74C  61                 	db	97	;'a'
  1105  00F74D  73                 	db	115	;'s'
  1106  00F74E  75                 	db	117	;'u'
  1107  00F74F  72                 	db	114	;'r'
  1108  00F750  65                 	db	101	;'e'
  1109  00F751  20                 	db	32
  1110  00F752  52                 	db	82	;'R'
  1111  00F753  4D                 	db	77	;'M'
  1112  00F754  53                 	db	83	;'S'
  1113  00F755  20                 	db	32
  1114  00F756  56                 	db	86	;'V'
  1115  00F757  6F                 	db	111	;'o'
  1116  00F758  6C                 	db	108	;'l'
  1117  00F759  74                 	db	116	;'t'
  1118  00F75A  61                 	db	97	;'a'
  1119  00F75B  67                 	db	103	;'g'
  1120  00F75C  65                 	db	101	;'e'
  1121  00F75D  3F                 	db	63	;'?'
  1122  00F75E  3A                 	db	58	;':'
  1123  00F75F  20                 	db	32
  1124  00F760  52                 	db	82	;'R'
  1125  00F761  65                 	db	101	;'e'
  1126  00F762  74                 	db	116	;'t'
  1127  00F763  75                 	db	117	;'u'
  1128  00F764  72                 	db	114	;'r'
  1129  00F765  6E                 	db	110	;'n'
  1130  00F766  73                 	db	115	;'s'
  1131  00F767  20                 	db	32
  1132  00F768  74                 	db	116	;'t'
  1133  00F769  68                 	db	104	;'h'
  1134  00F76A  65                 	db	101	;'e'
  1135  00F76B  20                 	db	32
  1136  00F76C  63                 	db	99	;'c'
  1137  00F76D  61                 	db	97	;'a'
  1138  00F76E  6C                 	db	108	;'l'
  1139  00F76F  63                 	db	99	;'c'
  1140  00F770  75                 	db	117	;'u'
  1141  00F771  6C                 	db	108	;'l'
  1142  00F772  61                 	db	97	;'a'
  1143  00F773  74                 	db	116	;'t'
  1144  00F774  65                 	db	101	;'e'
  1145  00F775  64                 	db	100	;'d'
  1146  00F776  20                 	db	32
  1147  00F777  52                 	db	82	;'R'
  1148  00F778  4D                 	db	77	;'M'
  1149  00F779  53                 	db	83	;'S'
  1150  00F77A  20                 	db	32
  1151  00F77B  6F                 	db	111	;'o'
  1152  00F77C  75                 	db	117	;'u'
  1153  00F77D  74                 	db	116	;'t'
  1154  00F77E  70                 	db	112	;'p'
  1155  00F77F  75                 	db	117	;'u'
  1156  00F780  74                 	db	116	;'t'
  1157  00F781  20                 	db	32
  1158  00F782  76                 	db	118	;'v'
  1159  00F783  6F                 	db	111	;'o'
  1160  00F784  6C                 	db	108	;'l'
  1161  00F785  74                 	db	116	;'t'
  1162  00F786  61                 	db	97	;'a'
  1163  00F787  67                 	db	103	;'g'
  1164  00F788  65                 	db	101	;'e'
  1165  00F789  20                 	db	32
  1166  00F78A  66                 	db	102	;'f'
  1167  00F78B  72                 	db	114	;'r'
  1168  00F78C  6F                 	db	111	;'o'
  1169  00F78D  6D                 	db	109	;'m'
  1170  00F78E  20                 	db	32
  1171  00F78F  54                 	db	84	;'T'
  1172  00F790  52                 	db	82	;'R'
  1173  00F791  49                 	db	73	;'I'
  1174  00F792  41                 	db	65	;'A'
  1175  00F793  43                 	db	67	;'C'
  1176  00F794  20                 	db	32
  1177  00F795  66                 	db	102	;'f'
  1178  00F796  69                 	db	105	;'i'
  1179  00F797  72                 	db	114	;'r'
  1180  00F798  69                 	db	105	;'i'
  1181  00F799  6E                 	db	110	;'n'
  1182  00F79A  67                 	db	103	;'g'
  1183  00F79B  20                 	db	32
  1184  00F79C  61                 	db	97	;'a'
  1185  00F79D  6E                 	db	110	;'n'
  1186  00F79E  67                 	db	103	;'g'
  1187  00F79F  6C                 	db	108	;'l'
  1188  00F7A0  65                 	db	101	;'e'
  1189  00F7A1  0A                 	db	10
  1190  00F7A2  0D                 	db	13
  1191  00F7A3  20                 	db	32
  1192  00F7A4  20                 	db	32
  1193  00F7A5  20                 	db	32
  1194  00F7A6  4D                 	db	77	;'M'
  1195  00F7A7  65                 	db	101	;'e'
  1196  00F7A8  61                 	db	97	;'a'
  1197  00F7A9  73                 	db	115	;'s'
  1198  00F7AA  75                 	db	117	;'u'
  1199  00F7AB  72                 	db	114	;'r'
  1200  00F7AC  65                 	db	101	;'e'
  1201  00F7AD  20                 	db	32
  1202  00F7AE  46                 	db	70	;'F'
  1203  00F7AF  56                 	db	86	;'V'
  1204  00F7B0  52                 	db	82	;'R'
  1205  00F7B1  3F                 	db	63	;'?'
  1206  00F7B2  3A                 	db	58	;':'
  1207  00F7B3  20                 	db	32
  1208  00F7B4  52                 	db	82	;'R'
  1209  00F7B5  65                 	db	101	;'e'
  1210  00F7B6  74                 	db	116	;'t'
  1211  00F7B7  75                 	db	117	;'u'
  1212  00F7B8  72                 	db	114	;'r'
  1213  00F7B9  6E                 	db	110	;'n'
  1214  00F7BA  73                 	db	115	;'s'
  1215  00F7BB  20                 	db	32
  1216  00F7BC  74                 	db	116	;'t'
  1217  00F7BD  68                 	db	104	;'h'
  1218  00F7BE  65                 	db	101	;'e'
  1219  00F7BF  20                 	db	32
  1220  00F7C0  69                 	db	105	;'i'
  1221  00F7C1  6E                 	db	110	;'n'
  1222  00F7C2  74                 	db	116	;'t'
  1223  00F7C3  65                 	db	101	;'e'
  1224  00F7C4  72                 	db	114	;'r'
  1225  00F7C5  6E                 	db	110	;'n'
  1226  00F7C6  61                 	db	97	;'a'
  1227  00F7C7  6C                 	db	108	;'l'
  1228  00F7C8  20                 	db	32
  1229  00F7C9  66                 	db	102	;'f'
  1230  00F7CA  69                 	db	105	;'i'
  1231  00F7CB  78                 	db	120	;'x'
  1232  00F7CC  65                 	db	101	;'e'
  1233  00F7CD  64                 	db	100	;'d'
  1234  00F7CE  20                 	db	32
  1235  00F7CF  76                 	db	118	;'v'
  1236  00F7D0  6F                 	db	111	;'o'
  1237  00F7D1  6C                 	db	108	;'l'
  1238  00F7D2  74                 	db	116	;'t'
  1239  00F7D3  61                 	db	97	;'a'
  1240  00F7D4  67                 	db	103	;'g'
  1241  00F7D5  65                 	db	101	;'e'
  1242  00F7D6  20                 	db	32
  1243  00F7D7  72                 	db	114	;'r'
  1244  00F7D8  65                 	db	101	;'e'
  1245  00F7D9  66                 	db	102	;'f'
  1246  00F7DA  65                 	db	101	;'e'
  1247  00F7DB  72                 	db	114	;'r'
  1248  00F7DC  65                 	db	101	;'e'
  1249  00F7DD  6E                 	db	110	;'n'
  1250  00F7DE  63                 	db	99	;'c'
  1251  00F7DF  65                 	db	101	;'e'
  1252  00F7E0  20                 	db	32
  1253  00F7E1  62                 	db	98	;'b'
  1254  00F7E2  75                 	db	117	;'u'
  1255  00F7E3  66                 	db	102	;'f'
  1256  00F7E4  66                 	db	102	;'f'
  1257  00F7E5  65                 	db	101	;'e'
  1258  00F7E6  72                 	db	114	;'r'
  1259  00F7E7  20                 	db	32
  1260  00F7E8  31                 	db	49	;'1'
  1261  00F7E9  20                 	db	32
  1262  00F7EA  6F                 	db	111	;'o'
  1263  00F7EB  75                 	db	117	;'u'
  1264  00F7EC  74                 	db	116	;'t'
  1265  00F7ED  70                 	db	112	;'p'
  1266  00F7EE  75                 	db	117	;'u'
  1267  00F7EF  74                 	db	116	;'t'
  1268  00F7F0  20                 	db	32
  1269  00F7F1  69                 	db	105	;'i'
  1270  00F7F2  6E                 	db	110	;'n'
  1271  00F7F3  20                 	db	32
  1272  00F7F4  76                 	db	118	;'v'
  1273  00F7F5  6F                 	db	111	;'o'
  1274  00F7F6  6C                 	db	108	;'l'
  1275  00F7F7  74                 	db	116	;'t'
  1276  00F7F8  73                 	db	115	;'s'
  1277  00F7F9  0A                 	db	10
  1278  00F7FA  0D                 	db	13
  1279  00F7FB  20                 	db	32
  1280  00F7FC  20                 	db	32
  1281  00F7FD  20                 	db	32
  1282  00F7FE  4F                 	db	79	;'O'
  1283  00F7FF  6E                 	db	110	;'n'
  1284  00F800  20                 	db	32
  1285  00F801  54                 	db	84	;'T'
  1286  00F802  69                 	db	105	;'i'
  1287  00F803  6D                 	db	109	;'m'
  1288  00F804  65                 	db	101	;'e'
  1289  00F805  3F                 	db	63	;'?'
  1290  00F806  3A                 	db	58	;':'
  1291  00F807  20                 	db	32
  1292  00F808  52                 	db	82	;'R'
  1293  00F809  65                 	db	101	;'e'
  1294  00F80A  74                 	db	116	;'t'
  1295  00F80B  75                 	db	117	;'u'
  1296  00F80C  72                 	db	114	;'r'
  1297  00F80D  6E                 	db	110	;'n'
  1298  00F80E  73                 	db	115	;'s'
  1299  00F80F  20                 	db	32
  1300  00F810  64                 	db	100	;'d'
  1301  00F811  65                 	db	101	;'e'
  1302  00F812  76                 	db	118	;'v'
  1303  00F813  69                 	db	105	;'i'
  1304  00F814  63                 	db	99	;'c'
  1305  00F815  65                 	db	101	;'e'
  1306  00F816  20                 	db	32
  1307  00F817  6F                 	db	111	;'o'
  1308  00F818  6E                 	db	110	;'n'
  1309  00F819  20                 	db	32
  1310  00F81A  74                 	db	116	;'t'
  1311  00F81B  69                 	db	105	;'i'
  1312  00F81C  6D                 	db	109	;'m'
  1313  00F81D  65                 	db	101	;'e'
  1314  00F81E  20                 	db	32
  1315  00F81F  73                 	db	115	;'s'
  1316  00F820  69                 	db	105	;'i'
  1317  00F821  6E                 	db	110	;'n'
  1318  00F822  63                 	db	99	;'c'
  1319  00F823  65                 	db	101	;'e'
  1320  00F824  20                 	db	32
  1321  00F825  6C                 	db	108	;'l'
  1322  00F826  61                 	db	97	;'a'
  1323  00F827  73                 	db	115	;'s'
  1324  00F828  74                 	db	116	;'t'
  1325  00F829  20                 	db	32
  1326  00F82A  64                 	db	100	;'d'
  1327  00F82B  65                 	db	101	;'e'
  1328  00F82C  76                 	db	118	;'v'
  1329  00F82D  69                 	db	105	;'i'
  1330  00F82E  63                 	db	99	;'c'
  1331  00F82F  65                 	db	101	;'e'
  1332  00F830  20                 	db	32
  1333  00F831  72                 	db	114	;'r'
  1334  00F832  65                 	db	101	;'e'
  1335  00F833  73                 	db	115	;'s'
  1336  00F834  65                 	db	101	;'e'
  1337  00F835  74                 	db	116	;'t'
  1338  00F836  0A                 	db	10
  1339  00F837  0D                 	db	13
  1340  00F838  20                 	db	32
  1341  00F839  20                 	db	32
  1342  00F83A  20                 	db	32
  1343  00F83B  45                 	db	69	;'E'
  1344  00F83C  6E                 	db	110	;'n'
  1345  00F83D  61                 	db	97	;'a'
  1346  00F83E  62                 	db	98	;'b'
  1347  00F83F  6C                 	db	108	;'l'
  1348  00F840  65                 	db	101	;'e'
  1349  00F841  20                 	db	32
  1350  00F842  44                 	db	68	;'D'
  1351  00F843  69                 	db	105	;'i'
  1352  00F844  6D                 	db	109	;'m'
  1353  00F845  6D                 	db	109	;'m'
  1354  00F846  69                 	db	105	;'i'
  1355  00F847  6E                 	db	110	;'n'
  1356  00F848  67                 	db	103	;'g'
  1357  00F849  3A                 	db	58	;':'
  1358  00F84A  20                 	db	32
  1359  00F84B  45                 	db	69	;'E'
  1360  00F84C  6E                 	db	110	;'n'
  1361  00F84D  61                 	db	97	;'a'
  1362  00F84E  62                 	db	98	;'b'
  1363  00F84F  6C                 	db	108	;'l'
  1364  00F850  65                 	db	101	;'e'
  1365  00F851  20                 	db	32
  1366  00F852  54                 	db	84	;'T'
  1367  00F853  52                 	db	82	;'R'
  1368  00F854  49                 	db	73	;'I'
  1369  00F855  41                 	db	65	;'A'
  1370  00F856  43                 	db	67	;'C'
  1371  00F857  20                 	db	32
  1372  00F858  6F                 	db	111	;'o'
  1373  00F859  75                 	db	117	;'u'
  1374  00F85A  74                 	db	116	;'t'
  1375  00F85B  70                 	db	112	;'p'
  1376  00F85C  75                 	db	117	;'u'
  1377  00F85D  74                 	db	116	;'t'
  1378  00F85E  20                 	db	32
  1379  00F85F  64                 	db	100	;'d'
  1380  00F860  69                 	db	105	;'i'
  1381  00F861  6D                 	db	109	;'m'
  1382  00F862  6D                 	db	109	;'m'
  1383  00F863  69                 	db	105	;'i'
  1384  00F864  6E                 	db	110	;'n'
  1385  00F865  67                 	db	103	;'g'
  1386  00F866  0A                 	db	10
  1387  00F867  0D                 	db	13
  1388  00F868  20                 	db	32
  1389  00F869  20                 	db	32
  1390  00F86A  20                 	db	32
  1391  00F86B  44                 	db	68	;'D'
  1392  00F86C  69                 	db	105	;'i'
  1393  00F86D  73                 	db	115	;'s'
  1394  00F86E  61                 	db	97	;'a'
  1395  00F86F  62                 	db	98	;'b'
  1396  00F870  6C                 	db	108	;'l'
  1397  00F871  65                 	db	101	;'e'
  1398  00F872  20                 	db	32
  1399  00F873  44                 	db	68	;'D'
  1400  00F874  69                 	db	105	;'i'
  1401  00F875  6D                 	db	109	;'m'
  1402  00F876  6D                 	db	109	;'m'
  1403  00F877  69                 	db	105	;'i'
  1404  00F878  6E                 	db	110	;'n'
  1405  00F879  67                 	db	103	;'g'
  1406  00F87A  3A                 	db	58	;':'
  1407  00F87B  20                 	db	32
  1408  00F87C  44                 	db	68	;'D'
  1409  00F87D  69                 	db	105	;'i'
  1410  00F87E  73                 	db	115	;'s'
  1411  00F87F  61                 	db	97	;'a'
  1412  00F880  62                 	db	98	;'b'
  1413  00F881  6C                 	db	108	;'l'
  1414  00F882  65                 	db	101	;'e'
  1415  00F883  20                 	db	32
  1416  00F884  54                 	db	84	;'T'
  1417  00F885  52                 	db	82	;'R'
  1418  00F886  49                 	db	73	;'I'
  1419  00F887  41                 	db	65	;'A'
  1420  00F888  43                 	db	67	;'C'
  1421  00F889  20                 	db	32
  1422  00F88A  6F                 	db	111	;'o'
  1423  00F88B  75                 	db	117	;'u'
  1424  00F88C  74                 	db	116	;'t'
  1425  00F88D  70                 	db	112	;'p'
  1426  00F88E  75                 	db	117	;'u'
  1427  00F88F  74                 	db	116	;'t'
  1428  00F890  20                 	db	32
  1429  00F891  64                 	db	100	;'d'
  1430  00F892  69                 	db	105	;'i'
  1431  00F893  6D                 	db	109	;'m'
  1432  00F894  6D                 	db	109	;'m'
  1433  00F895  69                 	db	105	;'i'
  1434  00F896  6E                 	db	110	;'n'
  1435  00F897  67                 	db	103	;'g'
  1436  00F898  0A                 	db	10
  1437  00F899  0D                 	db	13
  1438  00F89A  20                 	db	32
  1439  00F89B  20                 	db	32
  1440  00F89C  20                 	db	32
  1441  00F89D  45                 	db	69	;'E'
  1442  00F89E  6E                 	db	110	;'n'
  1443  00F89F  61                 	db	97	;'a'
  1444  00F8A0  62                 	db	98	;'b'
  1445  00F8A1  6C                 	db	108	;'l'
  1446  00F8A2  65                 	db	101	;'e'
  1447  00F8A3  20                 	db	32
  1448  00F8A4  4C                 	db	76	;'L'
  1449  00F8A5  6F                 	db	111	;'o'
  1450  00F8A6  61                 	db	97	;'a'
  1451  00F8A7  64                 	db	100	;'d'
  1452  00F8A8  3A                 	db	58	;':'
  1453  00F8A9  20                 	db	32
  1454  00F8AA  45                 	db	69	;'E'
  1455  00F8AB  6E                 	db	110	;'n'
  1456  00F8AC  61                 	db	97	;'a'
  1457  00F8AD  62                 	db	98	;'b'
  1458  00F8AE  6C                 	db	108	;'l'
  1459  00F8AF  65                 	db	101	;'e'
  1460  00F8B0  73                 	db	115	;'s'
  1461  00F8B1  20                 	db	32
  1462  00F8B2  74                 	db	116	;'t'
  1463  00F8B3  68                 	db	104	;'h'
  1464  00F8B4  65                 	db	101	;'e'
  1465  00F8B5  20                 	db	32
  1466  00F8B6  6F                 	db	111	;'o'
  1467  00F8B7  75                 	db	117	;'u'
  1468  00F8B8  74                 	db	116	;'t'
  1469  00F8B9  70                 	db	112	;'p'
  1470  00F8BA  75                 	db	117	;'u'
  1471  00F8BB  74                 	db	116	;'t'
  1472  00F8BC  20                 	db	32
  1473  00F8BD  54                 	db	84	;'T'
  1474  00F8BE  52                 	db	82	;'R'
  1475  00F8BF  49                 	db	73	;'I'
  1476  00F8C0  41                 	db	65	;'A'
  1477  00F8C1  43                 	db	67	;'C'
  1478  00F8C2  20                 	db	32
  1479  00F8C3  77                 	db	119	;'w'
  1480  00F8C4  69                 	db	105	;'i'
  1481  00F8C5  74                 	db	116	;'t'
  1482  00F8C6  68                 	db	104	;'h'
  1483  00F8C7  20                 	db	32
  1484  00F8C8  6F                 	db	111	;'o'
  1485  00F8C9  72                 	db	114	;'r'
  1486  00F8CA  20                 	db	32
  1487  00F8CB  77                 	db	119	;'w'
  1488  00F8CC  69                 	db	105	;'i'
  1489  00F8CD  74                 	db	116	;'t'
  1490  00F8CE  68                 	db	104	;'h'
  1491  00F8CF  6F                 	db	111	;'o'
  1492  00F8D0  75                 	db	117	;'u'
  1493  00F8D1  74                 	db	116	;'t'
  1494  00F8D2  20                 	db	32
  1495  00F8D3  64                 	db	100	;'d'
  1496  00F8D4  69                 	db	105	;'i'
  1497  00F8D5  6D                 	db	109	;'m'
  1498  00F8D6  6D                 	db	109	;'m'
  1499  00F8D7  69                 	db	105	;'i'
  1500  00F8D8  6E                 	db	110	;'n'
  1501  00F8D9  67                 	db	103	;'g'
  1502  00F8DA  0A                 	db	10
  1503  00F8DB  0D                 	db	13
  1504  00F8DC  20                 	db	32
  1505  00F8DD  20                 	db	32
  1506  00F8DE  20                 	db	32
  1507  00F8DF  44                 	db	68	;'D'
  1508  00F8E0  69                 	db	105	;'i'
  1509  00F8E1  73                 	db	115	;'s'
  1510  00F8E2  61                 	db	97	;'a'
  1511  00F8E3  62                 	db	98	;'b'
  1512  00F8E4  6C                 	db	108	;'l'
  1513  00F8E5  65                 	db	101	;'e'
  1514  00F8E6  20                 	db	32
  1515  00F8E7  4C                 	db	76	;'L'
  1516  00F8E8  6F                 	db	111	;'o'
  1517  00F8E9  61                 	db	97	;'a'
  1518  00F8EA  64                 	db	100	;'d'
  1519  00F8EB  3A                 	db	58	;':'
  1520  00F8EC  20                 	db	32
  1521  00F8ED  44                 	db	68	;'D'
  1522  00F8EE  69                 	db	105	;'i'
  1523  00F8EF  73                 	db	115	;'s'
  1524  00F8F0  61                 	db	97	;'a'
  1525  00F8F1  62                 	db	98	;'b'
  1526  00F8F2  6C                 	db	108	;'l'
  1527  00F8F3  65                 	db	101	;'e'
  1528  00F8F4  73                 	db	115	;'s'
  1529  00F8F5  20                 	db	32
  1530  00F8F6  74                 	db	116	;'t'
  1531  00F8F7  68                 	db	104	;'h'
  1532  00F8F8  65                 	db	101	;'e'
  1533  00F8F9  20                 	db	32
  1534  00F8FA  6F                 	db	111	;'o'
  1535  00F8FB  75                 	db	117	;'u'
  1536  00F8FC  74                 	db	116	;'t'
  1537  00F8FD  70                 	db	112	;'p'
  1538  00F8FE  75                 	db	117	;'u'
  1539  00F8FF  74                 	db	116	;'t'
  1540  00F900  20                 	db	32
  1541  00F901  54                 	db	84	;'T'
  1542  00F902  52                 	db	82	;'R'
  1543  00F903  49                 	db	73	;'I'
  1544  00F904  41                 	db	65	;'A'
  1545  00F905  43                 	db	67	;'C'
  1546  00F906  20                 	db	32
  1547  00F907  63                 	db	99	;'c'
  1548  00F908  6F                 	db	111	;'o'
  1549  00F909  6D                 	db	109	;'m'
  1550  00F90A  70                 	db	112	;'p'
  1551  00F90B  6C                 	db	108	;'l'
  1552  00F90C  65                 	db	101	;'e'
  1553  00F90D  74                 	db	116	;'t'
  1554  00F90E  65                 	db	101	;'e'
  1555  00F90F  6C                 	db	108	;'l'
  1556  00F910  79                 	db	121	;'y'
  1557  00F911  0A                 	db	10
  1558  00F912  0D                 	db	13
  1559  00F913  20                 	db	32
  1560  00F914  20                 	db	32
  1561  00F915  20                 	db	32
  1562  00F916  53                 	db	83	;'S'
  1563  00F917  65                 	db	101	;'e'
  1564  00F918  74                 	db	116	;'t'
  1565  00F919  20                 	db	32
  1566  00F91A  44                 	db	68	;'D'
  1567  00F91B  69                 	db	105	;'i'
  1568  00F91C  6D                 	db	109	;'m'
  1569  00F91D  6D                 	db	109	;'m'
  1570  00F91E  69                 	db	105	;'i'
  1571  00F91F  6E                 	db	110	;'n'
  1572  00F920  67                 	db	103	;'g'
  1573  00F921  20                 	db	32
  1574  00F922  50                 	db	80	;'P'
  1575  00F923  65                 	db	101	;'e'
  1576  00F924  72                 	db	114	;'r'
  1577  00F925  63                 	db	99	;'c'
  1578  00F926  65                 	db	101	;'e'
  1579  00F927  6E                 	db	110	;'n'
  1580  00F928  74                 	db	116	;'t'
  1581  00F929  61                 	db	97	;'a'
  1582  00F92A  67                 	db	103	;'g'
  1583  00F92B  65                 	db	101	;'e'
  1584  00F92C  20                 	db	32
  1585  00F92D  3C                 	db	60	;'<'
  1586  00F92E  78                 	db	120	;'x'
  1587  00F92F  3E                 	db	62	;'>'
  1588  00F930  3A                 	db	58	;':'
  1589  00F931  20                 	db	32
  1590  00F932  53                 	db	83	;'S'
  1591  00F933  65                 	db	101	;'e'
  1592  00F934  74                 	db	116	;'t'
  1593  00F935  73                 	db	115	;'s'
  1594  00F936  20                 	db	32
  1595  00F937  74                 	db	116	;'t'
  1596  00F938  68                 	db	104	;'h'
  1597  00F939  65                 	db	101	;'e'
  1598  00F93A  20                 	db	32
  1599  00F93B  6F                 	db	111	;'o'
  1600  00F93C  75                 	db	117	;'u'
  1601  00F93D  74                 	db	116	;'t'
  1602  00F93E  70                 	db	112	;'p'
  1603  00F93F  75                 	db	117	;'u'
  1604  00F940  74                 	db	116	;'t'
  1605  00F941  20                 	db	32
  1606  00F942  64                 	db	100	;'d'
  1607  00F943  69                 	db	105	;'i'
  1608  00F944  6D                 	db	109	;'m'
  1609  00F945  6D                 	db	109	;'m'
  1610  00F946  69                 	db	105	;'i'
  1611  00F947  6E                 	db	110	;'n'
  1612  00F948  67                 	db	103	;'g'
  1613  00F949  20                 	db	32
  1614  00F94A  70                 	db	112	;'p'
  1615  00F94B  65                 	db	101	;'e'
  1616  00F94C  72                 	db	114	;'r'
  1617  00F94D  63                 	db	99	;'c'
  1618  00F94E  65                 	db	101	;'e'
  1619  00F94F  6E                 	db	110	;'n'
  1620  00F950  74                 	db	116	;'t'
  1621  00F951  61                 	db	97	;'a'
  1622  00F952  67                 	db	103	;'g'
  1623  00F953  65                 	db	101	;'e'
  1624  00F954  20                 	db	32
  1625  00F955  61                 	db	97	;'a'
  1626  00F956  73                 	db	115	;'s'
  1627  00F957  20                 	db	32
  1628  00F958  78                 	db	120	;'x'
  1629  00F959  20                 	db	32
  1630  00F95A  70                 	db	112	;'p'
  1631  00F95B  65                 	db	101	;'e'
  1632  00F95C  72                 	db	114	;'r'
  1633  00F95D  63                 	db	99	;'c'
  1634  00F95E  65                 	db	101	;'e'
  1635  00F95F  6E                 	db	110	;'n'
  1636  00F960  74                 	db	116	;'t'
  1637  00F961  0A                 	db	10
  1638  00F962  0D                 	db	13
  1639  00F963  20                 	db	32
  1640  00F964  20                 	db	32
  1641  00F965  20                 	db	32
  1642  00F966  48                 	db	72	;'H'
  1643  00F967  65                 	db	101	;'e'
  1644  00F968  6C                 	db	108	;'l'
  1645  00F969  70                 	db	112	;'p'
  1646  00F96A  3A                 	db	58	;':'
  1647  00F96B  20                 	db	32
  1648  00F96C  54                 	db	84	;'T'
  1649  00F96D  68                 	db	104	;'h'
  1650  00F96E  69                 	db	105	;'i'
  1651  00F96F  73                 	db	115	;'s'
  1652  00F970  20                 	db	32
  1653  00F971  6D                 	db	109	;'m'
  1654  00F972  65                 	db	101	;'e'
  1655  00F973  73                 	db	115	;'s'
  1656  00F974  73                 	db	115	;'s'
  1657  00F975  61                 	db	97	;'a'
  1658  00F976  67                 	db	103	;'g'
  1659  00F977  65                 	db	101	;'e'
  1660  00F978  2C                 	db	44
  1661  00F979  20                 	db	32
  1662  00F97A  6C                 	db	108	;'l'
  1663  00F97B  69                 	db	105	;'i'
  1664  00F97C  73                 	db	115	;'s'
  1665  00F97D  74                 	db	116	;'t'
  1666  00F97E  73                 	db	115	;'s'
  1667  00F97F  20                 	db	32
  1668  00F980  63                 	db	99	;'c'
  1669  00F981  6F                 	db	111	;'o'
  1670  00F982  6D                 	db	109	;'m'
  1671  00F983  6D                 	db	109	;'m'
  1672  00F984  61                 	db	97	;'a'
  1673  00F985  6E                 	db	110	;'n'
  1674  00F986  64                 	db	100	;'d'
  1675  00F987  73                 	db	115	;'s'
  1676  00F988  0A                 	db	10
  1677  00F989  0D                 	db	13
  1678  00F98A  00                 	db	0
  1679  00F98B  20                 	db	32
  1680  00F98C  20                 	db	32
  1681  00F98D  20                 	db	32
  1682  00F98E  20                 	db	32
  1683  00F98F  42                 	db	66	;'B'
  1684  00F990  6F                 	db	111	;'o'
  1685  00F991  6F                 	db	111	;'o'
  1686  00F992  74                 	db	116	;'t'
  1687  00F993  20                 	db	32
  1688  00F994  63                 	db	99	;'c'
  1689  00F995  6F                 	db	111	;'o'
  1690  00F996  6D                 	db	109	;'m'
  1691  00F997  70                 	db	112	;'p'
  1692  00F998  6C                 	db	108	;'l'
  1693  00F999  65                 	db	101	;'e'
  1694  00F99A  74                 	db	116	;'t'
  1695  00F99B  65                 	db	101	;'e'
  1696  00F99C  0A                 	db	10
  1697  00F99D  0D                 	db	13
  1698  00F99E  20                 	db	32
  1699  00F99F  20                 	db	32
  1700  00F9A0  20                 	db	32
  1701  00F9A1  20                 	db	32
  1702  00F9A2  50                 	db	80	;'P'
  1703  00F9A3  49                 	db	73	;'I'
  1704  00F9A4  43                 	db	67	;'C'
  1705  00F9A5  31                 	db	49	;'1'
  1706  00F9A6  38                 	db	56	;'8'
  1707  00F9A7  46                 	db	70	;'F'
  1708  00F9A8  36                 	db	54	;'6'
  1709  00F9A9  37                 	db	55	;'7'
  1710  00F9AA  4B                 	db	75	;'K'
  1711  00F9AB  34                 	db	52	;'4'
  1712  00F9AC  30                 	db	48	;'0'
  1713  00F9AD  20                 	db	32
  1714  00F9AE  6D                 	db	109	;'m'
  1715  00F9AF  54                 	db	84	;'T'
  1716  00F9B0  6F                 	db	111	;'o'
  1717  00F9B1  75                 	db	117	;'u'
  1718  00F9B2  63                 	db	99	;'c'
  1719  00F9B3  68                 	db	104	;'h'
  1720  00F9B4  20                 	db	32
  1721  00F9B5  54                 	db	84	;'T'
  1722  00F9B6  65                 	db	101	;'e'
  1723  00F9B7  73                 	db	115	;'s'
  1724  00F9B8  74                 	db	116	;'t'
  1725  00F9B9  20                 	db	32
  1726  00F9BA  42                 	db	66	;'B'
  1727  00F9BB  6F                 	db	111	;'o'
  1728  00F9BC  61                 	db	97	;'a'
  1729  00F9BD  72                 	db	114	;'r'
  1730  00F9BE  64                 	db	100	;'d'
  1731  00F9BF  0A                 	db	10
  1732  00F9C0  0D                 	db	13
  1733  00F9C1  20                 	db	32
  1734  00F9C2  20                 	db	32
  1735  00F9C3  20                 	db	32
  1736  00F9C4  20                 	db	32
  1737  00F9C5  45                 	db	69	;'E'
  1738  00F9C6  76                 	db	118	;'v'
  1739  00F9C7  61                 	db	97	;'a'
  1740  00F9C8  6C                 	db	108	;'l'
  1741  00F9C9  75                 	db	117	;'u'
  1742  00F9CA  61                 	db	97	;'a'
  1743  00F9CB  74                 	db	116	;'t'
  1744  00F9CC  65                 	db	101	;'e'
  1745  00F9CD  73                 	db	115	;'s'
  1746  00F9CE  20                 	db	32
  1747  00F9CF  74                 	db	116	;'t'
  1748  00F9D0  68                 	db	104	;'h'
  1749  00F9D1  65                 	db	101	;'e'
  1750  00F9D2  20                 	db	32
  1751  00F9D3  6D                 	db	109	;'m'
  1752  00F9D4  54                 	db	84	;'T'
  1753  00F9D5  6F                 	db	111	;'o'
  1754  00F9D6  75                 	db	117	;'u'
  1755  00F9D7  63                 	db	99	;'c'
  1756  00F9D8  68                 	db	104	;'h'
  1757  00F9D9  20                 	db	32
  1758  00F9DA  63                 	db	99	;'c'
  1759  00F9DB  61                 	db	97	;'a'
  1760  00F9DC  70                 	db	112	;'p'
  1761  00F9DD  61                 	db	97	;'a'
  1762  00F9DE  63                 	db	99	;'c'
  1763  00F9DF  69                 	db	105	;'i'
  1764  00F9E0  74                 	db	116	;'t'
  1765  00F9E1  69                 	db	105	;'i'
  1766  00F9E2  76                 	db	118	;'v'
  1767  00F9E3  65                 	db	101	;'e'
  1768  00F9E4  20                 	db	32
  1769  00F9E5  74                 	db	116	;'t'
  1770  00F9E6  6F                 	db	111	;'o'
  1771  00F9E7  75                 	db	117	;'u'
  1772  00F9E8  63                 	db	99	;'c'
  1773  00F9E9  68                 	db	104	;'h'
  1774  00F9EA  20                 	db	32
  1775  00F9EB  6C                 	db	108	;'l'
  1776  00F9EC  69                 	db	105	;'i'
  1777  00F9ED  62                 	db	98	;'b'
  1778  00F9EE  72                 	db	114	;'r'
  1779  00F9EF  61                 	db	97	;'a'
  1780  00F9F0  72                 	db	114	;'r'
  1781  00F9F1  79                 	db	121	;'y'
  1782  00F9F2  20                 	db	32
  1783  00F9F3  64                 	db	100	;'d'
  1784  00F9F4  69                 	db	105	;'i'
  1785  00F9F5  73                 	db	115	;'s'
  1786  00F9F6  74                 	db	116	;'t'
  1787  00F9F7  72                 	db	114	;'r'
  1788  00F9F8  69                 	db	105	;'i'
  1789  00F9F9  62                 	db	98	;'b'
  1790  00F9FA  75                 	db	117	;'u'
  1791  00F9FB  74                 	db	116	;'t'
  1792  00F9FC  65                 	db	101	;'e'
  1793  00F9FD  64                 	db	100	;'d'
  1794  00F9FE  20                 	db	32
  1795  00F9FF  62                 	db	98	;'b'
  1796  00FA00  79                 	db	121	;'y'
  1797  00FA01  20                 	db	32
  1798  00FA02  4D                 	db	77	;'M'
  1799  00FA03  69                 	db	105	;'i'
  1800  00FA04  63                 	db	99	;'c'
  1801  00FA05  72                 	db	114	;'r'
  1802  00FA06  6F                 	db	111	;'o'
  1803  00FA07  63                 	db	99	;'c'
  1804  00FA08  68                 	db	104	;'h'
  1805  00FA09  69                 	db	105	;'i'
  1806  00FA0A  70                 	db	112	;'p'
  1807  00FA0B  0A                 	db	10
  1808  00FA0C  0D                 	db	13
  1809  00FA0D  20                 	db	32
  1810  00FA0E  20                 	db	32
  1811  00FA0F  20                 	db	32
  1812  00FA10  20                 	db	32
  1813  00FA11  53                 	db	83	;'S'
  1814  00FA12  65                 	db	101	;'e'
  1815  00FA13  74                 	db	116	;'t'
  1816  00FA14  73                 	db	115	;'s'
  1817  00FA15  20                 	db	32
  1818  00FA16  74                 	db	116	;'t'
  1819  00FA17  68                 	db	104	;'h'
  1820  00FA18  65                 	db	101	;'e'
  1821  00FA19  20                 	db	32
  1822  00FA1A  73                 	db	115	;'s'
  1823  00FA1B  74                 	db	116	;'t'
  1824  00FA1C  61                 	db	97	;'a'
  1825  00FA1D  74                 	db	116	;'t'
  1826  00FA1E  65                 	db	101	;'e'
  1827  00FA1F  20                 	db	32
  1828  00FA20  6F                 	db	111	;'o'
  1829  00FA21  66                 	db	102	;'f'
  1830  00FA22  20                 	db	32
  1831  00FA23  66                 	db	102	;'f'
  1832  00FA24  69                 	db	105	;'i'
  1833  00FA25  76                 	db	118	;'v'
  1834  00FA26  65                 	db	101	;'e'
  1835  00FA27  20                 	db	32
  1836  00FA28  4C                 	db	76	;'L'
  1837  00FA29  45                 	db	69	;'E'
  1838  00FA2A  44                 	db	68	;'D'
  1839  00FA2B  73                 	db	115	;'s'
  1840  00FA2C  20                 	db	32
  1841  00FA2D  62                 	db	98	;'b'
  1842  00FA2E  61                 	db	97	;'a'
  1843  00FA2F  73                 	db	115	;'s'
  1844  00FA30  65                 	db	101	;'e'
  1845  00FA31  64                 	db	100	;'d'
  1846  00FA32  20                 	db	32
  1847  00FA33  6F                 	db	111	;'o'
  1848  00FA34  6E                 	db	110	;'n'
  1849  00FA35  20                 	db	32
  1850  00FA36  6D                 	db	109	;'m'
  1851  00FA37  54                 	db	84	;'T'
  1852  00FA38  6F                 	db	111	;'o'
  1853  00FA39  75                 	db	117	;'u'
  1854  00FA3A  63                 	db	99	;'c'
  1855  00FA3B  68                 	db	104	;'h'
  1856  00FA3C  20                 	db	32
  1857  00FA3D  63                 	db	99	;'c'
  1858  00FA3E  61                 	db	97	;'a'
  1859  00FA3F  70                 	db	112	;'p'
  1860  00FA40  61                 	db	97	;'a'
  1861  00FA41  63                 	db	99	;'c'
  1862  00FA42  69                 	db	105	;'i'
  1863  00FA43  74                 	db	116	;'t'
  1864  00FA44  69                 	db	105	;'i'
  1865  00FA45  76                 	db	118	;'v'
  1866  00FA46  65                 	db	101	;'e'
  1867  00FA47  20                 	db	32
  1868  00FA48  70                 	db	112	;'p'
  1869  00FA49  75                 	db	117	;'u'
  1870  00FA4A  73                 	db	115	;'s'
  1871  00FA4B  68                 	db	104	;'h'
  1872  00FA4C  62                 	db	98	;'b'
  1873  00FA4D  75                 	db	117	;'u'
  1874  00FA4E  74                 	db	116	;'t'
  1875  00FA4F  74                 	db	116	;'t'
  1876  00FA50  6F                 	db	111	;'o'
  1877  00FA51  6E                 	db	110	;'n'
  1878  00FA52  73                 	db	115	;'s'
  1879  00FA53  0A                 	db	10
  1880  00FA54  0D                 	db	13
  1881  00FA55  20                 	db	32
  1882  00FA56  20                 	db	32
  1883  00FA57  20                 	db	32
  1884  00FA58  20                 	db	32
  1885  00FA59  42                 	db	66	;'B'
  1886  00FA5A  61                 	db	97	;'a'
  1887  00FA5B  75                 	db	117	;'u'
  1888  00FA5C  64                 	db	100	;'d'
  1889  00FA5D  20                 	db	32
  1890  00FA5E  72                 	db	114	;'r'
  1891  00FA5F  61                 	db	97	;'a'
  1892  00FA60  74                 	db	116	;'t'
  1893  00FA61  65                 	db	101	;'e'
  1894  00FA62  3A                 	db	58	;':'
  1895  00FA63  20                 	db	32
  1896  00FA64  31                 	db	49	;'1'
  1897  00FA65  31                 	db	49	;'1'
  1898  00FA66  35                 	db	53	;'5'
  1899  00FA67  32                 	db	50	;'2'
  1900  00FA68  30                 	db	48	;'0'
  1901  00FA69  30                 	db	48	;'0'
  1902  00FA6A  20                 	db	32
  1903  00FA6B  62                 	db	98	;'b'
  1904  00FA6C  70                 	db	112	;'p'
  1905  00FA6D  73                 	db	115	;'s'
  1906  00FA6E  0A                 	db	10
  1907  00FA6F  0D                 	db	13
  1908  00FA70  20                 	db	32
  1909  00FA71  20                 	db	32
  1910  00FA72  20                 	db	32
  1911  00FA73  20                 	db	32
  1912  00FA74  4E                 	db	78	;'N'
  1913  00FA75  6F                 	db	111	;'o'
  1914  00FA76  20                 	db	32
  1915  00FA77  70                 	db	112	;'p'
  1916  00FA78  61                 	db	97	;'a'
  1917  00FA79  72                 	db	114	;'r'
  1918  00FA7A  69                 	db	105	;'i'
  1919  00FA7B  74                 	db	116	;'t'
  1920  00FA7C  79                 	db	121	;'y'
  1921  00FA7D  2C                 	db	44
  1922  00FA7E  20                 	db	32
  1923  00FA7F  38                 	db	56	;'8'
  1924  00FA80  20                 	db	32
  1925  00FA81  62                 	db	98	;'b'
  1926  00FA82  69                 	db	105	;'i'
  1927  00FA83  74                 	db	116	;'t'
  1928  00FA84  73                 	db	115	;'s'
  1929  00FA85  2C                 	db	44
  1930  00FA86  20                 	db	32
  1931  00FA87  6E                 	db	110	;'n'
  1932  00FA88  6F                 	db	111	;'o'
  1933  00FA89  20                 	db	32
  1934  00FA8A  66                 	db	102	;'f'
  1935  00FA8B  6C                 	db	108	;'l'
  1936  00FA8C  6F                 	db	111	;'o'
  1937  00FA8D  77                 	db	119	;'w'
  1938  00FA8E  20                 	db	32
  1939  00FA8F  63                 	db	99	;'c'
  1940  00FA90  6F                 	db	111	;'o'
  1941  00FA91  6E                 	db	110	;'n'
  1942  00FA92  74                 	db	116	;'t'
  1943  00FA93  72                 	db	114	;'r'
  1944  00FA94  6F                 	db	111	;'o'
  1945  00FA95  6C                 	db	108	;'l'
  1946  00FA96  2C                 	db	44
  1947  00FA97  20                 	db	32
  1948  00FA98  31                 	db	49	;'1'
  1949  00FA99  20                 	db	32
  1950  00FA9A  73                 	db	115	;'s'
  1951  00FA9B  74                 	db	116	;'t'
  1952  00FA9C  6F                 	db	111	;'o'
  1953  00FA9D  70                 	db	112	;'p'
  1954  00FA9E  20                 	db	32
  1955  00FA9F  62                 	db	98	;'b'
  1956  00FAA0  69                 	db	105	;'i'
  1957  00FAA1  74                 	db	116	;'t'
  1958  00FAA2  0A                 	db	10
  1959  00FAA3  0D                 	db	13
  1960  00FAA4  20                 	db	32
  1961  00FAA5  20                 	db	32
  1962  00FAA6  20                 	db	32
  1963  00FAA7  20                 	db	32
  1964  00FAA8  43                 	db	67	;'C'
  1965  00FAA9  6F                 	db	111	;'o'
  1966  00FAAA  6D                 	db	109	;'m'
  1967  00FAAB  6D                 	db	109	;'m'
  1968  00FAAC  61                 	db	97	;'a'
  1969  00FAAD  6E                 	db	110	;'n'
  1970  00FAAE  64                 	db	100	;'d'
  1971  00FAAF  73                 	db	115	;'s'
  1972  00FAB0  20                 	db	32
  1973  00FAB1  61                 	db	97	;'a'
  1974  00FAB2  72                 	db	114	;'r'
  1975  00FAB3  65                 	db	101	;'e'
  1976  00FAB4  20                 	db	32
  1977  00FAB5  63                 	db	99	;'c'
  1978  00FAB6  61                 	db	97	;'a'
  1979  00FAB7  73                 	db	115	;'s'
  1980  00FAB8  65                 	db	101	;'e'
  1981  00FAB9  20                 	db	32
  1982  00FABA  73                 	db	115	;'s'
  1983  00FABB  65                 	db	101	;'e'
  1984  00FABC  6E                 	db	110	;'n'
  1985  00FABD  73                 	db	115	;'s'
  1986  00FABE  69                 	db	105	;'i'
  1987  00FABF  74                 	db	116	;'t'
  1988  00FAC0  69                 	db	105	;'i'
  1989  00FAC1  76                 	db	118	;'v'
  1990  00FAC2  65                 	db	101	;'e'
  1991  00FAC3  0A                 	db	10
  1992  00FAC4  0D                 	db	13
  1993  00FAC5  20                 	db	32
  1994  00FAC6  20                 	db	32
  1995  00FAC7  20                 	db	32
  1996  00FAC8  20                 	db	32
  1997  00FAC9  45                 	db	69	;'E'
  1998  00FACA  6E                 	db	110	;'n'
  1999  00FACB  74                 	db	116	;'t'
  2000  00FACC  65                 	db	101	;'e'
  2001  00FACD  72                 	db	114	;'r'
  2002  00FACE  20                 	db	32
  2003  00FACF  61                 	db	97	;'a'
  2004  00FAD0  20                 	db	32
  2005  00FAD1  63                 	db	99	;'c'
  2006  00FAD2  6F                 	db	111	;'o'
  2007  00FAD3  6D                 	db	109	;'m'
  2008  00FAD4  6D                 	db	109	;'m'
  2009  00FAD5  61                 	db	97	;'a'
  2010  00FAD6  6E                 	db	110	;'n'
  2011  00FAD7  64                 	db	100	;'d'
  2012  00FAD8  2C                 	db	44
  2013  00FAD9  20                 	db	32
  2014  00FADA  6F                 	db	111	;'o'
  2015  00FADB  72                 	db	114	;'r'
  2016  00FADC  20                 	db	32
  2017  00FADD  65                 	db	101	;'e'
  2018  00FADE  6E                 	db	110	;'n'
  2019  00FADF  74                 	db	116	;'t'
  2020  00FAE0  65                 	db	101	;'e'
  2021  00FAE1  72                 	db	114	;'r'
  2022  00FAE2  20                 	db	32
  2023  00FAE3  48                 	db	72	;'H'
  2024  00FAE4  65                 	db	101	;'e'
  2025  00FAE5  6C                 	db	108	;'l'
  2026  00FAE6  70                 	db	112	;'p'
  2027  00FAE7  20                 	db	32
  2028  00FAE8  66                 	db	102	;'f'
  2029  00FAE9  6F                 	db	111	;'o'
  2030  00FAEA  72                 	db	114	;'r'
  2031  00FAEB  20                 	db	32
  2032  00FAEC  6C                 	db	108	;'l'
  2033  00FAED  69                 	db	105	;'i'
  2034  00FAEE  73                 	db	115	;'s'
  2035  00FAEF  74                 	db	116	;'t'
  2036  00FAF0  20                 	db	32
  2037  00FAF1  6F                 	db	111	;'o'
  2038  00FAF2  66                 	db	102	;'f'
  2039  00FAF3  20                 	db	32
  2040  00FAF4  63                 	db	99	;'c'
  2041  00FAF5  6F                 	db	111	;'o'
  2042  00FAF6  6D                 	db	109	;'m'
  2043  00FAF7  6D                 	db	109	;'m'
  2044  00FAF8  61                 	db	97	;'a'
  2045  00FAF9  6E                 	db	110	;'n'
  2046  00FAFA  64                 	db	100	;'d'
  2047  00FAFB  73                 	db	115	;'s'
  2048  00FAFC  0A                 	db	10
  2049  00FAFD  0D                 	db	13
  2050  00FAFE  00                 	db	0
  2051  00FAFF                     STR_75:
  2052  00FAFF  49                 	db	73	;'I'
  2053  00FB00  66                 	db	102	;'f'
  2054  00FB01  20                 	db	32
  2055  00FB02  79                 	db	121	;'y'
  2056  00FB03  6F                 	db	111	;'o'
  2057  00FB04  75                 	db	117	;'u'
  2058  00FB05  27                 	db	39
  2059  00FB06  64                 	db	100	;'d'
  2060  00FB07  20                 	db	32
  2061  00FB08  6C                 	db	108	;'l'
  2062  00FB09  69                 	db	105	;'i'
  2063  00FB0A  6B                 	db	107	;'k'
  2064  00FB0B  65                 	db	101	;'e'
  2065  00FB0C  20                 	db	32
  2066  00FB0D  74                 	db	116	;'t'
  2067  00FB0E  6F                 	db	111	;'o'
  2068  00FB0F  20                 	db	32
  2069  00FB10  63                 	db	99	;'c'
  2070  00FB11  6F                 	db	111	;'o'
  2071  00FB12  6D                 	db	109	;'m'
  2072  00FB13  70                 	db	112	;'p'
  2073  00FB14  6C                 	db	108	;'l'
  2074  00FB15  65                 	db	101	;'e'
  2075  00FB16  74                 	db	116	;'t'
  2076  00FB17  65                 	db	101	;'e'
  2077  00FB18  6C                 	db	108	;'l'
  2078  00FB19  79                 	db	121	;'y'
  2079  00FB1A  20                 	db	32
  2080  00FB1B  65                 	db	101	;'e'
  2081  00FB1C  6E                 	db	110	;'n'
  2082  00FB1D  61                 	db	97	;'a'
  2083  00FB1E  62                 	db	98	;'b'
  2084  00FB1F  6C                 	db	108	;'l'
  2085  00FB20  65                 	db	101	;'e'
  2086  00FB21  20                 	db	32
  2087  00FB22  6F                 	db	111	;'o'
  2088  00FB23  72                 	db	114	;'r'
  2089  00FB24  20                 	db	32
  2090  00FB25  64                 	db	100	;'d'
  2091  00FB26  69                 	db	105	;'i'
  2092  00FB27  73                 	db	115	;'s'
  2093  00FB28  61                 	db	97	;'a'
  2094  00FB29  62                 	db	98	;'b'
  2095  00FB2A  6C                 	db	108	;'l'
  2096  00FB2B  65                 	db	101	;'e'
  2097  00FB2C  20                 	db	32
  2098  00FB2D  74                 	db	116	;'t'
  2099  00FB2E  68                 	db	104	;'h'
  2100  00FB2F  65                 	db	101	;'e'
  2101  00FB30  20                 	db	32
  2102  00FB31  6C                 	db	108	;'l'
  2103  00FB32  6F                 	db	111	;'o'
  2104  00FB33  61                 	db	97	;'a'
  2105  00FB34  64                 	db	100	;'d'
  2106  00FB35  2C                 	db	44
  2107  00FB36  20                 	db	32
  2108  00FB37  64                 	db	100	;'d'
  2109  00FB38  69                 	db	105	;'i'
  2110  00FB39  73                 	db	115	;'s'
  2111  00FB3A  61                 	db	97	;'a'
  2112  00FB3B  62                 	db	98	;'b'
  2113  00FB3C  6C                 	db	108	;'l'
  2114  00FB3D  65                 	db	101	;'e'
  2115  00FB3E  20                 	db	32
  2116  00FB3F  64                 	db	100	;'d'
  2117  00FB40  69                 	db	105	;'i'
  2118  00FB41  6D                 	db	109	;'m'
  2119  00FB42  6D                 	db	109	;'m'
  2120  00FB43  69                 	db	105	;'i'
  2121  00FB44  6E                 	db	110	;'n'
  2122  00FB45  67                 	db	103	;'g'
  2123  00FB46  20                 	db	32
  2124  00FB47  61                 	db	97	;'a'
  2125  00FB48  6E                 	db	110	;'n'
  2126  00FB49  64                 	db	100	;'d'
  2127  00FB4A  20                 	db	32
  2128  00FB4B  75                 	db	117	;'u'
  2129  00FB4C  73                 	db	115	;'s'
  2130  00FB4D  65                 	db	101	;'e'
  2131  00FB4E  20                 	db	32
  2132  00FB4F  72                 	db	114	;'r'
  2133  00FB50  65                 	db	101	;'e'
  2134  00FB51  73                 	db	115	;'s'
  2135  00FB52  70                 	db	112	;'p'
  2136  00FB53  65                 	db	101	;'e'
  2137  00FB54  63                 	db	99	;'c'
  2138  00FB55  74                 	db	116	;'t'
  2139  00FB56  69                 	db	105	;'i'
  2140  00FB57  76                 	db	118	;'v'
  2141  00FB58  65                 	db	101	;'e'
  2142  00FB59  20                 	db	32
  2143  00FB5A  63                 	db	99	;'c'
  2144  00FB5B  6F                 	db	111	;'o'
  2145  00FB5C  6D                 	db	109	;'m'
  2146  00FB5D  6D                 	db	109	;'m'
  2147  00FB5E  61                 	db	97	;'a'
  2148  00FB5F  6E                 	db	110	;'n'
  2149  00FB60  64                 	db	100	;'d'
  2150  00FB61  73                 	db	115	;'s'
  2151  00FB62  0A                 	db	10
  2152  00FB63  0D                 	db	13
  2153  00FB64  00                 	db	0
  2154  00FB65                     STR_74:
  2155  00FB65  45                 	db	69	;'E'
  2156  00FB66  52                 	db	82	;'R'
  2157  00FB67  52                 	db	82	;'R'
  2158  00FB68  4F                 	db	79	;'O'
  2159  00FB69  52                 	db	82	;'R'
  2160  00FB6A  3A                 	db	58	;':'
  2161  00FB6B  20                 	db	32
  2162  00FB6C  50                 	db	80	;'P'
  2163  00FB6D  6C                 	db	108	;'l'
  2164  00FB6E  65                 	db	101	;'e'
  2165  00FB6F  61                 	db	97	;'a'
  2166  00FB70  73                 	db	115	;'s'
  2167  00FB71  65                 	db	101	;'e'
  2168  00FB72  20                 	db	32
  2169  00FB73  73                 	db	115	;'s'
  2170  00FB74  65                 	db	101	;'e'
  2171  00FB75  74                 	db	116	;'t'
  2172  00FB76  20                 	db	32
  2173  00FB77  64                 	db	100	;'d'
  2174  00FB78  69                 	db	105	;'i'
  2175  00FB79  6D                 	db	109	;'m'
  2176  00FB7A  6D                 	db	109	;'m'
  2177  00FB7B  69                 	db	105	;'i'
  2178  00FB7C  6E                 	db	110	;'n'
  2179  00FB7D  67                 	db	103	;'g'
  2180  00FB7E  20                 	db	32
  2181  00FB7F  70                 	db	112	;'p'
  2182  00FB80  65                 	db	101	;'e'
  2183  00FB81  72                 	db	114	;'r'
  2184  00FB82  63                 	db	99	;'c'
  2185  00FB83  65                 	db	101	;'e'
  2186  00FB84  6E                 	db	110	;'n'
  2187  00FB85  74                 	db	116	;'t'
  2188  00FB86  61                 	db	97	;'a'
  2189  00FB87  67                 	db	103	;'g'
  2190  00FB88  65                 	db	101	;'e'
  2191  00FB89  20                 	db	32
  2192  00FB8A  74                 	db	116	;'t'
  2193  00FB8B  6F                 	db	111	;'o'
  2194  00FB8C  20                 	db	32
  2195  00FB8D  61                 	db	97	;'a'
  2196  00FB8E  6E                 	db	110	;'n'
  2197  00FB8F  20                 	db	32
  2198  00FB90  69                 	db	105	;'i'
  2199  00FB91  6E                 	db	110	;'n'
  2200  00FB92  74                 	db	116	;'t'
  2201  00FB93  65                 	db	101	;'e'
  2202  00FB94  67                 	db	103	;'g'
  2203  00FB95  65                 	db	101	;'e'
  2204  00FB96  72                 	db	114	;'r'
  2205  00FB97  20                 	db	32
  2206  00FB98  67                 	db	103	;'g'
  2207  00FB99  72                 	db	114	;'r'
  2208  00FB9A  65                 	db	101	;'e'
  2209  00FB9B  61                 	db	97	;'a'
  2210  00FB9C  74                 	db	116	;'t'
  2211  00FB9D  65                 	db	101	;'e'
  2212  00FB9E  72                 	db	114	;'r'
  2213  00FB9F  20                 	db	32
  2214  00FBA0  74                 	db	116	;'t'
  2215  00FBA1  68                 	db	104	;'h'
  2216  00FBA2  61                 	db	97	;'a'
  2217  00FBA3  6E                 	db	110	;'n'
  2218  00FBA4  20                 	db	32
  2219  00FBA5  30                 	db	48	;'0'
  2220  00FBA6  20                 	db	32
  2221  00FBA7  61                 	db	97	;'a'
  2222  00FBA8  6E                 	db	110	;'n'
  2223  00FBA9  64                 	db	100	;'d'
  2224  00FBAA  20                 	db	32
  2225  00FBAB  6C                 	db	108	;'l'
  2226  00FBAC  65                 	db	101	;'e'
  2227  00FBAD  73                 	db	115	;'s'
  2228  00FBAE  73                 	db	115	;'s'
  2229  00FBAF  20                 	db	32
  2230  00FBB0  74                 	db	116	;'t'
  2231  00FBB1  68                 	db	104	;'h'
  2232  00FBB2  61                 	db	97	;'a'
  2233  00FBB3  6E                 	db	110	;'n'
  2234  00FBB4  20                 	db	32
  2235  00FBB5  31                 	db	49	;'1'
  2236  00FBB6  30                 	db	48	;'0'
  2237  00FBB7  30                 	db	48	;'0'
  2238  00FBB8  0A                 	db	10
  2239  00FBB9  0D                 	db	13
  2240  00FBBA  00                 	db	0
  2241  00FBBB                     STR_77:
  2242  00FBBB  43                 	db	67	;'C'
  2243  00FBBC  61                 	db	97	;'a'
  2244  00FBBD  6C                 	db	108	;'l'
  2245  00FBBE  63                 	db	99	;'c'
  2246  00FBBF  75                 	db	117	;'u'
  2247  00FBC0  6C                 	db	108	;'l'
  2248  00FBC1  61                 	db	97	;'a'
  2249  00FBC2  74                 	db	116	;'t'
  2250  00FBC3  65                 	db	101	;'e'
  2251  00FBC4  64                 	db	100	;'d'
  2252  00FBC5  20                 	db	32
  2253  00FBC6  54                 	db	84	;'T'
  2254  00FBC7  52                 	db	82	;'R'
  2255  00FBC8  49                 	db	73	;'I'
  2256  00FBC9  41                 	db	65	;'A'
  2257  00FBCA  43                 	db	67	;'C'
  2258  00FBCB  20                 	db	32
  2259  00FBCC  66                 	db	102	;'f'
  2260  00FBCD  69                 	db	105	;'i'
  2261  00FBCE  72                 	db	114	;'r'
  2262  00FBCF  69                 	db	105	;'i'
  2263  00FBD0  6E                 	db	110	;'n'
  2264  00FBD1  67                 	db	103	;'g'
  2265  00FBD2  20                 	db	32
  2266  00FBD3  61                 	db	97	;'a'
  2267  00FBD4  6E                 	db	110	;'n'
  2268  00FBD5  67                 	db	103	;'g'
  2269  00FBD6  6C                 	db	108	;'l'
  2270  00FBD7  65                 	db	101	;'e'
  2271  00FBD8  20                 	db	32
  2272  00FBD9  69                 	db	105	;'i'
  2273  00FBDA  73                 	db	115	;'s'
  2274  00FBDB  20                 	db	32
  2275  00FBDC  25                 	db	37
  2276  00FBDD  2E                 	db	46
  2277  00FBDE  33                 	db	51	;'3'
  2278  00FBDF  66                 	db	102	;'f'
  2279  00FBE0  20                 	db	32
  2280  00FBE1  72                 	db	114	;'r'
  2281  00FBE2  61                 	db	97	;'a'
  2282  00FBE3  64                 	db	100	;'d'
  2283  00FBE4  69                 	db	105	;'i'
  2284  00FBE5  61                 	db	97	;'a'
  2285  00FBE6  6E                 	db	110	;'n'
  2286  00FBE7  73                 	db	115	;'s'
  2287  00FBE8  20                 	db	32
  2288  00FBE9  28                 	db	40
  2289  00FBEA  25                 	db	37
  2290  00FBEB  2E                 	db	46
  2291  00FBEC  33                 	db	51	;'3'
  2292  00FBED  66                 	db	102	;'f'
  2293  00FBEE  20                 	db	32
  2294  00FBEF  64                 	db	100	;'d'
  2295  00FBF0  65                 	db	101	;'e'
  2296  00FBF1  67                 	db	103	;'g'
  2297  00FBF2  72                 	db	114	;'r'
  2298  00FBF3  65                 	db	101	;'e'
  2299  00FBF4  65                 	db	101	;'e'
  2300  00FBF5  73                 	db	115	;'s'
  2301  00FBF6  29                 	db	41
  2302  00FBF7  0A                 	db	10
  2303  00FBF8  0D                 	db	13
  2304  00FBF9  00                 	db	0
  2305  00FBFA                     STR_79:
  2306  00FBFA  44                 	db	68	;'D'
  2307  00FBFB  65                 	db	101	;'e'
  2308  00FBFC  76                 	db	118	;'v'
  2309  00FBFD  69                 	db	105	;'i'
  2310  00FBFE  63                 	db	99	;'c'
  2311  00FBFF  65                 	db	101	;'e'
  2312  00FC00  20                 	db	32
  2313  00FC01  6F                 	db	111	;'o'
  2314  00FC02  6E                 	db	110	;'n'
  2315  00FC03  20                 	db	32
  2316  00FC04  74                 	db	116	;'t'
  2317  00FC05  69                 	db	105	;'i'
  2318  00FC06  6D                 	db	109	;'m'
  2319  00FC07  65                 	db	101	;'e'
  2320  00FC08  20                 	db	32
  2321  00FC09  73                 	db	115	;'s'
  2322  00FC0A  69                 	db	105	;'i'
  2323  00FC0B  6E                 	db	110	;'n'
  2324  00FC0C  63                 	db	99	;'c'
  2325  00FC0D  65                 	db	101	;'e'
  2326  00FC0E  20                 	db	32
  2327  00FC0F  6C                 	db	108	;'l'
  2328  00FC10  61                 	db	97	;'a'
  2329  00FC11  73                 	db	115	;'s'
  2330  00FC12  74                 	db	116	;'t'
  2331  00FC13  20                 	db	32
  2332  00FC14  72                 	db	114	;'r'
  2333  00FC15  65                 	db	101	;'e'
  2334  00FC16  73                 	db	115	;'s'
  2335  00FC17  65                 	db	101	;'e'
  2336  00FC18  74                 	db	116	;'t'
  2337  00FC19  20                 	db	32
  2338  00FC1A  63                 	db	99	;'c'
  2339  00FC1B  6F                 	db	111	;'o'
  2340  00FC1C  6E                 	db	110	;'n'
  2341  00FC1D  64                 	db	100	;'d'
  2342  00FC1E  69                 	db	105	;'i'
  2343  00FC1F  74                 	db	116	;'t'
  2344  00FC20  69                 	db	105	;'i'
  2345  00FC21  6F                 	db	111	;'o'
  2346  00FC22  6E                 	db	110	;'n'
  2347  00FC23  20                 	db	32
  2348  00FC24  69                 	db	105	;'i'
  2349  00FC25  73                 	db	115	;'s'
  2350  00FC26  20                 	db	32
  2351  00FC27  25                 	db	37
  2352  00FC28  64                 	db	100	;'d'
  2353  00FC29  20                 	db	32
  2354  00FC2A  73                 	db	115	;'s'
  2355  00FC2B  65                 	db	101	;'e'
  2356  00FC2C  63                 	db	99	;'c'
  2357  00FC2D  6F                 	db	111	;'o'
  2358  00FC2E  6E                 	db	110	;'n'
  2359  00FC2F  64                 	db	100	;'d'
  2360  00FC30  73                 	db	115	;'s'
  2361  00FC31  0A                 	db	10
  2362  00FC32  0D                 	db	13
  2363  00FC33  00                 	db	0
  2364  00FC34                     STR_58:
  2365  00FC34  46                 	db	70	;'F'
  2366  00FC35  69                 	db	105	;'i'
  2367  00FC36  78                 	db	120	;'x'
  2368  00FC37  65                 	db	101	;'e'
  2369  00FC38  64                 	db	100	;'d'
  2370  00FC39  20                 	db	32
  2371  00FC3A  56                 	db	86	;'V'
  2372  00FC3B  6F                 	db	111	;'o'
  2373  00FC3C  6C                 	db	108	;'l'
  2374  00FC3D  74                 	db	116	;'t'
  2375  00FC3E  61                 	db	97	;'a'
  2376  00FC3F  67                 	db	103	;'g'
  2377  00FC40  65                 	db	101	;'e'
  2378  00FC41  20                 	db	32
  2379  00FC42  52                 	db	82	;'R'
  2380  00FC43  65                 	db	101	;'e'
  2381  00FC44  66                 	db	102	;'f'
  2382  00FC45  65                 	db	101	;'e'
  2383  00FC46  72                 	db	114	;'r'
  2384  00FC47  65                 	db	101	;'e'
  2385  00FC48  6E                 	db	110	;'n'
  2386  00FC49  63                 	db	99	;'c'
  2387  00FC4A  65                 	db	101	;'e'
  2388  00FC4B  20                 	db	32
  2389  00FC4C  42                 	db	66	;'B'
  2390  00FC4D  75                 	db	117	;'u'
  2391  00FC4E  66                 	db	102	;'f'
  2392  00FC4F  66                 	db	102	;'f'
  2393  00FC50  65                 	db	101	;'e'
  2394  00FC51  72                 	db	114	;'r'
  2395  00FC52  20                 	db	32
  2396  00FC53  31                 	db	49	;'1'
  2397  00FC54  20                 	db	32
  2398  00FC55  6D                 	db	109	;'m'
  2399  00FC56  65                 	db	101	;'e'
  2400  00FC57  61                 	db	97	;'a'
  2401  00FC58  73                 	db	115	;'s'
  2402  00FC59  75                 	db	117	;'u'
  2403  00FC5A  72                 	db	114	;'r'
  2404  00FC5B  65                 	db	101	;'e'
  2405  00FC5C  64                 	db	100	;'d'
  2406  00FC5D  20                 	db	32
  2407  00FC5E  61                 	db	97	;'a'
  2408  00FC5F  73                 	db	115	;'s'
  2409  00FC60  20                 	db	32
  2410  00FC61  25                 	db	37
  2411  00FC62  66                 	db	102	;'f'
  2412  00FC63  20                 	db	32
  2413  00FC64  56                 	db	86	;'V'
  2414  00FC65  6F                 	db	111	;'o'
  2415  00FC66  6C                 	db	108	;'l'
  2416  00FC67  74                 	db	116	;'t'
  2417  00FC68  73                 	db	115	;'s'
  2418  00FC69  0A                 	db	10
  2419  00FC6A  0D                 	db	13
  2420  00FC6B  00                 	db	0
  2421  00FC6C                     STR_50:
  2422  00FC6C  4D                 	db	77	;'M'
  2423  00FC6D  61                 	db	97	;'a'
  2424  00FC6E  72                 	db	114	;'r'
  2425  00FC6F  71                 	db	113	;'q'
  2426  00FC70  75                 	db	117	;'u'
  2427  00FC71  65                 	db	101	;'e'
  2428  00FC72  74                 	db	116	;'t'
  2429  00FC73  74                 	db	116	;'t'
  2430  00FC74  65                 	db	101	;'e'
  2431  00FC75  20                 	db	32
  2432  00FC76  55                 	db	85	;'U'
  2433  00FC77  6E                 	db	110	;'n'
  2434  00FC78  69                 	db	105	;'i'
  2435  00FC79  76                 	db	118	;'v'
  2436  00FC7A  65                 	db	101	;'e'
  2437  00FC7B  72                 	db	114	;'r'
  2438  00FC7C  73                 	db	115	;'s'
  2439  00FC7D  69                 	db	105	;'i'
  2440  00FC7E  74                 	db	116	;'t'
  2441  00FC7F  79                 	db	121	;'y'
  2442  00FC80  20                 	db	32
  2443  00FC81  45                 	db	69	;'E'
  2444  00FC82  4C                 	db	76	;'L'
  2445  00FC83  45                 	db	69	;'E'
  2446  00FC84  4E                 	db	78	;'N'
  2447  00FC85  20                 	db	32
  2448  00FC86  33                 	db	51	;'3'
  2449  00FC87  30                 	db	48	;'0'
  2450  00FC88  33                 	db	51	;'3'
  2451  00FC89  35                 	db	53	;'5'
  2452  00FC8A  20                 	db	32
  2453  00FC8B  46                 	db	70	;'F'
  2454  00FC8C  69                 	db	105	;'i'
  2455  00FC8D  6E                 	db	110	;'n'
  2456  00FC8E  61                 	db	97	;'a'
  2457  00FC8F  6C                 	db	108	;'l'
  2458  00FC90  20                 	db	32
  2459  00FC91  50                 	db	80	;'P'
  2460  00FC92  72                 	db	114	;'r'
  2461  00FC93  6F                 	db	111	;'o'
  2462  00FC94  6A                 	db	106	;'j'
  2463  00FC95  65                 	db	101	;'e'
  2464  00FC96  63                 	db	99	;'c'
  2465  00FC97  74                 	db	116	;'t'
  2466  00FC98  0A                 	db	10
  2467  00FC99  0D                 	db	13
  2468  00FC9A  00                 	db	0
  2469  00FC9B                     STR_68:
  2470  00FC9B  54                 	db	84	;'T'
  2471  00FC9C  52                 	db	82	;'R'
  2472  00FC9D  49                 	db	73	;'I'
  2473  00FC9E  41                 	db	65	;'A'
  2474  00FC9F  43                 	db	67	;'C'
  2475  00FCA0  20                 	db	32
  2476  00FCA1  6F                 	db	111	;'o'
  2477  00FCA2  75                 	db	117	;'u'
  2478  00FCA3  74                 	db	116	;'t'
  2479  00FCA4  70                 	db	112	;'p'
  2480  00FCA5  75                 	db	117	;'u'
  2481  00FCA6  74                 	db	116	;'t'
  2482  00FCA7  20                 	db	32
  2483  00FCA8  64                 	db	100	;'d'
  2484  00FCA9  69                 	db	105	;'i'
  2485  00FCAA  6D                 	db	109	;'m'
  2486  00FCAB  6D                 	db	109	;'m'
  2487  00FCAC  69                 	db	105	;'i'
  2488  00FCAD  6E                 	db	110	;'n'
  2489  00FCAE  67                 	db	103	;'g'
  2490  00FCAF  20                 	db	32
  2491  00FCB0  68                 	db	104	;'h'
  2492  00FCB1  61                 	db	97	;'a'
  2493  00FCB2  73                 	db	115	;'s'
  2494  00FCB3  20                 	db	32
  2495  00FCB4  62                 	db	98	;'b'
  2496  00FCB5  65                 	db	101	;'e'
  2497  00FCB6  65                 	db	101	;'e'
  2498  00FCB7  6E                 	db	110	;'n'
  2499  00FCB8  20                 	db	32
  2500  00FCB9  64                 	db	100	;'d'
  2501  00FCBA  69                 	db	105	;'i'
  2502  00FCBB  73                 	db	115	;'s'
  2503  00FCBC  61                 	db	97	;'a'
  2504  00FCBD  62                 	db	98	;'b'
  2505  00FCBE  6C                 	db	108	;'l'
  2506  00FCBF  65                 	db	101	;'e'
  2507  00FCC0  64                 	db	100	;'d'
  2508  00FCC1  0A                 	db	10
  2509  00FCC2  0D                 	db	13
  2510  00FCC3  00                 	db	0
  2511  00FCC4                     STR_66:
  2512  00FCC4  54                 	db	84	;'T'
  2513  00FCC5  52                 	db	82	;'R'
  2514  00FCC6  49                 	db	73	;'I'
  2515  00FCC7  41                 	db	65	;'A'
  2516  00FCC8  43                 	db	67	;'C'
  2517  00FCC9  20                 	db	32
  2518  00FCCA  6F                 	db	111	;'o'
  2519  00FCCB  75                 	db	117	;'u'
  2520  00FCCC  74                 	db	116	;'t'
  2521  00FCCD  70                 	db	112	;'p'
  2522  00FCCE  75                 	db	117	;'u'
  2523  00FCCF  74                 	db	116	;'t'
  2524  00FCD0  20                 	db	32
  2525  00FCD1  64                 	db	100	;'d'
  2526  00FCD2  69                 	db	105	;'i'
  2527  00FCD3  6D                 	db	109	;'m'
  2528  00FCD4  6D                 	db	109	;'m'
  2529  00FCD5  69                 	db	105	;'i'
  2530  00FCD6  6E                 	db	110	;'n'
  2531  00FCD7  67                 	db	103	;'g'
  2532  00FCD8  20                 	db	32
  2533  00FCD9  68                 	db	104	;'h'
  2534  00FCDA  61                 	db	97	;'a'
  2535  00FCDB  73                 	db	115	;'s'
  2536  00FCDC  20                 	db	32
  2537  00FCDD  62                 	db	98	;'b'
  2538  00FCDE  65                 	db	101	;'e'
  2539  00FCDF  65                 	db	101	;'e'
  2540  00FCE0  6E                 	db	110	;'n'
  2541  00FCE1  20                 	db	32
  2542  00FCE2  65                 	db	101	;'e'
  2543  00FCE3  6E                 	db	110	;'n'
  2544  00FCE4  61                 	db	97	;'a'
  2545  00FCE5  62                 	db	98	;'b'
  2546  00FCE6  6C                 	db	108	;'l'
  2547  00FCE7  65                 	db	101	;'e'
  2548  00FCE8  64                 	db	100	;'d'
  2549  00FCE9  0A                 	db	10
  2550  00FCEA  0D                 	db	13
  2551  00FCEB  00                 	db	0
  2552  00FCEC                     STR_84:
  2553  00FCEC  4D                 	db	77	;'M'
  2554  00FCED  65                 	db	101	;'e'
  2555  00FCEE  61                 	db	97	;'a'
  2556  00FCEF  73                 	db	115	;'s'
  2557  00FCF0  75                 	db	117	;'u'
  2558  00FCF1  72                 	db	114	;'r'
  2559  00FCF2  65                 	db	101	;'e'
  2560  00FCF3  6D                 	db	109	;'m'
  2561  00FCF4  65                 	db	101	;'e'
  2562  00FCF5  6E                 	db	110	;'n'
  2563  00FCF6  74                 	db	116	;'t'
  2564  00FCF7  73                 	db	115	;'s'
  2565  00FCF8  20                 	db	32
  2566  00FCF9  72                 	db	114	;'r'
  2567  00FCFA  65                 	db	101	;'e'
  2568  00FCFB  73                 	db	115	;'s'
  2569  00FCFC  70                 	db	112	;'p'
  2570  00FCFD  6F                 	db	111	;'o'
  2571  00FCFE  6E                 	db	110	;'n'
  2572  00FCFF  73                 	db	115	;'s'
  2573  00FD00  65                 	db	101	;'e'
  2574  00FD01  73                 	db	115	;'s'
  2575  00FD02  20                 	db	32
  2576  00FD03  61                 	db	97	;'a'
  2577  00FD04  70                 	db	112	;'p'
  2578  00FD05  70                 	db	112	;'p'
  2579  00FD06  65                 	db	101	;'e'
  2580  00FD07  61                 	db	97	;'a'
  2581  00FD08  72                 	db	114	;'r'
  2582  00FD09  20                 	db	32
  2583  00FD0A  69                 	db	105	;'i'
  2584  00FD0B  6E                 	db	110	;'n'
  2585  00FD0C  20                 	db	32
  2586  00FD0D  63                 	db	99	;'c'
  2587  00FD0E  79                 	db	121	;'y'
  2588  00FD0F  61                 	db	97	;'a'
  2589  00FD10  6E                 	db	110	;'n'
  2590  00FD11  0A                 	db	10
  2591  00FD12  0D                 	db	13
  2592  00FD13  00                 	db	0
  2593  00FD14                     STR_76:
  2594  00FD14  44                 	db	68	;'D'
  2595  00FD15  69                 	db	105	;'i'
  2596  00FD16  6D                 	db	109	;'m'
  2597  00FD17  6D                 	db	109	;'m'
  2598  00FD18  69                 	db	105	;'i'
  2599  00FD19  6E                 	db	110	;'n'
  2600  00FD1A  67                 	db	103	;'g'
  2601  00FD1B  20                 	db	32
  2602  00FD1C  68                 	db	104	;'h'
  2603  00FD1D  61                 	db	97	;'a'
  2604  00FD1E  73                 	db	115	;'s'
  2605  00FD1F  20                 	db	32
  2606  00FD20  62                 	db	98	;'b'
  2607  00FD21  65                 	db	101	;'e'
  2608  00FD22  65                 	db	101	;'e'
  2609  00FD23  6E                 	db	110	;'n'
  2610  00FD24  20                 	db	32
  2611  00FD25  73                 	db	115	;'s'
  2612  00FD26  65                 	db	101	;'e'
  2613  00FD27  74                 	db	116	;'t'
  2614  00FD28  20                 	db	32
  2615  00FD29  74                 	db	116	;'t'
  2616  00FD2A  6F                 	db	111	;'o'
  2617  00FD2B  20                 	db	32
  2618  00FD2C  25                 	db	37
  2619  00FD2D  64                 	db	100	;'d'
  2620  00FD2E  20                 	db	32
  2621  00FD2F  70                 	db	112	;'p'
  2622  00FD30  65                 	db	101	;'e'
  2623  00FD31  72                 	db	114	;'r'
  2624  00FD32  63                 	db	99	;'c'
  2625  00FD33  65                 	db	101	;'e'
  2626  00FD34  6E                 	db	110	;'n'
  2627  00FD35  74                 	db	116	;'t'
  2628  00FD36  0A                 	db	10
  2629  00FD37  0D                 	db	13
  2630  00FD38  00                 	db	0
  2631  00FD39                     STR_52:
  2632  00FD39  2B                 	db	43
  2633  00FD3A  33                 	db	51	;'3'
  2634  00FD3B  2E                 	db	46
  2635  00FD3C  33                 	db	51	;'3'
  2636  00FD3D  56                 	db	86	;'V'
  2637  00FD3E  20                 	db	32
  2638  00FD3F  72                 	db	114	;'r'
  2639  00FD40  61                 	db	97	;'a'
  2640  00FD41  69                 	db	105	;'i'
  2641  00FD42  6C                 	db	108	;'l'
  2642  00FD43  20                 	db	32
  2643  00FD44  6D                 	db	109	;'m'
  2644  00FD45  65                 	db	101	;'e'
  2645  00FD46  61                 	db	97	;'a'
  2646  00FD47  73                 	db	115	;'s'
  2647  00FD48  75                 	db	117	;'u'
  2648  00FD49  72                 	db	114	;'r'
  2649  00FD4A  65                 	db	101	;'e'
  2650  00FD4B  64                 	db	100	;'d'
  2651  00FD4C  20                 	db	32
  2652  00FD4D  61                 	db	97	;'a'
  2653  00FD4E  73                 	db	115	;'s'
  2654  00FD4F  20                 	db	32
  2655  00FD50  2B                 	db	43
  2656  00FD51  25                 	db	37
  2657  00FD52  66                 	db	102	;'f'
  2658  00FD53  20                 	db	32
  2659  00FD54  56                 	db	86	;'V'
  2660  00FD55  6F                 	db	111	;'o'
  2661  00FD56  6C                 	db	108	;'l'
  2662  00FD57  74                 	db	116	;'t'
  2663  00FD58  73                 	db	115	;'s'
  2664  00FD59  0A                 	db	10
  2665  00FD5A  0D                 	db	13
  2666  00FD5B  00                 	db	0
  2667  00FD5C                     STR_56:
  2668  00FD5C  44                 	db	68	;'D'
  2669  00FD5D  69                 	db	105	;'i'
  2670  00FD5E  65                 	db	101	;'e'
  2671  00FD5F  20                 	db	32
  2672  00FD60  54                 	db	84	;'T'
  2673  00FD61  65                 	db	101	;'e'
  2674  00FD62  6D                 	db	109	;'m'
  2675  00FD63  70                 	db	112	;'p'
  2676  00FD64  65                 	db	101	;'e'
  2677  00FD65  72                 	db	114	;'r'
  2678  00FD66  61                 	db	97	;'a'
  2679  00FD67  74                 	db	116	;'t'
  2680  00FD68  75                 	db	117	;'u'
  2681  00FD69  72                 	db	114	;'r'
  2682  00FD6A  65                 	db	101	;'e'
  2683  00FD6B  20                 	db	32
  2684  00FD6C  6D                 	db	109	;'m'
  2685  00FD6D  65                 	db	101	;'e'
  2686  00FD6E  61                 	db	97	;'a'
  2687  00FD6F  73                 	db	115	;'s'
  2688  00FD70  75                 	db	117	;'u'
  2689  00FD71  72                 	db	114	;'r'
  2690  00FD72  65                 	db	101	;'e'
  2691  00FD73  64                 	db	100	;'d'
  2692  00FD74  20                 	db	32
  2693  00FD75  61                 	db	97	;'a'
  2694  00FD76  73                 	db	115	;'s'
  2695  00FD77  20                 	db	32
  2696  00FD78  25                 	db	37
  2697  00FD79  66                 	db	102	;'f'
  2698  00FD7A  43                 	db	67	;'C'
  2699  00FD7B  0A                 	db	10
  2700  00FD7C  0D                 	db	13
  2701  00FD7D  00                 	db	0
  2702  00FD7E                     STR_62:
  2703  00FD7E  52                 	db	82	;'R'
  2704  00FD7F  4D                 	db	77	;'M'
  2705  00FD80  53                 	db	83	;'S'
  2706  00FD81  20                 	db	32
  2707  00FD82  4F                 	db	79	;'O'
  2708  00FD83  75                 	db	117	;'u'
  2709  00FD84  74                 	db	116	;'t'
  2710  00FD85  70                 	db	112	;'p'
  2711  00FD86  75                 	db	117	;'u'
  2712  00FD87  74                 	db	116	;'t'
  2713  00FD88  20                 	db	32
  2714  00FD89  43                 	db	67	;'C'
  2715  00FD8A  75                 	db	117	;'u'
  2716  00FD8B  72                 	db	114	;'r'
  2717  00FD8C  72                 	db	114	;'r'
  2718  00FD8D  65                 	db	101	;'e'
  2719  00FD8E  6E                 	db	110	;'n'
  2720  00FD8F  74                 	db	116	;'t'
  2721  00FD90  20                 	db	32
  2722  00FD91  69                 	db	105	;'i'
  2723  00FD92  73                 	db	115	;'s'
  2724  00FD93  20                 	db	32
  2725  00FD94  25                 	db	37
  2726  00FD95  2E                 	db	46
  2727  00FD96  33                 	db	51	;'3'
  2728  00FD97  66                 	db	102	;'f'
  2729  00FD98  20                 	db	32
  2730  00FD99  41                 	db	65	;'A'
  2731  00FD9A  72                 	db	114	;'r'
  2732  00FD9B  6D                 	db	109	;'m'
  2733  00FD9C  73                 	db	115	;'s'
  2734  00FD9D  0A                 	db	10
  2735  00FD9E  0D                 	db	13
  2736  00FD9F  00                 	db	0
  2737  00FDA0                     STR_64:
  2738  00FDA0  52                 	db	82	;'R'
  2739  00FDA1  4D                 	db	77	;'M'
  2740  00FDA2  53                 	db	83	;'S'
  2741  00FDA3  20                 	db	32
  2742  00FDA4  4F                 	db	79	;'O'
  2743  00FDA5  75                 	db	117	;'u'
  2744  00FDA6  74                 	db	116	;'t'
  2745  00FDA7  70                 	db	112	;'p'
  2746  00FDA8  75                 	db	117	;'u'
  2747  00FDA9  74                 	db	116	;'t'
  2748  00FDAA  20                 	db	32
  2749  00FDAB  56                 	db	86	;'V'
  2750  00FDAC  6F                 	db	111	;'o'
  2751  00FDAD  6C                 	db	108	;'l'
  2752  00FDAE  74                 	db	116	;'t'
  2753  00FDAF  61                 	db	97	;'a'
  2754  00FDB0  67                 	db	103	;'g'
  2755  00FDB1  65                 	db	101	;'e'
  2756  00FDB2  20                 	db	32
  2757  00FDB3  69                 	db	105	;'i'
  2758  00FDB4  73                 	db	115	;'s'
  2759  00FDB5  20                 	db	32
  2760  00FDB6  25                 	db	37
  2761  00FDB7  2E                 	db	46
  2762  00FDB8  33                 	db	51	;'3'
  2763  00FDB9  66                 	db	102	;'f'
  2764  00FDBA  20                 	db	32
  2765  00FDBB  56                 	db	86	;'V'
  2766  00FDBC  72                 	db	114	;'r'
  2767  00FDBD  6D                 	db	109	;'m'
  2768  00FDBE  73                 	db	115	;'s'
  2769  00FDBF  0A                 	db	10
  2770  00FDC0  0D                 	db	13
  2771  00FDC1  00                 	db	0
  2772  00FDC2                     STR_54:
  2773  00FDC2  2B                 	db	43
  2774  00FDC3  31                 	db	49	;'1'
  2775  00FDC4  32                 	db	50	;'2'
  2776  00FDC5  56                 	db	86	;'V'
  2777  00FDC6  20                 	db	32
  2778  00FDC7  72                 	db	114	;'r'
  2779  00FDC8  61                 	db	97	;'a'
  2780  00FDC9  69                 	db	105	;'i'
  2781  00FDCA  6C                 	db	108	;'l'
  2782  00FDCB  20                 	db	32
  2783  00FDCC  6D                 	db	109	;'m'
  2784  00FDCD  65                 	db	101	;'e'
  2785  00FDCE  61                 	db	97	;'a'
  2786  00FDCF  73                 	db	115	;'s'
  2787  00FDD0  75                 	db	117	;'u'
  2788  00FDD1  72                 	db	114	;'r'
  2789  00FDD2  65                 	db	101	;'e'
  2790  00FDD3  64                 	db	100	;'d'
  2791  00FDD4  20                 	db	32
  2792  00FDD5  61                 	db	97	;'a'
  2793  00FDD6  73                 	db	115	;'s'
  2794  00FDD7  20                 	db	32
  2795  00FDD8  2B                 	db	43
  2796  00FDD9  25                 	db	37
  2797  00FDDA  66                 	db	102	;'f'
  2798  00FDDB  20                 	db	32
  2799  00FDDC  56                 	db	86	;'V'
  2800  00FDDD  6F                 	db	111	;'o'
  2801  00FDDE  6C                 	db	108	;'l'
  2802  00FDDF  74                 	db	116	;'t'
  2803  00FDE0  73                 	db	115	;'s'
  2804  00FDE1  0A                 	db	10
  2805  00FDE2  0D                 	db	13
  2806  00FDE3  00                 	db	0
  2807  00FDE4                     STR_82:
  2808  00FDE4  48                 	db	72	;'H'
  2809  00FDE5  65                 	db	101	;'e'
  2810  00FDE6  6C                 	db	108	;'l'
  2811  00FDE7  70                 	db	112	;'p'
  2812  00FDE8  20                 	db	32
  2813  00FDE9  6D                 	db	109	;'m'
  2814  00FDEA  65                 	db	101	;'e'
  2815  00FDEB  73                 	db	115	;'s'
  2816  00FDEC  73                 	db	115	;'s'
  2817  00FDED  61                 	db	97	;'a'
  2818  00FDEE  67                 	db	103	;'g'
  2819  00FDEF  65                 	db	101	;'e'
  2820  00FDF0  73                 	db	115	;'s'
  2821  00FDF1  20                 	db	32
  2822  00FDF2  61                 	db	97	;'a'
  2823  00FDF3  70                 	db	112	;'p'
  2824  00FDF4  70                 	db	112	;'p'
  2825  00FDF5  65                 	db	101	;'e'
  2826  00FDF6  61                 	db	97	;'a'
  2827  00FDF7  72                 	db	114	;'r'
  2828  00FDF8  20                 	db	32
  2829  00FDF9  69                 	db	105	;'i'
  2830  00FDFA  6E                 	db	110	;'n'
  2831  00FDFB  20                 	db	32
  2832  00FDFC  79                 	db	121	;'y'
  2833  00FDFD  65                 	db	101	;'e'
  2834  00FDFE  6C                 	db	108	;'l'
  2835  00FDFF  6C                 	db	108	;'l'
  2836  00FE00  6F                 	db	111	;'o'
  2837  00FE01  77                 	db	119	;'w'
  2838  00FE02  0A                 	db	10
  2839  00FE03  0D                 	db	13
  2840  00FE04  00                 	db	0
  2841  00FE05                     STR_60:
  2842  00FE05  4D                 	db	77	;'M'
  2843  00FE06  65                 	db	101	;'e'
  2844  00FE07  61                 	db	97	;'a'
  2845  00FE08  73                 	db	115	;'s'
  2846  00FE09  75                 	db	117	;'u'
  2847  00FE0A  72                 	db	114	;'r'
  2848  00FE0B  65                 	db	101	;'e'
  2849  00FE0C  64                 	db	100	;'d'
  2850  00FE0D  20                 	db	32
  2851  00FE0E  43                 	db	67	;'C'
  2852  00FE0F  75                 	db	117	;'u'
  2853  00FE10  72                 	db	114	;'r'
  2854  00FE11  72                 	db	114	;'r'
  2855  00FE12  65                 	db	101	;'e'
  2856  00FE13  6E                 	db	110	;'n'
  2857  00FE14  74                 	db	116	;'t'
  2858  00FE15  20                 	db	32
  2859  00FE16  69                 	db	105	;'i'
  2860  00FE17  73                 	db	115	;'s'
  2861  00FE18  20                 	db	32
  2862  00FE19  25                 	db	37
  2863  00FE1A  2E                 	db	46
  2864  00FE1B  33                 	db	51	;'3'
  2865  00FE1C  66                 	db	102	;'f'
  2866  00FE1D  20                 	db	32
  2867  00FE1E  41                 	db	65	;'A'
  2868  00FE1F  6D                 	db	109	;'m'
  2869  00FE20  70                 	db	112	;'p'
  2870  00FE21  73                 	db	115	;'s'
  2871  00FE22  0A                 	db	10
  2872  00FE23  0D                 	db	13
  2873  00FE24  00                 	db	0
  2874  00FE25                     STR_86:
  2875  00FE25  55                 	db	85	;'U'
  2876  00FE26  73                 	db	115	;'s'
  2877  00FE27  65                 	db	101	;'e'
  2878  00FE28  72                 	db	114	;'r'
  2879  00FE29  20                 	db	32
  2880  00FE2A  69                 	db	105	;'i'
  2881  00FE2B  6E                 	db	110	;'n'
  2882  00FE2C  70                 	db	112	;'p'
  2883  00FE2D  75                 	db	117	;'u'
  2884  00FE2E  74                 	db	116	;'t'
  2885  00FE2F  20                 	db	32
  2886  00FE30  61                 	db	97	;'a'
  2887  00FE31  70                 	db	112	;'p'
  2888  00FE32  70                 	db	112	;'p'
  2889  00FE33  65                 	db	101	;'e'
  2890  00FE34  61                 	db	97	;'a'
  2891  00FE35  72                 	db	114	;'r'
  2892  00FE36  73                 	db	115	;'s'
  2893  00FE37  20                 	db	32
  2894  00FE38  69                 	db	105	;'i'
  2895  00FE39  6E                 	db	110	;'n'
  2896  00FE3A  20                 	db	32
  2897  00FE3B  77                 	db	119	;'w'
  2898  00FE3C  68                 	db	104	;'h'
  2899  00FE3D  69                 	db	105	;'i'
  2900  00FE3E  74                 	db	116	;'t'
  2901  00FE3F  65                 	db	101	;'e'
  2902  00FE40  0A                 	db	10
  2903  00FE41  0D                 	db	13
  2904  00FE42  00                 	db	0
  2905  00FE43                     STR_83:
  2906  00FE43  49                 	db	73	;'I'
  2907  00FE44  44                 	db	68	;'D'
  2908  00FE45  4E                 	db	78	;'N'
  2909  00FE46  20                 	db	32
  2910  00FE47  73                 	db	115	;'s'
  2911  00FE48  74                 	db	116	;'t'
  2912  00FE49  72                 	db	114	;'r'
  2913  00FE4A  69                 	db	105	;'i'
  2914  00FE4B  6E                 	db	110	;'n'
  2915  00FE4C  67                 	db	103	;'g'
  2916  00FE4D  20                 	db	32
  2917  00FE4E  61                 	db	97	;'a'
  2918  00FE4F  70                 	db	112	;'p'
  2919  00FE50  70                 	db	112	;'p'
  2920  00FE51  65                 	db	101	;'e'
  2921  00FE52  61                 	db	97	;'a'
  2922  00FE53  72                 	db	114	;'r'
  2923  00FE54  73                 	db	115	;'s'
  2924  00FE55  20                 	db	32
  2925  00FE56  69                 	db	105	;'i'
  2926  00FE57  6E                 	db	110	;'n'
  2927  00FE58  20                 	db	32
  2928  00FE59  67                 	db	103	;'g'
  2929  00FE5A  72                 	db	114	;'r'
  2930  00FE5B  65                 	db	101	;'e'
  2931  00FE5C  65                 	db	101	;'e'
  2932  00FE5D  6E                 	db	110	;'n'
  2933  00FE5E  0A                 	db	10
  2934  00FE5F  0D                 	db	13
  2935  00FE60  00                 	db	0
  2936  00FE61                     STR_59:
  2937  00FE61  4D                 	db	77	;'M'
  2938  00FE62  65                 	db	101	;'e'
  2939  00FE63  61                 	db	97	;'a'
  2940  00FE64  73                 	db	115	;'s'
  2941  00FE65  75                 	db	117	;'u'
  2942  00FE66  72                 	db	114	;'r'
  2943  00FE67  65                 	db	101	;'e'
  2944  00FE68  20                 	db	32
  2945  00FE69  44                 	db	68	;'D'
  2946  00FE6A  65                 	db	101	;'e'
  2947  00FE6B  74                 	db	116	;'t'
  2948  00FE6C  65                 	db	101	;'e'
  2949  00FE6D  63                 	db	99	;'c'
  2950  00FE6E  74                 	db	116	;'t'
  2951  00FE6F  65                 	db	101	;'e'
  2952  00FE70  64                 	db	100	;'d'
  2953  00FE71  20                 	db	32
  2954  00FE72  43                 	db	67	;'C'
  2955  00FE73  75                 	db	117	;'u'
  2956  00FE74  72                 	db	114	;'r'
  2957  00FE75  72                 	db	114	;'r'
  2958  00FE76  65                 	db	101	;'e'
  2959  00FE77  6E                 	db	110	;'n'
  2960  00FE78  74                 	db	116	;'t'
  2961  00FE79  3F                 	db	63	;'?'
  2962  00FE7A  00                 	db	0
  2963  00FE7B                     STR_72:
  2964  00FE7B  4C                 	db	76	;'L'
  2965  00FE7C  6F                 	db	111	;'o'
  2966  00FE7D  61                 	db	97	;'a'
  2967  00FE7E  64                 	db	100	;'d'
  2968  00FE7F  20                 	db	32
  2969  00FE80  68                 	db	104	;'h'
  2970  00FE81  61                 	db	97	;'a'
  2971  00FE82  73                 	db	115	;'s'
  2972  00FE83  20                 	db	32
  2973  00FE84  62                 	db	98	;'b'
  2974  00FE85  65                 	db	101	;'e'
  2975  00FE86  65                 	db	101	;'e'
  2976  00FE87  6E                 	db	110	;'n'
  2977  00FE88  20                 	db	32
  2978  00FE89  64                 	db	100	;'d'
  2979  00FE8A  69                 	db	105	;'i'
  2980  00FE8B  73                 	db	115	;'s'
  2981  00FE8C  61                 	db	97	;'a'
  2982  00FE8D  62                 	db	98	;'b'
  2983  00FE8E  6C                 	db	108	;'l'
  2984  00FE8F  65                 	db	101	;'e'
  2985  00FE90  64                 	db	100	;'d'
  2986  00FE91  0A                 	db	10
  2987  00FE92  0D                 	db	13
  2988  00FE93  00                 	db	0
  2989  00FE94                     STR_70:
  2990  00FE94  4C                 	db	76	;'L'
  2991  00FE95  6F                 	db	111	;'o'
  2992  00FE96  61                 	db	97	;'a'
  2993  00FE97  64                 	db	100	;'d'
  2994  00FE98  20                 	db	32
  2995  00FE99  68                 	db	104	;'h'
  2996  00FE9A  61                 	db	97	;'a'
  2997  00FE9B  73                 	db	115	;'s'
  2998  00FE9C  20                 	db	32
  2999  00FE9D  62                 	db	98	;'b'
  3000  00FE9E  65                 	db	101	;'e'
  3001  00FE9F  65                 	db	101	;'e'
  3002  00FEA0  6E                 	db	110	;'n'
  3003  00FEA1  20                 	db	32
  3004  00FEA2  65                 	db	101	;'e'
  3005  00FEA3  6E                 	db	110	;'n'
  3006  00FEA4  61                 	db	97	;'a'
  3007  00FEA5  62                 	db	98	;'b'
  3008  00FEA6  6C                 	db	108	;'l'
  3009  00FEA7  65                 	db	101	;'e'
  3010  00FEA8  64                 	db	100	;'d'
  3011  00FEA9  0A                 	db	10
  3012  00FEAA  0D                 	db	13
  3013  00FEAB  00                 	db	0
  3014  00FEAC                     STR_73:
  3015  00FEAC  53                 	db	83	;'S'
  3016  00FEAD  65                 	db	101	;'e'
  3017  00FEAE  74                 	db	116	;'t'
  3018  00FEAF  20                 	db	32
  3019  00FEB0  44                 	db	68	;'D'
  3020  00FEB1  69                 	db	105	;'i'
  3021  00FEB2  6D                 	db	109	;'m'
  3022  00FEB3  6D                 	db	109	;'m'
  3023  00FEB4  69                 	db	105	;'i'
  3024  00FEB5  6E                 	db	110	;'n'
  3025  00FEB6  67                 	db	103	;'g'
  3026  00FEB7  20                 	db	32
  3027  00FEB8  50                 	db	80	;'P'
  3028  00FEB9  65                 	db	101	;'e'
  3029  00FEBA  72                 	db	114	;'r'
  3030  00FEBB  63                 	db	99	;'c'
  3031  00FEBC  65                 	db	101	;'e'
  3032  00FEBD  6E                 	db	110	;'n'
  3033  00FEBE  74                 	db	116	;'t'
  3034  00FEBF  61                 	db	97	;'a'
  3035  00FEC0  67                 	db	103	;'g'
  3036  00FEC1  65                 	db	101	;'e'
  3037  00FEC2  20                 	db	32
  3038  00FEC3  00                 	db	0
  3039  00FEC4                     STR_85:
  3040  00FEC4  45                 	db	69	;'E'
  3041  00FEC5  72                 	db	114	;'r'
  3042  00FEC6  72                 	db	114	;'r'
  3043  00FEC7  6F                 	db	111	;'o'
  3044  00FEC8  72                 	db	114	;'r'
  3045  00FEC9  73                 	db	115	;'s'
  3046  00FECA  20                 	db	32
  3047  00FECB  61                 	db	97	;'a'
  3048  00FECC  70                 	db	112	;'p'
  3049  00FECD  70                 	db	112	;'p'
  3050  00FECE  65                 	db	101	;'e'
  3051  00FECF  61                 	db	97	;'a'
  3052  00FED0  72                 	db	114	;'r'
  3053  00FED1  20                 	db	32
  3054  00FED2  69                 	db	105	;'i'
  3055  00FED3  6E                 	db	110	;'n'
  3056  00FED4  20                 	db	32
  3057  00FED5  72                 	db	114	;'r'
  3058  00FED6  65                 	db	101	;'e'
  3059  00FED7  64                 	db	100	;'d'
  3060  00FED8  0A                 	db	10
  3061  00FED9  0D                 	db	13
  3062  00FEDA  00                 	db	0
  3063  00FEDB                     STR_63:
  3064  00FEDB  4D                 	db	77	;'M'
  3065  00FEDC  65                 	db	101	;'e'
  3066  00FEDD  61                 	db	97	;'a'
  3067  00FEDE  73                 	db	115	;'s'
  3068  00FEDF  75                 	db	117	;'u'
  3069  00FEE0  72                 	db	114	;'r'
  3070  00FEE1  65                 	db	101	;'e'
  3071  00FEE2  20                 	db	32
  3072  00FEE3  52                 	db	82	;'R'
  3073  00FEE4  4D                 	db	77	;'M'
  3074  00FEE5  53                 	db	83	;'S'
  3075  00FEE6  20                 	db	32
  3076  00FEE7  56                 	db	86	;'V'
  3077  00FEE8  6F                 	db	111	;'o'
  3078  00FEE9  6C                 	db	108	;'l'
  3079  00FEEA  74                 	db	116	;'t'
  3080  00FEEB  61                 	db	97	;'a'
  3081  00FEEC  67                 	db	103	;'g'
  3082  00FEED  65                 	db	101	;'e'
  3083  00FEEE  3F                 	db	63	;'?'
  3084  00FEEF  00                 	db	0
  3085  00FEF0                     STR_61:
  3086  00FEF0  4D                 	db	77	;'M'
  3087  00FEF1  65                 	db	101	;'e'
  3088  00FEF2  61                 	db	97	;'a'
  3089  00FEF3  73                 	db	115	;'s'
  3090  00FEF4  75                 	db	117	;'u'
  3091  00FEF5  72                 	db	114	;'r'
  3092  00FEF6  65                 	db	101	;'e'
  3093  00FEF7  20                 	db	32
  3094  00FEF8  52                 	db	82	;'R'
  3095  00FEF9  4D                 	db	77	;'M'
  3096  00FEFA  53                 	db	83	;'S'
  3097  00FEFB  20                 	db	32
  3098  00FEFC  43                 	db	67	;'C'
  3099  00FEFD  75                 	db	117	;'u'
  3100  00FEFE  72                 	db	114	;'r'
  3101  00FEFF  72                 	db	114	;'r'
  3102  00FF00  65                 	db	101	;'e'
  3103  00FF01  6E                 	db	110	;'n'
  3104  00FF02  74                 	db	116	;'t'
  3105  00FF03  3F                 	db	63	;'?'
  3106  00FF04  00                 	db	0
  3107  00FF05                     STR_55:
  3108  00FF05  4D                 	db	77	;'M'
  3109  00FF06  65                 	db	101	;'e'
  3110  00FF07  61                 	db	97	;'a'
  3111  00FF08  73                 	db	115	;'s'
  3112  00FF09  75                 	db	117	;'u'
  3113  00FF0A  72                 	db	114	;'r'
  3114  00FF0B  65                 	db	101	;'e'
  3115  00FF0C  20                 	db	32
  3116  00FF0D  44                 	db	68	;'D'
  3117  00FF0E  69                 	db	105	;'i'
  3118  00FF0F  65                 	db	101	;'e'
  3119  00FF10  20                 	db	32
  3120  00FF11  54                 	db	84	;'T'
  3121  00FF12  65                 	db	101	;'e'
  3122  00FF13  6D                 	db	109	;'m'
  3123  00FF14  70                 	db	112	;'p'
  3124  00FF15  3F                 	db	63	;'?'
  3125  00FF16  00                 	db	0
  3126  00FF17                     STR_49:
  3127  00FF17  41                 	db	65	;'A'
  3128  00FF18  43                 	db	67	;'C'
  3129  00FF19  20                 	db	32
  3130  00FF1A  50                 	db	80	;'P'
  3131  00FF1B  6F                 	db	111	;'o'
  3132  00FF1C  77                 	db	119	;'w'
  3133  00FF1D  65                 	db	101	;'e'
  3134  00FF1E  72                 	db	114	;'r'
  3135  00FF1F  20                 	db	32
  3136  00FF20  4D                 	db	77	;'M'
  3137  00FF21  65                 	db	101	;'e'
  3138  00FF22  74                 	db	116	;'t'
  3139  00FF23  65                 	db	101	;'e'
  3140  00FF24  72                 	db	114	;'r'
  3141  00FF25  0A                 	db	10
  3142  00FF26  0D                 	db	13
  3143  00FF27  00                 	db	0
  3144  00FF28                     STR_51:
  3145  00FF28  4D                 	db	77	;'M'
  3146  00FF29  65                 	db	101	;'e'
  3147  00FF2A  61                 	db	97	;'a'
  3148  00FF2B  73                 	db	115	;'s'
  3149  00FF2C  75                 	db	117	;'u'
  3150  00FF2D  72                 	db	114	;'r'
  3151  00FF2E  65                 	db	101	;'e'
  3152  00FF2F  20                 	db	32
  3153  00FF30  50                 	db	80	;'P'
  3154  00FF31  4F                 	db	79	;'O'
  3155  00FF32  53                 	db	83	;'S'
  3156  00FF33  33                 	db	51	;'3'
  3157  00FF34  50                 	db	80	;'P'
  3158  00FF35  33                 	db	51	;'3'
  3159  00FF36  3F                 	db	63	;'?'
  3160  00FF37  00                 	db	0
  3161  00FF38                     STR_67:
  3162  00FF38  44                 	db	68	;'D'
  3163  00FF39  69                 	db	105	;'i'
  3164  00FF3A  73                 	db	115	;'s'
  3165  00FF3B  61                 	db	97	;'a'
  3166  00FF3C  62                 	db	98	;'b'
  3167  00FF3D  6C                 	db	108	;'l'
  3168  00FF3E  65                 	db	101	;'e'
  3169  00FF3F  20                 	db	32
  3170  00FF40  44                 	db	68	;'D'
  3171  00FF41  69                 	db	105	;'i'
  3172  00FF42  6D                 	db	109	;'m'
  3173  00FF43  6D                 	db	109	;'m'
  3174  00FF44  69                 	db	105	;'i'
  3175  00FF45  6E                 	db	110	;'n'
  3176  00FF46  67                 	db	103	;'g'
  3177  00FF47  00                 	db	0
  3178  00FF48                     STR_53:
  3179  00FF48  4D                 	db	77	;'M'
  3180  00FF49  65                 	db	101	;'e'
  3181  00FF4A  61                 	db	97	;'a'
  3182  00FF4B  73                 	db	115	;'s'
  3183  00FF4C  75                 	db	117	;'u'
  3184  00FF4D  72                 	db	114	;'r'
  3185  00FF4E  65                 	db	101	;'e'
  3186  00FF4F  20                 	db	32
  3187  00FF50  50                 	db	80	;'P'
  3188  00FF51  4F                 	db	79	;'O'
  3189  00FF52  53                 	db	83	;'S'
  3190  00FF53  31                 	db	49	;'1'
  3191  00FF54  32                 	db	50	;'2'
  3192  00FF55  3F                 	db	63	;'?'
  3193  00FF56  00                 	db	0
  3194  00FF57                     STR_65:
  3195  00FF57  45                 	db	69	;'E'
  3196  00FF58  6E                 	db	110	;'n'
  3197  00FF59  61                 	db	97	;'a'
  3198  00FF5A  62                 	db	98	;'b'
  3199  00FF5B  6C                 	db	108	;'l'
  3200  00FF5C  65                 	db	101	;'e'
  3201  00FF5D  20                 	db	32
  3202  00FF5E  44                 	db	68	;'D'
  3203  00FF5F  69                 	db	105	;'i'
  3204  00FF60  6D                 	db	109	;'m'
  3205  00FF61  6D                 	db	109	;'m'
  3206  00FF62  69                 	db	105	;'i'
  3207  00FF63  6E                 	db	110	;'n'
  3208  00FF64  67                 	db	103	;'g'
  3209  00FF65  00                 	db	0
  3210  00FF66                     STR_57:
  3211  00FF66  4D                 	db	77	;'M'
  3212  00FF67  65                 	db	101	;'e'
  3213  00FF68  61                 	db	97	;'a'
  3214  00FF69  73                 	db	115	;'s'
  3215  00FF6A  75                 	db	117	;'u'
  3216  00FF6B  72                 	db	114	;'r'
  3217  00FF6C  65                 	db	101	;'e'
  3218  00FF6D  20                 	db	32
  3219  00FF6E  46                 	db	70	;'F'
  3220  00FF6F  56                 	db	86	;'V'
  3221  00FF70  52                 	db	82	;'R'
  3222  00FF71  3F                 	db	63	;'?'
  3223  00FF72  00                 	db	0
  3224  00FF73                     STR_71:
  3225  00FF73  44                 	db	68	;'D'
  3226  00FF74  69                 	db	105	;'i'
  3227  00FF75  73                 	db	115	;'s'
  3228  00FF76  61                 	db	97	;'a'
  3229  00FF77  62                 	db	98	;'b'
  3230  00FF78  6C                 	db	108	;'l'
  3231  00FF79  65                 	db	101	;'e'
  3232  00FF7A  20                 	db	32
  3233  00FF7B  4C                 	db	76	;'L'
  3234  00FF7C  6F                 	db	111	;'o'
  3235  00FF7D  61                 	db	97	;'a'
  3236  00FF7E  64                 	db	100	;'d'
  3237  00FF7F  00                 	db	0
  3238  00FF80                     STR_69:
  3239  00FF80  45                 	db	69	;'E'
  3240  00FF81  6E                 	db	110	;'n'
  3241  00FF82  61                 	db	97	;'a'
  3242  00FF83  62                 	db	98	;'b'
  3243  00FF84  6C                 	db	108	;'l'
  3244  00FF85  65                 	db	101	;'e'
  3245  00FF86  20                 	db	32
  3246  00FF87  4C                 	db	76	;'L'
  3247  00FF88  6F                 	db	111	;'o'
  3248  00FF89  61                 	db	97	;'a'
  3249  00FF8A  64                 	db	100	;'d'
  3250  00FF8B  00                 	db	0
  3251  00FF8C                     STR_78:
  3252  00FF8C  4F                 	db	79	;'O'
  3253  00FF8D  6E                 	db	110	;'n'
  3254  00FF8E  20                 	db	32
  3255  00FF8F  54                 	db	84	;'T'
  3256  00FF90  69                 	db	105	;'i'
  3257  00FF91  6D                 	db	109	;'m'
  3258  00FF92  65                 	db	101	;'e'
  3259  00FF93  3F                 	db	63	;'?'
  3260  00FF94  00                 	db	0
  3261  00FF95                     STR_47:
  3262  00FF95  2A                 	db	42
  3263  00FF96  49                 	db	73	;'I'
  3264  00FF97  44                 	db	68	;'D'
  3265  00FF98  4E                 	db	78	;'N'
  3266  00FF99  3F                 	db	63	;'?'
  3267  00FF9A  00                 	db	0
  3268  00FF9B                     STR_44:
  3269  00FF9B  43                 	db	67	;'C'
  3270  00FF9C  6C                 	db	108	;'l'
  3271  00FF9D  65                 	db	101	;'e'
  3272  00FF9E  61                 	db	97	;'a'
  3273  00FF9F  72                 	db	114	;'r'
  3274  00FFA0  00                 	db	0
  3275  00FFA1                     STR_41:
  3276  00FFA1  52                 	db	82	;'R'
  3277  00FFA2  65                 	db	101	;'e'
  3278  00FFA3  73                 	db	115	;'s'
  3279  00FFA4  65                 	db	101	;'e'
  3280  00FFA5  74                 	db	116	;'t'
  3281  00FFA6  00                 	db	0
  3282  00FFA7                     STR_80:
  3283  00FFA7  48                 	db	72	;'H'
  3284  00FFA8  65                 	db	101	;'e'
  3285  00FFA9  6C                 	db	108	;'l'
  3286  00FFAA  70                 	db	112	;'p'
  3287  00FFAB  00                 	db	0
  3288  00FFAC                     STR_2:
  3289  00FFAC  1B                 	db	27
  3290  00FFAD  5B                 	db	91	;'['
  3291  00FFAE  32                 	db	50	;'2'
  3292  00FFAF  4A                 	db	74	;'J'
  3293  00FFB0  00                 	db	0
  3294  00FFB1                     STR_48:
  3295  00FFB1  49                 	db	73	;'I'
  3296  00FFB2  44                 	db	68	;'D'
  3297  00FFB3  4E                 	db	78	;'N'
  3298  00FFB4  00                 	db	0
  3299  00FFB5                     STR_3:
  3300  00FFB5  1B                 	db	27
  3301  00FFB6  5B                 	db	91	;'['
  3302  00FFB7  48                 	db	72	;'H'
  3303  00FFB8  00                 	db	0
  3304  00FFB9  1B                 	db	27
  3305  00FFBA  5B                 	db	91	;'['
  3306  00FFBB  73                 	db	115	;'s'
  3307  00FFBC  00                 	db	0
  3308  00FFBD  1B                 	db	27
  3309  00FFBE  5B                 	db	91	;'['
  3310  00FFBF  75                 	db	117	;'u'
  3311  00FFC0  00                 	db	0
  3312  00FFC1                     STR_1:
  3313  00FFC1  1B                 	db	27
  3314  00FFC2  5B                 	db	91	;'['
  3315  00FFC3  4B                 	db	75	;'K'
  3316  00FFC4  00                 	db	0
  3317  00FFC5                     STR_20:
  3318  00FFC5  33                 	db	51	;'3'
  3319  00FFC6  30                 	db	48	;'0'
  3320  00FFC7  00                 	db	0
  3321  00FFC8                     STR_30:
  3322  00FFC8  34                 	db	52	;'4'
  3323  00FFC9  30                 	db	48	;'0'
  3324  00FFCA  00                 	db	0
  3325  00FFCB                     STR_21:
  3326  00FFCB  33                 	db	51	;'3'
  3327  00FFCC  31                 	db	49	;'1'
  3328  00FFCD  00                 	db	0
  3329  00FFCE                     STR_31:
  3330  00FFCE  34                 	db	52	;'4'
  3331  00FFCF  31                 	db	49	;'1'
  3332  00FFD0  00                 	db	0
  3333  00FFD1                     STR_22:
  3334  00FFD1  33                 	db	51	;'3'
  3335  00FFD2  32                 	db	50	;'2'
  3336  00FFD3  00                 	db	0
  3337  00FFD4                     STR_32:
  3338  00FFD4  34                 	db	52	;'4'
  3339  00FFD5  32                 	db	50	;'2'
  3340  00FFD6  00                 	db	0
  3341  00FFD7                     STR_23:
  3342  00FFD7  33                 	db	51	;'3'
  3343  00FFD8  33                 	db	51	;'3'
  3344  00FFD9  00                 	db	0
  3345  00FFDA                     STR_33:
  3346  00FFDA  34                 	db	52	;'4'
  3347  00FFDB  33                 	db	51	;'3'
  3348  00FFDC  00                 	db	0
  3349  00FFDD                     STR_24:
  3350  00FFDD  33                 	db	51	;'3'
  3351  00FFDE  34                 	db	52	;'4'
  3352  00FFDF  00                 	db	0
  3353  00FFE0                     STR_34:
  3354  00FFE0  34                 	db	52	;'4'
  3355  00FFE1  34                 	db	52	;'4'
  3356  00FFE2  00                 	db	0
  3357  00FFE3                     STR_25:
  3358  00FFE3  33                 	db	51	;'3'
  3359  00FFE4  35                 	db	53	;'5'
  3360  00FFE5  00                 	db	0
  3361  00FFE6                     STR_35:
  3362  00FFE6  34                 	db	52	;'4'
  3363  00FFE7  35                 	db	53	;'5'
  3364  00FFE8  00                 	db	0
  3365  00FFE9                     STR_26:
  3366  00FFE9  33                 	db	51	;'3'
  3367  00FFEA  36                 	db	54	;'6'
  3368  00FFEB  00                 	db	0
  3369  00FFEC                     STR_36:
  3370  00FFEC  34                 	db	52	;'4'
  3371  00FFED  36                 	db	54	;'6'
  3372  00FFEE  00                 	db	0
  3373  00FFEF                     STR_27:
  3374  00FFEF  33                 	db	51	;'3'
  3375  00FFF0  37                 	db	55	;'7'
  3376  00FFF1  00                 	db	0
  3377  00FFF2                     STR_37:
  3378  00FFF2  34                 	db	52	;'4'
  3379  00FFF3  37                 	db	55	;'7'
  3380  00FFF4  00                 	db	0
  3381  00FFF5                     STR_11:
  3382  00FFF5  1B                 	db	27
  3383  00FFF6  5B                 	db	91	;'['
  3384  00FFF7  00                 	db	0
  3385  00FFF8                     STR_17:
  3386  00FFF8  38                 	db	56	;'8'
  3387  00FFF9  00                 	db	0
  3388  00FFFA                     STR_19:
  3389  00FFFA  3B                 	db	59	;';'
  3390  00FFFB  00                 	db	0
  3391  00FFFC                     STR_39:
  3392  00FFFC  6D                 	db	109	;'m'
  3393  00FFFD  00                 	db	0
  3394  0000                     
  3395                           ; #config settings
  3396  00FFFE  00                 	db	0	; dummy byte at the end
  3397  0000                     
  3398                           	psect	cinit
  3399  0157CC                     __pcinit:
  3400                           	opt stack 0
  3401  0157CC                     start_initialization:
  3402                           	opt stack 0
  3403  0157CC                     __initialization:
  3404                           	opt stack 0
  3405                           
  3406                           ; Initialize objects allocated to BANK0 (6 bytes)
  3407                           ; load TBLPTR registers with __pidataBANK0
  3408  0157CC  0E80               	movlw	low __pidataBANK0
  3409  0157CE  6EF6               	movwf	tblptrl,c
  3410  0157D0  0E5F               	movlw	high __pidataBANK0
  3411  0157D2  6EF7               	movwf	tblptrh,c
  3412  0157D4  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3413  0157D6  6EF8               	movwf	tblptru,c
  3414  0157D8  EE00  F0E5         	lfsr	0,__pdataBANK0
  3415  0157DC  EE10 F006          	lfsr	1,6
  3416  0157E0                     copy_data0:
  3417  0157E0  0009               	tblrd		*+
  3418  0157E2  CFF5 FFEE          	movff	tablat,postinc0
  3419  0157E6  50E5               	movf	postdec1,w,c
  3420  0157E8  50E1               	movf	fsr1l,w,c
  3421  0157EA  E1FA               	bnz	copy_data0
  3422                           
  3423                           ; Clear objects allocated to BANK2 (192 bytes)
  3424  0157EC  EE02  F000         	lfsr	0,__pbssBANK2
  3425  0157F0  0EC0               	movlw	192
  3426  0157F2                     clear_0:
  3427  0157F2  6AEE               	clrf	postinc0,c
  3428  0157F4  06E8               	decf	wreg,f,c
  3429  0157F6  E1FD               	bnz	clear_0
  3430                           
  3431                           ; Clear objects allocated to BANK1 (37 bytes)
  3432  0157F8  EE01  F0B8         	lfsr	0,__pbssBANK1
  3433  0157FC  0E25               	movlw	37
  3434  0157FE                     clear_1:
  3435  0157FE  6AEE               	clrf	postinc0,c
  3436  015800  06E8               	decf	wreg,f,c
  3437  015802  E1FD               	bnz	clear_1
  3438                           
  3439                           ; Clear objects allocated to BITBANK0 (1 bytes)
  3440  015804  0100               	movlb	0
  3441  015806  6BEB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  3442                           
  3443                           ; Clear objects allocated to BANK0 (32 bytes)
  3444  015808  EE00  F0C5         	lfsr	0,__pbssBANK0
  3445  01580C  0E20               	movlw	32
  3446  01580E                     clear_2:
  3447  01580E  6AEE               	clrf	postinc0,c
  3448  015810  06E8               	decf	wreg,f,c
  3449  015812  E1FD               	bnz	clear_2
  3450  015814                     end_of_initialization:
  3451                           	opt stack 0
  3452  015814                     __end_of__initialization:
  3453                           	opt stack 0
  3454  015814  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3455  015816  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3456  015818  0100               	movlb	0
  3457  01581A  EF58  F0A9         	goto	_main	;jump to C main() function
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           postdec1	equ	0xFE5
  3465                           fsr1l	equ	0xFE1
  3466                           
  3467                           	psect	bitbssBANK0
  3468  000758                     __pbitbssBANK0:
  3469                           	opt stack 0
  3470  000758                     _eusart2RxStringReady:
  3471                           	opt stack 0
  3472  000758                     	ds	1
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1l	equ	0xFE1
  3481                           
  3482                           	psect	bssBANK0
  3483  0000C5                     __pbssBANK0:
  3484                           	opt stack 0
  3485  0000C5                     _Imeas:
  3486                           	opt stack 0
  3487  0000C5                     	ds	3
  3488  0000C8                     _Ipk:
  3489                           	opt stack 0
  3490  0000C8                     	ds	3
  3491  0000CB                     _POS3P3_ADC_Result:
  3492                           	opt stack 0
  3493  0000CB                     	ds	3
  3494  0000CE                     _ADC_Result_Scaling:
  3495                           	opt stack 0
  3496  0000CE                     	ds	3
  3497  0000D1                     _ADCC_ADI_InterruptHandler:
  3498                           	opt stack 0
  3499  0000D1                     	ds	3
  3500  0000D4                     _EUSART2_RxDefaultInterruptHandler:
  3501                           	opt stack 0
  3502  0000D4                     	ds	3
  3503  0000D7                     _errno:
  3504                           	opt stack 0
  3505  0000D7                     	ds	2
  3506  0000D9                     _dimming_period:
  3507                           	opt stack 0
  3508  0000D9                     	ds	2
  3509  0000DB                     _background_color:
  3510                           	opt stack 0
  3511  0000DB                     	ds	1
  3512  0000DC                     _foreground_color:
  3513                           	opt stack 0
  3514  0000DC                     	ds	1
  3515  0000DD                     _attribute:
  3516                           	opt stack 0
  3517  0000DD                     	ds	1
  3518  0000DE                     _eusart2RxHead:
  3519                           	opt stack 0
  3520  0000DE                     	ds	1
  3521  0000DF                     _TRIAC_Firing_Angle:
  3522                           	opt stack 0
  3523  0000DF                     	ds	3
  3524  0000E2                     _FVR_ADC_Result:
  3525                           	opt stack 0
  3526  0000E2                     	ds	3
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           postdec1	equ	0xFE5
  3534                           fsr1l	equ	0xFE1
  3535                           
  3536                           	psect	dataBANK0
  3537  0000E5                     __pdataBANK0:
  3538                           	opt stack 0
  3539  0000E5                     _Vpk:
  3540                           	opt stack 0
  3541  0000E5                     	ds	3
  3542  0000E8                     _Temp_ADC_Offset:
  3543                           	opt stack 0
  3544  0000E8                     	ds	3
  3545                           tblptru	equ	0xFF8
  3546                           tblptrh	equ	0xFF7
  3547                           tblptrl	equ	0xFF6
  3548                           tablat	equ	0xFF5
  3549                           postinc0	equ	0xFEE
  3550                           wreg	equ	0xFE8
  3551                           postdec1	equ	0xFE5
  3552                           fsr1l	equ	0xFE1
  3553                           
  3554                           	psect	bssBANK1
  3555  0001B8                     __pbssBANK1:
  3556                           	opt stack 0
  3557  0001B8                     _on_time:
  3558                           	opt stack 0
  3559  0001B8                     	ds	4
  3560  0001BC                     _TMR5_InterruptHandler:
  3561                           	opt stack 0
  3562  0001BC                     	ds	3
  3563  0001BF                     _Vrms:
  3564                           	opt stack 0
  3565  0001BF                     	ds	3
  3566  0001C2                     _Irms:
  3567                           	opt stack 0
  3568  0001C2                     	ds	3
  3569  0001C5                     _Temp_ADC_Result:
  3570                           	opt stack 0
  3571  0001C5                     	ds	3
  3572  0001C8                     _POS12_ADC_Result:
  3573                           	opt stack 0
  3574  0001C8                     	ds	3
  3575  0001CB                     _TMR7_InterruptHandler:
  3576                           	opt stack 0
  3577  0001CB                     	ds	3
  3578  0001CE                     _TMR6_InterruptHandler:
  3579                           	opt stack 0
  3580  0001CE                     	ds	3
  3581  0001D1                     _EUSART2_TxDefaultInterruptHandler:
  3582                           	opt stack 0
  3583  0001D1                     	ds	3
  3584  0001D4                     _timer5ReloadVal:
  3585                           	opt stack 0
  3586  0001D4                     	ds	2
  3587  0001D6                     _timer7ReloadVal:
  3588                           	opt stack 0
  3589  0001D6                     	ds	2
  3590  0001D8                     _eusart2RxCount:
  3591                           	opt stack 0
  3592  0001D8                     	ds	1
  3593  0001D9                     _eusart2RxTail:
  3594                           	opt stack 0
  3595  0001D9                     	ds	1
  3596  0001DA                     _eusart2TxBufferRemaining:
  3597                           	opt stack 0
  3598  0001DA                     	ds	1
  3599  0001DB                     _eusart2TxTail:
  3600                           	opt stack 0
  3601  0001DB                     	ds	1
  3602  0001DC                     _eusart2TxHead:
  3603                           	opt stack 0
  3604  0001DC                     	ds	1
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           postinc0	equ	0xFEE
  3610                           wreg	equ	0xFE8
  3611                           postdec1	equ	0xFE5
  3612                           fsr1l	equ	0xFE1
  3613                           
  3614                           	psect	bssBANK2
  3615  000200                     __pbssBANK2:
  3616                           	opt stack 0
  3617  000200                     _eusart2RxBuffer:
  3618                           	opt stack 0
  3619  000200                     	ds	64
  3620  000240                     _eusart2TxBuffer:
  3621                           	opt stack 0
  3622  000240                     	ds	64
  3623  000280                     _line:
  3624                           	opt stack 0
  3625  000280                     	ds	64
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           fsr1l	equ	0xFE1
  3634                           
  3635                           	psect	cstackBANK1
  3636  000100                     __pcstackBANK1:
  3637                           	opt stack 0
  3638  000100                     ??_heartbeatTimerCallback:
  3639  000100                     ADCC_StartConversion@channel:
  3640                           	opt stack 0
  3641  000100                     TMR7_WriteTimer@timerVal:
  3642                           	opt stack 0
  3643                           
  3644                           ; 2 bytes @ 0x0
  3645  000100                     	ds	1
  3646  000101                     
  3647                           ; 1 bytes @ 0x1
  3648  000101                     	ds	1
  3649  000102                     ??_INTERRUPT_InterruptManagerLow:
  3650  000102                     
  3651                           ; 1 bytes @ 0x2
  3652  000102                     	ds	21
  3653  000117                     ??_isdigit:
  3654  000117                     ?_strlen:
  3655                           	opt stack 0
  3656  000117                     ?_strcmp:
  3657                           	opt stack 0
  3658  000117                     ?_strchr:
  3659                           	opt stack 0
  3660  000117                     ?___awmod:
  3661                           	opt stack 0
  3662  000117                     ?___ftpack:
  3663                           	opt stack 0
  3664  000117                     ?__tdiv_to_l_:
  3665                           	opt stack 0
  3666  000117                     ?__div_to_l_:
  3667                           	opt stack 0
  3668  000117                     ?___lldiv:
  3669                           	opt stack 0
  3670  000117                     EUSART2_Read@readValue:
  3671                           	opt stack 0
  3672  000117                     EUSART2_Write@txData:
  3673                           	opt stack 0
  3674  000117                     ___awmod@dividend:
  3675                           	opt stack 0
  3676  000117                     strcat@to:
  3677                           	opt stack 0
  3678  000117                     strcmp@s1:
  3679                           	opt stack 0
  3680  000117                     strlen@s:
  3681                           	opt stack 0
  3682  000117                     strncpy@to:
  3683                           	opt stack 0
  3684  000117                     strchr@ptr:
  3685                           	opt stack 0
  3686  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  3687                           	opt stack 0
  3688  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3689                           	opt stack 0
  3690  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3691                           	opt stack 0
  3692  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  3693                           	opt stack 0
  3694  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  3695                           	opt stack 0
  3696  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  3697                           	opt stack 0
  3698  000117                     __div_to_l_@f1:
  3699                           	opt stack 0
  3700  000117                     ___ftpack@arg:
  3701                           	opt stack 0
  3702  000117                     __tdiv_to_l_@f1:
  3703                           	opt stack 0
  3704  000117                     ___ftge@ff1:
  3705                           	opt stack 0
  3706  000117                     ___lldiv@dividend:
  3707                           	opt stack 0
  3708                           
  3709                           ; 4 bytes @ 0x17
  3710  000117                     	ds	1
  3711  000118                     putch@txData:
  3712                           	opt stack 0
  3713  000118                     _isdigit$2484:
  3714                           	opt stack 0
  3715                           
  3716                           ; 1 bytes @ 0x18
  3717  000118                     	ds	1
  3718  000119                     ??_strlen:
  3719  000119                     isdigit@c:
  3720                           	opt stack 0
  3721  000119                     ___awmod@divisor:
  3722                           	opt stack 0
  3723  000119                     strcat@from:
  3724                           	opt stack 0
  3725  000119                     strcmp@s2:
  3726                           	opt stack 0
  3727  000119                     strncpy@from:
  3728                           	opt stack 0
  3729  000119                     strchr@chr:
  3730                           	opt stack 0
  3731                           
  3732                           ; 2 bytes @ 0x19
  3733  000119                     	ds	1
  3734  00011A                     ??_TMR7_Initialize:
  3735  00011A                     ??_TMR5_Initialize:
  3736  00011A                     ___ftpack@exp:
  3737                           	opt stack 0
  3738  00011A                     __div_to_l_@f2:
  3739                           	opt stack 0
  3740  00011A                     __tdiv_to_l_@f2:
  3741                           	opt stack 0
  3742  00011A                     ___ftge@ff2:
  3743                           	opt stack 0
  3744                           
  3745                           ; 3 bytes @ 0x1A
  3746  00011A                     	ds	1
  3747  00011B                     ??_strcmp:
  3748  00011B                     ___awmod@counter:
  3749                           	opt stack 0
  3750  00011B                     ___ftpack@sign:
  3751                           	opt stack 0
  3752  00011B                     strcat@cp:
  3753                           	opt stack 0
  3754  00011B                     strlen@cp:
  3755                           	opt stack 0
  3756  00011B                     strncpy@size:
  3757                           	opt stack 0
  3758  00011B                     ___lldiv@divisor:
  3759                           	opt stack 0
  3760                           
  3761                           ; 4 bytes @ 0x1B
  3762  00011B                     	ds	1
  3763  00011C                     ??___ftpack:
  3764  00011C                     ___awmod@sign:
  3765                           	opt stack 0
  3766  00011C                     strcmp@r:
  3767                           	opt stack 0
  3768                           
  3769                           ; 1 bytes @ 0x1C
  3770  00011C                     	ds	1
  3771  00011D                     ??__tdiv_to_l_:
  3772  00011D                     ??___ftge:
  3773  00011D                     ?_strncmp:
  3774                           	opt stack 0
  3775  00011D                     ?___awdiv:
  3776                           	opt stack 0
  3777  00011D                     ___awdiv@dividend:
  3778                           	opt stack 0
  3779  00011D                     strncpy@cp:
  3780                           	opt stack 0
  3781  00011D                     strncmp@s1:
  3782                           	opt stack 0
  3783  00011D                     __div_to_l_@quot:
  3784                           	opt stack 0
  3785                           
  3786                           ; 4 bytes @ 0x1D
  3787  00011D                     	ds	2
  3788  00011F                     ?___awtoft:
  3789                           	opt stack 0
  3790  00011F                     ?___lltoft:
  3791                           	opt stack 0
  3792  00011F                     ___awdiv@divisor:
  3793                           	opt stack 0
  3794  00011F                     ___awtoft@c:
  3795                           	opt stack 0
  3796  00011F                     strncmp@s2:
  3797                           	opt stack 0
  3798  00011F                     ___lldiv@quotient:
  3799                           	opt stack 0
  3800  00011F                     ___lltoft@c:
  3801                           	opt stack 0
  3802                           
  3803                           ; 4 bytes @ 0x1F
  3804  00011F                     	ds	1
  3805  000120                     __tdiv_to_l_@quot:
  3806                           	opt stack 0
  3807                           
  3808                           ; 4 bytes @ 0x20
  3809  000120                     	ds	1
  3810  000121                     ___awdiv@counter:
  3811                           	opt stack 0
  3812  000121                     __div_to_l_@cntr:
  3813                           	opt stack 0
  3814  000121                     strncmp@len:
  3815                           	opt stack 0
  3816                           
  3817                           ; 2 bytes @ 0x21
  3818  000121                     	ds	1
  3819  000122                     ___awdiv@sign:
  3820                           	opt stack 0
  3821  000122                     ___awtoft@sign:
  3822                           	opt stack 0
  3823  000122                     __div_to_l_@exp1:
  3824                           	opt stack 0
  3825                           
  3826                           ; 1 bytes @ 0x22
  3827  000122                     	ds	1
  3828  000123                     ??_strncmp:
  3829  000123                     ??___lltoft:
  3830  000123                     ?___ftneg:
  3831                           	opt stack 0
  3832  000123                     ___lldiv@counter:
  3833                           	opt stack 0
  3834  000123                     ___awdiv@quotient:
  3835                           	opt stack 0
  3836  000123                     ___ftneg@f1:
  3837                           	opt stack 0
  3838                           
  3839                           ; 3 bytes @ 0x23
  3840  000123                     	ds	1
  3841  000124                     ?___llmod:
  3842                           	opt stack 0
  3843  000124                     __tdiv_to_l_@cntr:
  3844                           	opt stack 0
  3845  000124                     ___llmod@dividend:
  3846                           	opt stack 0
  3847                           
  3848                           ; 4 bytes @ 0x24
  3849  000124                     	ds	1
  3850  000125                     ?___wmul:
  3851                           	opt stack 0
  3852  000125                     __tdiv_to_l_@exp1:
  3853                           	opt stack 0
  3854  000125                     ___wmul@multiplier:
  3855                           	opt stack 0
  3856                           
  3857                           ; 2 bytes @ 0x25
  3858  000125                     	ds	1
  3859  000126                     ?_strstr:
  3860                           	opt stack 0
  3861  000126                     strstr@s1:
  3862                           	opt stack 0
  3863                           
  3864                           ; 2 bytes @ 0x26
  3865  000126                     	ds	1
  3866  000127                     ___lltoft@exp:
  3867                           	opt stack 0
  3868  000127                     ___wmul@multiplicand:
  3869                           	opt stack 0
  3870                           
  3871                           ; 2 bytes @ 0x27
  3872  000127                     	ds	1
  3873  000128                     strstr@s2:
  3874                           	opt stack 0
  3875  000128                     ___llmod@divisor:
  3876                           	opt stack 0
  3877                           
  3878                           ; 4 bytes @ 0x28
  3879  000128                     	ds	1
  3880  000129                     ___wmul@product:
  3881                           	opt stack 0
  3882                           
  3883                           ; 2 bytes @ 0x29
  3884  000129                     	ds	1
  3885  00012A                     
  3886                           ; 1 bytes @ 0x2A
  3887  00012A                     	ds	1
  3888  00012B                     ?_atoi:
  3889                           	opt stack 0
  3890  00012B                     ?___ftadd:
  3891                           	opt stack 0
  3892  00012B                     atoi@s:
  3893                           	opt stack 0
  3894  00012B                     ___ftadd@f1:
  3895                           	opt stack 0
  3896                           
  3897                           ; 3 bytes @ 0x2B
  3898  00012B                     	ds	1
  3899  00012C                     ___llmod@counter:
  3900                           	opt stack 0
  3901                           
  3902                           ; 1 bytes @ 0x2C
  3903  00012C                     	ds	1
  3904  00012D                     ??_atoi:
  3905                           
  3906                           ; 1 bytes @ 0x2D
  3907  00012D                     	ds	1
  3908  00012E                     ___ftadd@f2:
  3909                           	opt stack 0
  3910                           
  3911                           ; 3 bytes @ 0x2E
  3912  00012E                     	ds	1
  3913  00012F                     atoi@sign:
  3914                           	opt stack 0
  3915                           
  3916                           ; 1 bytes @ 0x2F
  3917  00012F                     	ds	1
  3918  000130                     atoi@a:
  3919                           	opt stack 0
  3920                           
  3921                           ; 2 bytes @ 0x30
  3922  000130                     	ds	1
  3923  000131                     ??___ftadd:
  3924                           
  3925                           ; 1 bytes @ 0x31
  3926  000131                     	ds	3
  3927  000134                     ___ftadd@sign:
  3928                           	opt stack 0
  3929                           
  3930                           ; 1 bytes @ 0x34
  3931  000134                     	ds	1
  3932  000135                     ___ftadd@exp2:
  3933                           	opt stack 0
  3934                           
  3935                           ; 1 bytes @ 0x35
  3936  000135                     	ds	1
  3937  000136                     ___ftadd@exp1:
  3938                           	opt stack 0
  3939                           
  3940                           ; 1 bytes @ 0x36
  3941  000136                     	ds	1
  3942  000137                     ?___ftdiv:
  3943                           	opt stack 0
  3944  000137                     ?___ftsub:
  3945                           	opt stack 0
  3946  000137                     ___ftdiv@f1:
  3947                           	opt stack 0
  3948  000137                     ___ftsub@f1:
  3949                           	opt stack 0
  3950                           
  3951                           ; 3 bytes @ 0x37
  3952  000137                     	ds	3
  3953  00013A                     ___ftdiv@f2:
  3954                           	opt stack 0
  3955  00013A                     ___ftsub@f2:
  3956                           	opt stack 0
  3957                           
  3958                           ; 3 bytes @ 0x3A
  3959  00013A                     	ds	3
  3960  00013D                     ??___ftdiv:
  3961  00013D                     
  3962                           ; 1 bytes @ 0x3D
  3963  00013D                     	ds	3
  3964  000140                     ___ftdiv@cntr:
  3965                           	opt stack 0
  3966                           
  3967                           ; 1 bytes @ 0x40
  3968  000140                     	ds	1
  3969  000141                     ___ftdiv@f3:
  3970                           	opt stack 0
  3971                           
  3972                           ; 3 bytes @ 0x41
  3973  000141                     	ds	3
  3974  000144                     ___ftdiv@exp:
  3975                           	opt stack 0
  3976                           
  3977                           ; 1 bytes @ 0x44
  3978  000144                     	ds	1
  3979  000145                     ___ftdiv@sign:
  3980                           	opt stack 0
  3981                           
  3982                           ; 1 bytes @ 0x45
  3983  000145                     	ds	1
  3984  000146                     ?___ftmul:
  3985                           	opt stack 0
  3986  000146                     ___ftmul@f1:
  3987                           	opt stack 0
  3988                           
  3989                           ; 3 bytes @ 0x46
  3990  000146                     	ds	3
  3991  000149                     ___ftmul@f2:
  3992                           	opt stack 0
  3993                           
  3994                           ; 3 bytes @ 0x49
  3995  000149                     	ds	3
  3996  00014C                     ??___ftmul:
  3997                           
  3998                           ; 1 bytes @ 0x4C
  3999  00014C                     	ds	3
  4000  00014F                     ___ftmul@exp:
  4001                           	opt stack 0
  4002                           
  4003                           ; 1 bytes @ 0x4F
  4004  00014F                     	ds	1
  4005  000150                     ___ftmul@f3_as_product:
  4006                           	opt stack 0
  4007                           
  4008                           ; 3 bytes @ 0x50
  4009  000150                     	ds	3
  4010  000153                     ___ftmul@cntr:
  4011                           	opt stack 0
  4012                           
  4013                           ; 1 bytes @ 0x53
  4014  000153                     	ds	1
  4015  000154                     ___ftmul@sign:
  4016                           	opt stack 0
  4017                           
  4018                           ; 1 bytes @ 0x54
  4019  000154                     	ds	1
  4020  000155                     ?_fround:
  4021                           	opt stack 0
  4022  000155                     ?_scale:
  4023                           	opt stack 0
  4024  000155                     ?___fttol:
  4025                           	opt stack 0
  4026  000155                     ___fttol@f1:
  4027                           	opt stack 0
  4028                           
  4029                           ; 3 bytes @ 0x55
  4030  000155                     	ds	3
  4031  000158                     _fround$3127:
  4032                           	opt stack 0
  4033  000158                     _scale$3128:
  4034                           	opt stack 0
  4035                           
  4036                           ; 3 bytes @ 0x58
  4037  000158                     	ds	1
  4038  000159                     ??___fttol:
  4039                           
  4040                           ; 1 bytes @ 0x59
  4041  000159                     	ds	2
  4042  00015B                     scale@scl:
  4043                           	opt stack 0
  4044  00015B                     _fround$3126:
  4045                           	opt stack 0
  4046                           
  4047                           ; 3 bytes @ 0x5B
  4048  00015B                     	ds	3
  4049  00015E                     fround@prec:
  4050                           	opt stack 0
  4051  00015E                     ___fttol@sign1:
  4052                           	opt stack 0
  4053                           
  4054                           ; 1 bytes @ 0x5E
  4055  00015E                     	ds	1
  4056  00015F                     ___fttol@lval:
  4057                           	opt stack 0
  4058                           
  4059                           ; 4 bytes @ 0x5F
  4060  00015F                     	ds	4
  4061  000163                     ___fttol@exp1:
  4062                           	opt stack 0
  4063                           
  4064                           ; 1 bytes @ 0x63
  4065  000163                     	ds	1
  4066  000164                     ?_printf:
  4067                           	opt stack 0
  4068  000164                     printf@f:
  4069                           	opt stack 0
  4070                           
  4071                           ; 2 bytes @ 0x64
  4072  000164                     	ds	8
  4073  00016C                     ??_printf:
  4074                           
  4075                           ; 1 bytes @ 0x6C
  4076  00016C                     	ds	6
  4077  000172                     _printf$3129:
  4078                           	opt stack 0
  4079                           
  4080                           ; 3 bytes @ 0x72
  4081  000172                     	ds	3
  4082  000175                     printf@cp:
  4083                           	opt stack 0
  4084                           
  4085                           ; 2 bytes @ 0x75
  4086  000175                     	ds	2
  4087  000177                     printf@len:
  4088                           	opt stack 0
  4089                           
  4090                           ; 2 bytes @ 0x77
  4091  000177                     	ds	2
  4092  000179                     printf@ap:
  4093                           	opt stack 0
  4094                           
  4095                           ; 2 bytes @ 0x79
  4096  000179                     	ds	2
  4097  00017B                     printf@flag:
  4098                           	opt stack 0
  4099                           
  4100                           ; 2 bytes @ 0x7B
  4101  00017B                     	ds	2
  4102  00017D                     printf@exp:
  4103                           	opt stack 0
  4104                           
  4105                           ; 2 bytes @ 0x7D
  4106  00017D                     	ds	2
  4107  00017F                     printf@tmpval:
  4108                           	opt stack 0
  4109                           
  4110                           ; 4 bytes @ 0x7F
  4111  00017F                     	ds	4
  4112  000183                     printf@val:
  4113                           	opt stack 0
  4114                           
  4115                           ; 4 bytes @ 0x83
  4116  000183                     	ds	4
  4117  000187                     printf@fval:
  4118                           	opt stack 0
  4119                           
  4120                           ; 3 bytes @ 0x87
  4121  000187                     	ds	3
  4122  00018A                     printf@prec:
  4123                           	opt stack 0
  4124                           
  4125                           ; 2 bytes @ 0x8A
  4126  00018A                     	ds	2
  4127  00018C                     printf@c:
  4128                           	opt stack 0
  4129                           
  4130                           ; 1 bytes @ 0x8C
  4131  00018C                     	ds	1
  4132  00018D                     terminal_textAttributes@background_color:
  4133                           	opt stack 0
  4134                           
  4135                           ; 1 bytes @ 0x8D
  4136  00018D                     	ds	1
  4137  00018E                     terminal_textAttributes@input_attribute:
  4138                           	opt stack 0
  4139                           
  4140                           ; 1 bytes @ 0x8E
  4141  00018E                     	ds	1
  4142  00018F                     terminal_textAttributes@foreground_color:
  4143                           	opt stack 0
  4144                           
  4145                           ; 1 bytes @ 0x8F
  4146  00018F                     	ds	1
  4147  000190                     terminal_textAttributes@output_buff:
  4148                           	opt stack 0
  4149                           
  4150                           ; 15 bytes @ 0x90
  4151  000190                     	ds	15
  4152  00019F                     ringBufferLUT@line:
  4153                           	opt stack 0
  4154                           
  4155                           ; 2 bytes @ 0x9F
  4156  00019F                     	ds	2
  4157  0001A1                     ??_ringBufferLUT:
  4158                           
  4159                           ; 1 bytes @ 0xA1
  4160  0001A1                     	ds	2
  4161  0001A3                     ringBufferLUT@angle_degrees:
  4162                           	opt stack 0
  4163                           
  4164                           ; 3 bytes @ 0xA3
  4165  0001A3                     	ds	3
  4166  0001A6                     ringBufferLUT@arg_buff:
  4167                           	opt stack 0
  4168                           
  4169                           ; 3 bytes @ 0xA6
  4170  0001A6                     	ds	3
  4171  0001A9                     ringBufferLUT@percentage:
  4172                           	opt stack 0
  4173                           
  4174                           ; 2 bytes @ 0xA9
  4175  0001A9                     	ds	2
  4176  0001AB                     ringBufferLUT@index:
  4177                           	opt stack 0
  4178                           
  4179                           ; 2 bytes @ 0xAB
  4180  0001AB                     	ds	2
  4181  0001AD                     ??_terminal_ringBufferPull:
  4182                           
  4183                           ; 1 bytes @ 0xAD
  4184  0001AD                     	ds	3
  4185  0001B0                     terminal_ringBufferPull@charNumber:
  4186                           	opt stack 0
  4187                           
  4188                           ; 2 bytes @ 0xB0
  4189  0001B0                     	ds	2
  4190  0001B2                     terminal_ringBufferPull@index_1778:
  4191                           	opt stack 0
  4192                           
  4193                           ; 2 bytes @ 0xB2
  4194  0001B2                     	ds	2
  4195  0001B4                     terminal_ringBufferPull@index:
  4196                           	opt stack 0
  4197                           
  4198                           ; 2 bytes @ 0xB4
  4199  0001B4                     	ds	2
  4200  0001B6                     ??_main:
  4201                           
  4202                           ; 1 bytes @ 0xB6
  4203  0001B6                     	ds	2
  4204                           tblptru	equ	0xFF8
  4205                           tblptrh	equ	0xFF7
  4206                           tblptrl	equ	0xFF6
  4207                           tablat	equ	0xFF5
  4208                           postinc0	equ	0xFEE
  4209                           wreg	equ	0xFE8
  4210                           postdec1	equ	0xFE5
  4211                           fsr1l	equ	0xFE1
  4212                           
  4213                           	psect	cstackBANK0
  4214  000060                     __pcstackBANK0:
  4215                           	opt stack 0
  4216  000060                     ?i2___ftsub:
  4217                           	opt stack 0
  4218  000060                     atan@y:
  4219                           	opt stack 0
  4220  000060                     i2___ftsub@f1:
  4221                           	opt stack 0
  4222                           
  4223                           ; 3 bytes @ 0x0
  4224  000060                     	ds	3
  4225  000063                     atan@x:
  4226                           	opt stack 0
  4227  000063                     i2___ftsub@f2:
  4228                           	opt stack 0
  4229                           
  4230                           ; 3 bytes @ 0x3
  4231  000063                     	ds	3
  4232  000066                     ?i2_printf:
  4233                           	opt stack 0
  4234  000066                     ?_sin:
  4235                           	opt stack 0
  4236  000066                     ?_sqrt:
  4237                           	opt stack 0
  4238  000066                     atan@recip:
  4239                           	opt stack 0
  4240  000066                     i2printf@f:
  4241                           	opt stack 0
  4242  000066                     sin@f:
  4243                           	opt stack 0
  4244  000066                     sqrt@a:
  4245                           	opt stack 0
  4246                           
  4247                           ; 3 bytes @ 0x6
  4248  000066                     	ds	1
  4249  000067                     atan@val_squared:
  4250                           	opt stack 0
  4251                           
  4252                           ; 3 bytes @ 0x7
  4253  000067                     	ds	1
  4254  000068                     ??i2_printf:
  4255                           
  4256                           ; 1 bytes @ 0x8
  4257  000068                     	ds	1
  4258  000069                     ??_sqrt:
  4259  000069                     sin@y:
  4260                           	opt stack 0
  4261                           
  4262                           ; 3 bytes @ 0x9
  4263  000069                     	ds	1
  4264  00006A                     atan@val:
  4265                           	opt stack 0
  4266                           
  4267                           ; 3 bytes @ 0xA
  4268  00006A                     	ds	2
  4269  00006C                     sqrt@og:
  4270                           	opt stack 0
  4271  00006C                     _sin$3319:
  4272                           	opt stack 0
  4273                           
  4274                           ; 3 bytes @ 0xC
  4275  00006C                     	ds	2
  4276  00006E                     i2_printf$3323:
  4277                           	opt stack 0
  4278                           
  4279                           ; 3 bytes @ 0xE
  4280  00006E                     	ds	1
  4281  00006F                     sqrt@i:
  4282                           	opt stack 0
  4283  00006F                     sin@x2:
  4284                           	opt stack 0
  4285                           
  4286                           ; 3 bytes @ 0xF
  4287  00006F                     	ds	1
  4288  000070                     sqrt@z:
  4289                           	opt stack 0
  4290                           
  4291                           ; 3 bytes @ 0x10
  4292  000070                     	ds	1
  4293  000071                     i2printf@cp:
  4294                           	opt stack 0
  4295                           
  4296                           ; 2 bytes @ 0x11
  4297  000071                     	ds	1
  4298  000072                     sin@sgn:
  4299                           	opt stack 0
  4300                           
  4301                           ; 1 bytes @ 0x12
  4302  000072                     	ds	1
  4303  000073                     ?_currentMeasuredToPeak:
  4304                           	opt stack 0
  4305  000073                     i2printf@len:
  4306                           	opt stack 0
  4307  000073                     currentMeasuredToPeak@Measured:
  4308                           	opt stack 0
  4309  000073                     sqrt@q:
  4310                           	opt stack 0
  4311                           
  4312                           ; 3 bytes @ 0x13
  4313  000073                     	ds	2
  4314  000075                     i2printf@ap:
  4315                           	opt stack 0
  4316                           
  4317                           ; 2 bytes @ 0x15
  4318  000075                     	ds	1
  4319  000076                     currentMeasuredToPeak@Angle:
  4320                           	opt stack 0
  4321  000076                     sqrt@x:
  4322                           	opt stack 0
  4323                           
  4324                           ; 3 bytes @ 0x16
  4325  000076                     	ds	1
  4326  000077                     i2printf@flag:
  4327                           	opt stack 0
  4328                           
  4329                           ; 2 bytes @ 0x17
  4330  000077                     	ds	2
  4331  000079                     ?_asin:
  4332                           	opt stack 0
  4333  000079                     i2printf@exp:
  4334                           	opt stack 0
  4335  000079                     currentMeasuredToPeak@Peak:
  4336                           	opt stack 0
  4337  000079                     asin@x:
  4338                           	opt stack 0
  4339                           
  4340                           ; 3 bytes @ 0x19
  4341  000079                     	ds	2
  4342  00007B                     i2printf@tmpval:
  4343                           	opt stack 0
  4344                           
  4345                           ; 4 bytes @ 0x1B
  4346  00007B                     	ds	1
  4347  00007C                     asin@sgn:
  4348                           	opt stack 0
  4349                           
  4350                           ; 3 bytes @ 0x1C
  4351  00007C                     	ds	3
  4352  00007F                     _asin$3315:
  4353                           	opt stack 0
  4354  00007F                     i2printf@val:
  4355                           	opt stack 0
  4356                           
  4357                           ; 4 bytes @ 0x1F
  4358  00007F                     	ds	3
  4359  000082                     _asin$3318:
  4360                           	opt stack 0
  4361                           
  4362                           ; 3 bytes @ 0x22
  4363  000082                     	ds	1
  4364  000083                     i2printf@fval:
  4365                           	opt stack 0
  4366                           
  4367                           ; 3 bytes @ 0x23
  4368  000083                     	ds	2
  4369  000085                     _asin$3317:
  4370                           	opt stack 0
  4371                           
  4372                           ; 3 bytes @ 0x25
  4373  000085                     	ds	1
  4374  000086                     i2printf@prec:
  4375                           	opt stack 0
  4376                           
  4377                           ; 2 bytes @ 0x26
  4378  000086                     	ds	2
  4379  000088                     i2printf@c:
  4380                           	opt stack 0
  4381  000088                     asin@y:
  4382                           	opt stack 0
  4383                           
  4384                           ; 3 bytes @ 0x28
  4385  000088                     	ds	3
  4386  00008B                     _asin$3316:
  4387                           	opt stack 0
  4388                           
  4389                           ; 3 bytes @ 0x2B
  4390  00008B                     	ds	3
  4391  00008E                     ?_acos:
  4392                           	opt stack 0
  4393  00008E                     acos@x:
  4394                           	opt stack 0
  4395                           
  4396                           ; 3 bytes @ 0x2E
  4397  00008E                     	ds	3
  4398  000091                     _acos$3314:
  4399                           	opt stack 0
  4400                           
  4401                           ; 3 bytes @ 0x31
  4402  000091                     	ds	3
  4403  000094                     ?_peakToRMS:
  4404                           	opt stack 0
  4405  000094                     peakToRMS@Peak:
  4406                           	opt stack 0
  4407                           
  4408                           ; 3 bytes @ 0x34
  4409  000094                     	ds	3
  4410  000097                     peakToRMS@Angle:
  4411                           	opt stack 0
  4412                           
  4413                           ; 3 bytes @ 0x37
  4414  000097                     	ds	3
  4415  00009A                     _peakToRMS$3308:
  4416                           	opt stack 0
  4417                           
  4418                           ; 3 bytes @ 0x3A
  4419  00009A                     	ds	3
  4420  00009D                     _peakToRMS$3309:
  4421                           	opt stack 0
  4422                           
  4423                           ; 3 bytes @ 0x3D
  4424  00009D                     	ds	3
  4425  0000A0                     _peakToRMS$3307:
  4426                           	opt stack 0
  4427                           
  4428                           ; 3 bytes @ 0x40
  4429  0000A0                     	ds	3
  4430  0000A3                     peakToRMS@RMS:
  4431                           	opt stack 0
  4432                           
  4433                           ; 3 bytes @ 0x43
  4434  0000A3                     	ds	3
  4435  0000A6                     _ADC_postProcessingCallback$3311:
  4436                           	opt stack 0
  4437                           
  4438                           ; 3 bytes @ 0x46
  4439  0000A6                     	ds	3
  4440  0000A9                     _ADC_postProcessingCallback$3312:
  4441                           	opt stack 0
  4442                           
  4443                           ; 3 bytes @ 0x49
  4444  0000A9                     	ds	3
  4445  0000AC                     _ADC_postProcessingCallback$3313:
  4446                           	opt stack 0
  4447                           
  4448                           ; 3 bytes @ 0x4C
  4449  0000AC                     	ds	3
  4450  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  4451                           	opt stack 0
  4452                           
  4453                           ; 1 bytes @ 0x4F
  4454  0000AF                     	ds	1
  4455  0000B0                     _ADC_postProcessingCallback$3310:
  4456                           	opt stack 0
  4457                           
  4458                           ; 3 bytes @ 0x50
  4459  0000B0                     	ds	3
  4460  0000B3                     ??_INTERRUPT_InterruptManagerHigh:
  4461                           
  4462                           ; 1 bytes @ 0x53
  4463  0000B3                     	ds	18
  4464                           tblptru	equ	0xFF8
  4465                           tblptrh	equ	0xFF7
  4466                           tblptrl	equ	0xFF6
  4467                           tablat	equ	0xFF5
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           postdec1	equ	0xFE5
  4471                           fsr1l	equ	0xFE1
  4472                           
  4473                           	psect	cstackCOMRAM
  4474  000001                     __pcstackCOMRAM:
  4475                           	opt stack 0
  4476  000001                     ??i2_isdigit:
  4477  000001                     ?_ADCC_GetConversionResult:
  4478                           	opt stack 0
  4479  000001                     ?i2___awmod:
  4480                           	opt stack 0
  4481  000001                     ?i2___ftpack:
  4482                           	opt stack 0
  4483  000001                     ?i2__div_to_l_:
  4484                           	opt stack 0
  4485  000001                     ?i2__tdiv_to_l_:
  4486                           	opt stack 0
  4487  000001                     ?i2___lldiv:
  4488                           	opt stack 0
  4489  000001                     i2EUSART2_Write@txData:
  4490                           	opt stack 0
  4491  000001                     TMR5_WriteTimer@timerVal:
  4492                           	opt stack 0
  4493  000001                     i2___awmod@dividend:
  4494                           	opt stack 0
  4495  000001                     frexp@value:
  4496                           	opt stack 0
  4497  000001                     i2__div_to_l_@f1:
  4498                           	opt stack 0
  4499  000001                     i2___ftpack@arg:
  4500                           	opt stack 0
  4501  000001                     i2__tdiv_to_l_@f1:
  4502                           	opt stack 0
  4503  000001                     i2___lldiv@dividend:
  4504                           	opt stack 0
  4505                           
  4506                           ; 4 bytes @ 0x0
  4507  000001                     	ds	1
  4508  000002                     i2putch@txData:
  4509                           	opt stack 0
  4510  000002                     i2_isdigit$2484:
  4511                           	opt stack 0
  4512                           
  4513                           ; 1 bytes @ 0x1
  4514  000002                     	ds	1
  4515  000003                     ??_ADCC_GetConversionResult:
  4516  000003                     i2isdigit@c:
  4517                           	opt stack 0
  4518  000003                     i2___awmod@divisor:
  4519                           	opt stack 0
  4520                           
  4521                           ; 2 bytes @ 0x2
  4522  000003                     	ds	1
  4523  000004                     i2___ftpack@exp:
  4524                           	opt stack 0
  4525  000004                     frexp@eptr:
  4526                           	opt stack 0
  4527  000004                     i2__div_to_l_@f2:
  4528                           	opt stack 0
  4529  000004                     i2__tdiv_to_l_@f2:
  4530                           	opt stack 0
  4531                           
  4532                           ; 3 bytes @ 0x3
  4533  000004                     	ds	1
  4534  000005                     i2___awmod@counter:
  4535                           	opt stack 0
  4536  000005                     i2___ftpack@sign:
  4537                           	opt stack 0
  4538  000005                     i2___lldiv@divisor:
  4539                           	opt stack 0
  4540                           
  4541                           ; 4 bytes @ 0x4
  4542  000005                     	ds	1
  4543  000006                     ??_frexp:
  4544  000006                     ??i2___ftpack:
  4545  000006                     i2___awmod@sign:
  4546                           	opt stack 0
  4547                           
  4548                           ; 1 bytes @ 0x5
  4549  000006                     	ds	1
  4550  000007                     ??i2__tdiv_to_l_:
  4551  000007                     ?i2___awdiv:
  4552                           	opt stack 0
  4553  000007                     i2___awdiv@dividend:
  4554                           	opt stack 0
  4555  000007                     i2__div_to_l_@quot:
  4556                           	opt stack 0
  4557                           
  4558                           ; 4 bytes @ 0x6
  4559  000007                     	ds	2
  4560  000009                     ?___lwtoft:
  4561                           	opt stack 0
  4562  000009                     ?i2___lltoft:
  4563                           	opt stack 0
  4564  000009                     ___lwtoft@c:
  4565                           	opt stack 0
  4566  000009                     i2___awdiv@divisor:
  4567                           	opt stack 0
  4568  000009                     i2___lldiv@quotient:
  4569                           	opt stack 0
  4570  000009                     i2___lltoft@c:
  4571                           	opt stack 0
  4572                           
  4573                           ; 4 bytes @ 0x8
  4574  000009                     	ds	1
  4575  00000A                     i2__tdiv_to_l_@quot:
  4576                           	opt stack 0
  4577                           
  4578                           ; 4 bytes @ 0x9
  4579  00000A                     	ds	1
  4580  00000B                     i2___awdiv@counter:
  4581                           	opt stack 0
  4582  00000B                     i2__div_to_l_@cntr:
  4583                           	opt stack 0
  4584                           
  4585                           ; 1 bytes @ 0xA
  4586  00000B                     	ds	1
  4587  00000C                     i2___awdiv@sign:
  4588                           	opt stack 0
  4589  00000C                     i2__div_to_l_@exp1:
  4590                           	opt stack 0
  4591                           
  4592                           ; 1 bytes @ 0xB
  4593  00000C                     	ds	1
  4594  00000D                     ??i2___lltoft:
  4595  00000D                     i2___lldiv@counter:
  4596                           	opt stack 0
  4597  00000D                     i2___awdiv@quotient:
  4598                           	opt stack 0
  4599                           
  4600                           ; 2 bytes @ 0xC
  4601  00000D                     	ds	1
  4602  00000E                     ?i2___llmod:
  4603                           	opt stack 0
  4604  00000E                     i2__tdiv_to_l_@cntr:
  4605                           	opt stack 0
  4606  00000E                     i2___llmod@dividend:
  4607                           	opt stack 0
  4608                           
  4609                           ; 4 bytes @ 0xD
  4610  00000E                     	ds	1
  4611  00000F                     ?i2___wmul:
  4612                           	opt stack 0
  4613  00000F                     i2__tdiv_to_l_@exp1:
  4614                           	opt stack 0
  4615  00000F                     i2___wmul@multiplier:
  4616                           	opt stack 0
  4617                           
  4618                           ; 2 bytes @ 0xE
  4619  00000F                     	ds	2
  4620  000011                     i2___lltoft@exp:
  4621                           	opt stack 0
  4622  000011                     i2___wmul@multiplicand:
  4623                           	opt stack 0
  4624                           
  4625                           ; 2 bytes @ 0x10
  4626  000011                     	ds	1
  4627  000012                     i2___llmod@divisor:
  4628                           	opt stack 0
  4629                           
  4630                           ; 4 bytes @ 0x11
  4631  000012                     	ds	1
  4632  000013                     i2___wmul@product:
  4633                           	opt stack 0
  4634                           
  4635                           ; 2 bytes @ 0x12
  4636  000013                     	ds	2
  4637  000015                     ?i2___ftdiv:
  4638                           	opt stack 0
  4639  000015                     i2___ftdiv@f1:
  4640                           	opt stack 0
  4641                           
  4642                           ; 3 bytes @ 0x14
  4643  000015                     	ds	1
  4644  000016                     i2___llmod@counter:
  4645                           	opt stack 0
  4646                           
  4647                           ; 1 bytes @ 0x15
  4648  000016                     	ds	2
  4649  000018                     i2___ftdiv@f2:
  4650                           	opt stack 0
  4651                           
  4652                           ; 3 bytes @ 0x17
  4653  000018                     	ds	3
  4654  00001B                     ??i2___ftdiv:
  4655                           
  4656                           ; 1 bytes @ 0x1A
  4657  00001B                     	ds	3
  4658  00001E                     i2___ftdiv@cntr:
  4659                           	opt stack 0
  4660                           
  4661                           ; 1 bytes @ 0x1D
  4662  00001E                     	ds	1
  4663  00001F                     i2___ftdiv@exp:
  4664                           	opt stack 0
  4665                           
  4666                           ; 1 bytes @ 0x1E
  4667  00001F                     	ds	1
  4668  000020                     i2___ftdiv@f3:
  4669                           	opt stack 0
  4670                           
  4671                           ; 3 bytes @ 0x1F
  4672  000020                     	ds	3
  4673  000023                     i2___ftdiv@sign:
  4674                           	opt stack 0
  4675                           
  4676                           ; 1 bytes @ 0x22
  4677  000023                     	ds	1
  4678  000024                     ?i2___ftneg:
  4679                           	opt stack 0
  4680  000024                     i2___ftneg@f1:
  4681                           	opt stack 0
  4682                           
  4683                           ; 3 bytes @ 0x23
  4684  000024                     	ds	3
  4685  000027                     ?_fabs:
  4686                           	opt stack 0
  4687  000027                     ?i2___ftmul:
  4688                           	opt stack 0
  4689  000027                     fabs@d:
  4690                           	opt stack 0
  4691  000027                     i2___ftmul@f1:
  4692                           	opt stack 0
  4693                           
  4694                           ; 3 bytes @ 0x26
  4695  000027                     	ds	3
  4696  00002A                     i2___ftge@ff1:
  4697                           	opt stack 0
  4698  00002A                     i2___ftmul@f2:
  4699                           	opt stack 0
  4700                           
  4701                           ; 3 bytes @ 0x29
  4702  00002A                     	ds	3
  4703  00002D                     ??i2___ftmul:
  4704  00002D                     i2___ftge@ff2:
  4705                           	opt stack 0
  4706                           
  4707                           ; 3 bytes @ 0x2C
  4708  00002D                     	ds	3
  4709  000030                     ??i2___ftge:
  4710  000030                     i2___ftmul@exp:
  4711                           	opt stack 0
  4712                           
  4713                           ; 1 bytes @ 0x2F
  4714  000030                     	ds	1
  4715  000031                     i2___ftmul@f3_as_product:
  4716                           	opt stack 0
  4717                           
  4718                           ; 3 bytes @ 0x30
  4719  000031                     	ds	3
  4720  000034                     i2___ftmul@cntr:
  4721                           	opt stack 0
  4722                           
  4723                           ; 1 bytes @ 0x33
  4724  000034                     	ds	1
  4725  000035                     i2___ftmul@sign:
  4726                           	opt stack 0
  4727                           
  4728                           ; 1 bytes @ 0x34
  4729  000035                     	ds	1
  4730  000036                     ?i2_fround:
  4731                           	opt stack 0
  4732  000036                     ?i2_scale:
  4733                           	opt stack 0
  4734                           
  4735                           ; 3 bytes @ 0x35
  4736  000036                     	ds	3
  4737  000039                     i2_fround$3321:
  4738                           	opt stack 0
  4739  000039                     i2_scale$3322:
  4740                           	opt stack 0
  4741                           
  4742                           ; 3 bytes @ 0x38
  4743  000039                     	ds	3
  4744  00003C                     i2scale@scl:
  4745                           	opt stack 0
  4746  00003C                     i2_fround$3320:
  4747                           	opt stack 0
  4748                           
  4749                           ; 3 bytes @ 0x3B
  4750  00003C                     	ds	1
  4751  00003D                     ?i2___fttol:
  4752                           	opt stack 0
  4753  00003D                     i2___fttol@f1:
  4754                           	opt stack 0
  4755                           
  4756                           ; 3 bytes @ 0x3C
  4757  00003D                     	ds	2
  4758  00003F                     i2fround@prec:
  4759                           	opt stack 0
  4760                           
  4761                           ; 1 bytes @ 0x3E
  4762  00003F                     	ds	1
  4763  000040                     ?i2___ftadd:
  4764                           	opt stack 0
  4765  000040                     i2___ftadd@f1:
  4766                           	opt stack 0
  4767                           
  4768                           ; 3 bytes @ 0x3F
  4769  000040                     	ds	1
  4770  000041                     ??i2___fttol:
  4771                           
  4772                           ; 1 bytes @ 0x40
  4773  000041                     	ds	2
  4774  000043                     i2___ftadd@f2:
  4775                           	opt stack 0
  4776                           
  4777                           ; 3 bytes @ 0x42
  4778  000043                     	ds	3
  4779  000046                     ??i2___ftadd:
  4780  000046                     i2___fttol@sign1:
  4781                           	opt stack 0
  4782                           
  4783                           ; 1 bytes @ 0x45
  4784  000046                     	ds	1
  4785  000047                     i2___fttol@lval:
  4786                           	opt stack 0
  4787                           
  4788                           ; 4 bytes @ 0x46
  4789  000047                     	ds	2
  4790  000049                     i2___ftadd@sign:
  4791                           	opt stack 0
  4792                           
  4793                           ; 1 bytes @ 0x48
  4794  000049                     	ds	1
  4795  00004A                     i2___ftadd@exp2:
  4796                           	opt stack 0
  4797                           
  4798                           ; 1 bytes @ 0x49
  4799  00004A                     	ds	1
  4800  00004B                     i2___ftadd@exp1:
  4801                           	opt stack 0
  4802  00004B                     i2___fttol@exp1:
  4803                           	opt stack 0
  4804                           
  4805                           ; 1 bytes @ 0x4A
  4806  00004B                     	ds	1
  4807  00004C                     ?_eval_poly:
  4808                           	opt stack 0
  4809  00004C                     ?___altoft:
  4810                           	opt stack 0
  4811  00004C                     eval_poly@x:
  4812                           	opt stack 0
  4813  00004C                     ___altoft@c:
  4814                           	opt stack 0
  4815                           
  4816                           ; 4 bytes @ 0x4B
  4817  00004C                     	ds	3
  4818  00004F                     eval_poly@d:
  4819                           	opt stack 0
  4820                           
  4821                           ; 2 bytes @ 0x4E
  4822  00004F                     	ds	1
  4823  000050                     ??___altoft:
  4824                           
  4825                           ; 1 bytes @ 0x4F
  4826  000050                     	ds	1
  4827  000051                     eval_poly@n:
  4828                           	opt stack 0
  4829                           
  4830                           ; 2 bytes @ 0x50
  4831  000051                     	ds	2
  4832  000053                     ??_eval_poly:
  4833                           
  4834                           ; 1 bytes @ 0x52
  4835  000053                     	ds	1
  4836  000054                     ___altoft@exp:
  4837                           	opt stack 0
  4838                           
  4839                           ; 1 bytes @ 0x53
  4840  000054                     	ds	1
  4841  000055                     ___altoft@sign:
  4842                           	opt stack 0
  4843  000055                     eval_poly@res:
  4844                           	opt stack 0
  4845                           
  4846                           ; 3 bytes @ 0x54
  4847  000055                     	ds	1
  4848  000056                     ?_floor:
  4849                           	opt stack 0
  4850  000056                     floor@x:
  4851                           	opt stack 0
  4852                           
  4853                           ; 3 bytes @ 0x55
  4854  000056                     	ds	2
  4855  000058                     ?_atan:
  4856                           	opt stack 0
  4857  000058                     atan@f:
  4858                           	opt stack 0
  4859                           
  4860                           ; 3 bytes @ 0x57
  4861  000058                     	ds	1
  4862  000059                     floor@i:
  4863                           	opt stack 0
  4864                           
  4865                           ; 3 bytes @ 0x58
  4866  000059                     	ds	2
  4867  00005B                     
  4868                           ; 1 bytes @ 0x5A
  4869  00005B                     	ds	1
  4870  00005C                     floor@expon:
  4871                           	opt stack 0
  4872                           
  4873                           ; 2 bytes @ 0x5B
  4874  00005C                     	ds	2
  4875  00005E                     tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           postdec1	equ	0xFE5
  4882                           fsr1l	equ	0xFE1
  4883                           
  4884                           ; 1 bytes @ 0x5D
  4885 ;;
  4886 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4887 ;;
  4888 ;; *************** function _main *****************
  4889 ;; Defined at:
  4890 ;;		line 239 in file "main.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;Total ram usage:        2 bytes
  4909 ;; Hardware stack levels required when called:   22
  4910 ;; This function calls:
  4911 ;;		_ADCC_SetADIInterruptHandler
  4912 ;;		_SYSTEM_Initialize
  4913 ;;		_TMR6_SetInterruptHandler
  4914 ;;		_TMR7_SetInterruptHandler
  4915 ;;		_terminal_clearTerminal
  4916 ;;		_terminal_ringBufferPull
  4917 ;;		_terminal_setCursorHome
  4918 ;;		_terminal_textAttributesReset
  4919 ;; This function is called by:
  4920 ;;		Startup code after reset
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text0
  4925  0152B0                     __ptext0:
  4926                           	opt stack 0
  4927  0152B0                     _main:
  4928                           	opt stack 9
  4929                           
  4930                           ;main.c: 244: _delay((unsigned long)((250)*(64000000/4000.0)));
  4931                           
  4932                           ;incstack = 0
  4933  0152B0  0E15               	movlw	21
  4934  0152B2  0101               	movlb	1	; () banked
  4935  0152B4  6FB7               	movwf	(??_main+1)& (0+255),b
  4936  0152B6  0E4B               	movlw	75
  4937  0152B8  6FB6               	movwf	??_main& (0+255),b
  4938  0152BA  0EBE               	movlw	190
  4939  0152BC                     u15857:
  4940  0152BC  2EE8               	decfsz	wreg,f,c
  4941  0152BE  D7FE               	bra	u15857
  4942  0152C0  2FB6               	decfsz	??_main& (0+255),f,b
  4943  0152C2  D7FC               	bra	u15857
  4944  0152C4  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  4945  0152C6  D7FA               	bra	u15857
  4946  0152C8  F000               	nop	
  4947                           
  4948                           ;main.c: 247: SYSTEM_Initialize();
  4949  0152CA  EC4D  F0AE         	call	_SYSTEM_Initialize	;wreg free
  4950                           
  4951                           ;main.c: 250: LATGbits.LATG0 = 1;
  4952  0152CE  807F               	bsf	3967,0,c	;volatile
  4953                           
  4954                           ;main.c: 253: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  4955  0152D0  0E6C               	movlw	low _heartbeatTimerCallback
  4956  0152D2  0101               	movlb	1	; () banked
  4957  0152D4  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  4958  0152D6  0E5C               	movlw	high _heartbeatTimerCallback
  4959  0152D8  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4960  0152DA  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  4961  0152DC  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  4962  0152DE  EC87  F0AF         	call	_TMR6_SetInterruptHandler	;wreg free
  4963                           
  4964                           ;main.c: 256: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  4965  0152E2  0E38               	movlw	low _ADC_postProcessingCallback
  4966  0152E4  0101               	movlb	1	; () banked
  4967  0152E6  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  4968  0152E8  0E22               	movlw	high _ADC_postProcessingCallback
  4969  0152EA  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  4970  0152EC  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  4971  0152EE  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  4972  0152F0  ECA3  F0AF         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4973                           
  4974                           ;main.c: 259: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  4975  0152F4  0E1E               	movlw	low _acquisitionTimerCallback
  4976  0152F6  0101               	movlb	1	; () banked
  4977  0152F8  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  4978  0152FA  0E58               	movlw	high _acquisitionTimerCallback
  4979  0152FC  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4980  0152FE  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  4981  015300  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  4982  015302  EC80  F0AF         	call	_TMR7_SetInterruptHandler	;wreg free
  4983                           
  4984                           ;main.c: 262: (INTCONbits.GIEH = 1);
  4985  015306  8EF2               	bsf	intcon,7,c	;volatile
  4986                           
  4987                           ;main.c: 265: (INTCONbits.GIEL = 1);
  4988  015308  8CF2               	bsf	intcon,6,c	;volatile
  4989                           
  4990                           ;main.c: 269: terminal_clearTerminal();
  4991  01530A  EC71  F0AF         	call	_terminal_clearTerminal	;wreg free
  4992                           
  4993                           ;main.c: 270: terminal_setCursorHome();
  4994  01530E  EC61  F0AF         	call	_terminal_setCursorHome	;wreg free
  4995                           
  4996                           ;main.c: 271: terminal_textAttributesReset();
  4997  015312  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  4998  015316                     
  4999                           ;main.c: 275: {
  5000                           ;main.c: 278: if (eusart2RxStringReady) {
  5001  015316  0100               	movlb	0	; () banked
  5002  015318  A1EB               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5003  01531A  D7FD               	goto	l776
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;main.c: 280: terminal_ringBufferPull();
  5007  01531C  EC56  F0A0         	call	_terminal_ringBufferPull	;wreg free
  5008  015320  D7FA               	goto	l776
  5009  015322                     __end_of_main:
  5010                           	opt stack 0
  5011                           tblptru	equ	0xFF8
  5012                           tblptrh	equ	0xFF7
  5013                           tblptrl	equ	0xFF6
  5014                           tablat	equ	0xFF5
  5015                           intcon	equ	0xFF2
  5016                           postinc0	equ	0xFEE
  5017                           wreg	equ	0xFE8
  5018                           postdec1	equ	0xFE5
  5019                           fsr1l	equ	0xFE1
  5020                           
  5021 ;; *************** function _terminal_setCursorHome *****************
  5022 ;; Defined at:
  5023 ;;		line 85 in file "ring_buffer_interface.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:   18
  5044 ;; This function calls:
  5045 ;;		_printf
  5046 ;; This function is called by:
  5047 ;;		_main
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text1
  5052  015EC2                     __ptext1:
  5053                           	opt stack 0
  5054  015EC2                     _terminal_setCursorHome:
  5055                           	opt stack 12
  5056                           
  5057                           ;ring_buffer_interface.c: 86: printf("\033[H");
  5058                           
  5059                           ;incstack = 0
  5060  015EC2  0EB5               	movlw	low STR_3
  5061  015EC4  0101               	movlb	1	; () banked
  5062  015EC6  6F64               	movwf	printf@f& (0+255),b
  5063  015EC8  0EFF               	movlw	high STR_3
  5064  015ECA  6F65               	movwf	(printf@f+1)& (0+255),b
  5065  015ECC  EC00  F080         	call	_printf	;wreg free
  5066  015ED0  0012               	return		;funcret
  5067  015ED2                     __end_of_terminal_setCursorHome:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           intcon	equ	0xFF2
  5074                           postinc0	equ	0xFEE
  5075                           wreg	equ	0xFE8
  5076                           postdec1	equ	0xFE5
  5077                           fsr1l	equ	0xFE1
  5078                           
  5079 ;; *************** function _terminal_ringBufferPull *****************
  5080 ;; Defined at:
  5081 ;;		line 12 in file "ring_buffer_interface.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  index           2  178[BANK1 ] int 
  5086 ;;  index           2  180[BANK1 ] int 
  5087 ;;  charNumber      2  176[BANK1 ] int 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;Total ram usage:        9 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:   21
  5104 ;; This function calls:
  5105 ;;		_EUSART2_Read
  5106 ;;		_ringBufferLUT
  5107 ;;		_strlen
  5108 ;; This function is called by:
  5109 ;;		_main
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text2
  5114  0140AC                     __ptext2:
  5115                           	opt stack 0
  5116  0140AC                     _terminal_ringBufferPull:
  5117                           	opt stack 9
  5118                           
  5119                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  5120                           
  5121                           ;incstack = 0
  5122  0140AC  C1D8  F1B0         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  5123  0140B0  0101               	movlb	1	; () banked
  5124  0140B2  6BB1               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  5125                           
  5126                           ; BSR set to: 1
  5127                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  5128  0140B4  0E00               	movlw	0
  5129  0140B6  6FB5               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  5130  0140B8  0E00               	movlw	0
  5131  0140BA  6FB4               	movwf	terminal_ringBufferPull@index& (0+255),b
  5132  0140BC                     l10101:
  5133                           
  5134                           ; BSR set to: 1
  5135  0140BC  BFB5               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  5136  0140BE  D006               	goto	l815
  5137  0140C0  51B5               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5138  0140C2  E10F               	bnz	l10111
  5139  0140C4  0E40               	movlw	64
  5140  0140C6  5DB4               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  5141  0140C8  B0D8               	btfsc	status,0,c
  5142  0140CA  D00B               	goto	u12160
  5143  0140CC                     l815:
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  5147                           
  5148                           ; BSR set to: 1
  5149  0140CC  0E80               	movlw	low _line
  5150  0140CE  25B4               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  5151  0140D0  6ED9               	movwf	fsr2l,c
  5152  0140D2  0E02               	movlw	high _line
  5153  0140D4  21B5               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5154  0140D6  6EDA               	movwf	fsr2h,c
  5155  0140D8  0E00               	movlw	0
  5156  0140DA  6EDF               	movwf	indf2,c
  5157                           
  5158                           ; BSR set to: 1
  5159  0140DC  4BB4               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  5160  0140DE  2BB5               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  5161  0140E0  D7ED               	goto	l10101
  5162  0140E2                     u12160:
  5163  0140E2                     l10111:
  5164                           
  5165                           ; BSR set to: 1
  5166                           ;ring_buffer_interface.c: 21: }
  5167                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  5168  0140E2  0E00               	movlw	0
  5169  0140E4  6FB3               	movwf	(terminal_ringBufferPull@index_1778+1)& (0+255),b
  5170  0140E6  0E00               	movlw	0
  5171  0140E8  6FB2               	movwf	terminal_ringBufferPull@index_1778& (0+255),b
  5172  0140EA  D00E               	goto	l817
  5173  0140EC                     
  5174                           ; BSR set to: 1
  5175                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  5176                           
  5177                           ; BSR set to: 1
  5178  0140EC  EC19  F0AD         	call	_EUSART2_Read	;wreg free
  5179  0140F0  0101               	movlb	1	; () banked
  5180  0140F2  6FAD               	movwf	??_terminal_ringBufferPull& (0+255),b
  5181  0140F4  0E80               	movlw	low _line
  5182  0140F6  25B2               	addwf	terminal_ringBufferPull@index_1778& (0+255),w,b
  5183  0140F8  6ED9               	movwf	fsr2l,c
  5184  0140FA  0E02               	movlw	high _line
  5185  0140FC  21B3               	addwfc	(terminal_ringBufferPull@index_1778+1)& (0+255),w,b
  5186  0140FE  6EDA               	movwf	fsr2h,c
  5187  014100  C1AD  FFDF         	movff	??_terminal_ringBufferPull,indf2
  5188                           
  5189                           ; BSR set to: 1
  5190  014104  4BB2               	infsnz	terminal_ringBufferPull@index_1778& (0+255),f,b
  5191  014106  2BB3               	incf	(terminal_ringBufferPull@index_1778+1)& (0+255),f,b
  5192  014108                     l817:
  5193                           
  5194                           ; BSR set to: 1
  5195                           
  5196                           ; BSR set to: 1
  5197  014108  51B0               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  5198  01410A  5DB2               	subwf	terminal_ringBufferPull@index_1778& (0+255),w,b
  5199  01410C  51B3               	movf	(terminal_ringBufferPull@index_1778+1)& (0+255),w,b
  5200  01410E  0A80               	xorlw	128
  5201  014110  6FAD               	movwf	??_terminal_ringBufferPull& (0+255),b
  5202  014112  51B1               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  5203  014114  0A80               	xorlw	128
  5204  014116  59AD               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  5205  014118  A0D8               	btfss	status,0,c
  5206  01411A  D7E8               	goto	l818
  5207                           
  5208                           ; BSR set to: 1
  5209                           ;ring_buffer_interface.c: 28: }
  5210                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  5211  01411C  C0DE  F1D9         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  5212                           
  5213                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  5214                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  5215  014120  D017               	goto	l820
  5216  014122                     
  5217                           ; BSR set to: 1
  5218                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  5219                           
  5220                           ; BSR set to: 1
  5221  014122  0EFF               	movlw	255
  5222  014124  6FAD               	movwf	??_terminal_ringBufferPull& (0+255),b
  5223  014126  0EFF               	movlw	255
  5224  014128  6FAE               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5225  01412A  0E80               	movlw	low _line
  5226  01412C  6F17               	movwf	strlen@s& (0+255),b
  5227  01412E  0E02               	movlw	high _line
  5228  014130  6F18               	movwf	(strlen@s+1)& (0+255),b
  5229  014132  EC8F  F0AB         	call	_strlen	;wreg free
  5230  014136  0101               	movlb	1	; () banked
  5231  014138  51AD               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5232  01413A  2717               	addwf	?_strlen& (0+255),f,b
  5233  01413C  51AE               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5234  01413E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5235  014140  0E80               	movlw	low _line
  5236  014142  2517               	addwf	?_strlen& (0+255),w,b
  5237  014144  6ED9               	movwf	fsr2l,c
  5238  014146  0E02               	movlw	high _line
  5239  014148  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5240  01414A  6EDA               	movwf	fsr2h,c
  5241  01414C  0E00               	movlw	0
  5242  01414E  6EDF               	movwf	indf2,c
  5243  014150                     l820:
  5244                           
  5245                           ; BSR set to: 1
  5246  014150  0EFF               	movlw	255
  5247  014152  6FAD               	movwf	??_terminal_ringBufferPull& (0+255),b
  5248  014154  0EFF               	movlw	255
  5249  014156  6FAE               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5250  014158  0E80               	movlw	low _line
  5251  01415A  6F17               	movwf	strlen@s& (0+255),b
  5252  01415C  0E02               	movlw	high _line
  5253  01415E  6F18               	movwf	(strlen@s+1)& (0+255),b
  5254  014160  EC8F  F0AB         	call	_strlen	;wreg free
  5255  014164  0101               	movlb	1	; () banked
  5256  014166  51AD               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5257  014168  2717               	addwf	?_strlen& (0+255),f,b
  5258  01416A  51AE               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5259  01416C  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5260  01416E  0E80               	movlw	low _line
  5261  014170  2517               	addwf	?_strlen& (0+255),w,b
  5262  014172  6ED9               	movwf	fsr2l,c
  5263  014174  0E02               	movlw	high _line
  5264  014176  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5265  014178  6EDA               	movwf	fsr2h,c
  5266  01417A  0E0A               	movlw	10
  5267  01417C  18DE               	xorwf	postinc2,w,c
  5268  01417E  B4D8               	btfsc	status,2,c
  5269  014180  D7D0               	goto	l821
  5270                           
  5271                           ; BSR set to: 1
  5272  014182  0EFF               	movlw	255
  5273  014184  6FAD               	movwf	??_terminal_ringBufferPull& (0+255),b
  5274  014186  0EFF               	movlw	255
  5275  014188  6FAE               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5276  01418A  0E80               	movlw	low _line
  5277  01418C  6F17               	movwf	strlen@s& (0+255),b
  5278  01418E  0E02               	movlw	high _line
  5279  014190  6F18               	movwf	(strlen@s+1)& (0+255),b
  5280  014192  EC8F  F0AB         	call	_strlen	;wreg free
  5281  014196  0101               	movlb	1	; () banked
  5282  014198  51AD               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5283  01419A  2717               	addwf	?_strlen& (0+255),f,b
  5284  01419C  51AE               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5285  01419E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5286  0141A0  0E80               	movlw	low _line
  5287  0141A2  2517               	addwf	?_strlen& (0+255),w,b
  5288  0141A4  6ED9               	movwf	fsr2l,c
  5289  0141A6  0E02               	movlw	high _line
  5290  0141A8  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5291  0141AA  6EDA               	movwf	fsr2h,c
  5292  0141AC  0E0D               	movlw	13
  5293  0141AE  18DE               	xorwf	postinc2,w,c
  5294  0141B0  B4D8               	btfsc	status,2,c
  5295  0141B2  D7B7               	goto	l821
  5296                           
  5297                           ; BSR set to: 1
  5298                           ;ring_buffer_interface.c: 40: }
  5299                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  5300  0141B4  0100               	movlb	0	; () banked
  5301  0141B6  91EB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  5305  0141B8  0E80               	movlw	low _line
  5306  0141BA  0101               	movlb	1	; () banked
  5307  0141BC  6F9F               	movwf	ringBufferLUT@line& (0+255),b
  5308  0141BE  0E02               	movlw	high _line
  5309  0141C0  6FA0               	movwf	(ringBufferLUT@line+1)& (0+255),b
  5310  0141C2  ECE5  F088         	call	_ringBufferLUT	;wreg free
  5311  0141C6  0012               	return		;funcret
  5312  0141C8                     __end_of_terminal_ringBufferPull:
  5313                           	opt stack 0
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           intcon	equ	0xFF2
  5319                           postinc0	equ	0xFEE
  5320                           wreg	equ	0xFE8
  5321                           postdec1	equ	0xFE5
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _ringBufferLUT *****************
  5330 ;; Defined at:
  5331 ;;		line 29 in file "ring_buffer_LUT.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  line            2  159[BANK1 ] PTR unsigned char 
  5334 ;;		 -> line(64), 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  angle_degree    3  163[BANK1 ] PTR unsigned char 
  5337 ;;  index           2  171[BANK1 ] int 
  5338 ;;  arg_buff        3  166[BANK1 ] unsigned char [3]
  5339 ;;  percentage      2  169[BANK1 ] int 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5349 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5350 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5351 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;Total ram usage:       14 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:   20
  5356 ;; This function calls:
  5357 ;;		___awtoft
  5358 ;;		___ftadd
  5359 ;;		___ftdiv
  5360 ;;		___ftmul
  5361 ;;		___ftneg
  5362 ;;		_atoi
  5363 ;;		_printf
  5364 ;;		_strcmp
  5365 ;;		_strstr
  5366 ;;		_terminal_printNewline
  5367 ;;		_terminal_textAttributes
  5368 ;;		_terminal_textAttributesReset
  5369 ;; This function is called by:
  5370 ;;		_terminal_ringBufferPull
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text3
  5375  0111CA                     __ptext3:
  5376                           	opt stack 0
  5377  0111CA                     _ringBufferLUT:
  5378                           	opt stack 9
  5379                           
  5380                           ;ring_buffer_LUT.c: 35: if((0 == strcmp(line, "Reset"))) {
  5381                           
  5382                           ;incstack = 0
  5383  0111CA  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5384  0111CE  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5385  0111D2  0EA1               	movlw	low STR_41
  5386  0111D4  0101               	movlb	1	; () banked
  5387  0111D6  6F19               	movwf	strcmp@s2& (0+255),b
  5388  0111D8  0EFF               	movlw	high STR_41
  5389  0111DA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5390  0111DC  EC38  F0AC         	call	_strcmp	;wreg free
  5391  0111E0  0101               	movlb	1	; () banked
  5392  0111E2  5117               	movf	?_strcmp& (0+255),w,b
  5393  0111E4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5394  0111E6  A4D8               	btfss	status,2,c
  5395  0111E8  D00F               	goto	l924
  5396                           
  5397                           ; BSR set to: 1
  5398                           ;ring_buffer_LUT.c: 38: printf("\033[2J");
  5399  0111EA  0EAC               	movlw	low STR_2
  5400  0111EC  6F64               	movwf	printf@f& (0+255),b
  5401  0111EE  0EFF               	movlw	high STR_2
  5402  0111F0  6F65               	movwf	(printf@f+1)& (0+255),b
  5403  0111F2  EC00  F080         	call	_printf	;wreg free
  5404                           
  5405                           ;ring_buffer_LUT.c: 41: printf("\033[H");
  5406  0111F6  0EB5               	movlw	low STR_3
  5407  0111F8  0101               	movlb	1	; () banked
  5408  0111FA  6F64               	movwf	printf@f& (0+255),b
  5409  0111FC  0EFF               	movlw	high STR_3
  5410  0111FE  6F65               	movwf	(printf@f+1)& (0+255),b
  5411  011200  EC00  F080         	call	_printf	;wreg free
  5412  011204  00FF               	reset		;# 
  5413                           
  5414                           ;ring_buffer_LUT.c: 46: }
  5415  011206  0012               	return	
  5416  011208                     l924:
  5417                           
  5418                           ;ring_buffer_LUT.c: 49: else if((0 == strcmp(line, "Clear"))) {
  5419  011208  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5420  01120C  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5421  011210  0E9B               	movlw	low STR_44
  5422  011212  0101               	movlb	1	; () banked
  5423  011214  6F19               	movwf	strcmp@s2& (0+255),b
  5424  011216  0EFF               	movlw	high STR_44
  5425  011218  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5426  01121A  EC38  F0AC         	call	_strcmp	;wreg free
  5427  01121E  0101               	movlb	1	; () banked
  5428  011220  5117               	movf	?_strcmp& (0+255),w,b
  5429  011222  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5430  011224  A4D8               	btfss	status,2,c
  5431  011226  D00E               	goto	l926
  5432                           
  5433                           ; BSR set to: 1
  5434                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  5435  011228  0EAC               	movlw	low STR_2
  5436  01122A  6F64               	movwf	printf@f& (0+255),b
  5437  01122C  0EFF               	movlw	high STR_2
  5438  01122E  6F65               	movwf	(printf@f+1)& (0+255),b
  5439  011230  EC00  F080         	call	_printf	;wreg free
  5440                           
  5441                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  5442  011234  0EB5               	movlw	low STR_3
  5443  011236  0101               	movlb	1	; () banked
  5444  011238  6F64               	movwf	printf@f& (0+255),b
  5445  01123A  0EFF               	movlw	high STR_3
  5446  01123C  6F65               	movwf	(printf@f+1)& (0+255),b
  5447  01123E  EC00  F080         	call	_printf	;wreg free
  5448                           
  5449                           ;ring_buffer_LUT.c: 57: }
  5450  011242  0012               	return	
  5451  011244                     l926:
  5452                           
  5453                           ;ring_buffer_LUT.c: 60: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  5454  011244  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5455  011248  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5456  01124C  0E95               	movlw	low STR_47
  5457  01124E  0101               	movlb	1	; () banked
  5458  011250  6F19               	movwf	strcmp@s2& (0+255),b
  5459  011252  0EFF               	movlw	high STR_47
  5460  011254  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5461  011256  EC38  F0AC         	call	_strcmp	;wreg free
  5462  01125A  0101               	movlb	1	; () banked
  5463  01125C  5117               	movf	?_strcmp& (0+255),w,b
  5464  01125E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5465  011260  B4D8               	btfsc	status,2,c
  5466  011262  D00F               	goto	u11360
  5467                           
  5468                           ; BSR set to: 1
  5469  011264  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5470  011268  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5471  01126C  0EB1               	movlw	low STR_48
  5472  01126E  6F19               	movwf	strcmp@s2& (0+255),b
  5473  011270  0EFF               	movlw	high STR_48
  5474  011272  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5475  011274  EC38  F0AC         	call	_strcmp	;wreg free
  5476  011278  0101               	movlb	1	; () banked
  5477  01127A  5117               	movf	?_strcmp& (0+255),w,b
  5478  01127C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5479  01127E  A4D8               	btfss	status,2,c
  5480  011280  D01D               	goto	l928
  5481  011282                     u11360:
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;ring_buffer_LUT.c: 63: terminal_printNewline();
  5485                           
  5486                           ; BSR set to: 1
  5487  011282  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5488                           
  5489                           ;ring_buffer_LUT.c: 65: terminal_textAttributes(GREEN, BLACK, NORMAL);
  5490  011286  0E00               	movlw	0
  5491  011288  0101               	movlb	1	; () banked
  5492  01128A  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5493  01128C  0E00               	movlw	0
  5494  01128E  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5495  011290  0E02               	movlw	2
  5496  011292  EC23  F093         	call	_terminal_textAttributes
  5497                           
  5498                           ;ring_buffer_LUT.c: 67: printf("AC Power Meter\n\r");
  5499  011296  0E17               	movlw	low STR_49
  5500  011298  0101               	movlb	1	; () banked
  5501  01129A  6F64               	movwf	printf@f& (0+255),b
  5502  01129C  0EFF               	movlw	high STR_49
  5503  01129E  6F65               	movwf	(printf@f+1)& (0+255),b
  5504  0112A0  EC00  F080         	call	_printf	;wreg free
  5505                           
  5506                           ;ring_buffer_LUT.c: 68: printf("Marquette University ELEN 3035 Final Project\n\r");
  5507  0112A4  0E6C               	movlw	low STR_50
  5508  0112A6  0101               	movlb	1	; () banked
  5509  0112A8  6F64               	movwf	printf@f& (0+255),b
  5510  0112AA  0EFC               	movlw	high STR_50
  5511  0112AC  6F65               	movwf	(printf@f+1)& (0+255),b
  5512  0112AE  EC00  F080         	call	_printf	;wreg free
  5513                           
  5514                           ;ring_buffer_LUT.c: 70: terminal_textAttributesReset();
  5515  0112B2  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5516                           
  5517                           ;ring_buffer_LUT.c: 72: terminal_printNewline();
  5518  0112B6  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5519                           
  5520                           ;ring_buffer_LUT.c: 74: }
  5521  0112BA  0012               	return	
  5522  0112BC                     l928:
  5523                           
  5524                           ;ring_buffer_LUT.c: 77: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  5525  0112BC  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5526  0112C0  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5527  0112C4  0E28               	movlw	low STR_51
  5528  0112C6  0101               	movlb	1	; () banked
  5529  0112C8  6F19               	movwf	strcmp@s2& (0+255),b
  5530  0112CA  0EFF               	movlw	high STR_51
  5531  0112CC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5532  0112CE  EC38  F0AC         	call	_strcmp	;wreg free
  5533  0112D2  0101               	movlb	1	; () banked
  5534  0112D4  5117               	movf	?_strcmp& (0+255),w,b
  5535  0112D6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5536  0112D8  A4D8               	btfss	status,2,c
  5537  0112DA  D01C               	goto	l932
  5538                           
  5539                           ; BSR set to: 1
  5540                           ;ring_buffer_LUT.c: 80: terminal_printNewline();
  5541  0112DC  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5542                           
  5543                           ;ring_buffer_LUT.c: 82: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5544  0112E0  0E00               	movlw	0
  5545  0112E2  0101               	movlb	1	; () banked
  5546  0112E4  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5547  0112E6  0E00               	movlw	0
  5548  0112E8  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5549  0112EA  0E06               	movlw	6
  5550  0112EC  EC23  F093         	call	_terminal_textAttributes
  5551                           
  5552                           ;ring_buffer_LUT.c: 83: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  5553  0112F0  0E39               	movlw	low STR_52
  5554  0112F2  0101               	movlb	1	; () banked
  5555  0112F4  6F64               	movwf	printf@f& (0+255),b
  5556  0112F6  0EFD               	movlw	high STR_52
  5557  0112F8  6F65               	movwf	(printf@f+1)& (0+255),b
  5558  0112FA  C0CB  F166         	movff	_POS3P3_ADC_Result,?_printf+2
  5559  0112FE  C0CC  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3
  5560  011302  C0CD  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4
  5561  011306  EC00  F080         	call	_printf	;wreg free
  5562                           
  5563                           ;ring_buffer_LUT.c: 85: terminal_textAttributesReset();
  5564  01130A  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5565                           
  5566                           ;ring_buffer_LUT.c: 87: terminal_printNewline();
  5567  01130E  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5568                           
  5569                           ;ring_buffer_LUT.c: 90: }
  5570  011312  0012               	return	
  5571  011314                     l932:
  5572                           
  5573                           ;ring_buffer_LUT.c: 93: else if((0 == strcmp(line, "Measure POS12?"))) {
  5574  011314  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5575  011318  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5576  01131C  0E48               	movlw	low STR_53
  5577  01131E  0101               	movlb	1	; () banked
  5578  011320  6F19               	movwf	strcmp@s2& (0+255),b
  5579  011322  0EFF               	movlw	high STR_53
  5580  011324  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5581  011326  EC38  F0AC         	call	_strcmp	;wreg free
  5582  01132A  0101               	movlb	1	; () banked
  5583  01132C  5117               	movf	?_strcmp& (0+255),w,b
  5584  01132E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5585  011330  A4D8               	btfss	status,2,c
  5586  011332  D01C               	goto	l934
  5587                           
  5588                           ; BSR set to: 1
  5589                           ;ring_buffer_LUT.c: 96: terminal_printNewline();
  5590  011334  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5591                           
  5592                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5593  011338  0E00               	movlw	0
  5594  01133A  0101               	movlb	1	; () banked
  5595  01133C  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5596  01133E  0E00               	movlw	0
  5597  011340  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5598  011342  0E06               	movlw	6
  5599  011344  EC23  F093         	call	_terminal_textAttributes
  5600                           
  5601                           ;ring_buffer_LUT.c: 99: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result);
  5602  011348  0EC2               	movlw	low STR_54
  5603  01134A  0101               	movlb	1	; () banked
  5604  01134C  6F64               	movwf	printf@f& (0+255),b
  5605  01134E  0EFD               	movlw	high STR_54
  5606  011350  6F65               	movwf	(printf@f+1)& (0+255),b
  5607  011352  C1C8  F166         	movff	_POS12_ADC_Result,?_printf+2
  5608  011356  C1C9  F167         	movff	_POS12_ADC_Result+1,?_printf+3
  5609  01135A  C1CA  F168         	movff	_POS12_ADC_Result+2,?_printf+4
  5610  01135E  EC00  F080         	call	_printf	;wreg free
  5611                           
  5612                           ;ring_buffer_LUT.c: 101: terminal_textAttributesReset();
  5613  011362  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5614                           
  5615                           ;ring_buffer_LUT.c: 103: terminal_printNewline();
  5616  011366  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5617                           
  5618                           ;ring_buffer_LUT.c: 106: }
  5619  01136A  0012               	return	
  5620  01136C                     l934:
  5621                           
  5622                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  5623  01136C  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5624  011370  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5625  011374  0E05               	movlw	low STR_55
  5626  011376  0101               	movlb	1	; () banked
  5627  011378  6F19               	movwf	strcmp@s2& (0+255),b
  5628  01137A  0EFF               	movlw	high STR_55
  5629  01137C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5630  01137E  EC38  F0AC         	call	_strcmp	;wreg free
  5631  011382  0101               	movlb	1	; () banked
  5632  011384  5117               	movf	?_strcmp& (0+255),w,b
  5633  011386  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5634  011388  A4D8               	btfss	status,2,c
  5635  01138A  D01C               	goto	l936
  5636                           
  5637                           ; BSR set to: 1
  5638                           ;ring_buffer_LUT.c: 112: terminal_printNewline();
  5639  01138C  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5640                           
  5641                           ;ring_buffer_LUT.c: 114: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5642  011390  0E00               	movlw	0
  5643  011392  0101               	movlb	1	; () banked
  5644  011394  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5645  011396  0E00               	movlw	0
  5646  011398  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5647  01139A  0E06               	movlw	6
  5648  01139C  EC23  F093         	call	_terminal_textAttributes
  5649                           
  5650                           ;ring_buffer_LUT.c: 115: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  5651  0113A0  0E5C               	movlw	low STR_56
  5652  0113A2  0101               	movlb	1	; () banked
  5653  0113A4  6F64               	movwf	printf@f& (0+255),b
  5654  0113A6  0EFD               	movlw	high STR_56
  5655  0113A8  6F65               	movwf	(printf@f+1)& (0+255),b
  5656  0113AA  C1C5  F166         	movff	_Temp_ADC_Result,?_printf+2
  5657  0113AE  C1C6  F167         	movff	_Temp_ADC_Result+1,?_printf+3
  5658  0113B2  C1C7  F168         	movff	_Temp_ADC_Result+2,?_printf+4
  5659  0113B6  EC00  F080         	call	_printf	;wreg free
  5660                           
  5661                           ;ring_buffer_LUT.c: 117: terminal_textAttributesReset();
  5662  0113BA  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5663                           
  5664                           ;ring_buffer_LUT.c: 119: terminal_printNewline();
  5665  0113BE  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5666                           
  5667                           ;ring_buffer_LUT.c: 122: }
  5668  0113C2  0012               	return	
  5669  0113C4                     l936:
  5670                           
  5671                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "Measure FVR?"))) {
  5672  0113C4  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5673  0113C8  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5674  0113CC  0E66               	movlw	low STR_57
  5675  0113CE  0101               	movlb	1	; () banked
  5676  0113D0  6F19               	movwf	strcmp@s2& (0+255),b
  5677  0113D2  0EFF               	movlw	high STR_57
  5678  0113D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5679  0113D6  EC38  F0AC         	call	_strcmp	;wreg free
  5680  0113DA  0101               	movlb	1	; () banked
  5681  0113DC  5117               	movf	?_strcmp& (0+255),w,b
  5682  0113DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5683  0113E0  A4D8               	btfss	status,2,c
  5684  0113E2  D01C               	goto	l938
  5685                           
  5686                           ; BSR set to: 1
  5687                           ;ring_buffer_LUT.c: 128: terminal_printNewline();
  5688  0113E4  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5689                           
  5690                           ;ring_buffer_LUT.c: 130: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5691  0113E8  0E00               	movlw	0
  5692  0113EA  0101               	movlb	1	; () banked
  5693  0113EC  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5694  0113EE  0E00               	movlw	0
  5695  0113F0  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5696  0113F2  0E06               	movlw	6
  5697  0113F4  EC23  F093         	call	_terminal_textAttributes
  5698                           
  5699                           ;ring_buffer_LUT.c: 131: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  5700  0113F8  0E34               	movlw	low STR_58
  5701  0113FA  0101               	movlb	1	; () banked
  5702  0113FC  6F64               	movwf	printf@f& (0+255),b
  5703  0113FE  0EFC               	movlw	high STR_58
  5704  011400  6F65               	movwf	(printf@f+1)& (0+255),b
  5705  011402  C0E2  F166         	movff	_FVR_ADC_Result,?_printf+2
  5706  011406  C0E3  F167         	movff	_FVR_ADC_Result+1,?_printf+3
  5707  01140A  C0E4  F168         	movff	_FVR_ADC_Result+2,?_printf+4
  5708  01140E  EC00  F080         	call	_printf	;wreg free
  5709                           
  5710                           ;ring_buffer_LUT.c: 133: terminal_textAttributesReset();
  5711  011412  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5712                           
  5713                           ;ring_buffer_LUT.c: 135: terminal_printNewline();
  5714  011416  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5715                           
  5716                           ;ring_buffer_LUT.c: 138: }
  5717  01141A  0012               	return	
  5718  01141C                     l938:
  5719                           
  5720                           ;ring_buffer_LUT.c: 141: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  5721  01141C  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5722  011420  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5723  011424  0E61               	movlw	low STR_59
  5724  011426  0101               	movlb	1	; () banked
  5725  011428  6F19               	movwf	strcmp@s2& (0+255),b
  5726  01142A  0EFE               	movlw	high STR_59
  5727  01142C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5728  01142E  EC38  F0AC         	call	_strcmp	;wreg free
  5729  011432  0101               	movlb	1	; () banked
  5730  011434  5117               	movf	?_strcmp& (0+255),w,b
  5731  011436  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5732  011438  A4D8               	btfss	status,2,c
  5733  01143A  D01C               	goto	l940
  5734                           
  5735                           ; BSR set to: 1
  5736                           ;ring_buffer_LUT.c: 144: terminal_printNewline();
  5737  01143C  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5738                           
  5739                           ;ring_buffer_LUT.c: 146: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5740  011440  0E00               	movlw	0
  5741  011442  0101               	movlb	1	; () banked
  5742  011444  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5743  011446  0E00               	movlw	0
  5744  011448  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5745  01144A  0E06               	movlw	6
  5746  01144C  EC23  F093         	call	_terminal_textAttributes
  5747                           
  5748                           ;ring_buffer_LUT.c: 147: printf("Measured Current is %.3f Amps\n\r", Imeas);
  5749  011450  0E05               	movlw	low STR_60
  5750  011452  0101               	movlb	1	; () banked
  5751  011454  6F64               	movwf	printf@f& (0+255),b
  5752  011456  0EFE               	movlw	high STR_60
  5753  011458  6F65               	movwf	(printf@f+1)& (0+255),b
  5754  01145A  C0C5  F166         	movff	_Imeas,?_printf+2
  5755  01145E  C0C6  F167         	movff	_Imeas+1,?_printf+3
  5756  011462  C0C7  F168         	movff	_Imeas+2,?_printf+4
  5757  011466  EC00  F080         	call	_printf	;wreg free
  5758                           
  5759                           ;ring_buffer_LUT.c: 149: terminal_textAttributesReset();
  5760  01146A  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5761                           
  5762                           ;ring_buffer_LUT.c: 151: terminal_printNewline();
  5763  01146E  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5764                           
  5765                           ;ring_buffer_LUT.c: 153: }
  5766  011472  0012               	return	
  5767  011474                     l940:
  5768                           
  5769                           ;ring_buffer_LUT.c: 156: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  5770  011474  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5771  011478  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5772  01147C  0EF0               	movlw	low STR_61
  5773  01147E  0101               	movlb	1	; () banked
  5774  011480  6F19               	movwf	strcmp@s2& (0+255),b
  5775  011482  0EFE               	movlw	high STR_61
  5776  011484  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5777  011486  EC38  F0AC         	call	_strcmp	;wreg free
  5778  01148A  0101               	movlb	1	; () banked
  5779  01148C  5117               	movf	?_strcmp& (0+255),w,b
  5780  01148E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5781  011490  A4D8               	btfss	status,2,c
  5782  011492  D01C               	goto	l942
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;ring_buffer_LUT.c: 159: terminal_printNewline();
  5786  011494  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5787                           
  5788                           ;ring_buffer_LUT.c: 161: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5789  011498  0E00               	movlw	0
  5790  01149A  0101               	movlb	1	; () banked
  5791  01149C  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5792  01149E  0E00               	movlw	0
  5793  0114A0  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5794  0114A2  0E06               	movlw	6
  5795  0114A4  EC23  F093         	call	_terminal_textAttributes
  5796                           
  5797                           ;ring_buffer_LUT.c: 162: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  5798  0114A8  0E7E               	movlw	low STR_62
  5799  0114AA  0101               	movlb	1	; () banked
  5800  0114AC  6F64               	movwf	printf@f& (0+255),b
  5801  0114AE  0EFD               	movlw	high STR_62
  5802  0114B0  6F65               	movwf	(printf@f+1)& (0+255),b
  5803  0114B2  C1C2  F166         	movff	_Irms,?_printf+2
  5804  0114B6  C1C3  F167         	movff	_Irms+1,?_printf+3
  5805  0114BA  C1C4  F168         	movff	_Irms+2,?_printf+4
  5806  0114BE  EC00  F080         	call	_printf	;wreg free
  5807                           
  5808                           ;ring_buffer_LUT.c: 164: terminal_textAttributesReset();
  5809  0114C2  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5810                           
  5811                           ;ring_buffer_LUT.c: 166: terminal_printNewline();
  5812  0114C6  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5813                           
  5814                           ;ring_buffer_LUT.c: 168: }
  5815  0114CA  0012               	return	
  5816  0114CC                     l942:
  5817                           
  5818                           ;ring_buffer_LUT.c: 171: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  5819  0114CC  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5820  0114D0  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5821  0114D4  0EDB               	movlw	low STR_63
  5822  0114D6  0101               	movlb	1	; () banked
  5823  0114D8  6F19               	movwf	strcmp@s2& (0+255),b
  5824  0114DA  0EFE               	movlw	high STR_63
  5825  0114DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5826  0114DE  EC38  F0AC         	call	_strcmp	;wreg free
  5827  0114E2  0101               	movlb	1	; () banked
  5828  0114E4  5117               	movf	?_strcmp& (0+255),w,b
  5829  0114E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5830  0114E8  A4D8               	btfss	status,2,c
  5831  0114EA  D01C               	goto	l944
  5832                           
  5833                           ; BSR set to: 1
  5834                           ;ring_buffer_LUT.c: 174: terminal_printNewline();
  5835  0114EC  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5836                           
  5837                           ;ring_buffer_LUT.c: 176: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5838  0114F0  0E00               	movlw	0
  5839  0114F2  0101               	movlb	1	; () banked
  5840  0114F4  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5841  0114F6  0E00               	movlw	0
  5842  0114F8  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5843  0114FA  0E06               	movlw	6
  5844  0114FC  EC23  F093         	call	_terminal_textAttributes
  5845                           
  5846                           ;ring_buffer_LUT.c: 177: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  5847  011500  0EA0               	movlw	low STR_64
  5848  011502  0101               	movlb	1	; () banked
  5849  011504  6F64               	movwf	printf@f& (0+255),b
  5850  011506  0EFD               	movlw	high STR_64
  5851  011508  6F65               	movwf	(printf@f+1)& (0+255),b
  5852  01150A  C1BF  F166         	movff	_Vrms,?_printf+2
  5853  01150E  C1C0  F167         	movff	_Vrms+1,?_printf+3
  5854  011512  C1C1  F168         	movff	_Vrms+2,?_printf+4
  5855  011516  EC00  F080         	call	_printf	;wreg free
  5856                           
  5857                           ;ring_buffer_LUT.c: 179: terminal_textAttributesReset();
  5858  01151A  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5859                           
  5860                           ;ring_buffer_LUT.c: 181: terminal_printNewline();
  5861  01151E  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5862                           
  5863                           ;ring_buffer_LUT.c: 183: }
  5864  011522  0012               	return	
  5865  011524                     l944:
  5866                           
  5867                           ;ring_buffer_LUT.c: 186: else if ((0 == strcmp(line, "Enable Dimming"))) {
  5868  011524  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5869  011528  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5870  01152C  0E57               	movlw	low STR_65
  5871  01152E  0101               	movlb	1	; () banked
  5872  011530  6F19               	movwf	strcmp@s2& (0+255),b
  5873  011532  0EFF               	movlw	high STR_65
  5874  011534  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5875  011536  EC38  F0AC         	call	_strcmp	;wreg free
  5876  01153A  0101               	movlb	1	; () banked
  5877  01153C  5117               	movf	?_strcmp& (0+255),w,b
  5878  01153E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5879  011540  A4D8               	btfss	status,2,c
  5880  011542  D017               	goto	l946
  5881                           
  5882                           ; BSR set to: 1
  5883                           ;ring_buffer_LUT.c: 189: LATGbits.LATG0 = 0;
  5884  011544  907F               	bcf	3967,0,c	;volatile
  5885                           
  5886                           ; BSR set to: 1
  5887                           ;ring_buffer_LUT.c: 192: terminal_printNewline();
  5888  011546  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5889                           
  5890                           ;ring_buffer_LUT.c: 194: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5891  01154A  0E00               	movlw	0
  5892  01154C  0101               	movlb	1	; () banked
  5893  01154E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5894  011550  0E00               	movlw	0
  5895  011552  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5896  011554  0E06               	movlw	6
  5897  011556  EC23  F093         	call	_terminal_textAttributes
  5898                           
  5899                           ;ring_buffer_LUT.c: 195: printf("TRIAC output dimming has been enabled\n\r");
  5900  01155A  0EC4               	movlw	low STR_66
  5901  01155C  0101               	movlb	1	; () banked
  5902  01155E  6F64               	movwf	printf@f& (0+255),b
  5903  011560  0EFC               	movlw	high STR_66
  5904  011562  6F65               	movwf	(printf@f+1)& (0+255),b
  5905  011564  EC00  F080         	call	_printf	;wreg free
  5906                           
  5907                           ;ring_buffer_LUT.c: 197: terminal_textAttributesReset();
  5908  011568  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5909                           
  5910                           ;ring_buffer_LUT.c: 199: terminal_printNewline();
  5911  01156C  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5912                           
  5913                           ;ring_buffer_LUT.c: 201: }
  5914  011570  0012               	return	
  5915  011572                     l946:
  5916                           
  5917                           ;ring_buffer_LUT.c: 204: else if ((0 == strcmp(line, "Disable Dimming"))) {
  5918  011572  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5919  011576  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5920  01157A  0E38               	movlw	low STR_67
  5921  01157C  0101               	movlb	1	; () banked
  5922  01157E  6F19               	movwf	strcmp@s2& (0+255),b
  5923  011580  0EFF               	movlw	high STR_67
  5924  011582  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5925  011584  EC38  F0AC         	call	_strcmp	;wreg free
  5926  011588  0101               	movlb	1	; () banked
  5927  01158A  5117               	movf	?_strcmp& (0+255),w,b
  5928  01158C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5929  01158E  A4D8               	btfss	status,2,c
  5930  011590  D018               	goto	l948
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;ring_buffer_LUT.c: 207: LATGbits.LATG0 = 1;
  5934  011592  807F               	bsf	3967,0,c	;volatile
  5935                           
  5936                           ;ring_buffer_LUT.c: 208: LATGbits.LATG1 = 1;
  5937  011594  827F               	bsf	3967,1,c	;volatile
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;ring_buffer_LUT.c: 211: terminal_printNewline();
  5941  011596  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5942                           
  5943                           ;ring_buffer_LUT.c: 213: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5944  01159A  0E00               	movlw	0
  5945  01159C  0101               	movlb	1	; () banked
  5946  01159E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5947  0115A0  0E00               	movlw	0
  5948  0115A2  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5949  0115A4  0E06               	movlw	6
  5950  0115A6  EC23  F093         	call	_terminal_textAttributes
  5951                           
  5952                           ;ring_buffer_LUT.c: 214: printf("TRIAC output dimming has been disabled\n\r");
  5953  0115AA  0E9B               	movlw	low STR_68
  5954  0115AC  0101               	movlb	1	; () banked
  5955  0115AE  6F64               	movwf	printf@f& (0+255),b
  5956  0115B0  0EFC               	movlw	high STR_68
  5957  0115B2  6F65               	movwf	(printf@f+1)& (0+255),b
  5958  0115B4  EC00  F080         	call	_printf	;wreg free
  5959                           
  5960                           ;ring_buffer_LUT.c: 216: terminal_textAttributesReset();
  5961  0115B8  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5962                           
  5963                           ;ring_buffer_LUT.c: 218: terminal_printNewline();
  5964  0115BC  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5965                           
  5966                           ;ring_buffer_LUT.c: 220: }
  5967  0115C0  0012               	return	
  5968  0115C2                     l948:
  5969                           
  5970                           ;ring_buffer_LUT.c: 223: else if ((0 == strcmp(line, "Enable Load"))) {
  5971  0115C2  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5972  0115C6  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5973  0115CA  0E80               	movlw	low STR_69
  5974  0115CC  0101               	movlb	1	; () banked
  5975  0115CE  6F19               	movwf	strcmp@s2& (0+255),b
  5976  0115D0  0EFF               	movlw	high STR_69
  5977  0115D2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5978  0115D4  EC38  F0AC         	call	_strcmp	;wreg free
  5979  0115D8  0101               	movlb	1	; () banked
  5980  0115DA  5117               	movf	?_strcmp& (0+255),w,b
  5981  0115DC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5982  0115DE  A4D8               	btfss	status,2,c
  5983  0115E0  D016               	goto	l950
  5984                           
  5985                           ; BSR set to: 1
  5986                           ;ring_buffer_LUT.c: 227: terminal_printNewline();
  5987  0115E2  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  5988                           
  5989                           ;ring_buffer_LUT.c: 229: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5990  0115E6  0E00               	movlw	0
  5991  0115E8  0101               	movlb	1	; () banked
  5992  0115EA  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5993  0115EC  0E00               	movlw	0
  5994  0115EE  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5995  0115F0  0E06               	movlw	6
  5996  0115F2  EC23  F093         	call	_terminal_textAttributes
  5997                           
  5998                           ;ring_buffer_LUT.c: 230: printf("Load has been enabled\n\r");
  5999  0115F6  0E94               	movlw	low STR_70
  6000  0115F8  0101               	movlb	1	; () banked
  6001  0115FA  6F64               	movwf	printf@f& (0+255),b
  6002  0115FC  0EFE               	movlw	high STR_70
  6003  0115FE  6F65               	movwf	(printf@f+1)& (0+255),b
  6004  011600  EC00  F080         	call	_printf	;wreg free
  6005                           
  6006                           ;ring_buffer_LUT.c: 232: terminal_textAttributesReset();
  6007  011604  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6008                           
  6009                           ;ring_buffer_LUT.c: 234: terminal_printNewline();
  6010  011608  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6011                           
  6012                           ;ring_buffer_LUT.c: 236: }
  6013  01160C  0012               	return	
  6014  01160E                     l950:
  6015                           
  6016                           ;ring_buffer_LUT.c: 239: else if ((0 == strcmp(line, "Disable Load"))) {
  6017  01160E  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6018  011612  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6019  011616  0E73               	movlw	low STR_71
  6020  011618  0101               	movlb	1	; () banked
  6021  01161A  6F19               	movwf	strcmp@s2& (0+255),b
  6022  01161C  0EFF               	movlw	high STR_71
  6023  01161E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6024  011620  EC38  F0AC         	call	_strcmp	;wreg free
  6025  011624  0101               	movlb	1	; () banked
  6026  011626  5117               	movf	?_strcmp& (0+255),w,b
  6027  011628  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6028  01162A  A4D8               	btfss	status,2,c
  6029  01162C  D018               	goto	l952
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;ring_buffer_LUT.c: 241: LATGbits.LATG1 = 0;
  6033  01162E  927F               	bcf	3967,1,c	;volatile
  6034                           
  6035                           ;ring_buffer_LUT.c: 242: LATGbits.LATG0 = 0;
  6036  011630  907F               	bcf	3967,0,c	;volatile
  6037                           
  6038                           ; BSR set to: 1
  6039                           ;ring_buffer_LUT.c: 245: terminal_printNewline();
  6040  011632  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6041                           
  6042                           ;ring_buffer_LUT.c: 247: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6043  011636  0E00               	movlw	0
  6044  011638  0101               	movlb	1	; () banked
  6045  01163A  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6046  01163C  0E00               	movlw	0
  6047  01163E  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6048  011640  0E06               	movlw	6
  6049  011642  EC23  F093         	call	_terminal_textAttributes
  6050                           
  6051                           ;ring_buffer_LUT.c: 248: printf("Load has been disabled\n\r");
  6052  011646  0E7B               	movlw	low STR_72
  6053  011648  0101               	movlb	1	; () banked
  6054  01164A  6F64               	movwf	printf@f& (0+255),b
  6055  01164C  0EFE               	movlw	high STR_72
  6056  01164E  6F65               	movwf	(printf@f+1)& (0+255),b
  6057  011650  EC00  F080         	call	_printf	;wreg free
  6058                           
  6059                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
  6060  011654  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6061                           
  6062                           ;ring_buffer_LUT.c: 252: terminal_printNewline();
  6063  011658  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6064                           
  6065                           ;ring_buffer_LUT.c: 254: }
  6066  01165C  0012               	return	
  6067  01165E                     l952:
  6068                           
  6069                           ;ring_buffer_LUT.c: 257: else if ((strstr(line, "Set Dimming Percentage "))) {
  6070  01165E  C19F  F126         	movff	ringBufferLUT@line,strstr@s1
  6071  011662  C1A0  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  6072  011666  0EAC               	movlw	low STR_73
  6073  011668  0101               	movlb	1	; () banked
  6074  01166A  6F28               	movwf	strstr@s2& (0+255),b
  6075  01166C  0EFE               	movlw	high STR_73
  6076  01166E  6F29               	movwf	(strstr@s2+1)& (0+255),b
  6077  011670  EC92  F0A7         	call	_strstr	;wreg free
  6078  011674  0101               	movlb	1	; () banked
  6079  011676  5126               	movf	?_strstr& (0+255),w,b
  6080  011678  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  6081  01167A  B4D8               	btfsc	status,2,c
  6082  01167C  D0E4               	goto	l954
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;ring_buffer_LUT.c: 260: char arg_buff[3];
  6086                           ;ring_buffer_LUT.c: 263: for (int index = 0; index <= 3; index++) {
  6087  01167E  0E00               	movlw	0
  6088  011680  6FAC               	movwf	(ringBufferLUT@index+1)& (0+255),b
  6089  011682  0E00               	movlw	0
  6090  011684  6FAB               	movwf	ringBufferLUT@index& (0+255),b
  6091  011686                     l9737:
  6092                           
  6093                           ; BSR set to: 1
  6094  011686  BFAC               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  6095  011688  D006               	goto	l955
  6096  01168A  51AC               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  6097  01168C  E11B               	bnz	l9747
  6098  01168E  0E04               	movlw	4
  6099  011690  5DAB               	subwf	ringBufferLUT@index& (0+255),w,b
  6100  011692  B0D8               	btfsc	status,0,c
  6101  011694  D017               	goto	u11500
  6102  011696                     l955:
  6103                           
  6104                           ; BSR set to: 1
  6105                           ;ring_buffer_LUT.c: 265: arg_buff[index] = line[index + 23];
  6106                           
  6107                           ; BSR set to: 1
  6108  011696  0E17               	movlw	23
  6109  011698  25AB               	addwf	ringBufferLUT@index& (0+255),w,b
  6110  01169A  6FA1               	movwf	??_ringBufferLUT& (0+255),b
  6111  01169C  0E00               	movlw	0
  6112  01169E  21AC               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6113  0116A0  6FA2               	movwf	(??_ringBufferLUT+1)& (0+255),b
  6114  0116A2  51A1               	movf	??_ringBufferLUT& (0+255),w,b
  6115  0116A4  259F               	addwf	ringBufferLUT@line& (0+255),w,b
  6116  0116A6  6ED9               	movwf	fsr2l,c
  6117  0116A8  51A2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  6118  0116AA  21A0               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  6119  0116AC  6EDA               	movwf	fsr2h,c
  6120  0116AE  0EA6               	movlw	low ringBufferLUT@arg_buff
  6121  0116B0  25AB               	addwf	ringBufferLUT@index& (0+255),w,b
  6122  0116B2  6EE1               	movwf	fsr1l,c
  6123  0116B4  0E01               	movlw	high ringBufferLUT@arg_buff
  6124  0116B6  21AC               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6125  0116B8  6EE2               	movwf	fsr1h,c
  6126  0116BA  CFDF FFE7          	movff	indf2,indf1
  6127                           
  6128                           ; BSR set to: 1
  6129  0116BE  4BAB               	infsnz	ringBufferLUT@index& (0+255),f,b
  6130  0116C0  2BAC               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  6131  0116C2  D7E1               	goto	l9737
  6132  0116C4                     u11500:
  6133  0116C4                     l9747:
  6134                           
  6135                           ; BSR set to: 1
  6136                           ;ring_buffer_LUT.c: 267: }
  6137                           ;ring_buffer_LUT.c: 269: int percentage = atoi(arg_buff);
  6138  0116C4  0EA6               	movlw	low ringBufferLUT@arg_buff
  6139  0116C6  6F2B               	movwf	atoi@s& (0+255),b
  6140  0116C8  0E01               	movlw	high ringBufferLUT@arg_buff
  6141  0116CA  6F2C               	movwf	(atoi@s+1)& (0+255),b
  6142  0116CC  EC92  F0A4         	call	_atoi	;wreg free
  6143  0116D0  C12B  F1A9         	movff	?_atoi,ringBufferLUT@percentage
  6144  0116D4  C12C  F1AA         	movff	?_atoi+1,ringBufferLUT@percentage+1
  6145                           
  6146                           ;ring_buffer_LUT.c: 272: if ( (percentage >= 100) ||
  6147                           ;ring_buffer_LUT.c: 273: (percentage <= 0)) {
  6148  0116D8  0101               	movlb	1	; () banked
  6149  0116DA  BFAA               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6150  0116DC  D006               	goto	u11510
  6151  0116DE  51AA               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6152  0116E0  E10B               	bnz	l9753
  6153  0116E2  0E64               	movlw	100
  6154  0116E4  5DA9               	subwf	ringBufferLUT@percentage& (0+255),w,b
  6155  0116E6  B0D8               	btfsc	status,0,c
  6156  0116E8  D007               	goto	u11520
  6157  0116EA                     u11510:
  6158                           
  6159                           ; BSR set to: 1
  6160  0116EA  BFAA               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6161  0116EC  D005               	goto	u11520
  6162  0116EE  51AA               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6163  0116F0  E128               	bnz	l9755
  6164  0116F2  05A9               	decf	ringBufferLUT@percentage& (0+255),w,b
  6165  0116F4  B0D8               	btfsc	status,0,c
  6166  0116F6  D025               	goto	l957
  6167  0116F8                     u11520:
  6168  0116F8                     l9753:
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;ring_buffer_LUT.c: 276: terminal_printNewline();
  6172  0116F8  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6173                           
  6174                           ;ring_buffer_LUT.c: 278: terminal_textAttributes(RED, BLACK, NORMAL);
  6175  0116FC  0E00               	movlw	0
  6176  0116FE  0101               	movlb	1	; () banked
  6177  011700  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6178  011702  0E00               	movlw	0
  6179  011704  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6180  011706  0E01               	movlw	1
  6181  011708  EC23  F093         	call	_terminal_textAttributes
  6182                           
  6183                           ;ring_buffer_LUT.c: 279: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  6184  01170C  0E65               	movlw	low STR_74
  6185  01170E  0101               	movlb	1	; () banked
  6186  011710  6F64               	movwf	printf@f& (0+255),b
  6187  011712  0EFB               	movlw	high STR_74
  6188  011714  6F65               	movwf	(printf@f+1)& (0+255),b
  6189  011716  EC00  F080         	call	_printf	;wreg free
  6190                           
  6191                           ;ring_buffer_LUT.c: 281: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6192  01171A  0E00               	movlw	0
  6193  01171C  0101               	movlb	1	; () banked
  6194  01171E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6195  011720  0E00               	movlw	0
  6196  011722  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6197  011724  0E03               	movlw	3
  6198  011726  EC23  F093         	call	_terminal_textAttributes
  6199                           
  6200                           ;ring_buffer_LUT.c: 282: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  6201  01172A  0EFF               	movlw	low STR_75
  6202  01172C  0101               	movlb	1	; () banked
  6203  01172E  6F64               	movwf	printf@f& (0+255),b
  6204  011730  0EFA               	movlw	high STR_75
  6205  011732  6F65               	movwf	(printf@f+1)& (0+255),b
  6206  011734  EC00  F080         	call	_printf	;wreg free
  6207                           
  6208                           ;ring_buffer_LUT.c: 284: terminal_textAttributesReset();
  6209  011738  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6210                           
  6211                           ;ring_buffer_LUT.c: 286: terminal_printNewline();
  6212  01173C  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6213                           
  6214                           ;ring_buffer_LUT.c: 288: }
  6215  011740  0012               	return	
  6216  011742                     l957:
  6217  011742                     l9755:
  6218                           
  6219                           ;ring_buffer_LUT.c: 291: else {
  6220                           ;ring_buffer_LUT.c: 294: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  6221  011742  0E00               	movlw	0
  6222  011744  0101               	movlb	1	; () banked
  6223  011746  6F3A               	movwf	___ftdiv@f2& (0+255),b
  6224  011748  0EC8               	movlw	200
  6225  01174A  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  6226  01174C  0E42               	movlw	66
  6227  01174E  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  6228  011750  0E00               	movlw	0
  6229  011752  6F2E               	movwf	___ftadd@f2& (0+255),b
  6230  011754  0EC8               	movlw	200
  6231  011756  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  6232  011758  0E42               	movlw	66
  6233  01175A  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  6234  01175C  C1A9  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  6235  011760  C1AA  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  6236  011764  EC7D  F0AD         	call	___awtoft	;wreg free
  6237  011768  C11F  F123         	movff	?___awtoft,___ftneg@f1
  6238  01176C  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  6239  011770  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  6240  011774  EC9E  F0AE         	call	___ftneg	;wreg free
  6241  011778  C123  F12B         	movff	?___ftneg,___ftadd@f1
  6242  01177C  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  6243  011780  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  6244  011784  EC84  F09B         	call	___ftadd	;wreg free
  6245  011788  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  6246  01178C  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  6247  011790  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  6248  011794  ECCF  F0A2         	call	___ftdiv	;wreg free
  6249  011798  C137  F146         	movff	?___ftdiv,___ftmul@f1
  6250  01179C  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  6251  0117A0  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  6252  0117A4  0E10               	movlw	16
  6253  0117A6  0101               	movlb	1	; () banked
  6254  0117A8  6F49               	movwf	___ftmul@f2& (0+255),b
  6255  0117AA  0E49               	movlw	73
  6256  0117AC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6257  0117AE  0E40               	movlw	64
  6258  0117B0  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6259  0117B2  EC60  F0A1         	call	___ftmul	;wreg free
  6260  0117B6  C146  F0DF         	movff	?___ftmul,_TRIAC_Firing_Angle
  6261  0117BA  C147  F0E0         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1
  6262  0117BE  C148  F0E1         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2
  6263                           
  6264                           ;ring_buffer_LUT.c: 295: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  6265  0117C2  C0DF  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1
  6266  0117C6  C0E0  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1
  6267  0117CA  C0E1  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2
  6268  0117CE  0E2F               	movlw	47
  6269  0117D0  0101               	movlb	1	; () banked
  6270  0117D2  6F49               	movwf	___ftmul@f2& (0+255),b
  6271  0117D4  0E65               	movlw	101
  6272  0117D6  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6273  0117D8  0E42               	movlw	66
  6274  0117DA  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6275  0117DC  EC60  F0A1         	call	___ftmul	;wreg free
  6276  0117E0  C146  F1A3         	movff	?___ftmul,ringBufferLUT@angle_degrees
  6277  0117E4  C147  F1A4         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  6278  0117E8  C148  F1A5         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  6279                           
  6280                           ;ring_buffer_LUT.c: 298: terminal_printNewline();
  6281  0117EC  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6282                           
  6283                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6284  0117F0  0E00               	movlw	0
  6285  0117F2  0101               	movlb	1	; () banked
  6286  0117F4  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6287  0117F6  0E00               	movlw	0
  6288  0117F8  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6289  0117FA  0E06               	movlw	6
  6290  0117FC  EC23  F093         	call	_terminal_textAttributes
  6291                           
  6292                           ;ring_buffer_LUT.c: 301: printf("Dimming has been set to %d percent\n\r", percentage);
  6293  011800  0E14               	movlw	low STR_76
  6294  011802  0101               	movlb	1	; () banked
  6295  011804  6F64               	movwf	printf@f& (0+255),b
  6296  011806  0EFD               	movlw	high STR_76
  6297  011808  6F65               	movwf	(printf@f+1)& (0+255),b
  6298  01180A  C1A9  F166         	movff	ringBufferLUT@percentage,?_printf+2
  6299  01180E  C1AA  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  6300  011812  EC00  F080         	call	_printf	;wreg free
  6301                           
  6302                           ;ring_buffer_LUT.c: 302: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  6303  011816  0EBB               	movlw	low STR_77
  6304  011818  0101               	movlb	1	; () banked
  6305  01181A  6F64               	movwf	printf@f& (0+255),b
  6306  01181C  0EFB               	movlw	high STR_77
  6307  01181E  6F65               	movwf	(printf@f+1)& (0+255),b
  6308  011820  C0DF  F166         	movff	_TRIAC_Firing_Angle,?_printf+2
  6309  011824  C0E0  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3
  6310  011828  C0E1  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4
  6311  01182C  C1A3  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  6312  011830  C1A4  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  6313  011834  C1A5  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  6314  011838  EC00  F080         	call	_printf	;wreg free
  6315                           
  6316                           ;ring_buffer_LUT.c: 304: terminal_textAttributesReset();
  6317  01183C  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6318                           
  6319                           ;ring_buffer_LUT.c: 306: terminal_printNewline();
  6320  011840  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6321                           
  6322                           ;ring_buffer_LUT.c: 308: }
  6323                           ;ring_buffer_LUT.c: 310: }
  6324  011844  0012               	return	
  6325  011846                     l954:
  6326                           
  6327                           ;ring_buffer_LUT.c: 313: else if((0 == strcmp(line, "On Time?"))) {
  6328  011846  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6329  01184A  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6330  01184E  0E8C               	movlw	low STR_78
  6331  011850  0101               	movlb	1	; () banked
  6332  011852  6F19               	movwf	strcmp@s2& (0+255),b
  6333  011854  0EFF               	movlw	high STR_78
  6334  011856  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6335  011858  EC38  F0AC         	call	_strcmp	;wreg free
  6336  01185C  0101               	movlb	1	; () banked
  6337  01185E  5117               	movf	?_strcmp& (0+255),w,b
  6338  011860  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6339  011862  A4D8               	btfss	status,2,c
  6340  011864  D01E               	goto	l962
  6341                           
  6342                           ; BSR set to: 1
  6343                           ;ring_buffer_LUT.c: 316: terminal_printNewline();
  6344  011866  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6345                           
  6346                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6347  01186A  0E00               	movlw	0
  6348  01186C  0101               	movlb	1	; () banked
  6349  01186E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6350  011870  0E00               	movlw	0
  6351  011872  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6352  011874  0E06               	movlw	6
  6353  011876  EC23  F093         	call	_terminal_textAttributes
  6354                           
  6355                           ;ring_buffer_LUT.c: 319: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", on_time);
  6356  01187A  0EFA               	movlw	low STR_79
  6357  01187C  0101               	movlb	1	; () banked
  6358  01187E  6F64               	movwf	printf@f& (0+255),b
  6359  011880  0EFB               	movlw	high STR_79
  6360  011882  6F65               	movwf	(printf@f+1)& (0+255),b
  6361  011884  C1B8  F166         	movff	_on_time,?_printf+2
  6362  011888  C1B9  F167         	movff	_on_time+1,?_printf+3
  6363  01188C  C1BA  F168         	movff	_on_time+2,?_printf+4
  6364  011890  C1BB  F169         	movff	_on_time+3,?_printf+5
  6365  011894  EC00  F080         	call	_printf	;wreg free
  6366                           
  6367                           ;ring_buffer_LUT.c: 321: terminal_textAttributesReset();
  6368  011898  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6369                           
  6370                           ;ring_buffer_LUT.c: 323: terminal_printNewline();
  6371  01189C  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6372                           
  6373                           ;ring_buffer_LUT.c: 326: }
  6374  0118A0  0012               	return	
  6375  0118A2                     l962:
  6376                           
  6377                           ;ring_buffer_LUT.c: 331: else if((0 == strcmp(line, "Help"))) {
  6378  0118A2  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6379  0118A6  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6380  0118AA  0EA7               	movlw	low STR_80
  6381  0118AC  0101               	movlb	1	; () banked
  6382  0118AE  6F19               	movwf	strcmp@s2& (0+255),b
  6383  0118B0  0EFF               	movlw	high STR_80
  6384  0118B2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6385  0118B4  EC38  F0AC         	call	_strcmp	;wreg free
  6386  0118B8  0101               	movlb	1	; () banked
  6387  0118BA  5117               	movf	?_strcmp& (0+255),w,b
  6388  0118BC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6389  0118BE  A4D8               	btfss	status,2,c
  6390  0118C0  0012               	return	
  6391                           
  6392                           ; BSR set to: 1
  6393                           ;ring_buffer_LUT.c: 334: terminal_printNewline();
  6394  0118C2  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6395                           
  6396                           ;ring_buffer_LUT.c: 336: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6397  0118C6  0E00               	movlw	0
  6398  0118C8  0101               	movlb	1	; () banked
  6399  0118CA  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6400  0118CC  0E00               	movlw	0
  6401  0118CE  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6402  0118D0  0E03               	movlw	3
  6403  0118D2  EC23  F093         	call	_terminal_textAttributes
  6404                           
  6405                           ;ring_buffer_LUT.c: 337: printf("List of supported commands:\n\r"
  6406                           ;ring_buffer_LUT.c: 338: "   Reset: Clears the terminal and resets the micro\n\r"
  6407                           ;ring_buffer_LUT.c: 339: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  6408                           ;ring_buffer_LUT.c: 340: "   *IDN?: Returns device identification\n\r"
  6409                           ;ring_buffer_LUT.c: 341: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
  6410                           ;ring_buffer_LUT.c: 342: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
  6411                           ;ring_buffer_LUT.c: 343: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
  6412  0118D6  0E0B               	movlw	low STR_81
  6413  0118D8  0101               	movlb	1	; () banked
  6414  0118DA  6F64               	movwf	printf@f& (0+255),b
  6415  0118DC  0EF5               	movlw	high STR_81
  6416  0118DE  6F65               	movwf	(printf@f+1)& (0+255),b
  6417  0118E0  EC00  F080         	call	_printf	;wreg free
  6418                           
  6419                           ;ring_buffer_LUT.c: 357: terminal_printNewline();
  6420  0118E4  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6421                           
  6422                           ;ring_buffer_LUT.c: 358: printf("Help messages appear in yellow\n\r");
  6423  0118E8  0EE4               	movlw	low STR_82
  6424  0118EA  0101               	movlb	1	; () banked
  6425  0118EC  6F64               	movwf	printf@f& (0+255),b
  6426  0118EE  0EFD               	movlw	high STR_82
  6427  0118F0  6F65               	movwf	(printf@f+1)& (0+255),b
  6428  0118F2  EC00  F080         	call	_printf	;wreg free
  6429                           
  6430                           ;ring_buffer_LUT.c: 360: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6431  0118F6  0E00               	movlw	0
  6432  0118F8  0101               	movlb	1	; () banked
  6433  0118FA  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6434  0118FC  0E00               	movlw	0
  6435  0118FE  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6436  011900  0E02               	movlw	2
  6437  011902  EC23  F093         	call	_terminal_textAttributes
  6438                           
  6439                           ;ring_buffer_LUT.c: 361: printf("IDN string appears in green\n\r");
  6440  011906  0E43               	movlw	low STR_83
  6441  011908  0101               	movlb	1	; () banked
  6442  01190A  6F64               	movwf	printf@f& (0+255),b
  6443  01190C  0EFE               	movlw	high STR_83
  6444  01190E  6F65               	movwf	(printf@f+1)& (0+255),b
  6445  011910  EC00  F080         	call	_printf	;wreg free
  6446                           
  6447                           ;ring_buffer_LUT.c: 362: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6448  011914  0E00               	movlw	0
  6449  011916  0101               	movlb	1	; () banked
  6450  011918  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6451  01191A  0E00               	movlw	0
  6452  01191C  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6453  01191E  0E06               	movlw	6
  6454  011920  EC23  F093         	call	_terminal_textAttributes
  6455                           
  6456                           ;ring_buffer_LUT.c: 363: printf("Measurements responses appear in cyan\n\r");
  6457  011924  0EEC               	movlw	low STR_84
  6458  011926  0101               	movlb	1	; () banked
  6459  011928  6F64               	movwf	printf@f& (0+255),b
  6460  01192A  0EFC               	movlw	high STR_84
  6461  01192C  6F65               	movwf	(printf@f+1)& (0+255),b
  6462  01192E  EC00  F080         	call	_printf	;wreg free
  6463                           
  6464                           ;ring_buffer_LUT.c: 364: terminal_textAttributes(RED, BLACK, NORMAL);
  6465  011932  0E00               	movlw	0
  6466  011934  0101               	movlb	1	; () banked
  6467  011936  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6468  011938  0E00               	movlw	0
  6469  01193A  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6470  01193C  0E01               	movlw	1
  6471  01193E  EC23  F093         	call	_terminal_textAttributes
  6472                           
  6473                           ;ring_buffer_LUT.c: 365: printf("Errors appear in red\n\r");
  6474  011942  0EC4               	movlw	low STR_85
  6475  011944  0101               	movlb	1	; () banked
  6476  011946  6F64               	movwf	printf@f& (0+255),b
  6477  011948  0EFE               	movlw	high STR_85
  6478  01194A  6F65               	movwf	(printf@f+1)& (0+255),b
  6479  01194C  EC00  F080         	call	_printf	;wreg free
  6480                           
  6481                           ;ring_buffer_LUT.c: 366: terminal_textAttributesReset();
  6482  011950  EC4F  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6483                           
  6484                           ;ring_buffer_LUT.c: 367: printf("User input appears in white\n\r");
  6485  011954  0E25               	movlw	low STR_86
  6486  011956  0101               	movlb	1	; () banked
  6487  011958  6F64               	movwf	printf@f& (0+255),b
  6488  01195A  0EFE               	movlw	high STR_86
  6489  01195C  6F65               	movwf	(printf@f+1)& (0+255),b
  6490  01195E  EC00  F080         	call	_printf	;wreg free
  6491                           
  6492                           ;ring_buffer_LUT.c: 370: terminal_printNewline();
  6493  011962  EC69  F0AF         	call	_terminal_printNewline	;wreg free
  6494  011966  0012               	return	
  6495  011968                     __end_of_ringBufferLUT:
  6496                           	opt stack 0
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           intcon	equ	0xFF2
  6502                           postinc0	equ	0xFEE
  6503                           wreg	equ	0xFE8
  6504                           indf1	equ	0xFE7
  6505                           postdec1	equ	0xFE5
  6506                           fsr1h	equ	0xFE2
  6507                           fsr1l	equ	0xFE1
  6508                           indf2	equ	0xFDF
  6509                           postinc2	equ	0xFDE
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8
  6513                           
  6514 ;; *************** function _terminal_textAttributesReset *****************
  6515 ;; Defined at:
  6516 ;;		line 223 in file "ring_buffer_interface.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;		None
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      void 
  6523 ;; Registers used:
  6524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:   19
  6537 ;; This function calls:
  6538 ;;		_terminal_textAttributes
  6539 ;; This function is called by:
  6540 ;;		_main
  6541 ;;		_ringBufferLUT
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text4
  6546  015E9E                     __ptext4:
  6547                           	opt stack 0
  6548  015E9E                     _terminal_textAttributesReset:
  6549                           	opt stack 11
  6550                           
  6551                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  6552                           
  6553                           ;incstack = 0
  6554  015E9E  0E00               	movlw	0
  6555  015EA0  0101               	movlb	1	; () banked
  6556  015EA2  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6557  015EA4  0E00               	movlw	0
  6558  015EA6  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6559  015EA8  0E07               	movlw	7
  6560  015EAA  EC23  F093         	call	_terminal_textAttributes
  6561  015EAE  0012               	return		;funcret
  6562  015EB0                     __end_of_terminal_textAttributesReset:
  6563                           	opt stack 0
  6564                           tblptru	equ	0xFF8
  6565                           tblptrh	equ	0xFF7
  6566                           tblptrl	equ	0xFF6
  6567                           tablat	equ	0xFF5
  6568                           intcon	equ	0xFF2
  6569                           postinc0	equ	0xFEE
  6570                           wreg	equ	0xFE8
  6571                           indf1	equ	0xFE7
  6572                           postdec1	equ	0xFE5
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           indf2	equ	0xFDF
  6576                           postinc2	equ	0xFDE
  6577                           fsr2h	equ	0xFDA
  6578                           fsr2l	equ	0xFD9
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _terminal_textAttributes *****************
  6582 ;; Defined at:
  6583 ;;		line 115 in file "ring_buffer_interface.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  foreground_c    1    wreg     enum E17839
  6586 ;;  background_c    1  141[BANK1 ] enum E17839
  6587 ;;  input_attrib    1  142[BANK1 ] enum E17831
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  foreground_c    1  143[BANK1 ] enum E17839
  6590 ;;  output_buff    15  144[BANK1 ] unsigned char [15]
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6600 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6601 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6604 ;;Total ram usage:       18 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:   18
  6607 ;; This function calls:
  6608 ;;		_printf
  6609 ;;		_strcat
  6610 ;;		_strncpy
  6611 ;; This function is called by:
  6612 ;;		_terminal_textAttributesReset
  6613 ;;		_ringBufferLUT
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text5
  6618  012646                     __ptext5:
  6619                           	opt stack 0
  6620  012646                     _terminal_textAttributes:
  6621                           	opt stack 11
  6622                           
  6623                           ;incstack = 0
  6624                           ;terminal_textAttributes@foreground_color stored from wreg
  6625  012646  0101               	movlb	1	; () banked
  6626  012648  6F8F               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  6627                           
  6628                           ;ring_buffer_interface.c: 119: char output_buff[15];
  6629                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  6630  01264A  0E90               	movlw	low terminal_textAttributes@output_buff
  6631  01264C  0101               	movlb	1	; () banked
  6632  01264E  6F17               	movwf	strncpy@to& (0+255),b
  6633  012650  0E01               	movlw	high terminal_textAttributes@output_buff
  6634  012652  6F18               	movwf	(strncpy@to+1)& (0+255),b
  6635  012654  0EF5               	movlw	low STR_11
  6636  012656  6F19               	movwf	strncpy@from& (0+255),b
  6637  012658  0EFF               	movlw	high STR_11
  6638  01265A  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  6639  01265C  0E00               	movlw	0
  6640  01265E  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  6641  012660  0E0F               	movlw	15
  6642  012662  6F1B               	movwf	strncpy@size& (0+255),b
  6643  012664  EC02  F0AA         	call	_strncpy	;wreg free
  6644                           
  6645                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  6646  012668  D054               	goto	l844
  6647  01266A                     
  6648                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  6649  01266A  0E90               	movlw	low terminal_textAttributes@output_buff
  6650  01266C  0101               	movlb	1	; () banked
  6651  01266E  6F17               	movwf	strcat@to& (0+255),b
  6652  012670  0E01               	movlw	high terminal_textAttributes@output_buff
  6653  012672  6F18               	movwf	(strcat@to+1)& (0+255),b
  6654  012674  0EC6               	movlw	low (STR_20+1)
  6655  012676  6F19               	movwf	strcat@from& (0+255),b
  6656  012678  0EFF               	movlw	high (STR_20+1)
  6657  01267A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6658  01267C  EC87  F0AC         	call	_strcat	;wreg free
  6659                           
  6660                           ;ring_buffer_interface.c: 127: break;
  6661  012680  D05D               	goto	l846
  6662  012682                     
  6663                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  6664  012682  0E90               	movlw	low terminal_textAttributes@output_buff
  6665  012684  0101               	movlb	1	; () banked
  6666  012686  6F17               	movwf	strcat@to& (0+255),b
  6667  012688  0E01               	movlw	high terminal_textAttributes@output_buff
  6668  01268A  6F18               	movwf	(strcat@to+1)& (0+255),b
  6669  01268C  0ECC               	movlw	low (STR_21+1)
  6670  01268E  6F19               	movwf	strcat@from& (0+255),b
  6671  012690  0EFF               	movlw	high (STR_21+1)
  6672  012692  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6673  012694  EC87  F0AC         	call	_strcat	;wreg free
  6674                           
  6675                           ;ring_buffer_interface.c: 130: break;
  6676  012698  D051               	goto	l846
  6677  01269A                     
  6678                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  6679  01269A  0E90               	movlw	low terminal_textAttributes@output_buff
  6680  01269C  0101               	movlb	1	; () banked
  6681  01269E  6F17               	movwf	strcat@to& (0+255),b
  6682  0126A0  0E01               	movlw	high terminal_textAttributes@output_buff
  6683  0126A2  6F18               	movwf	(strcat@to+1)& (0+255),b
  6684  0126A4  0EDE               	movlw	low (STR_24+1)
  6685  0126A6  6F19               	movwf	strcat@from& (0+255),b
  6686  0126A8  0EFF               	movlw	high (STR_24+1)
  6687  0126AA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6688  0126AC  EC87  F0AC         	call	_strcat	;wreg free
  6689                           
  6690                           ;ring_buffer_interface.c: 133: break;
  6691  0126B0  D045               	goto	l846
  6692  0126B2                     
  6693                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  6694  0126B2  0E90               	movlw	low terminal_textAttributes@output_buff
  6695  0126B4  0101               	movlb	1	; () banked
  6696  0126B6  6F17               	movwf	strcat@to& (0+255),b
  6697  0126B8  0E01               	movlw	high terminal_textAttributes@output_buff
  6698  0126BA  6F18               	movwf	(strcat@to+1)& (0+255),b
  6699  0126BC  0EE4               	movlw	low (STR_25+1)
  6700  0126BE  6F19               	movwf	strcat@from& (0+255),b
  6701  0126C0  0EFF               	movlw	high (STR_25+1)
  6702  0126C2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6703  0126C4  EC87  F0AC         	call	_strcat	;wreg free
  6704                           
  6705                           ;ring_buffer_interface.c: 136: break;
  6706  0126C8  D039               	goto	l846
  6707  0126CA                     
  6708                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  6709  0126CA  0E90               	movlw	low terminal_textAttributes@output_buff
  6710  0126CC  0101               	movlb	1	; () banked
  6711  0126CE  6F17               	movwf	strcat@to& (0+255),b
  6712  0126D0  0E01               	movlw	high terminal_textAttributes@output_buff
  6713  0126D2  6F18               	movwf	(strcat@to+1)& (0+255),b
  6714  0126D4  0EF0               	movlw	low (STR_27+1)
  6715  0126D6  6F19               	movwf	strcat@from& (0+255),b
  6716  0126D8  0EFF               	movlw	high (STR_27+1)
  6717  0126DA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6718  0126DC  EC87  F0AC         	call	_strcat	;wreg free
  6719                           
  6720                           ;ring_buffer_interface.c: 139: break;
  6721  0126E0  D02D               	goto	l846
  6722  0126E2                     
  6723                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  6724  0126E2  0E90               	movlw	low terminal_textAttributes@output_buff
  6725  0126E4  0101               	movlb	1	; () banked
  6726  0126E6  6F17               	movwf	strcat@to& (0+255),b
  6727  0126E8  0E01               	movlw	high terminal_textAttributes@output_buff
  6728  0126EA  6F18               	movwf	(strcat@to+1)& (0+255),b
  6729  0126EC  0EF8               	movlw	low STR_17
  6730  0126EE  6F19               	movwf	strcat@from& (0+255),b
  6731  0126F0  0EFF               	movlw	high STR_17
  6732  0126F2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6733  0126F4  EC87  F0AC         	call	_strcat	;wreg free
  6734                           
  6735                           ;ring_buffer_interface.c: 142: break;
  6736  0126F8  D021               	goto	l846
  6737  0126FA                     
  6738                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  6739  0126FA  0E90               	movlw	low terminal_textAttributes@output_buff
  6740  0126FC  0101               	movlb	1	; () banked
  6741  0126FE  6F17               	movwf	strcat@to& (0+255),b
  6742  012700  0E01               	movlw	high terminal_textAttributes@output_buff
  6743  012702  6F18               	movwf	(strcat@to+1)& (0+255),b
  6744  012704  0EC6               	movlw	low (STR_20+1)
  6745  012706  6F19               	movwf	strcat@from& (0+255),b
  6746  012708  0EFF               	movlw	high (STR_20+1)
  6747  01270A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6748  01270C  EC87  F0AC         	call	_strcat	;wreg free
  6749                           
  6750                           ;ring_buffer_interface.c: 147: }
  6751                           
  6752                           ;ring_buffer_interface.c: 146: break;
  6753  012710  D015               	goto	l846
  6754  012712                     l844:
  6755  012712  0101               	movlb	1	; () banked
  6756  012714  518E               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  6757                           
  6758                           ; Switch size 1, requested type "space"
  6759                           ; Number of cases is 6, Range of values is 0 to 5
  6760                           ; switch strategies available:
  6761                           ; Name         Instructions Cycles
  6762                           ; simple_byte           19    10 (average)
  6763                           ;	Chosen strategy is simple_byte
  6764  012716  0A00               	xorlw	0	; case 0
  6765  012718  B4D8               	btfsc	status,2,c
  6766  01271A  D7A7               	goto	l845
  6767  01271C  0A01               	xorlw	1	; case 1
  6768  01271E  B4D8               	btfsc	status,2,c
  6769  012720  D7B0               	goto	l847
  6770  012722  0A03               	xorlw	3	; case 2
  6771  012724  B4D8               	btfsc	status,2,c
  6772  012726  D7B9               	goto	l848
  6773  012728  0A01               	xorlw	1	; case 3
  6774  01272A  B4D8               	btfsc	status,2,c
  6775  01272C  D7C2               	goto	l849
  6776  01272E  0A07               	xorlw	7	; case 4
  6777  012730  B4D8               	btfsc	status,2,c
  6778  012732  D7CB               	goto	l850
  6779  012734  0A01               	xorlw	1	; case 5
  6780  012736  B4D8               	btfsc	status,2,c
  6781  012738  D7D4               	goto	l851
  6782  01273A  D7DF               	goto	l852
  6783  01273C                     l846:
  6784                           
  6785                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  6786                           
  6787                           ; BSR set to: 1
  6788  01273C  0E90               	movlw	low terminal_textAttributes@output_buff
  6789  01273E  0101               	movlb	1	; () banked
  6790  012740  6F17               	movwf	strcat@to& (0+255),b
  6791  012742  0E01               	movlw	high terminal_textAttributes@output_buff
  6792  012744  6F18               	movwf	(strcat@to+1)& (0+255),b
  6793  012746  0EFA               	movlw	low STR_19
  6794  012748  6F19               	movwf	strcat@from& (0+255),b
  6795  01274A  0EFF               	movlw	high STR_19
  6796  01274C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6797  01274E  EC87  F0AC         	call	_strcat	;wreg free
  6798                           
  6799                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  6800  012752  D06C               	goto	l853
  6801  012754                     
  6802                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  6803  012754  0E90               	movlw	low terminal_textAttributes@output_buff
  6804  012756  0101               	movlb	1	; () banked
  6805  012758  6F17               	movwf	strcat@to& (0+255),b
  6806  01275A  0E01               	movlw	high terminal_textAttributes@output_buff
  6807  01275C  6F18               	movwf	(strcat@to+1)& (0+255),b
  6808  01275E  0EC5               	movlw	low STR_20
  6809  012760  6F19               	movwf	strcat@from& (0+255),b
  6810  012762  0EFF               	movlw	high STR_20
  6811  012764  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6812  012766  EC87  F0AC         	call	_strcat	;wreg free
  6813                           
  6814                           ;ring_buffer_interface.c: 155: break;
  6815  01276A  D07B               	goto	l855
  6816  01276C                     
  6817                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  6818  01276C  0E90               	movlw	low terminal_textAttributes@output_buff
  6819  01276E  0101               	movlb	1	; () banked
  6820  012770  6F17               	movwf	strcat@to& (0+255),b
  6821  012772  0E01               	movlw	high terminal_textAttributes@output_buff
  6822  012774  6F18               	movwf	(strcat@to+1)& (0+255),b
  6823  012776  0ECB               	movlw	low STR_21
  6824  012778  6F19               	movwf	strcat@from& (0+255),b
  6825  01277A  0EFF               	movlw	high STR_21
  6826  01277C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6827  01277E  EC87  F0AC         	call	_strcat	;wreg free
  6828                           
  6829                           ;ring_buffer_interface.c: 158: break;
  6830  012782  D06F               	goto	l855
  6831  012784                     
  6832                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  6833  012784  0E90               	movlw	low terminal_textAttributes@output_buff
  6834  012786  0101               	movlb	1	; () banked
  6835  012788  6F17               	movwf	strcat@to& (0+255),b
  6836  01278A  0E01               	movlw	high terminal_textAttributes@output_buff
  6837  01278C  6F18               	movwf	(strcat@to+1)& (0+255),b
  6838  01278E  0ED1               	movlw	low STR_22
  6839  012790  6F19               	movwf	strcat@from& (0+255),b
  6840  012792  0EFF               	movlw	high STR_22
  6841  012794  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6842  012796  EC87  F0AC         	call	_strcat	;wreg free
  6843                           
  6844                           ;ring_buffer_interface.c: 161: break;
  6845  01279A  D063               	goto	l855
  6846  01279C                     
  6847                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  6848  01279C  0E90               	movlw	low terminal_textAttributes@output_buff
  6849  01279E  0101               	movlb	1	; () banked
  6850  0127A0  6F17               	movwf	strcat@to& (0+255),b
  6851  0127A2  0E01               	movlw	high terminal_textAttributes@output_buff
  6852  0127A4  6F18               	movwf	(strcat@to+1)& (0+255),b
  6853  0127A6  0ED7               	movlw	low STR_23
  6854  0127A8  6F19               	movwf	strcat@from& (0+255),b
  6855  0127AA  0EFF               	movlw	high STR_23
  6856  0127AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6857  0127AE  EC87  F0AC         	call	_strcat	;wreg free
  6858                           
  6859                           ;ring_buffer_interface.c: 164: break;
  6860  0127B2  D057               	goto	l855
  6861  0127B4                     
  6862                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  6863  0127B4  0E90               	movlw	low terminal_textAttributes@output_buff
  6864  0127B6  0101               	movlb	1	; () banked
  6865  0127B8  6F17               	movwf	strcat@to& (0+255),b
  6866  0127BA  0E01               	movlw	high terminal_textAttributes@output_buff
  6867  0127BC  6F18               	movwf	(strcat@to+1)& (0+255),b
  6868  0127BE  0EDD               	movlw	low STR_24
  6869  0127C0  6F19               	movwf	strcat@from& (0+255),b
  6870  0127C2  0EFF               	movlw	high STR_24
  6871  0127C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6872  0127C6  EC87  F0AC         	call	_strcat	;wreg free
  6873                           
  6874                           ;ring_buffer_interface.c: 167: break;
  6875  0127CA  D04B               	goto	l855
  6876  0127CC                     
  6877                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  6878  0127CC  0E90               	movlw	low terminal_textAttributes@output_buff
  6879  0127CE  0101               	movlb	1	; () banked
  6880  0127D0  6F17               	movwf	strcat@to& (0+255),b
  6881  0127D2  0E01               	movlw	high terminal_textAttributes@output_buff
  6882  0127D4  6F18               	movwf	(strcat@to+1)& (0+255),b
  6883  0127D6  0EE3               	movlw	low STR_25
  6884  0127D8  6F19               	movwf	strcat@from& (0+255),b
  6885  0127DA  0EFF               	movlw	high STR_25
  6886  0127DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6887  0127DE  EC87  F0AC         	call	_strcat	;wreg free
  6888                           
  6889                           ;ring_buffer_interface.c: 170: break;
  6890  0127E2  D03F               	goto	l855
  6891  0127E4                     
  6892                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  6893  0127E4  0E90               	movlw	low terminal_textAttributes@output_buff
  6894  0127E6  0101               	movlb	1	; () banked
  6895  0127E8  6F17               	movwf	strcat@to& (0+255),b
  6896  0127EA  0E01               	movlw	high terminal_textAttributes@output_buff
  6897  0127EC  6F18               	movwf	(strcat@to+1)& (0+255),b
  6898  0127EE  0EE9               	movlw	low STR_26
  6899  0127F0  6F19               	movwf	strcat@from& (0+255),b
  6900  0127F2  0EFF               	movlw	high STR_26
  6901  0127F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6902  0127F6  EC87  F0AC         	call	_strcat	;wreg free
  6903                           
  6904                           ;ring_buffer_interface.c: 173: break;
  6905  0127FA  D033               	goto	l855
  6906  0127FC                     
  6907                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  6908  0127FC  0E90               	movlw	low terminal_textAttributes@output_buff
  6909  0127FE  0101               	movlb	1	; () banked
  6910  012800  6F17               	movwf	strcat@to& (0+255),b
  6911  012802  0E01               	movlw	high terminal_textAttributes@output_buff
  6912  012804  6F18               	movwf	(strcat@to+1)& (0+255),b
  6913  012806  0EEF               	movlw	low STR_27
  6914  012808  6F19               	movwf	strcat@from& (0+255),b
  6915  01280A  0EFF               	movlw	high STR_27
  6916  01280C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6917  01280E  EC87  F0AC         	call	_strcat	;wreg free
  6918                           
  6919                           ;ring_buffer_interface.c: 176: break;
  6920  012812  D027               	goto	l855
  6921  012814                     
  6922                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  6923  012814  0E90               	movlw	low terminal_textAttributes@output_buff
  6924  012816  0101               	movlb	1	; () banked
  6925  012818  6F17               	movwf	strcat@to& (0+255),b
  6926  01281A  0E01               	movlw	high terminal_textAttributes@output_buff
  6927  01281C  6F18               	movwf	(strcat@to+1)& (0+255),b
  6928  01281E  0EEF               	movlw	low STR_27
  6929  012820  6F19               	movwf	strcat@from& (0+255),b
  6930  012822  0EFF               	movlw	high STR_27
  6931  012824  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6932  012826  EC87  F0AC         	call	_strcat	;wreg free
  6933                           
  6934                           ;ring_buffer_interface.c: 181: }
  6935                           
  6936                           ;ring_buffer_interface.c: 180: break;
  6937  01282A  D01B               	goto	l855
  6938  01282C                     l853:
  6939  01282C  0101               	movlb	1	; () banked
  6940  01282E  518F               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  6941                           
  6942                           ; Switch size 1, requested type "space"
  6943                           ; Number of cases is 8, Range of values is 0 to 7
  6944                           ; switch strategies available:
  6945                           ; Name         Instructions Cycles
  6946                           ; simple_byte           25    13 (average)
  6947                           ;	Chosen strategy is simple_byte
  6948  012830  0A00               	xorlw	0	; case 0
  6949  012832  B4D8               	btfsc	status,2,c
  6950  012834  D78F               	goto	l854
  6951  012836  0A01               	xorlw	1	; case 1
  6952  012838  B4D8               	btfsc	status,2,c
  6953  01283A  D798               	goto	l856
  6954  01283C  0A03               	xorlw	3	; case 2
  6955  01283E  B4D8               	btfsc	status,2,c
  6956  012840  D7A1               	goto	l857
  6957  012842  0A01               	xorlw	1	; case 3
  6958  012844  B4D8               	btfsc	status,2,c
  6959  012846  D7AA               	goto	l858
  6960  012848  0A07               	xorlw	7	; case 4
  6961  01284A  B4D8               	btfsc	status,2,c
  6962  01284C  D7B3               	goto	l859
  6963  01284E  0A01               	xorlw	1	; case 5
  6964  012850  B4D8               	btfsc	status,2,c
  6965  012852  D7BC               	goto	l860
  6966  012854  0A03               	xorlw	3	; case 6
  6967  012856  B4D8               	btfsc	status,2,c
  6968  012858  D7C5               	goto	l861
  6969  01285A  0A01               	xorlw	1	; case 7
  6970  01285C  B4D8               	btfsc	status,2,c
  6971  01285E  D7CE               	goto	l862
  6972  012860  D7D9               	goto	l863
  6973  012862                     l855:
  6974                           
  6975                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  6976                           
  6977                           ; BSR set to: 1
  6978  012862  0E90               	movlw	low terminal_textAttributes@output_buff
  6979  012864  0101               	movlb	1	; () banked
  6980  012866  6F17               	movwf	strcat@to& (0+255),b
  6981  012868  0E01               	movlw	high terminal_textAttributes@output_buff
  6982  01286A  6F18               	movwf	(strcat@to+1)& (0+255),b
  6983  01286C  0EFA               	movlw	low STR_19
  6984  01286E  6F19               	movwf	strcat@from& (0+255),b
  6985  012870  0EFF               	movlw	high STR_19
  6986  012872  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6987  012874  EC87  F0AC         	call	_strcat	;wreg free
  6988                           
  6989                           ;ring_buffer_interface.c: 185: switch (background_color) {
  6990  012878  D06C               	goto	l864
  6991  01287A                     
  6992                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  6993  01287A  0E90               	movlw	low terminal_textAttributes@output_buff
  6994  01287C  0101               	movlb	1	; () banked
  6995  01287E  6F17               	movwf	strcat@to& (0+255),b
  6996  012880  0E01               	movlw	high terminal_textAttributes@output_buff
  6997  012882  6F18               	movwf	(strcat@to+1)& (0+255),b
  6998  012884  0EC8               	movlw	low STR_30
  6999  012886  6F19               	movwf	strcat@from& (0+255),b
  7000  012888  0EFF               	movlw	high STR_30
  7001  01288A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7002  01288C  EC87  F0AC         	call	_strcat	;wreg free
  7003                           
  7004                           ;ring_buffer_interface.c: 189: break;
  7005  012890  D07B               	goto	l866
  7006  012892                     
  7007                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  7008  012892  0E90               	movlw	low terminal_textAttributes@output_buff
  7009  012894  0101               	movlb	1	; () banked
  7010  012896  6F17               	movwf	strcat@to& (0+255),b
  7011  012898  0E01               	movlw	high terminal_textAttributes@output_buff
  7012  01289A  6F18               	movwf	(strcat@to+1)& (0+255),b
  7013  01289C  0ECE               	movlw	low STR_31
  7014  01289E  6F19               	movwf	strcat@from& (0+255),b
  7015  0128A0  0EFF               	movlw	high STR_31
  7016  0128A2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7017  0128A4  EC87  F0AC         	call	_strcat	;wreg free
  7018                           
  7019                           ;ring_buffer_interface.c: 192: break;
  7020  0128A8  D06F               	goto	l866
  7021  0128AA                     
  7022                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  7023  0128AA  0E90               	movlw	low terminal_textAttributes@output_buff
  7024  0128AC  0101               	movlb	1	; () banked
  7025  0128AE  6F17               	movwf	strcat@to& (0+255),b
  7026  0128B0  0E01               	movlw	high terminal_textAttributes@output_buff
  7027  0128B2  6F18               	movwf	(strcat@to+1)& (0+255),b
  7028  0128B4  0ED4               	movlw	low STR_32
  7029  0128B6  6F19               	movwf	strcat@from& (0+255),b
  7030  0128B8  0EFF               	movlw	high STR_32
  7031  0128BA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7032  0128BC  EC87  F0AC         	call	_strcat	;wreg free
  7033                           
  7034                           ;ring_buffer_interface.c: 195: break;
  7035  0128C0  D063               	goto	l866
  7036  0128C2                     
  7037                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  7038  0128C2  0E90               	movlw	low terminal_textAttributes@output_buff
  7039  0128C4  0101               	movlb	1	; () banked
  7040  0128C6  6F17               	movwf	strcat@to& (0+255),b
  7041  0128C8  0E01               	movlw	high terminal_textAttributes@output_buff
  7042  0128CA  6F18               	movwf	(strcat@to+1)& (0+255),b
  7043  0128CC  0EDA               	movlw	low STR_33
  7044  0128CE  6F19               	movwf	strcat@from& (0+255),b
  7045  0128D0  0EFF               	movlw	high STR_33
  7046  0128D2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7047  0128D4  EC87  F0AC         	call	_strcat	;wreg free
  7048                           
  7049                           ;ring_buffer_interface.c: 198: break;
  7050  0128D8  D057               	goto	l866
  7051  0128DA                     
  7052                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  7053  0128DA  0E90               	movlw	low terminal_textAttributes@output_buff
  7054  0128DC  0101               	movlb	1	; () banked
  7055  0128DE  6F17               	movwf	strcat@to& (0+255),b
  7056  0128E0  0E01               	movlw	high terminal_textAttributes@output_buff
  7057  0128E2  6F18               	movwf	(strcat@to+1)& (0+255),b
  7058  0128E4  0EE0               	movlw	low STR_34
  7059  0128E6  6F19               	movwf	strcat@from& (0+255),b
  7060  0128E8  0EFF               	movlw	high STR_34
  7061  0128EA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7062  0128EC  EC87  F0AC         	call	_strcat	;wreg free
  7063                           
  7064                           ;ring_buffer_interface.c: 201: break;
  7065  0128F0  D04B               	goto	l866
  7066  0128F2                     
  7067                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  7068  0128F2  0E90               	movlw	low terminal_textAttributes@output_buff
  7069  0128F4  0101               	movlb	1	; () banked
  7070  0128F6  6F17               	movwf	strcat@to& (0+255),b
  7071  0128F8  0E01               	movlw	high terminal_textAttributes@output_buff
  7072  0128FA  6F18               	movwf	(strcat@to+1)& (0+255),b
  7073  0128FC  0EE6               	movlw	low STR_35
  7074  0128FE  6F19               	movwf	strcat@from& (0+255),b
  7075  012900  0EFF               	movlw	high STR_35
  7076  012902  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7077  012904  EC87  F0AC         	call	_strcat	;wreg free
  7078                           
  7079                           ;ring_buffer_interface.c: 204: break;
  7080  012908  D03F               	goto	l866
  7081  01290A                     
  7082                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  7083  01290A  0E90               	movlw	low terminal_textAttributes@output_buff
  7084  01290C  0101               	movlb	1	; () banked
  7085  01290E  6F17               	movwf	strcat@to& (0+255),b
  7086  012910  0E01               	movlw	high terminal_textAttributes@output_buff
  7087  012912  6F18               	movwf	(strcat@to+1)& (0+255),b
  7088  012914  0EEC               	movlw	low STR_36
  7089  012916  6F19               	movwf	strcat@from& (0+255),b
  7090  012918  0EFF               	movlw	high STR_36
  7091  01291A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7092  01291C  EC87  F0AC         	call	_strcat	;wreg free
  7093                           
  7094                           ;ring_buffer_interface.c: 207: break;
  7095  012920  D033               	goto	l866
  7096  012922                     
  7097                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  7098  012922  0E90               	movlw	low terminal_textAttributes@output_buff
  7099  012924  0101               	movlb	1	; () banked
  7100  012926  6F17               	movwf	strcat@to& (0+255),b
  7101  012928  0E01               	movlw	high terminal_textAttributes@output_buff
  7102  01292A  6F18               	movwf	(strcat@to+1)& (0+255),b
  7103  01292C  0EF2               	movlw	low STR_37
  7104  01292E  6F19               	movwf	strcat@from& (0+255),b
  7105  012930  0EFF               	movlw	high STR_37
  7106  012932  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7107  012934  EC87  F0AC         	call	_strcat	;wreg free
  7108                           
  7109                           ;ring_buffer_interface.c: 210: break;
  7110  012938  D027               	goto	l866
  7111  01293A                     
  7112                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  7113  01293A  0E90               	movlw	low terminal_textAttributes@output_buff
  7114  01293C  0101               	movlb	1	; () banked
  7115  01293E  6F17               	movwf	strcat@to& (0+255),b
  7116  012940  0E01               	movlw	high terminal_textAttributes@output_buff
  7117  012942  6F18               	movwf	(strcat@to+1)& (0+255),b
  7118  012944  0EF2               	movlw	low STR_37
  7119  012946  6F19               	movwf	strcat@from& (0+255),b
  7120  012948  0EFF               	movlw	high STR_37
  7121  01294A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7122  01294C  EC87  F0AC         	call	_strcat	;wreg free
  7123                           
  7124                           ;ring_buffer_interface.c: 215: }
  7125                           
  7126                           ;ring_buffer_interface.c: 214: break;
  7127  012950  D01B               	goto	l866
  7128  012952                     l864:
  7129  012952  0101               	movlb	1	; () banked
  7130  012954  518D               	movf	terminal_textAttributes@background_color& (0+255),w,b
  7131                           
  7132                           ; Switch size 1, requested type "space"
  7133                           ; Number of cases is 8, Range of values is 0 to 7
  7134                           ; switch strategies available:
  7135                           ; Name         Instructions Cycles
  7136                           ; simple_byte           25    13 (average)
  7137                           ;	Chosen strategy is simple_byte
  7138  012956  0A00               	xorlw	0	; case 0
  7139  012958  B4D8               	btfsc	status,2,c
  7140  01295A  D78F               	goto	l865
  7141  01295C  0A01               	xorlw	1	; case 1
  7142  01295E  B4D8               	btfsc	status,2,c
  7143  012960  D798               	goto	l867
  7144  012962  0A03               	xorlw	3	; case 2
  7145  012964  B4D8               	btfsc	status,2,c
  7146  012966  D7A1               	goto	l868
  7147  012968  0A01               	xorlw	1	; case 3
  7148  01296A  B4D8               	btfsc	status,2,c
  7149  01296C  D7AA               	goto	l869
  7150  01296E  0A07               	xorlw	7	; case 4
  7151  012970  B4D8               	btfsc	status,2,c
  7152  012972  D7B3               	goto	l870
  7153  012974  0A01               	xorlw	1	; case 5
  7154  012976  B4D8               	btfsc	status,2,c
  7155  012978  D7BC               	goto	l871
  7156  01297A  0A03               	xorlw	3	; case 6
  7157  01297C  B4D8               	btfsc	status,2,c
  7158  01297E  D7C5               	goto	l872
  7159  012980  0A01               	xorlw	1	; case 7
  7160  012982  B4D8               	btfsc	status,2,c
  7161  012984  D7CE               	goto	l873
  7162  012986  D7D9               	goto	l874
  7163  012988                     l866:
  7164                           
  7165                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  7166                           
  7167                           ; BSR set to: 1
  7168  012988  0E90               	movlw	low terminal_textAttributes@output_buff
  7169  01298A  0101               	movlb	1	; () banked
  7170  01298C  6F17               	movwf	strcat@to& (0+255),b
  7171  01298E  0E01               	movlw	high terminal_textAttributes@output_buff
  7172  012990  6F18               	movwf	(strcat@to+1)& (0+255),b
  7173  012992  0EFC               	movlw	low STR_39
  7174  012994  6F19               	movwf	strcat@from& (0+255),b
  7175  012996  0EFF               	movlw	high STR_39
  7176  012998  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7177  01299A  EC87  F0AC         	call	_strcat	;wreg free
  7178                           
  7179                           ;ring_buffer_interface.c: 219: printf(output_buff);
  7180  01299E  0E90               	movlw	low terminal_textAttributes@output_buff
  7181  0129A0  0101               	movlb	1	; () banked
  7182  0129A2  6F64               	movwf	printf@f& (0+255),b
  7183  0129A4  0E01               	movlw	high terminal_textAttributes@output_buff
  7184  0129A6  6F65               	movwf	(printf@f+1)& (0+255),b
  7185  0129A8  EC00  F080         	call	_printf	;wreg free
  7186  0129AC  0012               	return		;funcret
  7187  0129AE                     __end_of_terminal_textAttributes:
  7188                           	opt stack 0
  7189                           tblptru	equ	0xFF8
  7190                           tblptrh	equ	0xFF7
  7191                           tblptrl	equ	0xFF6
  7192                           tablat	equ	0xFF5
  7193                           intcon	equ	0xFF2
  7194                           postinc0	equ	0xFEE
  7195                           wreg	equ	0xFE8
  7196                           indf1	equ	0xFE7
  7197                           postdec1	equ	0xFE5
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           fsr2h	equ	0xFDA
  7203                           fsr2l	equ	0xFD9
  7204                           status	equ	0xFD8
  7205                           
  7206 ;; *************** function _strncpy *****************
  7207 ;; Defined at:
  7208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7211 ;;		 -> terminal_textAttributes@output_buff(15), 
  7212 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7213 ;;		 -> STR_11(3), 
  7214 ;;  size            2   27[BANK1 ] unsigned int 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  7217 ;;		 -> terminal_textAttributes@output_buff(15), 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  2   23[BANK1 ] PTR unsigned char 
  7220 ;; Registers used:
  7221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7227 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7228 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;Total ram usage:        8 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:   14
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_terminal_textAttributes
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text6
  7242  015404                     __ptext6:
  7243                           	opt stack 0
  7244  015404                     _strncpy:
  7245                           	opt stack 14
  7246                           
  7247                           ;incstack = 0
  7248  015404  C117  F11D         	movff	strncpy@to,strncpy@cp
  7249  015408  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  7250  01540C  D018               	goto	l1842
  7251  01540E  0101               	movlb	1	; () banked
  7252  015410  071B               	decf	strncpy@size& (0+255),f,b
  7253  015412  A0D8               	btfss	status,0,c
  7254  015414  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7255                           
  7256                           ; BSR set to: 1
  7257  015416  C119  FFF6         	movff	strncpy@from,tblptrl
  7258  01541A  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  7259  01541E  4B19               	infsnz	strncpy@from& (0+255),f,b
  7260  015420  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  7261  015422                     	if	0	;tblptru may be non-zero
  7262  015422                     	endif
  7263  015422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7264  015422  0E00               	movlw	low (__mediumconst shr (0+16))
  7265  015424  6EF8               	movwf	tblptru,c
  7266  015426                     	endif
  7267  015426  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7268  01542A  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7269  01542E  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7270  015430  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7271  015432  0008               	tblrd		*
  7272  015434  CFF5 FFDF          	movff	tablat,indf2
  7273  015438  50DF               	movf	indf2,w,c
  7274  01543A  B4D8               	btfsc	status,2,c
  7275  01543C  D00E               	goto	l1844
  7276  01543E                     l1842:
  7277                           
  7278                           ; BSR set to: 1
  7279                           
  7280                           ; BSR set to: 1
  7281  01543E  0101               	movlb	1	; () banked
  7282  015440  511B               	movf	strncpy@size& (0+255),w,b
  7283  015442  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  7284  015444  B4D8               	btfsc	status,2,c
  7285  015446  D009               	goto	l1844
  7286  015448  D7E2               	goto	l1841
  7287  01544A                     l8769:
  7288                           
  7289                           ; BSR set to: 1
  7290  01544A  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7291  01544E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7292  015452  0E00               	movlw	0
  7293  015454  6EDF               	movwf	indf2,c
  7294                           
  7295                           ; BSR set to: 1
  7296  015456  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7297  015458  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7298  01545A                     l1844:
  7299                           
  7300                           ; BSR set to: 1
  7301                           
  7302                           ; BSR set to: 1
  7303  01545A  071B               	decf	strncpy@size& (0+255),f,b
  7304  01545C  A0D8               	btfss	status,0,c
  7305  01545E  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7306  015460  291B               	incf	strncpy@size& (0+255),w,b
  7307  015462  E1F3               	bnz	l8769
  7308  015464  291C               	incf	(strncpy@size+1)& (0+255),w,b
  7309  015466  B4D8               	btfsc	status,2,c
  7310  015468  0012               	return	
  7311  01546A  D7EF               	goto	l1845
  7312  01546C                     __end_of_strncpy:
  7313                           	opt stack 0
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           intcon	equ	0xFF2
  7319                           postinc0	equ	0xFEE
  7320                           wreg	equ	0xFE8
  7321                           indf1	equ	0xFE7
  7322                           postdec1	equ	0xFE5
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           indf2	equ	0xFDF
  7326                           postinc2	equ	0xFDE
  7327                           fsr2h	equ	0xFDA
  7328                           fsr2l	equ	0xFD9
  7329                           status	equ	0xFD8
  7330                           
  7331 ;; *************** function _strcat *****************
  7332 ;; Defined at:
  7333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7336 ;;		 -> terminal_textAttributes@output_buff(15), 
  7337 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7338 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  7339 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  7340 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  7341 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7342 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  7343 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  7344 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  7347 ;;		 -> terminal_textAttributes@output_buff(15), 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  2   23[BANK1 ] PTR unsigned char 
  7350 ;; Registers used:
  7351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7357 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;Total ram usage:        6 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:   14
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_terminal_textAttributes
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text7
  7372  01590E                     __ptext7:
  7373                           	opt stack 0
  7374  01590E                     _strcat:
  7375                           	opt stack 14
  7376                           
  7377                           ; BSR set to: 1
  7378                           ;incstack = 0
  7379  01590E  C117  F11B         	movff	strcat@to,strcat@cp
  7380  015912  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  7381  015916  D003               	goto	l1817
  7382  015918  0101               	movlb	1	; () banked
  7383  01591A  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7384  01591C  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7385  01591E                     l1817:
  7386                           
  7387                           ; BSR set to: 1
  7388  01591E  C11B  FFD9         	movff	strcat@cp,fsr2l
  7389  015922  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7390  015926  50DF               	movf	indf2,w,c
  7391  015928  B4D8               	btfsc	status,2,c
  7392  01592A  D006               	goto	l1820
  7393  01592C  D7F5               	goto	l1818
  7394  01592E  0101               	movlb	1	; () banked
  7395  015930  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7396  015932  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7397  015934  4B19               	infsnz	strcat@from& (0+255),f,b
  7398  015936  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  7399  015938                     l1820:
  7400                           
  7401                           ; BSR set to: 1
  7402  015938  C119  FFF6         	movff	strcat@from,tblptrl
  7403  01593C  C11A  FFF7         	movff	strcat@from+1,tblptrh
  7404  015940                     	if	0	;tblptru may be non-zero
  7405  015940                     	endif
  7406  015940                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7407  015940  0E00               	movlw	low (__mediumconst shr (0+16))
  7408  015942  6EF8               	movwf	tblptru,c
  7409  015944                     	endif
  7410  015944  C11B  FFD9         	movff	strcat@cp,fsr2l
  7411  015948  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7412  01594C  0008               	tblrd		*
  7413  01594E  CFF5 FFDF          	movff	tablat,indf2
  7414  015952  50DF               	movf	indf2,w,c
  7415  015954  B4D8               	btfsc	status,2,c
  7416  015956  0012               	return	
  7417  015958  D7EA               	goto	l1821
  7418  01595A                     __end_of_strcat:
  7419                           	opt stack 0
  7420                           tblptru	equ	0xFF8
  7421                           tblptrh	equ	0xFF7
  7422                           tblptrl	equ	0xFF6
  7423                           tablat	equ	0xFF5
  7424                           intcon	equ	0xFF2
  7425                           postinc0	equ	0xFEE
  7426                           wreg	equ	0xFE8
  7427                           indf1	equ	0xFE7
  7428                           postdec1	equ	0xFE5
  7429                           fsr1h	equ	0xFE2
  7430                           fsr1l	equ	0xFE1
  7431                           indf2	equ	0xFDF
  7432                           postinc2	equ	0xFDE
  7433                           fsr2h	equ	0xFDA
  7434                           fsr2l	equ	0xFD9
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function _terminal_printNewline *****************
  7438 ;; Defined at:
  7439 ;;		line 230 in file "ring_buffer_interface.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;Total ram usage:        0 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:   18
  7460 ;; This function calls:
  7461 ;;		_printf
  7462 ;; This function is called by:
  7463 ;;		_ringBufferLUT
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text8
  7468  015ED2                     __ptext8:
  7469                           	opt stack 0
  7470  015ED2                     _terminal_printNewline:
  7471                           	opt stack 10
  7472                           
  7473                           ;ring_buffer_interface.c: 232: printf("\n\r");
  7474                           
  7475                           ;incstack = 0
  7476  015ED2  0EF7               	movlw	low (STR_77+60)
  7477  015ED4  0101               	movlb	1	; () banked
  7478  015ED6  6F64               	movwf	printf@f& (0+255),b
  7479  015ED8  0EFB               	movlw	high (STR_77+60)
  7480  015EDA  6F65               	movwf	(printf@f+1)& (0+255),b
  7481  015EDC  EC00  F080         	call	_printf	;wreg free
  7482  015EE0  0012               	return		;funcret
  7483  015EE2                     __end_of_terminal_printNewline:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           intcon	equ	0xFF2
  7490                           postinc0	equ	0xFEE
  7491                           wreg	equ	0xFE8
  7492                           indf1	equ	0xFE7
  7493                           postdec1	equ	0xFE5
  7494                           fsr1h	equ	0xFE2
  7495                           fsr1l	equ	0xFE1
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           fsr2h	equ	0xFDA
  7499                           fsr2l	equ	0xFD9
  7500                           status	equ	0xFD8
  7501                           
  7502 ;; *************** function _strstr *****************
  7503 ;; Defined at:
  7504 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  7507 ;;		 -> NULL(0), line(64), 
  7508 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  7509 ;;		 -> STR_73(24), 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  2   38[BANK1 ] PTR unsigned char 
  7514 ;; Registers used:
  7515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7521 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;Total ram usage:        4 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:   15
  7528 ;; This function calls:
  7529 ;;		_strchr
  7530 ;;		_strlen
  7531 ;;		_strncmp
  7532 ;; This function is called by:
  7533 ;;		_ringBufferLUT
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text9
  7538  014F24                     __ptext9:
  7539                           	opt stack 0
  7540  014F24                     _strstr:
  7541                           	opt stack 13
  7542                           
  7543                           ;incstack = 0
  7544  014F24  D034               	goto	l1856
  7545  014F26  C126  F11D         	movff	strstr@s1,strncmp@s1
  7546  014F2A  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  7547  014F2E  C128  F11F         	movff	strstr@s2,strncmp@s2
  7548  014F32  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  7549  014F36  C128  F117         	movff	strstr@s2,strlen@s
  7550  014F3A  C129  F118         	movff	strstr@s2+1,strlen@s+1
  7551  014F3E  EC8F  F0AB         	call	_strlen	;wreg free
  7552  014F42  C117  F121         	movff	?_strlen,strncmp@len
  7553  014F46  C118  F122         	movff	?_strlen+1,strncmp@len+1
  7554  014F4A  EC02  F0A7         	call	_strncmp	;wreg free
  7555  014F4E  0101               	movlb	1	; () banked
  7556  014F50  511D               	movf	?_strncmp& (0+255),w,b
  7557  014F52  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  7558  014F54  A4D8               	btfss	status,2,c
  7559  014F56  D005               	goto	l1858
  7560                           
  7561                           ; BSR set to: 1
  7562  014F58  C126  F126         	movff	strstr@s1,?_strstr
  7563  014F5C  C127  F127         	movff	strstr@s1+1,?_strstr+1
  7564                           
  7565                           ; BSR set to: 1
  7566  014F60  0012               	return	
  7567  014F62                     l1858:
  7568                           
  7569                           ; BSR set to: 1
  7570                           
  7571                           ; BSR set to: 1
  7572  014F62  0E01               	movlw	1
  7573  014F64  2526               	addwf	strstr@s1& (0+255),w,b
  7574  014F66  6F17               	movwf	strchr@ptr& (0+255),b
  7575  014F68  0E00               	movlw	0
  7576  014F6A  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  7577  014F6C  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  7578  014F6E  C128  FFF6         	movff	strstr@s2,tblptrl
  7579  014F72  C129  FFF7         	movff	strstr@s2+1,tblptrh
  7580  014F76                     	if	0	;tblptru may be non-zero
  7581  014F76                     	endif
  7582  014F76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7583  014F76  0E00               	movlw	low (__mediumconst shr (0+16))
  7584  014F78  6EF8               	movwf	tblptru,c
  7585  014F7A                     	endif
  7586  014F7A  0008               	tblrd		*
  7587  014F7C  50F5               	movf	tablat,w,c
  7588  014F7E  6F19               	movwf	strchr@chr& (0+255),b
  7589  014F80  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  7590  014F82  EC9A  F0AD         	call	_strchr	;wreg free
  7591  014F86  C117  F126         	movff	?_strchr,strstr@s1
  7592  014F8A  C118  F127         	movff	?_strchr+1,strstr@s1+1
  7593  014F8E                     l1856:
  7594  014F8E  0101               	movlb	1	; () banked
  7595  014F90  5126               	movf	strstr@s1& (0+255),w,b
  7596  014F92  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  7597  014F94  B4D8               	btfsc	status,2,c
  7598  014F96  D007               	goto	u10840
  7599                           
  7600                           ; BSR set to: 1
  7601  014F98  C126  FFD9         	movff	strstr@s1,fsr2l
  7602  014F9C  C127  FFDA         	movff	strstr@s1+1,fsr2h
  7603  014FA0  50DF               	movf	indf2,w,c
  7604  014FA2  A4D8               	btfss	status,2,c
  7605  014FA4  D7C0               	goto	l1857
  7606  014FA6                     u10840:
  7607                           
  7608                           ; BSR set to: 1
  7609                           
  7610                           ; BSR set to: 1
  7611                           
  7612                           ; BSR set to: 1
  7613  014FA6  0E00               	movlw	0
  7614  014FA8  6F26               	movwf	?_strstr& (0+255),b
  7615  014FAA  0E00               	movlw	0
  7616  014FAC  6F27               	movwf	(?_strstr+1)& (0+255),b
  7617  014FAE  0012               	return	
  7618  014FB0                     __end_of_strstr:
  7619                           	opt stack 0
  7620                           tblptru	equ	0xFF8
  7621                           tblptrh	equ	0xFF7
  7622                           tblptrl	equ	0xFF6
  7623                           tablat	equ	0xFF5
  7624                           intcon	equ	0xFF2
  7625                           postinc0	equ	0xFEE
  7626                           wreg	equ	0xFE8
  7627                           indf1	equ	0xFE7
  7628                           postdec1	equ	0xFE5
  7629                           fsr1h	equ	0xFE2
  7630                           fsr1l	equ	0xFE1
  7631                           indf2	equ	0xFDF
  7632                           postinc2	equ	0xFDE
  7633                           fsr2h	equ	0xFDA
  7634                           fsr2l	equ	0xFD9
  7635                           status	equ	0xFD8
  7636                           
  7637 ;; *************** function _strncmp *****************
  7638 ;; Defined at:
  7639 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  7642 ;;		 -> NULL(0), line(64), 
  7643 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  7644 ;;		 -> STR_73(24), 
  7645 ;;  len             2   33[BANK1 ] unsigned int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2   29[BANK1 ] int 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7657 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7659 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7660 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7661 ;;Total ram usage:        9 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:   14
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_strstr
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text10
  7672  014E04                     __ptext10:
  7673                           	opt stack 0
  7674  014E04                     _strncmp:
  7675                           	opt stack 13
  7676                           
  7677                           ; BSR set to: 1
  7678                           ;incstack = 0
  7679  014E04  D039               	goto	l1915
  7680  014E06                     l8973:
  7681  014E06  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7682  014E0A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7683  014E0E  50DF               	movf	indf2,w,c
  7684  014E10  B4D8               	btfsc	status,2,c
  7685  014E12  D012               	goto	u10610
  7686  014E14  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7687  014E18  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7688  014E1C  50DF               	movf	indf2,w,c
  7689  014E1E  0101               	movlb	1	; () banked
  7690  014E20  6F23               	movwf	??_strncmp& (0+255),b
  7691  014E22  C11F  FFF6         	movff	strncmp@s2,tblptrl
  7692  014E26  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  7693  014E2A                     	if	0	;tblptru may be non-zero
  7694  014E2A                     	endif
  7695  014E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7696  014E2A  0E00               	movlw	low (__mediumconst shr (0+16))
  7697  014E2C  6EF8               	movwf	tblptru,c
  7698  014E2E                     	endif
  7699  014E2E  0008               	tblrd		*
  7700  014E30  50F5               	movf	tablat,w,c
  7701  014E32  1923               	xorwf	??_strncmp& (0+255),w,b
  7702  014E34  B4D8               	btfsc	status,2,c
  7703  014E36  D01C               	goto	l1917
  7704  014E38                     u10610:
  7705                           
  7706                           ; BSR set to: 1
  7707  014E38  C11F  FFF6         	movff	strncmp@s2,tblptrl
  7708  014E3C  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  7709  014E40                     	if	0	;tblptru may be non-zero
  7710  014E40                     	endif
  7711  014E40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7712  014E40  0E00               	movlw	low (__mediumconst shr (0+16))
  7713  014E42  6EF8               	movwf	tblptru,c
  7714  014E44                     	endif
  7715  014E44  0008               	tblrd		*
  7716  014E46  50F5               	movf	tablat,w,c
  7717  014E48  0101               	movlb	1	; () banked
  7718  014E4A  6F23               	movwf	??_strncmp& (0+255),b
  7719  014E4C  6B24               	clrf	(??_strncmp+1)& (0+255),b
  7720  014E4E  1F23               	comf	??_strncmp& (0+255),f,b
  7721  014E50  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  7722  014E52  4B23               	infsnz	??_strncmp& (0+255),f,b
  7723  014E54  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  7724  014E56  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7725  014E5A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7726  014E5E  50DF               	movf	indf2,w,c
  7727  014E60  6F25               	movwf	(??_strncmp+2)& (0+255),b
  7728  014E62  5125               	movf	(??_strncmp+2)& (0+255),w,b
  7729  014E64  2523               	addwf	??_strncmp& (0+255),w,b
  7730  014E66  6F1D               	movwf	?_strncmp& (0+255),b
  7731  014E68  0E00               	movlw	0
  7732  014E6A  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  7733  014E6C  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  7734                           
  7735                           ; BSR set to: 1
  7736  014E6E  0012               	return	
  7737  014E70                     l1917:
  7738                           
  7739                           ; BSR set to: 1
  7740                           
  7741                           ; BSR set to: 1
  7742  014E70  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  7743  014E72  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  7744  014E74  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  7745  014E76  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  7746  014E78                     l1915:
  7747                           
  7748                           ; BSR set to: 1
  7749  014E78  0101               	movlb	1	; () banked
  7750  014E7A  0721               	decf	strncmp@len& (0+255),f,b
  7751  014E7C  A0D8               	btfss	status,0,c
  7752  014E7E  0722               	decf	(strncmp@len+1)& (0+255),f,b
  7753  014E80  2921               	incf	strncmp@len& (0+255),w,b
  7754  014E82  E1C1               	bnz	l8973
  7755  014E84  2922               	incf	(strncmp@len+1)& (0+255),w,b
  7756  014E86  A4D8               	btfss	status,2,c
  7757  014E88  D7BE               	goto	l1916
  7758                           
  7759                           ; BSR set to: 1
  7760                           
  7761                           ; BSR set to: 1
  7762  014E8A  0E00               	movlw	0
  7763  014E8C  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  7764  014E8E  0E00               	movlw	0
  7765  014E90  6F1D               	movwf	?_strncmp& (0+255),b
  7766  014E92  0012               	return	
  7767  014E94                     __end_of_strncmp:
  7768                           	opt stack 0
  7769                           tblptru	equ	0xFF8
  7770                           tblptrh	equ	0xFF7
  7771                           tblptrl	equ	0xFF6
  7772                           tablat	equ	0xFF5
  7773                           intcon	equ	0xFF2
  7774                           postinc0	equ	0xFEE
  7775                           wreg	equ	0xFE8
  7776                           indf1	equ	0xFE7
  7777                           postdec1	equ	0xFE5
  7778                           fsr1h	equ	0xFE2
  7779                           fsr1l	equ	0xFE1
  7780                           indf2	equ	0xFDF
  7781                           postinc2	equ	0xFDE
  7782                           fsr2h	equ	0xFDA
  7783                           fsr2l	equ	0xFD9
  7784                           status	equ	0xFD8
  7785                           
  7786 ;; *************** function _strlen *****************
  7787 ;; Defined at:
  7788 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  7791 ;;		 -> STR_73(24), line(64), 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  7794 ;;		 -> STR_73(24), line(64), 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  2   23[BANK1 ] unsigned int 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7804 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7806 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7807 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;Total ram usage:        6 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:   14
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_terminal_ringBufferPull
  7815 ;;		_strstr
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text11
  7820  01571E                     __ptext11:
  7821                           	opt stack 0
  7822  01571E                     _strlen:
  7823                           	opt stack 15
  7824                           
  7825                           ; BSR set to: 1
  7826                           ;incstack = 0
  7827  01571E  C117  F11B         	movff	strlen@s,strlen@cp
  7828  015722  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  7829  015726  D003               	goto	l1834
  7830  015728  0101               	movlb	1	; () banked
  7831  01572A  4B1B               	infsnz	strlen@cp& (0+255),f,b
  7832  01572C  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  7833  01572E                     l1834:
  7834                           
  7835                           ; BSR set to: 1
  7836  01572E  C11B  FFF6         	movff	strlen@cp,tblptrl
  7837  015732  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  7838  015736  0E00               	movlw	low (__mediumconst shr (0+16))
  7839  015738  6EF8               	movwf	tblptru,c
  7840  01573A  0E0D               	movlw	(high __ramtop+-1)
  7841  01573C  64F7               	cpfsgt	tblptrh,c
  7842  01573E  D003               	bra	u10587
  7843  015740  0008               	tblrd		*
  7844  015742  50F5               	movf	tablat,w,c
  7845  015744  D005               	bra	u10580
  7846  015746                     u10587:
  7847  015746  CFF6 FFE1          	movff	tblptrl,fsr1l
  7848  01574A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7849  01574E  50E7               	movf	indf1,w,c
  7850  015750                     u10580:
  7851  015750  0900               	iorlw	0
  7852  015752  A4D8               	btfss	status,2,c
  7853  015754  D7E9               	goto	l1835
  7854  015756  C117  F119         	movff	strlen@s,??_strlen
  7855  01575A  C118  F11A         	movff	strlen@s+1,??_strlen+1
  7856  01575E  0101               	movlb	1	; () banked
  7857  015760  1F19               	comf	??_strlen& (0+255),f,b
  7858  015762  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  7859  015764  4B19               	infsnz	??_strlen& (0+255),f,b
  7860  015766  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  7861  015768  511B               	movf	strlen@cp& (0+255),w,b
  7862  01576A  2519               	addwf	??_strlen& (0+255),w,b
  7863  01576C  6F17               	movwf	?_strlen& (0+255),b
  7864  01576E  511C               	movf	(strlen@cp+1)& (0+255),w,b
  7865  015770  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  7866  015772  6F18               	movwf	(?_strlen+1)& (0+255),b
  7867  015774  0012               	return	
  7868  015776                     __end_of_strlen:
  7869                           	opt stack 0
  7870                           tblptru	equ	0xFF8
  7871                           tblptrh	equ	0xFF7
  7872                           tblptrl	equ	0xFF6
  7873                           tablat	equ	0xFF5
  7874                           intcon	equ	0xFF2
  7875                           postinc0	equ	0xFEE
  7876                           wreg	equ	0xFE8
  7877                           indf1	equ	0xFE7
  7878                           postdec1	equ	0xFE5
  7879                           fsr1h	equ	0xFE2
  7880                           fsr1l	equ	0xFE1
  7881                           indf2	equ	0xFDF
  7882                           postinc2	equ	0xFDE
  7883                           fsr2h	equ	0xFDA
  7884                           fsr2l	equ	0xFD9
  7885                           status	equ	0xFD8
  7886                           
  7887 ;; *************** function _strchr *****************
  7888 ;; Defined at:
  7889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  7892 ;;		 -> NULL(0), line(64), 
  7893 ;;  chr             2   25[BANK1 ] int 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  2   23[BANK1 ] PTR unsigned char 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7905 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:        5 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:   14
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_strstr
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text12
  7920  015B34                     __ptext12:
  7921                           	opt stack 0
  7922  015B34                     _strchr:
  7923                           	opt stack 13
  7924                           
  7925                           ; BSR set to: 1
  7926                           ;incstack = 0
  7927  015B34  C117  FFD9         	movff	strchr@ptr,fsr2l
  7928  015B38  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  7929  015B3C  0101               	movlb	1	; () banked
  7930  015B3E  5119               	movf	strchr@chr& (0+255),w,b
  7931  015B40  18DE               	xorwf	postinc2,w,c
  7932  015B42  A4D8               	btfss	status,2,c
  7933  015B44  D005               	goto	l1910
  7934                           
  7935                           ; BSR set to: 1
  7936  015B46  C117  F117         	movff	strchr@ptr,?_strchr
  7937  015B4A  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  7938                           
  7939                           ; BSR set to: 1
  7940  015B4E  0012               	return	
  7941  015B50                     l1910:
  7942                           
  7943                           ; BSR set to: 1
  7944                           
  7945                           ; BSR set to: 1
  7946  015B50  C117  FFD9         	movff	strchr@ptr,fsr2l
  7947  015B54  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  7948  015B58  4B17               	infsnz	strchr@ptr& (0+255),f,b
  7949  015B5A  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  7950  015B5C  50DF               	movf	indf2,w,c
  7951  015B5E  A4D8               	btfss	status,2,c
  7952  015B60  D7E9               	goto	_strchr
  7953                           
  7954                           ; BSR set to: 1
  7955                           
  7956                           ; BSR set to: 1
  7957  015B62  0E00               	movlw	0
  7958  015B64  6F17               	movwf	?_strchr& (0+255),b
  7959  015B66  0E00               	movlw	0
  7960  015B68  6F18               	movwf	(?_strchr+1)& (0+255),b
  7961  015B6A  0012               	return	
  7962  015B6C                     __end_of_strchr:
  7963                           	opt stack 0
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           intcon	equ	0xFF2
  7969                           postinc0	equ	0xFEE
  7970                           wreg	equ	0xFE8
  7971                           indf1	equ	0xFE7
  7972                           postdec1	equ	0xFE5
  7973                           fsr1h	equ	0xFE2
  7974                           fsr1l	equ	0xFE1
  7975                           indf2	equ	0xFDF
  7976                           postinc2	equ	0xFDE
  7977                           fsr2h	equ	0xFDA
  7978                           fsr2l	equ	0xFD9
  7979                           status	equ	0xFD8
  7980                           
  7981 ;; *************** function _strcmp *****************
  7982 ;; Defined at:
  7983 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  7986 ;;		 -> line(64), 
  7987 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  7988 ;;		 -> STR_80(5), STR_78(9), STR_71(13), STR_69(12), 
  7989 ;;		 -> STR_67(16), STR_65(15), STR_63(21), STR_61(21), 
  7990 ;;		 -> STR_59(26), STR_57(13), STR_55(18), STR_53(15), 
  7991 ;;		 -> STR_51(16), STR_48(4), STR_47(6), STR_44(6), 
  7992 ;;		 -> STR_41(6), 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  r               1   28[BANK1 ] char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  2   23[BANK1 ] int 
  7997 ;; Registers used:
  7998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8004 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8005 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8006 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8007 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;Total ram usage:        6 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:   14
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		_ringBufferLUT
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text13
  8019  015870                     __ptext13:
  8020                           	opt stack 0
  8021  015870                     _strcmp:
  8022                           	opt stack 14
  8023                           
  8024                           ; BSR set to: 1
  8025                           ;incstack = 0
  8026  015870  D005               	goto	l1826
  8027  015872  0101               	movlb	1	; () banked
  8028  015874  4B17               	infsnz	strcmp@s1& (0+255),f,b
  8029  015876  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  8030  015878  4B19               	infsnz	strcmp@s2& (0+255),f,b
  8031  01587A  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  8032  01587C                     l1826:
  8033                           
  8034                           ; BSR set to: 1
  8035  01587C  C117  FFD9         	movff	strcmp@s1,fsr2l
  8036  015880  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8037  015884  50DF               	movf	indf2,w,c
  8038  015886  0101               	movlb	1	; () banked
  8039  015888  6F1B               	movwf	??_strcmp& (0+255),b
  8040  01588A  C119  FFF6         	movff	strcmp@s2,tblptrl
  8041  01588E  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  8042  015892                     	if	0	;tblptru may be non-zero
  8043  015892                     	endif
  8044  015892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8045  015892  0E00               	movlw	low (__mediumconst shr (0+16))
  8046  015894  6EF8               	movwf	tblptru,c
  8047  015896                     	endif
  8048  015896  0008               	tblrd		*
  8049  015898  50F5               	movf	tablat,w,c
  8050  01589A  0800               	sublw	0
  8051  01589C  251B               	addwf	??_strcmp& (0+255),w,b
  8052  01589E  6F1C               	movwf	strcmp@r& (0+255),b
  8053  0158A0  511C               	movf	strcmp@r& (0+255),w,b
  8054  0158A2  A4D8               	btfss	status,2,c
  8055  0158A4  D007               	goto	u10810
  8056                           
  8057                           ; BSR set to: 1
  8058  0158A6  C117  FFD9         	movff	strcmp@s1,fsr2l
  8059  0158AA  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8060  0158AE  50DF               	movf	indf2,w,c
  8061  0158B0  A4D8               	btfss	status,2,c
  8062  0158B2  D7DF               	goto	l1827
  8063  0158B4                     u10810:
  8064                           
  8065                           ; BSR set to: 1
  8066                           
  8067                           ; BSR set to: 1
  8068                           
  8069                           ; BSR set to: 1
  8070  0158B4  511C               	movf	strcmp@r& (0+255),w,b
  8071  0158B6  6F17               	movwf	?_strcmp& (0+255),b
  8072  0158B8  6B18               	clrf	(?_strcmp+1)& (0+255),b
  8073  0158BA  BF17               	btfsc	?_strcmp& (0+255),7,b
  8074  0158BC  0718               	decf	(?_strcmp+1)& (0+255),f,b
  8075  0158BE  0012               	return	
  8076  0158C0                     __end_of_strcmp:
  8077                           	opt stack 0
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           intcon	equ	0xFF2
  8083                           postinc0	equ	0xFEE
  8084                           wreg	equ	0xFE8
  8085                           indf1	equ	0xFE7
  8086                           postdec1	equ	0xFE5
  8087                           fsr1h	equ	0xFE2
  8088                           fsr1l	equ	0xFE1
  8089                           indf2	equ	0xFDF
  8090                           postinc2	equ	0xFDE
  8091                           fsr2h	equ	0xFDA
  8092                           fsr2l	equ	0xFD9
  8093                           status	equ	0xFD8
  8094                           
  8095 ;; *************** function _atoi *****************
  8096 ;; Defined at:
  8097 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  8100 ;;		 -> ringBufferLUT@arg_buff(3), 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  a               2   48[BANK1 ] int 
  8103 ;;  sign            1   47[BANK1 ] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  2   43[BANK1 ] int 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8113 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;Total ram usage:        7 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:   15
  8120 ;; This function calls:
  8121 ;;		___wmul
  8122 ;;		_isdigit
  8123 ;; This function is called by:
  8124 ;;		_ringBufferLUT
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text14
  8129  014924                     __ptext14:
  8130                           	opt stack 0
  8131  014924                     _atoi:
  8132                           	opt stack 13
  8133                           
  8134                           ; BSR set to: 1
  8135                           ;incstack = 0
  8136  014924  D003               	goto	l1339
  8137  014926  0101               	movlb	1	; () banked
  8138  014928  4B2B               	infsnz	atoi@s& (0+255),f,b
  8139  01492A  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8140  01492C                     l1339:
  8141                           
  8142                           ; BSR set to: 1
  8143  01492C  C12B  FFD9         	movff	atoi@s,fsr2l
  8144  014930  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8145  014934  0E20               	movlw	32
  8146  014936  18DE               	xorwf	postinc2,w,c
  8147  014938  B4D8               	btfsc	status,2,c
  8148  01493A  D7F5               	goto	l1340
  8149  01493C  C12B  FFD9         	movff	atoi@s,fsr2l
  8150  014940  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8151  014944  0E09               	movlw	9
  8152  014946  18DE               	xorwf	postinc2,w,c
  8153  014948  B4D8               	btfsc	status,2,c
  8154  01494A  D7ED               	goto	l1340
  8155  01494C  0E00               	movlw	0
  8156  01494E  0101               	movlb	1	; () banked
  8157  014950  6F31               	movwf	(atoi@a+1)& (0+255),b
  8158  014952  0E00               	movlw	0
  8159  014954  6F30               	movwf	atoi@a& (0+255),b
  8160  014956  0E00               	movlw	0
  8161  014958  6F2F               	movwf	atoi@sign& (0+255),b
  8162                           
  8163                           ; BSR set to: 1
  8164  01495A  C12B  FFD9         	movff	atoi@s,fsr2l
  8165  01495E  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8166  014962  0E2D               	movlw	45
  8167  014964  18DE               	xorwf	postinc2,w,c
  8168  014966  A4D8               	btfss	status,2,c
  8169  014968  D002               	goto	l1342
  8170                           
  8171                           ; BSR set to: 1
  8172  01496A  2B2F               	incf	atoi@sign& (0+255),f,b
  8173  01496C  D026               	goto	l9199
  8174  01496E                     l1342:
  8175                           
  8176                           ; BSR set to: 1
  8177                           
  8178                           ; BSR set to: 1
  8179  01496E  C12B  FFD9         	movff	atoi@s,fsr2l
  8180  014972  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8181  014976  0E2B               	movlw	43
  8182  014978  18DE               	xorwf	postinc2,w,c
  8183  01497A  A4D8               	btfss	status,2,c
  8184  01497C  D020               	goto	l1345
  8185  01497E  D01D               	goto	l9199
  8186  014980                     
  8187                           ; BSR set to: 1
  8188  014980  C130  F125         	movff	atoi@a,___wmul@multiplier
  8189  014984  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
  8190  014988  0E00               	movlw	0
  8191  01498A  0101               	movlb	1	; () banked
  8192  01498C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8193  01498E  0E0A               	movlw	10
  8194  014990  6F27               	movwf	___wmul@multiplicand& (0+255),b
  8195  014992  EC62  F0AE         	call	___wmul	;wreg free
  8196  014996  C12B  FFD9         	movff	atoi@s,fsr2l
  8197  01499A  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8198  01499E  50DF               	movf	indf2,w,c
  8199  0149A0  0101               	movlb	1	; () banked
  8200  0149A2  6F2D               	movwf	??_atoi& (0+255),b
  8201  0149A4  6B2E               	clrf	(??_atoi+1)& (0+255),b
  8202  0149A6  5125               	movf	?___wmul& (0+255),w,b
  8203  0149A8  272D               	addwf	??_atoi& (0+255),f,b
  8204  0149AA  5126               	movf	(?___wmul+1)& (0+255),w,b
  8205  0149AC  232E               	addwfc	(??_atoi+1)& (0+255),f,b
  8206  0149AE  0ED0               	movlw	208
  8207  0149B0  252D               	addwf	??_atoi& (0+255),w,b
  8208  0149B2  6F30               	movwf	atoi@a& (0+255),b
  8209  0149B4  0EFF               	movlw	255
  8210  0149B6  212E               	addwfc	(??_atoi+1)& (0+255),w,b
  8211  0149B8  6F31               	movwf	(atoi@a+1)& (0+255),b
  8212  0149BA                     l9199:
  8213                           
  8214                           ; BSR set to: 1
  8215  0149BA  4B2B               	infsnz	atoi@s& (0+255),f,b
  8216  0149BC  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8217  0149BE                     l1345:
  8218                           
  8219                           ; BSR set to: 1
  8220                           
  8221                           ; BSR set to: 1
  8222  0149BE  C12B  FFD9         	movff	atoi@s,fsr2l
  8223  0149C2  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8224  0149C6  50DF               	movf	indf2,w,c
  8225  0149C8  ECFB  F0AE         	call	_isdigit
  8226  0149CC  B0D8               	btfsc	status,0,c
  8227  0149CE  D7D8               	goto	l1346
  8228  0149D0  0101               	movlb	1	; () banked
  8229  0149D2  512F               	movf	atoi@sign& (0+255),w,b
  8230  0149D4  B4D8               	btfsc	status,2,c
  8231  0149D6  D00D               	goto	l1348
  8232                           
  8233                           ; BSR set to: 1
  8234  0149D8  C130  F12D         	movff	atoi@a,??_atoi
  8235  0149DC  C131  F12E         	movff	atoi@a+1,??_atoi+1
  8236  0149E0  1F2D               	comf	??_atoi& (0+255),f,b
  8237  0149E2  1F2E               	comf	(??_atoi+1)& (0+255),f,b
  8238  0149E4  4B2D               	infsnz	??_atoi& (0+255),f,b
  8239  0149E6  2B2E               	incf	(??_atoi+1)& (0+255),f,b
  8240  0149E8  C12D  F12B         	movff	??_atoi,?_atoi
  8241  0149EC  C12E  F12C         	movff	??_atoi+1,?_atoi+1
  8242  0149F0  0012               	return	
  8243  0149F2                     l1348:
  8244                           
  8245                           ; BSR set to: 1
  8246  0149F2  C130  F12B         	movff	atoi@a,?_atoi
  8247  0149F6  C131  F12C         	movff	atoi@a+1,?_atoi+1
  8248                           
  8249                           ; BSR set to: 1
  8250  0149FA  0012               	return		;funcret
  8251  0149FC                     __end_of_atoi:
  8252                           	opt stack 0
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           intcon	equ	0xFF2
  8258                           postinc0	equ	0xFEE
  8259                           wreg	equ	0xFE8
  8260                           indf1	equ	0xFE7
  8261                           postdec1	equ	0xFE5
  8262                           fsr1h	equ	0xFE2
  8263                           fsr1l	equ	0xFE1
  8264                           indf2	equ	0xFDF
  8265                           postinc2	equ	0xFDE
  8266                           fsr2h	equ	0xFDA
  8267                           fsr2l	equ	0xFD9
  8268                           status	equ	0xFD8
  8269                           
  8270 ;; *************** function ___ftdiv *****************
  8271 ;; Defined at:
  8272 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  f1              3   55[BANK1 ] float 
  8275 ;;  f2              3   58[BANK1 ] float 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  f3              3   65[BANK1 ] float 
  8278 ;;  sign            1   69[BANK1 ] unsigned char 
  8279 ;;  exp             1   68[BANK1 ] unsigned char 
  8280 ;;  cntr            1   64[BANK1 ] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  3   55[BANK1 ] float 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8290 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;Total ram usage:       15 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:   15
  8297 ;; This function calls:
  8298 ;;		___ftpack
  8299 ;; This function is called by:
  8300 ;;		_ringBufferLUT
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text15
  8305  01459E                     __ptext15:
  8306                           	opt stack 0
  8307  01459E                     ___ftdiv:
  8308                           	opt stack 13
  8309                           
  8310                           ; BSR set to: 1
  8311                           ;incstack = 0
  8312  01459E  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
  8313  0145A2  0101               	movlb	1	; () banked
  8314  0145A4  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8315  0145A6  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8316  0145A8  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8317  0145AA  373D               	rlcf	??___ftdiv& (0+255),f,b
  8318  0145AC  E301               	bnc	u10911
  8319  0145AE  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8320  0145B0                     u10911:
  8321  0145B0  513D               	movf	??___ftdiv& (0+255),w,b
  8322  0145B2  6F44               	movwf	___ftdiv@exp& (0+255),b
  8323  0145B4  5144               	movf	___ftdiv@exp& (0+255),w,b
  8324  0145B6  A4D8               	btfss	status,2,c
  8325  0145B8  D007               	goto	l1498
  8326                           
  8327                           ; BSR set to: 1
  8328  0145BA  0E00               	movlw	0
  8329  0145BC  6F37               	movwf	?___ftdiv& (0+255),b
  8330  0145BE  0E00               	movlw	0
  8331  0145C0  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8332  0145C2  0E00               	movlw	0
  8333  0145C4  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8334                           
  8335                           ; BSR set to: 1
  8336  0145C6  0012               	return	
  8337  0145C8                     l1498:
  8338                           
  8339                           ; BSR set to: 1
  8340                           
  8341                           ; BSR set to: 1
  8342  0145C8  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
  8343  0145CC  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8344  0145CE  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8345  0145D0  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8346  0145D2  373D               	rlcf	??___ftdiv& (0+255),f,b
  8347  0145D4  E301               	bnc	u10931
  8348  0145D6  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8349  0145D8                     u10931:
  8350  0145D8  513D               	movf	??___ftdiv& (0+255),w,b
  8351  0145DA  6F45               	movwf	___ftdiv@sign& (0+255),b
  8352  0145DC  5145               	movf	___ftdiv@sign& (0+255),w,b
  8353  0145DE  A4D8               	btfss	status,2,c
  8354  0145E0  D007               	goto	l1500
  8355                           
  8356                           ; BSR set to: 1
  8357  0145E2  0E00               	movlw	0
  8358  0145E4  6F37               	movwf	?___ftdiv& (0+255),b
  8359  0145E6  0E00               	movlw	0
  8360  0145E8  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8361  0145EA  0E00               	movlw	0
  8362  0145EC  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8363                           
  8364                           ; BSR set to: 1
  8365  0145EE  0012               	return	
  8366  0145F0                     l1500:
  8367                           
  8368                           ; BSR set to: 1
  8369                           
  8370                           ; BSR set to: 1
  8371  0145F0  0E00               	movlw	0
  8372  0145F2  6F41               	movwf	___ftdiv@f3& (0+255),b
  8373  0145F4  0E00               	movlw	0
  8374  0145F6  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
  8375  0145F8  0E00               	movlw	0
  8376  0145FA  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
  8377                           
  8378                           ; BSR set to: 1
  8379  0145FC  5145               	movf	___ftdiv@sign& (0+255),w,b
  8380  0145FE  0F89               	addlw	137
  8381  014600  5F44               	subwf	___ftdiv@exp& (0+255),f,b
  8382                           
  8383                           ; BSR set to: 1
  8384  014602  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
  8385                           
  8386                           ; BSR set to: 1
  8387  014606  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8388  014608  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
  8389                           
  8390                           ; BSR set to: 1
  8391  01460A  0E80               	movlw	128
  8392  01460C  1745               	andwf	___ftdiv@sign& (0+255),f,b
  8393                           
  8394                           ; BSR set to: 1
  8395  01460E  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8396                           
  8397                           ; BSR set to: 1
  8398  014610  0EFF               	movlw	255
  8399  014612  1737               	andwf	___ftdiv@f1& (0+255),f,b
  8400  014614  0EFF               	movlw	255
  8401  014616  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8402  014618  0E00               	movlw	0
  8403  01461A  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8404                           
  8405                           ; BSR set to: 1
  8406  01461C  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8407                           
  8408                           ; BSR set to: 1
  8409  01461E  0EFF               	movlw	255
  8410  014620  173A               	andwf	___ftdiv@f2& (0+255),f,b
  8411  014622  0EFF               	movlw	255
  8412  014624  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8413  014626  0E00               	movlw	0
  8414  014628  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8415                           
  8416                           ; BSR set to: 1
  8417  01462A  0E18               	movlw	24
  8418  01462C  6F40               	movwf	___ftdiv@cntr& (0+255),b
  8419  01462E                     
  8420                           ; BSR set to: 1
  8421                           
  8422                           ; BSR set to: 1
  8423  01462E  90D8               	bcf	status,0,c
  8424  014630  3741               	rlcf	___ftdiv@f3& (0+255),f,b
  8425  014632  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8426  014634  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8427                           
  8428                           ; BSR set to: 1
  8429  014636  513A               	movf	___ftdiv@f2& (0+255),w,b
  8430  014638  5D37               	subwf	___ftdiv@f1& (0+255),w,b
  8431  01463A  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8432  01463C  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8433  01463E  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8434  014640  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8435  014642  A0D8               	btfss	status,0,c
  8436  014644  D007               	goto	l1502
  8437                           
  8438                           ; BSR set to: 1
  8439  014646  513A               	movf	___ftdiv@f2& (0+255),w,b
  8440  014648  5F37               	subwf	___ftdiv@f1& (0+255),f,b
  8441  01464A  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8442  01464C  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8443  01464E  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8444  014650  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8445                           
  8446                           ; BSR set to: 1
  8447  014652  8141               	bsf	___ftdiv@f3& (0+255),0,b
  8448  014654                     l1502:
  8449                           
  8450                           ; BSR set to: 1
  8451  014654  90D8               	bcf	status,0,c
  8452  014656  3737               	rlcf	___ftdiv@f1& (0+255),f,b
  8453  014658  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8454  01465A  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8455                           
  8456                           ; BSR set to: 1
  8457  01465C  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
  8458  01465E  D7E7               	goto	l1501
  8459                           
  8460                           ; BSR set to: 1
  8461                           
  8462                           ; BSR set to: 1
  8463  014660  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
  8464  014664  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8465  014668  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8466  01466C  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
  8467  014670  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
  8468  014674  EC64  F0A5         	call	___ftpack	;wreg free
  8469  014678  C117  F137         	movff	?___ftpack,?___ftdiv
  8470  01467C  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
  8471  014680  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
  8472  014684  0012               	return	
  8473  014686                     __end_of___ftdiv:
  8474                           	opt stack 0
  8475                           tblptru	equ	0xFF8
  8476                           tblptrh	equ	0xFF7
  8477                           tblptrl	equ	0xFF6
  8478                           tablat	equ	0xFF5
  8479                           intcon	equ	0xFF2
  8480                           postinc0	equ	0xFEE
  8481                           wreg	equ	0xFE8
  8482                           indf1	equ	0xFE7
  8483                           postdec1	equ	0xFE5
  8484                           fsr1h	equ	0xFE2
  8485                           fsr1l	equ	0xFE1
  8486                           indf2	equ	0xFDF
  8487                           postinc2	equ	0xFDE
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8
  8491                           
  8492 ;; *************** function ___awtoft *****************
  8493 ;; Defined at:
  8494 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  c               2   31[BANK1 ] int 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  sign            1   34[BANK1 ] unsigned char 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  3   31[BANK1 ] float 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8508 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;Total ram usage:        4 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:   15
  8515 ;; This function calls:
  8516 ;;		___ftpack
  8517 ;; This function is called by:
  8518 ;;		_ringBufferLUT
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text16
  8523  015AFA                     __ptext16:
  8524                           	opt stack 0
  8525  015AFA                     ___awtoft:
  8526                           	opt stack 13
  8527                           
  8528                           ;incstack = 0
  8529  015AFA  0E00               	movlw	0
  8530  015AFC  0101               	movlb	1	; () banked
  8531  015AFE  6F22               	movwf	___awtoft@sign& (0+255),b
  8532                           
  8533                           ; BSR set to: 1
  8534  015B00  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
  8535  015B02  D006               	goto	l1386
  8536                           
  8537                           ; BSR set to: 1
  8538  015B04  6D1F               	negf	___awtoft@c& (0+255),b
  8539  015B06  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
  8540  015B08  B0D8               	btfsc	status,0,c
  8541  015B0A  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
  8542                           
  8543                           ; BSR set to: 1
  8544  015B0C  0E01               	movlw	1
  8545  015B0E  6F22               	movwf	___awtoft@sign& (0+255),b
  8546  015B10                     l1386:
  8547                           
  8548                           ; BSR set to: 1
  8549                           
  8550                           ; BSR set to: 1
  8551  015B10  C11F  F117         	movff	___awtoft@c,___ftpack@arg
  8552  015B14  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
  8553  015B18  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
  8554  015B1A  0E8E               	movlw	142
  8555  015B1C  6F1A               	movwf	___ftpack@exp& (0+255),b
  8556  015B1E  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
  8557  015B22  EC64  F0A5         	call	___ftpack	;wreg free
  8558  015B26  C117  F11F         	movff	?___ftpack,?___awtoft
  8559  015B2A  C118  F120         	movff	?___ftpack+1,?___awtoft+1
  8560  015B2E  C119  F121         	movff	?___ftpack+2,?___awtoft+2
  8561  015B32  0012               	return	
  8562  015B34                     __end_of___awtoft:
  8563                           	opt stack 0
  8564                           tblptru	equ	0xFF8
  8565                           tblptrh	equ	0xFF7
  8566                           tblptrl	equ	0xFF6
  8567                           tablat	equ	0xFF5
  8568                           intcon	equ	0xFF2
  8569                           postinc0	equ	0xFEE
  8570                           wreg	equ	0xFE8
  8571                           indf1	equ	0xFE7
  8572                           postdec1	equ	0xFE5
  8573                           fsr1h	equ	0xFE2
  8574                           fsr1l	equ	0xFE1
  8575                           indf2	equ	0xFDF
  8576                           postinc2	equ	0xFDE
  8577                           fsr2h	equ	0xFDA
  8578                           fsr2l	equ	0xFD9
  8579                           status	equ	0xFD8
  8580                           
  8581 ;; *************** function _EUSART2_Read *****************
  8582 ;; Defined at:
  8583 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  readValue       1   23[BANK1 ] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      unsigned char 
  8590 ;; Registers used:
  8591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;Total ram usage:        1 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:   14
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_terminal_ringBufferPull
  8608 ;;		_getch
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text17
  8613  015A32                     __ptext17:
  8614                           	opt stack 0
  8615  015A32                     _EUSART2_Read:
  8616                           	opt stack 15
  8617                           
  8618                           ;eusart2.c: 132: uint8_t readValue = 0;
  8619                           
  8620                           ;incstack = 0
  8621  015A32  0E00               	movlw	0
  8622  015A34  0101               	movlb	1	; () banked
  8623  015A36  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  8624                           
  8625                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  8626  015A38  D001               	goto	l367
  8627  015A3A                     l368:
  8628                           
  8629                           ; BSR set to: 1
  8630  015A3A  0004               	clrwdt		;# 
  8631  015A3C                     l367:
  8632  015A3C  0101               	movlb	1	; () banked
  8633  015A3E  51D8               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8634  015A40  B4D8               	btfsc	status,2,c
  8635  015A42  D7FB               	goto	l368
  8636                           
  8637                           ; BSR set to: 1
  8638                           ;eusart2.c: 137: }
  8639                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  8640                           
  8641                           ; BSR set to: 1
  8642  015A44  51D9               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  8643  015A46  0D01               	mullw	1
  8644  015A48  0E00               	movlw	low _eusart2RxBuffer
  8645  015A4A  24F3               	addwf	prodl,w,c
  8646  015A4C  6ED9               	movwf	fsr2l,c
  8647  015A4E  0E02               	movlw	high _eusart2RxBuffer
  8648  015A50  20F4               	addwfc	prodh,w,c
  8649  015A52  6EDA               	movwf	fsr2h,c
  8650  015A54  50DF               	movf	indf2,w,c
  8651  015A56  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  8652                           
  8653                           ; BSR set to: 1
  8654  015A58  2BD9               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  8655                           
  8656                           ; BSR set to: 1
  8657                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  8658  015A5A  0E3F               	movlw	63
  8659  015A5C  65D9               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  8660  015A5E  D002               	goto	l370
  8661                           
  8662                           ; BSR set to: 1
  8663                           ;eusart2.c: 141: {
  8664                           ;eusart2.c: 142: eusart2RxTail = 0;
  8665  015A60  0E00               	movlw	0
  8666  015A62  6FD9               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8667  015A64                     l370:
  8668                           
  8669                           ; BSR set to: 1
  8670                           ;eusart2.c: 143: }
  8671                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  8672                           
  8673                           ; BSR set to: 1
  8674  015A64  010E               	movlb	14	; () banked
  8675  015A66  9F2C               	bcf	44,7,b	;volatile
  8676                           
  8677                           ; BSR set to: 14
  8678                           ;eusart2.c: 145: eusart2RxCount--;
  8679  015A68  0101               	movlb	1	; () banked
  8680  015A6A  07D8               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  8681                           
  8682                           ; BSR set to: 1
  8683                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  8684  015A6C  010E               	movlb	14	; () banked
  8685  015A6E  8F2C               	bsf	44,7,b	;volatile
  8686                           
  8687                           ; BSR set to: 14
  8688                           ;eusart2.c: 148: return readValue;
  8689  015A70  0101               	movlb	1	; () banked
  8690  015A72  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
  8691  015A74  0012               	return	
  8692  015A76                     __end_of_EUSART2_Read:
  8693                           	opt stack 0
  8694                           tblptru	equ	0xFF8
  8695                           tblptrh	equ	0xFF7
  8696                           tblptrl	equ	0xFF6
  8697                           tablat	equ	0xFF5
  8698                           prodh	equ	0xFF4
  8699                           prodl	equ	0xFF3
  8700                           intcon	equ	0xFF2
  8701                           postinc0	equ	0xFEE
  8702                           wreg	equ	0xFE8
  8703                           indf1	equ	0xFE7
  8704                           postdec1	equ	0xFE5
  8705                           fsr1h	equ	0xFE2
  8706                           fsr1l	equ	0xFE1
  8707                           indf2	equ	0xFDF
  8708                           postinc2	equ	0xFDE
  8709                           fsr2h	equ	0xFDA
  8710                           fsr2l	equ	0xFD9
  8711                           status	equ	0xFD8
  8712                           
  8713 ;; *************** function _terminal_clearTerminal *****************
  8714 ;; Defined at:
  8715 ;;		line 80 in file "ring_buffer_interface.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;		None
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;		None
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;Total ram usage:        0 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:   18
  8736 ;; This function calls:
  8737 ;;		_printf
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text18
  8744  015EE2                     __ptext18:
  8745                           	opt stack 0
  8746  015EE2                     _terminal_clearTerminal:
  8747                           	opt stack 12
  8748                           
  8749                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  8750                           
  8751                           ; BSR set to: 1
  8752                           ;incstack = 0
  8753  015EE2  0EAC               	movlw	low STR_2
  8754  015EE4  0101               	movlb	1	; () banked
  8755  015EE6  6F64               	movwf	printf@f& (0+255),b
  8756  015EE8  0EFF               	movlw	high STR_2
  8757  015EEA  6F65               	movwf	(printf@f+1)& (0+255),b
  8758  015EEC  EC00  F080         	call	_printf	;wreg free
  8759  015EF0  0012               	return		;funcret
  8760  015EF2                     __end_of_terminal_clearTerminal:
  8761                           	opt stack 0
  8762                           tblptru	equ	0xFF8
  8763                           tblptrh	equ	0xFF7
  8764                           tblptrl	equ	0xFF6
  8765                           tablat	equ	0xFF5
  8766                           prodh	equ	0xFF4
  8767                           prodl	equ	0xFF3
  8768                           intcon	equ	0xFF2
  8769                           postinc0	equ	0xFEE
  8770                           wreg	equ	0xFE8
  8771                           indf1	equ	0xFE7
  8772                           postdec1	equ	0xFE5
  8773                           fsr1h	equ	0xFE2
  8774                           fsr1l	equ	0xFE1
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           fsr2h	equ	0xFDA
  8778                           fsr2l	equ	0xFD9
  8779                           status	equ	0xFD8
  8780                           
  8781 ;; *************** function _printf *****************
  8782 ;; Defined at:
  8783 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  8786 ;;		 -> STR_86(30), STR_85(23), STR_84(40), STR_83(30), 
  8787 ;;		 -> STR_82(33), STR_81(1152), STR_79(58), STR_77(63), 
  8788 ;;		 -> STR_76(37), STR_75(102), STR_74(86), STR_72(25), 
  8789 ;;		 -> STR_70(24), STR_68(41), STR_66(40), STR_64(34), 
  8790 ;;		 -> STR_62(34), STR_60(32), STR_58(56), STR_56(34), 
  8791 ;;		 -> STR_54(34), STR_52(35), STR_50(47), STR_49(17), 
  8792 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
  8793 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
  8794 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
  8795 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  val             4  131[BANK1 ] unsigned long 
  8798 ;;  tmpval          4  127[BANK1 ] struct .
  8799 ;;  fval            3  135[BANK1 ] struct .
  8800 ;;  prec            2  138[BANK1 ] int 
  8801 ;;  exp             2  125[BANK1 ] int 
  8802 ;;  flag            2  123[BANK1 ] unsigned short 
  8803 ;;  ap              2  121[BANK1 ] PTR void [1]
  8804 ;;		 -> ?i2_printf(2), ?_printf(2), 
  8805 ;;  len             2  119[BANK1 ] unsigned int 
  8806 ;;  cp              2  117[BANK1 ] PTR const unsigned char 
  8807 ;;		 -> printf@c(1), 
  8808 ;;  width           2    0        int 
  8809 ;;  c               1  140[BANK1 ] char 
  8810 ;;  d               1    0        unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  2  100[BANK1 ] int 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8820 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:       41 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:   17
  8827 ;; This function calls:
  8828 ;;		___awdiv
  8829 ;;		___ftadd
  8830 ;;		___ftge
  8831 ;;		___ftmul
  8832 ;;		___ftneg
  8833 ;;		___ftsub
  8834 ;;		___fttol
  8835 ;;		___lldiv
  8836 ;;		___llmod
  8837 ;;		___lltoft
  8838 ;;		___wmul
  8839 ;;		__div_to_l_
  8840 ;;		__tdiv_to_l_
  8841 ;;		_fround
  8842 ;;		_isdigit
  8843 ;;		_putch
  8844 ;;		_scale
  8845 ;; This function is called by:
  8846 ;;		_terminal_clearTerminal
  8847 ;;		_terminal_setCursorHome
  8848 ;;		_terminal_textAttributes
  8849 ;;		_terminal_printNewline
  8850 ;;		_ringBufferLUT
  8851 ;;		_terminal_printResetMessage
  8852 ;;		_terminal_clearLine
  8853 ;;		_terminal_saveCursor
  8854 ;;		_terminal_returnCursor
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text19
  8859  010000                     __ptext19:
  8860                           	opt stack 0
  8861  010000                     _printf:
  8862                           	opt stack 11
  8863                           
  8864                           ;doprnt.c: 466: va_list ap;
  8865                           ;doprnt.c: 499: signed char c;
  8866                           ;doprnt.c: 501: int width;
  8867                           ;doprnt.c: 504: int prec;
  8868                           ;doprnt.c: 508: unsigned short flag;
  8869                           ;doprnt.c: 515: char d;
  8870                           ;doprnt.c: 516: double fval;
  8871                           ;doprnt.c: 517: int exp;
  8872                           ;doprnt.c: 523: union {
  8873                           ;doprnt.c: 524: unsigned long vd;
  8874                           ;doprnt.c: 525: double integ;
  8875                           ;doprnt.c: 526: } tmpval;
  8876                           ;doprnt.c: 528: unsigned long val;
  8877                           ;doprnt.c: 529: unsigned len;
  8878                           ;doprnt.c: 530: const char * cp;
  8879                           ;doprnt.c: 533: *ap = __va_start();
  8880                           
  8881                           ;incstack = 0
  8882  010000  0E66               	movlw	low (?_printf+2)
  8883  010002  0101               	movlb	1	; () banked
  8884  010004  6F79               	movwf	printf@ap& (0+255),b
  8885  010006  0E01               	movlw	high (?_printf+2)
  8886  010008  6F7A               	movwf	(printf@ap+1)& (0+255),b
  8887                           
  8888                           ;doprnt.c: 536: while(c = *f++) {
  8889  01000A  EF55  F084         	goto	u10370
  8890  01000E                     
  8891                           ; BSR set to: 1
  8892                           ;doprnt.c: 538: if(c != '%')
  8893                           
  8894                           ; BSR set to: 1
  8895  01000E  0E25               	movlw	37
  8896  010010  198C               	xorwf	printf@c& (0+255),w,b
  8897  010012  B4D8               	btfsc	status,2,c
  8898  010014  D005               	goto	l1068
  8899                           
  8900                           ; BSR set to: 1
  8901                           ;doprnt.c: 540: {
  8902                           ;doprnt.c: 541: (putch(c) );
  8903  010016  518C               	movf	printf@c& (0+255),w,b
  8904  010018  EC79  F0AF         	call	_putch
  8905                           
  8906                           ;doprnt.c: 542: continue;
  8907  01001C  EF55  F084         	goto	u10370
  8908  010020                     l1068:
  8909                           
  8910                           ;doprnt.c: 543: }
  8911                           ;doprnt.c: 548: flag = 0;
  8912  010020  0E00               	movlw	0
  8913  010022  0101               	movlb	1	; () banked
  8914  010024  6F7C               	movwf	(printf@flag+1)& (0+255),b
  8915  010026  0E00               	movlw	0
  8916  010028  6F7B               	movwf	printf@flag& (0+255),b
  8917                           
  8918                           ; BSR set to: 1
  8919                           ;doprnt.c: 611: if(*f == '.') {
  8920  01002A  C164  FFF6         	movff	printf@f,tblptrl
  8921  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
  8922  010032  0E00               	movlw	low (__mediumconst shr (0+16))
  8923  010034  6EF8               	movwf	tblptru,c
  8924  010036  0E0D               	movlw	(high __ramtop+-1)
  8925  010038  64F7               	cpfsgt	tblptrh,c
  8926  01003A  D003               	bra	u9957
  8927  01003C  0008               	tblrd		*
  8928  01003E  50F5               	movf	tablat,w,c
  8929  010040  D005               	bra	u9950
  8930  010042                     u9957:
  8931  010042  CFF6 FFE1          	movff	tblptrl,fsr1l
  8932  010046  CFF7 FFE2          	movff	tblptrh,fsr1h
  8933  01004A  50E7               	movf	indf1,w,c
  8934  01004C                     u9950:
  8935  01004C  0A2E               	xorlw	46
  8936  01004E  A4D8               	btfss	status,2,c
  8937  010050  D049               	goto	l1069
  8938                           
  8939                           ;doprnt.c: 612: flag |= 0x4000;
  8940  010052  0101               	movlb	1	; () banked
  8941  010054  8D7C               	bsf	(printf@flag+1)& (0+255),6,b
  8942                           
  8943                           ;doprnt.c: 613: f++;
  8944  010056  4B64               	infsnz	printf@f& (0+255),f,b
  8945  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
  8946                           
  8947                           ; BSR set to: 1
  8948                           ;doprnt.c: 620: {
  8949                           ;doprnt.c: 621: prec = 0;
  8950  01005A  0E00               	movlw	0
  8951  01005C  6F8B               	movwf	(printf@prec+1)& (0+255),b
  8952  01005E  0E00               	movlw	0
  8953  010060  6F8A               	movwf	printf@prec& (0+255),b
  8954                           
  8955                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8956  010062  D02A               	goto	l1070
  8957  010064                     
  8958                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8959                           
  8960                           ; BSR set to: 1
  8961  010064  C18A  F125         	movff	printf@prec,___wmul@multiplier
  8962  010068  C18B  F126         	movff	printf@prec+1,___wmul@multiplier+1
  8963  01006C  0E00               	movlw	0
  8964  01006E  0101               	movlb	1	; () banked
  8965  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8966  010072  0E0A               	movlw	10
  8967  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
  8968  010076  EC62  F0AE         	call	___wmul	;wreg free
  8969  01007A  C164  FFF6         	movff	printf@f,tblptrl
  8970  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
  8971  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  8972  010084  6EF8               	movwf	tblptru,c
  8973  010086  0E0D               	movlw	(high __ramtop+-1)
  8974  010088  64F7               	cpfsgt	tblptrh,c
  8975  01008A  D003               	bra	u9977
  8976  01008C  0008               	tblrd		*
  8977  01008E  50F5               	movf	tablat,w,c
  8978  010090  D005               	bra	u9970
  8979  010092                     u9977:
  8980  010092  CFF6 FFE1          	movff	tblptrl,fsr1l
  8981  010096  CFF7 FFE2          	movff	tblptrh,fsr1h
  8982  01009A  50E7               	movf	indf1,w,c
  8983  01009C                     u9970:
  8984  01009C  0101               	movlb	1	; () banked
  8985  01009E  6F6C               	movwf	??_printf& (0+255),b
  8986  0100A0  516C               	movf	??_printf& (0+255),w,b
  8987  0100A2  2725               	addwf	?___wmul& (0+255),f,b
  8988  0100A4  0E00               	movlw	0
  8989  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
  8990  0100A8  0ED0               	movlw	208
  8991  0100AA  2525               	addwf	?___wmul& (0+255),w,b
  8992  0100AC  6F8A               	movwf	printf@prec& (0+255),b
  8993  0100AE  0EFF               	movlw	255
  8994  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
  8995  0100B2  6F8B               	movwf	(printf@prec+1)& (0+255),b
  8996                           
  8997                           ; BSR set to: 1
  8998  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
  8999  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
  9000  0100B8                     l1070:
  9001                           
  9002                           ; BSR set to: 1
  9003                           
  9004                           ; BSR set to: 1
  9005  0100B8  C164  FFF6         	movff	printf@f,tblptrl
  9006  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
  9007  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
  9008  0100C2  6EF8               	movwf	tblptru,c
  9009  0100C4  0E0D               	movlw	(high __ramtop+-1)
  9010  0100C6  64F7               	cpfsgt	tblptrh,c
  9011  0100C8  D003               	bra	u9987
  9012  0100CA  0008               	tblrd		*
  9013  0100CC  50F5               	movf	tablat,w,c
  9014  0100CE  D005               	bra	u9980
  9015  0100D0                     u9987:
  9016  0100D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9017  0100D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9018  0100D8  50E7               	movf	indf1,w,c
  9019  0100DA                     u9980:
  9020  0100DA  ECFB  F0AE         	call	_isdigit
  9021  0100DE  A0D8               	btfss	status,0,c
  9022  0100E0  D035               	goto	l1074
  9023  0100E2  D7C0               	goto	l1071
  9024  0100E4                     l1069:
  9025                           
  9026                           ;doprnt.c: 626: prec = 0;
  9027  0100E4  0E00               	movlw	0
  9028  0100E6  0101               	movlb	1	; () banked
  9029  0100E8  6F8B               	movwf	(printf@prec+1)& (0+255),b
  9030  0100EA  0E00               	movlw	0
  9031  0100EC  6F8A               	movwf	printf@prec& (0+255),b
  9032                           
  9033                           ; BSR set to: 1
  9034                           ;doprnt.c: 628: flag |= 0x1000;
  9035  0100EE  897C               	bsf	(printf@flag+1)& (0+255),4,b
  9036                           
  9037                           ; BSR set to: 1
  9038                           ;doprnt.c: 630: }
  9039                           ;doprnt.c: 635: switch(c = *f++) {
  9040  0100F0  D02D               	goto	l1074
  9041  0100F2                     
  9042                           ; BSR set to: 1
  9043                           ;doprnt.c: 663: flag |= 0x400;
  9044                           
  9045                           ; BSR set to: 1
  9046  0100F2  857C               	bsf	(printf@flag+1)& (0+255),2,b
  9047                           
  9048                           ; BSR set to: 1
  9049                           ;doprnt.c: 698: case 'i':
  9050                           ;doprnt.c: 699: break;
  9051                           
  9052                           ; BSR set to: 1
  9053                           
  9054                           ;doprnt.c: 697: case 'd':
  9055                           
  9056                           ;doprnt.c: 664: break;
  9057  0100F4  D052               	goto	l1078
  9058  0100F6                     
  9059                           ; BSR set to: 1
  9060                           ;doprnt.c: 753: if(prec && prec < len)
  9061                           
  9062                           ; BSR set to: 1
  9063  0100F6  518A               	movf	printf@prec& (0+255),w,b
  9064  0100F8  118B               	iorwf	(printf@prec+1)& (0+255),w,b
  9065  0100FA  B4D8               	btfsc	status,2,c
  9066  0100FC  D015               	goto	l1083
  9067                           
  9068                           ; BSR set to: 1
  9069  0100FE  5177               	movf	printf@len& (0+255),w,b
  9070  010100  5D8A               	subwf	printf@prec& (0+255),w,b
  9071  010102  5178               	movf	(printf@len+1)& (0+255),w,b
  9072  010104  598B               	subwfb	(printf@prec+1)& (0+255),w,b
  9073  010106  B0D8               	btfsc	status,0,c
  9074  010108  D00F               	goto	l1083
  9075                           
  9076                           ; BSR set to: 1
  9077                           ;doprnt.c: 754: len = prec;
  9078  01010A  C18A  F177         	movff	printf@prec,printf@len
  9079  01010E  C18B  F178         	movff	printf@prec+1,printf@len+1
  9080                           
  9081                           ; BSR set to: 1
  9082                           ;doprnt.c: 767: while(len--)
  9083  010112  D00A               	goto	l1083
  9084  010114                     l8559:
  9085                           
  9086                           ; BSR set to: 1
  9087                           ;doprnt.c: 768: (putch(*cp++) );
  9088  010114  C175  FFD9         	movff	printf@cp,fsr2l
  9089  010118  C176  FFDA         	movff	printf@cp+1,fsr2h
  9090  01011C  50DF               	movf	indf2,w,c
  9091  01011E  EC79  F0AF         	call	_putch
  9092  010122  0101               	movlb	1	; () banked
  9093  010124  4B75               	infsnz	printf@cp& (0+255),f,b
  9094  010126  2B76               	incf	(printf@cp+1)& (0+255),f,b
  9095  010128                     l1083:
  9096                           
  9097                           ; BSR set to: 1
  9098                           
  9099                           ; BSR set to: 1
  9100  010128  0777               	decf	printf@len& (0+255),f,b
  9101  01012A  A0D8               	btfss	status,0,c
  9102  01012C  0778               	decf	(printf@len+1)& (0+255),f,b
  9103  01012E  2977               	incf	printf@len& (0+255),w,b
  9104  010130  E1F1               	bnz	l8559
  9105  010132  2978               	incf	(printf@len+1)& (0+255),w,b
  9106  010134  B4D8               	btfsc	status,2,c
  9107  010136  D3B9               	goto	u10370
  9108  010138  D7ED               	goto	l1084
  9109  01013A                     
  9110                           ; BSR set to: 1
  9111                           ;doprnt.c: 805: cp = (char *)&c;
  9112                           
  9113                           ; BSR set to: 1
  9114  01013A  0E8C               	movlw	low printf@c
  9115  01013C  6F75               	movwf	printf@cp& (0+255),b
  9116  01013E  0E01               	movlw	high printf@c
  9117  010140  6F76               	movwf	(printf@cp+1)& (0+255),b
  9118                           
  9119                           ; BSR set to: 1
  9120                           ;doprnt.c: 806: len = 1;
  9121  010142  0E00               	movlw	0
  9122  010144  6F78               	movwf	(printf@len+1)& (0+255),b
  9123  010146  0E01               	movlw	1
  9124  010148  6F77               	movwf	printf@len& (0+255),b
  9125                           
  9126                           ;doprnt.c: 807: goto dostring;
  9127  01014A  D7D5               	goto	l1081
  9128  01014C                     l1074:
  9129                           
  9130                           ; BSR set to: 1
  9131  01014C  0101               	movlb	1	; () banked
  9132  01014E  5164               	movf	printf@f& (0+255),w,b
  9133  010150  6F6C               	movwf	??_printf& (0+255),b
  9134  010152  5165               	movf	(printf@f+1)& (0+255),w,b
  9135  010154  6F6D               	movwf	(??_printf+1)& (0+255),b
  9136  010156  4B64               	infsnz	printf@f& (0+255),f,b
  9137  010158  2B65               	incf	(printf@f+1)& (0+255),f,b
  9138  01015A  C16C  FFF6         	movff	??_printf,tblptrl
  9139  01015E  C16D  FFF7         	movff	??_printf+1,tblptrh
  9140  010162  0E00               	movlw	low (__mediumconst shr (0+16))
  9141  010164  6EF8               	movwf	tblptru,c
  9142  010166  0E0D               	movlw	(high __ramtop+-1)
  9143  010168  64F7               	cpfsgt	tblptrh,c
  9144  01016A  D003               	bra	u10037
  9145  01016C  0008               	tblrd		*
  9146  01016E  50F5               	movf	tablat,w,c
  9147  010170  D005               	bra	u10030
  9148  010172                     u10037:
  9149  010172  CFF6 FFE1          	movff	tblptrl,fsr1l
  9150  010176  CFF7 FFE2          	movff	tblptrh,fsr1h
  9151  01017A  50E7               	movf	indf1,w,c
  9152  01017C                     u10030:
  9153  01017C  0101               	movlb	1	; () banked
  9154  01017E  6F8C               	movwf	printf@c& (0+255),b
  9155  010180  518C               	movf	printf@c& (0+255),w,b
  9156                           
  9157                           ; Switch size 1, requested type "space"
  9158                           ; Number of cases is 4, Range of values is 0 to 105
  9159                           ; switch strategies available:
  9160                           ; Name         Instructions Cycles
  9161                           ; simple_byte           13     7 (average)
  9162                           ;	Chosen strategy is simple_byte
  9163  010182  0A00               	xorlw	0	; case 0
  9164  010184  B4D8               	btfsc	status,2,c
  9165  010186  0012               	return	
  9166  010188  0A64               	xorlw	100	; case 100
  9167  01018A  B4D8               	btfsc	status,2,c
  9168  01018C  D006               	goto	l1078
  9169  01018E  0A02               	xorlw	2	; case 102
  9170  010190  B4D8               	btfsc	status,2,c
  9171  010192  D7AF               	goto	l1077
  9172  010194  0A0F               	xorlw	15	; case 105
  9173  010196  A4D8               	btfss	status,2,c
  9174  010198  D7D0               	goto	l1086
  9175  01019A                     l1078:
  9176                           
  9177                           ; BSR set to: 1
  9178                           ;doprnt.c: 825: if(flag & (0x700)) {
  9179                           
  9180                           ; BSR set to: 1
  9181  01019A  0E07               	movlw	7
  9182  01019C  157C               	andwf	(printf@flag+1)& (0+255),w,b
  9183  01019E  B4D8               	btfsc	status,2,c
  9184  0101A0  D2C1               	goto	l1087
  9185                           
  9186                           ; BSR set to: 1
  9187                           ;doprnt.c: 827: if(flag & 0x1000)
  9188  0101A2  A97C               	btfss	(printf@flag+1)& (0+255),4,b
  9189  0101A4  D004               	goto	l1088
  9190                           
  9191                           ; BSR set to: 1
  9192                           ;doprnt.c: 829: prec = 6;
  9193  0101A6  0E00               	movlw	0
  9194  0101A8  6F8B               	movwf	(printf@prec+1)& (0+255),b
  9195  0101AA  0E06               	movlw	6
  9196  0101AC  6F8A               	movwf	printf@prec& (0+255),b
  9197  0101AE                     l1088:
  9198                           
  9199                           ; BSR set to: 1
  9200                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  9201                           
  9202                           ; BSR set to: 1
  9203  0101AE  C179  FFD9         	movff	printf@ap,fsr2l
  9204  0101B2  C17A  FFDA         	movff	printf@ap+1,fsr2h
  9205  0101B6  CFDE F187          	movff	postinc2,printf@fval
  9206  0101BA  CFDE F188          	movff	postinc2,printf@fval+1
  9207  0101BE  CFDD F189          	movff	postdec2,printf@fval+2
  9208                           
  9209                           ; BSR set to: 1
  9210  0101C2  0E03               	movlw	3
  9211  0101C4  2779               	addwf	printf@ap& (0+255),f,b
  9212  0101C6  0E00               	movlw	0
  9213  0101C8  237A               	addwfc	(printf@ap+1)& (0+255),f,b
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;doprnt.c: 831: if(fval < 0.0) {
  9217  0101CA  AF89               	btfss	(printf@fval+2)& (0+255),7,b
  9218  0101CC  D011               	goto	l1089
  9219                           
  9220                           ; BSR set to: 1
  9221                           ;doprnt.c: 832: fval = -fval;
  9222  0101CE  C187  F123         	movff	printf@fval,___ftneg@f1
  9223  0101D2  C188  F124         	movff	printf@fval+1,___ftneg@f1+1
  9224  0101D6  C189  F125         	movff	printf@fval+2,___ftneg@f1+2
  9225  0101DA  EC9E  F0AE         	call	___ftneg	;wreg free
  9226  0101DE  C123  F187         	movff	?___ftneg,printf@fval
  9227  0101E2  C124  F188         	movff	?___ftneg+1,printf@fval+1
  9228  0101E6  C125  F189         	movff	?___ftneg+2,printf@fval+2
  9229                           
  9230                           ;doprnt.c: 833: flag |= 0x03;
  9231  0101EA  0E03               	movlw	3
  9232  0101EC  0101               	movlb	1	; () banked
  9233  0101EE  137B               	iorwf	printf@flag& (0+255),f,b
  9234  0101F0                     l1089:
  9235                           
  9236                           ; BSR set to: 1
  9237                           ;doprnt.c: 834: }
  9238                           ;doprnt.c: 835: exp = 0;
  9239                           
  9240                           ; BSR set to: 1
  9241  0101F0  0E00               	movlw	0
  9242  0101F2  6F7E               	movwf	(printf@exp+1)& (0+255),b
  9243  0101F4  0E00               	movlw	0
  9244  0101F6  6F7D               	movwf	printf@exp& (0+255),b
  9245                           
  9246                           ; BSR set to: 1
  9247                           ;doprnt.c: 836: if( fval!=0) {
  9248  0101F8  5187               	movf	printf@fval& (0+255),w,b
  9249  0101FA  1188               	iorwf	(printf@fval+1)& (0+255),w,b
  9250  0101FC  1189               	iorwf	(printf@fval+2)& (0+255),w,b
  9251  0101FE  B4D8               	btfsc	status,2,c
  9252  010200  D088               	goto	l1094
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  9256  010202  0E82               	movlw	130
  9257  010204  6F6C               	movwf	??_printf& (0+255),b
  9258  010206  0EFF               	movlw	255
  9259  010208  6F6D               	movwf	(??_printf+1)& (0+255),b
  9260  01020A  C187  F16E         	movff	printf@fval,??_printf+2
  9261  01020E  C188  F16F         	movff	printf@fval+1,??_printf+3
  9262  010212  C189  F170         	movff	printf@fval+2,??_printf+4
  9263  010216  C18A  F171         	movff	printf@fval+3,??_printf+5
  9264  01021A  0E10               	movlw	16
  9265  01021C  D005               	goto	u10080
  9266  01021E                     u10085:
  9267  01021E  90D8               	bcf	status,0,c
  9268  010220  3371               	rrcf	(??_printf+5)& (0+255),f,b
  9269  010222  3370               	rrcf	(??_printf+4)& (0+255),f,b
  9270  010224  336F               	rrcf	(??_printf+3)& (0+255),f,b
  9271  010226  336E               	rrcf	(??_printf+2)& (0+255),f,b
  9272  010228                     u10080:
  9273  010228  2EE8               	decfsz	wreg,f,c
  9274  01022A  D7F9               	goto	u10085
  9275  01022C  516E               	movf	(??_printf+2)& (0+255),w,b
  9276  01022E  256C               	addwf	??_printf& (0+255),w,b
  9277  010230  6F7D               	movwf	printf@exp& (0+255),b
  9278  010232  0E00               	movlw	0
  9279  010234  216D               	addwfc	(??_printf+1)& (0+255),w,b
  9280  010236  6F7E               	movwf	(printf@exp+1)& (0+255),b
  9281                           
  9282                           ; BSR set to: 1
  9283                           ;doprnt.c: 838: exp--;
  9284  010238  077D               	decf	printf@exp& (0+255),f,b
  9285  01023A  A0D8               	btfss	status,0,c
  9286  01023C  077E               	decf	(printf@exp+1)& (0+255),f,b
  9287                           
  9288                           ; BSR set to: 1
  9289                           ;doprnt.c: 839: exp *= 3;
  9290  01023E  C17D  F125         	movff	printf@exp,___wmul@multiplier
  9291  010242  C17E  F126         	movff	printf@exp+1,___wmul@multiplier+1
  9292  010246  0E00               	movlw	0
  9293  010248  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9294  01024A  0E03               	movlw	3
  9295  01024C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9296  01024E  EC62  F0AE         	call	___wmul	;wreg free
  9297  010252  C125  F17D         	movff	?___wmul,printf@exp
  9298  010256  C126  F17E         	movff	?___wmul+1,printf@exp+1
  9299                           
  9300                           ;doprnt.c: 840: exp /= 10;
  9301  01025A  C17D  F11D         	movff	printf@exp,___awdiv@dividend
  9302  01025E  C17E  F11E         	movff	printf@exp+1,___awdiv@dividend+1
  9303  010262  0E00               	movlw	0
  9304  010264  0101               	movlb	1	; () banked
  9305  010266  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
  9306  010268  0E0A               	movlw	10
  9307  01026A  6F1F               	movwf	___awdiv@divisor& (0+255),b
  9308  01026C  ECD8  F0A7         	call	___awdiv	;wreg free
  9309  010270  C11D  F17D         	movff	?___awdiv,printf@exp
  9310  010274  C11E  F17E         	movff	?___awdiv+1,printf@exp+1
  9311                           
  9312                           ;doprnt.c: 841: if(exp < 0)
  9313  010278  0101               	movlb	1	; () banked
  9314  01027A  AF7E               	btfss	(printf@exp+1)& (0+255),7,b
  9315  01027C  D003               	goto	l1091
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;doprnt.c: 842: exp--;
  9319  01027E  077D               	decf	printf@exp& (0+255),f,b
  9320  010280  A0D8               	btfss	status,0,c
  9321  010282  077E               	decf	(printf@exp+1)& (0+255),f,b
  9322  010284                     l1091:
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9326                           
  9327                           ; BSR set to: 1
  9328  010284  517D               	movf	printf@exp& (0+255),w,b
  9329  010286  0800               	sublw	0
  9330  010288  ECB4  F08C         	call	_scale
  9331  01028C  C155  F17F         	movff	?_scale,printf@tmpval
  9332  010290  C156  F180         	movff	?_scale+1,printf@tmpval+1
  9333  010294  C157  F181         	movff	?_scale+2,printf@tmpval+2
  9334                           
  9335                           ;doprnt.c: 847: tmpval.integ *= fval;
  9336  010298  C17F  F146         	movff	printf@tmpval,___ftmul@f1
  9337  01029C  C180  F147         	movff	printf@tmpval+1,___ftmul@f1+1
  9338  0102A0  C181  F148         	movff	printf@tmpval+2,___ftmul@f1+2
  9339  0102A4  C187  F149         	movff	printf@fval,___ftmul@f2
  9340  0102A8  C188  F14A         	movff	printf@fval+1,___ftmul@f2+1
  9341  0102AC  C189  F14B         	movff	printf@fval+2,___ftmul@f2+2
  9342  0102B0  EC60  F0A1         	call	___ftmul	;wreg free
  9343  0102B4  C146  F17F         	movff	?___ftmul,printf@tmpval
  9344  0102B8  C147  F180         	movff	?___ftmul+1,printf@tmpval+1
  9345  0102BC  C148  F181         	movff	?___ftmul+2,printf@tmpval+2
  9346                           
  9347                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9348  0102C0  C17F  F117         	movff	printf@tmpval,___ftge@ff1
  9349  0102C4  C180  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9350  0102C8  C181  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9351  0102CC  0E00               	movlw	0
  9352  0102CE  0101               	movlb	1	; () banked
  9353  0102D0  6F1A               	movwf	___ftge@ff2& (0+255),b
  9354  0102D2  0E80               	movlw	128
  9355  0102D4  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9356  0102D6  0E3F               	movlw	63
  9357  0102D8  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9358  0102DA  ECB9  F0A6         	call	___ftge	;wreg free
  9359  0102DE  0101               	movlb	1	; () banked
  9360  0102E0  B0D8               	btfsc	status,0,c
  9361  0102E2  D004               	goto	l1092
  9362                           
  9363                           ; BSR set to: 1
  9364                           ;doprnt.c: 849: exp--;
  9365  0102E4  077D               	decf	printf@exp& (0+255),f,b
  9366  0102E6  A0D8               	btfss	status,0,c
  9367  0102E8  077E               	decf	(printf@exp+1)& (0+255),f,b
  9368  0102EA  D013               	goto	l1094
  9369  0102EC                     l1092:
  9370                           
  9371                           ; BSR set to: 1
  9372                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9373                           
  9374                           ; BSR set to: 1
  9375  0102EC  C17F  F117         	movff	printf@tmpval,___ftge@ff1
  9376  0102F0  C180  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9377  0102F4  C181  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9378  0102F8  0E00               	movlw	0
  9379  0102FA  6F1A               	movwf	___ftge@ff2& (0+255),b
  9380  0102FC  0E20               	movlw	32
  9381  0102FE  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9382  010300  0E41               	movlw	65
  9383  010302  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9384  010304  ECB9  F0A6         	call	___ftge	;wreg free
  9385  010308  0101               	movlb	1	; () banked
  9386  01030A  A0D8               	btfss	status,0,c
  9387  01030C  D002               	goto	l1094
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;doprnt.c: 851: exp++;
  9391  01030E  4B7D               	infsnz	printf@exp& (0+255),f,b
  9392  010310  2B7E               	incf	(printf@exp+1)& (0+255),f,b
  9393  010312                     l1094:
  9394                           
  9395                           ; BSR set to: 1
  9396                           ;doprnt.c: 852: }
  9397                           ;doprnt.c: 1112: if(prec <= 12)
  9398                           
  9399                           ; BSR set to: 1
  9400                           
  9401                           ; BSR set to: 1
  9402                           
  9403                           ; BSR set to: 1
  9404  010312  BF8B               	btfsc	(printf@prec+1)& (0+255),7,b
  9405  010314  D006               	goto	u10120
  9406  010316  518B               	movf	(printf@prec+1)& (0+255),w,b
  9407  010318  E11B               	bnz	l8621
  9408  01031A  0E0D               	movlw	13
  9409  01031C  5D8A               	subwf	printf@prec& (0+255),w,b
  9410  01031E  B0D8               	btfsc	status,0,c
  9411  010320  D017               	goto	l1095
  9412  010322                     u10120:
  9413                           
  9414                           ; BSR set to: 1
  9415                           ;doprnt.c: 1113: fval += fround(prec);
  9416  010322  C187  F12B         	movff	printf@fval,___ftadd@f1
  9417  010326  C188  F12C         	movff	printf@fval+1,___ftadd@f1+1
  9418  01032A  C189  F12D         	movff	printf@fval+2,___ftadd@f1+2
  9419  01032E  518A               	movf	printf@prec& (0+255),w,b
  9420  010330  ECD7  F094         	call	_fround
  9421  010334  C155  F12E         	movff	?_fround,___ftadd@f2
  9422  010338  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
  9423  01033C  C157  F130         	movff	?_fround+2,___ftadd@f2+2
  9424  010340  EC84  F09B         	call	___ftadd	;wreg free
  9425  010344  C12B  F187         	movff	?___ftadd,printf@fval
  9426  010348  C12C  F188         	movff	?___ftadd+1,printf@fval+1
  9427  01034C  C12D  F189         	movff	?___ftadd+2,printf@fval+2
  9428  010350                     l1095:
  9429  010350                     l8621:
  9430                           
  9431                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9432  010350  0101               	movlb	1	; () banked
  9433  010352  BF7E               	btfsc	(printf@exp+1)& (0+255),7,b
  9434  010354  D006               	goto	u10130
  9435  010356  517E               	movf	(printf@exp+1)& (0+255),w,b
  9436  010358  E11F               	bnz	l8629
  9437  01035A  0E0A               	movlw	10
  9438  01035C  5D7D               	subwf	printf@exp& (0+255),w,b
  9439  01035E  B0D8               	btfsc	status,0,c
  9440  010360  D01B               	goto	u10160
  9441  010362                     u10130:
  9442                           
  9443                           ; BSR set to: 1
  9444  010362  5187               	movf	printf@fval& (0+255),w,b
  9445  010364  1188               	iorwf	(printf@fval+1)& (0+255),w,b
  9446  010366  1189               	iorwf	(printf@fval+2)& (0+255),w,b
  9447  010368  B4D8               	btfsc	status,2,c
  9448  01036A  D054               	goto	l1096
  9449                           
  9450                           ; BSR set to: 1
  9451  01036C  C187  F155         	movff	printf@fval,___fttol@f1
  9452  010370  C188  F156         	movff	printf@fval+1,___fttol@f1+1
  9453  010374  C189  F157         	movff	printf@fval+2,___fttol@f1+2
  9454  010378  ECE4  F0A0         	call	___fttol	;wreg free
  9455  01037C  0101               	movlb	1	; () banked
  9456  01037E  5155               	movf	?___fttol& (0+255),w,b
  9457  010380  1156               	iorwf	(?___fttol+1)& (0+255),w,b
  9458  010382  1157               	iorwf	(?___fttol+2)& (0+255),w,b
  9459  010384  1158               	iorwf	(?___fttol+3)& (0+255),w,b
  9460  010386  B4D8               	btfsc	status,2,c
  9461                           
  9462                           ; BSR set to: 1
  9463  010388  BF7E               	btfsc	(printf@exp+1)& (0+255),7,b
  9464  01038A  D044               	goto	l1096
  9465  01038C  517E               	movf	(printf@exp+1)& (0+255),w,b
  9466  01038E  E104               	bnz	l8629
  9467  010390  0E02               	movlw	2
  9468  010392  5D7D               	subwf	printf@exp& (0+255),w,b
  9469  010394  A0D8               	btfss	status,0,c
  9470  010396  D03E               	goto	l1096
  9471  010398                     u10160:
  9472  010398                     l8629:
  9473                           
  9474                           ; BSR set to: 1
  9475                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9476  010398  C17F  F117         	movff	printf@tmpval,___ftge@ff1
  9477  01039C  C180  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9478  0103A0  C181  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9479  0103A4  0E70               	movlw	112
  9480  0103A6  6F1A               	movwf	___ftge@ff2& (0+255),b
  9481  0103A8  0E89               	movlw	137
  9482  0103AA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9483  0103AC  0E40               	movlw	64
  9484  0103AE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9485  0103B0  ECB9  F0A6         	call	___ftge	;wreg free
  9486  0103B4  0101               	movlb	1	; () banked
  9487  0103B6  B0D8               	btfsc	status,0,c
  9488  0103B8  D002               	goto	l1099
  9489                           
  9490                           ; BSR set to: 1
  9491                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9492  0103BA  0EF7               	movlw	247
  9493  0103BC  D001               	goto	L1
  9494  0103BE                     l1099:
  9495                           
  9496                           ; BSR set to: 1
  9497                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9498                           
  9499                           ; BSR set to: 1
  9500  0103BE  0EF8               	movlw	248
  9501  0103C0                     L1:
  9502  0103C0  277D               	addwf	printf@exp& (0+255),f,b
  9503  0103C2  0EFF               	movlw	255
  9504  0103C4  237E               	addwfc	(printf@exp+1)& (0+255),f,b
  9505                           
  9506                           ; BSR set to: 1
  9507                           ;doprnt.c: 1124: }
  9508                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  9509                           
  9510                           ; BSR set to: 1
  9511  0103C6  517D               	movf	printf@exp& (0+255),w,b
  9512  0103C8  ECB4  F08C         	call	_scale
  9513  0103CC  C155  F17F         	movff	?_scale,printf@tmpval
  9514  0103D0  C156  F180         	movff	?_scale+1,printf@tmpval+1
  9515  0103D4  C157  F181         	movff	?_scale+2,printf@tmpval+2
  9516                           
  9517                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9518  0103D8  C187  F117         	movff	printf@fval,__tdiv_to_l_@f1
  9519  0103DC  C188  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  9520  0103E0  C189  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  9521  0103E4  C17F  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
  9522  0103E8  C180  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  9523  0103EC  C181  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  9524  0103F0  ECFA  F09D         	call	__tdiv_to_l_	;wreg free
  9525  0103F4  C117  F183         	movff	?__tdiv_to_l_,printf@val
  9526  0103F8  C118  F184         	movff	?__tdiv_to_l_+1,printf@val+1
  9527  0103FC  C119  F185         	movff	?__tdiv_to_l_+2,printf@val+2
  9528  010400  C11A  F186         	movff	?__tdiv_to_l_+3,printf@val+3
  9529                           
  9530                           ;doprnt.c: 1129: fval = 0.0;
  9531  010404  0E00               	movlw	0
  9532  010406  0101               	movlb	1	; () banked
  9533  010408  6F87               	movwf	printf@fval& (0+255),b
  9534  01040A  0E00               	movlw	0
  9535  01040C  6F88               	movwf	(printf@fval+1)& (0+255),b
  9536  01040E  0E00               	movlw	0
  9537  010410  6F89               	movwf	(printf@fval+2)& (0+255),b
  9538                           
  9539                           ;doprnt.c: 1130: } else {
  9540  010412  D033               	goto	l1105
  9541  010414                     l1096:
  9542                           
  9543                           ; BSR set to: 1
  9544                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9545                           
  9546                           ; BSR set to: 1
  9547  010414  C187  F155         	movff	printf@fval,___fttol@f1
  9548  010418  C188  F156         	movff	printf@fval+1,___fttol@f1+1
  9549  01041C  C189  F157         	movff	printf@fval+2,___fttol@f1+2
  9550  010420  ECE4  F0A0         	call	___fttol	;wreg free
  9551  010424  C155  F183         	movff	?___fttol,printf@val
  9552  010428  C156  F184         	movff	?___fttol+1,printf@val+1
  9553  01042C  C157  F185         	movff	?___fttol+2,printf@val+2
  9554  010430  C158  F186         	movff	?___fttol+3,printf@val+3
  9555                           
  9556                           ;doprnt.c: 1132: fval -= (double)val;
  9557  010434  C187  F137         	movff	printf@fval,___ftsub@f1
  9558  010438  C188  F138         	movff	printf@fval+1,___ftsub@f1+1
  9559  01043C  C189  F139         	movff	printf@fval+2,___ftsub@f1+2
  9560  010440  C183  F11F         	movff	printf@val,___lltoft@c
  9561  010444  C184  F120         	movff	printf@val+1,___lltoft@c+1
  9562  010448  C185  F121         	movff	printf@val+2,___lltoft@c+2
  9563  01044C  C186  F122         	movff	printf@val+3,___lltoft@c+3
  9564  010450  EC32  F0AB         	call	___lltoft	;wreg free
  9565  010454  C11F  F13A         	movff	?___lltoft,___ftsub@f2
  9566  010458  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
  9567  01045C  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
  9568  010460  EC3B  F0AD         	call	___ftsub	;wreg free
  9569  010464  C137  F187         	movff	?___ftsub,printf@fval
  9570  010468  C138  F188         	movff	?___ftsub+1,printf@fval+1
  9571  01046C  C139  F189         	movff	?___ftsub+2,printf@fval+2
  9572                           
  9573                           ;doprnt.c: 1133: exp = 0;
  9574  010470  0E00               	movlw	0
  9575  010472  0101               	movlb	1	; () banked
  9576  010474  6F7E               	movwf	(printf@exp+1)& (0+255),b
  9577  010476  0E00               	movlw	0
  9578  010478  6F7D               	movwf	printf@exp& (0+255),b
  9579  01047A                     l1105:
  9580                           
  9581                           ; BSR set to: 1
  9582                           ;doprnt.c: 1134: }
  9583                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9584                           
  9585                           ; BSR set to: 1
  9586  01047A  0E01               	movlw	1
  9587  01047C  6F8C               	movwf	printf@c& (0+255),b
  9588  01047E                     l8649:
  9589                           
  9590                           ; BSR set to: 1
  9591  01047E  0E0A               	movlw	10
  9592  010480  198C               	xorwf	printf@c& (0+255),w,b
  9593  010482  B4D8               	btfsc	status,2,c
  9594  010484  D01B               	goto	u10200
  9595                           
  9596                           ; BSR set to: 1
  9597                           ;doprnt.c: 1137: if(val < dpowers[c])
  9598                           
  9599                           ; BSR set to: 1
  9600                           
  9601                           ; BSR set to: 1
  9602  010486  518C               	movf	printf@c& (0+255),w,b
  9603  010488  0D04               	mullw	4
  9604  01048A  0E59               	movlw	low _dpowers
  9605  01048C  24F3               	addwf	prodl,w,c
  9606  01048E  6EF6               	movwf	tblptrl,c
  9607  010490  0EF4               	movlw	high _dpowers
  9608  010492  20F4               	addwfc	prodh,w,c
  9609  010494  6EF7               	movwf	tblptrh,c
  9610  010496                     	if	1	;There are 3 active tblptr bytes
  9611  010496  6AF8               	clrf	tblptru,c
  9612  010498  0E00               	movlw	low (__mediumconst shr (0+16))
  9613  01049A  22F8               	addwfc	tblptru,f,c
  9614  01049C                     	endif
  9615  01049C  0009               	tblrd		*+
  9616  01049E  50F5               	movf	tablat,w,c
  9617  0104A0  5D83               	subwf	printf@val& (0+255),w,b
  9618  0104A2  0009               	tblrd		*+
  9619  0104A4  50F5               	movf	tablat,w,c
  9620  0104A6  5984               	subwfb	(printf@val+1)& (0+255),w,b
  9621  0104A8  0009               	tblrd		*+
  9622  0104AA  50F5               	movf	tablat,w,c
  9623  0104AC  5985               	subwfb	(printf@val+2)& (0+255),w,b
  9624  0104AE  0009               	tblrd		*+
  9625  0104B0  50F5               	movf	tablat,w,c
  9626  0104B2  5986               	subwfb	(printf@val+3)& (0+255),w,b
  9627  0104B4  A0D8               	btfss	status,0,c
  9628  0104B6  D002               	goto	u10200
  9629                           
  9630                           ; BSR set to: 1
  9631                           
  9632                           ; BSR set to: 1
  9633                           
  9634                           ; BSR set to: 1
  9635                           ;doprnt.c: 1138: break;
  9636  0104B8  2B8C               	incf	printf@c& (0+255),f,b
  9637  0104BA  D7E1               	goto	l8649
  9638  0104BC                     u10200:
  9639                           
  9640                           ; BSR set to: 1
  9641                           ;doprnt.c: 1175: {
  9642                           ;doprnt.c: 1188: if(flag & 0x03)
  9643                           
  9644                           ; BSR set to: 1
  9645  0104BC  0E03               	movlw	3
  9646  0104BE  157B               	andwf	printf@flag& (0+255),w,b
  9647  0104C0  6F6C               	movwf	??_printf& (0+255),b
  9648  0104C2  0E00               	movlw	0
  9649  0104C4  157C               	andwf	(printf@flag+1)& (0+255),w,b
  9650  0104C6  6F6D               	movwf	(??_printf+1)& (0+255),b
  9651  0104C8  516C               	movf	??_printf& (0+255),w,b
  9652  0104CA  116D               	iorwf	(??_printf+1)& (0+255),w,b
  9653  0104CC  B4D8               	btfsc	status,2,c
  9654  0104CE  D04E               	goto	l1110
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;doprnt.c: 1190: (putch('-') );
  9658  0104D0  0E2D               	movlw	45
  9659  0104D2  EC79  F0AF         	call	_putch
  9660                           
  9661                           ;doprnt.c: 1195: }
  9662                           ;doprnt.c: 1196: while(c--) {
  9663  0104D6  D04A               	goto	l1110
  9664  0104D8                     
  9665                           ;doprnt.c: 1200: {
  9666                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9667  0104D8  C183  F117         	movff	printf@val,___lldiv@dividend
  9668  0104DC  C184  F118         	movff	printf@val+1,___lldiv@dividend+1
  9669  0104E0  C185  F119         	movff	printf@val+2,___lldiv@dividend+2
  9670  0104E4  C186  F11A         	movff	printf@val+3,___lldiv@dividend+3
  9671  0104E8  0101               	movlb	1	; () banked
  9672  0104EA  518C               	movf	printf@c& (0+255),w,b
  9673  0104EC  0D04               	mullw	4
  9674  0104EE  0E59               	movlw	low _dpowers
  9675  0104F0  24F3               	addwf	prodl,w,c
  9676  0104F2  6EF6               	movwf	tblptrl,c
  9677  0104F4  0EF4               	movlw	high _dpowers
  9678  0104F6  20F4               	addwfc	prodh,w,c
  9679  0104F8  6EF7               	movwf	tblptrh,c
  9680  0104FA                     	if	1	;There are 3 active tblptr bytes
  9681  0104FA  6AF8               	clrf	tblptru,c
  9682  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
  9683  0104FE  22F8               	addwfc	tblptru,f,c
  9684  010500                     	endif
  9685  010500  0009               	tblrd		*+
  9686  010502  CFF5 F11B          	movff	tablat,___lldiv@divisor
  9687  010506  0009               	tblrd		*+
  9688  010508  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
  9689  01050C  0009               	tblrd		*+
  9690  01050E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
  9691  010512  000A               	tblrd		*-
  9692  010514  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
  9693  010518  EC1B  F0A8         	call	___lldiv	;wreg free
  9694  01051C  C117  F17F         	movff	?___lldiv,printf@tmpval
  9695  010520  C118  F180         	movff	?___lldiv+1,printf@tmpval+1
  9696  010524  C119  F181         	movff	?___lldiv+2,printf@tmpval+2
  9697  010528  C11A  F182         	movff	?___lldiv+3,printf@tmpval+3
  9698                           
  9699                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9700  01052C  C17F  F124         	movff	printf@tmpval,___llmod@dividend
  9701  010530  C180  F125         	movff	printf@tmpval+1,___llmod@dividend+1
  9702  010534  C181  F126         	movff	printf@tmpval+2,___llmod@dividend+2
  9703  010538  C182  F127         	movff	printf@tmpval+3,___llmod@dividend+3
  9704  01053C  0E0A               	movlw	10
  9705  01053E  0101               	movlb	1	; () banked
  9706  010540  6F28               	movwf	___llmod@divisor& (0+255),b
  9707  010542  0E00               	movlw	0
  9708  010544  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
  9709  010546  0E00               	movlw	0
  9710  010548  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
  9711  01054A  0E00               	movlw	0
  9712  01054C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
  9713  01054E  EC36  F0AA         	call	___llmod	;wreg free
  9714  010552  C124  F17F         	movff	?___llmod,printf@tmpval
  9715  010556  C125  F180         	movff	?___llmod+1,printf@tmpval+1
  9716  01055A  C126  F181         	movff	?___llmod+2,printf@tmpval+2
  9717  01055E  C127  F182         	movff	?___llmod+3,printf@tmpval+3
  9718                           
  9719                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  9720  010562  0101               	movlb	1	; () banked
  9721  010564  517F               	movf	printf@tmpval& (0+255),w,b
  9722  010566  0F30               	addlw	48
  9723  010568  EC79  F0AF         	call	_putch
  9724  01056C                     l1110:
  9725  01056C  0101               	movlb	1	; () banked
  9726  01056E  078C               	decf	printf@c& (0+255),f,b
  9727  010570  298C               	incf	printf@c& (0+255),w,b
  9728  010572  B4D8               	btfsc	status,2,c
  9729  010574  D008               	goto	l1113
  9730  010576  D7B0               	goto	l1111
  9731  010578                     l8673:
  9732                           
  9733                           ; BSR set to: 1
  9734                           ;doprnt.c: 1208: (putch('0') );
  9735  010578  0E30               	movlw	48
  9736  01057A  EC79  F0AF         	call	_putch
  9737                           
  9738                           ;doprnt.c: 1209: exp--;
  9739  01057E  0101               	movlb	1	; () banked
  9740  010580  077D               	decf	printf@exp& (0+255),f,b
  9741  010582  A0D8               	btfss	status,0,c
  9742  010584  077E               	decf	(printf@exp+1)& (0+255),f,b
  9743  010586                     l1113:
  9744                           
  9745                           ; BSR set to: 1
  9746                           
  9747                           ; BSR set to: 1
  9748  010586  BF7E               	btfsc	(printf@exp+1)& (0+255),7,b
  9749  010588  D005               	goto	u10230
  9750  01058A  517E               	movf	(printf@exp+1)& (0+255),w,b
  9751  01058C  E1F5               	bnz	l8673
  9752  01058E  057D               	decf	printf@exp& (0+255),w,b
  9753  010590  B0D8               	btfsc	status,0,c
  9754  010592  D7F2               	goto	l1114
  9755  010594                     u10230:
  9756                           
  9757                           ; BSR set to: 1
  9758                           ;doprnt.c: 1210: }
  9759                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9760                           
  9761                           ; BSR set to: 1
  9762  010594  BF8B               	btfsc	(printf@prec+1)& (0+255),7,b
  9763  010596  D009               	goto	l1116
  9764  010598  518B               	movf	(printf@prec+1)& (0+255),w,b
  9765  01059A  E104               	bnz	u10240
  9766  01059C  0E09               	movlw	9
  9767  01059E  5D8A               	subwf	printf@prec& (0+255),w,b
  9768  0105A0  A0D8               	btfss	status,0,c
  9769  0105A2  D003               	goto	l1116
  9770  0105A4                     u10240:
  9771                           
  9772                           ; BSR set to: 1
  9773                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9774  0105A4  0E08               	movlw	8
  9775  0105A6  6F8C               	movwf	printf@c& (0+255),b
  9776  0105A8  D002               	goto	l1117
  9777  0105AA                     l1116:
  9778                           
  9779                           ; BSR set to: 1
  9780                           ;doprnt.c: 1213: else
  9781                           ;doprnt.c: 1214: c = prec;
  9782  0105AA  C18A  F18C         	movff	printf@prec,printf@c
  9783  0105AE                     l1117:
  9784                           
  9785                           ; BSR set to: 1
  9786                           ;doprnt.c: 1215: prec -= c;
  9787                           
  9788                           ; BSR set to: 1
  9789  0105AE  518C               	movf	printf@c& (0+255),w,b
  9790  0105B0  5F8A               	subwf	printf@prec& (0+255),f,b
  9791  0105B2  0E00               	movlw	0
  9792  0105B4  BF8C               	btfsc	printf@c& (0+255),7,b
  9793  0105B6  0EFF               	movlw	255
  9794  0105B8  5B8B               	subwfb	(printf@prec+1)& (0+255),f,b
  9795                           
  9796                           ; BSR set to: 1
  9797                           ;doprnt.c: 1219: if(c)
  9798  0105BA  518C               	movf	printf@c& (0+255),w,b
  9799  0105BC  B4D8               	btfsc	status,2,c
  9800  0105BE  D003               	goto	l1118
  9801                           
  9802                           ; BSR set to: 1
  9803                           ;doprnt.c: 1221: (putch('.') );
  9804  0105C0  0E2E               	movlw	46
  9805  0105C2  EC79  F0AF         	call	_putch
  9806  0105C6                     l1118:
  9807                           
  9808                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9809  0105C6  0101               	movlb	1	; () banked
  9810  0105C8  518C               	movf	printf@c& (0+255),w,b
  9811  0105CA  ECB4  F08C         	call	_scale
  9812  0105CE  C155  F172         	movff	?_scale,_printf$3129
  9813  0105D2  C156  F173         	movff	?_scale+1,_printf$3129+1
  9814  0105D6  C157  F174         	movff	?_scale+2,_printf$3129+2
  9815                           
  9816                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9817  0105DA  C187  F149         	movff	printf@fval,___ftmul@f2
  9818  0105DE  C188  F14A         	movff	printf@fval+1,___ftmul@f2+1
  9819  0105E2  C189  F14B         	movff	printf@fval+2,___ftmul@f2+2
  9820  0105E6  C172  F146         	movff	_printf$3129,___ftmul@f1
  9821  0105EA  C173  F147         	movff	_printf$3129+1,___ftmul@f1+1
  9822  0105EE  C174  F148         	movff	_printf$3129+2,___ftmul@f1+2
  9823  0105F2  EC60  F0A1         	call	___ftmul	;wreg free
  9824  0105F6  C146  F155         	movff	?___ftmul,___fttol@f1
  9825  0105FA  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
  9826  0105FE  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
  9827  010602  ECE4  F0A0         	call	___fttol	;wreg free
  9828  010606  C155  F183         	movff	?___fttol,printf@val
  9829  01060A  C156  F184         	movff	?___fttol+1,printf@val+1
  9830  01060E  C157  F185         	movff	?___fttol+2,printf@val+2
  9831  010612  C158  F186         	movff	?___fttol+3,printf@val+3
  9832                           
  9833                           ;doprnt.c: 1228: while(c--) {
  9834  010616  D074               	goto	l1119
  9835  010618                     
  9836                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9837  010618  C183  F117         	movff	printf@val,___lldiv@dividend
  9838  01061C  C184  F118         	movff	printf@val+1,___lldiv@dividend+1
  9839  010620  C185  F119         	movff	printf@val+2,___lldiv@dividend+2
  9840  010624  C186  F11A         	movff	printf@val+3,___lldiv@dividend+3
  9841  010628  0101               	movlb	1	; () banked
  9842  01062A  518C               	movf	printf@c& (0+255),w,b
  9843  01062C  0D04               	mullw	4
  9844  01062E  0E59               	movlw	low _dpowers
  9845  010630  24F3               	addwf	prodl,w,c
  9846  010632  6EF6               	movwf	tblptrl,c
  9847  010634  0EF4               	movlw	high _dpowers
  9848  010636  20F4               	addwfc	prodh,w,c
  9849  010638  6EF7               	movwf	tblptrh,c
  9850  01063A                     	if	1	;There are 3 active tblptr bytes
  9851  01063A  6AF8               	clrf	tblptru,c
  9852  01063C  0E00               	movlw	low (__mediumconst shr (0+16))
  9853  01063E  22F8               	addwfc	tblptru,f,c
  9854  010640                     	endif
  9855  010640  0009               	tblrd		*+
  9856  010642  CFF5 F11B          	movff	tablat,___lldiv@divisor
  9857  010646  0009               	tblrd		*+
  9858  010648  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
  9859  01064C  0009               	tblrd		*+
  9860  01064E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
  9861  010652  000A               	tblrd		*-
  9862  010654  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
  9863  010658  EC1B  F0A8         	call	___lldiv	;wreg free
  9864  01065C  C117  F17F         	movff	?___lldiv,printf@tmpval
  9865  010660  C118  F180         	movff	?___lldiv+1,printf@tmpval+1
  9866  010664  C119  F181         	movff	?___lldiv+2,printf@tmpval+2
  9867  010668  C11A  F182         	movff	?___lldiv+3,printf@tmpval+3
  9868                           
  9869                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9870  01066C  C17F  F124         	movff	printf@tmpval,___llmod@dividend
  9871  010670  C180  F125         	movff	printf@tmpval+1,___llmod@dividend+1
  9872  010674  C181  F126         	movff	printf@tmpval+2,___llmod@dividend+2
  9873  010678  C182  F127         	movff	printf@tmpval+3,___llmod@dividend+3
  9874  01067C  0E0A               	movlw	10
  9875  01067E  0101               	movlb	1	; () banked
  9876  010680  6F28               	movwf	___llmod@divisor& (0+255),b
  9877  010682  0E00               	movlw	0
  9878  010684  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
  9879  010686  0E00               	movlw	0
  9880  010688  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
  9881  01068A  0E00               	movlw	0
  9882  01068C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
  9883  01068E  EC36  F0AA         	call	___llmod	;wreg free
  9884  010692  C124  F17F         	movff	?___llmod,printf@tmpval
  9885  010696  C125  F180         	movff	?___llmod+1,printf@tmpval+1
  9886  01069A  C126  F181         	movff	?___llmod+2,printf@tmpval+2
  9887  01069E  C127  F182         	movff	?___llmod+3,printf@tmpval+3
  9888                           
  9889                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  9890  0106A2  0101               	movlb	1	; () banked
  9891  0106A4  517F               	movf	printf@tmpval& (0+255),w,b
  9892  0106A6  0F30               	addlw	48
  9893  0106A8  EC79  F0AF         	call	_putch
  9894                           
  9895                           ;doprnt.c: 1232: val %= dpowers[c];
  9896  0106AC  C183  F124         	movff	printf@val,___llmod@dividend
  9897  0106B0  C184  F125         	movff	printf@val+1,___llmod@dividend+1
  9898  0106B4  C185  F126         	movff	printf@val+2,___llmod@dividend+2
  9899  0106B8  C186  F127         	movff	printf@val+3,___llmod@dividend+3
  9900  0106BC  0101               	movlb	1	; () banked
  9901  0106BE  518C               	movf	printf@c& (0+255),w,b
  9902  0106C0  0D04               	mullw	4
  9903  0106C2  0E59               	movlw	low _dpowers
  9904  0106C4  24F3               	addwf	prodl,w,c
  9905  0106C6  6EF6               	movwf	tblptrl,c
  9906  0106C8  0EF4               	movlw	high _dpowers
  9907  0106CA  20F4               	addwfc	prodh,w,c
  9908  0106CC  6EF7               	movwf	tblptrh,c
  9909  0106CE                     	if	1	;There are 3 active tblptr bytes
  9910  0106CE  6AF8               	clrf	tblptru,c
  9911  0106D0  0E00               	movlw	low (__mediumconst shr (0+16))
  9912  0106D2  22F8               	addwfc	tblptru,f,c
  9913  0106D4                     	endif
  9914  0106D4  0009               	tblrd		*+
  9915  0106D6  CFF5 F128          	movff	tablat,___llmod@divisor
  9916  0106DA  0009               	tblrd		*+
  9917  0106DC  CFF5 F129          	movff	tablat,___llmod@divisor+1
  9918  0106E0  0009               	tblrd		*+
  9919  0106E2  CFF5 F12A          	movff	tablat,___llmod@divisor+2
  9920  0106E6  000A               	tblrd		*-
  9921  0106E8  CFF5 F12B          	movff	tablat,___llmod@divisor+3
  9922  0106EC  EC36  F0AA         	call	___llmod	;wreg free
  9923  0106F0  C124  F183         	movff	?___llmod,printf@val
  9924  0106F4  C125  F184         	movff	?___llmod+1,printf@val+1
  9925  0106F8  C126  F185         	movff	?___llmod+2,printf@val+2
  9926  0106FC  C127  F186         	movff	?___llmod+3,printf@val+3
  9927  010700                     l1119:
  9928  010700  0101               	movlb	1	; () banked
  9929  010702  078C               	decf	printf@c& (0+255),f,b
  9930  010704  298C               	incf	printf@c& (0+255),w,b
  9931  010706  B4D8               	btfsc	status,2,c
  9932  010708  D008               	goto	l1122
  9933  01070A  D786               	goto	l1120
  9934  01070C                     
  9935                           ; BSR set to: 1
  9936                           ;doprnt.c: 1236: (putch('0') );
  9937                           
  9938                           ; BSR set to: 1
  9939  01070C  0E30               	movlw	48
  9940  01070E  EC79  F0AF         	call	_putch
  9941                           
  9942                           ;doprnt.c: 1237: prec--;
  9943  010712  0101               	movlb	1	; () banked
  9944  010714  078A               	decf	printf@prec& (0+255),f,b
  9945  010716  A0D8               	btfss	status,0,c
  9946  010718  078B               	decf	(printf@prec+1)& (0+255),f,b
  9947  01071A                     l1122:
  9948                           
  9949                           ; BSR set to: 1
  9950                           
  9951                           ; BSR set to: 1
  9952  01071A  518A               	movf	printf@prec& (0+255),w,b
  9953  01071C  118B               	iorwf	(printf@prec+1)& (0+255),w,b
  9954  01071E  B4D8               	btfsc	status,2,c
  9955  010720  D0C4               	goto	u10370
  9956  010722  D7F4               	goto	l1123
  9957  010724                     l1087:
  9958                           
  9959                           ; BSR set to: 1
  9960                           ;doprnt.c: 1246: }
  9961                           ;doprnt.c: 1253: {
  9962                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9963                           
  9964                           ; BSR set to: 1
  9965  010724  C179  FFD9         	movff	printf@ap,fsr2l
  9966  010728  C17A  FFDA         	movff	printf@ap+1,fsr2h
  9967  01072C  CFDE F183          	movff	postinc2,printf@val
  9968  010730  CFDD F184          	movff	postdec2,printf@val+1
  9969  010734  0E00               	movlw	0
  9970  010736  BF84               	btfsc	(printf@val+1)& (0+255),7,b
  9971  010738  0EFF               	movlw	-1
  9972  01073A  6F85               	movwf	(printf@val+2)& (0+255),b
  9973  01073C  6F86               	movwf	(printf@val+3)& (0+255),b
  9974                           
  9975                           ; BSR set to: 1
  9976  01073E  0E02               	movlw	2
  9977  010740  2779               	addwf	printf@ap& (0+255),f,b
  9978  010742  0E00               	movlw	0
  9979  010744  237A               	addwfc	(printf@ap+1)& (0+255),f,b
  9980                           
  9981                           ; BSR set to: 1
  9982                           ;doprnt.c: 1261: if((long)val < 0) {
  9983  010746  AF86               	btfss	(printf@val+3)& (0+255),7,b
  9984  010748  D00A               	goto	l1125
  9985                           
  9986                           ; BSR set to: 1
  9987                           ;doprnt.c: 1262: flag |= 0x03;
  9988  01074A  0E03               	movlw	3
  9989  01074C  137B               	iorwf	printf@flag& (0+255),f,b
  9990                           
  9991                           ; BSR set to: 1
  9992                           ;doprnt.c: 1263: val = -val;
  9993  01074E  1F86               	comf	(printf@val+3)& (0+255),f,b
  9994  010750  1F85               	comf	(printf@val+2)& (0+255),f,b
  9995  010752  1F84               	comf	(printf@val+1)& (0+255),f,b
  9996  010754  6D83               	negf	printf@val& (0+255),b
  9997  010756  0E00               	movlw	0
  9998  010758  2384               	addwfc	(printf@val+1)& (0+255),f,b
  9999  01075A  2385               	addwfc	(printf@val+2)& (0+255),f,b
 10000  01075C  2386               	addwfc	(printf@val+3)& (0+255),f,b
 10001  01075E                     l1125:
 10002                           
 10003                           ; BSR set to: 1
 10004                           ;doprnt.c: 1264: }
 10005                           ;doprnt.c: 1266: }
 10006                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10007                           
 10008                           ; BSR set to: 1
 10009  01075E  518A               	movf	printf@prec& (0+255),w,b
 10010  010760  118B               	iorwf	(printf@prec+1)& (0+255),w,b
 10011  010762  A4D8               	btfss	status,2,c
 10012  010764  D008               	goto	l1126
 10013                           
 10014                           ; BSR set to: 1
 10015  010766  5183               	movf	printf@val& (0+255),w,b
 10016  010768  1184               	iorwf	(printf@val+1)& (0+255),w,b
 10017  01076A  1185               	iorwf	(printf@val+2)& (0+255),w,b
 10018  01076C  1186               	iorwf	(printf@val+3)& (0+255),w,b
 10019  01076E  A4D8               	btfss	status,2,c
 10020  010770  D002               	goto	l1126
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;doprnt.c: 1291: prec++;
 10024  010772  4B8A               	infsnz	printf@prec& (0+255),f,b
 10025  010774  2B8B               	incf	(printf@prec+1)& (0+255),f,b
 10026  010776                     l1126:
 10027                           
 10028                           ; BSR set to: 1
 10029                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10030                           
 10031                           ; BSR set to: 1
 10032  010776  0E01               	movlw	1
 10033  010778  6F8C               	movwf	printf@c& (0+255),b
 10034  01077A                     l8727:
 10035                           
 10036                           ; BSR set to: 1
 10037  01077A  0E0A               	movlw	10
 10038  01077C  198C               	xorwf	printf@c& (0+255),w,b
 10039  01077E  B4D8               	btfsc	status,2,c
 10040  010780  D01B               	goto	u10330
 10041                           
 10042                           ; BSR set to: 1
 10043                           ;doprnt.c: 1306: if(val < dpowers[c])
 10044                           
 10045                           ; BSR set to: 1
 10046                           
 10047                           ; BSR set to: 1
 10048  010782  518C               	movf	printf@c& (0+255),w,b
 10049  010784  0D04               	mullw	4
 10050  010786  0E59               	movlw	low _dpowers
 10051  010788  24F3               	addwf	prodl,w,c
 10052  01078A  6EF6               	movwf	tblptrl,c
 10053  01078C  0EF4               	movlw	high _dpowers
 10054  01078E  20F4               	addwfc	prodh,w,c
 10055  010790  6EF7               	movwf	tblptrh,c
 10056  010792                     	if	1	;There are 3 active tblptr bytes
 10057  010792  6AF8               	clrf	tblptru,c
 10058  010794  0E00               	movlw	low (__mediumconst shr (0+16))
 10059  010796  22F8               	addwfc	tblptru,f,c
 10060  010798                     	endif
 10061  010798  0009               	tblrd		*+
 10062  01079A  50F5               	movf	tablat,w,c
 10063  01079C  5D83               	subwf	printf@val& (0+255),w,b
 10064  01079E  0009               	tblrd		*+
 10065  0107A0  50F5               	movf	tablat,w,c
 10066  0107A2  5984               	subwfb	(printf@val+1)& (0+255),w,b
 10067  0107A4  0009               	tblrd		*+
 10068  0107A6  50F5               	movf	tablat,w,c
 10069  0107A8  5985               	subwfb	(printf@val+2)& (0+255),w,b
 10070  0107AA  0009               	tblrd		*+
 10071  0107AC  50F5               	movf	tablat,w,c
 10072  0107AE  5986               	subwfb	(printf@val+3)& (0+255),w,b
 10073  0107B0  A0D8               	btfss	status,0,c
 10074  0107B2  D002               	goto	u10330
 10075                           
 10076                           ; BSR set to: 1
 10077                           
 10078                           ; BSR set to: 1
 10079                           
 10080                           ; BSR set to: 1
 10081                           ;doprnt.c: 1307: break;
 10082  0107B4  2B8C               	incf	printf@c& (0+255),f,b
 10083  0107B6  D7E1               	goto	l8727
 10084  0107B8                     u10330:
 10085                           
 10086                           ; BSR set to: 1
 10087                           ;doprnt.c: 1339: if(c < prec)
 10088                           
 10089                           ; BSR set to: 1
 10090  0107B8  0E80               	movlw	128
 10091  0107BA  BF8C               	btfsc	printf@c& (0+255),7,b
 10092  0107BC  0E7F               	movlw	127
 10093  0107BE  6F6C               	movwf	??_printf& (0+255),b
 10094  0107C0  518A               	movf	printf@prec& (0+255),w,b
 10095  0107C2  5D8C               	subwf	printf@c& (0+255),w,b
 10096  0107C4  518B               	movf	(printf@prec+1)& (0+255),w,b
 10097  0107C6  0A80               	xorlw	128
 10098  0107C8  596C               	subwfb	??_printf& (0+255),w,b
 10099  0107CA  B0D8               	btfsc	status,0,c
 10100  0107CC  D003               	goto	l1130
 10101                           
 10102                           ; BSR set to: 1
 10103                           ;doprnt.c: 1340: c = prec;
 10104  0107CE  C18A  F18C         	movff	printf@prec,printf@c
 10105  0107D2  D010               	goto	l1132
 10106  0107D4                     l1130:
 10107                           
 10108                           ; BSR set to: 1
 10109                           ;doprnt.c: 1341: else if(prec < c)
 10110                           
 10111                           ; BSR set to: 1
 10112  0107D4  518B               	movf	(printf@prec+1)& (0+255),w,b
 10113  0107D6  0A80               	xorlw	128
 10114  0107D8  6F6C               	movwf	??_printf& (0+255),b
 10115  0107DA  518C               	movf	printf@c& (0+255),w,b
 10116  0107DC  5D8A               	subwf	printf@prec& (0+255),w,b
 10117  0107DE  0E80               	movlw	128
 10118  0107E0  BF8C               	btfsc	printf@c& (0+255),7,b
 10119  0107E2  0E7F               	movlw	127
 10120  0107E4  596C               	subwfb	??_printf& (0+255),w,b
 10121  0107E6  B0D8               	btfsc	status,0,c
 10122  0107E8  D005               	goto	l1132
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;doprnt.c: 1342: prec = c;
 10126  0107EA  518C               	movf	printf@c& (0+255),w,b
 10127  0107EC  6F8A               	movwf	printf@prec& (0+255),b
 10128  0107EE  6B8B               	clrf	(printf@prec+1)& (0+255),b
 10129  0107F0  BF8A               	btfsc	printf@prec& (0+255),7,b
 10130  0107F2  078B               	decf	(printf@prec+1)& (0+255),f,b
 10131  0107F4                     l1132:
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;doprnt.c: 1422: {
 10135                           ;doprnt.c: 1438: if(flag & 0x03)
 10136                           
 10137                           ; BSR set to: 1
 10138                           
 10139                           ; BSR set to: 1
 10140  0107F4  0E03               	movlw	3
 10141  0107F6  157B               	andwf	printf@flag& (0+255),w,b
 10142  0107F8  6F6C               	movwf	??_printf& (0+255),b
 10143  0107FA  0E00               	movlw	0
 10144  0107FC  157C               	andwf	(printf@flag+1)& (0+255),w,b
 10145  0107FE  6F6D               	movwf	(??_printf+1)& (0+255),b
 10146  010800  516C               	movf	??_printf& (0+255),w,b
 10147  010802  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10148  010804  B4D8               	btfsc	status,2,c
 10149  010806  D048               	goto	l1134
 10150                           
 10151                           ; BSR set to: 1
 10152                           ;doprnt.c: 1439: (putch('-') );
 10153  010808  0E2D               	movlw	45
 10154  01080A  EC79  F0AF         	call	_putch
 10155                           
 10156                           ;doprnt.c: 1469: }
 10157                           ;doprnt.c: 1474: while(prec--) {
 10158  01080E  D044               	goto	l1134
 10159  010810                     l8751:
 10160                           
 10161                           ;doprnt.c: 1478: {
 10162                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10163  010810  C18A  F16C         	movff	printf@prec,??_printf
 10164  010814  C18B  F16D         	movff	printf@prec+1,??_printf+1
 10165  010818  0101               	movlb	1	; () banked
 10166  01081A  90D8               	bcf	status,0,c
 10167  01081C  376C               	rlcf	??_printf& (0+255),f,b
 10168  01081E  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10169  010820  90D8               	bcf	status,0,c
 10170  010822  376C               	rlcf	??_printf& (0+255),f,b
 10171  010824  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10172  010826  0E59               	movlw	low _dpowers
 10173  010828  256C               	addwf	??_printf& (0+255),w,b
 10174  01082A  6EF6               	movwf	tblptrl,c
 10175  01082C  0EF4               	movlw	high _dpowers
 10176  01082E  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10177  010830  6EF7               	movwf	tblptrh,c
 10178  010832                     	if	1	;There are 3 active tblptr bytes
 10179  010832  6AF8               	clrf	tblptru,c
 10180  010834  0E00               	movlw	low (__mediumconst shr (0+16))
 10181  010836  22F8               	addwfc	tblptru,f,c
 10182  010838                     	endif
 10183  010838  0009               	tblrd		*+
 10184  01083A  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10185  01083E  0009               	tblrd		*+
 10186  010840  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10187  010844  0009               	tblrd		*+
 10188  010846  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10189  01084A  000A               	tblrd		*-
 10190  01084C  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10191  010850  C183  F117         	movff	printf@val,___lldiv@dividend
 10192  010854  C184  F118         	movff	printf@val+1,___lldiv@dividend+1
 10193  010858  C185  F119         	movff	printf@val+2,___lldiv@dividend+2
 10194  01085C  C186  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10195  010860  EC1B  F0A8         	call	___lldiv	;wreg free
 10196  010864  C117  F124         	movff	?___lldiv,___llmod@dividend
 10197  010868  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 10198  01086C  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 10199  010870  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 10200  010874  0E0A               	movlw	10
 10201  010876  0101               	movlb	1	; () banked
 10202  010878  6F28               	movwf	___llmod@divisor& (0+255),b
 10203  01087A  0E00               	movlw	0
 10204  01087C  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10205  01087E  0E00               	movlw	0
 10206  010880  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10207  010882  0E00               	movlw	0
 10208  010884  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10209  010886  EC36  F0AA         	call	___llmod	;wreg free
 10210  01088A  0101               	movlb	1	; () banked
 10211  01088C  5124               	movf	?___llmod& (0+255),w,b
 10212  01088E  0F30               	addlw	48
 10213  010890  6F8C               	movwf	printf@c& (0+255),b
 10214                           
 10215                           ; BSR set to: 1
 10216                           ;doprnt.c: 1523: }
 10217                           ;doprnt.c: 1524: (putch(c) );
 10218  010892  518C               	movf	printf@c& (0+255),w,b
 10219  010894  EC79  F0AF         	call	_putch
 10220  010898                     l1134:
 10221  010898  0101               	movlb	1	; () banked
 10222  01089A  078A               	decf	printf@prec& (0+255),f,b
 10223  01089C  A0D8               	btfss	status,0,c
 10224  01089E  078B               	decf	(printf@prec+1)& (0+255),f,b
 10225  0108A0  298A               	incf	printf@prec& (0+255),w,b
 10226  0108A2  E1B6               	bnz	l8751
 10227  0108A4  298B               	incf	(printf@prec+1)& (0+255),w,b
 10228  0108A6  A4D8               	btfss	status,2,c
 10229  0108A8  D7B3               	goto	l1135
 10230  0108AA                     u10370:
 10231                           
 10232                           ; BSR set to: 1
 10233                           
 10234                           ; BSR set to: 1
 10235  0108AA  0101               	movlb	1	; () banked
 10236  0108AC  5164               	movf	printf@f& (0+255),w,b
 10237  0108AE  6F6C               	movwf	??_printf& (0+255),b
 10238  0108B0  5165               	movf	(printf@f+1)& (0+255),w,b
 10239  0108B2  6F6D               	movwf	(??_printf+1)& (0+255),b
 10240  0108B4  4B64               	infsnz	printf@f& (0+255),f,b
 10241  0108B6  2B65               	incf	(printf@f+1)& (0+255),f,b
 10242  0108B8  C16C  FFF6         	movff	??_printf,tblptrl
 10243  0108BC  C16D  FFF7         	movff	??_printf+1,tblptrh
 10244  0108C0  0E00               	movlw	low (__mediumconst shr (0+16))
 10245  0108C2  6EF8               	movwf	tblptru,c
 10246  0108C4  0E0D               	movlw	(high __ramtop+-1)
 10247  0108C6  64F7               	cpfsgt	tblptrh,c
 10248  0108C8  D003               	bra	u10387
 10249  0108CA  0008               	tblrd		*
 10250  0108CC  50F5               	movf	tablat,w,c
 10251  0108CE  D005               	bra	u10380
 10252  0108D0                     u10387:
 10253  0108D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10254  0108D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10255  0108D8  50E7               	movf	indf1,w,c
 10256  0108DA                     u10380:
 10257  0108DA  0101               	movlb	1	; () banked
 10258  0108DC  6F8C               	movwf	printf@c& (0+255),b
 10259  0108DE  518C               	movf	printf@c& (0+255),w,b
 10260  0108E0  B4D8               	btfsc	status,2,c
 10261  0108E2  0012               	return	
 10262  0108E4  EF07  F080         	goto	l1067
 10263  0108E8                     __end_of_printf:
 10264                           	opt stack 0
 10265                           tblptru	equ	0xFF8
 10266                           tblptrh	equ	0xFF7
 10267                           tblptrl	equ	0xFF6
 10268                           tablat	equ	0xFF5
 10269                           prodh	equ	0xFF4
 10270                           prodl	equ	0xFF3
 10271                           intcon	equ	0xFF2
 10272                           postinc0	equ	0xFEE
 10273                           wreg	equ	0xFE8
 10274                           indf1	equ	0xFE7
 10275                           postdec1	equ	0xFE5
 10276                           fsr1h	equ	0xFE2
 10277                           fsr1l	equ	0xFE1
 10278                           indf2	equ	0xFDF
 10279                           postinc2	equ	0xFDE
 10280                           postdec2	equ	0xFDD
 10281                           fsr2h	equ	0xFDA
 10282                           fsr2l	equ	0xFD9
 10283                           status	equ	0xFD8
 10284                           
 10285 ;; *************** function _scale *****************
 10286 ;; Defined at:
 10287 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  scl             1    wreg     char 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;  scl             1   91[BANK1 ] char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  3   85[BANK1 ] char 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10301 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10304 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;Total ram usage:        7 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:   16
 10308 ;; This function calls:
 10309 ;;		___awdiv
 10310 ;;		___awmod
 10311 ;;		___ftmul
 10312 ;;		___wmul
 10313 ;; This function is called by:
 10314 ;;		_printf
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text20
 10319  011968                     __ptext20:
 10320                           	opt stack 0
 10321  011968                     _scale:
 10322                           	opt stack 11
 10323                           
 10324                           ; BSR set to: 1
 10325                           ;incstack = 0
 10326                           ;scale@scl stored from wreg
 10327  011968  0101               	movlb	1	; () banked
 10328  01196A  6F5B               	movwf	scale@scl& (0+255),b
 10329                           
 10330                           ;doprnt.c: 428: if(scl < 0) {
 10331  01196C  0101               	movlb	1	; () banked
 10332  01196E  AF5B               	btfss	scale@scl& (0+255),7,b
 10333  011970  D11E               	goto	l1056
 10334                           
 10335                           ; BSR set to: 1
 10336                           ;doprnt.c: 429: scl = -scl;
 10337  011972  6D5B               	negf	scale@scl& (0+255),b
 10338                           
 10339                           ;doprnt.c: 430: if(scl>=110)
 10340  011974  515B               	movf	scale@scl& (0+255),w,b
 10341  011976  0A80               	xorlw	128
 10342  011978  0F12               	addlw	-238
 10343  01197A  A0D8               	btfss	status,0,c
 10344  01197C  D0A0               	goto	l1057
 10345                           
 10346                           ; BSR set to: 1
 10347                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10348  01197E  0E00               	movlw	0
 10349  011980  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10350  011982  0E03               	movlw	3
 10351  011984  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10352  011986  0E00               	movlw	0
 10353  011988  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10354  01198A  0E0A               	movlw	10
 10355  01198C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10356  01198E  0E00               	movlw	0
 10357  011990  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10358  011992  0E64               	movlw	100
 10359  011994  6F19               	movwf	___awmod@divisor& (0+255),b
 10360  011996  515B               	movf	scale@scl& (0+255),w,b
 10361  011998  6F17               	movwf	___awmod@dividend& (0+255),b
 10362  01199A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10363  01199C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10364  01199E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10365  0119A0  EC91  F0A9         	call	___awmod	;wreg free
 10366  0119A4  C117  F11D         	movff	?___awmod,___awdiv@dividend
 10367  0119A8  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 10368  0119AC  ECD8  F0A7         	call	___awdiv	;wreg free
 10369  0119B0  0E09               	movlw	9
 10370  0119B2  0101               	movlb	1	; () banked
 10371  0119B4  251D               	addwf	?___awdiv& (0+255),w,b
 10372  0119B6  6F25               	movwf	___wmul@multiplier& (0+255),b
 10373  0119B8  0E00               	movlw	0
 10374  0119BA  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10375  0119BC  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10376  0119BE  EC62  F0AE         	call	___wmul	;wreg free
 10377  0119C2  0EA8               	movlw	low __npowers_
 10378  0119C4  0101               	movlb	1	; () banked
 10379  0119C6  2525               	addwf	?___wmul& (0+255),w,b
 10380  0119C8  6EF6               	movwf	tblptrl,c
 10381  0119CA  0EF4               	movlw	high __npowers_
 10382  0119CC  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10383  0119CE  6EF7               	movwf	tblptrh,c
 10384  0119D0                     	if	1	;There are 3 active tblptr bytes
 10385  0119D0  6AF8               	clrf	tblptru,c
 10386  0119D2  0E00               	movlw	low (__mediumconst shr (0+16))
 10387  0119D4  22F8               	addwfc	tblptru,f,c
 10388  0119D6                     	endif
 10389  0119D6  0009               	tblrd		*+
 10390  0119D8  CFF5 F149          	movff	tablat,___ftmul@f2
 10391  0119DC  0009               	tblrd		*+
 10392  0119DE  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10393  0119E2  000A               	tblrd		*-
 10394  0119E4  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10395  0119E8  0E00               	movlw	0
 10396  0119EA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10397  0119EC  0E64               	movlw	100
 10398  0119EE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10399  0119F0  515B               	movf	scale@scl& (0+255),w,b
 10400  0119F2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10401  0119F4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10402  0119F6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10403  0119F8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10404  0119FA  ECD8  F0A7         	call	___awdiv	;wreg free
 10405  0119FE  0E12               	movlw	18
 10406  011A00  0101               	movlb	1	; () banked
 10407  011A02  251D               	addwf	?___awdiv& (0+255),w,b
 10408  011A04  6F25               	movwf	___wmul@multiplier& (0+255),b
 10409  011A06  0E00               	movlw	0
 10410  011A08  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10411  011A0A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10412  011A0C  0E00               	movlw	0
 10413  011A0E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10414  011A10  0E03               	movlw	3
 10415  011A12  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10416  011A14  EC62  F0AE         	call	___wmul	;wreg free
 10417  011A18  0EA8               	movlw	low __npowers_
 10418  011A1A  0101               	movlb	1	; () banked
 10419  011A1C  2525               	addwf	?___wmul& (0+255),w,b
 10420  011A1E  6EF6               	movwf	tblptrl,c
 10421  011A20  0EF4               	movlw	high __npowers_
 10422  011A22  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10423  011A24  6EF7               	movwf	tblptrh,c
 10424  011A26                     	if	1	;There are 3 active tblptr bytes
 10425  011A26  6AF8               	clrf	tblptru,c
 10426  011A28  0E00               	movlw	low (__mediumconst shr (0+16))
 10427  011A2A  22F8               	addwfc	tblptru,f,c
 10428  011A2C                     	endif
 10429  011A2C  0009               	tblrd		*+
 10430  011A2E  CFF5 F146          	movff	tablat,___ftmul@f1
 10431  011A32  0009               	tblrd		*+
 10432  011A34  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10433  011A38  000A               	tblrd		*-
 10434  011A3A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10435  011A3E  EC60  F0A1         	call	___ftmul	;wreg free
 10436  011A42  C146  F158         	movff	?___ftmul,_scale$3128
 10437  011A46  C147  F159         	movff	?___ftmul+1,_scale$3128+1
 10438  011A4A  C148  F15A         	movff	?___ftmul+2,_scale$3128+2
 10439                           
 10440                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10441  011A4E  C158  F146         	movff	_scale$3128,___ftmul@f1
 10442  011A52  C159  F147         	movff	_scale$3128+1,___ftmul@f1+1
 10443  011A56  C15A  F148         	movff	_scale$3128+2,___ftmul@f1+2
 10444  011A5A  0E00               	movlw	0
 10445  011A5C  0101               	movlb	1	; () banked
 10446  011A5E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10447  011A60  0E03               	movlw	3
 10448  011A62  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10449  011A64  0E00               	movlw	0
 10450  011A66  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10451  011A68  0E0A               	movlw	10
 10452  011A6A  6F19               	movwf	___awmod@divisor& (0+255),b
 10453  011A6C  515B               	movf	scale@scl& (0+255),w,b
 10454  011A6E  6F17               	movwf	___awmod@dividend& (0+255),b
 10455  011A70  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10456  011A72  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10457  011A74  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10458  011A76  EC91  F0A9         	call	___awmod	;wreg free
 10459  011A7A  C117  F125         	movff	?___awmod,___wmul@multiplier
 10460  011A7E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10461  011A82  EC62  F0AE         	call	___wmul	;wreg free
 10462  011A86  0EA8               	movlw	low __npowers_
 10463  011A88  0101               	movlb	1	; () banked
 10464  011A8A  2525               	addwf	?___wmul& (0+255),w,b
 10465  011A8C  6EF6               	movwf	tblptrl,c
 10466  011A8E  0EF4               	movlw	high __npowers_
 10467  011A90  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10468  011A92  6EF7               	movwf	tblptrh,c
 10469  011A94                     	if	1	;There are 3 active tblptr bytes
 10470  011A94  6AF8               	clrf	tblptru,c
 10471  011A96  0E00               	movlw	low (__mediumconst shr (0+16))
 10472  011A98  22F8               	addwfc	tblptru,f,c
 10473  011A9A                     	endif
 10474  011A9A  0009               	tblrd		*+
 10475  011A9C  CFF5 F149          	movff	tablat,___ftmul@f2
 10476  011AA0  0009               	tblrd		*+
 10477  011AA2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10478  011AA6  000A               	tblrd		*-
 10479  011AA8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10480  011AAC  EC60  F0A1         	call	___ftmul	;wreg free
 10481  011AB0  C146  F155         	movff	?___ftmul,?_scale
 10482  011AB4  C147  F156         	movff	?___ftmul+1,?_scale+1
 10483  011AB8  C148  F157         	movff	?___ftmul+2,?_scale+2
 10484  011ABC  0012               	return	
 10485  011ABE                     l1057:
 10486                           
 10487                           ;doprnt.c: 432: else if(scl > 10)
 10488  011ABE  0101               	movlb	1	; () banked
 10489  011AC0  515B               	movf	scale@scl& (0+255),w,b
 10490  011AC2  0A80               	xorlw	128
 10491  011AC4  0F75               	addlw	-139
 10492  011AC6  A0D8               	btfss	status,0,c
 10493  011AC8  D05C               	goto	l1060
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10497  011ACA  0E00               	movlw	0
 10498  011ACC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10499  011ACE  0E0A               	movlw	10
 10500  011AD0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10501  011AD2  515B               	movf	scale@scl& (0+255),w,b
 10502  011AD4  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10503  011AD6  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10504  011AD8  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10505  011ADA  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10506  011ADC  ECD8  F0A7         	call	___awdiv	;wreg free
 10507  011AE0  0E09               	movlw	9
 10508  011AE2  0101               	movlb	1	; () banked
 10509  011AE4  251D               	addwf	?___awdiv& (0+255),w,b
 10510  011AE6  6F25               	movwf	___wmul@multiplier& (0+255),b
 10511  011AE8  0E00               	movlw	0
 10512  011AEA  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10513  011AEC  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10514  011AEE  0E00               	movlw	0
 10515  011AF0  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10516  011AF2  0E03               	movlw	3
 10517  011AF4  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10518  011AF6  EC62  F0AE         	call	___wmul	;wreg free
 10519  011AFA  0EA8               	movlw	low __npowers_
 10520  011AFC  0101               	movlb	1	; () banked
 10521  011AFE  2525               	addwf	?___wmul& (0+255),w,b
 10522  011B00  6EF6               	movwf	tblptrl,c
 10523  011B02  0EF4               	movlw	high __npowers_
 10524  011B04  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10525  011B06  6EF7               	movwf	tblptrh,c
 10526  011B08                     	if	1	;There are 3 active tblptr bytes
 10527  011B08  6AF8               	clrf	tblptru,c
 10528  011B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 10529  011B0C  22F8               	addwfc	tblptru,f,c
 10530  011B0E                     	endif
 10531  011B0E  0009               	tblrd		*+
 10532  011B10  CFF5 F146          	movff	tablat,___ftmul@f1
 10533  011B14  0009               	tblrd		*+
 10534  011B16  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10535  011B1A  000A               	tblrd		*-
 10536  011B1C  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10537  011B20  0E00               	movlw	0
 10538  011B22  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10539  011B24  0E03               	movlw	3
 10540  011B26  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10541  011B28  0E00               	movlw	0
 10542  011B2A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10543  011B2C  0E0A               	movlw	10
 10544  011B2E  6F19               	movwf	___awmod@divisor& (0+255),b
 10545  011B30  515B               	movf	scale@scl& (0+255),w,b
 10546  011B32  6F17               	movwf	___awmod@dividend& (0+255),b
 10547  011B34  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10548  011B36  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10549  011B38  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10550  011B3A  EC91  F0A9         	call	___awmod	;wreg free
 10551  011B3E  C117  F125         	movff	?___awmod,___wmul@multiplier
 10552  011B42  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10553  011B46  EC62  F0AE         	call	___wmul	;wreg free
 10554  011B4A  0EA8               	movlw	low __npowers_
 10555  011B4C  0101               	movlb	1	; () banked
 10556  011B4E  2525               	addwf	?___wmul& (0+255),w,b
 10557  011B50  6EF6               	movwf	tblptrl,c
 10558  011B52  0EF4               	movlw	high __npowers_
 10559  011B54  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10560  011B56  6EF7               	movwf	tblptrh,c
 10561  011B58                     	if	1	;There are 3 active tblptr bytes
 10562  011B58  6AF8               	clrf	tblptru,c
 10563  011B5A  0E00               	movlw	low (__mediumconst shr (0+16))
 10564  011B5C  22F8               	addwfc	tblptru,f,c
 10565  011B5E                     	endif
 10566  011B5E  0009               	tblrd		*+
 10567  011B60  CFF5 F149          	movff	tablat,___ftmul@f2
 10568  011B64  0009               	tblrd		*+
 10569  011B66  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10570  011B6A  000A               	tblrd		*-
 10571  011B6C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10572  011B70  EC60  F0A1         	call	___ftmul	;wreg free
 10573  011B74  C146  F155         	movff	?___ftmul,?_scale
 10574  011B78  C147  F156         	movff	?___ftmul+1,?_scale+1
 10575  011B7C  C148  F157         	movff	?___ftmul+2,?_scale+2
 10576  011B80  0012               	return	
 10577  011B82                     l1060:
 10578                           
 10579                           ;doprnt.c: 434: return _npowers_[scl];
 10580  011B82  0101               	movlb	1	; () banked
 10581  011B84  515B               	movf	scale@scl& (0+255),w,b
 10582  011B86  0D03               	mullw	3
 10583  011B88  0EA8               	movlw	low __npowers_
 10584  011B8A  24F3               	addwf	prodl,w,c
 10585  011B8C  6EF6               	movwf	tblptrl,c
 10586  011B8E  0EF4               	movlw	high __npowers_
 10587  011B90  20F4               	addwfc	prodh,w,c
 10588  011B92  6EF7               	movwf	tblptrh,c
 10589  011B94                     	if	1	;There are 3 active tblptr bytes
 10590  011B94  6AF8               	clrf	tblptru,c
 10591  011B96  0E00               	movlw	low (__mediumconst shr (0+16))
 10592  011B98  22F8               	addwfc	tblptru,f,c
 10593  011B9A                     	endif
 10594  011B9A  0009               	tblrd		*+
 10595  011B9C  CFF5 F155          	movff	tablat,?_scale
 10596  011BA0  0009               	tblrd		*+
 10597  011BA2  CFF5 F156          	movff	tablat,?_scale+1
 10598  011BA6  000A               	tblrd		*-
 10599  011BA8  CFF5 F157          	movff	tablat,?_scale+2
 10600                           
 10601                           ; BSR set to: 1
 10602  011BAC  0012               	return	
 10603  011BAE                     l1056:
 10604                           
 10605                           ; BSR set to: 1
 10606                           ;doprnt.c: 435: }
 10607                           ;doprnt.c: 436: if(scl>=110)
 10608                           
 10609                           ; BSR set to: 1
 10610  011BAE  515B               	movf	scale@scl& (0+255),w,b
 10611  011BB0  0A80               	xorlw	128
 10612  011BB2  0F12               	addlw	-238
 10613  011BB4  A0D8               	btfss	status,0,c
 10614  011BB6  D0A0               	goto	l1061
 10615                           
 10616                           ; BSR set to: 1
 10617                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10618  011BB8  0E00               	movlw	0
 10619  011BBA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10620  011BBC  0E03               	movlw	3
 10621  011BBE  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10622  011BC0  0E00               	movlw	0
 10623  011BC2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10624  011BC4  0E0A               	movlw	10
 10625  011BC6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10626  011BC8  0E00               	movlw	0
 10627  011BCA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10628  011BCC  0E64               	movlw	100
 10629  011BCE  6F19               	movwf	___awmod@divisor& (0+255),b
 10630  011BD0  515B               	movf	scale@scl& (0+255),w,b
 10631  011BD2  6F17               	movwf	___awmod@dividend& (0+255),b
 10632  011BD4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10633  011BD6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10634  011BD8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10635  011BDA  EC91  F0A9         	call	___awmod	;wreg free
 10636  011BDE  C117  F11D         	movff	?___awmod,___awdiv@dividend
 10637  011BE2  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 10638  011BE6  ECD8  F0A7         	call	___awdiv	;wreg free
 10639  011BEA  0E09               	movlw	9
 10640  011BEC  0101               	movlb	1	; () banked
 10641  011BEE  251D               	addwf	?___awdiv& (0+255),w,b
 10642  011BF0  6F25               	movwf	___wmul@multiplier& (0+255),b
 10643  011BF2  0E00               	movlw	0
 10644  011BF4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10645  011BF6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10646  011BF8  EC62  F0AE         	call	___wmul	;wreg free
 10647  011BFC  0E81               	movlw	low __powers_
 10648  011BFE  0101               	movlb	1	; () banked
 10649  011C00  2525               	addwf	?___wmul& (0+255),w,b
 10650  011C02  6EF6               	movwf	tblptrl,c
 10651  011C04  0EF4               	movlw	high __powers_
 10652  011C06  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10653  011C08  6EF7               	movwf	tblptrh,c
 10654  011C0A                     	if	1	;There are 3 active tblptr bytes
 10655  011C0A  6AF8               	clrf	tblptru,c
 10656  011C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 10657  011C0E  22F8               	addwfc	tblptru,f,c
 10658  011C10                     	endif
 10659  011C10  0009               	tblrd		*+
 10660  011C12  CFF5 F149          	movff	tablat,___ftmul@f2
 10661  011C16  0009               	tblrd		*+
 10662  011C18  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10663  011C1C  000A               	tblrd		*-
 10664  011C1E  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10665  011C22  0E00               	movlw	0
 10666  011C24  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10667  011C26  0E64               	movlw	100
 10668  011C28  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10669  011C2A  515B               	movf	scale@scl& (0+255),w,b
 10670  011C2C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10671  011C2E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10672  011C30  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10673  011C32  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10674  011C34  ECD8  F0A7         	call	___awdiv	;wreg free
 10675  011C38  0E12               	movlw	18
 10676  011C3A  0101               	movlb	1	; () banked
 10677  011C3C  251D               	addwf	?___awdiv& (0+255),w,b
 10678  011C3E  6F25               	movwf	___wmul@multiplier& (0+255),b
 10679  011C40  0E00               	movlw	0
 10680  011C42  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10681  011C44  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10682  011C46  0E00               	movlw	0
 10683  011C48  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10684  011C4A  0E03               	movlw	3
 10685  011C4C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10686  011C4E  EC62  F0AE         	call	___wmul	;wreg free
 10687  011C52  0E81               	movlw	low __powers_
 10688  011C54  0101               	movlb	1	; () banked
 10689  011C56  2525               	addwf	?___wmul& (0+255),w,b
 10690  011C58  6EF6               	movwf	tblptrl,c
 10691  011C5A  0EF4               	movlw	high __powers_
 10692  011C5C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10693  011C5E  6EF7               	movwf	tblptrh,c
 10694  011C60                     	if	1	;There are 3 active tblptr bytes
 10695  011C60  6AF8               	clrf	tblptru,c
 10696  011C62  0E00               	movlw	low (__mediumconst shr (0+16))
 10697  011C64  22F8               	addwfc	tblptru,f,c
 10698  011C66                     	endif
 10699  011C66  0009               	tblrd		*+
 10700  011C68  CFF5 F146          	movff	tablat,___ftmul@f1
 10701  011C6C  0009               	tblrd		*+
 10702  011C6E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10703  011C72  000A               	tblrd		*-
 10704  011C74  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10705  011C78  EC60  F0A1         	call	___ftmul	;wreg free
 10706  011C7C  C146  F158         	movff	?___ftmul,_scale$3128
 10707  011C80  C147  F159         	movff	?___ftmul+1,_scale$3128+1
 10708  011C84  C148  F15A         	movff	?___ftmul+2,_scale$3128+2
 10709                           
 10710                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10711  011C88  C158  F146         	movff	_scale$3128,___ftmul@f1
 10712  011C8C  C159  F147         	movff	_scale$3128+1,___ftmul@f1+1
 10713  011C90  C15A  F148         	movff	_scale$3128+2,___ftmul@f1+2
 10714  011C94  0E00               	movlw	0
 10715  011C96  0101               	movlb	1	; () banked
 10716  011C98  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10717  011C9A  0E03               	movlw	3
 10718  011C9C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10719  011C9E  0E00               	movlw	0
 10720  011CA0  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10721  011CA2  0E0A               	movlw	10
 10722  011CA4  6F19               	movwf	___awmod@divisor& (0+255),b
 10723  011CA6  515B               	movf	scale@scl& (0+255),w,b
 10724  011CA8  6F17               	movwf	___awmod@dividend& (0+255),b
 10725  011CAA  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10726  011CAC  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10727  011CAE  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10728  011CB0  EC91  F0A9         	call	___awmod	;wreg free
 10729  011CB4  C117  F125         	movff	?___awmod,___wmul@multiplier
 10730  011CB8  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10731  011CBC  EC62  F0AE         	call	___wmul	;wreg free
 10732  011CC0  0E81               	movlw	low __powers_
 10733  011CC2  0101               	movlb	1	; () banked
 10734  011CC4  2525               	addwf	?___wmul& (0+255),w,b
 10735  011CC6  6EF6               	movwf	tblptrl,c
 10736  011CC8  0EF4               	movlw	high __powers_
 10737  011CCA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10738  011CCC  6EF7               	movwf	tblptrh,c
 10739  011CCE                     	if	1	;There are 3 active tblptr bytes
 10740  011CCE  6AF8               	clrf	tblptru,c
 10741  011CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 10742  011CD2  22F8               	addwfc	tblptru,f,c
 10743  011CD4                     	endif
 10744  011CD4  0009               	tblrd		*+
 10745  011CD6  CFF5 F149          	movff	tablat,___ftmul@f2
 10746  011CDA  0009               	tblrd		*+
 10747  011CDC  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10748  011CE0  000A               	tblrd		*-
 10749  011CE2  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10750  011CE6  EC60  F0A1         	call	___ftmul	;wreg free
 10751  011CEA  C146  F155         	movff	?___ftmul,?_scale
 10752  011CEE  C147  F156         	movff	?___ftmul+1,?_scale+1
 10753  011CF2  C148  F157         	movff	?___ftmul+2,?_scale+2
 10754  011CF6  0012               	return	
 10755  011CF8                     l1061:
 10756                           
 10757                           ;doprnt.c: 438: else if(scl > 10)
 10758  011CF8  0101               	movlb	1	; () banked
 10759  011CFA  515B               	movf	scale@scl& (0+255),w,b
 10760  011CFC  0A80               	xorlw	128
 10761  011CFE  0F75               	addlw	-139
 10762  011D00  A0D8               	btfss	status,0,c
 10763  011D02  D05C               	goto	l1063
 10764                           
 10765                           ; BSR set to: 1
 10766                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10767  011D04  0E00               	movlw	0
 10768  011D06  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10769  011D08  0E0A               	movlw	10
 10770  011D0A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10771  011D0C  515B               	movf	scale@scl& (0+255),w,b
 10772  011D0E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10773  011D10  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10774  011D12  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10775  011D14  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10776  011D16  ECD8  F0A7         	call	___awdiv	;wreg free
 10777  011D1A  0E09               	movlw	9
 10778  011D1C  0101               	movlb	1	; () banked
 10779  011D1E  251D               	addwf	?___awdiv& (0+255),w,b
 10780  011D20  6F25               	movwf	___wmul@multiplier& (0+255),b
 10781  011D22  0E00               	movlw	0
 10782  011D24  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10783  011D26  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10784  011D28  0E00               	movlw	0
 10785  011D2A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10786  011D2C  0E03               	movlw	3
 10787  011D2E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10788  011D30  EC62  F0AE         	call	___wmul	;wreg free
 10789  011D34  0E81               	movlw	low __powers_
 10790  011D36  0101               	movlb	1	; () banked
 10791  011D38  2525               	addwf	?___wmul& (0+255),w,b
 10792  011D3A  6EF6               	movwf	tblptrl,c
 10793  011D3C  0EF4               	movlw	high __powers_
 10794  011D3E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10795  011D40  6EF7               	movwf	tblptrh,c
 10796  011D42                     	if	1	;There are 3 active tblptr bytes
 10797  011D42  6AF8               	clrf	tblptru,c
 10798  011D44  0E00               	movlw	low (__mediumconst shr (0+16))
 10799  011D46  22F8               	addwfc	tblptru,f,c
 10800  011D48                     	endif
 10801  011D48  0009               	tblrd		*+
 10802  011D4A  CFF5 F146          	movff	tablat,___ftmul@f1
 10803  011D4E  0009               	tblrd		*+
 10804  011D50  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10805  011D54  000A               	tblrd		*-
 10806  011D56  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10807  011D5A  0E00               	movlw	0
 10808  011D5C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10809  011D5E  0E03               	movlw	3
 10810  011D60  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10811  011D62  0E00               	movlw	0
 10812  011D64  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10813  011D66  0E0A               	movlw	10
 10814  011D68  6F19               	movwf	___awmod@divisor& (0+255),b
 10815  011D6A  515B               	movf	scale@scl& (0+255),w,b
 10816  011D6C  6F17               	movwf	___awmod@dividend& (0+255),b
 10817  011D6E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10818  011D70  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10819  011D72  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10820  011D74  EC91  F0A9         	call	___awmod	;wreg free
 10821  011D78  C117  F125         	movff	?___awmod,___wmul@multiplier
 10822  011D7C  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10823  011D80  EC62  F0AE         	call	___wmul	;wreg free
 10824  011D84  0E81               	movlw	low __powers_
 10825  011D86  0101               	movlb	1	; () banked
 10826  011D88  2525               	addwf	?___wmul& (0+255),w,b
 10827  011D8A  6EF6               	movwf	tblptrl,c
 10828  011D8C  0EF4               	movlw	high __powers_
 10829  011D8E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10830  011D90  6EF7               	movwf	tblptrh,c
 10831  011D92                     	if	1	;There are 3 active tblptr bytes
 10832  011D92  6AF8               	clrf	tblptru,c
 10833  011D94  0E00               	movlw	low (__mediumconst shr (0+16))
 10834  011D96  22F8               	addwfc	tblptru,f,c
 10835  011D98                     	endif
 10836  011D98  0009               	tblrd		*+
 10837  011D9A  CFF5 F149          	movff	tablat,___ftmul@f2
 10838  011D9E  0009               	tblrd		*+
 10839  011DA0  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10840  011DA4  000A               	tblrd		*-
 10841  011DA6  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10842  011DAA  EC60  F0A1         	call	___ftmul	;wreg free
 10843  011DAE  C146  F155         	movff	?___ftmul,?_scale
 10844  011DB2  C147  F156         	movff	?___ftmul+1,?_scale+1
 10845  011DB6  C148  F157         	movff	?___ftmul+2,?_scale+2
 10846  011DBA  0012               	return	
 10847  011DBC                     l1063:
 10848                           
 10849                           ;doprnt.c: 440: return _powers_[scl];
 10850  011DBC  0101               	movlb	1	; () banked
 10851  011DBE  515B               	movf	scale@scl& (0+255),w,b
 10852  011DC0  0D03               	mullw	3
 10853  011DC2  0E81               	movlw	low __powers_
 10854  011DC4  24F3               	addwf	prodl,w,c
 10855  011DC6  6EF6               	movwf	tblptrl,c
 10856  011DC8  0EF4               	movlw	high __powers_
 10857  011DCA  20F4               	addwfc	prodh,w,c
 10858  011DCC  6EF7               	movwf	tblptrh,c
 10859  011DCE                     	if	1	;There are 3 active tblptr bytes
 10860  011DCE  6AF8               	clrf	tblptru,c
 10861  011DD0  0E00               	movlw	low (__mediumconst shr (0+16))
 10862  011DD2  22F8               	addwfc	tblptru,f,c
 10863  011DD4                     	endif
 10864  011DD4  0009               	tblrd		*+
 10865  011DD6  CFF5 F155          	movff	tablat,?_scale
 10866  011DDA  0009               	tblrd		*+
 10867  011DDC  CFF5 F156          	movff	tablat,?_scale+1
 10868  011DE0  000A               	tblrd		*-
 10869  011DE2  CFF5 F157          	movff	tablat,?_scale+2
 10870  011DE6  0012               	return	
 10871  011DE8                     __end_of_scale:
 10872                           	opt stack 0
 10873                           tblptru	equ	0xFF8
 10874                           tblptrh	equ	0xFF7
 10875                           tblptrl	equ	0xFF6
 10876                           tablat	equ	0xFF5
 10877                           prodh	equ	0xFF4
 10878                           prodl	equ	0xFF3
 10879                           intcon	equ	0xFF2
 10880                           postinc0	equ	0xFEE
 10881                           wreg	equ	0xFE8
 10882                           indf1	equ	0xFE7
 10883                           postdec1	equ	0xFE5
 10884                           fsr1h	equ	0xFE2
 10885                           fsr1l	equ	0xFE1
 10886                           indf2	equ	0xFDF
 10887                           postinc2	equ	0xFDE
 10888                           postdec2	equ	0xFDD
 10889                           fsr2h	equ	0xFDA
 10890                           fsr2l	equ	0xFD9
 10891                           status	equ	0xFD8
 10892                           
 10893 ;; *************** function _putch *****************
 10894 ;; Defined at:
 10895 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  txData          1    wreg     unsigned char 
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;  txData          1   24[BANK1 ] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  1    wreg      void 
 10902 ;; Registers used:
 10903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10910 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10912 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10913 ;;Total ram usage:        1 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:   15
 10916 ;; This function calls:
 10917 ;;		_EUSART2_Write
 10918 ;; This function is called by:
 10919 ;;		_printf
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text21
 10924  015EF2                     __ptext21:
 10925                           	opt stack 0
 10926  015EF2                     _putch:
 10927                           	opt stack 12
 10928                           
 10929                           ;incstack = 0
 10930                           ;putch@txData stored from wreg
 10931  015EF2  0101               	movlb	1	; () banked
 10932  015EF4  6F18               	movwf	putch@txData& (0+255),b
 10933                           
 10934                           ;eusart2.c: 182: EUSART2_Write(txData);
 10935  015EF6  0101               	movlb	1	; () banked
 10936  015EF8  5118               	movf	putch@txData& (0+255),w,b
 10937  015EFA  ECD2  F0AC         	call	_EUSART2_Write
 10938  015EFE  0012               	return		;funcret
 10939  015F00                     __end_of_putch:
 10940                           	opt stack 0
 10941                           tblptru	equ	0xFF8
 10942                           tblptrh	equ	0xFF7
 10943                           tblptrl	equ	0xFF6
 10944                           tablat	equ	0xFF5
 10945                           prodh	equ	0xFF4
 10946                           prodl	equ	0xFF3
 10947                           intcon	equ	0xFF2
 10948                           postinc0	equ	0xFEE
 10949                           wreg	equ	0xFE8
 10950                           indf1	equ	0xFE7
 10951                           postdec1	equ	0xFE5
 10952                           fsr1h	equ	0xFE2
 10953                           fsr1l	equ	0xFE1
 10954                           indf2	equ	0xFDF
 10955                           postinc2	equ	0xFDE
 10956                           postdec2	equ	0xFDD
 10957                           fsr2h	equ	0xFDA
 10958                           fsr2l	equ	0xFD9
 10959                           status	equ	0xFD8
 10960                           
 10961 ;; *************** function _EUSART2_Write *****************
 10962 ;; Defined at:
 10963 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  txData          1    wreg     unsigned char 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  txData          1   23[BANK1 ] unsigned char 
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      void 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10978 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10980 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10981 ;;Total ram usage:        1 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:   14
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_putch
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text22
 10992  0159A4                     __ptext22:
 10993                           	opt stack 0
 10994  0159A4                     _EUSART2_Write:
 10995                           	opt stack 12
 10996                           
 10997                           ;incstack = 0
 10998                           ;EUSART2_Write@txData stored from wreg
 10999  0159A4  0101               	movlb	1	; () banked
 11000  0159A6  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 11001                           
 11002                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 11003  0159A8  D001               	goto	l374
 11004  0159AA                     l375:
 11005                           
 11006                           ; BSR set to: 1
 11007  0159AA  0004               	clrwdt		;# 
 11008  0159AC                     l374:
 11009  0159AC  0101               	movlb	1	; () banked
 11010  0159AE  51DA               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 11011  0159B0  B4D8               	btfsc	status,2,c
 11012  0159B2  D7FB               	goto	l375
 11013                           
 11014                           ; BSR set to: 1
 11015                           ;eusart2.c: 156: }
 11016                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 11017  0159B4  010E               	movlb	14	; () banked
 11018  0159B6  BD2C               	btfsc	44,6,b	;volatile
 11019  0159B8  D003               	goto	l377
 11020                           
 11021                           ; BSR set to: 14
 11022                           ;eusart2.c: 159: {
 11023                           ;eusart2.c: 160: TX2REG = txData;
 11024  0159BA  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 11025                           
 11026                           ;eusart2.c: 161: }
 11027  0159BE  D013               	goto	l378
 11028  0159C0                     l377:
 11029                           
 11030                           ; BSR set to: 14
 11031                           ;eusart2.c: 162: else
 11032                           ;eusart2.c: 163: {
 11033                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 11034  0159C0  9D2C               	bcf	44,6,b	;volatile
 11035                           
 11036                           ; BSR set to: 14
 11037                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 11038  0159C2  0101               	movlb	1	; () banked
 11039  0159C4  51DC               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 11040  0159C6  0D01               	mullw	1
 11041  0159C8  0E40               	movlw	low _eusart2TxBuffer
 11042  0159CA  24F3               	addwf	prodl,w,c
 11043  0159CC  6ED9               	movwf	fsr2l,c
 11044  0159CE  0E02               	movlw	high _eusart2TxBuffer
 11045  0159D0  20F4               	addwfc	prodh,w,c
 11046  0159D2  6EDA               	movwf	fsr2h,c
 11047  0159D4  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 11048                           
 11049                           ; BSR set to: 1
 11050  0159D8  2BDC               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 11051                           
 11052                           ; BSR set to: 1
 11053                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 11054  0159DA  0E3F               	movlw	63
 11055  0159DC  65DC               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 11056  0159DE  D002               	goto	l379
 11057                           
 11058                           ; BSR set to: 1
 11059                           ;eusart2.c: 167: {
 11060                           ;eusart2.c: 168: eusart2TxHead = 0;
 11061  0159E0  0E00               	movlw	0
 11062  0159E2  6FDC               	movwf	_eusart2TxHead& (0+255),b	;volatile
 11063  0159E4                     l379:
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;eusart2.c: 169: }
 11067                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 11068                           
 11069                           ; BSR set to: 1
 11070  0159E4  07DA               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 11071  0159E6                     l378:
 11072                           
 11073                           ;eusart2.c: 171: }
 11074                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 11075                           
 11076                           ; BSR set to: 1
 11077  0159E6  010E               	movlb	14	; () banked
 11078  0159E8  8D2C               	bsf	44,6,b	;volatile
 11079                           
 11080                           ; BSR set to: 14
 11081  0159EA  0012               	return		;funcret
 11082  0159EC                     __end_of_EUSART2_Write:
 11083                           	opt stack 0
 11084                           tblptru	equ	0xFF8
 11085                           tblptrh	equ	0xFF7
 11086                           tblptrl	equ	0xFF6
 11087                           tablat	equ	0xFF5
 11088                           prodh	equ	0xFF4
 11089                           prodl	equ	0xFF3
 11090                           intcon	equ	0xFF2
 11091                           postinc0	equ	0xFEE
 11092                           wreg	equ	0xFE8
 11093                           indf1	equ	0xFE7
 11094                           postdec1	equ	0xFE5
 11095                           fsr1h	equ	0xFE2
 11096                           fsr1l	equ	0xFE1
 11097                           indf2	equ	0xFDF
 11098                           postinc2	equ	0xFDE
 11099                           postdec2	equ	0xFDD
 11100                           fsr2h	equ	0xFDA
 11101                           fsr2l	equ	0xFD9
 11102                           status	equ	0xFD8
 11103                           
 11104 ;; *************** function _isdigit *****************
 11105 ;; Defined at:
 11106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  c               1    wreg     unsigned char 
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;  c               1   25[BANK1 ] unsigned char 
 11111 ;; Return value:  Size  Location     Type
 11112 ;;		None               void
 11113 ;; Registers used:
 11114 ;;		wreg, status,2, status,0
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11121 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11122 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11123 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11124 ;;Total ram usage:        3 bytes
 11125 ;; Hardware stack levels used:    1
 11126 ;; Hardware stack levels required when called:   14
 11127 ;; This function calls:
 11128 ;;		Nothing
 11129 ;; This function is called by:
 11130 ;;		_printf
 11131 ;;		_atoi
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text23
 11136  015DF6                     __ptext23:
 11137                           	opt stack 0
 11138  015DF6                     _isdigit:
 11139                           	opt stack 13
 11140                           
 11141                           ; BSR set to: 14
 11142                           ;incstack = 0
 11143                           ;isdigit@c stored from wreg
 11144  015DF6  0101               	movlb	1	; () banked
 11145  015DF8  6F19               	movwf	isdigit@c& (0+255),b
 11146  015DFA  0E00               	movlw	0
 11147  015DFC  0101               	movlb	1	; () banked
 11148  015DFE  6F18               	movwf	_isdigit$2484& (0+255),b
 11149                           
 11150                           ; BSR set to: 1
 11151  015E00  0E3A               	movlw	58
 11152  015E02  6119               	cpfslt	isdigit@c& (0+255),b
 11153  015E04  D005               	goto	l1566
 11154                           
 11155                           ; BSR set to: 1
 11156  015E06  0E2F               	movlw	47
 11157  015E08  6519               	cpfsgt	isdigit@c& (0+255),b
 11158  015E0A  D002               	goto	l1566
 11159                           
 11160                           ; BSR set to: 1
 11161  015E0C  0E01               	movlw	1
 11162  015E0E  6F18               	movwf	_isdigit$2484& (0+255),b
 11163  015E10                     l1566:
 11164                           
 11165                           ; BSR set to: 1
 11166                           
 11167                           ; BSR set to: 1
 11168  015E10  C118  F117         	movff	_isdigit$2484,??_isdigit
 11169  015E14  3117               	rrcf	??_isdigit& (0+255),w,b
 11170  015E16  0012               	return	
 11171  015E18                     __end_of_isdigit:
 11172                           	opt stack 0
 11173                           tblptru	equ	0xFF8
 11174                           tblptrh	equ	0xFF7
 11175                           tblptrl	equ	0xFF6
 11176                           tablat	equ	0xFF5
 11177                           prodh	equ	0xFF4
 11178                           prodl	equ	0xFF3
 11179                           intcon	equ	0xFF2
 11180                           postinc0	equ	0xFEE
 11181                           wreg	equ	0xFE8
 11182                           indf1	equ	0xFE7
 11183                           postdec1	equ	0xFE5
 11184                           fsr1h	equ	0xFE2
 11185                           fsr1l	equ	0xFE1
 11186                           indf2	equ	0xFDF
 11187                           postinc2	equ	0xFDE
 11188                           postdec2	equ	0xFDD
 11189                           fsr2h	equ	0xFDA
 11190                           fsr2l	equ	0xFD9
 11191                           status	equ	0xFD8
 11192                           
 11193 ;; *************** function _fround *****************
 11194 ;; Defined at:
 11195 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;  prec            1    wreg     unsigned char 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  prec            1   94[BANK1 ] unsigned char 
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  3   85[BANK1 ] unsigned char 
 11202 ;; Registers used:
 11203 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11209 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11210 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;Total ram usage:       10 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:   16
 11216 ;; This function calls:
 11217 ;;		___awdiv
 11218 ;;		___awmod
 11219 ;;		___ftmul
 11220 ;;		___wmul
 11221 ;; This function is called by:
 11222 ;;		_printf
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           	psect	text24
 11227  0129AE                     __ptext24:
 11228                           	opt stack 0
 11229  0129AE                     _fround:
 11230                           	opt stack 11
 11231                           
 11232                           ; BSR set to: 1
 11233                           ;incstack = 0
 11234                           ;fround@prec stored from wreg
 11235  0129AE  0101               	movlb	1	; () banked
 11236  0129B0  6F5E               	movwf	fround@prec& (0+255),b
 11237                           
 11238                           ;doprnt.c: 413: if(prec>=110)
 11239  0129B2  0E6D               	movlw	109
 11240  0129B4  0101               	movlb	1	; () banked
 11241  0129B6  655E               	cpfsgt	fround@prec& (0+255),b
 11242  0129B8  D0AF               	goto	l1050
 11243                           
 11244                           ; BSR set to: 1
 11245                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11246  0129BA  0E00               	movlw	0
 11247  0129BC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11248  0129BE  0E03               	movlw	3
 11249  0129C0  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11250  0129C2  0E00               	movlw	0
 11251  0129C4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11252  0129C6  0E0A               	movlw	10
 11253  0129C8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11254  0129CA  0E00               	movlw	0
 11255  0129CC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11256  0129CE  0E64               	movlw	100
 11257  0129D0  6F19               	movwf	___awmod@divisor& (0+255),b
 11258  0129D2  C15E  F117         	movff	fround@prec,___awmod@dividend
 11259  0129D6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11260  0129D8  EC91  F0A9         	call	___awmod	;wreg free
 11261  0129DC  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11262  0129E0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11263  0129E4  ECD8  F0A7         	call	___awdiv	;wreg free
 11264  0129E8  0E09               	movlw	9
 11265  0129EA  0101               	movlb	1	; () banked
 11266  0129EC  251D               	addwf	?___awdiv& (0+255),w,b
 11267  0129EE  6F25               	movwf	___wmul@multiplier& (0+255),b
 11268  0129F0  0E00               	movlw	0
 11269  0129F2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11270  0129F4  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11271  0129F6  EC62  F0AE         	call	___wmul	;wreg free
 11272  0129FA  0EA8               	movlw	low __npowers_
 11273  0129FC  0101               	movlb	1	; () banked
 11274  0129FE  2525               	addwf	?___wmul& (0+255),w,b
 11275  012A00  6EF6               	movwf	tblptrl,c
 11276  012A02  0EF4               	movlw	high __npowers_
 11277  012A04  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11278  012A06  6EF7               	movwf	tblptrh,c
 11279  012A08                     	if	1	;There are 3 active tblptr bytes
 11280  012A08  6AF8               	clrf	tblptru,c
 11281  012A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 11282  012A0C  22F8               	addwfc	tblptru,f,c
 11283  012A0E                     	endif
 11284  012A0E  0009               	tblrd		*+
 11285  012A10  CFF5 F149          	movff	tablat,___ftmul@f2
 11286  012A14  0009               	tblrd		*+
 11287  012A16  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11288  012A1A  000A               	tblrd		*-
 11289  012A1C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11290  012A20  0E00               	movlw	0
 11291  012A22  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11292  012A24  0E64               	movlw	100
 11293  012A26  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11294  012A28  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 11295  012A2C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11296  012A2E  ECD8  F0A7         	call	___awdiv	;wreg free
 11297  012A32  0E12               	movlw	18
 11298  012A34  0101               	movlb	1	; () banked
 11299  012A36  251D               	addwf	?___awdiv& (0+255),w,b
 11300  012A38  6F25               	movwf	___wmul@multiplier& (0+255),b
 11301  012A3A  0E00               	movlw	0
 11302  012A3C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11303  012A3E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11304  012A40  0E00               	movlw	0
 11305  012A42  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11306  012A44  0E03               	movlw	3
 11307  012A46  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11308  012A48  EC62  F0AE         	call	___wmul	;wreg free
 11309  012A4C  0EA8               	movlw	low __npowers_
 11310  012A4E  0101               	movlb	1	; () banked
 11311  012A50  2525               	addwf	?___wmul& (0+255),w,b
 11312  012A52  6EF6               	movwf	tblptrl,c
 11313  012A54  0EF4               	movlw	high __npowers_
 11314  012A56  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11315  012A58  6EF7               	movwf	tblptrh,c
 11316  012A5A                     	if	1	;There are 3 active tblptr bytes
 11317  012A5A  6AF8               	clrf	tblptru,c
 11318  012A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 11319  012A5E  22F8               	addwfc	tblptru,f,c
 11320  012A60                     	endif
 11321  012A60  0009               	tblrd		*+
 11322  012A62  CFF5 F146          	movff	tablat,___ftmul@f1
 11323  012A66  0009               	tblrd		*+
 11324  012A68  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11325  012A6C  000A               	tblrd		*-
 11326  012A6E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11327  012A72  EC60  F0A1         	call	___ftmul	;wreg free
 11328  012A76  C146  F15B         	movff	?___ftmul,_fround$3126
 11329  012A7A  C147  F15C         	movff	?___ftmul+1,_fround$3126+1
 11330  012A7E  C148  F15D         	movff	?___ftmul+2,_fround$3126+2
 11331                           
 11332                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11333  012A82  0E00               	movlw	0
 11334  012A84  0101               	movlb	1	; () banked
 11335  012A86  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11336  012A88  0E03               	movlw	3
 11337  012A8A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11338  012A8C  0E00               	movlw	0
 11339  012A8E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11340  012A90  0E0A               	movlw	10
 11341  012A92  6F19               	movwf	___awmod@divisor& (0+255),b
 11342  012A94  C15E  F117         	movff	fround@prec,___awmod@dividend
 11343  012A98  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11344  012A9A  EC91  F0A9         	call	___awmod	;wreg free
 11345  012A9E  C117  F125         	movff	?___awmod,___wmul@multiplier
 11346  012AA2  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11347  012AA6  EC62  F0AE         	call	___wmul	;wreg free
 11348  012AAA  0EA8               	movlw	low __npowers_
 11349  012AAC  0101               	movlb	1	; () banked
 11350  012AAE  2525               	addwf	?___wmul& (0+255),w,b
 11351  012AB0  6EF6               	movwf	tblptrl,c
 11352  012AB2  0EF4               	movlw	high __npowers_
 11353  012AB4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11354  012AB6  6EF7               	movwf	tblptrh,c
 11355  012AB8                     	if	1	;There are 3 active tblptr bytes
 11356  012AB8  6AF8               	clrf	tblptru,c
 11357  012ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 11358  012ABC  22F8               	addwfc	tblptru,f,c
 11359  012ABE                     	endif
 11360  012ABE  0009               	tblrd		*+
 11361  012AC0  CFF5 F149          	movff	tablat,___ftmul@f2
 11362  012AC4  0009               	tblrd		*+
 11363  012AC6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11364  012ACA  000A               	tblrd		*-
 11365  012ACC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11366  012AD0  C15B  F146         	movff	_fround$3126,___ftmul@f1
 11367  012AD4  C15C  F147         	movff	_fround$3126+1,___ftmul@f1+1
 11368  012AD8  C15D  F148         	movff	_fround$3126+2,___ftmul@f1+2
 11369  012ADC  EC60  F0A1         	call	___ftmul	;wreg free
 11370  012AE0  C146  F158         	movff	?___ftmul,_fround$3127
 11371  012AE4  C147  F159         	movff	?___ftmul+1,_fround$3127+1
 11372  012AE8  C148  F15A         	movff	?___ftmul+2,_fround$3127+2
 11373                           
 11374                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11375  012AEC  C158  F146         	movff	_fround$3127,___ftmul@f1
 11376  012AF0  C159  F147         	movff	_fround$3127+1,___ftmul@f1+1
 11377  012AF4  C15A  F148         	movff	_fround$3127+2,___ftmul@f1+2
 11378  012AF8  0E00               	movlw	0
 11379  012AFA  0101               	movlb	1	; () banked
 11380  012AFC  6F49               	movwf	___ftmul@f2& (0+255),b
 11381  012AFE  0E00               	movlw	0
 11382  012B00  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11383  012B02  0E3F               	movlw	63
 11384  012B04  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11385  012B06  EC60  F0A1         	call	___ftmul	;wreg free
 11386  012B0A  C146  F155         	movff	?___ftmul,?_fround
 11387  012B0E  C147  F156         	movff	?___ftmul+1,?_fround+1
 11388  012B12  C148  F157         	movff	?___ftmul+2,?_fround+2
 11389  012B16  0012               	return	
 11390  012B18                     l1050:
 11391                           
 11392                           ;doprnt.c: 415: else if(prec > 10)
 11393  012B18  0E0A               	movlw	10
 11394  012B1A  0101               	movlb	1	; () banked
 11395  012B1C  655E               	cpfsgt	fround@prec& (0+255),b
 11396  012B1E  D06D               	goto	l1053
 11397                           
 11398                           ; BSR set to: 1
 11399                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11400  012B20  0E00               	movlw	0
 11401  012B22  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11402  012B24  0E03               	movlw	3
 11403  012B26  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11404  012B28  0E00               	movlw	0
 11405  012B2A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11406  012B2C  0E0A               	movlw	10
 11407  012B2E  6F19               	movwf	___awmod@divisor& (0+255),b
 11408  012B30  C15E  F117         	movff	fround@prec,___awmod@dividend
 11409  012B34  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11410  012B36  EC91  F0A9         	call	___awmod	;wreg free
 11411  012B3A  C117  F125         	movff	?___awmod,___wmul@multiplier
 11412  012B3E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11413  012B42  EC62  F0AE         	call	___wmul	;wreg free
 11414  012B46  0EA8               	movlw	low __npowers_
 11415  012B48  0101               	movlb	1	; () banked
 11416  012B4A  2525               	addwf	?___wmul& (0+255),w,b
 11417  012B4C  6EF6               	movwf	tblptrl,c
 11418  012B4E  0EF4               	movlw	high __npowers_
 11419  012B50  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11420  012B52  6EF7               	movwf	tblptrh,c
 11421  012B54                     	if	1	;There are 3 active tblptr bytes
 11422  012B54  6AF8               	clrf	tblptru,c
 11423  012B56  0E00               	movlw	low (__mediumconst shr (0+16))
 11424  012B58  22F8               	addwfc	tblptru,f,c
 11425  012B5A                     	endif
 11426  012B5A  0009               	tblrd		*+
 11427  012B5C  CFF5 F149          	movff	tablat,___ftmul@f2
 11428  012B60  0009               	tblrd		*+
 11429  012B62  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11430  012B66  000A               	tblrd		*-
 11431  012B68  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11432  012B6C  0E00               	movlw	0
 11433  012B6E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11434  012B70  0E0A               	movlw	10
 11435  012B72  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11436  012B74  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 11437  012B78  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11438  012B7A  ECD8  F0A7         	call	___awdiv	;wreg free
 11439  012B7E  0E09               	movlw	9
 11440  012B80  0101               	movlb	1	; () banked
 11441  012B82  251D               	addwf	?___awdiv& (0+255),w,b
 11442  012B84  6F25               	movwf	___wmul@multiplier& (0+255),b
 11443  012B86  0E00               	movlw	0
 11444  012B88  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11445  012B8A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11446  012B8C  0E00               	movlw	0
 11447  012B8E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11448  012B90  0E03               	movlw	3
 11449  012B92  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11450  012B94  EC62  F0AE         	call	___wmul	;wreg free
 11451  012B98  0EA8               	movlw	low __npowers_
 11452  012B9A  0101               	movlb	1	; () banked
 11453  012B9C  2525               	addwf	?___wmul& (0+255),w,b
 11454  012B9E  6EF6               	movwf	tblptrl,c
 11455  012BA0  0EF4               	movlw	high __npowers_
 11456  012BA2  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11457  012BA4  6EF7               	movwf	tblptrh,c
 11458  012BA6                     	if	1	;There are 3 active tblptr bytes
 11459  012BA6  6AF8               	clrf	tblptru,c
 11460  012BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 11461  012BAA  22F8               	addwfc	tblptru,f,c
 11462  012BAC                     	endif
 11463  012BAC  0009               	tblrd		*+
 11464  012BAE  CFF5 F146          	movff	tablat,___ftmul@f1
 11465  012BB2  0009               	tblrd		*+
 11466  012BB4  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11467  012BB8  000A               	tblrd		*-
 11468  012BBA  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11469  012BBE  EC60  F0A1         	call	___ftmul	;wreg free
 11470  012BC2  C146  F15B         	movff	?___ftmul,_fround$3126
 11471  012BC6  C147  F15C         	movff	?___ftmul+1,_fround$3126+1
 11472  012BCA  C148  F15D         	movff	?___ftmul+2,_fround$3126+2
 11473                           
 11474                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11475  012BCE  C15B  F146         	movff	_fround$3126,___ftmul@f1
 11476  012BD2  C15C  F147         	movff	_fround$3126+1,___ftmul@f1+1
 11477  012BD6  C15D  F148         	movff	_fround$3126+2,___ftmul@f1+2
 11478  012BDA  0E00               	movlw	0
 11479  012BDC  0101               	movlb	1	; () banked
 11480  012BDE  6F49               	movwf	___ftmul@f2& (0+255),b
 11481  012BE0  0E00               	movlw	0
 11482  012BE2  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11483  012BE4  0E3F               	movlw	63
 11484  012BE6  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11485  012BE8  EC60  F0A1         	call	___ftmul	;wreg free
 11486  012BEC  C146  F155         	movff	?___ftmul,?_fround
 11487  012BF0  C147  F156         	movff	?___ftmul+1,?_fround+1
 11488  012BF4  C148  F157         	movff	?___ftmul+2,?_fround+2
 11489  012BF8  0012               	return	
 11490  012BFA                     l1053:
 11491                           
 11492                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11493  012BFA  0101               	movlb	1	; () banked
 11494  012BFC  515E               	movf	fround@prec& (0+255),w,b
 11495  012BFE  0D03               	mullw	3
 11496  012C00  0EA8               	movlw	low __npowers_
 11497  012C02  24F3               	addwf	prodl,w,c
 11498  012C04  6EF6               	movwf	tblptrl,c
 11499  012C06  0EF4               	movlw	high __npowers_
 11500  012C08  20F4               	addwfc	prodh,w,c
 11501  012C0A  6EF7               	movwf	tblptrh,c
 11502  012C0C                     	if	1	;There are 3 active tblptr bytes
 11503  012C0C  6AF8               	clrf	tblptru,c
 11504  012C0E  0E00               	movlw	low (__mediumconst shr (0+16))
 11505  012C10  22F8               	addwfc	tblptru,f,c
 11506  012C12                     	endif
 11507  012C12  0009               	tblrd		*+
 11508  012C14  CFF5 F146          	movff	tablat,___ftmul@f1
 11509  012C18  0009               	tblrd		*+
 11510  012C1A  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11511  012C1E  000A               	tblrd		*-
 11512  012C20  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11513  012C24  0E00               	movlw	0
 11514  012C26  6F49               	movwf	___ftmul@f2& (0+255),b
 11515  012C28  0E00               	movlw	0
 11516  012C2A  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11517  012C2C  0E3F               	movlw	63
 11518  012C2E  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11519  012C30  EC60  F0A1         	call	___ftmul	;wreg free
 11520  012C34  C146  F155         	movff	?___ftmul,?_fround
 11521  012C38  C147  F156         	movff	?___ftmul+1,?_fround+1
 11522  012C3C  C148  F157         	movff	?___ftmul+2,?_fround+2
 11523  012C40  0012               	return	
 11524  012C42                     __end_of_fround:
 11525                           	opt stack 0
 11526                           tblptru	equ	0xFF8
 11527                           tblptrh	equ	0xFF7
 11528                           tblptrl	equ	0xFF6
 11529                           tablat	equ	0xFF5
 11530                           prodh	equ	0xFF4
 11531                           prodl	equ	0xFF3
 11532                           intcon	equ	0xFF2
 11533                           postinc0	equ	0xFEE
 11534                           wreg	equ	0xFE8
 11535                           indf1	equ	0xFE7
 11536                           postdec1	equ	0xFE5
 11537                           fsr1h	equ	0xFE2
 11538                           fsr1l	equ	0xFE1
 11539                           indf2	equ	0xFDF
 11540                           postinc2	equ	0xFDE
 11541                           postdec2	equ	0xFDD
 11542                           fsr2h	equ	0xFDA
 11543                           fsr2l	equ	0xFD9
 11544                           status	equ	0xFD8
 11545                           
 11546 ;; *************** function ___wmul *****************
 11547 ;; Defined at:
 11548 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;  multiplier      2   37[BANK1 ] unsigned int 
 11551 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  product         2   41[BANK1 ] unsigned int 
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  2   37[BANK1 ] unsigned int 
 11556 ;; Registers used:
 11557 ;;		wreg, status,2, status,0, prodl, prodh
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11563 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11564 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11566 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11567 ;;Total ram usage:        6 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:   14
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		_fround
 11574 ;;		_scale
 11575 ;;		_printf
 11576 ;;		_atoi
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           	psect	text25
 11581  015CC4                     __ptext25:
 11582                           	opt stack 0
 11583  015CC4                     ___wmul:
 11584                           	opt stack 12
 11585                           
 11586                           ;incstack = 0
 11587  015CC4  0101               	movlb	1	; () banked
 11588  015CC6  5125               	movf	___wmul@multiplier& (0+255),w,b
 11589  015CC8  0327               	mulwf	___wmul@multiplicand& (0+255),b
 11590  015CCA  CFF3 F129          	movff	prodl,___wmul@product
 11591  015CCE  CFF4 F12A          	movff	prodh,___wmul@product+1
 11592  015CD2  5125               	movf	___wmul@multiplier& (0+255),w,b
 11593  015CD4  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11594  015CD6  50F3               	movf	prodl,w,c
 11595  015CD8  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 11596  015CDA  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11597  015CDC  0327               	mulwf	___wmul@multiplicand& (0+255),b
 11598  015CDE  50F3               	movf	prodl,w,c
 11599  015CE0  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 11600                           
 11601                           ; BSR set to: 1
 11602  015CE2  C129  F125         	movff	___wmul@product,?___wmul
 11603  015CE6  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 11604  015CEA  0012               	return	
 11605  015CEC                     __end_of___wmul:
 11606                           	opt stack 0
 11607                           tblptru	equ	0xFF8
 11608                           tblptrh	equ	0xFF7
 11609                           tblptrl	equ	0xFF6
 11610                           tablat	equ	0xFF5
 11611                           prodh	equ	0xFF4
 11612                           prodl	equ	0xFF3
 11613                           intcon	equ	0xFF2
 11614                           postinc0	equ	0xFEE
 11615                           wreg	equ	0xFE8
 11616                           indf1	equ	0xFE7
 11617                           postdec1	equ	0xFE5
 11618                           fsr1h	equ	0xFE2
 11619                           fsr1l	equ	0xFE1
 11620                           indf2	equ	0xFDF
 11621                           postinc2	equ	0xFDE
 11622                           postdec2	equ	0xFDD
 11623                           fsr2h	equ	0xFDA
 11624                           fsr2l	equ	0xFD9
 11625                           status	equ	0xFD8
 11626                           
 11627 ;; *************** function ___ftmul *****************
 11628 ;; Defined at:
 11629 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;  f1              3   70[BANK1 ] float 
 11632 ;;  f2              3   73[BANK1 ] float 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 11635 ;;  sign            1   84[BANK1 ] unsigned char 
 11636 ;;  cntr            1   83[BANK1 ] unsigned char 
 11637 ;;  exp             1   79[BANK1 ] unsigned char 
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  3   70[BANK1 ] float 
 11640 ;; Registers used:
 11641 ;;		wreg, status,2, status,0, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11647 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11648 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11649 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;Total ram usage:       15 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:   15
 11654 ;; This function calls:
 11655 ;;		___ftpack
 11656 ;; This function is called by:
 11657 ;;		_ringBufferLUT
 11658 ;;		_fround
 11659 ;;		_scale
 11660 ;;		_printf
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text26
 11665  0142C0                     __ptext26:
 11666                           	opt stack 0
 11667  0142C0                     ___ftmul:
 11668                           	opt stack 11
 11669                           
 11670                           ; BSR set to: 1
 11671                           ;incstack = 0
 11672  0142C0  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 11673  0142C4  0101               	movlb	1	; () banked
 11674  0142C6  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 11675  0142C8  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 11676  0142CA  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11677  0142CC  374C               	rlcf	??___ftmul& (0+255),f,b
 11678  0142CE  E301               	bnc	u9021
 11679  0142D0  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 11680  0142D2                     u9021:
 11681  0142D2  514C               	movf	??___ftmul& (0+255),w,b
 11682  0142D4  6F4F               	movwf	___ftmul@exp& (0+255),b
 11683  0142D6  514F               	movf	___ftmul@exp& (0+255),w,b
 11684  0142D8  A4D8               	btfss	status,2,c
 11685  0142DA  D007               	goto	l1530
 11686                           
 11687                           ; BSR set to: 1
 11688  0142DC  0E00               	movlw	0
 11689  0142DE  6F46               	movwf	?___ftmul& (0+255),b
 11690  0142E0  0E00               	movlw	0
 11691  0142E2  6F47               	movwf	(?___ftmul+1)& (0+255),b
 11692  0142E4  0E00               	movlw	0
 11693  0142E6  6F48               	movwf	(?___ftmul+2)& (0+255),b
 11694                           
 11695                           ; BSR set to: 1
 11696  0142E8  0012               	return	
 11697  0142EA                     l1530:
 11698                           
 11699                           ; BSR set to: 1
 11700                           
 11701                           ; BSR set to: 1
 11702  0142EA  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 11703  0142EE  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 11704  0142F0  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 11705  0142F2  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11706  0142F4  374C               	rlcf	??___ftmul& (0+255),f,b
 11707  0142F6  E301               	bnc	u9041
 11708  0142F8  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 11709  0142FA                     u9041:
 11710  0142FA  514C               	movf	??___ftmul& (0+255),w,b
 11711  0142FC  6F54               	movwf	___ftmul@sign& (0+255),b
 11712  0142FE  5154               	movf	___ftmul@sign& (0+255),w,b
 11713  014300  A4D8               	btfss	status,2,c
 11714  014302  D007               	goto	l1532
 11715                           
 11716                           ; BSR set to: 1
 11717  014304  0E00               	movlw	0
 11718  014306  6F46               	movwf	?___ftmul& (0+255),b
 11719  014308  0E00               	movlw	0
 11720  01430A  6F47               	movwf	(?___ftmul+1)& (0+255),b
 11721  01430C  0E00               	movlw	0
 11722  01430E  6F48               	movwf	(?___ftmul+2)& (0+255),b
 11723                           
 11724                           ; BSR set to: 1
 11725  014310  0012               	return	
 11726  014312                     l1532:
 11727                           
 11728                           ; BSR set to: 1
 11729                           
 11730                           ; BSR set to: 1
 11731  014312  5154               	movf	___ftmul@sign& (0+255),w,b
 11732  014314  0F7B               	addlw	123
 11733  014316  274F               	addwf	___ftmul@exp& (0+255),f,b
 11734                           
 11735                           ; BSR set to: 1
 11736  014318  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 11737  01431C  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 11738  01431E  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 11739  014320  0E80               	movlw	128
 11740  014322  1754               	andwf	___ftmul@sign& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 1
 11743  014324  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11744                           
 11745                           ; BSR set to: 1
 11746  014326  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11747                           
 11748                           ; BSR set to: 1
 11749  014328  0EFF               	movlw	255
 11750  01432A  1749               	andwf	___ftmul@f2& (0+255),f,b
 11751  01432C  0EFF               	movlw	255
 11752  01432E  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11753  014330  0E00               	movlw	0
 11754  014332  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11755                           
 11756                           ; BSR set to: 1
 11757  014334  0E00               	movlw	0
 11758  014336  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 11759  014338  0E00               	movlw	0
 11760  01433A  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11761  01433C  0E00               	movlw	0
 11762  01433E  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 11763                           
 11764                           ; BSR set to: 1
 11765  014340  0E07               	movlw	7
 11766  014342  6F53               	movwf	___ftmul@cntr& (0+255),b
 11767  014344                     
 11768                           ; BSR set to: 1
 11769                           
 11770                           ; BSR set to: 1
 11771  014344  A146               	btfss	___ftmul@f1& (0+255),0,b
 11772  014346  D006               	goto	l1534
 11773                           
 11774                           ; BSR set to: 1
 11775  014348  5149               	movf	___ftmul@f2& (0+255),w,b
 11776  01434A  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11777  01434C  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 11778  01434E  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11779  014350  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 11780  014352  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11781  014354                     l1534:
 11782                           
 11783                           ; BSR set to: 1
 11784                           
 11785                           ; BSR set to: 1
 11786  014354  90D8               	bcf	status,0,c
 11787  014356  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11788  014358  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11789  01435A  3346               	rrcf	___ftmul@f1& (0+255),f,b
 11790  01435C  90D8               	bcf	status,0,c
 11791  01435E  3749               	rlcf	___ftmul@f2& (0+255),f,b
 11792  014360  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 11793  014362  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 11794                           
 11795                           ; BSR set to: 1
 11796  014364  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 11797  014366  D7EE               	goto	l1533
 11798                           
 11799                           ; BSR set to: 1
 11800                           
 11801                           ; BSR set to: 1
 11802  014368  0E09               	movlw	9
 11803  01436A  6F53               	movwf	___ftmul@cntr& (0+255),b
 11804  01436C                     
 11805                           ; BSR set to: 1
 11806                           
 11807                           ; BSR set to: 1
 11808  01436C  A146               	btfss	___ftmul@f1& (0+255),0,b
 11809  01436E  D006               	goto	l1537
 11810                           
 11811                           ; BSR set to: 1
 11812  014370  5149               	movf	___ftmul@f2& (0+255),w,b
 11813  014372  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11814  014374  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 11815  014376  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11816  014378  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 11817  01437A  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11818  01437C                     l1537:
 11819                           
 11820                           ; BSR set to: 1
 11821                           
 11822                           ; BSR set to: 1
 11823  01437C  90D8               	bcf	status,0,c
 11824  01437E  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11825  014380  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11826  014382  3346               	rrcf	___ftmul@f1& (0+255),f,b
 11827  014384  90D8               	bcf	status,0,c
 11828  014386  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 11829  014388  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 11830  01438A  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 11831                           
 11832                           ; BSR set to: 1
 11833  01438C  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 11834  01438E  D7EE               	goto	l1536
 11835                           
 11836                           ; BSR set to: 1
 11837                           
 11838                           ; BSR set to: 1
 11839  014390  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 11840  014394  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 11841  014398  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 11842  01439C  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 11843  0143A0  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 11844  0143A4  EC64  F0A5         	call	___ftpack	;wreg free
 11845  0143A8  C117  F146         	movff	?___ftpack,?___ftmul
 11846  0143AC  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 11847  0143B0  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 11848  0143B4  0012               	return	
 11849  0143B6                     __end_of___ftmul:
 11850                           	opt stack 0
 11851                           tblptru	equ	0xFF8
 11852                           tblptrh	equ	0xFF7
 11853                           tblptrl	equ	0xFF6
 11854                           tablat	equ	0xFF5
 11855                           prodh	equ	0xFF4
 11856                           prodl	equ	0xFF3
 11857                           intcon	equ	0xFF2
 11858                           postinc0	equ	0xFEE
 11859                           wreg	equ	0xFE8
 11860                           indf1	equ	0xFE7
 11861                           postdec1	equ	0xFE5
 11862                           fsr1h	equ	0xFE2
 11863                           fsr1l	equ	0xFE1
 11864                           indf2	equ	0xFDF
 11865                           postinc2	equ	0xFDE
 11866                           postdec2	equ	0xFDD
 11867                           fsr2h	equ	0xFDA
 11868                           fsr2l	equ	0xFD9
 11869                           status	equ	0xFD8
 11870                           
 11871 ;; *************** function ___awmod *****************
 11872 ;; Defined at:
 11873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;  dividend        2   23[BANK1 ] int 
 11876 ;;  divisor         2   25[BANK1 ] int 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;  sign            1   28[BANK1 ] unsigned char 
 11879 ;;  counter         1   27[BANK1 ] unsigned char 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  2   23[BANK1 ] int 
 11882 ;; Registers used:
 11883 ;;		wreg, status,2, status,0
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11889 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11890 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;Total ram usage:        6 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:   14
 11896 ;; This function calls:
 11897 ;;		Nothing
 11898 ;; This function is called by:
 11899 ;;		_fround
 11900 ;;		_scale
 11901 ;; This function uses a non-reentrant model
 11902 ;;
 11903                           
 11904                           	psect	text27
 11905  015322                     __ptext27:
 11906                           	opt stack 0
 11907  015322                     ___awmod:
 11908                           	opt stack 12
 11909                           
 11910                           ;incstack = 0
 11911  015322  0E00               	movlw	0
 11912  015324  0101               	movlb	1	; () banked
 11913  015326  6F1C               	movwf	___awmod@sign& (0+255),b
 11914                           
 11915                           ; BSR set to: 1
 11916  015328  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11917  01532A  D006               	goto	l1371
 11918                           
 11919                           ; BSR set to: 1
 11920  01532C  6D17               	negf	___awmod@dividend& (0+255),b
 11921  01532E  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 11922  015330  B0D8               	btfsc	status,0,c
 11923  015332  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 11924                           
 11925                           ; BSR set to: 1
 11926  015334  0E01               	movlw	1
 11927  015336  6F1C               	movwf	___awmod@sign& (0+255),b
 11928  015338                     l1371:
 11929                           
 11930                           ; BSR set to: 1
 11931                           
 11932                           ; BSR set to: 1
 11933  015338  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11934  01533A  D004               	goto	l1372
 11935                           
 11936                           ; BSR set to: 1
 11937  01533C  6D19               	negf	___awmod@divisor& (0+255),b
 11938  01533E  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 11939  015340  B0D8               	btfsc	status,0,c
 11940  015342  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 11941  015344                     l1372:
 11942                           
 11943                           ; BSR set to: 1
 11944                           
 11945                           ; BSR set to: 1
 11946  015344  5119               	movf	___awmod@divisor& (0+255),w,b
 11947  015346  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11948  015348  B4D8               	btfsc	status,2,c
 11949  01534A  D018               	goto	l1379
 11950                           
 11951                           ; BSR set to: 1
 11952  01534C  0E01               	movlw	1
 11953  01534E  6F1B               	movwf	___awmod@counter& (0+255),b
 11954  015350  D004               	goto	l1374
 11955  015352                     
 11956                           ; BSR set to: 1
 11957                           
 11958                           ; BSR set to: 1
 11959  015352  90D8               	bcf	status,0,c
 11960  015354  3719               	rlcf	___awmod@divisor& (0+255),f,b
 11961  015356  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11962  015358  2B1B               	incf	___awmod@counter& (0+255),f,b
 11963  01535A                     l1374:
 11964                           
 11965                           ; BSR set to: 1
 11966                           
 11967                           ; BSR set to: 1
 11968  01535A  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11969  01535C  D7FA               	goto	l1375
 11970  01535E                     u9190:
 11971                           
 11972                           ; BSR set to: 1
 11973                           
 11974                           ; BSR set to: 1
 11975                           
 11976                           ; BSR set to: 1
 11977  01535E  5119               	movf	___awmod@divisor& (0+255),w,b
 11978  015360  5D17               	subwf	___awmod@dividend& (0+255),w,b
 11979  015362  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 11980  015364  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11981  015366  A0D8               	btfss	status,0,c
 11982  015368  D004               	goto	l1378
 11983                           
 11984                           ; BSR set to: 1
 11985  01536A  5119               	movf	___awmod@divisor& (0+255),w,b
 11986  01536C  5F17               	subwf	___awmod@dividend& (0+255),f,b
 11987  01536E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 11988  015370  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11989  015372                     l1378:
 11990                           
 11991                           ; BSR set to: 1
 11992                           
 11993                           ; BSR set to: 1
 11994  015372  90D8               	bcf	status,0,c
 11995  015374  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11996  015376  3319               	rrcf	___awmod@divisor& (0+255),f,b
 11997                           
 11998                           ; BSR set to: 1
 11999  015378  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 12000  01537A  D7F1               	goto	u9190
 12001  01537C                     l1379:
 12002                           
 12003                           ; BSR set to: 1
 12004                           
 12005                           ; BSR set to: 1
 12006                           
 12007                           ; BSR set to: 1
 12008  01537C  511C               	movf	___awmod@sign& (0+255),w,b
 12009  01537E  B4D8               	btfsc	status,2,c
 12010  015380  D004               	goto	l1380
 12011                           
 12012                           ; BSR set to: 1
 12013  015382  6D17               	negf	___awmod@dividend& (0+255),b
 12014  015384  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12015  015386  B0D8               	btfsc	status,0,c
 12016  015388  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12017  01538A                     l1380:
 12018                           
 12019                           ; BSR set to: 1
 12020                           
 12021                           ; BSR set to: 1
 12022  01538A  C117  F117         	movff	___awmod@dividend,?___awmod
 12023  01538E  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 12024  015392  0012               	return	
 12025  015394                     __end_of___awmod:
 12026                           	opt stack 0
 12027                           tblptru	equ	0xFF8
 12028                           tblptrh	equ	0xFF7
 12029                           tblptrl	equ	0xFF6
 12030                           tablat	equ	0xFF5
 12031                           prodh	equ	0xFF4
 12032                           prodl	equ	0xFF3
 12033                           intcon	equ	0xFF2
 12034                           postinc0	equ	0xFEE
 12035                           wreg	equ	0xFE8
 12036                           indf1	equ	0xFE7
 12037                           postdec1	equ	0xFE5
 12038                           fsr1h	equ	0xFE2
 12039                           fsr1l	equ	0xFE1
 12040                           indf2	equ	0xFDF
 12041                           postinc2	equ	0xFDE
 12042                           postdec2	equ	0xFDD
 12043                           fsr2h	equ	0xFDA
 12044                           fsr2l	equ	0xFD9
 12045                           status	equ	0xFD8
 12046                           
 12047 ;; *************** function ___awdiv *****************
 12048 ;; Defined at:
 12049 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;  dividend        2   29[BANK1 ] int 
 12052 ;;  divisor         2   31[BANK1 ] int 
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;  quotient        2   35[BANK1 ] int 
 12055 ;;  sign            1   34[BANK1 ] unsigned char 
 12056 ;;  counter         1   33[BANK1 ] unsigned char 
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  2   29[BANK1 ] int 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12066 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12067 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12069 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12070 ;;Total ram usage:        8 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:   14
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_fround
 12077 ;;		_scale
 12078 ;;		_printf
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text28
 12083  014FB0                     __ptext28:
 12084                           	opt stack 0
 12085  014FB0                     ___awdiv:
 12086                           	opt stack 12
 12087                           
 12088                           ; BSR set to: 1
 12089                           ;incstack = 0
 12090  014FB0  0E00               	movlw	0
 12091  014FB2  0101               	movlb	1	; () banked
 12092  014FB4  6F22               	movwf	___awdiv@sign& (0+255),b
 12093                           
 12094                           ; BSR set to: 1
 12095  014FB6  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12096  014FB8  D006               	goto	l1358
 12097                           
 12098                           ; BSR set to: 1
 12099  014FBA  6D1F               	negf	___awdiv@divisor& (0+255),b
 12100  014FBC  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12101  014FBE  B0D8               	btfsc	status,0,c
 12102  014FC0  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12103                           
 12104                           ; BSR set to: 1
 12105  014FC2  0E01               	movlw	1
 12106  014FC4  6F22               	movwf	___awdiv@sign& (0+255),b
 12107  014FC6                     l1358:
 12108                           
 12109                           ; BSR set to: 1
 12110                           
 12111                           ; BSR set to: 1
 12112  014FC6  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12113  014FC8  D006               	goto	l1359
 12114                           
 12115                           ; BSR set to: 1
 12116  014FCA  6D1D               	negf	___awdiv@dividend& (0+255),b
 12117  014FCC  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12118  014FCE  B0D8               	btfsc	status,0,c
 12119  014FD0  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12120                           
 12121                           ; BSR set to: 1
 12122  014FD2  0E01               	movlw	1
 12123  014FD4  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 12124  014FD6                     l1359:
 12125                           
 12126                           ; BSR set to: 1
 12127                           
 12128                           ; BSR set to: 1
 12129  014FD6  0E00               	movlw	0
 12130  014FD8  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 12131  014FDA  0E00               	movlw	0
 12132  014FDC  6F23               	movwf	___awdiv@quotient& (0+255),b
 12133                           
 12134                           ; BSR set to: 1
 12135  014FDE  511F               	movf	___awdiv@divisor& (0+255),w,b
 12136  014FE0  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12137  014FE2  B4D8               	btfsc	status,2,c
 12138  014FE4  D01C               	goto	l1366
 12139                           
 12140                           ; BSR set to: 1
 12141  014FE6  0E01               	movlw	1
 12142  014FE8  6F21               	movwf	___awdiv@counter& (0+255),b
 12143  014FEA  D004               	goto	l1361
 12144  014FEC                     
 12145                           ; BSR set to: 1
 12146                           
 12147                           ; BSR set to: 1
 12148  014FEC  90D8               	bcf	status,0,c
 12149  014FEE  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 12150  014FF0  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12151  014FF2  2B21               	incf	___awdiv@counter& (0+255),f,b
 12152  014FF4                     l1361:
 12153                           
 12154                           ; BSR set to: 1
 12155                           
 12156                           ; BSR set to: 1
 12157  014FF4  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12158  014FF6  D7FA               	goto	l1362
 12159  014FF8                     u9130:
 12160                           
 12161                           ; BSR set to: 1
 12162                           
 12163                           ; BSR set to: 1
 12164                           
 12165                           ; BSR set to: 1
 12166  014FF8  90D8               	bcf	status,0,c
 12167  014FFA  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 12168  014FFC  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12169                           
 12170                           ; BSR set to: 1
 12171  014FFE  511F               	movf	___awdiv@divisor& (0+255),w,b
 12172  015000  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 12173  015002  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12174  015004  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12175  015006  A0D8               	btfss	status,0,c
 12176  015008  D005               	goto	l1365
 12177                           
 12178                           ; BSR set to: 1
 12179  01500A  511F               	movf	___awdiv@divisor& (0+255),w,b
 12180  01500C  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 12181  01500E  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12182  015010  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12183                           
 12184                           ; BSR set to: 1
 12185  015012  8123               	bsf	___awdiv@quotient& (0+255),0,b
 12186  015014                     l1365:
 12187                           
 12188                           ; BSR set to: 1
 12189                           
 12190                           ; BSR set to: 1
 12191  015014  90D8               	bcf	status,0,c
 12192  015016  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12193  015018  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 12194                           
 12195                           ; BSR set to: 1
 12196  01501A  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 12197  01501C  D7ED               	goto	u9130
 12198  01501E                     l1366:
 12199                           
 12200                           ; BSR set to: 1
 12201                           
 12202                           ; BSR set to: 1
 12203                           
 12204                           ; BSR set to: 1
 12205  01501E  5122               	movf	___awdiv@sign& (0+255),w,b
 12206  015020  B4D8               	btfsc	status,2,c
 12207  015022  D004               	goto	l1367
 12208                           
 12209                           ; BSR set to: 1
 12210  015024  6D23               	negf	___awdiv@quotient& (0+255),b
 12211  015026  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12212  015028  B0D8               	btfsc	status,0,c
 12213  01502A  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12214  01502C                     l1367:
 12215                           
 12216                           ; BSR set to: 1
 12217                           
 12218                           ; BSR set to: 1
 12219  01502C  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 12220  015030  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 12221  015034  0012               	return	
 12222  015036                     __end_of___awdiv:
 12223                           	opt stack 0
 12224                           tblptru	equ	0xFF8
 12225                           tblptrh	equ	0xFF7
 12226                           tblptrl	equ	0xFF6
 12227                           tablat	equ	0xFF5
 12228                           prodh	equ	0xFF4
 12229                           prodl	equ	0xFF3
 12230                           intcon	equ	0xFF2
 12231                           postinc0	equ	0xFEE
 12232                           wreg	equ	0xFE8
 12233                           indf1	equ	0xFE7
 12234                           postdec1	equ	0xFE5
 12235                           fsr1h	equ	0xFE2
 12236                           fsr1l	equ	0xFE1
 12237                           indf2	equ	0xFDF
 12238                           postinc2	equ	0xFDE
 12239                           postdec2	equ	0xFDD
 12240                           fsr2h	equ	0xFDA
 12241                           fsr2l	equ	0xFD9
 12242                           status	equ	0xFD8
 12243                           
 12244 ;; *************** function __tdiv_to_l_ *****************
 12245 ;; Defined at:
 12246 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  f1              3   23[BANK1 ] float 
 12249 ;;  f2              3   26[BANK1 ] float 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  quot            4   32[BANK1 ] unsigned long 
 12252 ;;  exp1            1   37[BANK1 ] unsigned char 
 12253 ;;  cntr            1   36[BANK1 ] unsigned char 
 12254 ;; Return value:  Size  Location     Type
 12255 ;;                  4   23[BANK1 ] unsigned long 
 12256 ;; Registers used:
 12257 ;;		wreg, status,2, status,0
 12258 ;; Tracked objects:
 12259 ;;		On entry : 0/0
 12260 ;;		On exit  : 0/0
 12261 ;;		Unchanged: 0/0
 12262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12263 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12264 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12265 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12266 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12267 ;;Total ram usage:       15 bytes
 12268 ;; Hardware stack levels used:    1
 12269 ;; Hardware stack levels required when called:   14
 12270 ;; This function calls:
 12271 ;;		Nothing
 12272 ;; This function is called by:
 12273 ;;		_printf
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text29
 12278  013BF4                     __ptext29:
 12279                           	opt stack 0
 12280  013BF4                     __tdiv_to_l_:
 12281                           	opt stack 13
 12282                           
 12283                           ; BSR set to: 1
 12284                           ;incstack = 0
 12285  013BF4  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 12286  013BF8  0101               	movlb	1	; () banked
 12287  013BFA  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12288  013BFC  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12289  013BFE  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12290  013C00  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12291  013C02  E301               	bnc	u9421
 12292  013C04  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12293  013C06                     u9421:
 12294  013C06  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 12295  013C08  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 12296  013C0A  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12297  013C0C  A4D8               	btfss	status,2,c
 12298  013C0E  D009               	goto	l1506
 12299                           
 12300                           ; BSR set to: 1
 12301  013C10  0E00               	movlw	0
 12302  013C12  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12303  013C14  0E00               	movlw	0
 12304  013C16  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12305  013C18  0E00               	movlw	0
 12306  013C1A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12307  013C1C  0E00               	movlw	0
 12308  013C1E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12309                           
 12310                           ; BSR set to: 1
 12311  013C20  0012               	return	
 12312  013C22                     l1506:
 12313                           
 12314                           ; BSR set to: 1
 12315                           
 12316                           ; BSR set to: 1
 12317  013C22  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 12318  013C26  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12319  013C28  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12320  013C2A  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12321  013C2C  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12322  013C2E  E301               	bnc	u9441
 12323  013C30  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12324  013C32                     u9441:
 12325  013C32  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 12326  013C34  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12327  013C36  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12328  013C38  A4D8               	btfss	status,2,c
 12329  013C3A  D009               	goto	l1508
 12330                           
 12331                           ; BSR set to: 1
 12332  013C3C  0E00               	movlw	0
 12333  013C3E  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12334  013C40  0E00               	movlw	0
 12335  013C42  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12336  013C44  0E00               	movlw	0
 12337  013C46  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12338  013C48  0E00               	movlw	0
 12339  013C4A  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12340                           
 12341                           ; BSR set to: 1
 12342  013C4C  0012               	return	
 12343  013C4E                     l1508:
 12344                           
 12345                           ; BSR set to: 1
 12346                           
 12347                           ; BSR set to: 1
 12348  013C4E  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 12349                           
 12350                           ; BSR set to: 1
 12351  013C50  0EFF               	movlw	255
 12352  013C52  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 12353  013C54  0EFF               	movlw	255
 12354  013C56  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12355  013C58  0E00               	movlw	0
 12356  013C5A  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12357  013C5C  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 12358                           
 12359                           ; BSR set to: 1
 12360  013C5E  0EFF               	movlw	255
 12361  013C60  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 12362  013C62  0EFF               	movlw	255
 12363  013C64  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 12364  013C66  0E00               	movlw	0
 12365  013C68  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 12366                           
 12367                           ; BSR set to: 1
 12368  013C6A  0E00               	movlw	0
 12369  013C6C  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 12370  013C6E  0E00               	movlw	0
 12371  013C70  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 12372  013C72  0E00               	movlw	0
 12373  013C74  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 12374  013C76  0E00               	movlw	0
 12375  013C78  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 12376                           
 12377                           ; BSR set to: 1
 12378  013C7A  0E7F               	movlw	127
 12379  013C7C  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12380                           
 12381                           ; BSR set to: 1
 12382  013C7E  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12383  013C80  0F98               	addlw	152
 12384  013C82  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12385                           
 12386                           ; BSR set to: 1
 12387  013C84  0E18               	movlw	24
 12388  013C86  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12389  013C88                     l1509:
 12390                           
 12391                           ; BSR set to: 1
 12392  013C88  90D8               	bcf	status,0,c
 12393  013C8A  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12394  013C8C  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12395  013C8E  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12396  013C90  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12397                           
 12398                           ; BSR set to: 1
 12399  013C92  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12400  013C94  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 12401  013C96  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12402  013C98  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12403  013C9A  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12404  013C9C  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 12405  013C9E  A0D8               	btfss	status,0,c
 12406  013CA0  D007               	goto	l1510
 12407                           
 12408                           ; BSR set to: 1
 12409  013CA2  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12410  013CA4  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 12411  013CA6  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12412  013CA8  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12413  013CAA  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12414  013CAC  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12415                           
 12416                           ; BSR set to: 1
 12417  013CAE  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 12418  013CB0                     l1510:
 12419                           
 12420                           ; BSR set to: 1
 12421  013CB0  90D8               	bcf	status,0,c
 12422  013CB2  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 12423  013CB4  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12424  013CB6  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12425                           
 12426                           ; BSR set to: 1
 12427  013CB8  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 12428  013CBA  D7E6               	goto	l1509
 12429                           
 12430                           ; BSR set to: 1
 12431                           
 12432                           ; BSR set to: 1
 12433  013CBC  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 12434  013CBE  D016               	goto	l1512
 12435                           
 12436                           ; BSR set to: 1
 12437  013CC0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12438  013CC2  0A80               	xorlw	128
 12439  013CC4  0F97               	addlw	151
 12440  013CC6  B0D8               	btfsc	status,0,c
 12441  013CC8  D009               	goto	l1513
 12442                           
 12443                           ; BSR set to: 1
 12444  013CCA  0E00               	movlw	0
 12445  013CCC  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12446  013CCE  0E00               	movlw	0
 12447  013CD0  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12448  013CD2  0E00               	movlw	0
 12449  013CD4  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12450  013CD6  0E00               	movlw	0
 12451  013CD8  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12452                           
 12453                           ; BSR set to: 1
 12454  013CDA  0012               	return	
 12455  013CDC                     l1513:
 12456                           
 12457                           ; BSR set to: 1
 12458                           
 12459                           ; BSR set to: 1
 12460                           
 12461                           ; BSR set to: 1
 12462  013CDC  90D8               	bcf	status,0,c
 12463  013CDE  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12464  013CE0  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12465  013CE2  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12466  013CE4  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 12467                           
 12468                           ; BSR set to: 1
 12469  013CE6  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 12470  013CE8  D7F9               	goto	l1513
 12471                           
 12472                           ; BSR set to: 1
 12473  013CEA  D015               	goto	u9500
 12474  013CEC                     l1512:
 12475                           
 12476                           ; BSR set to: 1
 12477                           
 12478                           ; BSR set to: 1
 12479  013CEC  0E17               	movlw	23
 12480  013CEE  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 12481  013CF0  D00F               	goto	l1518
 12482                           
 12483                           ; BSR set to: 1
 12484  013CF2  0E00               	movlw	0
 12485  013CF4  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12486  013CF6  0E00               	movlw	0
 12487  013CF8  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12488  013CFA  0E00               	movlw	0
 12489  013CFC  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12490  013CFE  0E00               	movlw	0
 12491  013D00  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12492                           
 12493                           ; BSR set to: 1
 12494  013D02  0012               	return	
 12495  013D04                     
 12496                           ; BSR set to: 1
 12497                           
 12498                           ; BSR set to: 1
 12499  013D04  90D8               	bcf	status,0,c
 12500  013D06  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12501  013D08  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12502  013D0A  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12503  013D0C  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12504  013D0E  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 12505  013D10                     l1518:
 12506                           
 12507                           ; BSR set to: 1
 12508                           
 12509                           ; BSR set to: 1
 12510  013D10  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12511  013D12  A4D8               	btfss	status,2,c
 12512  013D14  D7F7               	goto	l1519
 12513  013D16                     u9500:
 12514                           
 12515                           ; BSR set to: 1
 12516                           
 12517                           ; BSR set to: 1
 12518  013D16  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 12519  013D1A  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 12520  013D1E  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 12521  013D22  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 12522                           
 12523                           ; BSR set to: 1
 12524  013D26  0012               	return		;funcret
 12525  013D28                     __end_of__tdiv_to_l_:
 12526                           	opt stack 0
 12527                           tblptru	equ	0xFF8
 12528                           tblptrh	equ	0xFF7
 12529                           tblptrl	equ	0xFF6
 12530                           tablat	equ	0xFF5
 12531                           prodh	equ	0xFF4
 12532                           prodl	equ	0xFF3
 12533                           intcon	equ	0xFF2
 12534                           postinc0	equ	0xFEE
 12535                           wreg	equ	0xFE8
 12536                           indf1	equ	0xFE7
 12537                           postdec1	equ	0xFE5
 12538                           fsr1h	equ	0xFE2
 12539                           fsr1l	equ	0xFE1
 12540                           indf2	equ	0xFDF
 12541                           postinc2	equ	0xFDE
 12542                           postdec2	equ	0xFDD
 12543                           fsr2h	equ	0xFDA
 12544                           fsr2l	equ	0xFD9
 12545                           status	equ	0xFD8
 12546                           
 12547 ;; *************** function __div_to_l_ *****************
 12548 ;; Defined at:
 12549 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  f1              3   23[BANK1 ] unsigned long 
 12552 ;;  f2              3   26[BANK1 ] unsigned long 
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  quot            4   29[BANK1 ] unsigned long 
 12555 ;;  exp1            1   34[BANK1 ] unsigned char 
 12556 ;;  cntr            1   33[BANK1 ] unsigned char 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  4   23[BANK1 ] unsigned long 
 12559 ;; Registers used:
 12560 ;;		wreg, status,2, status,0
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12566 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12567 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12569 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12570 ;;Total ram usage:       12 bytes
 12571 ;; Hardware stack levels used:    1
 12572 ;; Hardware stack levels required when called:   14
 12573 ;; This function calls:
 12574 ;;		Nothing
 12575 ;; This function is called by:
 12576 ;;		_printf
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580                           	psect	text30
 12581  013E5A                     __ptext30:
 12582                           	opt stack 0
 12583  013E5A                     __div_to_l_:
 12584                           	opt stack 13
 12585                           
 12586                           ; BSR set to: 1
 12587                           ;incstack = 0
 12588  013E5A  0101               	movlb	1	; () banked
 12589  013E5C  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 12590  013E5E  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 12591  013E60  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 12592  013E62  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 12593  013E64  A4D8               	btfss	status,2,c
 12594  013E66  D009               	goto	l1402
 12595                           
 12596                           ; BSR set to: 1
 12597  013E68  0E00               	movlw	0
 12598  013E6A  6F17               	movwf	?__div_to_l_& (0+255),b
 12599  013E6C  0E00               	movlw	0
 12600  013E6E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12601  013E70  0E00               	movlw	0
 12602  013E72  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12603  013E74  0E00               	movlw	0
 12604  013E76  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12605                           
 12606                           ; BSR set to: 1
 12607  013E78  0012               	return	
 12608  013E7A                     l1402:
 12609                           
 12610                           ; BSR set to: 1
 12611                           
 12612                           ; BSR set to: 1
 12613  013E7A  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 12614  013E7C  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 12615  013E7E  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 12616  013E80  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 12617  013E82  A4D8               	btfss	status,2,c
 12618  013E84  D009               	goto	l1404
 12619                           
 12620                           ; BSR set to: 1
 12621  013E86  0E00               	movlw	0
 12622  013E88  6F17               	movwf	?__div_to_l_& (0+255),b
 12623  013E8A  0E00               	movlw	0
 12624  013E8C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12625  013E8E  0E00               	movlw	0
 12626  013E90  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12627  013E92  0E00               	movlw	0
 12628  013E94  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12629                           
 12630                           ; BSR set to: 1
 12631  013E96  0012               	return	
 12632  013E98                     l1404:
 12633                           
 12634                           ; BSR set to: 1
 12635                           
 12636                           ; BSR set to: 1
 12637  013E98  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 12638                           
 12639                           ; BSR set to: 1
 12640  013E9A  0EFF               	movlw	255
 12641  013E9C  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 12642  013E9E  0EFF               	movlw	255
 12643  013EA0  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 12644  013EA2  0EFF               	movlw	255
 12645  013EA4  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 12646  013EA6  0E00               	movlw	0
 12647  013EA8  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 12648                           
 12649                           ; BSR set to: 1
 12650  013EAA  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 12651  013EAC  0EFF               	movlw	255
 12652  013EAE  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 12653  013EB0  0EFF               	movlw	255
 12654  013EB2  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 12655  013EB4  0EFF               	movlw	255
 12656  013EB6  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 12657  013EB8  0E00               	movlw	0
 12658  013EBA  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 12659                           
 12660                           ; BSR set to: 1
 12661  013EBC  0E00               	movlw	0
 12662  013EBE  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 12663  013EC0  0E00               	movlw	0
 12664  013EC2  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 12665  013EC4  0E00               	movlw	0
 12666  013EC6  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 12667  013EC8  0E00               	movlw	0
 12668  013ECA  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 12669                           
 12670                           ; BSR set to: 1
 12671  013ECC  0E7F               	movlw	127
 12672  013ECE  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 12673                           
 12674                           ; BSR set to: 1
 12675  013ED0  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 12676  013ED2  0FA0               	addlw	160
 12677  013ED4  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 12678                           
 12679                           ; BSR set to: 1
 12680  013ED6  0E20               	movlw	32
 12681  013ED8  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 12682  013EDA                     
 12683                           ; BSR set to: 1
 12684                           
 12685                           ; BSR set to: 1
 12686  013EDA  90D8               	bcf	status,0,c
 12687  013EDC  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 12688  013EDE  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12689  013EE0  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12690  013EE2  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12691                           
 12692                           ; BSR set to: 1
 12693  013EE4  511A               	movf	__div_to_l_@f2& (0+255),w,b
 12694  013EE6  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 12695  013EE8  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12696  013EEA  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 12697  013EEC  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12698  013EEE  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 12699  013EF0  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12700  013EF2  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12701  013EF4  A0D8               	btfss	status,0,c
 12702  013EF6  D009               	goto	l1406
 12703                           
 12704                           ; BSR set to: 1
 12705  013EF8  511A               	movf	__div_to_l_@f2& (0+255),w,b
 12706  013EFA  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 12707  013EFC  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12708  013EFE  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12709  013F00  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12710  013F02  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12711  013F04  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12712  013F06  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12713                           
 12714                           ; BSR set to: 1
 12715  013F08  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 12716  013F0A                     l1406:
 12717                           
 12718                           ; BSR set to: 1
 12719                           
 12720                           ; BSR set to: 1
 12721  013F0A  90D8               	bcf	status,0,c
 12722  013F0C  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 12723  013F0E  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12724  013F10  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12725  013F12  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12726                           
 12727                           ; BSR set to: 1
 12728  013F14  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12729  013F16  D7E1               	goto	l1405
 12730                           
 12731                           ; BSR set to: 1
 12732                           
 12733                           ; BSR set to: 1
 12734  013F18  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 12735  013F1A  D016               	goto	l1408
 12736                           
 12737                           ; BSR set to: 1
 12738  013F1C  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 12739  013F1E  0A80               	xorlw	128
 12740  013F20  0F9F               	addlw	159
 12741  013F22  B0D8               	btfsc	status,0,c
 12742  013F24  D009               	goto	l1409
 12743                           
 12744                           ; BSR set to: 1
 12745  013F26  0E00               	movlw	0
 12746  013F28  6F17               	movwf	?__div_to_l_& (0+255),b
 12747  013F2A  0E00               	movlw	0
 12748  013F2C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12749  013F2E  0E00               	movlw	0
 12750  013F30  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12751  013F32  0E00               	movlw	0
 12752  013F34  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12753                           
 12754                           ; BSR set to: 1
 12755  013F36  0012               	return	
 12756  013F38                     l1409:
 12757                           
 12758                           ; BSR set to: 1
 12759                           
 12760                           ; BSR set to: 1
 12761                           
 12762                           ; BSR set to: 1
 12763  013F38  90D8               	bcf	status,0,c
 12764  013F3A  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 12765  013F3C  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 12766  013F3E  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 12767  013F40  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 12768                           
 12769                           ; BSR set to: 1
 12770  013F42  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 12771  013F44  D7F9               	goto	l1409
 12772                           
 12773                           ; BSR set to: 1
 12774  013F46  D015               	goto	u9570
 12775  013F48                     l1408:
 12776                           
 12777                           ; BSR set to: 1
 12778                           
 12779                           ; BSR set to: 1
 12780  013F48  0E1F               	movlw	31
 12781  013F4A  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 12782  013F4C  D00F               	goto	l1414
 12783                           
 12784                           ; BSR set to: 1
 12785  013F4E  0E00               	movlw	0
 12786  013F50  6F17               	movwf	?__div_to_l_& (0+255),b
 12787  013F52  0E00               	movlw	0
 12788  013F54  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12789  013F56  0E00               	movlw	0
 12790  013F58  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12791  013F5A  0E00               	movlw	0
 12792  013F5C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12793                           
 12794                           ; BSR set to: 1
 12795  013F5E  0012               	return	
 12796  013F60                     
 12797                           ; BSR set to: 1
 12798                           
 12799                           ; BSR set to: 1
 12800  013F60  90D8               	bcf	status,0,c
 12801  013F62  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 12802  013F64  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12803  013F66  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12804  013F68  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12805  013F6A  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 12806  013F6C                     l1414:
 12807                           
 12808                           ; BSR set to: 1
 12809                           
 12810                           ; BSR set to: 1
 12811  013F6C  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 12812  013F6E  A4D8               	btfss	status,2,c
 12813  013F70  D7F7               	goto	l1415
 12814  013F72                     u9570:
 12815                           
 12816                           ; BSR set to: 1
 12817                           
 12818                           ; BSR set to: 1
 12819  013F72  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 12820  013F76  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 12821  013F7A  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 12822  013F7E  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 12823                           
 12824                           ; BSR set to: 1
 12825  013F82  0012               	return		;funcret
 12826  013F84                     __end_of__div_to_l_:
 12827                           	opt stack 0
 12828                           tblptru	equ	0xFF8
 12829                           tblptrh	equ	0xFF7
 12830                           tblptrl	equ	0xFF6
 12831                           tablat	equ	0xFF5
 12832                           prodh	equ	0xFF4
 12833                           prodl	equ	0xFF3
 12834                           intcon	equ	0xFF2
 12835                           postinc0	equ	0xFEE
 12836                           wreg	equ	0xFE8
 12837                           indf1	equ	0xFE7
 12838                           postdec1	equ	0xFE5
 12839                           fsr1h	equ	0xFE2
 12840                           fsr1l	equ	0xFE1
 12841                           indf2	equ	0xFDF
 12842                           postinc2	equ	0xFDE
 12843                           postdec2	equ	0xFDD
 12844                           fsr2h	equ	0xFDA
 12845                           fsr2l	equ	0xFD9
 12846                           status	equ	0xFD8
 12847                           
 12848 ;; *************** function ___lltoft *****************
 12849 ;; Defined at:
 12850 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;  c               4   31[BANK1 ] unsigned long 
 12853 ;; Auto vars:     Size  Location     Type
 12854 ;;  exp             1   39[BANK1 ] unsigned char 
 12855 ;; Return value:  Size  Location     Type
 12856 ;;                  3   31[BANK1 ] float 
 12857 ;; Registers used:
 12858 ;;		wreg, status,2, status,0, cstack
 12859 ;; Tracked objects:
 12860 ;;		On entry : 0/0
 12861 ;;		On exit  : 0/0
 12862 ;;		Unchanged: 0/0
 12863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12864 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12865 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12866 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12867 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12868 ;;Total ram usage:        9 bytes
 12869 ;; Hardware stack levels used:    1
 12870 ;; Hardware stack levels required when called:   15
 12871 ;; This function calls:
 12872 ;;		___ftpack
 12873 ;; This function is called by:
 12874 ;;		_printf
 12875 ;; This function uses a non-reentrant model
 12876 ;;
 12877                           
 12878                           	psect	text31
 12879  015664                     __ptext31:
 12880                           	opt stack 0
 12881  015664                     ___lltoft:
 12882                           	opt stack 12
 12883                           
 12884                           ; BSR set to: 1
 12885                           ;incstack = 0
 12886  015664  0E8E               	movlw	142
 12887  015666  0101               	movlb	1	; () banked
 12888  015668  6F27               	movwf	___lltoft@exp& (0+255),b
 12889  01566A  D006               	goto	l1613
 12890  01566C                     
 12891                           ; BSR set to: 1
 12892                           
 12893                           ; BSR set to: 1
 12894  01566C  90D8               	bcf	status,0,c
 12895  01566E  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 12896  015670  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 12897  015672  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 12898  015674  331F               	rrcf	___lltoft@c& (0+255),f,b
 12899  015676  2B27               	incf	___lltoft@exp& (0+255),f,b
 12900  015678                     l1613:
 12901                           
 12902                           ; BSR set to: 1
 12903                           
 12904                           ; BSR set to: 1
 12905  015678  0E00               	movlw	0
 12906  01567A  151F               	andwf	___lltoft@c& (0+255),w,b
 12907  01567C  6F23               	movwf	??___lltoft& (0+255),b
 12908  01567E  0E00               	movlw	0
 12909  015680  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 12910  015682  6F24               	movwf	(??___lltoft+1)& (0+255),b
 12911  015684  0E00               	movlw	0
 12912  015686  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 12913  015688  6F25               	movwf	(??___lltoft+2)& (0+255),b
 12914  01568A  0EFF               	movlw	255
 12915  01568C  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 12916  01568E  6F26               	movwf	(??___lltoft+3)& (0+255),b
 12917  015690  5123               	movf	??___lltoft& (0+255),w,b
 12918  015692  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 12919  015694  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 12920  015696  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 12921  015698  A4D8               	btfss	status,2,c
 12922  01569A  D7E8               	goto	l1614
 12923                           
 12924                           ; BSR set to: 1
 12925                           
 12926                           ; BSR set to: 1
 12927  01569C  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 12928  0156A0  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 12929  0156A4  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 12930  0156A8  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 12931  0156AC  0E00               	movlw	0
 12932  0156AE  6F1B               	movwf	___ftpack@sign& (0+255),b
 12933  0156B0  EC64  F0A5         	call	___ftpack	;wreg free
 12934  0156B4  C117  F11F         	movff	?___ftpack,?___lltoft
 12935  0156B8  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 12936  0156BC  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 12937  0156C0  0012               	return	
 12938  0156C2                     __end_of___lltoft:
 12939                           	opt stack 0
 12940                           tblptru	equ	0xFF8
 12941                           tblptrh	equ	0xFF7
 12942                           tblptrl	equ	0xFF6
 12943                           tablat	equ	0xFF5
 12944                           prodh	equ	0xFF4
 12945                           prodl	equ	0xFF3
 12946                           intcon	equ	0xFF2
 12947                           postinc0	equ	0xFEE
 12948                           wreg	equ	0xFE8
 12949                           indf1	equ	0xFE7
 12950                           postdec1	equ	0xFE5
 12951                           fsr1h	equ	0xFE2
 12952                           fsr1l	equ	0xFE1
 12953                           indf2	equ	0xFDF
 12954                           postinc2	equ	0xFDE
 12955                           postdec2	equ	0xFDD
 12956                           fsr2h	equ	0xFDA
 12957                           fsr2l	equ	0xFD9
 12958                           status	equ	0xFD8
 12959                           
 12960 ;; *************** function ___llmod *****************
 12961 ;; Defined at:
 12962 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;  dividend        4   36[BANK1 ] unsigned long 
 12965 ;;  divisor         4   40[BANK1 ] unsigned long 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;  counter         1   44[BANK1 ] unsigned char 
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  4   36[BANK1 ] unsigned long 
 12970 ;; Registers used:
 12971 ;;		wreg, status,2, status,0
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12977 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12978 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12980 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12981 ;;Total ram usage:        9 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:   14
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_printf
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text32
 12992  01546C                     __ptext32:
 12993                           	opt stack 0
 12994  01546C                     ___llmod:
 12995                           	opt stack 13
 12996                           
 12997                           ;incstack = 0
 12998  01546C  0101               	movlb	1	; () banked
 12999  01546E  5128               	movf	___llmod@divisor& (0+255),w,b
 13000  015470  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13001  015472  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13002  015474  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13003  015476  B4D8               	btfsc	status,2,c
 13004  015478  D024               	goto	l1607
 13005                           
 13006                           ; BSR set to: 1
 13007  01547A  0E01               	movlw	1
 13008  01547C  6F2C               	movwf	___llmod@counter& (0+255),b
 13009  01547E  D006               	goto	l1602
 13010  015480                     
 13011                           ; BSR set to: 1
 13012                           
 13013                           ; BSR set to: 1
 13014  015480  90D8               	bcf	status,0,c
 13015  015482  3728               	rlcf	___llmod@divisor& (0+255),f,b
 13016  015484  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13017  015486  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13018  015488  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13019  01548A  2B2C               	incf	___llmod@counter& (0+255),f,b
 13020  01548C                     l1602:
 13021                           
 13022                           ; BSR set to: 1
 13023                           
 13024                           ; BSR set to: 1
 13025  01548C  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13026  01548E  D7F8               	goto	l1603
 13027  015490                     u9830:
 13028                           
 13029                           ; BSR set to: 1
 13030                           
 13031                           ; BSR set to: 1
 13032                           
 13033                           ; BSR set to: 1
 13034  015490  5128               	movf	___llmod@divisor& (0+255),w,b
 13035  015492  5D24               	subwf	___llmod@dividend& (0+255),w,b
 13036  015494  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13037  015496  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13038  015498  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13039  01549A  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13040  01549C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13041  01549E  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13042  0154A0  A0D8               	btfss	status,0,c
 13043  0154A2  D008               	goto	l1606
 13044                           
 13045                           ; BSR set to: 1
 13046  0154A4  5128               	movf	___llmod@divisor& (0+255),w,b
 13047  0154A6  5F24               	subwf	___llmod@dividend& (0+255),f,b
 13048  0154A8  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13049  0154AA  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13050  0154AC  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13051  0154AE  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13052  0154B0  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13053  0154B2  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13054  0154B4                     l1606:
 13055                           
 13056                           ; BSR set to: 1
 13057                           
 13058                           ; BSR set to: 1
 13059  0154B4  90D8               	bcf	status,0,c
 13060  0154B6  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13061  0154B8  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13062  0154BA  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13063  0154BC  3328               	rrcf	___llmod@divisor& (0+255),f,b
 13064                           
 13065                           ; BSR set to: 1
 13066  0154BE  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 13067  0154C0  D7E7               	goto	u9830
 13068  0154C2                     l1607:
 13069                           
 13070                           ; BSR set to: 1
 13071                           
 13072                           ; BSR set to: 1
 13073  0154C2  C124  F124         	movff	___llmod@dividend,?___llmod
 13074  0154C6  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 13075  0154CA  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 13076  0154CE  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 13077                           
 13078                           ; BSR set to: 1
 13079  0154D2  0012               	return		;funcret
 13080  0154D4                     __end_of___llmod:
 13081                           	opt stack 0
 13082                           tblptru	equ	0xFF8
 13083                           tblptrh	equ	0xFF7
 13084                           tblptrl	equ	0xFF6
 13085                           tablat	equ	0xFF5
 13086                           prodh	equ	0xFF4
 13087                           prodl	equ	0xFF3
 13088                           intcon	equ	0xFF2
 13089                           postinc0	equ	0xFEE
 13090                           wreg	equ	0xFE8
 13091                           indf1	equ	0xFE7
 13092                           postdec1	equ	0xFE5
 13093                           fsr1h	equ	0xFE2
 13094                           fsr1l	equ	0xFE1
 13095                           indf2	equ	0xFDF
 13096                           postinc2	equ	0xFDE
 13097                           postdec2	equ	0xFDD
 13098                           fsr2h	equ	0xFDA
 13099                           fsr2l	equ	0xFD9
 13100                           status	equ	0xFD8
 13101                           
 13102 ;; *************** function ___lldiv *****************
 13103 ;; Defined at:
 13104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  dividend        4   23[BANK1 ] unsigned long 
 13107 ;;  divisor         4   27[BANK1 ] unsigned long 
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  quotient        4   31[BANK1 ] unsigned long 
 13110 ;;  counter         1   35[BANK1 ] unsigned char 
 13111 ;; Return value:  Size  Location     Type
 13112 ;;                  4   23[BANK1 ] unsigned long 
 13113 ;; Registers used:
 13114 ;;		wreg, status,2, status,0
 13115 ;; Tracked objects:
 13116 ;;		On entry : 0/0
 13117 ;;		On exit  : 0/0
 13118 ;;		Unchanged: 0/0
 13119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13120 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13121 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13123 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13124 ;;Total ram usage:       13 bytes
 13125 ;; Hardware stack levels used:    1
 13126 ;; Hardware stack levels required when called:   14
 13127 ;; This function calls:
 13128 ;;		Nothing
 13129 ;; This function is called by:
 13130 ;;		_printf
 13131 ;; This function uses a non-reentrant model
 13132 ;;
 13133                           
 13134                           	psect	text33
 13135  015036                     __ptext33:
 13136                           	opt stack 0
 13137  015036                     ___lldiv:
 13138                           	opt stack 13
 13139                           
 13140                           ; BSR set to: 1
 13141                           ;incstack = 0
 13142  015036  0E00               	movlw	0
 13143  015038  0101               	movlb	1	; () banked
 13144  01503A  6F1F               	movwf	___lldiv@quotient& (0+255),b
 13145  01503C  0E00               	movlw	0
 13146  01503E  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 13147  015040  0E00               	movlw	0
 13148  015042  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 13149  015044  0E00               	movlw	0
 13150  015046  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 13151                           
 13152                           ; BSR set to: 1
 13153  015048  511B               	movf	___lldiv@divisor& (0+255),w,b
 13154  01504A  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13155  01504C  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13156  01504E  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13157  015050  B4D8               	btfsc	status,2,c
 13158  015052  D02A               	goto	l1597
 13159                           
 13160                           ; BSR set to: 1
 13161  015054  0E01               	movlw	1
 13162  015056  6F23               	movwf	___lldiv@counter& (0+255),b
 13163  015058  D006               	goto	l1592
 13164  01505A                     
 13165                           ; BSR set to: 1
 13166                           
 13167                           ; BSR set to: 1
 13168  01505A  90D8               	bcf	status,0,c
 13169  01505C  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 13170  01505E  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13171  015060  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13172  015062  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13173  015064  2B23               	incf	___lldiv@counter& (0+255),f,b
 13174  015066                     l1592:
 13175                           
 13176                           ; BSR set to: 1
 13177                           
 13178                           ; BSR set to: 1
 13179  015066  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13180  015068  D7F8               	goto	l1593
 13181  01506A                     u9800:
 13182                           
 13183                           ; BSR set to: 1
 13184                           
 13185                           ; BSR set to: 1
 13186                           
 13187                           ; BSR set to: 1
 13188  01506A  90D8               	bcf	status,0,c
 13189  01506C  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 13190  01506E  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13191  015070  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13192  015072  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13193                           
 13194                           ; BSR set to: 1
 13195  015074  511B               	movf	___lldiv@divisor& (0+255),w,b
 13196  015076  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 13197  015078  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13198  01507A  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13199  01507C  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13200  01507E  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13201  015080  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13202  015082  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13203  015084  A0D8               	btfss	status,0,c
 13204  015086  D009               	goto	l1596
 13205                           
 13206                           ; BSR set to: 1
 13207  015088  511B               	movf	___lldiv@divisor& (0+255),w,b
 13208  01508A  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 13209  01508C  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13210  01508E  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13211  015090  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13212  015092  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13213  015094  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13214  015096  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13215                           
 13216                           ; BSR set to: 1
 13217  015098  811F               	bsf	___lldiv@quotient& (0+255),0,b
 13218  01509A                     l1596:
 13219                           
 13220                           ; BSR set to: 1
 13221                           
 13222                           ; BSR set to: 1
 13223  01509A  90D8               	bcf	status,0,c
 13224  01509C  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13225  01509E  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13226  0150A0  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13227  0150A2  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 13228                           
 13229                           ; BSR set to: 1
 13230  0150A4  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 13231  0150A6  D7E1               	goto	u9800
 13232  0150A8                     l1597:
 13233                           
 13234                           ; BSR set to: 1
 13235                           
 13236                           ; BSR set to: 1
 13237  0150A8  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 13238  0150AC  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 13239  0150B0  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 13240  0150B4  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 13241                           
 13242                           ; BSR set to: 1
 13243  0150B8  0012               	return		;funcret
 13244  0150BA                     __end_of___lldiv:
 13245                           	opt stack 0
 13246                           tblptru	equ	0xFF8
 13247                           tblptrh	equ	0xFF7
 13248                           tblptrl	equ	0xFF6
 13249                           tablat	equ	0xFF5
 13250                           prodh	equ	0xFF4
 13251                           prodl	equ	0xFF3
 13252                           intcon	equ	0xFF2
 13253                           postinc0	equ	0xFEE
 13254                           wreg	equ	0xFE8
 13255                           indf1	equ	0xFE7
 13256                           postdec1	equ	0xFE5
 13257                           fsr1h	equ	0xFE2
 13258                           fsr1l	equ	0xFE1
 13259                           indf2	equ	0xFDF
 13260                           postinc2	equ	0xFDE
 13261                           postdec2	equ	0xFDD
 13262                           fsr2h	equ	0xFDA
 13263                           fsr2l	equ	0xFD9
 13264                           status	equ	0xFD8
 13265                           
 13266 ;; *************** function ___fttol *****************
 13267 ;; Defined at:
 13268 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  f1              3   85[BANK1 ] float 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  lval            4   95[BANK1 ] unsigned long 
 13273 ;;  exp1            1   99[BANK1 ] unsigned char 
 13274 ;;  sign1           1   94[BANK1 ] unsigned char 
 13275 ;; Return value:  Size  Location     Type
 13276 ;;                  4   85[BANK1 ] long 
 13277 ;; Registers used:
 13278 ;;		wreg, status,2, status,0
 13279 ;; Tracked objects:
 13280 ;;		On entry : 0/0
 13281 ;;		On exit  : 0/0
 13282 ;;		Unchanged: 0/0
 13283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13284 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13285 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13286 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13287 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13288 ;;Total ram usage:       15 bytes
 13289 ;; Hardware stack levels used:    1
 13290 ;; Hardware stack levels required when called:   14
 13291 ;; This function calls:
 13292 ;;		Nothing
 13293 ;; This function is called by:
 13294 ;;		_printf
 13295 ;; This function uses a non-reentrant model
 13296 ;;
 13297                           
 13298                           	psect	text34
 13299  0141C8                     __ptext34:
 13300                           	opt stack 0
 13301  0141C8                     ___fttol:
 13302                           	opt stack 13
 13303                           
 13304                           ; BSR set to: 1
 13305                           ;incstack = 0
 13306  0141C8  C157  F159         	movff	___fttol@f1+2,??___fttol
 13307  0141CC  0101               	movlb	1	; () banked
 13308  0141CE  6B5A               	clrf	(??___fttol+1)& (0+255),b
 13309  0141D0  6B5B               	clrf	(??___fttol+2)& (0+255),b
 13310  0141D2  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13311  0141D4  3759               	rlcf	??___fttol& (0+255),f,b
 13312  0141D6  E301               	bnc	u9711
 13313  0141D8  815A               	bsf	(??___fttol+1)& (0+255),0,b
 13314  0141DA                     u9711:
 13315  0141DA  5159               	movf	??___fttol& (0+255),w,b
 13316  0141DC  6F63               	movwf	___fttol@exp1& (0+255),b
 13317  0141DE  5163               	movf	___fttol@exp1& (0+255),w,b
 13318  0141E0  A4D8               	btfss	status,2,c
 13319  0141E2  D009               	goto	l1551
 13320                           
 13321                           ; BSR set to: 1
 13322  0141E4  0E00               	movlw	0
 13323  0141E6  6F55               	movwf	?___fttol& (0+255),b
 13324  0141E8  0E00               	movlw	0
 13325  0141EA  6F56               	movwf	(?___fttol+1)& (0+255),b
 13326  0141EC  0E00               	movlw	0
 13327  0141EE  6F57               	movwf	(?___fttol+2)& (0+255),b
 13328  0141F0  0E00               	movlw	0
 13329  0141F2  6F58               	movwf	(?___fttol+3)& (0+255),b
 13330                           
 13331                           ; BSR set to: 1
 13332  0141F4  0012               	return	
 13333  0141F6                     l1551:
 13334                           
 13335                           ; BSR set to: 1
 13336                           
 13337                           ; BSR set to: 1
 13338  0141F6  0E17               	movlw	23
 13339  0141F8  6F59               	movwf	??___fttol& (0+255),b
 13340  0141FA  C155  F15A         	movff	___fttol@f1,??___fttol+1
 13341  0141FE  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 13342  014202  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 13343  014206  2959               	incf	??___fttol& (0+255),w,b
 13344  014208  6F5D               	movwf	(??___fttol+4)& (0+255),b
 13345  01420A  D004               	goto	u9730
 13346  01420C                     u9735:
 13347  01420C  90D8               	bcf	status,0,c
 13348  01420E  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 13349  014210  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 13350  014212  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 13351  014214                     u9730:
 13352  014214  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 13353  014216  D7FA               	goto	u9735
 13354  014218  0101               	movlb	1	; () banked
 13355  01421A  515A               	movf	(??___fttol+1)& (0+255),w,b
 13356  01421C  6F5E               	movwf	___fttol@sign1& (0+255),b
 13357                           
 13358                           ; BSR set to: 1
 13359  01421E  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 13360                           
 13361                           ; BSR set to: 1
 13362  014220  0EFF               	movlw	255
 13363  014222  1755               	andwf	___fttol@f1& (0+255),f,b
 13364  014224  0EFF               	movlw	255
 13365  014226  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 13366  014228  0E00               	movlw	0
 13367  01422A  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 13368                           
 13369                           ; BSR set to: 1
 13370  01422C  5155               	movf	___fttol@f1& (0+255),w,b
 13371  01422E  6F5F               	movwf	___fttol@lval& (0+255),b
 13372  014230  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 13373  014232  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 13374  014234  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 13375  014236  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 13376  014238  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 13377                           
 13378                           ; BSR set to: 1
 13379  01423A  0E8E               	movlw	142
 13380  01423C  5F63               	subwf	___fttol@exp1& (0+255),f,b
 13381                           
 13382                           ; BSR set to: 1
 13383  01423E  AF63               	btfss	___fttol@exp1& (0+255),7,b
 13384  014240  D016               	goto	l1553
 13385                           
 13386                           ; BSR set to: 1
 13387  014242  5163               	movf	___fttol@exp1& (0+255),w,b
 13388  014244  0A80               	xorlw	128
 13389  014246  0F8F               	addlw	143
 13390  014248  B0D8               	btfsc	status,0,c
 13391  01424A  D009               	goto	l1554
 13392                           
 13393                           ; BSR set to: 1
 13394  01424C  0E00               	movlw	0
 13395  01424E  6F55               	movwf	?___fttol& (0+255),b
 13396  014250  0E00               	movlw	0
 13397  014252  6F56               	movwf	(?___fttol+1)& (0+255),b
 13398  014254  0E00               	movlw	0
 13399  014256  6F57               	movwf	(?___fttol+2)& (0+255),b
 13400  014258  0E00               	movlw	0
 13401  01425A  6F58               	movwf	(?___fttol+3)& (0+255),b
 13402                           
 13403                           ; BSR set to: 1
 13404  01425C  0012               	return	
 13405  01425E                     l1554:
 13406                           
 13407                           ; BSR set to: 1
 13408                           
 13409                           ; BSR set to: 1
 13410                           
 13411                           ; BSR set to: 1
 13412  01425E  90D8               	bcf	status,0,c
 13413  014260  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13414  014262  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13415  014264  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13416  014266  335F               	rrcf	___fttol@lval& (0+255),f,b
 13417                           
 13418                           ; BSR set to: 1
 13419  014268  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 13420  01426A  D7F9               	goto	l1554
 13421                           
 13422                           ; BSR set to: 1
 13423  01426C  D015               	goto	u9770
 13424  01426E                     l1553:
 13425                           
 13426                           ; BSR set to: 1
 13427                           
 13428                           ; BSR set to: 1
 13429  01426E  0E17               	movlw	23
 13430  014270  6563               	cpfsgt	___fttol@exp1& (0+255),b
 13431  014272  D00F               	goto	l1559
 13432                           
 13433                           ; BSR set to: 1
 13434  014274  0E00               	movlw	0
 13435  014276  6F55               	movwf	?___fttol& (0+255),b
 13436  014278  0E00               	movlw	0
 13437  01427A  6F56               	movwf	(?___fttol+1)& (0+255),b
 13438  01427C  0E00               	movlw	0
 13439  01427E  6F57               	movwf	(?___fttol+2)& (0+255),b
 13440  014280  0E00               	movlw	0
 13441  014282  6F58               	movwf	(?___fttol+3)& (0+255),b
 13442                           
 13443                           ; BSR set to: 1
 13444  014284  0012               	return	
 13445  014286                     
 13446                           ; BSR set to: 1
 13447                           
 13448                           ; BSR set to: 1
 13449  014286  90D8               	bcf	status,0,c
 13450  014288  375F               	rlcf	___fttol@lval& (0+255),f,b
 13451  01428A  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13452  01428C  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13453  01428E  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13454  014290  0763               	decf	___fttol@exp1& (0+255),f,b
 13455  014292                     l1559:
 13456                           
 13457                           ; BSR set to: 1
 13458                           
 13459                           ; BSR set to: 1
 13460  014292  5163               	movf	___fttol@exp1& (0+255),w,b
 13461  014294  A4D8               	btfss	status,2,c
 13462  014296  D7F7               	goto	l1560
 13463  014298                     u9770:
 13464                           
 13465                           ; BSR set to: 1
 13466                           
 13467                           ; BSR set to: 1
 13468                           
 13469                           ; BSR set to: 1
 13470  014298  515E               	movf	___fttol@sign1& (0+255),w,b
 13471  01429A  B4D8               	btfsc	status,2,c
 13472  01429C  D008               	goto	l1562
 13473                           
 13474                           ; BSR set to: 1
 13475  01429E  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 13476  0142A0  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 13477  0142A2  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 13478  0142A4  6D5F               	negf	___fttol@lval& (0+255),b
 13479  0142A6  0E00               	movlw	0
 13480  0142A8  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13481  0142AA  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13482  0142AC  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13483  0142AE                     l1562:
 13484                           
 13485                           ; BSR set to: 1
 13486                           
 13487                           ; BSR set to: 1
 13488  0142AE  C15F  F155         	movff	___fttol@lval,?___fttol
 13489  0142B2  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 13490  0142B6  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 13491  0142BA  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 13492  0142BE  0012               	return	
 13493  0142C0                     __end_of___fttol:
 13494                           	opt stack 0
 13495                           tblptru	equ	0xFF8
 13496                           tblptrh	equ	0xFF7
 13497                           tblptrl	equ	0xFF6
 13498                           tablat	equ	0xFF5
 13499                           prodh	equ	0xFF4
 13500                           prodl	equ	0xFF3
 13501                           intcon	equ	0xFF2
 13502                           postinc0	equ	0xFEE
 13503                           wreg	equ	0xFE8
 13504                           indf1	equ	0xFE7
 13505                           postdec1	equ	0xFE5
 13506                           fsr1h	equ	0xFE2
 13507                           fsr1l	equ	0xFE1
 13508                           indf2	equ	0xFDF
 13509                           postinc2	equ	0xFDE
 13510                           postdec2	equ	0xFDD
 13511                           fsr2h	equ	0xFDA
 13512                           fsr2l	equ	0xFD9
 13513                           status	equ	0xFD8
 13514                           
 13515 ;; *************** function ___ftsub *****************
 13516 ;; Defined at:
 13517 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;  f1              3   55[BANK1 ] float 
 13520 ;;  f2              3   58[BANK1 ] float 
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;		None
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  3   55[BANK1 ] float 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13532 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;Total ram usage:        6 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:   16
 13539 ;; This function calls:
 13540 ;;		___ftadd
 13541 ;; This function is called by:
 13542 ;;		_printf
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text35
 13547  015A76                     __ptext35:
 13548                           	opt stack 0
 13549  015A76                     ___ftsub:
 13550                           	opt stack 11
 13551                           
 13552                           ; BSR set to: 1
 13553                           ;incstack = 0
 13554  015A76  0101               	movlb	1	; () banked
 13555  015A78  513A               	movf	___ftsub@f2& (0+255),w,b
 13556  015A7A  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 13557  015A7C  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 13558  015A7E  B4D8               	btfsc	status,2,c
 13559  015A80  D006               	goto	l1547
 13560                           
 13561                           ; BSR set to: 1
 13562  015A82  0E00               	movlw	0
 13563  015A84  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 13564  015A86  0E00               	movlw	0
 13565  015A88  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 13566  015A8A  0E80               	movlw	128
 13567  015A8C  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 13568  015A8E                     l1547:
 13569                           
 13570                           ; BSR set to: 1
 13571                           
 13572                           ; BSR set to: 1
 13573  015A8E  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 13574  015A92  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 13575  015A96  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 13576  015A9A  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 13577  015A9E  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 13578  015AA2  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 13579  015AA6  EC84  F09B         	call	___ftadd	;wreg free
 13580  015AAA  C12B  F137         	movff	?___ftadd,?___ftsub
 13581  015AAE  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 13582  015AB2  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 13583  015AB6  0012               	return	
 13584  015AB8                     __end_of___ftsub:
 13585                           	opt stack 0
 13586                           tblptru	equ	0xFF8
 13587                           tblptrh	equ	0xFF7
 13588                           tblptrl	equ	0xFF6
 13589                           tablat	equ	0xFF5
 13590                           prodh	equ	0xFF4
 13591                           prodl	equ	0xFF3
 13592                           intcon	equ	0xFF2
 13593                           postinc0	equ	0xFEE
 13594                           wreg	equ	0xFE8
 13595                           indf1	equ	0xFE7
 13596                           postdec1	equ	0xFE5
 13597                           fsr1h	equ	0xFE2
 13598                           fsr1l	equ	0xFE1
 13599                           indf2	equ	0xFDF
 13600                           postinc2	equ	0xFDE
 13601                           postdec2	equ	0xFDD
 13602                           fsr2h	equ	0xFDA
 13603                           fsr2l	equ	0xFD9
 13604                           status	equ	0xFD8
 13605                           
 13606 ;; *************** function ___ftadd *****************
 13607 ;; Defined at:
 13608 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  f1              3   43[BANK1 ] float 
 13611 ;;  f2              3   46[BANK1 ] float 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  exp1            1   54[BANK1 ] unsigned char 
 13614 ;;  exp2            1   53[BANK1 ] unsigned char 
 13615 ;;  sign            1   52[BANK1 ] unsigned char 
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  3   43[BANK1 ] float 
 13618 ;; Registers used:
 13619 ;;		wreg, status,2, status,0, cstack
 13620 ;; Tracked objects:
 13621 ;;		On entry : 0/0
 13622 ;;		On exit  : 0/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13625 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13626 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13627 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13628 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;Total ram usage:       12 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:   15
 13632 ;; This function calls:
 13633 ;;		___ftpack
 13634 ;; This function is called by:
 13635 ;;		_ringBufferLUT
 13636 ;;		_printf
 13637 ;;		___ftsub
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text36
 13642  013708                     __ptext36:
 13643                           	opt stack 0
 13644  013708                     ___ftadd:
 13645                           	opt stack 11
 13646                           
 13647                           ;incstack = 0
 13648  013708  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 13649  01370C  0101               	movlb	1	; () banked
 13650  01370E  6B32               	clrf	(??___ftadd+1)& (0+255),b
 13651  013710  6B33               	clrf	(??___ftadd+2)& (0+255),b
 13652  013712  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 13653  013714  3731               	rlcf	??___ftadd& (0+255),f,b
 13654  013716  E301               	bnc	u8811
 13655  013718  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 13656  01371A                     u8811:
 13657  01371A  5131               	movf	??___ftadd& (0+255),w,b
 13658  01371C  6F36               	movwf	___ftadd@exp1& (0+255),b
 13659  01371E  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 13660  013722  6B32               	clrf	(??___ftadd+1)& (0+255),b
 13661  013724  6B33               	clrf	(??___ftadd+2)& (0+255),b
 13662  013726  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 13663  013728  3731               	rlcf	??___ftadd& (0+255),f,b
 13664  01372A  E301               	bnc	u8821
 13665  01372C  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 13666  01372E                     u8821:
 13667  01372E  5131               	movf	??___ftadd& (0+255),w,b
 13668  013730  6F35               	movwf	___ftadd@exp2& (0+255),b
 13669                           
 13670                           ; BSR set to: 1
 13671  013732  5136               	movf	___ftadd@exp1& (0+255),w,b
 13672  013734  B4D8               	btfsc	status,2,c
 13673  013736  D00B               	goto	u8850
 13674                           
 13675                           ; BSR set to: 1
 13676  013738  5135               	movf	___ftadd@exp2& (0+255),w,b
 13677  01373A  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 13678  01373C  B0D8               	btfsc	status,0,c
 13679  01373E  D00E               	goto	l1465
 13680                           
 13681                           ; BSR set to: 1
 13682  013740  5136               	movf	___ftadd@exp1& (0+255),w,b
 13683  013742  0800               	sublw	0
 13684  013744  2535               	addwf	___ftadd@exp2& (0+255),w,b
 13685  013746  6F31               	movwf	??___ftadd& (0+255),b
 13686  013748  0E18               	movlw	24
 13687  01374A  6531               	cpfsgt	??___ftadd& (0+255),b
 13688  01374C  D007               	goto	l1465
 13689  01374E                     u8850:
 13690                           
 13691                           ; BSR set to: 1
 13692  01374E  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 13693  013752  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 13694  013756  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 13695  01375A  0012               	return	
 13696  01375C                     l1465:
 13697                           
 13698                           ; BSR set to: 1
 13699                           
 13700                           ; BSR set to: 1
 13701  01375C  5135               	movf	___ftadd@exp2& (0+255),w,b
 13702  01375E  B4D8               	btfsc	status,2,c
 13703  013760  D00B               	goto	u8880
 13704                           
 13705                           ; BSR set to: 1
 13706  013762  5136               	movf	___ftadd@exp1& (0+255),w,b
 13707  013764  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 13708  013766  B0D8               	btfsc	status,0,c
 13709  013768  D00E               	goto	l1469
 13710                           
 13711                           ; BSR set to: 1
 13712  01376A  5135               	movf	___ftadd@exp2& (0+255),w,b
 13713  01376C  0800               	sublw	0
 13714  01376E  2536               	addwf	___ftadd@exp1& (0+255),w,b
 13715  013770  6F31               	movwf	??___ftadd& (0+255),b
 13716  013772  0E18               	movlw	24
 13717  013774  6531               	cpfsgt	??___ftadd& (0+255),b
 13718  013776  D007               	goto	l1469
 13719  013778                     u8880:
 13720                           
 13721                           ; BSR set to: 1
 13722  013778  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 13723  01377C  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 13724  013780  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 13725  013784  0012               	return	
 13726  013786                     l1469:
 13727                           
 13728                           ; BSR set to: 1
 13729                           
 13730                           ; BSR set to: 1
 13731  013786  0E06               	movlw	6
 13732  013788  6F34               	movwf	___ftadd@sign& (0+255),b
 13733                           
 13734                           ; BSR set to: 1
 13735  01378A  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 13736                           
 13737                           ; BSR set to: 1
 13738  01378C  8F34               	bsf	___ftadd@sign& (0+255),7,b
 13739                           
 13740                           ; BSR set to: 1
 13741                           
 13742                           ; BSR set to: 1
 13743  01378E  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 13744                           
 13745                           ; BSR set to: 1
 13746  013790  8D34               	bsf	___ftadd@sign& (0+255),6,b
 13747                           
 13748                           ; BSR set to: 1
 13749  013792  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 13750                           
 13751                           ; BSR set to: 1
 13752  013794  0EFF               	movlw	255
 13753  013796  172B               	andwf	___ftadd@f1& (0+255),f,b
 13754  013798  0EFF               	movlw	255
 13755  01379A  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 13756  01379C  0E00               	movlw	0
 13757  01379E  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 13758  0137A0  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 13759                           
 13760                           ; BSR set to: 1
 13761  0137A2  0EFF               	movlw	255
 13762  0137A4  172E               	andwf	___ftadd@f2& (0+255),f,b
 13763  0137A6  0EFF               	movlw	255
 13764  0137A8  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 13765  0137AA  0E00               	movlw	0
 13766  0137AC  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 13767                           
 13768                           ; BSR set to: 1
 13769  0137AE  5135               	movf	___ftadd@exp2& (0+255),w,b
 13770  0137B0  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 13771  0137B2  B0D8               	btfsc	status,0,c
 13772  0137B4  D01B               	goto	l1474
 13773  0137B6                     u8910:
 13774                           
 13775                           ; BSR set to: 1
 13776                           
 13777                           ; BSR set to: 1
 13778  0137B6  90D8               	bcf	status,0,c
 13779  0137B8  372E               	rlcf	___ftadd@f2& (0+255),f,b
 13780  0137BA  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 13781  0137BC  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 13782  0137BE  0735               	decf	___ftadd@exp2& (0+255),f,b
 13783                           
 13784                           ; BSR set to: 1
 13785  0137C0  5136               	movf	___ftadd@exp1& (0+255),w,b
 13786  0137C2  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 13787  0137C4  B4D8               	btfsc	status,2,c
 13788  0137C6  D00D               	goto	l1479
 13789                           
 13790                           ; BSR set to: 1
 13791  0137C8  0734               	decf	___ftadd@sign& (0+255),f,b
 13792  0137CA  C134  F131         	movff	___ftadd@sign,??___ftadd
 13793  0137CE  0E07               	movlw	7
 13794  0137D0  1731               	andwf	??___ftadd& (0+255),f,b
 13795  0137D2  B4D8               	btfsc	status,2,c
 13796  0137D4  D006               	goto	l1479
 13797  0137D6  D7EF               	goto	u8910
 13798  0137D8                     
 13799                           ; BSR set to: 1
 13800                           
 13801                           ; BSR set to: 1
 13802  0137D8  90D8               	bcf	status,0,c
 13803  0137DA  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 13804  0137DC  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 13805  0137DE  332B               	rrcf	___ftadd@f1& (0+255),f,b
 13806  0137E0  2B36               	incf	___ftadd@exp1& (0+255),f,b
 13807  0137E2                     l1479:
 13808                           
 13809                           ; BSR set to: 1
 13810                           
 13811                           ; BSR set to: 1
 13812  0137E2  5135               	movf	___ftadd@exp2& (0+255),w,b
 13813  0137E4  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 13814  0137E6  B4D8               	btfsc	status,2,c
 13815  0137E8  D01F               	goto	u8980
 13816  0137EA  D7F6               	goto	l1480
 13817  0137EC                     l1474:
 13818                           
 13819                           ; BSR set to: 1
 13820                           
 13821                           ; BSR set to: 1
 13822  0137EC  5136               	movf	___ftadd@exp1& (0+255),w,b
 13823  0137EE  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 13824  0137F0  B0D8               	btfsc	status,0,c
 13825  0137F2  D01A               	goto	u8980
 13826  0137F4                     u8950:
 13827                           
 13828                           ; BSR set to: 1
 13829                           
 13830                           ; BSR set to: 1
 13831  0137F4  90D8               	bcf	status,0,c
 13832  0137F6  372B               	rlcf	___ftadd@f1& (0+255),f,b
 13833  0137F8  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 13834  0137FA  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 13835  0137FC  0736               	decf	___ftadd@exp1& (0+255),f,b
 13836                           
 13837                           ; BSR set to: 1
 13838  0137FE  5136               	movf	___ftadd@exp1& (0+255),w,b
 13839  013800  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 13840  013802  B4D8               	btfsc	status,2,c
 13841  013804  D00D               	goto	l1488
 13842                           
 13843                           ; BSR set to: 1
 13844  013806  0734               	decf	___ftadd@sign& (0+255),f,b
 13845  013808  C134  F131         	movff	___ftadd@sign,??___ftadd
 13846  01380C  0E07               	movlw	7
 13847  01380E  1731               	andwf	??___ftadd& (0+255),f,b
 13848  013810  B4D8               	btfsc	status,2,c
 13849  013812  D006               	goto	l1488
 13850  013814  D7EF               	goto	u8950
 13851  013816                     
 13852                           ; BSR set to: 1
 13853                           
 13854                           ; BSR set to: 1
 13855  013816  90D8               	bcf	status,0,c
 13856  013818  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 13857  01381A  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 13858  01381C  332E               	rrcf	___ftadd@f2& (0+255),f,b
 13859  01381E  2B35               	incf	___ftadd@exp2& (0+255),f,b
 13860  013820                     l1488:
 13861                           
 13862                           ; BSR set to: 1
 13863                           
 13864                           ; BSR set to: 1
 13865  013820  5135               	movf	___ftadd@exp2& (0+255),w,b
 13866  013822  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 13867  013824  A4D8               	btfss	status,2,c
 13868  013826  D7F7               	goto	l1489
 13869  013828                     u8980:
 13870                           
 13871                           ; BSR set to: 1
 13872                           
 13873                           ; BSR set to: 1
 13874                           
 13875                           ; BSR set to: 1
 13876  013828  AF34               	btfss	___ftadd@sign& (0+255),7,b
 13877  01382A  D00C               	goto	l1491
 13878                           
 13879                           ; BSR set to: 1
 13880  01382C  0EFF               	movlw	255
 13881  01382E  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 13882  013830  0EFF               	movlw	255
 13883  013832  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 13884  013834  0EFF               	movlw	255
 13885  013836  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 13886  013838  0E01               	movlw	1
 13887  01383A  272B               	addwf	___ftadd@f1& (0+255),f,b
 13888  01383C  0E00               	movlw	0
 13889  01383E  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 13890  013840  0E00               	movlw	0
 13891  013842  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 13892  013844                     l1491:
 13893                           
 13894                           ; BSR set to: 1
 13895  013844  AD34               	btfss	___ftadd@sign& (0+255),6,b
 13896  013846  D00C               	goto	l1492
 13897                           
 13898                           ; BSR set to: 1
 13899  013848  0EFF               	movlw	255
 13900  01384A  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 13901  01384C  0EFF               	movlw	255
 13902  01384E  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 13903  013850  0EFF               	movlw	255
 13904  013852  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 13905  013854  0E01               	movlw	1
 13906  013856  272E               	addwf	___ftadd@f2& (0+255),f,b
 13907  013858  0E00               	movlw	0
 13908  01385A  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13909  01385C  0E00               	movlw	0
 13910  01385E  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13911  013860                     l1492:
 13912                           
 13913                           ; BSR set to: 1
 13914                           
 13915                           ; BSR set to: 1
 13916  013860  0E00               	movlw	0
 13917  013862  6F34               	movwf	___ftadd@sign& (0+255),b
 13918                           
 13919                           ; BSR set to: 1
 13920  013864  512B               	movf	___ftadd@f1& (0+255),w,b
 13921  013866  272E               	addwf	___ftadd@f2& (0+255),f,b
 13922  013868  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 13923  01386A  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13924  01386C  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 13925  01386E  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13926                           
 13927                           ; BSR set to: 1
 13928  013870  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 13929  013872  D00E               	goto	l1493
 13930                           
 13931                           ; BSR set to: 1
 13932  013874  0EFF               	movlw	255
 13933  013876  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 13934  013878  0EFF               	movlw	255
 13935  01387A  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 13936  01387C  0EFF               	movlw	255
 13937  01387E  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 13938  013880  0E01               	movlw	1
 13939  013882  272E               	addwf	___ftadd@f2& (0+255),f,b
 13940  013884  0E00               	movlw	0
 13941  013886  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13942  013888  0E00               	movlw	0
 13943  01388A  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13944                           
 13945                           ; BSR set to: 1
 13946  01388C  0E01               	movlw	1
 13947  01388E  6F34               	movwf	___ftadd@sign& (0+255),b
 13948  013890                     l1493:
 13949                           
 13950                           ; BSR set to: 1
 13951                           
 13952                           ; BSR set to: 1
 13953  013890  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 13954  013894  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 13955  013898  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 13956  01389C  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 13957  0138A0  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 13958  0138A4  EC64  F0A5         	call	___ftpack	;wreg free
 13959  0138A8  C117  F12B         	movff	?___ftpack,?___ftadd
 13960  0138AC  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 13961  0138B0  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 13962  0138B4  0012               	return	
 13963  0138B6                     __end_of___ftadd:
 13964                           	opt stack 0
 13965                           tblptru	equ	0xFF8
 13966                           tblptrh	equ	0xFF7
 13967                           tblptrl	equ	0xFF6
 13968                           tablat	equ	0xFF5
 13969                           prodh	equ	0xFF4
 13970                           prodl	equ	0xFF3
 13971                           intcon	equ	0xFF2
 13972                           postinc0	equ	0xFEE
 13973                           wreg	equ	0xFE8
 13974                           indf1	equ	0xFE7
 13975                           postdec1	equ	0xFE5
 13976                           fsr1h	equ	0xFE2
 13977                           fsr1l	equ	0xFE1
 13978                           indf2	equ	0xFDF
 13979                           postinc2	equ	0xFDE
 13980                           postdec2	equ	0xFDD
 13981                           fsr2h	equ	0xFDA
 13982                           fsr2l	equ	0xFD9
 13983                           status	equ	0xFD8
 13984                           
 13985 ;; *************** function ___ftpack *****************
 13986 ;; Defined at:
 13987 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 13988 ;; Parameters:    Size  Location     Type
 13989 ;;  arg             3   23[BANK1 ] unsigned um
 13990 ;;  exp             1   26[BANK1 ] unsigned char 
 13991 ;;  sign            1   27[BANK1 ] unsigned char 
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  3   23[BANK1 ] float 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2, status,0
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14003 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14005 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14006 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14007 ;;Total ram usage:        8 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; Hardware stack levels required when called:   14
 14010 ;; This function calls:
 14011 ;;		Nothing
 14012 ;; This function is called by:
 14013 ;;		___awtoft
 14014 ;;		___ftadd
 14015 ;;		___ftdiv
 14016 ;;		___ftmul
 14017 ;;		___lltoft
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text37
 14022  014AC8                     __ptext37:
 14023                           	opt stack 0
 14024  014AC8                     ___ftpack:
 14025                           	opt stack 11
 14026                           
 14027                           ;incstack = 0
 14028  014AC8  0101               	movlb	1	; () banked
 14029  014ACA  511A               	movf	___ftpack@exp& (0+255),w,b
 14030  014ACC  B4D8               	btfsc	status,2,c
 14031  014ACE  D005               	goto	u8430
 14032                           
 14033                           ; BSR set to: 1
 14034  014AD0  5117               	movf	___ftpack@arg& (0+255),w,b
 14035  014AD2  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14036  014AD4  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14037  014AD6  A4D8               	btfss	status,2,c
 14038  014AD8  D00C               	goto	l1434
 14039  014ADA                     u8430:
 14040                           
 14041                           ; BSR set to: 1
 14042                           
 14043                           ; BSR set to: 1
 14044  014ADA  0E00               	movlw	0
 14045  014ADC  6F17               	movwf	?___ftpack& (0+255),b
 14046  014ADE  0E00               	movlw	0
 14047  014AE0  6F18               	movwf	(?___ftpack+1)& (0+255),b
 14048  014AE2  0E00               	movlw	0
 14049  014AE4  6F19               	movwf	(?___ftpack+2)& (0+255),b
 14050                           
 14051                           ; BSR set to: 1
 14052  014AE6  0012               	return	
 14053  014AE8                     
 14054                           ; BSR set to: 1
 14055                           
 14056                           ; BSR set to: 1
 14057  014AE8  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14058  014AEA  90D8               	bcf	status,0,c
 14059  014AEC  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14060  014AEE  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14061  014AF0  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14062  014AF2                     l1434:
 14063                           
 14064                           ; BSR set to: 1
 14065                           
 14066                           ; BSR set to: 1
 14067  014AF2  0E00               	movlw	0
 14068  014AF4  1517               	andwf	___ftpack@arg& (0+255),w,b
 14069  014AF6  6F1C               	movwf	??___ftpack& (0+255),b
 14070  014AF8  0E00               	movlw	0
 14071  014AFA  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14072  014AFC  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14073  014AFE  0EFE               	movlw	254
 14074  014B00  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14075  014B02  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14076  014B04  511C               	movf	??___ftpack& (0+255),w,b
 14077  014B06  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14078  014B08  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14079  014B0A  B4D8               	btfsc	status,2,c
 14080  014B0C  D00C               	goto	l1437
 14081  014B0E  D7EC               	goto	l1435
 14082  014B10                     
 14083                           ; BSR set to: 1
 14084                           
 14085                           ; BSR set to: 1
 14086  014B10  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14087                           
 14088                           ; BSR set to: 1
 14089  014B12  0E01               	movlw	1
 14090  014B14  2717               	addwf	___ftpack@arg& (0+255),f,b
 14091  014B16  0E00               	movlw	0
 14092  014B18  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14093  014B1A  0E00               	movlw	0
 14094  014B1C  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14095  014B1E  90D8               	bcf	status,0,c
 14096  014B20  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14097  014B22  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14098  014B24  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14099  014B26                     l1437:
 14100                           
 14101                           ; BSR set to: 1
 14102                           
 14103                           ; BSR set to: 1
 14104  014B26  0E00               	movlw	0
 14105  014B28  1517               	andwf	___ftpack@arg& (0+255),w,b
 14106  014B2A  6F1C               	movwf	??___ftpack& (0+255),b
 14107  014B2C  0E00               	movlw	0
 14108  014B2E  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14109  014B30  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14110  014B32  0EFF               	movlw	255
 14111  014B34  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14112  014B36  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14113  014B38  511C               	movf	??___ftpack& (0+255),w,b
 14114  014B3A  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14115  014B3C  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14116  014B3E  B4D8               	btfsc	status,2,c
 14117  014B40  D006               	goto	l1440
 14118  014B42  D7E6               	goto	l1438
 14119  014B44                     
 14120                           ; BSR set to: 1
 14121                           
 14122                           ; BSR set to: 1
 14123  014B44  071A               	decf	___ftpack@exp& (0+255),f,b
 14124  014B46  90D8               	bcf	status,0,c
 14125  014B48  3717               	rlcf	___ftpack@arg& (0+255),f,b
 14126  014B4A  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14127  014B4C  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14128  014B4E                     l1440:
 14129                           
 14130                           ; BSR set to: 1
 14131                           
 14132                           ; BSR set to: 1
 14133  014B4E  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14134  014B50  D003               	goto	u8470
 14135                           
 14136                           ; BSR set to: 1
 14137  014B52  0E02               	movlw	2
 14138  014B54  611A               	cpfslt	___ftpack@exp& (0+255),b
 14139  014B56  D7F6               	goto	l1441
 14140  014B58                     u8470:
 14141                           
 14142                           ; BSR set to: 1
 14143                           
 14144                           ; BSR set to: 1
 14145  014B58  A11A               	btfss	___ftpack@exp& (0+255),0,b
 14146                           
 14147                           ; BSR set to: 1
 14148  014B5A  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14149                           
 14150                           ; BSR set to: 1
 14151                           
 14152                           ; BSR set to: 1
 14153  014B5C  90D8               	bcf	status,0,c
 14154  014B5E  331A               	rrcf	___ftpack@exp& (0+255),f,b
 14155  014B60  511A               	movf	___ftpack@exp& (0+255),w,b
 14156  014B62  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14157                           
 14158                           ; BSR set to: 1
 14159  014B64  511B               	movf	___ftpack@sign& (0+255),w,b
 14160  014B66  A4D8               	btfss	status,2,c
 14161                           
 14162                           ; BSR set to: 1
 14163  014B68  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14164                           
 14165                           ; BSR set to: 1
 14166                           
 14167                           ; BSR set to: 1
 14168  014B6A  C117  F117         	movff	___ftpack@arg,?___ftpack
 14169  014B6E  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 14170  014B72  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 14171  014B76  0012               	return	
 14172  014B78                     __end_of___ftpack:
 14173                           	opt stack 0
 14174                           tblptru	equ	0xFF8
 14175                           tblptrh	equ	0xFF7
 14176                           tblptrl	equ	0xFF6
 14177                           tablat	equ	0xFF5
 14178                           prodh	equ	0xFF4
 14179                           prodl	equ	0xFF3
 14180                           intcon	equ	0xFF2
 14181                           postinc0	equ	0xFEE
 14182                           wreg	equ	0xFE8
 14183                           indf1	equ	0xFE7
 14184                           postdec1	equ	0xFE5
 14185                           fsr1h	equ	0xFE2
 14186                           fsr1l	equ	0xFE1
 14187                           indf2	equ	0xFDF
 14188                           postinc2	equ	0xFDE
 14189                           postdec2	equ	0xFDD
 14190                           fsr2h	equ	0xFDA
 14191                           fsr2l	equ	0xFD9
 14192                           status	equ	0xFD8
 14193                           
 14194 ;; *************** function ___ftneg *****************
 14195 ;; Defined at:
 14196 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  f1              3   35[BANK1 ] float 
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;		None
 14201 ;; Return value:  Size  Location     Type
 14202 ;;                  3   35[BANK1 ] float 
 14203 ;; Registers used:
 14204 ;;		wreg, status,2, status,0
 14205 ;; Tracked objects:
 14206 ;;		On entry : 0/0
 14207 ;;		On exit  : 0/0
 14208 ;;		Unchanged: 0/0
 14209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14210 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14213 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14214 ;;Total ram usage:        3 bytes
 14215 ;; Hardware stack levels used:    1
 14216 ;; Hardware stack levels required when called:   14
 14217 ;; This function calls:
 14218 ;;		Nothing
 14219 ;; This function is called by:
 14220 ;;		_ringBufferLUT
 14221 ;;		_printf
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text38
 14226  015D3C                     __ptext38:
 14227                           	opt stack 0
 14228  015D3C                     ___ftneg:
 14229                           	opt stack 13
 14230                           
 14231                           ; BSR set to: 1
 14232                           ;incstack = 0
 14233  015D3C  0101               	movlb	1	; () banked
 14234  015D3E  5123               	movf	___ftneg@f1& (0+255),w,b
 14235  015D40  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 14236  015D42  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 14237  015D44  B4D8               	btfsc	status,2,c
 14238  015D46  D006               	goto	l1541
 14239                           
 14240                           ; BSR set to: 1
 14241  015D48  0E00               	movlw	0
 14242  015D4A  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 14243  015D4C  0E00               	movlw	0
 14244  015D4E  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 14245  015D50  0E80               	movlw	128
 14246  015D52  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 14247  015D54                     l1541:
 14248                           
 14249                           ; BSR set to: 1
 14250  015D54  C123  F123         	movff	___ftneg@f1,?___ftneg
 14251  015D58  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 14252  015D5C  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 14253                           
 14254                           ; BSR set to: 1
 14255  015D60  0012               	return		;funcret
 14256  015D62                     __end_of___ftneg:
 14257                           	opt stack 0
 14258                           tblptru	equ	0xFF8
 14259                           tblptrh	equ	0xFF7
 14260                           tblptrl	equ	0xFF6
 14261                           tablat	equ	0xFF5
 14262                           prodh	equ	0xFF4
 14263                           prodl	equ	0xFF3
 14264                           intcon	equ	0xFF2
 14265                           postinc0	equ	0xFEE
 14266                           wreg	equ	0xFE8
 14267                           indf1	equ	0xFE7
 14268                           postdec1	equ	0xFE5
 14269                           fsr1h	equ	0xFE2
 14270                           fsr1l	equ	0xFE1
 14271                           indf2	equ	0xFDF
 14272                           postinc2	equ	0xFDE
 14273                           postdec2	equ	0xFDD
 14274                           fsr2h	equ	0xFDA
 14275                           fsr2l	equ	0xFD9
 14276                           status	equ	0xFD8
 14277                           
 14278 ;; *************** function ___ftge *****************
 14279 ;; Defined at:
 14280 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  ff1             3   23[BANK1 ] float 
 14283 ;;  ff2             3   26[BANK1 ] float 
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;		None
 14286 ;; Return value:  Size  Location     Type
 14287 ;;		None               void
 14288 ;; Registers used:
 14289 ;;		wreg, status,2, status,0
 14290 ;; Tracked objects:
 14291 ;;		On entry : 0/0
 14292 ;;		On exit  : 0/0
 14293 ;;		Unchanged: 0/0
 14294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14295 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14297 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14298 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14299 ;;Total ram usage:        9 bytes
 14300 ;; Hardware stack levels used:    1
 14301 ;; Hardware stack levels required when called:   14
 14302 ;; This function calls:
 14303 ;;		Nothing
 14304 ;; This function is called by:
 14305 ;;		_printf
 14306 ;; This function uses a non-reentrant model
 14307 ;;
 14308                           
 14309                           	psect	text39
 14310  014D72                     __ptext39:
 14311                           	opt stack 0
 14312  014D72                     ___ftge:
 14313                           	opt stack 13
 14314                           
 14315                           ; BSR set to: 1
 14316                           ;incstack = 0
 14317  014D72  0101               	movlb	1	; () banked
 14318  014D74  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14319  014D76  D016               	goto	l1523
 14320                           
 14321                           ; BSR set to: 1
 14322  014D78  C117  F11D         	movff	___ftge@ff1,??___ftge
 14323  014D7C  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 14324  014D80  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 14325  014D84  1F1D               	comf	??___ftge& (0+255),f,b
 14326  014D86  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 14327  014D88  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 14328  014D8A  2B1D               	incf	??___ftge& (0+255),f,b
 14329  014D8C  0E00               	movlw	0
 14330  014D8E  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 14331  014D90  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 14332  014D92  0E00               	movlw	0
 14333  014D94  251D               	addwf	??___ftge& (0+255),w,b
 14334  014D96  6F17               	movwf	___ftge@ff1& (0+255),b
 14335  014D98  0E00               	movlw	0
 14336  014D9A  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 14337  014D9C  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 14338  014D9E  0E80               	movlw	128
 14339  014DA0  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 14340  014DA2  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 14341  014DA4                     l1523:
 14342                           
 14343                           ; BSR set to: 1
 14344                           
 14345                           ; BSR set to: 1
 14346  014DA4  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14347  014DA6  D016               	goto	l1524
 14348                           
 14349                           ; BSR set to: 1
 14350  014DA8  C11A  F11D         	movff	___ftge@ff2,??___ftge
 14351  014DAC  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 14352  014DB0  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 14353  014DB4  1F1D               	comf	??___ftge& (0+255),f,b
 14354  014DB6  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 14355  014DB8  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 14356  014DBA  2B1D               	incf	??___ftge& (0+255),f,b
 14357  014DBC  0E00               	movlw	0
 14358  014DBE  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 14359  014DC0  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 14360  014DC2  0E00               	movlw	0
 14361  014DC4  251D               	addwf	??___ftge& (0+255),w,b
 14362  014DC6  6F1A               	movwf	___ftge@ff2& (0+255),b
 14363  014DC8  0E00               	movlw	0
 14364  014DCA  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 14365  014DCC  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14366  014DCE  0E80               	movlw	128
 14367  014DD0  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 14368  014DD2  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14369  014DD4                     l1524:
 14370                           
 14371                           ; BSR set to: 1
 14372                           
 14373                           ; BSR set to: 1
 14374  014DD4  0E00               	movlw	0
 14375  014DD6  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 14376  014DD8  0E00               	movlw	0
 14377  014DDA  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14378  014DDC  0E80               	movlw	128
 14379  014DDE  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14380                           
 14381                           ; BSR set to: 1
 14382  014DE0  0E00               	movlw	0
 14383  014DE2  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 14384  014DE4  0E00               	movlw	0
 14385  014DE6  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14386  014DE8  0E80               	movlw	128
 14387  014DEA  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14388  014DEC  511A               	movf	___ftge@ff2& (0+255),w,b
 14389  014DEE  5D17               	subwf	___ftge@ff1& (0+255),w,b
 14390  014DF0  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 14391  014DF2  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14392  014DF4  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 14393  014DF6  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14394  014DF8  B0D8               	btfsc	status,0,c
 14395  014DFA  D002               	goto	l7577
 14396                           
 14397                           ; BSR set to: 1
 14398  014DFC  90D8               	bcf	status,0,c
 14399  014DFE  0012               	return	
 14400  014E00                     l7577:
 14401                           
 14402                           ; BSR set to: 1
 14403                           
 14404                           ; BSR set to: 1
 14405  014E00  80D8               	bsf	status,0,c
 14406                           
 14407                           ; BSR set to: 1
 14408  014E02  0012               	return	
 14409  014E04                     __end_of___ftge:
 14410                           	opt stack 0
 14411                           tblptru	equ	0xFF8
 14412                           tblptrh	equ	0xFF7
 14413                           tblptrl	equ	0xFF6
 14414                           tablat	equ	0xFF5
 14415                           prodh	equ	0xFF4
 14416                           prodl	equ	0xFF3
 14417                           intcon	equ	0xFF2
 14418                           postinc0	equ	0xFEE
 14419                           wreg	equ	0xFE8
 14420                           indf1	equ	0xFE7
 14421                           postdec1	equ	0xFE5
 14422                           fsr1h	equ	0xFE2
 14423                           fsr1l	equ	0xFE1
 14424                           indf2	equ	0xFDF
 14425                           postinc2	equ	0xFDE
 14426                           postdec2	equ	0xFDD
 14427                           fsr2h	equ	0xFDA
 14428                           fsr2l	equ	0xFD9
 14429                           status	equ	0xFD8
 14430                           
 14431 ;; *************** function _SYSTEM_Initialize *****************
 14432 ;; Defined at:
 14433 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14434 ;; Parameters:    Size  Location     Type
 14435 ;;		None
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;		None
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      void 
 14440 ;; Registers used:
 14441 ;;		wreg, status,2, status,0, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14451 ;;Total ram usage:        0 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:   16
 14454 ;; This function calls:
 14455 ;;		_ADCC_Initialize
 14456 ;;		_EUSART2_Initialize
 14457 ;;		_FVR_Initialize
 14458 ;;		_INTERRUPT_Initialize
 14459 ;;		_OSCILLATOR_Initialize
 14460 ;;		_PIN_MANAGER_Initialize
 14461 ;;		_PMD_Initialize
 14462 ;;		_TMR5_Initialize
 14463 ;;		_TMR6_Initialize
 14464 ;;		_TMR7_Initialize
 14465 ;; This function is called by:
 14466 ;;		_main
 14467 ;; This function uses a non-reentrant model
 14468 ;;
 14469                           
 14470                           	psect	text40
 14471  015C9A                     __ptext40:
 14472                           	opt stack 0
 14473  015C9A                     _SYSTEM_Initialize:
 14474                           	opt stack 14
 14475                           
 14476                           ;mcc.c: 52: INTERRUPT_Initialize();
 14477                           
 14478                           ; BSR set to: 1
 14479                           ;incstack = 0
 14480  015C9A  EC58  F0AF         	call	_INTERRUPT_Initialize	;wreg free
 14481                           
 14482                           ;mcc.c: 53: PMD_Initialize();
 14483  015C9E  EC1B  F0AF         	call	_PMD_Initialize	;wreg free
 14484                           
 14485                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 14486  015CA2  EC68  F0A6         	call	_PIN_MANAGER_Initialize	;wreg free
 14487                           
 14488                           ;mcc.c: 55: OSCILLATOR_Initialize();
 14489  015CA6  EC29  F0AF         	call	_OSCILLATOR_Initialize	;wreg free
 14490                           
 14491                           ;mcc.c: 56: FVR_Initialize();
 14492  015CAA  ECBC  F0AF         	call	_FVR_Initialize	;wreg free
 14493                           
 14494                           ;mcc.c: 57: TMR7_Initialize();
 14495  015CAE  EC60  F0AC         	call	_TMR7_Initialize	;wreg free
 14496                           
 14497                           ;mcc.c: 58: TMR6_Initialize();
 14498  015CB2  EC05  F0AE         	call	_TMR6_Initialize	;wreg free
 14499                           
 14500                           ;mcc.c: 59: ADCC_Initialize();
 14501  015CB6  ECD0  F0AA         	call	_ADCC_Initialize	;wreg free
 14502                           
 14503                           ;mcc.c: 60: TMR5_Initialize();
 14504  015CBA  ECAD  F0AC         	call	_TMR5_Initialize	;wreg free
 14505                           
 14506                           ;mcc.c: 61: EUSART2_Initialize();
 14507  015CBE  EC6A  F0AA         	call	_EUSART2_Initialize	;wreg free
 14508  015CC2  0012               	return		;funcret
 14509  015CC4                     __end_of_SYSTEM_Initialize:
 14510                           	opt stack 0
 14511                           tblptru	equ	0xFF8
 14512                           tblptrh	equ	0xFF7
 14513                           tblptrl	equ	0xFF6
 14514                           tablat	equ	0xFF5
 14515                           prodh	equ	0xFF4
 14516                           prodl	equ	0xFF3
 14517                           intcon	equ	0xFF2
 14518                           postinc0	equ	0xFEE
 14519                           wreg	equ	0xFE8
 14520                           indf1	equ	0xFE7
 14521                           postdec1	equ	0xFE5
 14522                           fsr1h	equ	0xFE2
 14523                           fsr1l	equ	0xFE1
 14524                           indf2	equ	0xFDF
 14525                           postinc2	equ	0xFDE
 14526                           postdec2	equ	0xFDD
 14527                           fsr2h	equ	0xFDA
 14528                           fsr2l	equ	0xFD9
 14529                           status	equ	0xFD8
 14530                           
 14531 ;; *************** function _TMR7_Initialize *****************
 14532 ;; Defined at:
 14533 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;		None
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;		None
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  1    wreg      void 
 14540 ;; Registers used:
 14541 ;;		wreg, status,2, status,0, cstack
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14549 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14550 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14551 ;;Total ram usage:        2 bytes
 14552 ;; Hardware stack levels used:    1
 14553 ;; Hardware stack levels required when called:   15
 14554 ;; This function calls:
 14555 ;;		_TMR7_SetInterruptHandler
 14556 ;; This function is called by:
 14557 ;;		_SYSTEM_Initialize
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561                           	psect	text41
 14562  0158C0                     __ptext41:
 14563                           	opt stack 0
 14564  0158C0                     _TMR7_Initialize:
 14565                           	opt stack 14
 14566                           
 14567                           ;tmr7.c: 69: T7GCON = 0x00;
 14568                           
 14569                           ;incstack = 0
 14570  0158C0  0E00               	movlw	0
 14571  0158C2  010F               	movlb	15	; () banked
 14572  0158C4  6F31               	movwf	49,b	;volatile
 14573                           
 14574                           ;tmr7.c: 72: T7GATE = 0x00;
 14575  0158C6  0E00               	movlw	0
 14576  0158C8  6F32               	movwf	50,b	;volatile
 14577                           
 14578                           ;tmr7.c: 75: T7CLK = 0x03;
 14579  0158CA  0E03               	movlw	3
 14580  0158CC  6F33               	movwf	51,b	;volatile
 14581                           
 14582                           ;tmr7.c: 78: TMR7H = 0x3C;
 14583  0158CE  0E3C               	movlw	60
 14584  0158D0  6F2F               	movwf	47,b	;volatile
 14585                           
 14586                           ;tmr7.c: 81: TMR7L = 0xB0;
 14587  0158D2  0EB0               	movlw	176
 14588  0158D4  6F2E               	movwf	46,b	;volatile
 14589                           
 14590                           ; BSR set to: 15
 14591                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 14592  0158D6  512E               	movf	46,w,b	;volatile
 14593  0158D8  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 14594  0158DC  0101               	movlb	1	; () banked
 14595  0158DE  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 14596  0158E0  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 14597  0158E4  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 14598  0158E6  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 14599  0158E8  6FD6               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 14600  0158EA  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 14601  0158EC  6FD7               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 14602                           
 14603                           ; BSR set to: 1
 14604                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 14605  0158EE  010E               	movlb	14	; () banked
 14606  0158F0  9D38               	bcf	56,6,b	;volatile
 14607                           
 14608                           ; BSR set to: 14
 14609                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 14610  0158F2  8D2E               	bsf	46,6,b	;volatile
 14611                           
 14612                           ; BSR set to: 14
 14613                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 14614  0158F4  0E86               	movlw	low _TMR7_DefaultInterruptHandler
 14615  0158F6  0101               	movlb	1	; () banked
 14616  0158F8  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 14617  0158FA  0E5F               	movlw	high _TMR7_DefaultInterruptHandler
 14618  0158FC  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14619  0158FE  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 14620  015900  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 14621  015902  EC80  F0AF         	call	_TMR7_SetInterruptHandler	;wreg free
 14622                           
 14623                           ;tmr7.c: 96: T7CON = 0x31;
 14624  015906  0E31               	movlw	49
 14625  015908  010F               	movlb	15	; () banked
 14626  01590A  6F30               	movwf	48,b	;volatile
 14627                           
 14628                           ; BSR set to: 15
 14629  01590C  0012               	return		;funcret
 14630  01590E                     __end_of_TMR7_Initialize:
 14631                           	opt stack 0
 14632                           tblptru	equ	0xFF8
 14633                           tblptrh	equ	0xFF7
 14634                           tblptrl	equ	0xFF6
 14635                           tablat	equ	0xFF5
 14636                           prodh	equ	0xFF4
 14637                           prodl	equ	0xFF3
 14638                           intcon	equ	0xFF2
 14639                           postinc0	equ	0xFEE
 14640                           wreg	equ	0xFE8
 14641                           indf1	equ	0xFE7
 14642                           postdec1	equ	0xFE5
 14643                           fsr1h	equ	0xFE2
 14644                           fsr1l	equ	0xFE1
 14645                           indf2	equ	0xFDF
 14646                           postinc2	equ	0xFDE
 14647                           postdec2	equ	0xFDD
 14648                           fsr2h	equ	0xFDA
 14649                           fsr2l	equ	0xFD9
 14650                           status	equ	0xFD8
 14651                           
 14652 ;; *************** function _TMR7_SetInterruptHandler *****************
 14653 ;; Defined at:
 14654 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 14657 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;		None
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      void 
 14662 ;; Registers used:
 14663 ;;		wreg, status,2, status,0
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14669 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14672 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14673 ;;Total ram usage:        3 bytes
 14674 ;; Hardware stack levels used:    1
 14675 ;; Hardware stack levels required when called:   14
 14676 ;; This function calls:
 14677 ;;		Nothing
 14678 ;; This function is called by:
 14679 ;;		_TMR7_Initialize
 14680 ;;		_main
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684                           	psect	text42
 14685  015F00                     __ptext42:
 14686                           	opt stack 0
 14687  015F00                     _TMR7_SetInterruptHandler:
 14688                           	opt stack 16
 14689                           
 14690                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 14691                           
 14692                           ; BSR set to: 15
 14693                           ;incstack = 0
 14694  015F00  C117  F1CB         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 14695  015F04  C118  F1CC         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 14696  015F08  C119  F1CD         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 14697  015F0C  0012               	return		;funcret
 14698  015F0E                     __end_of_TMR7_SetInterruptHandler:
 14699                           	opt stack 0
 14700                           tblptru	equ	0xFF8
 14701                           tblptrh	equ	0xFF7
 14702                           tblptrl	equ	0xFF6
 14703                           tablat	equ	0xFF5
 14704                           prodh	equ	0xFF4
 14705                           prodl	equ	0xFF3
 14706                           intcon	equ	0xFF2
 14707                           postinc0	equ	0xFEE
 14708                           wreg	equ	0xFE8
 14709                           indf1	equ	0xFE7
 14710                           postdec1	equ	0xFE5
 14711                           fsr1h	equ	0xFE2
 14712                           fsr1l	equ	0xFE1
 14713                           indf2	equ	0xFDF
 14714                           postinc2	equ	0xFDE
 14715                           postdec2	equ	0xFDD
 14716                           fsr2h	equ	0xFDA
 14717                           fsr2l	equ	0xFD9
 14718                           status	equ	0xFD8
 14719                           
 14720 ;; *************** function _TMR6_Initialize *****************
 14721 ;; Defined at:
 14722 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 14723 ;; Parameters:    Size  Location     Type
 14724 ;;		None
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;		None
 14727 ;; Return value:  Size  Location     Type
 14728 ;;                  1    wreg      void 
 14729 ;; Registers used:
 14730 ;;		wreg, status,2, status,0, cstack
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14740 ;;Total ram usage:        0 bytes
 14741 ;; Hardware stack levels used:    1
 14742 ;; Hardware stack levels required when called:   15
 14743 ;; This function calls:
 14744 ;;		_TMR6_SetInterruptHandler
 14745 ;; This function is called by:
 14746 ;;		_SYSTEM_Initialize
 14747 ;; This function uses a non-reentrant model
 14748 ;;
 14749                           
 14750                           	psect	text43
 14751  015C0A                     __ptext43:
 14752                           	opt stack 0
 14753  015C0A                     _TMR6_Initialize:
 14754                           	opt stack 14
 14755                           
 14756                           ;tmr6.c: 69: T6CLKCON = 0x04;
 14757                           
 14758                           ;incstack = 0
 14759  015C0A  0E04               	movlw	4
 14760  015C0C  6EB3               	movwf	4019,c	;volatile
 14761                           
 14762                           ;tmr6.c: 72: T6HLT = 0x20;
 14763  015C0E  0E20               	movlw	32
 14764  015C10  6EB2               	movwf	4018,c	;volatile
 14765                           
 14766                           ;tmr6.c: 75: T6RST = 0x00;
 14767  015C12  0E00               	movlw	0
 14768  015C14  6EB4               	movwf	4020,c	;volatile
 14769                           
 14770                           ;tmr6.c: 78: T6PR = 0xF1;
 14771  015C16  0EF1               	movlw	241
 14772  015C18  6EB0               	movwf	4016,c	;volatile
 14773                           
 14774                           ;tmr6.c: 81: T6TMR = 0x00;
 14775  015C1A  0E00               	movlw	0
 14776  015C1C  6EAF               	movwf	4015,c	;volatile
 14777                           
 14778                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 14779  015C1E  010E               	movlb	14	; () banked
 14780  015C20  9B38               	bcf	56,5,b	;volatile
 14781                           
 14782                           ; BSR set to: 14
 14783                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 14784  015C22  8B2E               	bsf	46,5,b	;volatile
 14785                           
 14786                           ; BSR set to: 14
 14787                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 14788  015C24  0E88               	movlw	low _TMR6_DefaultInterruptHandler
 14789  015C26  0101               	movlb	1	; () banked
 14790  015C28  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 14791  015C2A  0E5F               	movlw	high _TMR6_DefaultInterruptHandler
 14792  015C2C  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14793  015C2E  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 14794  015C30  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 14795  015C32  EC87  F0AF         	call	_TMR6_SetInterruptHandler	;wreg free
 14796                           
 14797                           ;tmr6.c: 93: T6CON = 0xBF;
 14798  015C36  0EBF               	movlw	191
 14799  015C38  6EB1               	movwf	4017,c	;volatile
 14800  015C3A  0012               	return		;funcret
 14801  015C3C                     __end_of_TMR6_Initialize:
 14802                           	opt stack 0
 14803                           tblptru	equ	0xFF8
 14804                           tblptrh	equ	0xFF7
 14805                           tblptrl	equ	0xFF6
 14806                           tablat	equ	0xFF5
 14807                           prodh	equ	0xFF4
 14808                           prodl	equ	0xFF3
 14809                           intcon	equ	0xFF2
 14810                           postinc0	equ	0xFEE
 14811                           wreg	equ	0xFE8
 14812                           indf1	equ	0xFE7
 14813                           postdec1	equ	0xFE5
 14814                           fsr1h	equ	0xFE2
 14815                           fsr1l	equ	0xFE1
 14816                           indf2	equ	0xFDF
 14817                           postinc2	equ	0xFDE
 14818                           postdec2	equ	0xFDD
 14819                           fsr2h	equ	0xFDA
 14820                           fsr2l	equ	0xFD9
 14821                           status	equ	0xFD8
 14822                           
 14823 ;; *************** function _TMR6_SetInterruptHandler *****************
 14824 ;; Defined at:
 14825 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 14828 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      void 
 14833 ;; Registers used:
 14834 ;;		wreg, status,2, status,0
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14840 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14843 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14844 ;;Total ram usage:        3 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:   14
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		_TMR6_Initialize
 14851 ;;		_main
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text44
 14856  015F0E                     __ptext44:
 14857                           	opt stack 0
 14858  015F0E                     _TMR6_SetInterruptHandler:
 14859                           	opt stack 16
 14860                           
 14861                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 14862                           
 14863                           ;incstack = 0
 14864  015F0E  C117  F1CE         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 14865  015F12  C118  F1CF         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 14866  015F16  C119  F1D0         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 14867  015F1A  0012               	return		;funcret
 14868  015F1C                     __end_of_TMR6_SetInterruptHandler:
 14869                           	opt stack 0
 14870                           tblptru	equ	0xFF8
 14871                           tblptrh	equ	0xFF7
 14872                           tblptrl	equ	0xFF6
 14873                           tablat	equ	0xFF5
 14874                           prodh	equ	0xFF4
 14875                           prodl	equ	0xFF3
 14876                           intcon	equ	0xFF2
 14877                           postinc0	equ	0xFEE
 14878                           wreg	equ	0xFE8
 14879                           indf1	equ	0xFE7
 14880                           postdec1	equ	0xFE5
 14881                           fsr1h	equ	0xFE2
 14882                           fsr1l	equ	0xFE1
 14883                           indf2	equ	0xFDF
 14884                           postinc2	equ	0xFDE
 14885                           postdec2	equ	0xFDD
 14886                           fsr2h	equ	0xFDA
 14887                           fsr2l	equ	0xFD9
 14888                           status	equ	0xFD8
 14889                           
 14890 ;; *************** function _TMR5_Initialize *****************
 14891 ;; Defined at:
 14892 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;		None
 14895 ;; Auto vars:     Size  Location     Type
 14896 ;;		None
 14897 ;; Return value:  Size  Location     Type
 14898 ;;                  1    wreg      void 
 14899 ;; Registers used:
 14900 ;;		wreg, status,2, status,0, cstack
 14901 ;; Tracked objects:
 14902 ;;		On entry : 0/0
 14903 ;;		On exit  : 0/0
 14904 ;;		Unchanged: 0/0
 14905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14908 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14909 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14910 ;;Total ram usage:        2 bytes
 14911 ;; Hardware stack levels used:    1
 14912 ;; Hardware stack levels required when called:   15
 14913 ;; This function calls:
 14914 ;;		_TMR5_SetInterruptHandler
 14915 ;; This function is called by:
 14916 ;;		_SYSTEM_Initialize
 14917 ;; This function uses a non-reentrant model
 14918 ;;
 14919                           
 14920                           	psect	text45
 14921  01595A                     __ptext45:
 14922                           	opt stack 0
 14923  01595A                     _TMR5_Initialize:
 14924                           	opt stack 14
 14925                           
 14926                           ;tmr5.c: 69: T5GCON = 0x00;
 14927                           
 14928                           ;incstack = 0
 14929  01595A  0E00               	movlw	0
 14930  01595C  6EC4               	movwf	4036,c	;volatile
 14931                           
 14932                           ;tmr5.c: 72: T5GATE = 0x00;
 14933  01595E  0E00               	movlw	0
 14934  015960  6EC5               	movwf	4037,c	;volatile
 14935                           
 14936                           ;tmr5.c: 75: T5CLK = 0x01;
 14937  015962  0E01               	movlw	1
 14938  015964  6EC6               	movwf	4038,c	;volatile
 14939                           
 14940                           ;tmr5.c: 78: TMR5H = 0x00;
 14941  015966  0E00               	movlw	0
 14942  015968  6EC2               	movwf	4034,c	;volatile
 14943                           
 14944                           ;tmr5.c: 81: TMR5L = 0x00;
 14945  01596A  0E00               	movlw	0
 14946  01596C  6EC1               	movwf	4033,c	;volatile
 14947                           
 14948                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14949  01596E  50C1               	movf	4033,w,c	;volatile
 14950  015970  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 14951  015974  0101               	movlb	1	; () banked
 14952  015976  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 14953  015978  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14954  01597C  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 14955  01597E  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 14956  015980  6FD4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14957  015982  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 14958  015984  6FD5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14959                           
 14960                           ; BSR set to: 1
 14961                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 14962  015986  010E               	movlb	14	; () banked
 14963  015988  9938               	bcf	56,4,b	;volatile
 14964                           
 14965                           ; BSR set to: 14
 14966                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 14967  01598A  892E               	bsf	46,4,b	;volatile
 14968                           
 14969                           ; BSR set to: 14
 14970                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 14971  01598C  0E8A               	movlw	low _TMR5_DefaultInterruptHandler
 14972  01598E  0101               	movlb	1	; () banked
 14973  015990  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 14974  015992  0E5F               	movlw	high _TMR5_DefaultInterruptHandler
 14975  015994  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14976  015996  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 14977  015998  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 14978  01599A  EC8E  F0AF         	call	_TMR5_SetInterruptHandler	;wreg free
 14979                           
 14980                           ;tmr5.c: 96: T5CON = 0x13;
 14981  01599E  0E13               	movlw	19
 14982  0159A0  6EC3               	movwf	4035,c	;volatile
 14983  0159A2  0012               	return		;funcret
 14984  0159A4                     __end_of_TMR5_Initialize:
 14985                           	opt stack 0
 14986                           tblptru	equ	0xFF8
 14987                           tblptrh	equ	0xFF7
 14988                           tblptrl	equ	0xFF6
 14989                           tablat	equ	0xFF5
 14990                           prodh	equ	0xFF4
 14991                           prodl	equ	0xFF3
 14992                           intcon	equ	0xFF2
 14993                           postinc0	equ	0xFEE
 14994                           wreg	equ	0xFE8
 14995                           indf1	equ	0xFE7
 14996                           postdec1	equ	0xFE5
 14997                           fsr1h	equ	0xFE2
 14998                           fsr1l	equ	0xFE1
 14999                           indf2	equ	0xFDF
 15000                           postinc2	equ	0xFDE
 15001                           postdec2	equ	0xFDD
 15002                           fsr2h	equ	0xFDA
 15003                           fsr2l	equ	0xFD9
 15004                           status	equ	0xFD8
 15005                           
 15006 ;; *************** function _TMR5_SetInterruptHandler *****************
 15007 ;; Defined at:
 15008 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 15009 ;; Parameters:    Size  Location     Type
 15010 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15011 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;		None
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		wreg, status,2, status,0
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15023 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15026 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15027 ;;Total ram usage:        3 bytes
 15028 ;; Hardware stack levels used:    1
 15029 ;; Hardware stack levels required when called:   14
 15030 ;; This function calls:
 15031 ;;		Nothing
 15032 ;; This function is called by:
 15033 ;;		_TMR5_Initialize
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           	psect	text46
 15038  015F1C                     __ptext46:
 15039                           	opt stack 0
 15040  015F1C                     _TMR5_SetInterruptHandler:
 15041                           	opt stack 14
 15042                           
 15043                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 15044                           
 15045                           ;incstack = 0
 15046  015F1C  C117  F1BC         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15047  015F20  C118  F1BD         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15048  015F24  C119  F1BE         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 15049  015F28  0012               	return		;funcret
 15050  015F2A                     __end_of_TMR5_SetInterruptHandler:
 15051                           	opt stack 0
 15052                           tblptru	equ	0xFF8
 15053                           tblptrh	equ	0xFF7
 15054                           tblptrl	equ	0xFF6
 15055                           tablat	equ	0xFF5
 15056                           prodh	equ	0xFF4
 15057                           prodl	equ	0xFF3
 15058                           intcon	equ	0xFF2
 15059                           postinc0	equ	0xFEE
 15060                           wreg	equ	0xFE8
 15061                           indf1	equ	0xFE7
 15062                           postdec1	equ	0xFE5
 15063                           fsr1h	equ	0xFE2
 15064                           fsr1l	equ	0xFE1
 15065                           indf2	equ	0xFDF
 15066                           postinc2	equ	0xFDE
 15067                           postdec2	equ	0xFDD
 15068                           fsr2h	equ	0xFDA
 15069                           fsr2l	equ	0xFD9
 15070                           status	equ	0xFD8
 15071                           
 15072 ;; *************** function _PMD_Initialize *****************
 15073 ;; Defined at:
 15074 ;;		line 82 in file "mcc_generated_files/mcc.c"
 15075 ;; Parameters:    Size  Location     Type
 15076 ;;		None
 15077 ;; Auto vars:     Size  Location     Type
 15078 ;;		None
 15079 ;; Return value:  Size  Location     Type
 15080 ;;                  1    wreg      void 
 15081 ;; Registers used:
 15082 ;;		wreg, status,2
 15083 ;; Tracked objects:
 15084 ;;		On entry : 0/0
 15085 ;;		On exit  : 0/0
 15086 ;;		Unchanged: 0/0
 15087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15092 ;;Total ram usage:        0 bytes
 15093 ;; Hardware stack levels used:    1
 15094 ;; Hardware stack levels required when called:   14
 15095 ;; This function calls:
 15096 ;;		Nothing
 15097 ;; This function is called by:
 15098 ;;		_SYSTEM_Initialize
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102                           	psect	text47
 15103  015E36                     __ptext47:
 15104                           	opt stack 0
 15105  015E36                     _PMD_Initialize:
 15106                           	opt stack 15
 15107                           
 15108                           ;mcc.c: 85: PMD0 = 0x00;
 15109                           
 15110                           ;incstack = 0
 15111  015E36  0E00               	movlw	0
 15112  015E38  010E               	movlb	14	; () banked
 15113  015E3A  6F4C               	movwf	76,b	;volatile
 15114                           
 15115                           ;mcc.c: 87: PMD1 = 0x00;
 15116  015E3C  0E00               	movlw	0
 15117  015E3E  6F4D               	movwf	77,b	;volatile
 15118                           
 15119                           ;mcc.c: 89: PMD2 = 0x00;
 15120  015E40  0E00               	movlw	0
 15121  015E42  6F4E               	movwf	78,b	;volatile
 15122                           
 15123                           ;mcc.c: 91: PMD3 = 0x00;
 15124  015E44  0E00               	movlw	0
 15125  015E46  6F4F               	movwf	79,b	;volatile
 15126                           
 15127                           ;mcc.c: 93: PMD4 = 0x00;
 15128  015E48  0E00               	movlw	0
 15129  015E4A  6F50               	movwf	80,b	;volatile
 15130                           
 15131                           ;mcc.c: 95: PMD5 = 0x00;
 15132  015E4C  0E00               	movlw	0
 15133  015E4E  6F51               	movwf	81,b	;volatile
 15134                           
 15135                           ; BSR set to: 14
 15136  015E50  0012               	return		;funcret
 15137  015E52                     __end_of_PMD_Initialize:
 15138                           	opt stack 0
 15139                           tblptru	equ	0xFF8
 15140                           tblptrh	equ	0xFF7
 15141                           tblptrl	equ	0xFF6
 15142                           tablat	equ	0xFF5
 15143                           prodh	equ	0xFF4
 15144                           prodl	equ	0xFF3
 15145                           intcon	equ	0xFF2
 15146                           postinc0	equ	0xFEE
 15147                           wreg	equ	0xFE8
 15148                           indf1	equ	0xFE7
 15149                           postdec1	equ	0xFE5
 15150                           fsr1h	equ	0xFE2
 15151                           fsr1l	equ	0xFE1
 15152                           indf2	equ	0xFDF
 15153                           postinc2	equ	0xFDE
 15154                           postdec2	equ	0xFDD
 15155                           fsr2h	equ	0xFDA
 15156                           fsr2l	equ	0xFD9
 15157                           status	equ	0xFD8
 15158                           
 15159 ;; *************** function _PIN_MANAGER_Initialize *****************
 15160 ;; Defined at:
 15161 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;		None
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;		None
 15166 ;; Return value:  Size  Location     Type
 15167 ;;                  1    wreg      void 
 15168 ;; Registers used:
 15169 ;;		wreg, status,2
 15170 ;; Tracked objects:
 15171 ;;		On entry : 0/0
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15179 ;;Total ram usage:        0 bytes
 15180 ;; Hardware stack levels used:    1
 15181 ;; Hardware stack levels required when called:   14
 15182 ;; This function calls:
 15183 ;;		Nothing
 15184 ;; This function is called by:
 15185 ;;		_SYSTEM_Initialize
 15186 ;; This function uses a non-reentrant model
 15187 ;;
 15188                           
 15189                           	psect	text48
 15190  014CD0                     __ptext48:
 15191                           	opt stack 0
 15192  014CD0                     _PIN_MANAGER_Initialize:
 15193                           	opt stack 15
 15194                           
 15195                           ;pin_manager.c: 62: LATE = 0x00;
 15196                           
 15197                           ; BSR set to: 14
 15198                           ;incstack = 0
 15199  014CD0  0E00               	movlw	0
 15200  014CD2  6E7D               	movwf	3965,c	;volatile
 15201                           
 15202                           ;pin_manager.c: 63: LATD = 0x00;
 15203  014CD4  0E00               	movlw	0
 15204  014CD6  6E7C               	movwf	3964,c	;volatile
 15205                           
 15206                           ;pin_manager.c: 64: LATA = 0x00;
 15207  014CD8  0E00               	movlw	0
 15208  014CDA  6E79               	movwf	3961,c	;volatile
 15209                           
 15210                           ;pin_manager.c: 65: LATF = 0x00;
 15211  014CDC  0E00               	movlw	0
 15212  014CDE  6E7E               	movwf	3966,c	;volatile
 15213                           
 15214                           ;pin_manager.c: 66: LATB = 0x00;
 15215  014CE0  0E00               	movlw	0
 15216  014CE2  6E7A               	movwf	3962,c	;volatile
 15217                           
 15218                           ;pin_manager.c: 67: LATG = 0x00;
 15219  014CE4  0E00               	movlw	0
 15220  014CE6  6E7F               	movwf	3967,c	;volatile
 15221                           
 15222                           ;pin_manager.c: 68: LATC = 0x00;
 15223  014CE8  0E00               	movlw	0
 15224  014CEA  6E7B               	movwf	3963,c	;volatile
 15225                           
 15226                           ;pin_manager.c: 69: LATH = 0x00;
 15227  014CEC  0E00               	movlw	0
 15228  014CEE  6E80               	movwf	3968,c	;volatile
 15229                           
 15230                           ;pin_manager.c: 74: TRISE = 0xFF;
 15231  014CF0  6885               	setf	3973,c	;volatile
 15232                           
 15233                           ;pin_manager.c: 75: TRISF = 0xF0;
 15234  014CF2  0EF0               	movlw	240
 15235  014CF4  6E86               	movwf	3974,c	;volatile
 15236                           
 15237                           ;pin_manager.c: 76: TRISA = 0xFF;
 15238  014CF6  6881               	setf	3969,c	;volatile
 15239                           
 15240                           ;pin_manager.c: 77: TRISG = 0x5C;
 15241  014CF8  0E5C               	movlw	92
 15242  014CFA  6E87               	movwf	3975,c	;volatile
 15243                           
 15244                           ;pin_manager.c: 78: TRISB = 0xFF;
 15245  014CFC  6882               	setf	3970,c	;volatile
 15246                           
 15247                           ;pin_manager.c: 79: TRISH = 0x0F;
 15248  014CFE  0E0F               	movlw	15
 15249  014D00  6E88               	movwf	3976,c	;volatile
 15250                           
 15251                           ;pin_manager.c: 80: TRISC = 0xFF;
 15252  014D02  6883               	setf	3971,c	;volatile
 15253                           
 15254                           ;pin_manager.c: 81: TRISD = 0xFF;
 15255  014D04  6884               	setf	3972,c	;volatile
 15256                           
 15257                           ;pin_manager.c: 86: ANSELD = 0xFF;
 15258  014D06  010E               	movlb	14	; () banked
 15259  014D08  69A7               	setf	167,b	;volatile
 15260                           
 15261                           ; BSR set to: 14
 15262                           ;pin_manager.c: 87: ANSELB = 0xFF;
 15263  014D0A  699A               	setf	154,b	;volatile
 15264                           
 15265                           ; BSR set to: 14
 15266                           ;pin_manager.c: 88: ANSELE = 0xFF;
 15267  014D0C  69AF               	setf	175,b	;volatile
 15268                           
 15269                           ;pin_manager.c: 89: ANSELG = 0x3C;
 15270  014D0E  0E3C               	movlw	60
 15271  014D10  6FBC               	movwf	188,b	;volatile
 15272                           
 15273                           ;pin_manager.c: 90: ANSELF = 0xF0;
 15274  014D12  0EF0               	movlw	240
 15275  014D14  6FB4               	movwf	180,b	;volatile
 15276                           
 15277                           ; BSR set to: 14
 15278                           ;pin_manager.c: 91: ANSELA = 0xFF;
 15279  014D16  6992               	setf	146,b	;volatile
 15280                           
 15281                           ;pin_manager.c: 96: WPUD = 0x00;
 15282  014D18  0E00               	movlw	0
 15283  014D1A  6FA6               	movwf	166,b	;volatile
 15284                           
 15285                           ;pin_manager.c: 97: WPUF = 0x00;
 15286  014D1C  0E00               	movlw	0
 15287  014D1E  6FB3               	movwf	179,b	;volatile
 15288                           
 15289                           ;pin_manager.c: 98: WPUE = 0x00;
 15290  014D20  0E00               	movlw	0
 15291  014D22  6FAE               	movwf	174,b	;volatile
 15292                           
 15293                           ;pin_manager.c: 99: WPUB = 0x00;
 15294  014D24  0E00               	movlw	0
 15295  014D26  6F99               	movwf	153,b	;volatile
 15296                           
 15297                           ;pin_manager.c: 100: WPUG = 0x00;
 15298  014D28  0E00               	movlw	0
 15299  014D2A  6FBB               	movwf	187,b	;volatile
 15300                           
 15301                           ;pin_manager.c: 101: WPUA = 0x00;
 15302  014D2C  0E00               	movlw	0
 15303  014D2E  6F91               	movwf	145,b	;volatile
 15304                           
 15305                           ;pin_manager.c: 102: WPUC = 0x00;
 15306  014D30  0E00               	movlw	0
 15307  014D32  6FA1               	movwf	161,b	;volatile
 15308                           
 15309                           ;pin_manager.c: 103: WPUH = 0x00;
 15310  014D34  0E00               	movlw	0
 15311  014D36  6FC0               	movwf	192,b	;volatile
 15312                           
 15313                           ;pin_manager.c: 108: ODCONE = 0x00;
 15314  014D38  0E00               	movlw	0
 15315  014D3A  6FAD               	movwf	173,b	;volatile
 15316                           
 15317                           ;pin_manager.c: 109: ODCONF = 0x01;
 15318  014D3C  0E01               	movlw	1
 15319  014D3E  6FB2               	movwf	178,b	;volatile
 15320                           
 15321                           ;pin_manager.c: 110: ODCONA = 0x00;
 15322  014D40  0E00               	movlw	0
 15323  014D42  6F90               	movwf	144,b	;volatile
 15324                           
 15325                           ;pin_manager.c: 111: ODCONG = 0x00;
 15326  014D44  0E00               	movlw	0
 15327  014D46  6FBA               	movwf	186,b	;volatile
 15328                           
 15329                           ;pin_manager.c: 112: ODCONB = 0x00;
 15330  014D48  0E00               	movlw	0
 15331  014D4A  6F98               	movwf	152,b	;volatile
 15332                           
 15333                           ;pin_manager.c: 113: ODCONH = 0x00;
 15334  014D4C  0E00               	movlw	0
 15335  014D4E  6FBF               	movwf	191,b	;volatile
 15336                           
 15337                           ;pin_manager.c: 114: ODCONC = 0x00;
 15338  014D50  0E00               	movlw	0
 15339  014D52  6FA0               	movwf	160,b	;volatile
 15340                           
 15341                           ;pin_manager.c: 115: ODCOND = 0x00;
 15342  014D54  0E00               	movlw	0
 15343  014D56  6FA5               	movwf	165,b	;volatile
 15344                           
 15345                           ; BSR set to: 14
 15346                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 15347  014D58  698F               	setf	143,b	;volatile
 15348                           
 15349                           ; BSR set to: 14
 15350                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 15351  014D5A  6997               	setf	151,b	;volatile
 15352                           
 15353                           ; BSR set to: 14
 15354                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 15355  014D5C  699F               	setf	159,b	;volatile
 15356                           
 15357                           ; BSR set to: 14
 15358                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 15359  014D5E  69A4               	setf	164,b	;volatile
 15360                           
 15361                           ; BSR set to: 14
 15362                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 15363  014D60  69AC               	setf	172,b	;volatile
 15364                           
 15365                           ; BSR set to: 14
 15366                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 15367  014D62  69B1               	setf	177,b	;volatile
 15368                           
 15369                           ; BSR set to: 14
 15370                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 15371  014D64  69B9               	setf	185,b	;volatile
 15372                           
 15373                           ; BSR set to: 14
 15374                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 15375  014D66  69BE               	setf	190,b	;volatile
 15376                           
 15377                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 15378  014D68  0E0E               	movlw	14
 15379  014D6A  6F89               	movwf	137,b	;volatile
 15380                           
 15381                           ;pin_manager.c: 137: RX2PPS = 0x36;
 15382  014D6C  0E36               	movlw	54
 15383  014D6E  6F11               	movwf	17,b	;volatile
 15384                           
 15385                           ; BSR set to: 14
 15386  014D70  0012               	return		;funcret
 15387  014D72                     __end_of_PIN_MANAGER_Initialize:
 15388                           	opt stack 0
 15389                           tblptru	equ	0xFF8
 15390                           tblptrh	equ	0xFF7
 15391                           tblptrl	equ	0xFF6
 15392                           tablat	equ	0xFF5
 15393                           prodh	equ	0xFF4
 15394                           prodl	equ	0xFF3
 15395                           intcon	equ	0xFF2
 15396                           postinc0	equ	0xFEE
 15397                           wreg	equ	0xFE8
 15398                           indf1	equ	0xFE7
 15399                           postdec1	equ	0xFE5
 15400                           fsr1h	equ	0xFE2
 15401                           fsr1l	equ	0xFE1
 15402                           indf2	equ	0xFDF
 15403                           postinc2	equ	0xFDE
 15404                           postdec2	equ	0xFDD
 15405                           fsr2h	equ	0xFDA
 15406                           fsr2l	equ	0xFD9
 15407                           status	equ	0xFD8
 15408                           
 15409 ;; *************** function _OSCILLATOR_Initialize *****************
 15410 ;; Defined at:
 15411 ;;		line 64 in file "mcc_generated_files/mcc.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;		None
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;		None
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  1    wreg      void 
 15418 ;; Registers used:
 15419 ;;		wreg, status,2
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15429 ;;Total ram usage:        0 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:   14
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_SYSTEM_Initialize
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439                           	psect	text49
 15440  015E52                     __ptext49:
 15441                           	opt stack 0
 15442  015E52                     _OSCILLATOR_Initialize:
 15443                           	opt stack 15
 15444                           
 15445                           ;mcc.c: 67: OSCCON1 = 0x20;
 15446                           
 15447                           ; BSR set to: 14
 15448                           ;incstack = 0
 15449  015E52  0E20               	movlw	32
 15450  015E54  010E               	movlb	14	; () banked
 15451  015E56  6F43               	movwf	67,b	;volatile
 15452                           
 15453                           ;mcc.c: 69: OSCCON3 = 0x00;
 15454  015E58  0E00               	movlw	0
 15455  015E5A  6F45               	movwf	69,b	;volatile
 15456                           
 15457                           ;mcc.c: 71: OSCEN = 0x00;
 15458  015E5C  0E00               	movlw	0
 15459  015E5E  6F47               	movwf	71,b	;volatile
 15460                           
 15461                           ;mcc.c: 73: OSCFRQ = 0x02;
 15462  015E60  0E02               	movlw	2
 15463  015E62  6F49               	movwf	73,b	;volatile
 15464                           
 15465                           ;mcc.c: 75: OSCTUNE = 0x00;
 15466  015E64  0E00               	movlw	0
 15467  015E66  6F48               	movwf	72,b	;volatile
 15468  015E68                     
 15469                           ; BSR set to: 14
 15470                           
 15471                           ; BSR set to: 14
 15472                           ;mcc.c: 78: {
 15473  015E68  B146               	btfsc	70,0,b	;volatile
 15474  015E6A  0012               	return	
 15475  015E6C  D7FD               	goto	l55
 15476  015E6E                     __end_of_OSCILLATOR_Initialize:
 15477                           	opt stack 0
 15478                           tblptru	equ	0xFF8
 15479                           tblptrh	equ	0xFF7
 15480                           tblptrl	equ	0xFF6
 15481                           tablat	equ	0xFF5
 15482                           prodh	equ	0xFF4
 15483                           prodl	equ	0xFF3
 15484                           intcon	equ	0xFF2
 15485                           postinc0	equ	0xFEE
 15486                           wreg	equ	0xFE8
 15487                           indf1	equ	0xFE7
 15488                           postdec1	equ	0xFE5
 15489                           fsr1h	equ	0xFE2
 15490                           fsr1l	equ	0xFE1
 15491                           indf2	equ	0xFDF
 15492                           postinc2	equ	0xFDE
 15493                           postdec2	equ	0xFDD
 15494                           fsr2h	equ	0xFDA
 15495                           fsr2l	equ	0xFD9
 15496                           status	equ	0xFD8
 15497                           
 15498 ;; *************** function _INTERRUPT_Initialize *****************
 15499 ;; Defined at:
 15500 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;		None
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		None
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15518 ;;Total ram usage:        0 bytes
 15519 ;; Hardware stack levels used:    1
 15520 ;; Hardware stack levels required when called:   14
 15521 ;; This function calls:
 15522 ;;		Nothing
 15523 ;; This function is called by:
 15524 ;;		_SYSTEM_Initialize
 15525 ;; This function uses a non-reentrant model
 15526 ;;
 15527                           
 15528                           	psect	text50
 15529  015EB0                     __ptext50:
 15530                           	opt stack 0
 15531  015EB0                     _INTERRUPT_Initialize:
 15532                           	opt stack 15
 15533                           
 15534                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 15535                           
 15536                           ; BSR set to: 14
 15537                           ;incstack = 0
 15538  015EB0  8AF2               	bsf	intcon,5,c	;volatile
 15539                           
 15540                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 15541  015EB2  010E               	movlb	14	; () banked
 15542  015EB4  8F22               	bsf	34,7,b	;volatile
 15543                           
 15544                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 15545  015EB6  8924               	bsf	36,4,b	;volatile
 15546                           
 15547                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 15548  015EB8  8120               	bsf	32,0,b	;volatile
 15549                           
 15550                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 15551  015EBA  9B24               	bcf	36,5,b	;volatile
 15552                           
 15553                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 15554  015EBC  9D22               	bcf	34,6,b	;volatile
 15555                           
 15556                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 15557  015EBE  9D24               	bcf	36,6,b	;volatile
 15558                           
 15559                           ; BSR set to: 14
 15560  015EC0  0012               	return		;funcret
 15561  015EC2                     __end_of_INTERRUPT_Initialize:
 15562                           	opt stack 0
 15563                           tblptru	equ	0xFF8
 15564                           tblptrh	equ	0xFF7
 15565                           tblptrl	equ	0xFF6
 15566                           tablat	equ	0xFF5
 15567                           prodh	equ	0xFF4
 15568                           prodl	equ	0xFF3
 15569                           intcon	equ	0xFF2
 15570                           postinc0	equ	0xFEE
 15571                           wreg	equ	0xFE8
 15572                           indf1	equ	0xFE7
 15573                           postdec1	equ	0xFE5
 15574                           fsr1h	equ	0xFE2
 15575                           fsr1l	equ	0xFE1
 15576                           indf2	equ	0xFDF
 15577                           postinc2	equ	0xFDE
 15578                           postdec2	equ	0xFDD
 15579                           fsr2h	equ	0xFDA
 15580                           fsr2l	equ	0xFD9
 15581                           status	equ	0xFD8
 15582                           
 15583 ;; *************** function _FVR_Initialize *****************
 15584 ;; Defined at:
 15585 ;;		line 58 in file "mcc_generated_files/fvr.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;		None
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  1    wreg      void 
 15592 ;; Registers used:
 15593 ;;		wreg, status,2
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15603 ;;Total ram usage:        0 bytes
 15604 ;; Hardware stack levels used:    1
 15605 ;; Hardware stack levels required when called:   14
 15606 ;; This function calls:
 15607 ;;		Nothing
 15608 ;; This function is called by:
 15609 ;;		_SYSTEM_Initialize
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           	psect	text51
 15614  015F78                     __ptext51:
 15615                           	opt stack 0
 15616  015F78                     _FVR_Initialize:
 15617                           	opt stack 15
 15618                           
 15619                           ;fvr.c: 61: FVRCON = 0xA6;
 15620                           
 15621                           ; BSR set to: 14
 15622                           ;incstack = 0
 15623  015F78  0EA6               	movlw	166
 15624  015F7A  010E               	movlb	14	; () banked
 15625  015F7C  6FC4               	movwf	196,b	;volatile
 15626                           
 15627                           ; BSR set to: 14
 15628  015F7E  0012               	return		;funcret
 15629  015F80                     __end_of_FVR_Initialize:
 15630                           	opt stack 0
 15631                           tblptru	equ	0xFF8
 15632                           tblptrh	equ	0xFF7
 15633                           tblptrl	equ	0xFF6
 15634                           tablat	equ	0xFF5
 15635                           prodh	equ	0xFF4
 15636                           prodl	equ	0xFF3
 15637                           intcon	equ	0xFF2
 15638                           postinc0	equ	0xFEE
 15639                           wreg	equ	0xFE8
 15640                           indf1	equ	0xFE7
 15641                           postdec1	equ	0xFE5
 15642                           fsr1h	equ	0xFE2
 15643                           fsr1l	equ	0xFE1
 15644                           indf2	equ	0xFDF
 15645                           postinc2	equ	0xFDE
 15646                           postdec2	equ	0xFDD
 15647                           fsr2h	equ	0xFDA
 15648                           fsr2l	equ	0xFD9
 15649                           status	equ	0xFD8
 15650                           
 15651 ;; *************** function _EUSART2_Initialize *****************
 15652 ;; Defined at:
 15653 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;		None
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;		None
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      void 
 15660 ;; Registers used:
 15661 ;;		wreg, status,2, status,0, cstack
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/0
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15671 ;;Total ram usage:        0 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; Hardware stack levels required when called:   15
 15674 ;; This function calls:
 15675 ;;		_EUSART2_SetRxInterruptHandler
 15676 ;;		_EUSART2_SetTxInterruptHandler
 15677 ;; This function is called by:
 15678 ;;		_SYSTEM_Initialize
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           	psect	text52
 15683  0154D4                     __ptext52:
 15684                           	opt stack 0
 15685  0154D4                     _EUSART2_Initialize:
 15686                           	opt stack 14
 15687                           
 15688                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 15689                           
 15690                           ; BSR set to: 14
 15691                           ;incstack = 0
 15692  0154D4  010E               	movlb	14	; () banked
 15693  0154D6  9F2C               	bcf	44,7,b	;volatile
 15694                           
 15695                           ; BSR set to: 14
 15696                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 15697  0154D8  0E26               	movlw	low _EUSART2_Receive_ISR
 15698  0154DA  0101               	movlb	1	; () banked
 15699  0154DC  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 15700  0154DE  0E4C               	movlw	high _EUSART2_Receive_ISR
 15701  0154E0  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 15702  0154E2  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 15703  0154E4  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 15704  0154E6  EC9C  F0AF         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 15705                           
 15706                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 15707  0154EA  010E               	movlb	14	; () banked
 15708  0154EC  9D2C               	bcf	44,6,b	;volatile
 15709                           
 15710                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 15711  0154EE  0E6C               	movlw	low _EUSART2_Transmit_ISR
 15712  0154F0  0101               	movlb	1	; () banked
 15713  0154F2  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 15714  0154F4  0E5B               	movlw	high _EUSART2_Transmit_ISR
 15715  0154F6  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 15716  0154F8  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 15717  0154FA  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 15718  0154FC  EC95  F0AF         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 15719                           
 15720                           ;eusart2.c: 87: BAUD2CON = 0x08;
 15721  015500  0E08               	movlw	8
 15722  015502  010E               	movlb	14	; () banked
 15723  015504  6FF7               	movwf	247,b	;volatile
 15724                           
 15725                           ; BSR set to: 14
 15726                           ;eusart2.c: 90: RC2STA = 0x90;
 15727  015506  0E90               	movlw	144
 15728  015508  6FF5               	movwf	245,b	;volatile
 15729                           
 15730                           ; BSR set to: 14
 15731                           ;eusart2.c: 93: TX2STA = 0x24;
 15732  01550A  0E24               	movlw	36
 15733  01550C  6FF6               	movwf	246,b	;volatile
 15734                           
 15735                           ; BSR set to: 14
 15736                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 15737  01550E  0E8A               	movlw	138
 15738  015510  6FF3               	movwf	243,b	;volatile
 15739                           
 15740                           ; BSR set to: 14
 15741                           ;eusart2.c: 99: SP2BRGH = 0x00;
 15742  015512  0E00               	movlw	0
 15743  015514  6FF4               	movwf	244,b	;volatile
 15744                           
 15745                           ; BSR set to: 14
 15746                           ;eusart2.c: 103: eusart2TxHead = 0;
 15747  015516  0E00               	movlw	0
 15748  015518  0101               	movlb	1	; () banked
 15749  01551A  6FDC               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15750                           
 15751                           ; BSR set to: 1
 15752                           ;eusart2.c: 104: eusart2TxTail = 0;
 15753  01551C  0E00               	movlw	0
 15754  01551E  6FDB               	movwf	_eusart2TxTail& (0+255),b	;volatile
 15755                           
 15756                           ; BSR set to: 1
 15757                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 15758  015520  0E40               	movlw	64
 15759  015522  6FDA               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 15760                           
 15761                           ; BSR set to: 1
 15762                           ;eusart2.c: 107: eusart2RxHead = 0;
 15763  015524  0E00               	movlw	0
 15764  015526  0100               	movlb	0	; () banked
 15765  015528  6FDE               	movwf	_eusart2RxHead& (0+255),b	;volatile
 15766                           
 15767                           ; BSR set to: 0
 15768                           ;eusart2.c: 108: eusart2RxTail = 0;
 15769  01552A  0E00               	movlw	0
 15770  01552C  0101               	movlb	1	; () banked
 15771  01552E  6FD9               	movwf	_eusart2RxTail& (0+255),b	;volatile
 15772                           
 15773                           ; BSR set to: 1
 15774                           ;eusart2.c: 109: eusart2RxCount = 0;
 15775  015530  0E00               	movlw	0
 15776  015532  6FD8               	movwf	_eusart2RxCount& (0+255),b	;volatile
 15777                           
 15778                           ; BSR set to: 1
 15779                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 15780  015534  010E               	movlb	14	; () banked
 15781  015536  8F2C               	bsf	44,7,b	;volatile
 15782                           
 15783                           ; BSR set to: 14
 15784  015538  0012               	return		;funcret
 15785  01553A                     __end_of_EUSART2_Initialize:
 15786                           	opt stack 0
 15787                           tblptru	equ	0xFF8
 15788                           tblptrh	equ	0xFF7
 15789                           tblptrl	equ	0xFF6
 15790                           tablat	equ	0xFF5
 15791                           prodh	equ	0xFF4
 15792                           prodl	equ	0xFF3
 15793                           intcon	equ	0xFF2
 15794                           postinc0	equ	0xFEE
 15795                           wreg	equ	0xFE8
 15796                           indf1	equ	0xFE7
 15797                           postdec1	equ	0xFE5
 15798                           fsr1h	equ	0xFE2
 15799                           fsr1l	equ	0xFE1
 15800                           indf2	equ	0xFDF
 15801                           postinc2	equ	0xFDE
 15802                           postdec2	equ	0xFDD
 15803                           fsr2h	equ	0xFDA
 15804                           fsr2l	equ	0xFD9
 15805                           status	equ	0xFD8
 15806                           
 15807 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 15808 ;; Defined at:
 15809 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 15812 ;;		 -> EUSART2_Transmit_ISR(1), 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  1    wreg      void 
 15817 ;; Registers used:
 15818 ;;		wreg, status,2, status,0
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15824 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15827 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15828 ;;Total ram usage:        3 bytes
 15829 ;; Hardware stack levels used:    1
 15830 ;; Hardware stack levels required when called:   14
 15831 ;; This function calls:
 15832 ;;		Nothing
 15833 ;; This function is called by:
 15834 ;;		_EUSART2_Initialize
 15835 ;; This function uses a non-reentrant model
 15836 ;;
 15837                           
 15838                           	psect	text53
 15839  015F2A                     __ptext53:
 15840                           	opt stack 0
 15841  015F2A                     _EUSART2_SetTxInterruptHandler:
 15842                           	opt stack 14
 15843                           
 15844                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 15845                           
 15846                           ; BSR set to: 14
 15847                           ;incstack = 0
 15848  015F2A  C117  F1D1         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 15849  015F2E  C118  F1D2         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 15850  015F32  C119  F1D3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 15851  015F36  0012               	return		;funcret
 15852  015F38                     __end_of_EUSART2_SetTxInterruptHandler:
 15853                           	opt stack 0
 15854                           tblptru	equ	0xFF8
 15855                           tblptrh	equ	0xFF7
 15856                           tblptrl	equ	0xFF6
 15857                           tablat	equ	0xFF5
 15858                           prodh	equ	0xFF4
 15859                           prodl	equ	0xFF3
 15860                           intcon	equ	0xFF2
 15861                           postinc0	equ	0xFEE
 15862                           wreg	equ	0xFE8
 15863                           indf1	equ	0xFE7
 15864                           postdec1	equ	0xFE5
 15865                           fsr1h	equ	0xFE2
 15866                           fsr1l	equ	0xFE1
 15867                           indf2	equ	0xFDF
 15868                           postinc2	equ	0xFDE
 15869                           postdec2	equ	0xFDD
 15870                           fsr2h	equ	0xFDA
 15871                           fsr2l	equ	0xFD9
 15872                           status	equ	0xFD8
 15873                           
 15874 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 15875 ;; Defined at:
 15876 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 15879 ;;		 -> EUSART2_Receive_ISR(1), 
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;		None
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      void 
 15884 ;; Registers used:
 15885 ;;		wreg, status,2, status,0
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15891 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15894 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15895 ;;Total ram usage:        3 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; Hardware stack levels required when called:   14
 15898 ;; This function calls:
 15899 ;;		Nothing
 15900 ;; This function is called by:
 15901 ;;		_EUSART2_Initialize
 15902 ;; This function uses a non-reentrant model
 15903 ;;
 15904                           
 15905                           	psect	text54
 15906  015F38                     __ptext54:
 15907                           	opt stack 0
 15908  015F38                     _EUSART2_SetRxInterruptHandler:
 15909                           	opt stack 14
 15910                           
 15911                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 15912                           
 15913                           ;incstack = 0
 15914  015F38  C117  F0D4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 15915  015F3C  C118  F0D5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 15916  015F40  C119  F0D6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 15917  015F44  0012               	return		;funcret
 15918  015F46                     __end_of_EUSART2_SetRxInterruptHandler:
 15919                           	opt stack 0
 15920                           tblptru	equ	0xFF8
 15921                           tblptrh	equ	0xFF7
 15922                           tblptrl	equ	0xFF6
 15923                           tablat	equ	0xFF5
 15924                           prodh	equ	0xFF4
 15925                           prodl	equ	0xFF3
 15926                           intcon	equ	0xFF2
 15927                           postinc0	equ	0xFEE
 15928                           wreg	equ	0xFE8
 15929                           indf1	equ	0xFE7
 15930                           postdec1	equ	0xFE5
 15931                           fsr1h	equ	0xFE2
 15932                           fsr1l	equ	0xFE1
 15933                           indf2	equ	0xFDF
 15934                           postinc2	equ	0xFDE
 15935                           postdec2	equ	0xFDD
 15936                           fsr2h	equ	0xFDA
 15937                           fsr2l	equ	0xFD9
 15938                           status	equ	0xFD8
 15939                           
 15940 ;; *************** function _ADCC_Initialize *****************
 15941 ;; Defined at:
 15942 ;;		line 63 in file "mcc_generated_files/adcc.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;		None
 15945 ;; Auto vars:     Size  Location     Type
 15946 ;;		None
 15947 ;; Return value:  Size  Location     Type
 15948 ;;                  1    wreg      void 
 15949 ;; Registers used:
 15950 ;;		wreg, status,2, status,0, cstack
 15951 ;; Tracked objects:
 15952 ;;		On entry : 0/0
 15953 ;;		On exit  : 0/0
 15954 ;;		Unchanged: 0/0
 15955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15960 ;;Total ram usage:        0 bytes
 15961 ;; Hardware stack levels used:    1
 15962 ;; Hardware stack levels required when called:   15
 15963 ;; This function calls:
 15964 ;;		_ADCC_SetADIInterruptHandler
 15965 ;; This function is called by:
 15966 ;;		_SYSTEM_Initialize
 15967 ;; This function uses a non-reentrant model
 15968 ;;
 15969                           
 15970                           	psect	text55
 15971  0155A0                     __ptext55:
 15972                           	opt stack 0
 15973  0155A0                     _ADCC_Initialize:
 15974                           	opt stack 14
 15975                           
 15976                           ;adcc.c: 67: ADLTHL = 0x00;
 15977                           
 15978                           ;incstack = 0
 15979  0155A0  0E00               	movlw	0
 15980  0155A2  6E6A               	movwf	3946,c	;volatile
 15981                           
 15982                           ;adcc.c: 69: ADLTHH = 0x00;
 15983  0155A4  0E00               	movlw	0
 15984  0155A6  6E6B               	movwf	3947,c	;volatile
 15985                           
 15986                           ;adcc.c: 71: ADUTHL = 0x00;
 15987  0155A8  0E00               	movlw	0
 15988  0155AA  6E6C               	movwf	3948,c	;volatile
 15989                           
 15990                           ;adcc.c: 73: ADUTHH = 0x00;
 15991  0155AC  0E00               	movlw	0
 15992  0155AE  6E6D               	movwf	3949,c	;volatile
 15993                           
 15994                           ;adcc.c: 75: ADSTPTL = 0x00;
 15995  0155B0  0E00               	movlw	0
 15996  0155B2  6E68               	movwf	3944,c	;volatile
 15997                           
 15998                           ;adcc.c: 77: ADSTPTH = 0x00;
 15999  0155B4  0E00               	movlw	0
 16000  0155B6  6E69               	movwf	3945,c	;volatile
 16001                           
 16002                           ;adcc.c: 79: ADRPT = 0x00;
 16003  0155B8  0E00               	movlw	0
 16004  0155BA  6E66               	movwf	3942,c	;volatile
 16005                           
 16006                           ;adcc.c: 81: ADPCH = 0x00;
 16007  0155BC  0E00               	movlw	0
 16008  0155BE  010F               	movlb	15	; () banked
 16009  0155C0  6F5F               	movwf	95,b	;volatile
 16010                           
 16011                           ;adcc.c: 83: ADCAP = 0x00;
 16012  0155C2  0E00               	movlw	0
 16013  0155C4  6F5D               	movwf	93,b	;volatile
 16014                           
 16015                           ;adcc.c: 85: ADCON1 = 0x00;
 16016  0155C6  0E00               	movlw	0
 16017  0155C8  6F59               	movwf	89,b	;volatile
 16018                           
 16019                           ;adcc.c: 87: ADCON2 = 0x04;
 16020  0155CA  0E04               	movlw	4
 16021  0155CC  6F5A               	movwf	90,b	;volatile
 16022                           
 16023                           ;adcc.c: 89: ADCON3 = 0x00;
 16024  0155CE  0E00               	movlw	0
 16025  0155D0  6F5B               	movwf	91,b	;volatile
 16026                           
 16027                           ;adcc.c: 91: ADSTAT = 0x00;
 16028  0155D2  0E00               	movlw	0
 16029  0155D4  6E65               	movwf	3941,c	;volatile
 16030                           
 16031                           ;adcc.c: 93: ADREF = 0x12;
 16032  0155D6  0E12               	movlw	18
 16033  0155D8  6F58               	movwf	88,b	;volatile
 16034                           
 16035                           ;adcc.c: 95: ADACT = 0x00;
 16036  0155DA  0E00               	movlw	0
 16037  0155DC  6F56               	movwf	86,b	;volatile
 16038                           
 16039                           ;adcc.c: 97: ADCLK = 0x00;
 16040  0155DE  0E00               	movlw	0
 16041  0155E0  6F57               	movwf	87,b	;volatile
 16042                           
 16043                           ;adcc.c: 99: ADCON0 = 0x94;
 16044  0155E2  0E94               	movlw	148
 16045  0155E4  6E60               	movwf	3936,c	;volatile
 16046                           
 16047                           ;adcc.c: 101: ADACQ = 0x00;
 16048  0155E6  0E00               	movlw	0
 16049  0155E8  6F5C               	movwf	92,b	;volatile
 16050                           
 16051                           ; BSR set to: 15
 16052                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 16053  0155EA  010E               	movlb	14	; () banked
 16054  0155EC  9134               	bcf	52,0,b	;volatile
 16055                           
 16056                           ; BSR set to: 14
 16057                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 16058  0155EE  812A               	bsf	42,0,b	;volatile
 16059                           
 16060                           ; BSR set to: 14
 16061                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 16062  0155F0  0E8C               	movlw	low _ADCC_DefaultInterruptHandler
 16063  0155F2  0101               	movlb	1	; () banked
 16064  0155F4  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 16065  0155F6  0E5F               	movlw	high _ADCC_DefaultInterruptHandler
 16066  0155F8  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 16067  0155FA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16068  0155FC  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 16069  0155FE  ECA3  F0AF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16070  015602  0012               	return		;funcret
 16071  015604                     __end_of_ADCC_Initialize:
 16072                           	opt stack 0
 16073                           tblptru	equ	0xFF8
 16074                           tblptrh	equ	0xFF7
 16075                           tblptrl	equ	0xFF6
 16076                           tablat	equ	0xFF5
 16077                           prodh	equ	0xFF4
 16078                           prodl	equ	0xFF3
 16079                           intcon	equ	0xFF2
 16080                           postinc0	equ	0xFEE
 16081                           wreg	equ	0xFE8
 16082                           indf1	equ	0xFE7
 16083                           postdec1	equ	0xFE5
 16084                           fsr1h	equ	0xFE2
 16085                           fsr1l	equ	0xFE1
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           fsr2h	equ	0xFDA
 16090                           fsr2l	equ	0xFD9
 16091                           status	equ	0xFD8
 16092                           
 16093 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16094 ;; Defined at:
 16095 ;;		line 306 in file "mcc_generated_files/adcc.c"
 16096 ;; Parameters:    Size  Location     Type
 16097 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16098 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 16099 ;; Auto vars:     Size  Location     Type
 16100 ;;		None
 16101 ;; Return value:  Size  Location     Type
 16102 ;;                  1    wreg      void 
 16103 ;; Registers used:
 16104 ;;		wreg, status,2, status,0
 16105 ;; Tracked objects:
 16106 ;;		On entry : 0/0
 16107 ;;		On exit  : 0/0
 16108 ;;		Unchanged: 0/0
 16109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16110 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16113 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16114 ;;Total ram usage:        3 bytes
 16115 ;; Hardware stack levels used:    1
 16116 ;; Hardware stack levels required when called:   14
 16117 ;; This function calls:
 16118 ;;		Nothing
 16119 ;; This function is called by:
 16120 ;;		_ADCC_Initialize
 16121 ;;		_main
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text56
 16126  015F46                     __ptext56:
 16127                           	opt stack 0
 16128  015F46                     _ADCC_SetADIInterruptHandler:
 16129                           	opt stack 14
 16130                           
 16131                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 16132                           
 16133                           ;incstack = 0
 16134  015F46  C117  F0D1         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 16135  015F4A  C118  F0D2         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 16136  015F4E  C119  F0D3         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 16137  015F52  0012               	return		;funcret
 16138  015F54                     __end_of_ADCC_SetADIInterruptHandler:
 16139                           	opt stack 0
 16140                           tblptru	equ	0xFF8
 16141                           tblptrh	equ	0xFF7
 16142                           tblptrl	equ	0xFF6
 16143                           tablat	equ	0xFF5
 16144                           prodh	equ	0xFF4
 16145                           prodl	equ	0xFF3
 16146                           intcon	equ	0xFF2
 16147                           postinc0	equ	0xFEE
 16148                           wreg	equ	0xFE8
 16149                           indf1	equ	0xFE7
 16150                           postdec1	equ	0xFE5
 16151                           fsr1h	equ	0xFE2
 16152                           fsr1l	equ	0xFE1
 16153                           indf2	equ	0xFDF
 16154                           postinc2	equ	0xFDE
 16155                           postdec2	equ	0xFDD
 16156                           fsr2h	equ	0xFDA
 16157                           fsr2l	equ	0xFD9
 16158                           status	equ	0xFD8
 16159                           
 16160 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 16161 ;; Defined at:
 16162 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;		None
 16165 ;; Auto vars:     Size  Location     Type
 16166 ;;		None
 16167 ;; Return value:  Size  Location     Type
 16168 ;;                  1    wreg      void 
 16169 ;; Registers used:
 16170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16171 ;; Tracked objects:
 16172 ;;		On entry : 0/0
 16173 ;;		On exit  : 0/0
 16174 ;;		Unchanged: 0/0
 16175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16178 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16179 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16180 ;;Total ram usage:       21 bytes
 16181 ;; Hardware stack levels used:    1
 16182 ;; Hardware stack levels required when called:   13
 16183 ;; This function calls:
 16184 ;;		Absolute function
 16185 ;;		_EUSART2_Transmit_ISR
 16186 ;;		_TMR6_ISR
 16187 ;;		_TMR7_ISR
 16188 ;; This function is called by:
 16189 ;;		Interrupt level 1
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	intcodelo
 16194  000018                     __pintcodelo:
 16195                           	opt stack 0
 16196  000018                     _INTERRUPT_InterruptManagerLow:
 16197                           	opt stack 9
 16198                           
 16199                           ;incstack = 0
 16200  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16201  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 16202  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 16203  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 16204  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 16205  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 16206  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 16207  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 16208  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 16209  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 16210  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 16211  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 16212  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 16213  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 16214  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 16215  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 16216  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 16217  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 16218  00005E  C05E  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 16219  000062  C05F  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 16220  000066  C060  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 16221  00006A  C061  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 16222                           
 16223                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 16224  00006E  010E               	movlb	14	; () banked
 16225  000070  BB2E               	btfsc	46,5,b	;volatile
 16226                           
 16227                           ; BSR set to: 14
 16228  000072  AB38               	btfss	56,5,b	;volatile
 16229  000074  D003               	goto	i1l213
 16230                           
 16231                           ; BSR set to: 14
 16232                           ;interrupt_manager.c: 105: {
 16233                           ;interrupt_manager.c: 106: TMR6_ISR();
 16234  000076  EC76  F0AE         	call	_TMR6_ISR	;wreg free
 16235                           
 16236                           ;interrupt_manager.c: 107: }
 16237  00007A  D015               	goto	i1l217
 16238  00007C                     i1l213:
 16239                           
 16240                           ; BSR set to: 14
 16241                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 16242  00007C  BD2C               	btfsc	44,6,b	;volatile
 16243                           
 16244                           ; BSR set to: 14
 16245  00007E  AD36               	btfss	54,6,b	;volatile
 16246  000080  D00D               	goto	i1l215
 16247                           
 16248                           ; BSR set to: 14
 16249                           ;interrupt_manager.c: 109: {
 16250                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 16251  000082  D801               	call	i1u1581_28
 16252  000084  D010               	goto	i1l217
 16253  000086                     i1u1581_28:
 16254  000086  0005               	push	
 16255  000088  6EFA               	movwf	pclath,c
 16256  00008A  0101               	movlb	1	; () banked
 16257  00008C  51D1               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 16258  00008E  6EFD               	movwf	tosl,c
 16259  000090  51D2               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 16260  000092  6EFE               	movwf	tosh,c
 16261  000094  51D3               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 16262  000096  6EFF               	movwf	tosu,c
 16263  000098  50FA               	movf	pclath,w,c
 16264  00009A  0012               	return		;indir
 16265  00009C                     i1l215:
 16266                           
 16267                           ; BSR set to: 14
 16268                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 16269  00009C  BD2E               	btfsc	46,6,b	;volatile
 16270                           
 16271                           ; BSR set to: 14
 16272  00009E  AD38               	btfss	56,6,b	;volatile
 16273  0000A0  D002               	goto	i1l217
 16274                           
 16275                           ; BSR set to: 14
 16276                           ;interrupt_manager.c: 113: {
 16277                           ;interrupt_manager.c: 114: TMR7_ISR();
 16278  0000A2  ECD1  F0AD         	call	_TMR7_ISR	;wreg free
 16279  0000A6                     i1l217:
 16280                           
 16281                           ;interrupt_manager.c: 116: else
 16282                           ;interrupt_manager.c: 117: {
 16283  0000A6  C116  F061         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 16284  0000AA  C115  F060         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 16285  0000AE  C114  F05F         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 16286  0000B2  C113  F05E         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 16287  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 16288  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 16289  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 16290  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 16291  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 16292  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 16293  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 16294  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 16295  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 16296  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 16297  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 16298  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 16299  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 16300  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 16301  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 16302  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 16303  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 16304  0000FA  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16305  0000FC  0010               	retfie	
 16306  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 16307                           	opt stack 0
 16308                           tosu	equ	0xFFF
 16309                           tosh	equ	0xFFE
 16310                           tosl	equ	0xFFD
 16311                           pclatu	equ	0xFFB
 16312                           pclath	equ	0xFFA
 16313                           tblptru	equ	0xFF8
 16314                           tblptrh	equ	0xFF7
 16315                           tblptrl	equ	0xFF6
 16316                           tablat	equ	0xFF5
 16317                           prodh	equ	0xFF4
 16318                           prodl	equ	0xFF3
 16319                           intcon	equ	0xFF2
 16320                           postinc0	equ	0xFEE
 16321                           fsr0h	equ	0xFEA
 16322                           fsr0l	equ	0xFE9
 16323                           wreg	equ	0xFE8
 16324                           indf1	equ	0xFE7
 16325                           postdec1	equ	0xFE5
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           bsr	equ	0xFE0
 16329                           indf2	equ	0xFDF
 16330                           postinc2	equ	0xFDE
 16331                           postdec2	equ	0xFDD
 16332                           fsr2h	equ	0xFDA
 16333                           fsr2l	equ	0xFD9
 16334                           status	equ	0xFD8
 16335                           
 16336 ;; *************** function _TMR7_ISR *****************
 16337 ;; Defined at:
 16338 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;		None
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;		None
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      void 
 16345 ;; Registers used:
 16346 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16356 ;;Total ram usage:        0 bytes
 16357 ;; Hardware stack levels used:    1
 16358 ;; Hardware stack levels required when called:   12
 16359 ;; This function calls:
 16360 ;;		Absolute function
 16361 ;;		_TMR7_DefaultInterruptHandler
 16362 ;;		_TMR7_WriteTimer
 16363 ;;		_acquisitionTimerCallback
 16364 ;; This function is called by:
 16365 ;;		_INTERRUPT_InterruptManagerLow
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           	psect	text58
 16370  015BA2                     __ptext58:
 16371                           	opt stack 0
 16372  015BA2                     _TMR7_ISR:
 16373                           	opt stack 9
 16374                           
 16375                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 16376                           
 16377                           ;incstack = 0
 16378  015BA2  010E               	movlb	14	; () banked
 16379  015BA4  9D38               	bcf	56,6,b	;volatile
 16380                           
 16381                           ; BSR set to: 14
 16382                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 16383  015BA6  C1D6  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 16384  015BAA  C1D7  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 16385  015BAE  ECB1  F0AE         	call	_TMR7_WriteTimer	;wreg free
 16386                           
 16387                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 16388  015BB2  0101               	movlb	1	; () banked
 16389  015BB4  51CB               	movf	_TMR7_InterruptHandler& (0+255),w,b
 16390  015BB6  11CC               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 16391  015BB8  11CD               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 16392  015BBA  B4D8               	btfsc	status,2,c
 16393  015BBC  0012               	return	
 16394                           
 16395                           ; BSR set to: 1
 16396                           ;tmr7.c: 172: {
 16397                           ;tmr7.c: 173: TMR7_InterruptHandler();
 16398  015BBE  D801               	call	i1u1563_28
 16399  015BC0  0012               	return	
 16400  015BC2                     i1u1563_28:
 16401  015BC2  0005               	push	
 16402  015BC4  6EFA               	movwf	pclath,c
 16403  015BC6  51CB               	movf	_TMR7_InterruptHandler& (0+255),w,b
 16404  015BC8  6EFD               	movwf	tosl,c
 16405  015BCA  51CC               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 16406  015BCC  6EFE               	movwf	tosh,c
 16407  015BCE  51CD               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 16408  015BD0  6EFF               	movwf	tosu,c
 16409  015BD2  50FA               	movf	pclath,w,c
 16410  015BD4  0012               	return		;indir
 16411  015BD6                     __end_of_TMR7_ISR:
 16412                           	opt stack 0
 16413                           tosu	equ	0xFFF
 16414                           tosh	equ	0xFFE
 16415                           tosl	equ	0xFFD
 16416                           pclatu	equ	0xFFB
 16417                           pclath	equ	0xFFA
 16418                           tblptru	equ	0xFF8
 16419                           tblptrh	equ	0xFF7
 16420                           tblptrl	equ	0xFF6
 16421                           tablat	equ	0xFF5
 16422                           prodh	equ	0xFF4
 16423                           prodl	equ	0xFF3
 16424                           intcon	equ	0xFF2
 16425                           postinc0	equ	0xFEE
 16426                           fsr0h	equ	0xFEA
 16427                           fsr0l	equ	0xFE9
 16428                           wreg	equ	0xFE8
 16429                           indf1	equ	0xFE7
 16430                           postdec1	equ	0xFE5
 16431                           fsr1h	equ	0xFE2
 16432                           fsr1l	equ	0xFE1
 16433                           bsr	equ	0xFE0
 16434                           indf2	equ	0xFDF
 16435                           postinc2	equ	0xFDE
 16436                           postdec2	equ	0xFDD
 16437                           fsr2h	equ	0xFDA
 16438                           fsr2l	equ	0xFD9
 16439                           status	equ	0xFD8
 16440                           
 16441 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 16442 ;; Defined at:
 16443 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 16444 ;; Parameters:    Size  Location     Type
 16445 ;;		None
 16446 ;; Auto vars:     Size  Location     Type
 16447 ;;		None
 16448 ;; Return value:  Size  Location     Type
 16449 ;;                  1    wreg      void 
 16450 ;; Registers used:
 16451 ;;		None
 16452 ;; Tracked objects:
 16453 ;;		On entry : 0/0
 16454 ;;		On exit  : 0/0
 16455 ;;		Unchanged: 0/0
 16456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16461 ;;Total ram usage:        0 bytes
 16462 ;; Hardware stack levels used:    1
 16463 ;; Hardware stack levels required when called:   10
 16464 ;; This function calls:
 16465 ;;		Nothing
 16466 ;; This function is called by:
 16467 ;;		_TMR7_Initialize
 16468 ;;		_TMR7_ISR
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472                           	psect	text59
 16473  015F86                     __ptext59:
 16474                           	opt stack 0
 16475  015F86                     _TMR7_DefaultInterruptHandler:
 16476                           	opt stack 10
 16477                           
 16478                           ;incstack = 0
 16479  015F86  0012               	return		;funcret
 16480  015F88                     __end_of_TMR7_DefaultInterruptHandler:
 16481                           	opt stack 0
 16482                           tosu	equ	0xFFF
 16483                           tosh	equ	0xFFE
 16484                           tosl	equ	0xFFD
 16485                           pclatu	equ	0xFFB
 16486                           pclath	equ	0xFFA
 16487                           tblptru	equ	0xFF8
 16488                           tblptrh	equ	0xFF7
 16489                           tblptrl	equ	0xFF6
 16490                           tablat	equ	0xFF5
 16491                           prodh	equ	0xFF4
 16492                           prodl	equ	0xFF3
 16493                           intcon	equ	0xFF2
 16494                           postinc0	equ	0xFEE
 16495                           fsr0h	equ	0xFEA
 16496                           fsr0l	equ	0xFE9
 16497                           wreg	equ	0xFE8
 16498                           indf1	equ	0xFE7
 16499                           postdec1	equ	0xFE5
 16500                           fsr1h	equ	0xFE2
 16501                           fsr1l	equ	0xFE1
 16502                           bsr	equ	0xFE0
 16503                           indf2	equ	0xFDF
 16504                           postinc2	equ	0xFDE
 16505                           postdec2	equ	0xFDD
 16506                           fsr2h	equ	0xFDA
 16507                           fsr2l	equ	0xFD9
 16508                           status	equ	0xFD8
 16509                           
 16510 ;; *************** function _acquisitionTimerCallback *****************
 16511 ;; Defined at:
 16512 ;;		line 199 in file "main.c"
 16513 ;; Parameters:    Size  Location     Type
 16514 ;;		None
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;		None
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1    wreg      void 
 16519 ;; Registers used:
 16520 ;;		wreg, status,2, cstack
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16530 ;;Total ram usage:        0 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; Hardware stack levels required when called:   11
 16533 ;; This function calls:
 16534 ;;		_ADCC_IsConversionDone
 16535 ;;		_ADCC_StartConversion
 16536 ;; This function is called by:
 16537 ;;		_main
 16538 ;;		_TMR7_ISR
 16539 ;; This function uses a non-reentrant model
 16540 ;;
 16541                           
 16542                           	psect	text60
 16543  01581E                     __ptext60:
 16544                           	opt stack 0
 16545  01581E                     _acquisitionTimerCallback:
 16546                           	opt stack 9
 16547                           
 16548                           ;main.c: 202: ADCC_StartConversion(channel_FVR_buf1);
 16549                           
 16550                           ;incstack = 0
 16551  01581E  0E3F               	movlw	63
 16552  015820  ECAA  F0AF         	call	_ADCC_StartConversion
 16553  015824  ECB1  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16554  015828  0900               	iorlw	0
 16555  01582A  B4D8               	btfsc	status,2,c
 16556  01582C  D7FB               	goto	i1l757
 16557                           
 16558                           ;main.c: 208: ADCC_StartConversion(POS3P3_ADC);
 16559  01582E  0E22               	movlw	34
 16560  015830  ECAA  F0AF         	call	_ADCC_StartConversion
 16561  015834  ECB1  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16562  015838  0900               	iorlw	0
 16563  01583A  B4D8               	btfsc	status,2,c
 16564  01583C  D7FB               	goto	i1l760
 16565                           
 16566                           ;main.c: 214: ADCC_StartConversion(ISNS_ADC);
 16567  01583E  0E00               	movlw	0
 16568  015840  ECAA  F0AF         	call	_ADCC_StartConversion
 16569  015844  ECB1  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16570  015848  0900               	iorlw	0
 16571  01584A  B4D8               	btfsc	status,2,c
 16572  01584C  D7FB               	goto	i1l763
 16573                           
 16574                           ;main.c: 220: ADCC_StartConversion(POS12_ADC);
 16575  01584E  0E04               	movlw	4
 16576  015850  ECAA  F0AF         	call	_ADCC_StartConversion
 16577  015854  ECB1  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16578  015858  0900               	iorlw	0
 16579  01585A  B4D8               	btfsc	status,2,c
 16580  01585C  D7FB               	goto	i1l766
 16581                           
 16582                           ;main.c: 226: ADCC_StartConversion(channel_Temp);
 16583  01585E  0E3D               	movlw	61
 16584  015860  ECAA  F0AF         	call	_ADCC_StartConversion
 16585  015864  ECB1  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16586  015868  0900               	iorlw	0
 16587  01586A  A4D8               	btfss	status,2,c
 16588  01586C  0012               	return	
 16589  01586E  D7FA               	goto	i1l769
 16590  015870                     __end_of_acquisitionTimerCallback:
 16591                           	opt stack 0
 16592                           tosu	equ	0xFFF
 16593                           tosh	equ	0xFFE
 16594                           tosl	equ	0xFFD
 16595                           pclatu	equ	0xFFB
 16596                           pclath	equ	0xFFA
 16597                           tblptru	equ	0xFF8
 16598                           tblptrh	equ	0xFF7
 16599                           tblptrl	equ	0xFF6
 16600                           tablat	equ	0xFF5
 16601                           prodh	equ	0xFF4
 16602                           prodl	equ	0xFF3
 16603                           intcon	equ	0xFF2
 16604                           postinc0	equ	0xFEE
 16605                           fsr0h	equ	0xFEA
 16606                           fsr0l	equ	0xFE9
 16607                           wreg	equ	0xFE8
 16608                           indf1	equ	0xFE7
 16609                           postdec1	equ	0xFE5
 16610                           fsr1h	equ	0xFE2
 16611                           fsr1l	equ	0xFE1
 16612                           bsr	equ	0xFE0
 16613                           indf2	equ	0xFDF
 16614                           postinc2	equ	0xFDE
 16615                           postdec2	equ	0xFDD
 16616                           fsr2h	equ	0xFDA
 16617                           fsr2l	equ	0xFD9
 16618                           status	equ	0xFD8
 16619                           
 16620 ;; *************** function _ADCC_StartConversion *****************
 16621 ;; Defined at:
 16622 ;;		line 112 in file "mcc_generated_files/adcc.c"
 16623 ;; Parameters:    Size  Location     Type
 16624 ;;  channel         1    wreg     enum E17310
 16625 ;; Auto vars:     Size  Location     Type
 16626 ;;  channel         1    0[BANK1 ] enum E17310
 16627 ;; Return value:  Size  Location     Type
 16628 ;;                  1    wreg      void 
 16629 ;; Registers used:
 16630 ;;		wreg
 16631 ;; Tracked objects:
 16632 ;;		On entry : 0/0
 16633 ;;		On exit  : 0/0
 16634 ;;		Unchanged: 0/0
 16635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16637 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16639 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16640 ;;Total ram usage:        1 bytes
 16641 ;; Hardware stack levels used:    1
 16642 ;; Hardware stack levels required when called:   10
 16643 ;; This function calls:
 16644 ;;		Nothing
 16645 ;; This function is called by:
 16646 ;;		_acquisitionTimerCallback
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text61
 16651  015F54                     __ptext61:
 16652                           	opt stack 0
 16653  015F54                     _ADCC_StartConversion:
 16654                           	opt stack 9
 16655                           
 16656                           ;incstack = 0
 16657                           ;ADCC_StartConversion@channel stored from wreg
 16658  015F54  0101               	movlb	1	; () banked
 16659  015F56  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 16660                           
 16661                           ;adcc.c: 115: ADPCH = channel;
 16662  015F58  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 16663                           
 16664                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 16665  015F5C  8E60               	bsf	3936,7,c	;volatile
 16666                           
 16667                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 16668  015F5E  8060               	bsf	3936,0,c	;volatile
 16669  015F60  0012               	return		;funcret
 16670  015F62                     __end_of_ADCC_StartConversion:
 16671                           	opt stack 0
 16672                           tosu	equ	0xFFF
 16673                           tosh	equ	0xFFE
 16674                           tosl	equ	0xFFD
 16675                           pclatu	equ	0xFFB
 16676                           pclath	equ	0xFFA
 16677                           tblptru	equ	0xFF8
 16678                           tblptrh	equ	0xFF7
 16679                           tblptrl	equ	0xFF6
 16680                           tablat	equ	0xFF5
 16681                           prodh	equ	0xFF4
 16682                           prodl	equ	0xFF3
 16683                           intcon	equ	0xFF2
 16684                           postinc0	equ	0xFEE
 16685                           fsr0h	equ	0xFEA
 16686                           fsr0l	equ	0xFE9
 16687                           wreg	equ	0xFE8
 16688                           indf1	equ	0xFE7
 16689                           postdec1	equ	0xFE5
 16690                           fsr1h	equ	0xFE2
 16691                           fsr1l	equ	0xFE1
 16692                           bsr	equ	0xFE0
 16693                           indf2	equ	0xFDF
 16694                           postinc2	equ	0xFDE
 16695                           postdec2	equ	0xFDD
 16696                           fsr2h	equ	0xFDA
 16697                           fsr2l	equ	0xFD9
 16698                           status	equ	0xFD8
 16699                           
 16700 ;; *************** function _ADCC_IsConversionDone *****************
 16701 ;; Defined at:
 16702 ;;		line 124 in file "mcc_generated_files/adcc.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;		None
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      unsigned char 
 16709 ;; Registers used:
 16710 ;;		wreg
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16720 ;;Total ram usage:        0 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:   10
 16723 ;; This function calls:
 16724 ;;		Nothing
 16725 ;; This function is called by:
 16726 ;;		_acquisitionTimerCallback
 16727 ;; This function uses a non-reentrant model
 16728 ;;
 16729                           
 16730                           	psect	text62
 16731  015F62                     __ptext62:
 16732                           	opt stack 0
 16733  015F62                     _ADCC_IsConversionDone:
 16734                           	opt stack 9
 16735                           
 16736                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 16737                           
 16738                           ;incstack = 0
 16739  015F62  B060               	btfsc	3936,0,c	;volatile
 16740  015F64  D002               	goto	i1u666_20
 16741  015F66  0E01               	movlw	1
 16742  015F68  0012               	return	
 16743  015F6A                     i1u666_20:
 16744  015F6A  0E00               	movlw	0
 16745  015F6C  0012               	return	
 16746  015F6E                     __end_of_ADCC_IsConversionDone:
 16747                           	opt stack 0
 16748                           tosu	equ	0xFFF
 16749                           tosh	equ	0xFFE
 16750                           tosl	equ	0xFFD
 16751                           pclatu	equ	0xFFB
 16752                           pclath	equ	0xFFA
 16753                           tblptru	equ	0xFF8
 16754                           tblptrh	equ	0xFF7
 16755                           tblptrl	equ	0xFF6
 16756                           tablat	equ	0xFF5
 16757                           prodh	equ	0xFF4
 16758                           prodl	equ	0xFF3
 16759                           intcon	equ	0xFF2
 16760                           postinc0	equ	0xFEE
 16761                           fsr0h	equ	0xFEA
 16762                           fsr0l	equ	0xFE9
 16763                           wreg	equ	0xFE8
 16764                           indf1	equ	0xFE7
 16765                           postdec1	equ	0xFE5
 16766                           fsr1h	equ	0xFE2
 16767                           fsr1l	equ	0xFE1
 16768                           bsr	equ	0xFE0
 16769                           indf2	equ	0xFDF
 16770                           postinc2	equ	0xFDE
 16771                           postdec2	equ	0xFDD
 16772                           fsr2h	equ	0xFDA
 16773                           fsr2l	equ	0xFD9
 16774                           status	equ	0xFD8
 16775                           
 16776 ;; *************** function _TMR7_WriteTimer *****************
 16777 ;; Defined at:
 16778 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;  timerVal        2    0[BANK1 ] unsigned int 
 16781 ;; Auto vars:     Size  Location     Type
 16782 ;;		None
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  1    wreg      void 
 16785 ;; Registers used:
 16786 ;;		wreg, status,2
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16792 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16795 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16796 ;;Total ram usage:        2 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; Hardware stack levels required when called:   10
 16799 ;; This function calls:
 16800 ;;		Nothing
 16801 ;; This function is called by:
 16802 ;;		_TMR7_ISR
 16803 ;;		_TMR7_Reload
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           	psect	text63
 16808  015D62                     __ptext63:
 16809                           	opt stack 0
 16810  015D62                     _TMR7_WriteTimer:
 16811                           	opt stack 10
 16812                           
 16813                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 16814                           
 16815                           ;incstack = 0
 16816  015D62  010F               	movlb	15	; () banked
 16817  015D64  A530               	btfss	48,2,b	;volatile
 16818  015D66  D009               	goto	i1l626
 16819                           
 16820                           ; BSR set to: 15
 16821                           ;tmr7.c: 130: {
 16822                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 16823  015D68  9130               	bcf	48,0,b	;volatile
 16824                           
 16825                           ; BSR set to: 15
 16826                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 16827  015D6A  0101               	movlb	1	; () banked
 16828  015D6C  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 16829  015D6E  010F               	movlb	15	; () banked
 16830  015D70  6F2F               	movwf	47,b	;volatile
 16831                           
 16832                           ; BSR set to: 15
 16833                           ;tmr7.c: 136: TMR7L = timerVal;
 16834  015D72  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 16835                           
 16836                           ; BSR set to: 15
 16837                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 16838  015D76  8130               	bsf	48,0,b	;volatile
 16839                           
 16840                           ;tmr7.c: 140: }
 16841  015D78  0012               	return	
 16842  015D7A                     i1l626:
 16843                           
 16844                           ; BSR set to: 15
 16845                           ;tmr7.c: 141: else
 16846                           ;tmr7.c: 142: {
 16847                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 16848                           
 16849                           ; BSR set to: 15
 16850  015D7A  0101               	movlb	1	; () banked
 16851  015D7C  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 16852  015D7E  010F               	movlb	15	; () banked
 16853  015D80  6F2F               	movwf	47,b	;volatile
 16854                           
 16855                           ; BSR set to: 15
 16856                           ;tmr7.c: 145: TMR7L = timerVal;
 16857  015D82  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 16858  015D86  0012               	return	
 16859  015D88                     __end_of_TMR7_WriteTimer:
 16860                           	opt stack 0
 16861                           tosu	equ	0xFFF
 16862                           tosh	equ	0xFFE
 16863                           tosl	equ	0xFFD
 16864                           pclatu	equ	0xFFB
 16865                           pclath	equ	0xFFA
 16866                           tblptru	equ	0xFF8
 16867                           tblptrh	equ	0xFF7
 16868                           tblptrl	equ	0xFF6
 16869                           tablat	equ	0xFF5
 16870                           prodh	equ	0xFF4
 16871                           prodl	equ	0xFF3
 16872                           intcon	equ	0xFF2
 16873                           postinc0	equ	0xFEE
 16874                           fsr0h	equ	0xFEA
 16875                           fsr0l	equ	0xFE9
 16876                           wreg	equ	0xFE8
 16877                           indf1	equ	0xFE7
 16878                           postdec1	equ	0xFE5
 16879                           fsr1h	equ	0xFE2
 16880                           fsr1l	equ	0xFE1
 16881                           bsr	equ	0xFE0
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           postdec2	equ	0xFDD
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _TMR6_ISR *****************
 16890 ;; Defined at:
 16891 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;		None
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1    wreg      void 
 16898 ;; Registers used:
 16899 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16909 ;;Total ram usage:        0 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:   11
 16912 ;; This function calls:
 16913 ;;		Absolute function
 16914 ;;		_TMR6_DefaultInterruptHandler
 16915 ;;		_heartbeatTimerCallback
 16916 ;; This function is called by:
 16917 ;;		_INTERRUPT_InterruptManagerLow
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text64
 16922  015CEC                     __ptext64:
 16923                           	opt stack 0
 16924  015CEC                     _TMR6_ISR:
 16925                           	opt stack 10
 16926                           
 16927                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 16928                           
 16929                           ; BSR set to: 15
 16930                           ;incstack = 0
 16931  015CEC  010E               	movlb	14	; () banked
 16932  015CEE  9B38               	bcf	56,5,b	;volatile
 16933                           
 16934                           ; BSR set to: 14
 16935                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 16936  015CF0  0101               	movlb	1	; () banked
 16937  015CF2  51CE               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16938  015CF4  11CF               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16939  015CF6  11D0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16940  015CF8  B4D8               	btfsc	status,2,c
 16941  015CFA  0012               	return	
 16942                           
 16943                           ; BSR set to: 1
 16944                           ;tmr6.c: 172: {
 16945                           ;tmr6.c: 173: TMR6_InterruptHandler();
 16946  015CFC  D801               	call	i1u1561_28
 16947  015CFE  0012               	return	
 16948  015D00                     i1u1561_28:
 16949  015D00  0005               	push	
 16950  015D02  6EFA               	movwf	pclath,c
 16951  015D04  51CE               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16952  015D06  6EFD               	movwf	tosl,c
 16953  015D08  51CF               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16954  015D0A  6EFE               	movwf	tosh,c
 16955  015D0C  51D0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16956  015D0E  6EFF               	movwf	tosu,c
 16957  015D10  50FA               	movf	pclath,w,c
 16958  015D12  0012               	return		;indir
 16959  015D14                     __end_of_TMR6_ISR:
 16960                           	opt stack 0
 16961                           tosu	equ	0xFFF
 16962                           tosh	equ	0xFFE
 16963                           tosl	equ	0xFFD
 16964                           pclatu	equ	0xFFB
 16965                           pclath	equ	0xFFA
 16966                           tblptru	equ	0xFF8
 16967                           tblptrh	equ	0xFF7
 16968                           tblptrl	equ	0xFF6
 16969                           tablat	equ	0xFF5
 16970                           prodh	equ	0xFF4
 16971                           prodl	equ	0xFF3
 16972                           intcon	equ	0xFF2
 16973                           postinc0	equ	0xFEE
 16974                           fsr0h	equ	0xFEA
 16975                           fsr0l	equ	0xFE9
 16976                           wreg	equ	0xFE8
 16977                           indf1	equ	0xFE7
 16978                           postdec1	equ	0xFE5
 16979                           fsr1h	equ	0xFE2
 16980                           fsr1l	equ	0xFE1
 16981                           bsr	equ	0xFE0
 16982                           indf2	equ	0xFDF
 16983                           postinc2	equ	0xFDE
 16984                           postdec2	equ	0xFDD
 16985                           fsr2h	equ	0xFDA
 16986                           fsr2l	equ	0xFD9
 16987                           status	equ	0xFD8
 16988                           
 16989 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16990 ;; Defined at:
 16991 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16992 ;; Parameters:    Size  Location     Type
 16993 ;;		None
 16994 ;; Auto vars:     Size  Location     Type
 16995 ;;		None
 16996 ;; Return value:  Size  Location     Type
 16997 ;;                  1    wreg      void 
 16998 ;; Registers used:
 16999 ;;		None
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17009 ;;Total ram usage:        0 bytes
 17010 ;; Hardware stack levels used:    1
 17011 ;; Hardware stack levels required when called:   10
 17012 ;; This function calls:
 17013 ;;		Nothing
 17014 ;; This function is called by:
 17015 ;;		_TMR6_Initialize
 17016 ;;		_TMR6_ISR
 17017 ;; This function uses a non-reentrant model
 17018 ;;
 17019                           
 17020                           	psect	text65
 17021  015F88                     __ptext65:
 17022                           	opt stack 0
 17023  015F88                     _TMR6_DefaultInterruptHandler:
 17024                           	opt stack 10
 17025                           
 17026                           ;incstack = 0
 17027  015F88  0012               	return		;funcret
 17028  015F8A                     __end_of_TMR6_DefaultInterruptHandler:
 17029                           	opt stack 0
 17030                           tosu	equ	0xFFF
 17031                           tosh	equ	0xFFE
 17032                           tosl	equ	0xFFD
 17033                           pclatu	equ	0xFFB
 17034                           pclath	equ	0xFFA
 17035                           tblptru	equ	0xFF8
 17036                           tblptrh	equ	0xFF7
 17037                           tblptrl	equ	0xFF6
 17038                           tablat	equ	0xFF5
 17039                           prodh	equ	0xFF4
 17040                           prodl	equ	0xFF3
 17041                           intcon	equ	0xFF2
 17042                           postinc0	equ	0xFEE
 17043                           fsr0h	equ	0xFEA
 17044                           fsr0l	equ	0xFE9
 17045                           wreg	equ	0xFE8
 17046                           indf1	equ	0xFE7
 17047                           postdec1	equ	0xFE5
 17048                           fsr1h	equ	0xFE2
 17049                           fsr1l	equ	0xFE1
 17050                           bsr	equ	0xFE0
 17051                           indf2	equ	0xFDF
 17052                           postinc2	equ	0xFDE
 17053                           postdec2	equ	0xFDD
 17054                           fsr2h	equ	0xFDA
 17055                           fsr2l	equ	0xFD9
 17056                           status	equ	0xFD8
 17057                           
 17058 ;; *************** function _heartbeatTimerCallback *****************
 17059 ;; Defined at:
 17060 ;;		line 122 in file "main.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;		None
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;		None
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  1    wreg      void 
 17067 ;; Registers used:
 17068 ;;		wreg, status,2, status,0
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17076 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17077 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17078 ;;Total ram usage:        1 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:   10
 17081 ;; This function calls:
 17082 ;;		Nothing
 17083 ;; This function is called by:
 17084 ;;		_main
 17085 ;;		_TMR6_ISR
 17086 ;; This function uses a non-reentrant model
 17087 ;;
 17088                           
 17089                           	psect	text66
 17090  015C6C                     __ptext66:
 17091                           	opt stack 0
 17092  015C6C                     _heartbeatTimerCallback:
 17093                           	opt stack 10
 17094                           
 17095                           ;main.c: 125: LATFbits.LATF2 = !LATFbits.LATF2;
 17096                           
 17097                           ;incstack = 0
 17098  015C6C  B47E               	btfsc	3966,2,c	;volatile
 17099  015C6E  D004               	goto	i1u721_20
 17100  015C70  0101               	movlb	1	; () banked
 17101  015C72  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17102  015C74  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 17103  015C76  D002               	goto	i1u722_28
 17104  015C78                     i1u721_20:
 17105  015C78  0101               	movlb	1	; () banked
 17106  015C7A  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17107  015C7C                     i1u722_28:
 17108  015C7C  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17109  015C7E  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17110  015C80  507E               	movf	3966,w,c	;volatile
 17111  015C82  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17112  015C84  0BFB               	andlw	-5
 17113  015C86  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17114  015C88  6E7E               	movwf	3966,c	;volatile
 17115                           
 17116                           ;main.c: 128: on_time++;
 17117  015C8A  0E01               	movlw	1
 17118  015C8C  27B8               	addwf	_on_time& (0+255),f,b
 17119  015C8E  0E00               	movlw	0
 17120  015C90  23B9               	addwfc	(_on_time+1)& (0+255),f,b
 17121  015C92  23BA               	addwfc	(_on_time+2)& (0+255),f,b
 17122  015C94  23BB               	addwfc	(_on_time+3)& (0+255),f,b
 17123  015C96  0004               	clrwdt		;# 
 17124  015C98  0012               	return		;funcret
 17125  015C9A                     __end_of_heartbeatTimerCallback:
 17126                           	opt stack 0
 17127                           tosu	equ	0xFFF
 17128                           tosh	equ	0xFFE
 17129                           tosl	equ	0xFFD
 17130                           pclatu	equ	0xFFB
 17131                           pclath	equ	0xFFA
 17132                           tblptru	equ	0xFF8
 17133                           tblptrh	equ	0xFF7
 17134                           tblptrl	equ	0xFF6
 17135                           tablat	equ	0xFF5
 17136                           prodh	equ	0xFF4
 17137                           prodl	equ	0xFF3
 17138                           intcon	equ	0xFF2
 17139                           postinc0	equ	0xFEE
 17140                           fsr0h	equ	0xFEA
 17141                           fsr0l	equ	0xFE9
 17142                           wreg	equ	0xFE8
 17143                           indf1	equ	0xFE7
 17144                           postdec1	equ	0xFE5
 17145                           fsr1h	equ	0xFE2
 17146                           fsr1l	equ	0xFE1
 17147                           bsr	equ	0xFE0
 17148                           indf2	equ	0xFDF
 17149                           postinc2	equ	0xFDE
 17150                           postdec2	equ	0xFDD
 17151                           fsr2h	equ	0xFDA
 17152                           fsr2l	equ	0xFD9
 17153                           status	equ	0xFD8
 17154                           
 17155 ;; *************** function _EUSART2_Transmit_ISR *****************
 17156 ;; Defined at:
 17157 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;		None
 17160 ;; Auto vars:     Size  Location     Type
 17161 ;;		None
 17162 ;; Return value:  Size  Location     Type
 17163 ;;                  1    wreg      void 
 17164 ;; Registers used:
 17165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17166 ;; Tracked objects:
 17167 ;;		On entry : 0/0
 17168 ;;		On exit  : 0/0
 17169 ;;		Unchanged: 0/0
 17170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17175 ;;Total ram usage:        0 bytes
 17176 ;; Hardware stack levels used:    1
 17177 ;; Hardware stack levels required when called:   10
 17178 ;; This function calls:
 17179 ;;		Nothing
 17180 ;; This function is called by:
 17181 ;;		_EUSART2_Initialize
 17182 ;;		_INTERRUPT_InterruptManagerLow
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           	psect	text67
 17187  015B6C                     __ptext67:
 17188                           	opt stack 0
 17189  015B6C                     _EUSART2_Transmit_ISR:
 17190                           	opt stack 11
 17191                           
 17192                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 17193                           
 17194                           ;incstack = 0
 17195  015B6C  0E40               	movlw	64
 17196  015B6E  0101               	movlb	1	; () banked
 17197  015B70  61DA               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17198  015B72  D014               	goto	i1l389
 17199                           
 17200                           ; BSR set to: 1
 17201                           ;eusart2.c: 190: {
 17202                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 17203  015B74  51DB               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 17204  015B76  0D01               	mullw	1
 17205  015B78  0E40               	movlw	low _eusart2TxBuffer
 17206  015B7A  24F3               	addwf	prodl,w,c
 17207  015B7C  6ED9               	movwf	fsr2l,c
 17208  015B7E  0E02               	movlw	high _eusart2TxBuffer
 17209  015B80  20F4               	addwfc	prodh,w,c
 17210  015B82  6EDA               	movwf	fsr2h,c
 17211  015B84  50DF               	movf	indf2,w,c
 17212  015B86  010E               	movlb	14	; () banked
 17213  015B88  6FF2               	movwf	242,b	;volatile
 17214                           
 17215                           ; BSR set to: 14
 17216  015B8A  0101               	movlb	1	; () banked
 17217  015B8C  2BDB               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 17218                           
 17219                           ; BSR set to: 1
 17220                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 17221  015B8E  0E3F               	movlw	63
 17222  015B90  65DB               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 17223  015B92  D002               	goto	i1l390
 17224                           
 17225                           ; BSR set to: 1
 17226                           ;eusart2.c: 193: {
 17227                           ;eusart2.c: 194: eusart2TxTail = 0;
 17228  015B94  0E00               	movlw	0
 17229  015B96  6FDB               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17230  015B98                     i1l390:
 17231                           
 17232                           ; BSR set to: 1
 17233                           ;eusart2.c: 195: }
 17234                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 17235                           
 17236                           ; BSR set to: 1
 17237  015B98  2BDA               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17238                           
 17239                           ;eusart2.c: 197: }
 17240  015B9A  0012               	return	
 17241  015B9C                     i1l389:
 17242                           
 17243                           ; BSR set to: 1
 17244                           ;eusart2.c: 198: else
 17245                           ;eusart2.c: 199: {
 17246                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 17247  015B9C  010E               	movlb	14	; () banked
 17248  015B9E  9D2C               	bcf	44,6,b	;volatile
 17249  015BA0  0012               	return	
 17250  015BA2                     __end_of_EUSART2_Transmit_ISR:
 17251                           	opt stack 0
 17252                           tosu	equ	0xFFF
 17253                           tosh	equ	0xFFE
 17254                           tosl	equ	0xFFD
 17255                           pclatu	equ	0xFFB
 17256                           pclath	equ	0xFFA
 17257                           tblptru	equ	0xFF8
 17258                           tblptrh	equ	0xFF7
 17259                           tblptrl	equ	0xFF6
 17260                           tablat	equ	0xFF5
 17261                           prodh	equ	0xFF4
 17262                           prodl	equ	0xFF3
 17263                           intcon	equ	0xFF2
 17264                           postinc0	equ	0xFEE
 17265                           fsr0h	equ	0xFEA
 17266                           fsr0l	equ	0xFE9
 17267                           wreg	equ	0xFE8
 17268                           indf1	equ	0xFE7
 17269                           postdec1	equ	0xFE5
 17270                           fsr1h	equ	0xFE2
 17271                           fsr1l	equ	0xFE1
 17272                           bsr	equ	0xFE0
 17273                           indf2	equ	0xFDF
 17274                           postinc2	equ	0xFDE
 17275                           postdec2	equ	0xFDD
 17276                           fsr2h	equ	0xFDA
 17277                           fsr2l	equ	0xFD9
 17278                           status	equ	0xFD8
 17279                           
 17280 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 17281 ;; Defined at:
 17282 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 17283 ;; Parameters:    Size  Location     Type
 17284 ;;		None
 17285 ;; Auto vars:     Size  Location     Type
 17286 ;;		None
 17287 ;; Return value:  Size  Location     Type
 17288 ;;                  1    wreg      void 
 17289 ;; Registers used:
 17290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17291 ;; Tracked objects:
 17292 ;;		On entry : 0/0
 17293 ;;		On exit  : 0/0
 17294 ;;		Unchanged: 0/0
 17295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17298 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17299 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17300 ;;Total ram usage:       18 bytes
 17301 ;; Hardware stack levels used:    1
 17302 ;; Hardware stack levels required when called:    9
 17303 ;; This function calls:
 17304 ;;		Absolute function
 17305 ;;		_ADCC_ISR
 17306 ;;		_EUSART2_Receive_ISR
 17307 ;;		_TMR5_ISR
 17308 ;; This function is called by:
 17309 ;;		Interrupt level 2
 17310 ;; This function uses a non-reentrant model
 17311 ;;
 17312                           
 17313                           	psect	intcode
 17314  000008                     __pintcode:
 17315                           	opt stack 0
 17316  000008                     _INTERRUPT_InterruptManagerHigh:
 17317                           	opt stack 9
 17318                           
 17319                           ;incstack = 0
 17320  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17321  00000A  EFFE  F0A4         	goto	int_func
 17322                           tosu	equ	0xFFF
 17323                           tosh	equ	0xFFE
 17324                           tosl	equ	0xFFD
 17325                           pclatu	equ	0xFFB
 17326                           pclath	equ	0xFFA
 17327                           tblptru	equ	0xFF8
 17328                           tblptrh	equ	0xFF7
 17329                           tblptrl	equ	0xFF6
 17330                           tablat	equ	0xFF5
 17331                           prodh	equ	0xFF4
 17332                           prodl	equ	0xFF3
 17333                           intcon	equ	0xFF2
 17334                           postinc0	equ	0xFEE
 17335                           fsr0h	equ	0xFEA
 17336                           fsr0l	equ	0xFE9
 17337                           wreg	equ	0xFE8
 17338                           indf1	equ	0xFE7
 17339                           postdec1	equ	0xFE5
 17340                           fsr1h	equ	0xFE2
 17341                           fsr1l	equ	0xFE1
 17342                           bsr	equ	0xFE0
 17343                           indf2	equ	0xFDF
 17344                           postinc2	equ	0xFDE
 17345                           postdec2	equ	0xFDD
 17346                           fsr2h	equ	0xFDA
 17347                           fsr2l	equ	0xFD9
 17348                           status	equ	0xFD8
 17349                           
 17350                           	psect	intcode_body
 17351  0149FC                     __pintcode_body:
 17352                           	opt stack 9
 17353  0149FC                     int_func:
 17354                           	opt stack 9
 17355  0149FC  CFFA F0B3          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 17356  014A00  CFFB F0B4          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 17357  014A04  CFE9 F0B5          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 17358  014A08  CFEA F0B6          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 17359  014A0C  CFE1 F0B7          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 17360  014A10  CFE2 F0B8          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 17361  014A14  CFD9 F0B9          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 17362  014A18  CFDA F0BA          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 17363  014A1C  CFF3 F0BB          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 17364  014A20  CFF4 F0BC          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 17365  014A24  CFF6 F0BD          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 17366  014A28  CFF7 F0BE          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 17367  014A2C  CFF8 F0BF          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 17368  014A30  CFF5 F0C0          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 17369  014A34  C05E  F0C1         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 17370  014A38  C05F  F0C2         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 17371  014A3C  C060  F0C3         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 17372  014A40  C061  F0C4         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 17373                           
 17374                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 17375  014A44  010E               	movlb	14	; () banked
 17376  014A46  BF2C               	btfsc	44,7,b	;volatile
 17377                           
 17378                           ; BSR set to: 14
 17379  014A48  AF36               	btfss	54,7,b	;volatile
 17380  014A4A  D00D               	goto	i2l202
 17381                           
 17382                           ; BSR set to: 14
 17383                           ;interrupt_manager.c: 84: {
 17384                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 17385  014A4C  D801               	call	i2u1572_48
 17386  014A4E  D016               	goto	i2l206
 17387  014A50                     i2u1572_48:
 17388  014A50  0005               	push	
 17389  014A52  6EFA               	movwf	pclath,c
 17390  014A54  0100               	movlb	0	; () banked
 17391  014A56  51D4               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 17392  014A58  6EFD               	movwf	tosl,c
 17393  014A5A  51D5               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 17394  014A5C  6EFE               	movwf	tosh,c
 17395  014A5E  51D6               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 17396  014A60  6EFF               	movwf	tosu,c
 17397  014A62  50FA               	movf	pclath,w,c
 17398  014A64  0012               	return		;indir
 17399  014A66                     i2l202:
 17400                           
 17401                           ; BSR set to: 14
 17402                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 17403  014A66  B92E               	btfsc	46,4,b	;volatile
 17404                           
 17405                           ; BSR set to: 14
 17406  014A68  A938               	btfss	56,4,b	;volatile
 17407  014A6A  D003               	goto	i2l204
 17408                           
 17409                           ; BSR set to: 14
 17410                           ;interrupt_manager.c: 88: {
 17411                           ;interrupt_manager.c: 89: TMR5_ISR();
 17412  014A6C  ECEB  F0AD         	call	_TMR5_ISR	;wreg free
 17413                           
 17414                           ;interrupt_manager.c: 90: }
 17415  014A70  D005               	goto	i2l206
 17416  014A72                     i2l204:
 17417                           
 17418                           ; BSR set to: 14
 17419                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 17420  014A72  B12A               	btfsc	42,0,b	;volatile
 17421                           
 17422                           ; BSR set to: 14
 17423  014A74  A134               	btfss	52,0,b	;volatile
 17424  014A76  D002               	goto	i2l206
 17425                           
 17426                           ; BSR set to: 14
 17427                           ;interrupt_manager.c: 92: {
 17428                           ;interrupt_manager.c: 93: ADCC_ISR();
 17429  014A78  EC8A  F0AE         	call	_ADCC_ISR	;wreg free
 17430  014A7C                     i2l206:
 17431                           
 17432                           ;interrupt_manager.c: 95: else
 17433                           ;interrupt_manager.c: 96: {
 17434  014A7C  C0C4  F061         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 17435  014A80  C0C3  F060         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 17436  014A84  C0C2  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 17437  014A88  C0C1  F05E         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 17438  014A8C  C0C0  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 17439  014A90  C0BF  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 17440  014A94  C0BE  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 17441  014A98  C0BD  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 17442  014A9C  C0BC  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 17443  014AA0  C0BB  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 17444  014AA4  C0BA  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 17445  014AA8  C0B9  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 17446  014AAC  C0B8  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 17447  014AB0  C0B7  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 17448  014AB4  C0B6  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 17449  014AB8  C0B5  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 17450  014ABC  C0B4  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 17451  014AC0  C0B3  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 17452  014AC4  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17453  014AC6  0011               	retfie		f
 17454  014AC8                     __end_of_INTERRUPT_InterruptManagerHigh:
 17455                           	opt stack 0
 17456                           tosu	equ	0xFFF
 17457                           tosh	equ	0xFFE
 17458                           tosl	equ	0xFFD
 17459                           pclatu	equ	0xFFB
 17460                           pclath	equ	0xFFA
 17461                           tblptru	equ	0xFF8
 17462                           tblptrh	equ	0xFF7
 17463                           tblptrl	equ	0xFF6
 17464                           tablat	equ	0xFF5
 17465                           prodh	equ	0xFF4
 17466                           prodl	equ	0xFF3
 17467                           intcon	equ	0xFF2
 17468                           postinc0	equ	0xFEE
 17469                           fsr0h	equ	0xFEA
 17470                           fsr0l	equ	0xFE9
 17471                           wreg	equ	0xFE8
 17472                           indf1	equ	0xFE7
 17473                           postdec1	equ	0xFE5
 17474                           fsr1h	equ	0xFE2
 17475                           fsr1l	equ	0xFE1
 17476                           bsr	equ	0xFE0
 17477                           indf2	equ	0xFDF
 17478                           postinc2	equ	0xFDE
 17479                           postdec2	equ	0xFDD
 17480                           fsr2h	equ	0xFDA
 17481                           fsr2l	equ	0xFD9
 17482                           status	equ	0xFD8
 17483                           
 17484 ;; *************** function _TMR5_ISR *****************
 17485 ;; Defined at:
 17486 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;		None
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;		None
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  1    wreg      void 
 17493 ;; Registers used:
 17494 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17495 ;; Tracked objects:
 17496 ;;		On entry : 0/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17504 ;;Total ram usage:        0 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:    1
 17507 ;; This function calls:
 17508 ;;		Absolute function
 17509 ;;		_TMR5_DefaultInterruptHandler
 17510 ;;		_TMR5_WriteTimer
 17511 ;; This function is called by:
 17512 ;;		_INTERRUPT_InterruptManagerHigh
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           	psect	text69
 17517  015BD6                     __ptext69:
 17518                           	opt stack 0
 17519  015BD6                     _TMR5_ISR:
 17520                           	opt stack 16
 17521                           
 17522                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 17523                           
 17524                           ;incstack = 0
 17525  015BD6  010E               	movlb	14	; () banked
 17526  015BD8  9938               	bcf	56,4,b	;volatile
 17527                           
 17528                           ; BSR set to: 14
 17529                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 17530  015BDA  C1D4  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17531  015BDE  C1D5  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17532  015BE2  EC37  F0AF         	call	_TMR5_WriteTimer	;wreg free
 17533                           
 17534                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 17535  015BE6  0101               	movlb	1	; () banked
 17536  015BE8  51BC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17537  015BEA  11BD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17538  015BEC  11BE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17539  015BEE  B4D8               	btfsc	status,2,c
 17540  015BF0  0012               	return	
 17541                           
 17542                           ; BSR set to: 1
 17543                           ;tmr5.c: 172: {
 17544                           ;tmr5.c: 173: TMR5_InterruptHandler();
 17545  015BF2  D801               	call	i2u1557_48
 17546  015BF4  0012               	return	
 17547  015BF6                     i2u1557_48:
 17548  015BF6  0005               	push	
 17549  015BF8  6EFA               	movwf	pclath,c
 17550  015BFA  51BC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17551  015BFC  6EFD               	movwf	tosl,c
 17552  015BFE  51BD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17553  015C00  6EFE               	movwf	tosh,c
 17554  015C02  51BE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17555  015C04  6EFF               	movwf	tosu,c
 17556  015C06  50FA               	movf	pclath,w,c
 17557  015C08  0012               	return		;indir
 17558  015C0A                     __end_of_TMR5_ISR:
 17559                           	opt stack 0
 17560                           tosu	equ	0xFFF
 17561                           tosh	equ	0xFFE
 17562                           tosl	equ	0xFFD
 17563                           pclatu	equ	0xFFB
 17564                           pclath	equ	0xFFA
 17565                           tblptru	equ	0xFF8
 17566                           tblptrh	equ	0xFF7
 17567                           tblptrl	equ	0xFF6
 17568                           tablat	equ	0xFF5
 17569                           prodh	equ	0xFF4
 17570                           prodl	equ	0xFF3
 17571                           intcon	equ	0xFF2
 17572                           postinc0	equ	0xFEE
 17573                           fsr0h	equ	0xFEA
 17574                           fsr0l	equ	0xFE9
 17575                           wreg	equ	0xFE8
 17576                           indf1	equ	0xFE7
 17577                           postdec1	equ	0xFE5
 17578                           fsr1h	equ	0xFE2
 17579                           fsr1l	equ	0xFE1
 17580                           bsr	equ	0xFE0
 17581                           indf2	equ	0xFDF
 17582                           postinc2	equ	0xFDE
 17583                           postdec2	equ	0xFDD
 17584                           fsr2h	equ	0xFDA
 17585                           fsr2l	equ	0xFD9
 17586                           status	equ	0xFD8
 17587                           
 17588 ;; *************** function _TMR5_WriteTimer *****************
 17589 ;; Defined at:
 17590 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 17591 ;; Parameters:    Size  Location     Type
 17592 ;;  timerVal        2    0[COMRAM] unsigned int 
 17593 ;; Auto vars:     Size  Location     Type
 17594 ;;		None
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  1    wreg      void 
 17597 ;; Registers used:
 17598 ;;		wreg, status,2
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/0
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17608 ;;Total ram usage:        2 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; This function calls:
 17611 ;;		Nothing
 17612 ;; This function is called by:
 17613 ;;		_TMR5_ISR
 17614 ;;		_TMR5_Reload
 17615 ;; This function uses a non-reentrant model
 17616 ;;
 17617                           
 17618                           	psect	text70
 17619  015E6E                     __ptext70:
 17620                           	opt stack 0
 17621  015E6E                     _TMR5_WriteTimer:
 17622                           	opt stack 16
 17623                           
 17624                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 17625                           
 17626                           ;incstack = 0
 17627  015E6E  A4C3               	btfss	4035,2,c	;volatile
 17628  015E70  D007               	goto	i2l1008
 17629                           
 17630                           ;tmr5.c: 130: {
 17631                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 17632  015E72  90C3               	bcf	4035,0,c	;volatile
 17633                           
 17634                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 17635  015E74  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 17636  015E76  6EC2               	movwf	4034,c	;volatile
 17637                           
 17638                           ;tmr5.c: 136: TMR5L = timerVal;
 17639  015E78  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 17640                           
 17641                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 17642  015E7C  80C3               	bsf	4035,0,c	;volatile
 17643                           
 17644                           ;tmr5.c: 140: }
 17645  015E7E  0012               	return	
 17646  015E80                     i2l1008:
 17647                           
 17648                           ;tmr5.c: 141: else
 17649                           ;tmr5.c: 142: {
 17650                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 17651  015E80  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 17652  015E82  6EC2               	movwf	4034,c	;volatile
 17653                           
 17654                           ;tmr5.c: 145: TMR5L = timerVal;
 17655  015E84  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 17656  015E88  0012               	return	
 17657  015E8A                     __end_of_TMR5_WriteTimer:
 17658                           	opt stack 0
 17659                           tosu	equ	0xFFF
 17660                           tosh	equ	0xFFE
 17661                           tosl	equ	0xFFD
 17662                           pclatu	equ	0xFFB
 17663                           pclath	equ	0xFFA
 17664                           tblptru	equ	0xFF8
 17665                           tblptrh	equ	0xFF7
 17666                           tblptrl	equ	0xFF6
 17667                           tablat	equ	0xFF5
 17668                           prodh	equ	0xFF4
 17669                           prodl	equ	0xFF3
 17670                           intcon	equ	0xFF2
 17671                           postinc0	equ	0xFEE
 17672                           fsr0h	equ	0xFEA
 17673                           fsr0l	equ	0xFE9
 17674                           wreg	equ	0xFE8
 17675                           indf1	equ	0xFE7
 17676                           postdec1	equ	0xFE5
 17677                           fsr1h	equ	0xFE2
 17678                           fsr1l	equ	0xFE1
 17679                           bsr	equ	0xFE0
 17680                           indf2	equ	0xFDF
 17681                           postinc2	equ	0xFDE
 17682                           postdec2	equ	0xFDD
 17683                           fsr2h	equ	0xFDA
 17684                           fsr2l	equ	0xFD9
 17685                           status	equ	0xFD8
 17686                           
 17687 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17688 ;; Defined at:
 17689 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17690 ;; Parameters:    Size  Location     Type
 17691 ;;		None
 17692 ;; Auto vars:     Size  Location     Type
 17693 ;;		None
 17694 ;; Return value:  Size  Location     Type
 17695 ;;                  1    wreg      void 
 17696 ;; Registers used:
 17697 ;;		None
 17698 ;; Tracked objects:
 17699 ;;		On entry : 0/0
 17700 ;;		On exit  : 0/0
 17701 ;;		Unchanged: 0/0
 17702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17707 ;;Total ram usage:        0 bytes
 17708 ;; Hardware stack levels used:    1
 17709 ;; This function calls:
 17710 ;;		Nothing
 17711 ;; This function is called by:
 17712 ;;		_TMR5_Initialize
 17713 ;;		_TMR5_ISR
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           	psect	text71
 17718  015F8A                     __ptext71:
 17719                           	opt stack 0
 17720  015F8A                     _TMR5_DefaultInterruptHandler:
 17721                           	opt stack 16
 17722                           
 17723                           ;incstack = 0
 17724  015F8A  0012               	return		;funcret
 17725  015F8C                     __end_of_TMR5_DefaultInterruptHandler:
 17726                           	opt stack 0
 17727                           tosu	equ	0xFFF
 17728                           tosh	equ	0xFFE
 17729                           tosl	equ	0xFFD
 17730                           pclatu	equ	0xFFB
 17731                           pclath	equ	0xFFA
 17732                           tblptru	equ	0xFF8
 17733                           tblptrh	equ	0xFF7
 17734                           tblptrl	equ	0xFF6
 17735                           tablat	equ	0xFF5
 17736                           prodh	equ	0xFF4
 17737                           prodl	equ	0xFF3
 17738                           intcon	equ	0xFF2
 17739                           postinc0	equ	0xFEE
 17740                           fsr0h	equ	0xFEA
 17741                           fsr0l	equ	0xFE9
 17742                           wreg	equ	0xFE8
 17743                           indf1	equ	0xFE7
 17744                           postdec1	equ	0xFE5
 17745                           fsr1h	equ	0xFE2
 17746                           fsr1l	equ	0xFE1
 17747                           bsr	equ	0xFE0
 17748                           indf2	equ	0xFDF
 17749                           postinc2	equ	0xFDE
 17750                           postdec2	equ	0xFDD
 17751                           fsr2h	equ	0xFDA
 17752                           fsr2l	equ	0xFD9
 17753                           status	equ	0xFD8
 17754                           
 17755 ;; *************** function _EUSART2_Receive_ISR *****************
 17756 ;; Defined at:
 17757 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 17758 ;; Parameters:    Size  Location     Type
 17759 ;;		None
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;		None
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      void 
 17764 ;; Registers used:
 17765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17775 ;;Total ram usage:        0 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:    4
 17778 ;; This function calls:
 17779 ;;		i2_printf
 17780 ;; This function is called by:
 17781 ;;		_EUSART2_Initialize
 17782 ;;		_INTERRUPT_InterruptManagerHigh
 17783 ;; This function uses a non-reentrant model
 17784 ;;
 17785                           
 17786                           	psect	text72
 17787  014C26                     __ptext72:
 17788                           	opt stack 0
 17789  014C26                     _EUSART2_Receive_ISR:
 17790                           	opt stack 13
 17791                           
 17792                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 17793                           
 17794                           ;incstack = 0
 17795  014C26  010E               	movlb	14	; () banked
 17796  014C28  A3F5               	btfss	245,1,b	;volatile
 17797  014C2A  D002               	goto	i2l395
 17798                           
 17799                           ; BSR set to: 14
 17800                           ;eusart2.c: 208: {
 17801                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 17802  014C2C  99F5               	bcf	245,4,b	;volatile
 17803                           
 17804                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 17805  014C2E  89F5               	bsf	245,4,b	;volatile
 17806  014C30                     i2l395:
 17807                           
 17808                           ; BSR set to: 14
 17809                           ;eusart2.c: 213: }
 17810                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 17811                           
 17812                           ; BSR set to: 14
 17813  014C30  0100               	movlb	0	; () banked
 17814  014C32  51DE               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 17815  014C34  0D01               	mullw	1
 17816  014C36  0E00               	movlw	low _eusart2RxBuffer
 17817  014C38  24F3               	addwf	prodl,w,c
 17818  014C3A  6ED9               	movwf	fsr2l,c
 17819  014C3C  0E02               	movlw	high _eusart2RxBuffer
 17820  014C3E  20F4               	addwfc	prodh,w,c
 17821  014C40  6EDA               	movwf	fsr2h,c
 17822  014C42  CEF1 FFDF          	movff	3825,indf2	;volatile
 17823                           
 17824                           ; BSR set to: 0
 17825  014C46  2BDE               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 17829  014C48  0E3F               	movlw	63
 17830  014C4A  65DE               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 17831  014C4C  D002               	goto	i2l396
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;eusart2.c: 218: {
 17835                           ;eusart2.c: 219: eusart2RxHead = 0;
 17836  014C4E  0E00               	movlw	0
 17837  014C50  6FDE               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17838  014C52                     i2l396:
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;eusart2.c: 220: }
 17842                           ;eusart2.c: 221: eusart2RxCount++;
 17843                           
 17844                           ; BSR set to: 0
 17845  014C52  0101               	movlb	1	; () banked
 17846  014C54  2BD8               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 17847                           
 17848                           ; BSR set to: 1
 17849                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 17850  014C56  0E0A               	movlw	10
 17851  014C58  010E               	movlb	14	; () banked
 17852  014C5A  19F1               	xorwf	241,w,b	;volatile
 17853  014C5C  B4D8               	btfsc	status,2,c
 17854  014C5E  D004               	goto	i2u1567_40
 17855                           
 17856                           ; BSR set to: 14
 17857  014C60  0E0D               	movlw	13
 17858  014C62  19F1               	xorwf	241,w,b	;volatile
 17859  014C64  A4D8               	btfss	status,2,c
 17860  014C66  D006               	goto	i2l397
 17861  014C68                     i2u1567_40:
 17862                           
 17863                           ; BSR set to: 14
 17864                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 17865  014C68  0100               	movlb	0	; () banked
 17866  014C6A  81EB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 17867                           
 17868                           ; BSR set to: 0
 17869                           ;eusart2.c: 232: RC2REG = 0;
 17870  014C6C  0E00               	movlw	0
 17871  014C6E  010E               	movlb	14	; () banked
 17872  014C70  6FF1               	movwf	241,b	;volatile
 17873                           
 17874                           ;eusart2.c: 234: }
 17875  014C72  D002               	goto	i2l400
 17876  014C74                     i2l397:
 17877                           
 17878                           ; BSR set to: 14
 17879                           ;eusart2.c: 236: else {
 17880                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 17881  014C74  0100               	movlb	0	; () banked
 17882  014C76  91EB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 17883  014C78                     i2l400:
 17884                           
 17885                           ;eusart2.c: 240: }
 17886                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 17887                           
 17888                           ; BSR set to: 0
 17889  014C78  0E08               	movlw	8
 17890  014C7A  010E               	movlb	14	; () banked
 17891  014C7C  19F1               	xorwf	241,w,b	;volatile
 17892  014C7E  A4D8               	btfss	status,2,c
 17893  014C80  0012               	return	
 17894                           
 17895                           ; BSR set to: 14
 17896                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 17897  014C82  0100               	movlb	0	; () banked
 17898  014C84  51DE               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 17899  014C86  0D01               	mullw	1
 17900  014C88  0E00               	movlw	low _eusart2RxBuffer
 17901  014C8A  24F3               	addwf	prodl,w,c
 17902  014C8C  6ED9               	movwf	fsr2l,c
 17903  014C8E  0E02               	movlw	high _eusart2RxBuffer
 17904  014C90  20F4               	addwfc	prodh,w,c
 17905  014C92  6EDA               	movwf	fsr2h,c
 17906  014C94  0E00               	movlw	0
 17907  014C96  6EDF               	movwf	indf2,c
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;eusart2.c: 246: eusart2RxHead--;
 17911  014C98  07DE               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;eusart2.c: 249: printf("\033[K");
 17915  014C9A  0EC1               	movlw	low STR_1
 17916  014C9C  6F66               	movwf	i2printf@f& (0+255),b
 17917  014C9E  0EFF               	movlw	high STR_1
 17918  014CA0  6F67               	movwf	(i2printf@f+1)& (0+255),b
 17919  014CA2  EC74  F084         	call	i2_printf	;wreg free
 17920                           
 17921                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 17922  014CA6  0101               	movlb	1	; () banked
 17923  014CA8  51D9               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 17924  014CAA  0100               	movlb	0	; () banked
 17925  014CAC  19DE               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 17926  014CAE  B4D8               	btfsc	status,2,c
 17927  014CB0  D00B               	goto	i2l402
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 17931  014CB2  51DE               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 17932  014CB4  0D01               	mullw	1
 17933  014CB6  0E00               	movlw	low _eusart2RxBuffer
 17934  014CB8  24F3               	addwf	prodl,w,c
 17935  014CBA  6ED9               	movwf	fsr2l,c
 17936  014CBC  0E02               	movlw	high _eusart2RxBuffer
 17937  014CBE  20F4               	addwfc	prodh,w,c
 17938  014CC0  6EDA               	movwf	fsr2h,c
 17939  014CC2  0E00               	movlw	0
 17940  014CC4  6EDF               	movwf	indf2,c
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;eusart2.c: 254: eusart2RxHead--;
 17944  014CC6  07DE               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 17945  014CC8                     i2l402:
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;eusart2.c: 256: }
 17949                           ;eusart2.c: 258: RC2REG = 0;
 17950                           
 17951                           ; BSR set to: 0
 17952  014CC8  0E00               	movlw	0
 17953  014CCA  010E               	movlb	14	; () banked
 17954  014CCC  6FF1               	movwf	241,b	;volatile
 17955  014CCE  0012               	return	
 17956  014CD0                     __end_of_EUSART2_Receive_ISR:
 17957                           	opt stack 0
 17958                           tosu	equ	0xFFF
 17959                           tosh	equ	0xFFE
 17960                           tosl	equ	0xFFD
 17961                           pclatu	equ	0xFFB
 17962                           pclath	equ	0xFFA
 17963                           tblptru	equ	0xFF8
 17964                           tblptrh	equ	0xFF7
 17965                           tblptrl	equ	0xFF6
 17966                           tablat	equ	0xFF5
 17967                           prodh	equ	0xFF4
 17968                           prodl	equ	0xFF3
 17969                           intcon	equ	0xFF2
 17970                           postinc0	equ	0xFEE
 17971                           fsr0h	equ	0xFEA
 17972                           fsr0l	equ	0xFE9
 17973                           wreg	equ	0xFE8
 17974                           indf1	equ	0xFE7
 17975                           postdec1	equ	0xFE5
 17976                           fsr1h	equ	0xFE2
 17977                           fsr1l	equ	0xFE1
 17978                           bsr	equ	0xFE0
 17979                           indf2	equ	0xFDF
 17980                           postinc2	equ	0xFDE
 17981                           postdec2	equ	0xFDD
 17982                           fsr2h	equ	0xFDA
 17983                           fsr2l	equ	0xFD9
 17984                           status	equ	0xFD8
 17985                           
 17986 ;; *************** function i2_printf *****************
 17987 ;; Defined at:
 17988 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17989 ;; Parameters:    Size  Location     Type
 17990 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 17991 ;;		 -> STR_86(30), STR_85(23), STR_84(40), STR_83(30), 
 17992 ;;		 -> STR_82(33), STR_81(1152), STR_79(58), STR_77(63), 
 17993 ;;		 -> STR_76(37), STR_75(102), STR_74(86), STR_72(25), 
 17994 ;;		 -> STR_70(24), STR_68(41), STR_66(40), STR_64(34), 
 17995 ;;		 -> STR_62(34), STR_60(32), STR_58(56), STR_56(34), 
 17996 ;;		 -> STR_54(34), STR_52(35), STR_50(47), STR_49(17), 
 17997 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 17998 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 17999 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 18000 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  printf          4   31[BANK0 ] unsigned long 
 18003 ;;  printf          4   27[BANK0 ] struct .
 18004 ;;  printf          3   35[BANK0 ] struct .
 18005 ;;  printf          2   38[BANK0 ] int 
 18006 ;;  printf          2   25[BANK0 ] int 
 18007 ;;  printf          2   23[BANK0 ] unsigned short 
 18008 ;;  printf          2   21[BANK0 ] PTR void [1]
 18009 ;;		 -> ?i2_printf(2), ?_printf(2), 
 18010 ;;  printf          2   19[BANK0 ] unsigned int 
 18011 ;;  printf          2   17[BANK0 ] PTR const unsigned char 
 18012 ;;		 -> printf@c(1), 
 18013 ;;  printf          2    0        int 
 18014 ;;  printf          1   40[BANK0 ] char 
 18015 ;;  printf          1    0        unsigned char 
 18016 ;; Return value:  Size  Location     Type
 18017 ;;                  2    6[BANK0 ] int 
 18018 ;; Registers used:
 18019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18020 ;; Tracked objects:
 18021 ;;		On entry : 0/0
 18022 ;;		On exit  : 0/0
 18023 ;;		Unchanged: 0/0
 18024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18026 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18027 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18028 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18029 ;;Total ram usage:       35 bytes
 18030 ;; Hardware stack levels used:    1
 18031 ;; Hardware stack levels required when called:    3
 18032 ;; This function calls:
 18033 ;;		i2___awdiv
 18034 ;;		i2___ftadd
 18035 ;;		i2___ftge
 18036 ;;		i2___ftmul
 18037 ;;		i2___ftneg
 18038 ;;		i2___ftsub
 18039 ;;		i2___fttol
 18040 ;;		i2___lldiv
 18041 ;;		i2___llmod
 18042 ;;		i2___lltoft
 18043 ;;		i2___wmul
 18044 ;;		i2__div_to_l_
 18045 ;;		i2__tdiv_to_l_
 18046 ;;		i2_fround
 18047 ;;		i2_isdigit
 18048 ;;		i2_putch
 18049 ;;		i2_scale
 18050 ;; This function is called by:
 18051 ;;		_EUSART2_Receive_ISR
 18052 ;; This function uses a non-reentrant model
 18053 ;;
 18054                           
 18055                           	psect	text73
 18056  0108E8                     __ptext73:
 18057                           	opt stack 0
 18058  0108E8                     i2_printf:
 18059                           	opt stack 13
 18060                           
 18061                           ;doprnt.c: 466: va_list ap;
 18062                           ;doprnt.c: 499: signed char c;
 18063                           ;doprnt.c: 501: int width;
 18064                           ;doprnt.c: 504: int prec;
 18065                           ;doprnt.c: 508: unsigned short flag;
 18066                           ;doprnt.c: 515: char d;
 18067                           ;doprnt.c: 516: double fval;
 18068                           ;doprnt.c: 517: int exp;
 18069                           ;doprnt.c: 523: union {
 18070                           ;doprnt.c: 524: unsigned long vd;
 18071                           ;doprnt.c: 525: double integ;
 18072                           ;doprnt.c: 526: } tmpval;
 18073                           ;doprnt.c: 528: unsigned long val;
 18074                           ;doprnt.c: 529: unsigned len;
 18075                           ;doprnt.c: 530: const char * cp;
 18076                           ;doprnt.c: 533: *ap = __va_start();
 18077                           
 18078                           ; BSR set to: 14
 18079                           ;incstack = 0
 18080  0108E8  0E68               	movlw	low (?i2_printf+2)
 18081  0108EA  0100               	movlb	0	; () banked
 18082  0108EC  6F75               	movwf	i2printf@ap& (0+255),b
 18083  0108EE  0E00               	movlw	high (?i2_printf+2)
 18084  0108F0  6F76               	movwf	(i2printf@ap+1)& (0+255),b
 18085                           
 18086                           ;doprnt.c: 536: while(c = *f++) {
 18087  0108F2  EFC6  F088         	goto	i2u1553_40
 18088  0108F6                     
 18089                           ; BSR set to: 0
 18090                           ;doprnt.c: 538: if(c != '%')
 18091                           
 18092                           ; BSR set to: 0
 18093  0108F6  0E25               	movlw	37
 18094  0108F8  1988               	xorwf	i2printf@c& (0+255),w,b
 18095  0108FA  B4D8               	btfsc	status,2,c
 18096  0108FC  D005               	goto	i2l1068
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;doprnt.c: 540: {
 18100                           ;doprnt.c: 541: (putch(c) );
 18101  0108FE  5188               	movf	i2printf@c& (0+255),w,b
 18102  010900  ECB7  F0AF         	call	i2_putch
 18103                           
 18104                           ;doprnt.c: 542: continue;
 18105  010904  EFC6  F088         	goto	i2u1553_40
 18106  010908                     i2l1068:
 18107                           
 18108                           ;doprnt.c: 543: }
 18109                           ;doprnt.c: 548: flag = 0;
 18110  010908  0E00               	movlw	0
 18111  01090A  0100               	movlb	0	; () banked
 18112  01090C  6F78               	movwf	(i2printf@flag+1)& (0+255),b
 18113  01090E  0E00               	movlw	0
 18114  010910  6F77               	movwf	i2printf@flag& (0+255),b
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;doprnt.c: 611: if(*f == '.') {
 18118  010912  C066  FFF6         	movff	i2printf@f,tblptrl
 18119  010916  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18120  01091A  0E00               	movlw	low (__mediumconst shr (0+16))
 18121  01091C  6EF8               	movwf	tblptru,c
 18122  01091E  0E0D               	movlw	(high __ramtop+-1)
 18123  010920  64F7               	cpfsgt	tblptrh,c
 18124  010922  D003               	bra	i2u1511_47
 18125  010924  0008               	tblrd		*
 18126  010926  50F5               	movf	tablat,w,c
 18127  010928  D005               	bra	i2u1511_40
 18128  01092A                     i2u1511_47:
 18129  01092A  CFF6 FFE1          	movff	tblptrl,fsr1l
 18130  01092E  CFF7 FFE2          	movff	tblptrh,fsr1h
 18131  010932  50E7               	movf	indf1,w,c
 18132  010934                     i2u1511_40:
 18133  010934  0A2E               	xorlw	46
 18134  010936  A4D8               	btfss	status,2,c
 18135  010938  D048               	goto	i2l1069
 18136                           
 18137                           ;doprnt.c: 612: flag |= 0x4000;
 18138  01093A  0100               	movlb	0	; () banked
 18139  01093C  8D78               	bsf	(i2printf@flag+1)& (0+255),6,b
 18140                           
 18141                           ;doprnt.c: 613: f++;
 18142  01093E  4B66               	infsnz	i2printf@f& (0+255),f,b
 18143  010940  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18144                           
 18145                           ; BSR set to: 0
 18146                           ;doprnt.c: 620: {
 18147                           ;doprnt.c: 621: prec = 0;
 18148  010942  0E00               	movlw	0
 18149  010944  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18150  010946  0E00               	movlw	0
 18151  010948  6F86               	movwf	i2printf@prec& (0+255),b
 18152                           
 18153                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 18154  01094A  D029               	goto	i2l1070
 18155  01094C                     
 18156                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 18157                           
 18158                           ; BSR set to: 0
 18159  01094C  C086  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 18160  010950  C087  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 18161  010954  0E00               	movlw	0
 18162  010956  6E12               	movwf	i2___wmul@multiplicand+1,c
 18163  010958  0E0A               	movlw	10
 18164  01095A  6E11               	movwf	i2___wmul@multiplicand,c
 18165  01095C  ECC4  F0AE         	call	i2___wmul	;wreg free
 18166  010960  C066  FFF6         	movff	i2printf@f,tblptrl
 18167  010964  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18168  010968  0E00               	movlw	low (__mediumconst shr (0+16))
 18169  01096A  6EF8               	movwf	tblptru,c
 18170  01096C  0E0D               	movlw	(high __ramtop+-1)
 18171  01096E  64F7               	cpfsgt	tblptrh,c
 18172  010970  D003               	bra	i2u1513_47
 18173  010972  0008               	tblrd		*
 18174  010974  50F5               	movf	tablat,w,c
 18175  010976  D005               	bra	i2u1513_40
 18176  010978                     i2u1513_47:
 18177  010978  CFF6 FFE1          	movff	tblptrl,fsr1l
 18178  01097C  CFF7 FFE2          	movff	tblptrh,fsr1h
 18179  010980  50E7               	movf	indf1,w,c
 18180  010982                     i2u1513_40:
 18181  010982  0100               	movlb	0	; () banked
 18182  010984  6F68               	movwf	??i2_printf& (0+255),b
 18183  010986  5168               	movf	??i2_printf& (0+255),w,b
 18184  010988  260F               	addwf	?i2___wmul,f,c
 18185  01098A  0E00               	movlw	0
 18186  01098C  2210               	addwfc	?i2___wmul+1,f,c
 18187  01098E  0ED0               	movlw	208
 18188  010990  240F               	addwf	?i2___wmul,w,c
 18189  010992  6F86               	movwf	i2printf@prec& (0+255),b
 18190  010994  0EFF               	movlw	255
 18191  010996  2010               	addwfc	?i2___wmul+1,w,c
 18192  010998  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18193                           
 18194                           ; BSR set to: 0
 18195  01099A  4B66               	infsnz	i2printf@f& (0+255),f,b
 18196  01099C  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18197  01099E                     i2l1070:
 18198                           
 18199                           ; BSR set to: 0
 18200                           
 18201                           ; BSR set to: 0
 18202  01099E  C066  FFF6         	movff	i2printf@f,tblptrl
 18203  0109A2  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18204  0109A6  0E00               	movlw	low (__mediumconst shr (0+16))
 18205  0109A8  6EF8               	movwf	tblptru,c
 18206  0109AA  0E0D               	movlw	(high __ramtop+-1)
 18207  0109AC  64F7               	cpfsgt	tblptrh,c
 18208  0109AE  D003               	bra	i2u1514_47
 18209  0109B0  0008               	tblrd		*
 18210  0109B2  50F5               	movf	tablat,w,c
 18211  0109B4  D005               	bra	i2u1514_40
 18212  0109B6                     i2u1514_47:
 18213  0109B6  CFF6 FFE1          	movff	tblptrl,fsr1l
 18214  0109BA  CFF7 FFE2          	movff	tblptrh,fsr1h
 18215  0109BE  50E7               	movf	indf1,w,c
 18216  0109C0                     i2u1514_40:
 18217  0109C0  EC0C  F0AF         	call	i2_isdigit
 18218  0109C4  A0D8               	btfss	status,0,c
 18219  0109C6  D035               	goto	i2l1074
 18220  0109C8  D7C1               	goto	i2l1071
 18221  0109CA                     i2l1069:
 18222                           
 18223                           ;doprnt.c: 626: prec = 0;
 18224  0109CA  0E00               	movlw	0
 18225  0109CC  0100               	movlb	0	; () banked
 18226  0109CE  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18227  0109D0  0E00               	movlw	0
 18228  0109D2  6F86               	movwf	i2printf@prec& (0+255),b
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;doprnt.c: 628: flag |= 0x1000;
 18232  0109D4  8978               	bsf	(i2printf@flag+1)& (0+255),4,b
 18233                           
 18234                           ; BSR set to: 0
 18235                           ;doprnt.c: 630: }
 18236                           ;doprnt.c: 635: switch(c = *f++) {
 18237  0109D6  D02D               	goto	i2l1074
 18238  0109D8                     
 18239                           ; BSR set to: 0
 18240                           ;doprnt.c: 663: flag |= 0x400;
 18241                           
 18242                           ; BSR set to: 0
 18243  0109D8  8578               	bsf	(i2printf@flag+1)& (0+255),2,b
 18244                           
 18245                           ; BSR set to: 0
 18246                           ;doprnt.c: 698: case 'i':
 18247                           ;doprnt.c: 699: break;
 18248                           
 18249                           ; BSR set to: 0
 18250                           
 18251                           ;doprnt.c: 697: case 'd':
 18252                           
 18253                           ;doprnt.c: 664: break;
 18254  0109DA  D052               	goto	i2l1078
 18255  0109DC                     
 18256                           ; BSR set to: 0
 18257                           ;doprnt.c: 753: if(prec && prec < len)
 18258                           
 18259                           ; BSR set to: 0
 18260  0109DC  5186               	movf	i2printf@prec& (0+255),w,b
 18261  0109DE  1187               	iorwf	(i2printf@prec+1)& (0+255),w,b
 18262  0109E0  B4D8               	btfsc	status,2,c
 18263  0109E2  D015               	goto	i2l1083
 18264                           
 18265                           ; BSR set to: 0
 18266  0109E4  5173               	movf	i2printf@len& (0+255),w,b
 18267  0109E6  5D86               	subwf	i2printf@prec& (0+255),w,b
 18268  0109E8  5174               	movf	(i2printf@len+1)& (0+255),w,b
 18269  0109EA  5987               	subwfb	(i2printf@prec+1)& (0+255),w,b
 18270  0109EC  B0D8               	btfsc	status,0,c
 18271  0109EE  D00F               	goto	i2l1083
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;doprnt.c: 754: len = prec;
 18275  0109F0  C086  F073         	movff	i2printf@prec,i2printf@len
 18276  0109F4  C087  F074         	movff	i2printf@prec+1,i2printf@len+1
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;doprnt.c: 767: while(len--)
 18280  0109F8  D00A               	goto	i2l1083
 18281  0109FA                     i2l11961:
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;doprnt.c: 768: (putch(*cp++) );
 18285  0109FA  C071  FFD9         	movff	i2printf@cp,fsr2l
 18286  0109FE  C072  FFDA         	movff	i2printf@cp+1,fsr2h
 18287  010A02  50DF               	movf	indf2,w,c
 18288  010A04  ECB7  F0AF         	call	i2_putch
 18289  010A08  0100               	movlb	0	; () banked
 18290  010A0A  4B71               	infsnz	i2printf@cp& (0+255),f,b
 18291  010A0C  2B72               	incf	(i2printf@cp+1)& (0+255),f,b
 18292  010A0E                     i2l1083:
 18293                           
 18294                           ; BSR set to: 0
 18295                           
 18296                           ; BSR set to: 0
 18297  010A0E  0773               	decf	i2printf@len& (0+255),f,b
 18298  010A10  A0D8               	btfss	status,0,c
 18299  010A12  0774               	decf	(i2printf@len+1)& (0+255),f,b
 18300  010A14  2973               	incf	i2printf@len& (0+255),w,b
 18301  010A16  E1F1               	bnz	i2l11961
 18302  010A18  2974               	incf	(i2printf@len+1)& (0+255),w,b
 18303  010A1A  B4D8               	btfsc	status,2,c
 18304  010A1C  D3B7               	goto	i2u1553_40
 18305  010A1E  D7ED               	goto	i2l1084
 18306  010A20                     
 18307                           ; BSR set to: 0
 18308                           ;doprnt.c: 805: cp = (char *)&c;
 18309                           
 18310                           ; BSR set to: 0
 18311  010A20  0E88               	movlw	low i2printf@c
 18312  010A22  6F71               	movwf	i2printf@cp& (0+255),b
 18313  010A24  0E00               	movlw	high i2printf@c
 18314  010A26  6F72               	movwf	(i2printf@cp+1)& (0+255),b
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;doprnt.c: 806: len = 1;
 18318  010A28  0E00               	movlw	0
 18319  010A2A  6F74               	movwf	(i2printf@len+1)& (0+255),b
 18320  010A2C  0E01               	movlw	1
 18321  010A2E  6F73               	movwf	i2printf@len& (0+255),b
 18322                           
 18323                           ;doprnt.c: 807: goto dostring;
 18324  010A30  D7D5               	goto	i2l1081
 18325  010A32                     i2l1074:
 18326                           
 18327                           ; BSR set to: 0
 18328  010A32  0100               	movlb	0	; () banked
 18329  010A34  5166               	movf	i2printf@f& (0+255),w,b
 18330  010A36  6F68               	movwf	??i2_printf& (0+255),b
 18331  010A38  5167               	movf	(i2printf@f+1)& (0+255),w,b
 18332  010A3A  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18333  010A3C  4B66               	infsnz	i2printf@f& (0+255),f,b
 18334  010A3E  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18335  010A40  C068  FFF6         	movff	??i2_printf,tblptrl
 18336  010A44  C069  FFF7         	movff	??i2_printf+1,tblptrh
 18337  010A48  0E00               	movlw	low (__mediumconst shr (0+16))
 18338  010A4A  6EF8               	movwf	tblptru,c
 18339  010A4C  0E0D               	movlw	(high __ramtop+-1)
 18340  010A4E  64F7               	cpfsgt	tblptrh,c
 18341  010A50  D003               	bra	i2u1519_47
 18342  010A52  0008               	tblrd		*
 18343  010A54  50F5               	movf	tablat,w,c
 18344  010A56  D005               	bra	i2u1519_40
 18345  010A58                     i2u1519_47:
 18346  010A58  CFF6 FFE1          	movff	tblptrl,fsr1l
 18347  010A5C  CFF7 FFE2          	movff	tblptrh,fsr1h
 18348  010A60  50E7               	movf	indf1,w,c
 18349  010A62                     i2u1519_40:
 18350  010A62  0100               	movlb	0	; () banked
 18351  010A64  6F88               	movwf	i2printf@c& (0+255),b
 18352  010A66  5188               	movf	i2printf@c& (0+255),w,b
 18353                           
 18354                           ; Switch size 1, requested type "space"
 18355                           ; Number of cases is 4, Range of values is 0 to 105
 18356                           ; switch strategies available:
 18357                           ; Name         Instructions Cycles
 18358                           ; simple_byte           13     7 (average)
 18359                           ;	Chosen strategy is simple_byte
 18360  010A68  0A00               	xorlw	0	; case 0
 18361  010A6A  B4D8               	btfsc	status,2,c
 18362  010A6C  0012               	return	
 18363  010A6E  0A64               	xorlw	100	; case 100
 18364  010A70  B4D8               	btfsc	status,2,c
 18365  010A72  D006               	goto	i2l1078
 18366  010A74  0A02               	xorlw	2	; case 102
 18367  010A76  B4D8               	btfsc	status,2,c
 18368  010A78  D7AF               	goto	i2l1077
 18369  010A7A  0A0F               	xorlw	15	; case 105
 18370  010A7C  A4D8               	btfss	status,2,c
 18371  010A7E  D7D0               	goto	i2l1086
 18372  010A80                     i2l1078:
 18373                           
 18374                           ; BSR set to: 0
 18375                           ;doprnt.c: 825: if(flag & (0x700)) {
 18376                           
 18377                           ; BSR set to: 0
 18378  010A80  0E07               	movlw	7
 18379  010A82  1578               	andwf	(i2printf@flag+1)& (0+255),w,b
 18380  010A84  B4D8               	btfsc	status,2,c
 18381  010A86  D2C0               	goto	i2l1087
 18382                           
 18383                           ; BSR set to: 0
 18384                           ;doprnt.c: 827: if(flag & 0x1000)
 18385  010A88  A978               	btfss	(i2printf@flag+1)& (0+255),4,b
 18386  010A8A  D004               	goto	i2l1088
 18387                           
 18388                           ; BSR set to: 0
 18389                           ;doprnt.c: 829: prec = 6;
 18390  010A8C  0E00               	movlw	0
 18391  010A8E  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18392  010A90  0E06               	movlw	6
 18393  010A92  6F86               	movwf	i2printf@prec& (0+255),b
 18394  010A94                     i2l1088:
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 18398                           
 18399                           ; BSR set to: 0
 18400  010A94  C075  FFD9         	movff	i2printf@ap,fsr2l
 18401  010A98  C076  FFDA         	movff	i2printf@ap+1,fsr2h
 18402  010A9C  CFDE F083          	movff	postinc2,i2printf@fval
 18403  010AA0  CFDE F084          	movff	postinc2,i2printf@fval+1
 18404  010AA4  CFDD F085          	movff	postdec2,i2printf@fval+2
 18405                           
 18406                           ; BSR set to: 0
 18407  010AA8  0E03               	movlw	3
 18408  010AAA  2775               	addwf	i2printf@ap& (0+255),f,b
 18409  010AAC  0E00               	movlw	0
 18410  010AAE  2376               	addwfc	(i2printf@ap+1)& (0+255),f,b
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;doprnt.c: 831: if(fval < 0.0) {
 18414  010AB0  AF85               	btfss	(i2printf@fval+2)& (0+255),7,b
 18415  010AB2  D011               	goto	i2l1089
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;doprnt.c: 832: fval = -fval;
 18419  010AB4  C083  F024         	movff	i2printf@fval,i2___ftneg@f1
 18420  010AB8  C084  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 18421  010ABC  C085  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 18422  010AC0  ECD7  F0AE         	call	i2___ftneg	;wreg free
 18423  010AC4  C024  F083         	movff	?i2___ftneg,i2printf@fval
 18424  010AC8  C025  F084         	movff	?i2___ftneg+1,i2printf@fval+1
 18425  010ACC  C026  F085         	movff	?i2___ftneg+2,i2printf@fval+2
 18426                           
 18427                           ;doprnt.c: 833: flag |= 0x03;
 18428  010AD0  0E03               	movlw	3
 18429  010AD2  0100               	movlb	0	; () banked
 18430  010AD4  1377               	iorwf	i2printf@flag& (0+255),f,b
 18431  010AD6                     i2l1089:
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;doprnt.c: 834: }
 18435                           ;doprnt.c: 835: exp = 0;
 18436                           
 18437                           ; BSR set to: 0
 18438  010AD6  0E00               	movlw	0
 18439  010AD8  6F7A               	movwf	(i2printf@exp+1)& (0+255),b
 18440  010ADA  0E00               	movlw	0
 18441  010ADC  6F79               	movwf	i2printf@exp& (0+255),b
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;doprnt.c: 836: if( fval!=0) {
 18445  010ADE  5183               	movf	i2printf@fval& (0+255),w,b
 18446  010AE0  1184               	iorwf	(i2printf@fval+1)& (0+255),w,b
 18447  010AE2  1185               	iorwf	(i2printf@fval+2)& (0+255),w,b
 18448  010AE4  B4D8               	btfsc	status,2,c
 18449  010AE6  D086               	goto	i2l1094
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 18453  010AE8  0E82               	movlw	130
 18454  010AEA  6F68               	movwf	??i2_printf& (0+255),b
 18455  010AEC  0EFF               	movlw	255
 18456  010AEE  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18457  010AF0  C083  F06A         	movff	i2printf@fval,??i2_printf+2
 18458  010AF4  C084  F06B         	movff	i2printf@fval+1,??i2_printf+3
 18459  010AF8  C085  F06C         	movff	i2printf@fval+2,??i2_printf+4
 18460  010AFC  C086  F06D         	movff	i2printf@fval+3,??i2_printf+5
 18461  010B00  0E10               	movlw	16
 18462  010B02  D005               	goto	i2u1524_40
 18463  010B04                     i2u1524_45:
 18464  010B04  90D8               	bcf	status,0,c
 18465  010B06  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 18466  010B08  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 18467  010B0A  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 18468  010B0C  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 18469  010B0E                     i2u1524_40:
 18470  010B0E  2EE8               	decfsz	wreg,f,c
 18471  010B10  D7F9               	goto	i2u1524_45
 18472  010B12  516A               	movf	(??i2_printf+2)& (0+255),w,b
 18473  010B14  2568               	addwf	??i2_printf& (0+255),w,b
 18474  010B16  6F79               	movwf	i2printf@exp& (0+255),b
 18475  010B18  0E00               	movlw	0
 18476  010B1A  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 18477  010B1C  6F7A               	movwf	(i2printf@exp+1)& (0+255),b
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;doprnt.c: 838: exp--;
 18481  010B1E  0779               	decf	i2printf@exp& (0+255),f,b
 18482  010B20  A0D8               	btfss	status,0,c
 18483  010B22  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18484                           
 18485                           ; BSR set to: 0
 18486                           ;doprnt.c: 839: exp *= 3;
 18487  010B24  C079  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 18488  010B28  C07A  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 18489  010B2C  0E00               	movlw	0
 18490  010B2E  6E12               	movwf	i2___wmul@multiplicand+1,c
 18491  010B30  0E03               	movlw	3
 18492  010B32  6E11               	movwf	i2___wmul@multiplicand,c
 18493  010B34  ECC4  F0AE         	call	i2___wmul	;wreg free
 18494  010B38  C00F  F079         	movff	?i2___wmul,i2printf@exp
 18495  010B3C  C010  F07A         	movff	?i2___wmul+1,i2printf@exp+1
 18496                           
 18497                           ;doprnt.c: 840: exp /= 10;
 18498  010B40  C079  F007         	movff	i2printf@exp,i2___awdiv@dividend
 18499  010B44  C07A  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 18500  010B48  0E00               	movlw	0
 18501  010B4A  6E0A               	movwf	i2___awdiv@divisor+1,c
 18502  010B4C  0E0A               	movlw	10
 18503  010B4E  6E09               	movwf	i2___awdiv@divisor,c
 18504  010B50  EC5D  F0A8         	call	i2___awdiv	;wreg free
 18505  010B54  C007  F079         	movff	?i2___awdiv,i2printf@exp
 18506  010B58  C008  F07A         	movff	?i2___awdiv+1,i2printf@exp+1
 18507                           
 18508                           ;doprnt.c: 841: if(exp < 0)
 18509  010B5C  0100               	movlb	0	; () banked
 18510  010B5E  AF7A               	btfss	(i2printf@exp+1)& (0+255),7,b
 18511  010B60  D003               	goto	i2l1091
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;doprnt.c: 842: exp--;
 18515  010B62  0779               	decf	i2printf@exp& (0+255),f,b
 18516  010B64  A0D8               	btfss	status,0,c
 18517  010B66  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18518  010B68                     i2l1091:
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 18522                           
 18523                           ; BSR set to: 0
 18524  010B68  5179               	movf	i2printf@exp& (0+255),w,b
 18525  010B6A  0800               	sublw	0
 18526  010B6C  ECF4  F08E         	call	i2_scale
 18527  010B70  C036  F07B         	movff	?i2_scale,i2printf@tmpval
 18528  010B74  C037  F07C         	movff	?i2_scale+1,i2printf@tmpval+1
 18529  010B78  C038  F07D         	movff	?i2_scale+2,i2printf@tmpval+2
 18530                           
 18531                           ;doprnt.c: 847: tmpval.integ *= fval;
 18532  010B7C  C07B  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 18533  010B80  C07C  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 18534  010B84  C07D  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 18535  010B88  C083  F02A         	movff	i2printf@fval,i2___ftmul@f2
 18536  010B8C  C084  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 18537  010B90  C085  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 18538  010B94  EC55  F0A2         	call	i2___ftmul	;wreg free
 18539  010B98  C027  F07B         	movff	?i2___ftmul,i2printf@tmpval
 18540  010B9C  C028  F07C         	movff	?i2___ftmul+1,i2printf@tmpval+1
 18541  010BA0  C029  F07D         	movff	?i2___ftmul+2,i2printf@tmpval+2
 18542                           
 18543                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 18544  010BA4  C07B  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 18545  010BA8  C07C  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 18546  010BAC  C07D  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 18547  010BB0  0E00               	movlw	0
 18548  010BB2  6E2D               	movwf	i2___ftge@ff2,c
 18549  010BB4  0E80               	movlw	128
 18550  010BB6  6E2E               	movwf	i2___ftge@ff2+1,c
 18551  010BB8  0E3F               	movlw	63
 18552  010BBA  6E2F               	movwf	i2___ftge@ff2+2,c
 18553  010BBC  EC4A  F0A7         	call	i2___ftge	;wreg free
 18554  010BC0  B0D8               	btfsc	status,0,c
 18555  010BC2  D005               	goto	i2l1092
 18556                           
 18557                           ;doprnt.c: 849: exp--;
 18558  010BC4  0100               	movlb	0	; () banked
 18559  010BC6  0779               	decf	i2printf@exp& (0+255),f,b
 18560  010BC8  A0D8               	btfss	status,0,c
 18561  010BCA  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18562  010BCC  D013               	goto	i2l1094
 18563  010BCE                     i2l1092:
 18564                           
 18565                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 18566                           
 18567                           ; BSR set to: 0
 18568  010BCE  C07B  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 18569  010BD2  C07C  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 18570  010BD6  C07D  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 18571  010BDA  0E00               	movlw	0
 18572  010BDC  6E2D               	movwf	i2___ftge@ff2,c
 18573  010BDE  0E20               	movlw	32
 18574  010BE0  6E2E               	movwf	i2___ftge@ff2+1,c
 18575  010BE2  0E41               	movlw	65
 18576  010BE4  6E2F               	movwf	i2___ftge@ff2+2,c
 18577  010BE6  EC4A  F0A7         	call	i2___ftge	;wreg free
 18578  010BEA  A0D8               	btfss	status,0,c
 18579  010BEC  D003               	goto	i2l1094
 18580                           
 18581                           ;doprnt.c: 851: exp++;
 18582  010BEE  0100               	movlb	0	; () banked
 18583  010BF0  4B79               	infsnz	i2printf@exp& (0+255),f,b
 18584  010BF2  2B7A               	incf	(i2printf@exp+1)& (0+255),f,b
 18585  010BF4                     i2l1094:
 18586                           
 18587                           ;doprnt.c: 852: }
 18588                           ;doprnt.c: 1112: if(prec <= 12)
 18589                           
 18590                           ; BSR set to: 0
 18591                           
 18592                           ; BSR set to: 0
 18593                           
 18594                           ; BSR set to: 0
 18595  010BF4  0100               	movlb	0	; () banked
 18596  010BF6  BF87               	btfsc	(i2printf@prec+1)& (0+255),7,b
 18597  010BF8  D006               	goto	i2u1528_40
 18598  010BFA  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 18599  010BFC  E11B               	bnz	i2l12023
 18600  010BFE  0E0D               	movlw	13
 18601  010C00  5D86               	subwf	i2printf@prec& (0+255),w,b
 18602  010C02  B0D8               	btfsc	status,0,c
 18603  010C04  D017               	goto	i2l1095
 18604  010C06                     i2u1528_40:
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;doprnt.c: 1113: fval += fround(prec);
 18608  010C06  C083  F040         	movff	i2printf@fval,i2___ftadd@f1
 18609  010C0A  C084  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 18610  010C0E  C085  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 18611  010C12  5186               	movf	i2printf@prec& (0+255),w,b
 18612  010C14  EC21  F096         	call	i2_fround
 18613  010C18  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 18614  010C1C  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 18615  010C20  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 18616  010C24  EC5B  F09C         	call	i2___ftadd	;wreg free
 18617  010C28  C040  F083         	movff	?i2___ftadd,i2printf@fval
 18618  010C2C  C041  F084         	movff	?i2___ftadd+1,i2printf@fval+1
 18619  010C30  C042  F085         	movff	?i2___ftadd+2,i2printf@fval+2
 18620  010C34                     i2l1095:
 18621  010C34                     i2l12023:
 18622                           
 18623                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 18624  010C34  0100               	movlb	0	; () banked
 18625  010C36  BF7A               	btfsc	(i2printf@exp+1)& (0+255),7,b
 18626  010C38  D006               	goto	i2u1529_40
 18627  010C3A  517A               	movf	(i2printf@exp+1)& (0+255),w,b
 18628  010C3C  E120               	bnz	i2l12031
 18629  010C3E  0E0A               	movlw	10
 18630  010C40  5D79               	subwf	i2printf@exp& (0+255),w,b
 18631  010C42  B0D8               	btfsc	status,0,c
 18632  010C44  D01C               	goto	i2u1532_40
 18633  010C46                     i2u1529_40:
 18634                           
 18635                           ; BSR set to: 0
 18636  010C46  5183               	movf	i2printf@fval& (0+255),w,b
 18637  010C48  1184               	iorwf	(i2printf@fval+1)& (0+255),w,b
 18638  010C4A  1185               	iorwf	(i2printf@fval+2)& (0+255),w,b
 18639  010C4C  B4D8               	btfsc	status,2,c
 18640  010C4E  D056               	goto	i2l1096
 18641                           
 18642                           ; BSR set to: 0
 18643  010C50  C083  F03D         	movff	i2printf@fval,i2___fttol@f1
 18644  010C54  C084  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 18645  010C58  C085  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 18646  010C5C  ECDB  F0A1         	call	i2___fttol	;wreg free
 18647  010C60  503D               	movf	?i2___fttol,w,c
 18648  010C62  103E               	iorwf	?i2___fttol+1,w,c
 18649  010C64  103F               	iorwf	?i2___fttol+2,w,c
 18650  010C66  1040               	iorwf	?i2___fttol+3,w,c
 18651  010C68  A4D8               	btfss	status,2,c
 18652  010C6A  D048               	goto	i2l1096
 18653  010C6C  0100               	movlb	0	; () banked
 18654  010C6E  BF7A               	btfsc	(i2printf@exp+1)& (0+255),7,b
 18655  010C70  D045               	goto	i2l1096
 18656  010C72  517A               	movf	(i2printf@exp+1)& (0+255),w,b
 18657  010C74  E104               	bnz	i2l12031
 18658  010C76  0E02               	movlw	2
 18659  010C78  5D79               	subwf	i2printf@exp& (0+255),w,b
 18660  010C7A  A0D8               	btfss	status,0,c
 18661  010C7C  D03F               	goto	i2l1096
 18662  010C7E                     i2u1532_40:
 18663  010C7E                     i2l12031:
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 18667  010C7E  C07B  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 18668  010C82  C07C  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 18669  010C86  C07D  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 18670  010C8A  0E70               	movlw	112
 18671  010C8C  6E2D               	movwf	i2___ftge@ff2,c
 18672  010C8E  0E89               	movlw	137
 18673  010C90  6E2E               	movwf	i2___ftge@ff2+1,c
 18674  010C92  0E40               	movlw	64
 18675  010C94  6E2F               	movwf	i2___ftge@ff2+2,c
 18676  010C96  EC4A  F0A7         	call	i2___ftge	;wreg free
 18677  010C9A  B0D8               	btfsc	status,0,c
 18678  010C9C  D003               	goto	i2l1099
 18679                           
 18680                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 18681  010C9E  0100               	movlb	0	; () banked
 18682  010CA0  0EF7               	movlw	247
 18683  010CA2  D002               	goto	L2
 18684  010CA4                     i2l1099:
 18685                           
 18686                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 18687                           
 18688                           ; BSR set to: 0
 18689  010CA4  0100               	movlb	0	; () banked
 18690  010CA6  0EF8               	movlw	248
 18691  010CA8                     L2:
 18692  010CA8  2779               	addwf	i2printf@exp& (0+255),f,b
 18693  010CAA  0EFF               	movlw	255
 18694  010CAC  237A               	addwfc	(i2printf@exp+1)& (0+255),f,b
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;doprnt.c: 1124: }
 18698                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 18699                           
 18700                           ; BSR set to: 0
 18701  010CAE  5179               	movf	i2printf@exp& (0+255),w,b
 18702  010CB0  ECF4  F08E         	call	i2_scale
 18703  010CB4  C036  F07B         	movff	?i2_scale,i2printf@tmpval
 18704  010CB8  C037  F07C         	movff	?i2_scale+1,i2printf@tmpval+1
 18705  010CBC  C038  F07D         	movff	?i2_scale+2,i2printf@tmpval+2
 18706                           
 18707                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 18708  010CC0  C083  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 18709  010CC4  C084  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 18710  010CC8  C085  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 18711  010CCC  C07B  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 18712  010CD0  C07C  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 18713  010CD4  C07D  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 18714  010CD8  EC94  F09E         	call	i2__tdiv_to_l_	;wreg free
 18715  010CDC  C001  F07F         	movff	?i2__tdiv_to_l_,i2printf@val
 18716  010CE0  C002  F080         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 18717  010CE4  C003  F081         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 18718  010CE8  C004  F082         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 18719                           
 18720                           ;doprnt.c: 1129: fval = 0.0;
 18721  010CEC  0E00               	movlw	0
 18722  010CEE  0100               	movlb	0	; () banked
 18723  010CF0  6F83               	movwf	i2printf@fval& (0+255),b
 18724  010CF2  0E00               	movlw	0
 18725  010CF4  6F84               	movwf	(i2printf@fval+1)& (0+255),b
 18726  010CF6  0E00               	movlw	0
 18727  010CF8  6F85               	movwf	(i2printf@fval+2)& (0+255),b
 18728                           
 18729                           ;doprnt.c: 1130: } else {
 18730  010CFA  D033               	goto	i2l1105
 18731  010CFC                     i2l1096:
 18732                           
 18733                           ;doprnt.c: 1131: val = (unsigned long)fval;
 18734                           
 18735                           ; BSR set to: 0
 18736  010CFC  C083  F03D         	movff	i2printf@fval,i2___fttol@f1
 18737  010D00  C084  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 18738  010D04  C085  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 18739  010D08  ECDB  F0A1         	call	i2___fttol	;wreg free
 18740  010D0C  C03D  F07F         	movff	?i2___fttol,i2printf@val
 18741  010D10  C03E  F080         	movff	?i2___fttol+1,i2printf@val+1
 18742  010D14  C03F  F081         	movff	?i2___fttol+2,i2printf@val+2
 18743  010D18  C040  F082         	movff	?i2___fttol+3,i2printf@val+3
 18744                           
 18745                           ;doprnt.c: 1132: fval -= (double)val;
 18746  010D1C  C083  F060         	movff	i2printf@fval,i2___ftsub@f1
 18747  010D20  C084  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 18748  010D24  C085  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 18749  010D28  C07F  F009         	movff	i2printf@val,i2___lltoft@c
 18750  010D2C  C080  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 18751  010D30  C081  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 18752  010D34  C082  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 18753  010D38  EC61  F0AB         	call	i2___lltoft	;wreg free
 18754  010D3C  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 18755  010D40  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 18756  010D44  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 18757  010D48  EC5C  F0AD         	call	i2___ftsub	;wreg free
 18758  010D4C  C060  F083         	movff	?i2___ftsub,i2printf@fval
 18759  010D50  C061  F084         	movff	?i2___ftsub+1,i2printf@fval+1
 18760  010D54  C062  F085         	movff	?i2___ftsub+2,i2printf@fval+2
 18761                           
 18762                           ;doprnt.c: 1133: exp = 0;
 18763  010D58  0E00               	movlw	0
 18764  010D5A  0100               	movlb	0	; () banked
 18765  010D5C  6F7A               	movwf	(i2printf@exp+1)& (0+255),b
 18766  010D5E  0E00               	movlw	0
 18767  010D60  6F79               	movwf	i2printf@exp& (0+255),b
 18768  010D62                     i2l1105:
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;doprnt.c: 1134: }
 18772                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 18773                           
 18774                           ; BSR set to: 0
 18775  010D62  0E01               	movlw	1
 18776  010D64  6F88               	movwf	i2printf@c& (0+255),b
 18777  010D66                     i2l12051:
 18778                           
 18779                           ; BSR set to: 0
 18780  010D66  0E0A               	movlw	10
 18781  010D68  1988               	xorwf	i2printf@c& (0+255),w,b
 18782  010D6A  B4D8               	btfsc	status,2,c
 18783  010D6C  D01B               	goto	i2u1536_40
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;doprnt.c: 1137: if(val < dpowers[c])
 18787                           
 18788                           ; BSR set to: 0
 18789                           
 18790                           ; BSR set to: 0
 18791  010D6E  5188               	movf	i2printf@c& (0+255),w,b
 18792  010D70  0D04               	mullw	4
 18793  010D72  0E59               	movlw	low _dpowers
 18794  010D74  24F3               	addwf	prodl,w,c
 18795  010D76  6EF6               	movwf	tblptrl,c
 18796  010D78  0EF4               	movlw	high _dpowers
 18797  010D7A  20F4               	addwfc	prodh,w,c
 18798  010D7C  6EF7               	movwf	tblptrh,c
 18799  010D7E                     	if	1	;There are 3 active tblptr bytes
 18800  010D7E  6AF8               	clrf	tblptru,c
 18801  010D80  0E00               	movlw	low (__mediumconst shr (0+16))
 18802  010D82  22F8               	addwfc	tblptru,f,c
 18803  010D84                     	endif
 18804  010D84  0009               	tblrd		*+
 18805  010D86  50F5               	movf	tablat,w,c
 18806  010D88  5D7F               	subwf	i2printf@val& (0+255),w,b
 18807  010D8A  0009               	tblrd		*+
 18808  010D8C  50F5               	movf	tablat,w,c
 18809  010D8E  5980               	subwfb	(i2printf@val+1)& (0+255),w,b
 18810  010D90  0009               	tblrd		*+
 18811  010D92  50F5               	movf	tablat,w,c
 18812  010D94  5981               	subwfb	(i2printf@val+2)& (0+255),w,b
 18813  010D96  0009               	tblrd		*+
 18814  010D98  50F5               	movf	tablat,w,c
 18815  010D9A  5982               	subwfb	(i2printf@val+3)& (0+255),w,b
 18816  010D9C  A0D8               	btfss	status,0,c
 18817  010D9E  D002               	goto	i2u1536_40
 18818                           
 18819                           ; BSR set to: 0
 18820                           
 18821                           ; BSR set to: 0
 18822                           
 18823                           ; BSR set to: 0
 18824                           ;doprnt.c: 1138: break;
 18825  010DA0  2B88               	incf	i2printf@c& (0+255),f,b
 18826  010DA2  D7E1               	goto	i2l12051
 18827  010DA4                     i2u1536_40:
 18828                           
 18829                           ; BSR set to: 0
 18830                           ;doprnt.c: 1175: {
 18831                           ;doprnt.c: 1188: if(flag & 0x03)
 18832                           
 18833                           ; BSR set to: 0
 18834  010DA4  0E03               	movlw	3
 18835  010DA6  1577               	andwf	i2printf@flag& (0+255),w,b
 18836  010DA8  6F68               	movwf	??i2_printf& (0+255),b
 18837  010DAA  0E00               	movlw	0
 18838  010DAC  1578               	andwf	(i2printf@flag+1)& (0+255),w,b
 18839  010DAE  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18840  010DB0  5168               	movf	??i2_printf& (0+255),w,b
 18841  010DB2  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 18842  010DB4  B4D8               	btfsc	status,2,c
 18843  010DB6  D04D               	goto	i2l1110
 18844                           
 18845                           ; BSR set to: 0
 18846                           ;doprnt.c: 1190: (putch('-') );
 18847  010DB8  0E2D               	movlw	45
 18848  010DBA  ECB7  F0AF         	call	i2_putch
 18849                           
 18850                           ;doprnt.c: 1195: }
 18851                           ;doprnt.c: 1196: while(c--) {
 18852  010DBE  D049               	goto	i2l1110
 18853  010DC0                     
 18854                           ;doprnt.c: 1200: {
 18855                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 18856  010DC0  C07F  F001         	movff	i2printf@val,i2___lldiv@dividend
 18857  010DC4  C080  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 18858  010DC8  C081  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 18859  010DCC  C082  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 18860  010DD0  0100               	movlb	0	; () banked
 18861  010DD2  5188               	movf	i2printf@c& (0+255),w,b
 18862  010DD4  0D04               	mullw	4
 18863  010DD6  0E59               	movlw	low _dpowers
 18864  010DD8  24F3               	addwf	prodl,w,c
 18865  010DDA  6EF6               	movwf	tblptrl,c
 18866  010DDC  0EF4               	movlw	high _dpowers
 18867  010DDE  20F4               	addwfc	prodh,w,c
 18868  010DE0  6EF7               	movwf	tblptrh,c
 18869  010DE2                     	if	1	;There are 3 active tblptr bytes
 18870  010DE2  6AF8               	clrf	tblptru,c
 18871  010DE4  0E00               	movlw	low (__mediumconst shr (0+16))
 18872  010DE6  22F8               	addwfc	tblptru,f,c
 18873  010DE8                     	endif
 18874  010DE8  0009               	tblrd		*+
 18875  010DEA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 18876  010DEE  0009               	tblrd		*+
 18877  010DF0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 18878  010DF4  0009               	tblrd		*+
 18879  010DF6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 18880  010DFA  000A               	tblrd		*-
 18881  010DFC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 18882  010E00  EC9F  F0A8         	call	i2___lldiv	;wreg free
 18883  010E04  C001  F07B         	movff	?i2___lldiv,i2printf@tmpval
 18884  010E08  C002  F07C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 18885  010E0C  C003  F07D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 18886  010E10  C004  F07E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 18887                           
 18888                           ;doprnt.c: 1202: tmpval.vd %= 10;
 18889  010E14  C07B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 18890  010E18  C07C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 18891  010E1C  C07D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 18892  010E20  C07E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 18893  010E24  0E0A               	movlw	10
 18894  010E26  6E12               	movwf	i2___llmod@divisor,c
 18895  010E28  0E00               	movlw	0
 18896  010E2A  6E13               	movwf	i2___llmod@divisor+1,c
 18897  010E2C  0E00               	movlw	0
 18898  010E2E  6E14               	movwf	i2___llmod@divisor+2,c
 18899  010E30  0E00               	movlw	0
 18900  010E32  6E15               	movwf	i2___llmod@divisor+3,c
 18901  010E34  EC9D  F0AA         	call	i2___llmod	;wreg free
 18902  010E38  C00E  F07B         	movff	?i2___llmod,i2printf@tmpval
 18903  010E3C  C00F  F07C         	movff	?i2___llmod+1,i2printf@tmpval+1
 18904  010E40  C010  F07D         	movff	?i2___llmod+2,i2printf@tmpval+2
 18905  010E44  C011  F07E         	movff	?i2___llmod+3,i2printf@tmpval+3
 18906                           
 18907                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 18908  010E48  0100               	movlb	0	; () banked
 18909  010E4A  517B               	movf	i2printf@tmpval& (0+255),w,b
 18910  010E4C  0F30               	addlw	48
 18911  010E4E  ECB7  F0AF         	call	i2_putch
 18912  010E52                     i2l1110:
 18913  010E52  0100               	movlb	0	; () banked
 18914  010E54  0788               	decf	i2printf@c& (0+255),f,b
 18915  010E56  2988               	incf	i2printf@c& (0+255),w,b
 18916  010E58  B4D8               	btfsc	status,2,c
 18917  010E5A  D008               	goto	i2l1113
 18918  010E5C  D7B1               	goto	i2l1111
 18919  010E5E                     i2l12075:
 18920                           
 18921                           ; BSR set to: 0
 18922                           ;doprnt.c: 1208: (putch('0') );
 18923  010E5E  0E30               	movlw	48
 18924  010E60  ECB7  F0AF         	call	i2_putch
 18925                           
 18926                           ;doprnt.c: 1209: exp--;
 18927  010E64  0100               	movlb	0	; () banked
 18928  010E66  0779               	decf	i2printf@exp& (0+255),f,b
 18929  010E68  A0D8               	btfss	status,0,c
 18930  010E6A  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18931  010E6C                     i2l1113:
 18932                           
 18933                           ; BSR set to: 0
 18934                           
 18935                           ; BSR set to: 0
 18936  010E6C  BF7A               	btfsc	(i2printf@exp+1)& (0+255),7,b
 18937  010E6E  D005               	goto	i2u1539_40
 18938  010E70  517A               	movf	(i2printf@exp+1)& (0+255),w,b
 18939  010E72  E1F5               	bnz	i2l12075
 18940  010E74  0579               	decf	i2printf@exp& (0+255),w,b
 18941  010E76  B0D8               	btfsc	status,0,c
 18942  010E78  D7F2               	goto	i2l1114
 18943  010E7A                     i2u1539_40:
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;doprnt.c: 1210: }
 18947                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 18948                           
 18949                           ; BSR set to: 0
 18950  010E7A  BF87               	btfsc	(i2printf@prec+1)& (0+255),7,b
 18951  010E7C  D009               	goto	i2l1116
 18952  010E7E  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 18953  010E80  E104               	bnz	i2u1540_40
 18954  010E82  0E09               	movlw	9
 18955  010E84  5D86               	subwf	i2printf@prec& (0+255),w,b
 18956  010E86  A0D8               	btfss	status,0,c
 18957  010E88  D003               	goto	i2l1116
 18958  010E8A                     i2u1540_40:
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 18962  010E8A  0E08               	movlw	8
 18963  010E8C  6F88               	movwf	i2printf@c& (0+255),b
 18964  010E8E  D002               	goto	i2l1117
 18965  010E90                     i2l1116:
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;doprnt.c: 1213: else
 18969                           ;doprnt.c: 1214: c = prec;
 18970  010E90  C086  F088         	movff	i2printf@prec,i2printf@c
 18971  010E94                     i2l1117:
 18972                           
 18973                           ; BSR set to: 0
 18974                           ;doprnt.c: 1215: prec -= c;
 18975                           
 18976                           ; BSR set to: 0
 18977  010E94  5188               	movf	i2printf@c& (0+255),w,b
 18978  010E96  5F86               	subwf	i2printf@prec& (0+255),f,b
 18979  010E98  0E00               	movlw	0
 18980  010E9A  BF88               	btfsc	i2printf@c& (0+255),7,b
 18981  010E9C  0EFF               	movlw	255
 18982  010E9E  5B87               	subwfb	(i2printf@prec+1)& (0+255),f,b
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;doprnt.c: 1219: if(c)
 18986  010EA0  5188               	movf	i2printf@c& (0+255),w,b
 18987  010EA2  B4D8               	btfsc	status,2,c
 18988  010EA4  D003               	goto	i2l1118
 18989                           
 18990                           ; BSR set to: 0
 18991                           ;doprnt.c: 1221: (putch('.') );
 18992  010EA6  0E2E               	movlw	46
 18993  010EA8  ECB7  F0AF         	call	i2_putch
 18994  010EAC                     i2l1118:
 18995                           
 18996                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 18997  010EAC  0100               	movlb	0	; () banked
 18998  010EAE  5188               	movf	i2printf@c& (0+255),w,b
 18999  010EB0  ECF4  F08E         	call	i2_scale
 19000  010EB4  C036  F06E         	movff	?i2_scale,i2_printf$3323
 19001  010EB8  C037  F06F         	movff	?i2_scale+1,i2_printf$3323+1
 19002  010EBC  C038  F070         	movff	?i2_scale+2,i2_printf$3323+2
 19003                           
 19004                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19005  010EC0  C083  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19006  010EC4  C084  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19007  010EC8  C085  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19008  010ECC  C06E  F027         	movff	i2_printf$3323,i2___ftmul@f1
 19009  010ED0  C06F  F028         	movff	i2_printf$3323+1,i2___ftmul@f1+1
 19010  010ED4  C070  F029         	movff	i2_printf$3323+2,i2___ftmul@f1+2
 19011  010ED8  EC55  F0A2         	call	i2___ftmul	;wreg free
 19012  010EDC  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 19013  010EE0  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 19014  010EE4  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 19015  010EE8  ECDB  F0A1         	call	i2___fttol	;wreg free
 19016  010EEC  C03D  F07F         	movff	?i2___fttol,i2printf@val
 19017  010EF0  C03E  F080         	movff	?i2___fttol+1,i2printf@val+1
 19018  010EF4  C03F  F081         	movff	?i2___fttol+2,i2printf@val+2
 19019  010EF8  C040  F082         	movff	?i2___fttol+3,i2printf@val+3
 19020                           
 19021                           ;doprnt.c: 1228: while(c--) {
 19022  010EFC  D073               	goto	i2l1119
 19023  010EFE                     
 19024                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 19025  010EFE  C07F  F001         	movff	i2printf@val,i2___lldiv@dividend
 19026  010F02  C080  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19027  010F06  C081  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19028  010F0A  C082  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19029  010F0E  0100               	movlb	0	; () banked
 19030  010F10  5188               	movf	i2printf@c& (0+255),w,b
 19031  010F12  0D04               	mullw	4
 19032  010F14  0E59               	movlw	low _dpowers
 19033  010F16  24F3               	addwf	prodl,w,c
 19034  010F18  6EF6               	movwf	tblptrl,c
 19035  010F1A  0EF4               	movlw	high _dpowers
 19036  010F1C  20F4               	addwfc	prodh,w,c
 19037  010F1E  6EF7               	movwf	tblptrh,c
 19038  010F20                     	if	1	;There are 3 active tblptr bytes
 19039  010F20  6AF8               	clrf	tblptru,c
 19040  010F22  0E00               	movlw	low (__mediumconst shr (0+16))
 19041  010F24  22F8               	addwfc	tblptru,f,c
 19042  010F26                     	endif
 19043  010F26  0009               	tblrd		*+
 19044  010F28  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19045  010F2C  0009               	tblrd		*+
 19046  010F2E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19047  010F32  0009               	tblrd		*+
 19048  010F34  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19049  010F38  000A               	tblrd		*-
 19050  010F3A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19051  010F3E  EC9F  F0A8         	call	i2___lldiv	;wreg free
 19052  010F42  C001  F07B         	movff	?i2___lldiv,i2printf@tmpval
 19053  010F46  C002  F07C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19054  010F4A  C003  F07D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19055  010F4E  C004  F07E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19056                           
 19057                           ;doprnt.c: 1230: tmpval.vd %= 10;
 19058  010F52  C07B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19059  010F56  C07C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19060  010F5A  C07D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19061  010F5E  C07E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19062  010F62  0E0A               	movlw	10
 19063  010F64  6E12               	movwf	i2___llmod@divisor,c
 19064  010F66  0E00               	movlw	0
 19065  010F68  6E13               	movwf	i2___llmod@divisor+1,c
 19066  010F6A  0E00               	movlw	0
 19067  010F6C  6E14               	movwf	i2___llmod@divisor+2,c
 19068  010F6E  0E00               	movlw	0
 19069  010F70  6E15               	movwf	i2___llmod@divisor+3,c
 19070  010F72  EC9D  F0AA         	call	i2___llmod	;wreg free
 19071  010F76  C00E  F07B         	movff	?i2___llmod,i2printf@tmpval
 19072  010F7A  C00F  F07C         	movff	?i2___llmod+1,i2printf@tmpval+1
 19073  010F7E  C010  F07D         	movff	?i2___llmod+2,i2printf@tmpval+2
 19074  010F82  C011  F07E         	movff	?i2___llmod+3,i2printf@tmpval+3
 19075                           
 19076                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 19077  010F86  0100               	movlb	0	; () banked
 19078  010F88  517B               	movf	i2printf@tmpval& (0+255),w,b
 19079  010F8A  0F30               	addlw	48
 19080  010F8C  ECB7  F0AF         	call	i2_putch
 19081                           
 19082                           ;doprnt.c: 1232: val %= dpowers[c];
 19083  010F90  C07F  F00E         	movff	i2printf@val,i2___llmod@dividend
 19084  010F94  C080  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 19085  010F98  C081  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 19086  010F9C  C082  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 19087  010FA0  0100               	movlb	0	; () banked
 19088  010FA2  5188               	movf	i2printf@c& (0+255),w,b
 19089  010FA4  0D04               	mullw	4
 19090  010FA6  0E59               	movlw	low _dpowers
 19091  010FA8  24F3               	addwf	prodl,w,c
 19092  010FAA  6EF6               	movwf	tblptrl,c
 19093  010FAC  0EF4               	movlw	high _dpowers
 19094  010FAE  20F4               	addwfc	prodh,w,c
 19095  010FB0  6EF7               	movwf	tblptrh,c
 19096  010FB2                     	if	1	;There are 3 active tblptr bytes
 19097  010FB2  6AF8               	clrf	tblptru,c
 19098  010FB4  0E00               	movlw	low (__mediumconst shr (0+16))
 19099  010FB6  22F8               	addwfc	tblptru,f,c
 19100  010FB8                     	endif
 19101  010FB8  0009               	tblrd		*+
 19102  010FBA  CFF5 F012          	movff	tablat,i2___llmod@divisor
 19103  010FBE  0009               	tblrd		*+
 19104  010FC0  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 19105  010FC4  0009               	tblrd		*+
 19106  010FC6  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 19107  010FCA  000A               	tblrd		*-
 19108  010FCC  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 19109  010FD0  EC9D  F0AA         	call	i2___llmod	;wreg free
 19110  010FD4  C00E  F07F         	movff	?i2___llmod,i2printf@val
 19111  010FD8  C00F  F080         	movff	?i2___llmod+1,i2printf@val+1
 19112  010FDC  C010  F081         	movff	?i2___llmod+2,i2printf@val+2
 19113  010FE0  C011  F082         	movff	?i2___llmod+3,i2printf@val+3
 19114  010FE4                     i2l1119:
 19115  010FE4  0100               	movlb	0	; () banked
 19116  010FE6  0788               	decf	i2printf@c& (0+255),f,b
 19117  010FE8  2988               	incf	i2printf@c& (0+255),w,b
 19118  010FEA  B4D8               	btfsc	status,2,c
 19119  010FEC  D008               	goto	i2l1122
 19120  010FEE  D787               	goto	i2l1120
 19121  010FF0                     
 19122                           ; BSR set to: 0
 19123                           ;doprnt.c: 1236: (putch('0') );
 19124                           
 19125                           ; BSR set to: 0
 19126  010FF0  0E30               	movlw	48
 19127  010FF2  ECB7  F0AF         	call	i2_putch
 19128                           
 19129                           ;doprnt.c: 1237: prec--;
 19130  010FF6  0100               	movlb	0	; () banked
 19131  010FF8  0786               	decf	i2printf@prec& (0+255),f,b
 19132  010FFA  A0D8               	btfss	status,0,c
 19133  010FFC  0787               	decf	(i2printf@prec+1)& (0+255),f,b
 19134  010FFE                     i2l1122:
 19135                           
 19136                           ; BSR set to: 0
 19137                           
 19138                           ; BSR set to: 0
 19139  010FFE  5186               	movf	i2printf@prec& (0+255),w,b
 19140  011000  1187               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19141  011002  B4D8               	btfsc	status,2,c
 19142  011004  D0C3               	goto	i2u1553_40
 19143  011006  D7F4               	goto	i2l1123
 19144  011008                     i2l1087:
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;doprnt.c: 1246: }
 19148                           ;doprnt.c: 1253: {
 19149                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 19150                           
 19151                           ; BSR set to: 0
 19152  011008  C075  FFD9         	movff	i2printf@ap,fsr2l
 19153  01100C  C076  FFDA         	movff	i2printf@ap+1,fsr2h
 19154  011010  CFDE F07F          	movff	postinc2,i2printf@val
 19155  011014  CFDD F080          	movff	postdec2,i2printf@val+1
 19156  011018  0E00               	movlw	0
 19157  01101A  BF80               	btfsc	(i2printf@val+1)& (0+255),7,b
 19158  01101C  0EFF               	movlw	-1
 19159  01101E  6F81               	movwf	(i2printf@val+2)& (0+255),b
 19160  011020  6F82               	movwf	(i2printf@val+3)& (0+255),b
 19161                           
 19162                           ; BSR set to: 0
 19163  011022  0E02               	movlw	2
 19164  011024  2775               	addwf	i2printf@ap& (0+255),f,b
 19165  011026  0E00               	movlw	0
 19166  011028  2376               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19167                           
 19168                           ; BSR set to: 0
 19169                           ;doprnt.c: 1261: if((long)val < 0) {
 19170  01102A  AF82               	btfss	(i2printf@val+3)& (0+255),7,b
 19171  01102C  D00A               	goto	i2l1125
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;doprnt.c: 1262: flag |= 0x03;
 19175  01102E  0E03               	movlw	3
 19176  011030  1377               	iorwf	i2printf@flag& (0+255),f,b
 19177                           
 19178                           ; BSR set to: 0
 19179                           ;doprnt.c: 1263: val = -val;
 19180  011032  1F82               	comf	(i2printf@val+3)& (0+255),f,b
 19181  011034  1F81               	comf	(i2printf@val+2)& (0+255),f,b
 19182  011036  1F80               	comf	(i2printf@val+1)& (0+255),f,b
 19183  011038  6D7F               	negf	i2printf@val& (0+255),b
 19184  01103A  0E00               	movlw	0
 19185  01103C  2380               	addwfc	(i2printf@val+1)& (0+255),f,b
 19186  01103E  2381               	addwfc	(i2printf@val+2)& (0+255),f,b
 19187  011040  2382               	addwfc	(i2printf@val+3)& (0+255),f,b
 19188  011042                     i2l1125:
 19189                           
 19190                           ; BSR set to: 0
 19191                           ;doprnt.c: 1264: }
 19192                           ;doprnt.c: 1266: }
 19193                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 19194                           
 19195                           ; BSR set to: 0
 19196  011042  5186               	movf	i2printf@prec& (0+255),w,b
 19197  011044  1187               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19198  011046  A4D8               	btfss	status,2,c
 19199  011048  D008               	goto	i2l1126
 19200                           
 19201                           ; BSR set to: 0
 19202  01104A  517F               	movf	i2printf@val& (0+255),w,b
 19203  01104C  1180               	iorwf	(i2printf@val+1)& (0+255),w,b
 19204  01104E  1181               	iorwf	(i2printf@val+2)& (0+255),w,b
 19205  011050  1182               	iorwf	(i2printf@val+3)& (0+255),w,b
 19206  011052  A4D8               	btfss	status,2,c
 19207  011054  D002               	goto	i2l1126
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;doprnt.c: 1291: prec++;
 19211  011056  4B86               	infsnz	i2printf@prec& (0+255),f,b
 19212  011058  2B87               	incf	(i2printf@prec+1)& (0+255),f,b
 19213  01105A                     i2l1126:
 19214                           
 19215                           ; BSR set to: 0
 19216                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 19217                           
 19218                           ; BSR set to: 0
 19219  01105A  0E01               	movlw	1
 19220  01105C  6F88               	movwf	i2printf@c& (0+255),b
 19221  01105E                     i2l12129:
 19222                           
 19223                           ; BSR set to: 0
 19224  01105E  0E0A               	movlw	10
 19225  011060  1988               	xorwf	i2printf@c& (0+255),w,b
 19226  011062  B4D8               	btfsc	status,2,c
 19227  011064  D01B               	goto	i2u1549_40
 19228                           
 19229                           ; BSR set to: 0
 19230                           ;doprnt.c: 1306: if(val < dpowers[c])
 19231                           
 19232                           ; BSR set to: 0
 19233                           
 19234                           ; BSR set to: 0
 19235  011066  5188               	movf	i2printf@c& (0+255),w,b
 19236  011068  0D04               	mullw	4
 19237  01106A  0E59               	movlw	low _dpowers
 19238  01106C  24F3               	addwf	prodl,w,c
 19239  01106E  6EF6               	movwf	tblptrl,c
 19240  011070  0EF4               	movlw	high _dpowers
 19241  011072  20F4               	addwfc	prodh,w,c
 19242  011074  6EF7               	movwf	tblptrh,c
 19243  011076                     	if	1	;There are 3 active tblptr bytes
 19244  011076  6AF8               	clrf	tblptru,c
 19245  011078  0E00               	movlw	low (__mediumconst shr (0+16))
 19246  01107A  22F8               	addwfc	tblptru,f,c
 19247  01107C                     	endif
 19248  01107C  0009               	tblrd		*+
 19249  01107E  50F5               	movf	tablat,w,c
 19250  011080  5D7F               	subwf	i2printf@val& (0+255),w,b
 19251  011082  0009               	tblrd		*+
 19252  011084  50F5               	movf	tablat,w,c
 19253  011086  5980               	subwfb	(i2printf@val+1)& (0+255),w,b
 19254  011088  0009               	tblrd		*+
 19255  01108A  50F5               	movf	tablat,w,c
 19256  01108C  5981               	subwfb	(i2printf@val+2)& (0+255),w,b
 19257  01108E  0009               	tblrd		*+
 19258  011090  50F5               	movf	tablat,w,c
 19259  011092  5982               	subwfb	(i2printf@val+3)& (0+255),w,b
 19260  011094  A0D8               	btfss	status,0,c
 19261  011096  D002               	goto	i2u1549_40
 19262                           
 19263                           ; BSR set to: 0
 19264                           
 19265                           ; BSR set to: 0
 19266                           
 19267                           ; BSR set to: 0
 19268                           ;doprnt.c: 1307: break;
 19269  011098  2B88               	incf	i2printf@c& (0+255),f,b
 19270  01109A  D7E1               	goto	i2l12129
 19271  01109C                     i2u1549_40:
 19272                           
 19273                           ; BSR set to: 0
 19274                           ;doprnt.c: 1339: if(c < prec)
 19275                           
 19276                           ; BSR set to: 0
 19277  01109C  0E80               	movlw	128
 19278  01109E  BF88               	btfsc	i2printf@c& (0+255),7,b
 19279  0110A0  0E7F               	movlw	127
 19280  0110A2  6F68               	movwf	??i2_printf& (0+255),b
 19281  0110A4  5186               	movf	i2printf@prec& (0+255),w,b
 19282  0110A6  5D88               	subwf	i2printf@c& (0+255),w,b
 19283  0110A8  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 19284  0110AA  0A80               	xorlw	128
 19285  0110AC  5968               	subwfb	??i2_printf& (0+255),w,b
 19286  0110AE  B0D8               	btfsc	status,0,c
 19287  0110B0  D003               	goto	i2l1130
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;doprnt.c: 1340: c = prec;
 19291  0110B2  C086  F088         	movff	i2printf@prec,i2printf@c
 19292  0110B6  D010               	goto	i2l1132
 19293  0110B8                     i2l1130:
 19294                           
 19295                           ; BSR set to: 0
 19296                           ;doprnt.c: 1341: else if(prec < c)
 19297                           
 19298                           ; BSR set to: 0
 19299  0110B8  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 19300  0110BA  0A80               	xorlw	128
 19301  0110BC  6F68               	movwf	??i2_printf& (0+255),b
 19302  0110BE  5188               	movf	i2printf@c& (0+255),w,b
 19303  0110C0  5D86               	subwf	i2printf@prec& (0+255),w,b
 19304  0110C2  0E80               	movlw	128
 19305  0110C4  BF88               	btfsc	i2printf@c& (0+255),7,b
 19306  0110C6  0E7F               	movlw	127
 19307  0110C8  5968               	subwfb	??i2_printf& (0+255),w,b
 19308  0110CA  B0D8               	btfsc	status,0,c
 19309  0110CC  D005               	goto	i2l1132
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;doprnt.c: 1342: prec = c;
 19313  0110CE  5188               	movf	i2printf@c& (0+255),w,b
 19314  0110D0  6F86               	movwf	i2printf@prec& (0+255),b
 19315  0110D2  6B87               	clrf	(i2printf@prec+1)& (0+255),b
 19316  0110D4  BF86               	btfsc	i2printf@prec& (0+255),7,b
 19317  0110D6  0787               	decf	(i2printf@prec+1)& (0+255),f,b
 19318  0110D8                     i2l1132:
 19319                           
 19320                           ; BSR set to: 0
 19321                           ;doprnt.c: 1422: {
 19322                           ;doprnt.c: 1438: if(flag & 0x03)
 19323                           
 19324                           ; BSR set to: 0
 19325                           
 19326                           ; BSR set to: 0
 19327  0110D8  0E03               	movlw	3
 19328  0110DA  1577               	andwf	i2printf@flag& (0+255),w,b
 19329  0110DC  6F68               	movwf	??i2_printf& (0+255),b
 19330  0110DE  0E00               	movlw	0
 19331  0110E0  1578               	andwf	(i2printf@flag+1)& (0+255),w,b
 19332  0110E2  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19333  0110E4  5168               	movf	??i2_printf& (0+255),w,b
 19334  0110E6  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19335  0110E8  B4D8               	btfsc	status,2,c
 19336  0110EA  D047               	goto	i2l1134
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;doprnt.c: 1439: (putch('-') );
 19340  0110EC  0E2D               	movlw	45
 19341  0110EE  ECB7  F0AF         	call	i2_putch
 19342                           
 19343                           ;doprnt.c: 1469: }
 19344                           ;doprnt.c: 1474: while(prec--) {
 19345  0110F2  D043               	goto	i2l1134
 19346  0110F4                     i2l12153:
 19347                           
 19348                           ;doprnt.c: 1478: {
 19349                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19350  0110F4  C086  F068         	movff	i2printf@prec,??i2_printf
 19351  0110F8  C087  F069         	movff	i2printf@prec+1,??i2_printf+1
 19352  0110FC  0100               	movlb	0	; () banked
 19353  0110FE  90D8               	bcf	status,0,c
 19354  011100  3768               	rlcf	??i2_printf& (0+255),f,b
 19355  011102  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19356  011104  90D8               	bcf	status,0,c
 19357  011106  3768               	rlcf	??i2_printf& (0+255),f,b
 19358  011108  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19359  01110A  0E59               	movlw	low _dpowers
 19360  01110C  2568               	addwf	??i2_printf& (0+255),w,b
 19361  01110E  6EF6               	movwf	tblptrl,c
 19362  011110  0EF4               	movlw	high _dpowers
 19363  011112  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 19364  011114  6EF7               	movwf	tblptrh,c
 19365  011116                     	if	1	;There are 3 active tblptr bytes
 19366  011116  6AF8               	clrf	tblptru,c
 19367  011118  0E00               	movlw	low (__mediumconst shr (0+16))
 19368  01111A  22F8               	addwfc	tblptru,f,c
 19369  01111C                     	endif
 19370  01111C  0009               	tblrd		*+
 19371  01111E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19372  011122  0009               	tblrd		*+
 19373  011124  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19374  011128  0009               	tblrd		*+
 19375  01112A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19376  01112E  000A               	tblrd		*-
 19377  011130  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19378  011134  C07F  F001         	movff	i2printf@val,i2___lldiv@dividend
 19379  011138  C080  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19380  01113C  C081  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19381  011140  C082  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19382  011144  EC9F  F0A8         	call	i2___lldiv	;wreg free
 19383  011148  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 19384  01114C  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 19385  011150  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 19386  011154  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 19387  011158  0E0A               	movlw	10
 19388  01115A  6E12               	movwf	i2___llmod@divisor,c
 19389  01115C  0E00               	movlw	0
 19390  01115E  6E13               	movwf	i2___llmod@divisor+1,c
 19391  011160  0E00               	movlw	0
 19392  011162  6E14               	movwf	i2___llmod@divisor+2,c
 19393  011164  0E00               	movlw	0
 19394  011166  6E15               	movwf	i2___llmod@divisor+3,c
 19395  011168  EC9D  F0AA         	call	i2___llmod	;wreg free
 19396  01116C  500E               	movf	?i2___llmod,w,c
 19397  01116E  0F30               	addlw	48
 19398  011170  0100               	movlb	0	; () banked
 19399  011172  6F88               	movwf	i2printf@c& (0+255),b
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;doprnt.c: 1523: }
 19403                           ;doprnt.c: 1524: (putch(c) );
 19404  011174  5188               	movf	i2printf@c& (0+255),w,b
 19405  011176  ECB7  F0AF         	call	i2_putch
 19406  01117A                     i2l1134:
 19407  01117A  0100               	movlb	0	; () banked
 19408  01117C  0786               	decf	i2printf@prec& (0+255),f,b
 19409  01117E  A0D8               	btfss	status,0,c
 19410  011180  0787               	decf	(i2printf@prec+1)& (0+255),f,b
 19411  011182  2986               	incf	i2printf@prec& (0+255),w,b
 19412  011184  E1B7               	bnz	i2l12153
 19413  011186  2987               	incf	(i2printf@prec+1)& (0+255),w,b
 19414  011188  A4D8               	btfss	status,2,c
 19415  01118A  D7B4               	goto	i2l1135
 19416  01118C                     i2u1553_40:
 19417                           
 19418                           ; BSR set to: 0
 19419                           
 19420                           ; BSR set to: 0
 19421  01118C  0100               	movlb	0	; () banked
 19422  01118E  5166               	movf	i2printf@f& (0+255),w,b
 19423  011190  6F68               	movwf	??i2_printf& (0+255),b
 19424  011192  5167               	movf	(i2printf@f+1)& (0+255),w,b
 19425  011194  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19426  011196  4B66               	infsnz	i2printf@f& (0+255),f,b
 19427  011198  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19428  01119A  C068  FFF6         	movff	??i2_printf,tblptrl
 19429  01119E  C069  FFF7         	movff	??i2_printf+1,tblptrh
 19430  0111A2  0E00               	movlw	low (__mediumconst shr (0+16))
 19431  0111A4  6EF8               	movwf	tblptru,c
 19432  0111A6  0E0D               	movlw	(high __ramtop+-1)
 19433  0111A8  64F7               	cpfsgt	tblptrh,c
 19434  0111AA  D003               	bra	i2u1554_47
 19435  0111AC  0008               	tblrd		*
 19436  0111AE  50F5               	movf	tablat,w,c
 19437  0111B0  D005               	bra	i2u1554_40
 19438  0111B2                     i2u1554_47:
 19439  0111B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 19440  0111B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 19441  0111BA  50E7               	movf	indf1,w,c
 19442  0111BC                     i2u1554_40:
 19443  0111BC  0100               	movlb	0	; () banked
 19444  0111BE  6F88               	movwf	i2printf@c& (0+255),b
 19445  0111C0  5188               	movf	i2printf@c& (0+255),w,b
 19446  0111C2  B4D8               	btfsc	status,2,c
 19447  0111C4  0012               	return	
 19448  0111C6  EF7B  F084         	goto	i2l1067
 19449  0111CA                     __end_ofi2_printf:
 19450                           	opt stack 0
 19451                           tosu	equ	0xFFF
 19452                           tosh	equ	0xFFE
 19453                           tosl	equ	0xFFD
 19454                           pclatu	equ	0xFFB
 19455                           pclath	equ	0xFFA
 19456                           tblptru	equ	0xFF8
 19457                           tblptrh	equ	0xFF7
 19458                           tblptrl	equ	0xFF6
 19459                           tablat	equ	0xFF5
 19460                           prodh	equ	0xFF4
 19461                           prodl	equ	0xFF3
 19462                           intcon	equ	0xFF2
 19463                           postinc0	equ	0xFEE
 19464                           fsr0h	equ	0xFEA
 19465                           fsr0l	equ	0xFE9
 19466                           wreg	equ	0xFE8
 19467                           indf1	equ	0xFE7
 19468                           postdec1	equ	0xFE5
 19469                           fsr1h	equ	0xFE2
 19470                           fsr1l	equ	0xFE1
 19471                           bsr	equ	0xFE0
 19472                           indf2	equ	0xFDF
 19473                           postinc2	equ	0xFDE
 19474                           postdec2	equ	0xFDD
 19475                           fsr2h	equ	0xFDA
 19476                           fsr2l	equ	0xFD9
 19477                           status	equ	0xFD8
 19478                           
 19479 ;; *************** function i2_scale *****************
 19480 ;; Defined at:
 19481 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19482 ;; Parameters:    Size  Location     Type
 19483 ;;  scl             1    wreg     char 
 19484 ;; Auto vars:     Size  Location     Type
 19485 ;;  scl             1   59[COMRAM] char 
 19486 ;; Return value:  Size  Location     Type
 19487 ;;                  3   53[COMRAM] char 
 19488 ;; Registers used:
 19489 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19490 ;; Tracked objects:
 19491 ;;		On entry : 0/0
 19492 ;;		On exit  : 0/0
 19493 ;;		Unchanged: 0/0
 19494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19495 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19498 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19499 ;;Total ram usage:        7 bytes
 19500 ;; Hardware stack levels used:    1
 19501 ;; Hardware stack levels required when called:    2
 19502 ;; This function calls:
 19503 ;;		i2___awdiv
 19504 ;;		i2___awmod
 19505 ;;		i2___ftmul
 19506 ;;		i2___wmul
 19507 ;; This function is called by:
 19508 ;;		i2_printf
 19509 ;; This function uses a non-reentrant model
 19510 ;;
 19511                           
 19512                           	psect	text74
 19513  011DE8                     __ptext74:
 19514                           	opt stack 0
 19515  011DE8                     i2_scale:
 19516                           	opt stack 13
 19517                           
 19518                           ; BSR set to: 0
 19519                           ;incstack = 0
 19520                           ;i2scale@scl stored from wreg
 19521  011DE8  6E3C               	movwf	i2scale@scl,c
 19522                           
 19523                           ;doprnt.c: 428: if(scl < 0) {
 19524  011DEA  AE3C               	btfss	i2scale@scl,7,c
 19525  011DEC  D113               	goto	i2l1056
 19526                           
 19527                           ;doprnt.c: 429: scl = -scl;
 19528  011DEE  6C3C               	negf	i2scale@scl,c
 19529                           
 19530                           ;doprnt.c: 430: if(scl>=110)
 19531  011DF0  503C               	movf	i2scale@scl,w,c
 19532  011DF2  0A80               	xorlw	128
 19533  011DF4  0F12               	addlw	-238
 19534  011DF6  A0D8               	btfss	status,0,c
 19535  011DF8  D09A               	goto	i2l1057
 19536                           
 19537                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 19538  011DFA  0E00               	movlw	0
 19539  011DFC  6E12               	movwf	i2___wmul@multiplicand+1,c
 19540  011DFE  0E03               	movlw	3
 19541  011E00  6E11               	movwf	i2___wmul@multiplicand,c
 19542  011E02  0E00               	movlw	0
 19543  011E04  6E0A               	movwf	i2___awdiv@divisor+1,c
 19544  011E06  0E0A               	movlw	10
 19545  011E08  6E09               	movwf	i2___awdiv@divisor,c
 19546  011E0A  0E00               	movlw	0
 19547  011E0C  6E04               	movwf	i2___awmod@divisor+1,c
 19548  011E0E  0E64               	movlw	100
 19549  011E10  6E03               	movwf	i2___awmod@divisor,c
 19550  011E12  503C               	movf	i2scale@scl,w,c
 19551  011E14  6E01               	movwf	i2___awmod@dividend,c
 19552  011E16  6A02               	clrf	i2___awmod@dividend+1,c
 19553  011E18  BE01               	btfsc	i2___awmod@dividend,7,c
 19554  011E1A  0602               	decf	i2___awmod@dividend+1,f,c
 19555  011E1C  ECCA  F0A9         	call	i2___awmod	;wreg free
 19556  011E20  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 19557  011E24  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 19558  011E28  EC5D  F0A8         	call	i2___awdiv	;wreg free
 19559  011E2C  0E09               	movlw	9
 19560  011E2E  2407               	addwf	?i2___awdiv,w,c
 19561  011E30  6E0F               	movwf	i2___wmul@multiplier,c
 19562  011E32  0E00               	movlw	0
 19563  011E34  2008               	addwfc	?i2___awdiv+1,w,c
 19564  011E36  6E10               	movwf	i2___wmul@multiplier+1,c
 19565  011E38  ECC4  F0AE         	call	i2___wmul	;wreg free
 19566  011E3C  0EA8               	movlw	low __npowers_
 19567  011E3E  240F               	addwf	?i2___wmul,w,c
 19568  011E40  6EF6               	movwf	tblptrl,c
 19569  011E42  0EF4               	movlw	high __npowers_
 19570  011E44  2010               	addwfc	?i2___wmul+1,w,c
 19571  011E46  6EF7               	movwf	tblptrh,c
 19572  011E48                     	if	1	;There are 3 active tblptr bytes
 19573  011E48  6AF8               	clrf	tblptru,c
 19574  011E4A  0E00               	movlw	low (__mediumconst shr (0+16))
 19575  011E4C  22F8               	addwfc	tblptru,f,c
 19576  011E4E                     	endif
 19577  011E4E  0009               	tblrd		*+
 19578  011E50  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19579  011E54  0009               	tblrd		*+
 19580  011E56  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19581  011E5A  000A               	tblrd		*-
 19582  011E5C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19583  011E60  0E00               	movlw	0
 19584  011E62  6E0A               	movwf	i2___awdiv@divisor+1,c
 19585  011E64  0E64               	movlw	100
 19586  011E66  6E09               	movwf	i2___awdiv@divisor,c
 19587  011E68  503C               	movf	i2scale@scl,w,c
 19588  011E6A  6E07               	movwf	i2___awdiv@dividend,c
 19589  011E6C  6A08               	clrf	i2___awdiv@dividend+1,c
 19590  011E6E  BE07               	btfsc	i2___awdiv@dividend,7,c
 19591  011E70  0608               	decf	i2___awdiv@dividend+1,f,c
 19592  011E72  EC5D  F0A8         	call	i2___awdiv	;wreg free
 19593  011E76  0E12               	movlw	18
 19594  011E78  2407               	addwf	?i2___awdiv,w,c
 19595  011E7A  6E0F               	movwf	i2___wmul@multiplier,c
 19596  011E7C  0E00               	movlw	0
 19597  011E7E  2008               	addwfc	?i2___awdiv+1,w,c
 19598  011E80  6E10               	movwf	i2___wmul@multiplier+1,c
 19599  011E82  0E00               	movlw	0
 19600  011E84  6E12               	movwf	i2___wmul@multiplicand+1,c
 19601  011E86  0E03               	movlw	3
 19602  011E88  6E11               	movwf	i2___wmul@multiplicand,c
 19603  011E8A  ECC4  F0AE         	call	i2___wmul	;wreg free
 19604  011E8E  0EA8               	movlw	low __npowers_
 19605  011E90  240F               	addwf	?i2___wmul,w,c
 19606  011E92  6EF6               	movwf	tblptrl,c
 19607  011E94  0EF4               	movlw	high __npowers_
 19608  011E96  2010               	addwfc	?i2___wmul+1,w,c
 19609  011E98  6EF7               	movwf	tblptrh,c
 19610  011E9A                     	if	1	;There are 3 active tblptr bytes
 19611  011E9A  6AF8               	clrf	tblptru,c
 19612  011E9C  0E00               	movlw	low (__mediumconst shr (0+16))
 19613  011E9E  22F8               	addwfc	tblptru,f,c
 19614  011EA0                     	endif
 19615  011EA0  0009               	tblrd		*+
 19616  011EA2  CFF5 F027          	movff	tablat,i2___ftmul@f1
 19617  011EA6  0009               	tblrd		*+
 19618  011EA8  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 19619  011EAC  000A               	tblrd		*-
 19620  011EAE  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 19621  011EB2  EC55  F0A2         	call	i2___ftmul	;wreg free
 19622  011EB6  C027  F039         	movff	?i2___ftmul,i2_scale$3322
 19623  011EBA  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3322+1
 19624  011EBE  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3322+2
 19625                           
 19626                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 19627  011EC2  C039  F027         	movff	i2_scale$3322,i2___ftmul@f1
 19628  011EC6  C03A  F028         	movff	i2_scale$3322+1,i2___ftmul@f1+1
 19629  011ECA  C03B  F029         	movff	i2_scale$3322+2,i2___ftmul@f1+2
 19630  011ECE  0E00               	movlw	0
 19631  011ED0  6E12               	movwf	i2___wmul@multiplicand+1,c
 19632  011ED2  0E03               	movlw	3
 19633  011ED4  6E11               	movwf	i2___wmul@multiplicand,c
 19634  011ED6  0E00               	movlw	0
 19635  011ED8  6E04               	movwf	i2___awmod@divisor+1,c
 19636  011EDA  0E0A               	movlw	10
 19637  011EDC  6E03               	movwf	i2___awmod@divisor,c
 19638  011EDE  503C               	movf	i2scale@scl,w,c
 19639  011EE0  6E01               	movwf	i2___awmod@dividend,c
 19640  011EE2  6A02               	clrf	i2___awmod@dividend+1,c
 19641  011EE4  BE01               	btfsc	i2___awmod@dividend,7,c
 19642  011EE6  0602               	decf	i2___awmod@dividend+1,f,c
 19643  011EE8  ECCA  F0A9         	call	i2___awmod	;wreg free
 19644  011EEC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 19645  011EF0  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 19646  011EF4  ECC4  F0AE         	call	i2___wmul	;wreg free
 19647  011EF8  0EA8               	movlw	low __npowers_
 19648  011EFA  240F               	addwf	?i2___wmul,w,c
 19649  011EFC  6EF6               	movwf	tblptrl,c
 19650  011EFE  0EF4               	movlw	high __npowers_
 19651  011F00  2010               	addwfc	?i2___wmul+1,w,c
 19652  011F02  6EF7               	movwf	tblptrh,c
 19653  011F04                     	if	1	;There are 3 active tblptr bytes
 19654  011F04  6AF8               	clrf	tblptru,c
 19655  011F06  0E00               	movlw	low (__mediumconst shr (0+16))
 19656  011F08  22F8               	addwfc	tblptru,f,c
 19657  011F0A                     	endif
 19658  011F0A  0009               	tblrd		*+
 19659  011F0C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19660  011F10  0009               	tblrd		*+
 19661  011F12  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19662  011F16  000A               	tblrd		*-
 19663  011F18  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19664  011F1C  EC55  F0A2         	call	i2___ftmul	;wreg free
 19665  011F20  C027  F036         	movff	?i2___ftmul,?i2_scale
 19666  011F24  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 19667  011F28  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 19668  011F2C  0012               	return	
 19669  011F2E                     i2l1057:
 19670                           
 19671                           ;doprnt.c: 432: else if(scl > 10)
 19672  011F2E  503C               	movf	i2scale@scl,w,c
 19673  011F30  0A80               	xorlw	128
 19674  011F32  0F75               	addlw	-139
 19675  011F34  A0D8               	btfss	status,0,c
 19676  011F36  D059               	goto	i2l1060
 19677                           
 19678                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 19679  011F38  0E00               	movlw	0
 19680  011F3A  6E0A               	movwf	i2___awdiv@divisor+1,c
 19681  011F3C  0E0A               	movlw	10
 19682  011F3E  6E09               	movwf	i2___awdiv@divisor,c
 19683  011F40  503C               	movf	i2scale@scl,w,c
 19684  011F42  6E07               	movwf	i2___awdiv@dividend,c
 19685  011F44  6A08               	clrf	i2___awdiv@dividend+1,c
 19686  011F46  BE07               	btfsc	i2___awdiv@dividend,7,c
 19687  011F48  0608               	decf	i2___awdiv@dividend+1,f,c
 19688  011F4A  EC5D  F0A8         	call	i2___awdiv	;wreg free
 19689  011F4E  0E09               	movlw	9
 19690  011F50  2407               	addwf	?i2___awdiv,w,c
 19691  011F52  6E0F               	movwf	i2___wmul@multiplier,c
 19692  011F54  0E00               	movlw	0
 19693  011F56  2008               	addwfc	?i2___awdiv+1,w,c
 19694  011F58  6E10               	movwf	i2___wmul@multiplier+1,c
 19695  011F5A  0E00               	movlw	0
 19696  011F5C  6E12               	movwf	i2___wmul@multiplicand+1,c
 19697  011F5E  0E03               	movlw	3
 19698  011F60  6E11               	movwf	i2___wmul@multiplicand,c
 19699  011F62  ECC4  F0AE         	call	i2___wmul	;wreg free
 19700  011F66  0EA8               	movlw	low __npowers_
 19701  011F68  240F               	addwf	?i2___wmul,w,c
 19702  011F6A  6EF6               	movwf	tblptrl,c
 19703  011F6C  0EF4               	movlw	high __npowers_
 19704  011F6E  2010               	addwfc	?i2___wmul+1,w,c
 19705  011F70  6EF7               	movwf	tblptrh,c
 19706  011F72                     	if	1	;There are 3 active tblptr bytes
 19707  011F72  6AF8               	clrf	tblptru,c
 19708  011F74  0E00               	movlw	low (__mediumconst shr (0+16))
 19709  011F76  22F8               	addwfc	tblptru,f,c
 19710  011F78                     	endif
 19711  011F78  0009               	tblrd		*+
 19712  011F7A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 19713  011F7E  0009               	tblrd		*+
 19714  011F80  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 19715  011F84  000A               	tblrd		*-
 19716  011F86  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 19717  011F8A  0E00               	movlw	0
 19718  011F8C  6E12               	movwf	i2___wmul@multiplicand+1,c
 19719  011F8E  0E03               	movlw	3
 19720  011F90  6E11               	movwf	i2___wmul@multiplicand,c
 19721  011F92  0E00               	movlw	0
 19722  011F94  6E04               	movwf	i2___awmod@divisor+1,c
 19723  011F96  0E0A               	movlw	10
 19724  011F98  6E03               	movwf	i2___awmod@divisor,c
 19725  011F9A  503C               	movf	i2scale@scl,w,c
 19726  011F9C  6E01               	movwf	i2___awmod@dividend,c
 19727  011F9E  6A02               	clrf	i2___awmod@dividend+1,c
 19728  011FA0  BE01               	btfsc	i2___awmod@dividend,7,c
 19729  011FA2  0602               	decf	i2___awmod@dividend+1,f,c
 19730  011FA4  ECCA  F0A9         	call	i2___awmod	;wreg free
 19731  011FA8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 19732  011FAC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 19733  011FB0  ECC4  F0AE         	call	i2___wmul	;wreg free
 19734  011FB4  0EA8               	movlw	low __npowers_
 19735  011FB6  240F               	addwf	?i2___wmul,w,c
 19736  011FB8  6EF6               	movwf	tblptrl,c
 19737  011FBA  0EF4               	movlw	high __npowers_
 19738  011FBC  2010               	addwfc	?i2___wmul+1,w,c
 19739  011FBE  6EF7               	movwf	tblptrh,c
 19740  011FC0                     	if	1	;There are 3 active tblptr bytes
 19741  011FC0  6AF8               	clrf	tblptru,c
 19742  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 19743  011FC4  22F8               	addwfc	tblptru,f,c
 19744  011FC6                     	endif
 19745  011FC6  0009               	tblrd		*+
 19746  011FC8  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19747  011FCC  0009               	tblrd		*+
 19748  011FCE  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19749  011FD2  000A               	tblrd		*-
 19750  011FD4  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19751  011FD8  EC55  F0A2         	call	i2___ftmul	;wreg free
 19752  011FDC  C027  F036         	movff	?i2___ftmul,?i2_scale
 19753  011FE0  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 19754  011FE4  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 19755  011FE8  0012               	return	
 19756  011FEA                     i2l1060:
 19757                           
 19758                           ;doprnt.c: 434: return _npowers_[scl];
 19759  011FEA  503C               	movf	i2scale@scl,w,c
 19760  011FEC  0D03               	mullw	3
 19761  011FEE  0EA8               	movlw	low __npowers_
 19762  011FF0  24F3               	addwf	prodl,w,c
 19763  011FF2  6EF6               	movwf	tblptrl,c
 19764  011FF4  0EF4               	movlw	high __npowers_
 19765  011FF6  20F4               	addwfc	prodh,w,c
 19766  011FF8  6EF7               	movwf	tblptrh,c
 19767  011FFA                     	if	1	;There are 3 active tblptr bytes
 19768  011FFA  6AF8               	clrf	tblptru,c
 19769  011FFC  0E00               	movlw	low (__mediumconst shr (0+16))
 19770  011FFE  22F8               	addwfc	tblptru,f,c
 19771  012000                     	endif
 19772  012000  0009               	tblrd		*+
 19773  012002  CFF5 F036          	movff	tablat,?i2_scale
 19774  012006  0009               	tblrd		*+
 19775  012008  CFF5 F037          	movff	tablat,?i2_scale+1
 19776  01200C  000A               	tblrd		*-
 19777  01200E  CFF5 F038          	movff	tablat,?i2_scale+2
 19778  012012  0012               	return	
 19779  012014                     i2l1056:
 19780                           
 19781                           ;doprnt.c: 435: }
 19782                           ;doprnt.c: 436: if(scl>=110)
 19783  012014  503C               	movf	i2scale@scl,w,c
 19784  012016  0A80               	xorlw	128
 19785  012018  0F12               	addlw	-238
 19786  01201A  A0D8               	btfss	status,0,c
 19787  01201C  D09A               	goto	i2l1061
 19788                           
 19789                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19790  01201E  0E00               	movlw	0
 19791  012020  6E12               	movwf	i2___wmul@multiplicand+1,c
 19792  012022  0E03               	movlw	3
 19793  012024  6E11               	movwf	i2___wmul@multiplicand,c
 19794  012026  0E00               	movlw	0
 19795  012028  6E0A               	movwf	i2___awdiv@divisor+1,c
 19796  01202A  0E0A               	movlw	10
 19797  01202C  6E09               	movwf	i2___awdiv@divisor,c
 19798  01202E  0E00               	movlw	0
 19799  012030  6E04               	movwf	i2___awmod@divisor+1,c
 19800  012032  0E64               	movlw	100
 19801  012034  6E03               	movwf	i2___awmod@divisor,c
 19802  012036  503C               	movf	i2scale@scl,w,c
 19803  012038  6E01               	movwf	i2___awmod@dividend,c
 19804  01203A  6A02               	clrf	i2___awmod@dividend+1,c
 19805  01203C  BE01               	btfsc	i2___awmod@dividend,7,c
 19806  01203E  0602               	decf	i2___awmod@dividend+1,f,c
 19807  012040  ECCA  F0A9         	call	i2___awmod	;wreg free
 19808  012044  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 19809  012048  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 19810  01204C  EC5D  F0A8         	call	i2___awdiv	;wreg free
 19811  012050  0E09               	movlw	9
 19812  012052  2407               	addwf	?i2___awdiv,w,c
 19813  012054  6E0F               	movwf	i2___wmul@multiplier,c
 19814  012056  0E00               	movlw	0
 19815  012058  2008               	addwfc	?i2___awdiv+1,w,c
 19816  01205A  6E10               	movwf	i2___wmul@multiplier+1,c
 19817  01205C  ECC4  F0AE         	call	i2___wmul	;wreg free
 19818  012060  0E81               	movlw	low __powers_
 19819  012062  240F               	addwf	?i2___wmul,w,c
 19820  012064  6EF6               	movwf	tblptrl,c
 19821  012066  0EF4               	movlw	high __powers_
 19822  012068  2010               	addwfc	?i2___wmul+1,w,c
 19823  01206A  6EF7               	movwf	tblptrh,c
 19824  01206C                     	if	1	;There are 3 active tblptr bytes
 19825  01206C  6AF8               	clrf	tblptru,c
 19826  01206E  0E00               	movlw	low (__mediumconst shr (0+16))
 19827  012070  22F8               	addwfc	tblptru,f,c
 19828  012072                     	endif
 19829  012072  0009               	tblrd		*+
 19830  012074  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19831  012078  0009               	tblrd		*+
 19832  01207A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19833  01207E  000A               	tblrd		*-
 19834  012080  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19835  012084  0E00               	movlw	0
 19836  012086  6E0A               	movwf	i2___awdiv@divisor+1,c
 19837  012088  0E64               	movlw	100
 19838  01208A  6E09               	movwf	i2___awdiv@divisor,c
 19839  01208C  503C               	movf	i2scale@scl,w,c
 19840  01208E  6E07               	movwf	i2___awdiv@dividend,c
 19841  012090  6A08               	clrf	i2___awdiv@dividend+1,c
 19842  012092  BE07               	btfsc	i2___awdiv@dividend,7,c
 19843  012094  0608               	decf	i2___awdiv@dividend+1,f,c
 19844  012096  EC5D  F0A8         	call	i2___awdiv	;wreg free
 19845  01209A  0E12               	movlw	18
 19846  01209C  2407               	addwf	?i2___awdiv,w,c
 19847  01209E  6E0F               	movwf	i2___wmul@multiplier,c
 19848  0120A0  0E00               	movlw	0
 19849  0120A2  2008               	addwfc	?i2___awdiv+1,w,c
 19850  0120A4  6E10               	movwf	i2___wmul@multiplier+1,c
 19851  0120A6  0E00               	movlw	0
 19852  0120A8  6E12               	movwf	i2___wmul@multiplicand+1,c
 19853  0120AA  0E03               	movlw	3
 19854  0120AC  6E11               	movwf	i2___wmul@multiplicand,c
 19855  0120AE  ECC4  F0AE         	call	i2___wmul	;wreg free
 19856  0120B2  0E81               	movlw	low __powers_
 19857  0120B4  240F               	addwf	?i2___wmul,w,c
 19858  0120B6  6EF6               	movwf	tblptrl,c
 19859  0120B8  0EF4               	movlw	high __powers_
 19860  0120BA  2010               	addwfc	?i2___wmul+1,w,c
 19861  0120BC  6EF7               	movwf	tblptrh,c
 19862  0120BE                     	if	1	;There are 3 active tblptr bytes
 19863  0120BE  6AF8               	clrf	tblptru,c
 19864  0120C0  0E00               	movlw	low (__mediumconst shr (0+16))
 19865  0120C2  22F8               	addwfc	tblptru,f,c
 19866  0120C4                     	endif
 19867  0120C4  0009               	tblrd		*+
 19868  0120C6  CFF5 F027          	movff	tablat,i2___ftmul@f1
 19869  0120CA  0009               	tblrd		*+
 19870  0120CC  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 19871  0120D0  000A               	tblrd		*-
 19872  0120D2  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 19873  0120D6  EC55  F0A2         	call	i2___ftmul	;wreg free
 19874  0120DA  C027  F039         	movff	?i2___ftmul,i2_scale$3322
 19875  0120DE  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3322+1
 19876  0120E2  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3322+2
 19877                           
 19878                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19879  0120E6  C039  F027         	movff	i2_scale$3322,i2___ftmul@f1
 19880  0120EA  C03A  F028         	movff	i2_scale$3322+1,i2___ftmul@f1+1
 19881  0120EE  C03B  F029         	movff	i2_scale$3322+2,i2___ftmul@f1+2
 19882  0120F2  0E00               	movlw	0
 19883  0120F4  6E12               	movwf	i2___wmul@multiplicand+1,c
 19884  0120F6  0E03               	movlw	3
 19885  0120F8  6E11               	movwf	i2___wmul@multiplicand,c
 19886  0120FA  0E00               	movlw	0
 19887  0120FC  6E04               	movwf	i2___awmod@divisor+1,c
 19888  0120FE  0E0A               	movlw	10
 19889  012100  6E03               	movwf	i2___awmod@divisor,c
 19890  012102  503C               	movf	i2scale@scl,w,c
 19891  012104  6E01               	movwf	i2___awmod@dividend,c
 19892  012106  6A02               	clrf	i2___awmod@dividend+1,c
 19893  012108  BE01               	btfsc	i2___awmod@dividend,7,c
 19894  01210A  0602               	decf	i2___awmod@dividend+1,f,c
 19895  01210C  ECCA  F0A9         	call	i2___awmod	;wreg free
 19896  012110  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 19897  012114  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 19898  012118  ECC4  F0AE         	call	i2___wmul	;wreg free
 19899  01211C  0E81               	movlw	low __powers_
 19900  01211E  240F               	addwf	?i2___wmul,w,c
 19901  012120  6EF6               	movwf	tblptrl,c
 19902  012122  0EF4               	movlw	high __powers_
 19903  012124  2010               	addwfc	?i2___wmul+1,w,c
 19904  012126  6EF7               	movwf	tblptrh,c
 19905  012128                     	if	1	;There are 3 active tblptr bytes
 19906  012128  6AF8               	clrf	tblptru,c
 19907  01212A  0E00               	movlw	low (__mediumconst shr (0+16))
 19908  01212C  22F8               	addwfc	tblptru,f,c
 19909  01212E                     	endif
 19910  01212E  0009               	tblrd		*+
 19911  012130  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19912  012134  0009               	tblrd		*+
 19913  012136  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19914  01213A  000A               	tblrd		*-
 19915  01213C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19916  012140  EC55  F0A2         	call	i2___ftmul	;wreg free
 19917  012144  C027  F036         	movff	?i2___ftmul,?i2_scale
 19918  012148  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 19919  01214C  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 19920  012150  0012               	return	
 19921  012152                     i2l1061:
 19922                           
 19923                           ;doprnt.c: 438: else if(scl > 10)
 19924  012152  503C               	movf	i2scale@scl,w,c
 19925  012154  0A80               	xorlw	128
 19926  012156  0F75               	addlw	-139
 19927  012158  A0D8               	btfss	status,0,c
 19928  01215A  D059               	goto	i2l1063
 19929                           
 19930                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 19931  01215C  0E00               	movlw	0
 19932  01215E  6E0A               	movwf	i2___awdiv@divisor+1,c
 19933  012160  0E0A               	movlw	10
 19934  012162  6E09               	movwf	i2___awdiv@divisor,c
 19935  012164  503C               	movf	i2scale@scl,w,c
 19936  012166  6E07               	movwf	i2___awdiv@dividend,c
 19937  012168  6A08               	clrf	i2___awdiv@dividend+1,c
 19938  01216A  BE07               	btfsc	i2___awdiv@dividend,7,c
 19939  01216C  0608               	decf	i2___awdiv@dividend+1,f,c
 19940  01216E  EC5D  F0A8         	call	i2___awdiv	;wreg free
 19941  012172  0E09               	movlw	9
 19942  012174  2407               	addwf	?i2___awdiv,w,c
 19943  012176  6E0F               	movwf	i2___wmul@multiplier,c
 19944  012178  0E00               	movlw	0
 19945  01217A  2008               	addwfc	?i2___awdiv+1,w,c
 19946  01217C  6E10               	movwf	i2___wmul@multiplier+1,c
 19947  01217E  0E00               	movlw	0
 19948  012180  6E12               	movwf	i2___wmul@multiplicand+1,c
 19949  012182  0E03               	movlw	3
 19950  012184  6E11               	movwf	i2___wmul@multiplicand,c
 19951  012186  ECC4  F0AE         	call	i2___wmul	;wreg free
 19952  01218A  0E81               	movlw	low __powers_
 19953  01218C  240F               	addwf	?i2___wmul,w,c
 19954  01218E  6EF6               	movwf	tblptrl,c
 19955  012190  0EF4               	movlw	high __powers_
 19956  012192  2010               	addwfc	?i2___wmul+1,w,c
 19957  012194  6EF7               	movwf	tblptrh,c
 19958  012196                     	if	1	;There are 3 active tblptr bytes
 19959  012196  6AF8               	clrf	tblptru,c
 19960  012198  0E00               	movlw	low (__mediumconst shr (0+16))
 19961  01219A  22F8               	addwfc	tblptru,f,c
 19962  01219C                     	endif
 19963  01219C  0009               	tblrd		*+
 19964  01219E  CFF5 F027          	movff	tablat,i2___ftmul@f1
 19965  0121A2  0009               	tblrd		*+
 19966  0121A4  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 19967  0121A8  000A               	tblrd		*-
 19968  0121AA  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 19969  0121AE  0E00               	movlw	0
 19970  0121B0  6E12               	movwf	i2___wmul@multiplicand+1,c
 19971  0121B2  0E03               	movlw	3
 19972  0121B4  6E11               	movwf	i2___wmul@multiplicand,c
 19973  0121B6  0E00               	movlw	0
 19974  0121B8  6E04               	movwf	i2___awmod@divisor+1,c
 19975  0121BA  0E0A               	movlw	10
 19976  0121BC  6E03               	movwf	i2___awmod@divisor,c
 19977  0121BE  503C               	movf	i2scale@scl,w,c
 19978  0121C0  6E01               	movwf	i2___awmod@dividend,c
 19979  0121C2  6A02               	clrf	i2___awmod@dividend+1,c
 19980  0121C4  BE01               	btfsc	i2___awmod@dividend,7,c
 19981  0121C6  0602               	decf	i2___awmod@dividend+1,f,c
 19982  0121C8  ECCA  F0A9         	call	i2___awmod	;wreg free
 19983  0121CC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 19984  0121D0  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 19985  0121D4  ECC4  F0AE         	call	i2___wmul	;wreg free
 19986  0121D8  0E81               	movlw	low __powers_
 19987  0121DA  240F               	addwf	?i2___wmul,w,c
 19988  0121DC  6EF6               	movwf	tblptrl,c
 19989  0121DE  0EF4               	movlw	high __powers_
 19990  0121E0  2010               	addwfc	?i2___wmul+1,w,c
 19991  0121E2  6EF7               	movwf	tblptrh,c
 19992  0121E4                     	if	1	;There are 3 active tblptr bytes
 19993  0121E4  6AF8               	clrf	tblptru,c
 19994  0121E6  0E00               	movlw	low (__mediumconst shr (0+16))
 19995  0121E8  22F8               	addwfc	tblptru,f,c
 19996  0121EA                     	endif
 19997  0121EA  0009               	tblrd		*+
 19998  0121EC  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19999  0121F0  0009               	tblrd		*+
 20000  0121F2  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20001  0121F6  000A               	tblrd		*-
 20002  0121F8  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20003  0121FC  EC55  F0A2         	call	i2___ftmul	;wreg free
 20004  012200  C027  F036         	movff	?i2___ftmul,?i2_scale
 20005  012204  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20006  012208  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20007  01220C  0012               	return	
 20008  01220E                     i2l1063:
 20009                           
 20010                           ;doprnt.c: 440: return _powers_[scl];
 20011  01220E  503C               	movf	i2scale@scl,w,c
 20012  012210  0D03               	mullw	3
 20013  012212  0E81               	movlw	low __powers_
 20014  012214  24F3               	addwf	prodl,w,c
 20015  012216  6EF6               	movwf	tblptrl,c
 20016  012218  0EF4               	movlw	high __powers_
 20017  01221A  20F4               	addwfc	prodh,w,c
 20018  01221C  6EF7               	movwf	tblptrh,c
 20019  01221E                     	if	1	;There are 3 active tblptr bytes
 20020  01221E  6AF8               	clrf	tblptru,c
 20021  012220  0E00               	movlw	low (__mediumconst shr (0+16))
 20022  012222  22F8               	addwfc	tblptru,f,c
 20023  012224                     	endif
 20024  012224  0009               	tblrd		*+
 20025  012226  CFF5 F036          	movff	tablat,?i2_scale
 20026  01222A  0009               	tblrd		*+
 20027  01222C  CFF5 F037          	movff	tablat,?i2_scale+1
 20028  012230  000A               	tblrd		*-
 20029  012232  CFF5 F038          	movff	tablat,?i2_scale+2
 20030  012236  0012               	return	
 20031  012238                     __end_ofi2_scale:
 20032                           	opt stack 0
 20033                           tosu	equ	0xFFF
 20034                           tosh	equ	0xFFE
 20035                           tosl	equ	0xFFD
 20036                           pclatu	equ	0xFFB
 20037                           pclath	equ	0xFFA
 20038                           tblptru	equ	0xFF8
 20039                           tblptrh	equ	0xFF7
 20040                           tblptrl	equ	0xFF6
 20041                           tablat	equ	0xFF5
 20042                           prodh	equ	0xFF4
 20043                           prodl	equ	0xFF3
 20044                           intcon	equ	0xFF2
 20045                           postinc0	equ	0xFEE
 20046                           fsr0h	equ	0xFEA
 20047                           fsr0l	equ	0xFE9
 20048                           wreg	equ	0xFE8
 20049                           indf1	equ	0xFE7
 20050                           postdec1	equ	0xFE5
 20051                           fsr1h	equ	0xFE2
 20052                           fsr1l	equ	0xFE1
 20053                           bsr	equ	0xFE0
 20054                           indf2	equ	0xFDF
 20055                           postinc2	equ	0xFDE
 20056                           postdec2	equ	0xFDD
 20057                           fsr2h	equ	0xFDA
 20058                           fsr2l	equ	0xFD9
 20059                           status	equ	0xFD8
 20060                           
 20061 ;; *************** function i2_putch *****************
 20062 ;; Defined at:
 20063 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 20064 ;; Parameters:    Size  Location     Type
 20065 ;;  txData          1    wreg     unsigned char 
 20066 ;; Auto vars:     Size  Location     Type
 20067 ;;  txData          1    1[COMRAM] unsigned char 
 20068 ;; Return value:  Size  Location     Type
 20069 ;;                  1    wreg      void 
 20070 ;; Registers used:
 20071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20072 ;; Tracked objects:
 20073 ;;		On entry : 0/0
 20074 ;;		On exit  : 0/0
 20075 ;;		Unchanged: 0/0
 20076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20081 ;;Total ram usage:        1 bytes
 20082 ;; Hardware stack levels used:    1
 20083 ;; Hardware stack levels required when called:    1
 20084 ;; This function calls:
 20085 ;;		i2_EUSART2_Write
 20086 ;; This function is called by:
 20087 ;;		i2_printf
 20088 ;; This function uses a non-reentrant model
 20089 ;;
 20090                           
 20091                           	psect	text75
 20092  015F6E                     __ptext75:
 20093                           	opt stack 0
 20094  015F6E                     i2_putch:
 20095                           	opt stack 14
 20096                           
 20097                           ;incstack = 0
 20098                           ;i2putch@txData stored from wreg
 20099  015F6E  6E02               	movwf	i2putch@txData,c
 20100                           
 20101                           ;eusart2.c: 182: EUSART2_Write(txData);
 20102  015F70  5002               	movf	i2putch@txData,w,c
 20103  015F72  ECF6  F0AC         	call	i2_EUSART2_Write
 20104  015F76  0012               	return		;funcret
 20105  015F78                     __end_ofi2_putch:
 20106                           	opt stack 0
 20107                           tosu	equ	0xFFF
 20108                           tosh	equ	0xFFE
 20109                           tosl	equ	0xFFD
 20110                           pclatu	equ	0xFFB
 20111                           pclath	equ	0xFFA
 20112                           tblptru	equ	0xFF8
 20113                           tblptrh	equ	0xFF7
 20114                           tblptrl	equ	0xFF6
 20115                           tablat	equ	0xFF5
 20116                           prodh	equ	0xFF4
 20117                           prodl	equ	0xFF3
 20118                           intcon	equ	0xFF2
 20119                           postinc0	equ	0xFEE
 20120                           fsr0h	equ	0xFEA
 20121                           fsr0l	equ	0xFE9
 20122                           wreg	equ	0xFE8
 20123                           indf1	equ	0xFE7
 20124                           postdec1	equ	0xFE5
 20125                           fsr1h	equ	0xFE2
 20126                           fsr1l	equ	0xFE1
 20127                           bsr	equ	0xFE0
 20128                           indf2	equ	0xFDF
 20129                           postinc2	equ	0xFDE
 20130                           postdec2	equ	0xFDD
 20131                           fsr2h	equ	0xFDA
 20132                           fsr2l	equ	0xFD9
 20133                           status	equ	0xFD8
 20134                           
 20135 ;; *************** function i2_EUSART2_Write *****************
 20136 ;; Defined at:
 20137 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 20138 ;; Parameters:    Size  Location     Type
 20139 ;;  txData          1    wreg     unsigned char 
 20140 ;; Auto vars:     Size  Location     Type
 20141 ;;  txData          1    0[COMRAM] unsigned char 
 20142 ;; Return value:  Size  Location     Type
 20143 ;;                  1    wreg      void 
 20144 ;; Registers used:
 20145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20146 ;; Tracked objects:
 20147 ;;		On entry : 0/0
 20148 ;;		On exit  : 0/0
 20149 ;;		Unchanged: 0/0
 20150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20155 ;;Total ram usage:        1 bytes
 20156 ;; Hardware stack levels used:    1
 20157 ;; This function calls:
 20158 ;;		Nothing
 20159 ;; This function is called by:
 20160 ;;		i2_putch
 20161 ;; This function uses a non-reentrant model
 20162 ;;
 20163                           
 20164                           	psect	text76
 20165  0159EC                     __ptext76:
 20166                           	opt stack 0
 20167  0159EC                     i2_EUSART2_Write:
 20168                           	opt stack 14
 20169                           
 20170                           ;incstack = 0
 20171                           ;i2EUSART2_Write@txData stored from wreg
 20172  0159EC  6E01               	movwf	i2EUSART2_Write@txData,c
 20173                           
 20174                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 20175  0159EE  D001               	goto	i2l374
 20176  0159F0                     i2l375:
 20177                           
 20178                           ; BSR set to: 1
 20179  0159F0  0004               	clrwdt		;# 
 20180  0159F2                     i2l374:
 20181  0159F2  0101               	movlb	1	; () banked
 20182  0159F4  51DA               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 20183  0159F6  B4D8               	btfsc	status,2,c
 20184  0159F8  D7FB               	goto	i2l375
 20185                           
 20186                           ; BSR set to: 1
 20187                           ;eusart2.c: 156: }
 20188                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 20189  0159FA  010E               	movlb	14	; () banked
 20190  0159FC  BD2C               	btfsc	44,6,b	;volatile
 20191  0159FE  D003               	goto	i2l377
 20192                           
 20193                           ; BSR set to: 14
 20194                           ;eusart2.c: 159: {
 20195                           ;eusart2.c: 160: TX2REG = txData;
 20196  015A00  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 20197                           
 20198                           ;eusart2.c: 161: }
 20199  015A04  D013               	goto	i2l378
 20200  015A06                     i2l377:
 20201                           
 20202                           ; BSR set to: 14
 20203                           ;eusart2.c: 162: else
 20204                           ;eusart2.c: 163: {
 20205                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 20206  015A06  9D2C               	bcf	44,6,b	;volatile
 20207                           
 20208                           ; BSR set to: 14
 20209                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 20210  015A08  0101               	movlb	1	; () banked
 20211  015A0A  51DC               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 20212  015A0C  0D01               	mullw	1
 20213  015A0E  0E40               	movlw	low _eusart2TxBuffer
 20214  015A10  24F3               	addwf	prodl,w,c
 20215  015A12  6ED9               	movwf	fsr2l,c
 20216  015A14  0E02               	movlw	high _eusart2TxBuffer
 20217  015A16  20F4               	addwfc	prodh,w,c
 20218  015A18  6EDA               	movwf	fsr2h,c
 20219  015A1A  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 20220                           
 20221                           ; BSR set to: 1
 20222  015A1E  2BDC               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 20223                           
 20224                           ; BSR set to: 1
 20225                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 20226  015A20  0E3F               	movlw	63
 20227  015A22  65DC               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 20228  015A24  D002               	goto	i2l379
 20229                           
 20230                           ; BSR set to: 1
 20231                           ;eusart2.c: 167: {
 20232                           ;eusart2.c: 168: eusart2TxHead = 0;
 20233  015A26  0E00               	movlw	0
 20234  015A28  6FDC               	movwf	_eusart2TxHead& (0+255),b	;volatile
 20235  015A2A                     i2l379:
 20236                           
 20237                           ; BSR set to: 1
 20238                           ;eusart2.c: 169: }
 20239                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 20240                           
 20241                           ; BSR set to: 1
 20242  015A2A  07DA               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 20243  015A2C                     i2l378:
 20244                           
 20245                           ;eusart2.c: 171: }
 20246                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 20247                           
 20248                           ; BSR set to: 1
 20249  015A2C  010E               	movlb	14	; () banked
 20250  015A2E  8D2C               	bsf	44,6,b	;volatile
 20251                           
 20252                           ; BSR set to: 14
 20253  015A30  0012               	return		;funcret
 20254  015A32                     __end_ofi2_EUSART2_Write:
 20255                           	opt stack 0
 20256                           tosu	equ	0xFFF
 20257                           tosh	equ	0xFFE
 20258                           tosl	equ	0xFFD
 20259                           pclatu	equ	0xFFB
 20260                           pclath	equ	0xFFA
 20261                           tblptru	equ	0xFF8
 20262                           tblptrh	equ	0xFF7
 20263                           tblptrl	equ	0xFF6
 20264                           tablat	equ	0xFF5
 20265                           prodh	equ	0xFF4
 20266                           prodl	equ	0xFF3
 20267                           intcon	equ	0xFF2
 20268                           postinc0	equ	0xFEE
 20269                           fsr0h	equ	0xFEA
 20270                           fsr0l	equ	0xFE9
 20271                           wreg	equ	0xFE8
 20272                           indf1	equ	0xFE7
 20273                           postdec1	equ	0xFE5
 20274                           fsr1h	equ	0xFE2
 20275                           fsr1l	equ	0xFE1
 20276                           bsr	equ	0xFE0
 20277                           indf2	equ	0xFDF
 20278                           postinc2	equ	0xFDE
 20279                           postdec2	equ	0xFDD
 20280                           fsr2h	equ	0xFDA
 20281                           fsr2l	equ	0xFD9
 20282                           status	equ	0xFD8
 20283                           
 20284 ;; *************** function i2_isdigit *****************
 20285 ;; Defined at:
 20286 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 20287 ;; Parameters:    Size  Location     Type
 20288 ;;  c               1    wreg     unsigned char 
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;  c               1    2[COMRAM] unsigned char 
 20291 ;; Return value:  Size  Location     Type
 20292 ;;		None               void
 20293 ;; Registers used:
 20294 ;;		wreg, status,2, status,0
 20295 ;; Tracked objects:
 20296 ;;		On entry : 0/0
 20297 ;;		On exit  : 0/0
 20298 ;;		Unchanged: 0/0
 20299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20303 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20304 ;;Total ram usage:        3 bytes
 20305 ;; Hardware stack levels used:    1
 20306 ;; This function calls:
 20307 ;;		Nothing
 20308 ;; This function is called by:
 20309 ;;		i2_printf
 20310 ;; This function uses a non-reentrant model
 20311 ;;
 20312                           
 20313                           	psect	text77
 20314  015E18                     __ptext77:
 20315                           	opt stack 0
 20316  015E18                     i2_isdigit:
 20317                           	opt stack 15
 20318                           
 20319                           ; BSR set to: 14
 20320                           ;incstack = 0
 20321                           ;i2isdigit@c stored from wreg
 20322  015E18  6E03               	movwf	i2isdigit@c,c
 20323  015E1A  0E00               	movlw	0
 20324  015E1C  6E02               	movwf	i2_isdigit$2484,c
 20325  015E1E  0E3A               	movlw	58
 20326  015E20  6003               	cpfslt	i2isdigit@c,c
 20327  015E22  D005               	goto	i2l1566
 20328  015E24  0E2F               	movlw	47
 20329  015E26  6403               	cpfsgt	i2isdigit@c,c
 20330  015E28  D002               	goto	i2l1566
 20331  015E2A  0E01               	movlw	1
 20332  015E2C  6E02               	movwf	i2_isdigit$2484,c
 20333  015E2E                     i2l1566:
 20334  015E2E  C002  F001         	movff	i2_isdigit$2484,??i2_isdigit
 20335  015E32  3001               	rrcf	??i2_isdigit,w,c
 20336  015E34  0012               	return	
 20337  015E36                     __end_ofi2_isdigit:
 20338                           	opt stack 0
 20339                           tosu	equ	0xFFF
 20340                           tosh	equ	0xFFE
 20341                           tosl	equ	0xFFD
 20342                           pclatu	equ	0xFFB
 20343                           pclath	equ	0xFFA
 20344                           tblptru	equ	0xFF8
 20345                           tblptrh	equ	0xFF7
 20346                           tblptrl	equ	0xFF6
 20347                           tablat	equ	0xFF5
 20348                           prodh	equ	0xFF4
 20349                           prodl	equ	0xFF3
 20350                           intcon	equ	0xFF2
 20351                           postinc0	equ	0xFEE
 20352                           fsr0h	equ	0xFEA
 20353                           fsr0l	equ	0xFE9
 20354                           wreg	equ	0xFE8
 20355                           indf1	equ	0xFE7
 20356                           postdec1	equ	0xFE5
 20357                           fsr1h	equ	0xFE2
 20358                           fsr1l	equ	0xFE1
 20359                           bsr	equ	0xFE0
 20360                           indf2	equ	0xFDF
 20361                           postinc2	equ	0xFDE
 20362                           postdec2	equ	0xFDD
 20363                           fsr2h	equ	0xFDA
 20364                           fsr2l	equ	0xFD9
 20365                           status	equ	0xFD8
 20366                           
 20367 ;; *************** function i2_fround *****************
 20368 ;; Defined at:
 20369 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20370 ;; Parameters:    Size  Location     Type
 20371 ;;  prec            1    wreg     unsigned char 
 20372 ;; Auto vars:     Size  Location     Type
 20373 ;;  prec            1   62[COMRAM] unsigned char 
 20374 ;; Return value:  Size  Location     Type
 20375 ;;                  3   53[COMRAM] unsigned char 
 20376 ;; Registers used:
 20377 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20378 ;; Tracked objects:
 20379 ;;		On entry : 0/0
 20380 ;;		On exit  : 0/0
 20381 ;;		Unchanged: 0/0
 20382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20384 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20386 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20387 ;;Total ram usage:       10 bytes
 20388 ;; Hardware stack levels used:    1
 20389 ;; Hardware stack levels required when called:    2
 20390 ;; This function calls:
 20391 ;;		i2___awdiv
 20392 ;;		i2___awmod
 20393 ;;		i2___ftmul
 20394 ;;		i2___wmul
 20395 ;; This function is called by:
 20396 ;;		i2_printf
 20397 ;; This function uses a non-reentrant model
 20398 ;;
 20399                           
 20400                           	psect	text78
 20401  012C42                     __ptext78:
 20402                           	opt stack 0
 20403  012C42                     i2_fround:
 20404                           	opt stack 13
 20405                           
 20406                           ;incstack = 0
 20407                           ;i2fround@prec stored from wreg
 20408  012C42  6E3F               	movwf	i2fround@prec,c
 20409                           
 20410                           ;doprnt.c: 413: if(prec>=110)
 20411  012C44  0E6D               	movlw	109
 20412  012C46  643F               	cpfsgt	i2fround@prec,c
 20413  012C48  D0A8               	goto	i2l1050
 20414                           
 20415                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 20416  012C4A  0E00               	movlw	0
 20417  012C4C  6E12               	movwf	i2___wmul@multiplicand+1,c
 20418  012C4E  0E03               	movlw	3
 20419  012C50  6E11               	movwf	i2___wmul@multiplicand,c
 20420  012C52  0E00               	movlw	0
 20421  012C54  6E0A               	movwf	i2___awdiv@divisor+1,c
 20422  012C56  0E0A               	movlw	10
 20423  012C58  6E09               	movwf	i2___awdiv@divisor,c
 20424  012C5A  0E00               	movlw	0
 20425  012C5C  6E04               	movwf	i2___awmod@divisor+1,c
 20426  012C5E  0E64               	movlw	100
 20427  012C60  6E03               	movwf	i2___awmod@divisor,c
 20428  012C62  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 20429  012C66  6A02               	clrf	i2___awmod@dividend+1,c
 20430  012C68  ECCA  F0A9         	call	i2___awmod	;wreg free
 20431  012C6C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20432  012C70  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20433  012C74  EC5D  F0A8         	call	i2___awdiv	;wreg free
 20434  012C78  0E09               	movlw	9
 20435  012C7A  2407               	addwf	?i2___awdiv,w,c
 20436  012C7C  6E0F               	movwf	i2___wmul@multiplier,c
 20437  012C7E  0E00               	movlw	0
 20438  012C80  2008               	addwfc	?i2___awdiv+1,w,c
 20439  012C82  6E10               	movwf	i2___wmul@multiplier+1,c
 20440  012C84  ECC4  F0AE         	call	i2___wmul	;wreg free
 20441  012C88  0EA8               	movlw	low __npowers_
 20442  012C8A  240F               	addwf	?i2___wmul,w,c
 20443  012C8C  6EF6               	movwf	tblptrl,c
 20444  012C8E  0EF4               	movlw	high __npowers_
 20445  012C90  2010               	addwfc	?i2___wmul+1,w,c
 20446  012C92  6EF7               	movwf	tblptrh,c
 20447  012C94                     	if	1	;There are 3 active tblptr bytes
 20448  012C94  6AF8               	clrf	tblptru,c
 20449  012C96  0E00               	movlw	low (__mediumconst shr (0+16))
 20450  012C98  22F8               	addwfc	tblptru,f,c
 20451  012C9A                     	endif
 20452  012C9A  0009               	tblrd		*+
 20453  012C9C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20454  012CA0  0009               	tblrd		*+
 20455  012CA2  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20456  012CA6  000A               	tblrd		*-
 20457  012CA8  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20458  012CAC  0E00               	movlw	0
 20459  012CAE  6E0A               	movwf	i2___awdiv@divisor+1,c
 20460  012CB0  0E64               	movlw	100
 20461  012CB2  6E09               	movwf	i2___awdiv@divisor,c
 20462  012CB4  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 20463  012CB8  6A08               	clrf	i2___awdiv@dividend+1,c
 20464  012CBA  EC5D  F0A8         	call	i2___awdiv	;wreg free
 20465  012CBE  0E12               	movlw	18
 20466  012CC0  2407               	addwf	?i2___awdiv,w,c
 20467  012CC2  6E0F               	movwf	i2___wmul@multiplier,c
 20468  012CC4  0E00               	movlw	0
 20469  012CC6  2008               	addwfc	?i2___awdiv+1,w,c
 20470  012CC8  6E10               	movwf	i2___wmul@multiplier+1,c
 20471  012CCA  0E00               	movlw	0
 20472  012CCC  6E12               	movwf	i2___wmul@multiplicand+1,c
 20473  012CCE  0E03               	movlw	3
 20474  012CD0  6E11               	movwf	i2___wmul@multiplicand,c
 20475  012CD2  ECC4  F0AE         	call	i2___wmul	;wreg free
 20476  012CD6  0EA8               	movlw	low __npowers_
 20477  012CD8  240F               	addwf	?i2___wmul,w,c
 20478  012CDA  6EF6               	movwf	tblptrl,c
 20479  012CDC  0EF4               	movlw	high __npowers_
 20480  012CDE  2010               	addwfc	?i2___wmul+1,w,c
 20481  012CE0  6EF7               	movwf	tblptrh,c
 20482  012CE2                     	if	1	;There are 3 active tblptr bytes
 20483  012CE2  6AF8               	clrf	tblptru,c
 20484  012CE4  0E00               	movlw	low (__mediumconst shr (0+16))
 20485  012CE6  22F8               	addwfc	tblptru,f,c
 20486  012CE8                     	endif
 20487  012CE8  0009               	tblrd		*+
 20488  012CEA  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20489  012CEE  0009               	tblrd		*+
 20490  012CF0  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20491  012CF4  000A               	tblrd		*-
 20492  012CF6  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20493  012CFA  EC55  F0A2         	call	i2___ftmul	;wreg free
 20494  012CFE  C027  F03C         	movff	?i2___ftmul,i2_fround$3320
 20495  012D02  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3320+1
 20496  012D06  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3320+2
 20497                           
 20498                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 20499  012D0A  0E00               	movlw	0
 20500  012D0C  6E12               	movwf	i2___wmul@multiplicand+1,c
 20501  012D0E  0E03               	movlw	3
 20502  012D10  6E11               	movwf	i2___wmul@multiplicand,c
 20503  012D12  0E00               	movlw	0
 20504  012D14  6E04               	movwf	i2___awmod@divisor+1,c
 20505  012D16  0E0A               	movlw	10
 20506  012D18  6E03               	movwf	i2___awmod@divisor,c
 20507  012D1A  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 20508  012D1E  6A02               	clrf	i2___awmod@dividend+1,c
 20509  012D20  ECCA  F0A9         	call	i2___awmod	;wreg free
 20510  012D24  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20511  012D28  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20512  012D2C  ECC4  F0AE         	call	i2___wmul	;wreg free
 20513  012D30  0EA8               	movlw	low __npowers_
 20514  012D32  240F               	addwf	?i2___wmul,w,c
 20515  012D34  6EF6               	movwf	tblptrl,c
 20516  012D36  0EF4               	movlw	high __npowers_
 20517  012D38  2010               	addwfc	?i2___wmul+1,w,c
 20518  012D3A  6EF7               	movwf	tblptrh,c
 20519  012D3C                     	if	1	;There are 3 active tblptr bytes
 20520  012D3C  6AF8               	clrf	tblptru,c
 20521  012D3E  0E00               	movlw	low (__mediumconst shr (0+16))
 20522  012D40  22F8               	addwfc	tblptru,f,c
 20523  012D42                     	endif
 20524  012D42  0009               	tblrd		*+
 20525  012D44  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20526  012D48  0009               	tblrd		*+
 20527  012D4A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20528  012D4E  000A               	tblrd		*-
 20529  012D50  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20530  012D54  C03C  F027         	movff	i2_fround$3320,i2___ftmul@f1
 20531  012D58  C03D  F028         	movff	i2_fround$3320+1,i2___ftmul@f1+1
 20532  012D5C  C03E  F029         	movff	i2_fround$3320+2,i2___ftmul@f1+2
 20533  012D60  EC55  F0A2         	call	i2___ftmul	;wreg free
 20534  012D64  C027  F039         	movff	?i2___ftmul,i2_fround$3321
 20535  012D68  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3321+1
 20536  012D6C  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3321+2
 20537                           
 20538                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 20539  012D70  C039  F027         	movff	i2_fround$3321,i2___ftmul@f1
 20540  012D74  C03A  F028         	movff	i2_fround$3321+1,i2___ftmul@f1+1
 20541  012D78  C03B  F029         	movff	i2_fround$3321+2,i2___ftmul@f1+2
 20542  012D7C  0E00               	movlw	0
 20543  012D7E  6E2A               	movwf	i2___ftmul@f2,c
 20544  012D80  0E00               	movlw	0
 20545  012D82  6E2B               	movwf	i2___ftmul@f2+1,c
 20546  012D84  0E3F               	movlw	63
 20547  012D86  6E2C               	movwf	i2___ftmul@f2+2,c
 20548  012D88  EC55  F0A2         	call	i2___ftmul	;wreg free
 20549  012D8C  C027  F036         	movff	?i2___ftmul,?i2_fround
 20550  012D90  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 20551  012D94  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 20552  012D98  0012               	return	
 20553  012D9A                     i2l1050:
 20554                           
 20555                           ;doprnt.c: 415: else if(prec > 10)
 20556  012D9A  0E0A               	movlw	10
 20557  012D9C  643F               	cpfsgt	i2fround@prec,c
 20558  012D9E  D069               	goto	i2l1053
 20559                           
 20560                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 20561  012DA0  0E00               	movlw	0
 20562  012DA2  6E12               	movwf	i2___wmul@multiplicand+1,c
 20563  012DA4  0E03               	movlw	3
 20564  012DA6  6E11               	movwf	i2___wmul@multiplicand,c
 20565  012DA8  0E00               	movlw	0
 20566  012DAA  6E04               	movwf	i2___awmod@divisor+1,c
 20567  012DAC  0E0A               	movlw	10
 20568  012DAE  6E03               	movwf	i2___awmod@divisor,c
 20569  012DB0  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 20570  012DB4  6A02               	clrf	i2___awmod@dividend+1,c
 20571  012DB6  ECCA  F0A9         	call	i2___awmod	;wreg free
 20572  012DBA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20573  012DBE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20574  012DC2  ECC4  F0AE         	call	i2___wmul	;wreg free
 20575  012DC6  0EA8               	movlw	low __npowers_
 20576  012DC8  240F               	addwf	?i2___wmul,w,c
 20577  012DCA  6EF6               	movwf	tblptrl,c
 20578  012DCC  0EF4               	movlw	high __npowers_
 20579  012DCE  2010               	addwfc	?i2___wmul+1,w,c
 20580  012DD0  6EF7               	movwf	tblptrh,c
 20581  012DD2                     	if	1	;There are 3 active tblptr bytes
 20582  012DD2  6AF8               	clrf	tblptru,c
 20583  012DD4  0E00               	movlw	low (__mediumconst shr (0+16))
 20584  012DD6  22F8               	addwfc	tblptru,f,c
 20585  012DD8                     	endif
 20586  012DD8  0009               	tblrd		*+
 20587  012DDA  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20588  012DDE  0009               	tblrd		*+
 20589  012DE0  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20590  012DE4  000A               	tblrd		*-
 20591  012DE6  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20592  012DEA  0E00               	movlw	0
 20593  012DEC  6E0A               	movwf	i2___awdiv@divisor+1,c
 20594  012DEE  0E0A               	movlw	10
 20595  012DF0  6E09               	movwf	i2___awdiv@divisor,c
 20596  012DF2  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 20597  012DF6  6A08               	clrf	i2___awdiv@dividend+1,c
 20598  012DF8  EC5D  F0A8         	call	i2___awdiv	;wreg free
 20599  012DFC  0E09               	movlw	9
 20600  012DFE  2407               	addwf	?i2___awdiv,w,c
 20601  012E00  6E0F               	movwf	i2___wmul@multiplier,c
 20602  012E02  0E00               	movlw	0
 20603  012E04  2008               	addwfc	?i2___awdiv+1,w,c
 20604  012E06  6E10               	movwf	i2___wmul@multiplier+1,c
 20605  012E08  0E00               	movlw	0
 20606  012E0A  6E12               	movwf	i2___wmul@multiplicand+1,c
 20607  012E0C  0E03               	movlw	3
 20608  012E0E  6E11               	movwf	i2___wmul@multiplicand,c
 20609  012E10  ECC4  F0AE         	call	i2___wmul	;wreg free
 20610  012E14  0EA8               	movlw	low __npowers_
 20611  012E16  240F               	addwf	?i2___wmul,w,c
 20612  012E18  6EF6               	movwf	tblptrl,c
 20613  012E1A  0EF4               	movlw	high __npowers_
 20614  012E1C  2010               	addwfc	?i2___wmul+1,w,c
 20615  012E1E  6EF7               	movwf	tblptrh,c
 20616  012E20                     	if	1	;There are 3 active tblptr bytes
 20617  012E20  6AF8               	clrf	tblptru,c
 20618  012E22  0E00               	movlw	low (__mediumconst shr (0+16))
 20619  012E24  22F8               	addwfc	tblptru,f,c
 20620  012E26                     	endif
 20621  012E26  0009               	tblrd		*+
 20622  012E28  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20623  012E2C  0009               	tblrd		*+
 20624  012E2E  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20625  012E32  000A               	tblrd		*-
 20626  012E34  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20627  012E38  EC55  F0A2         	call	i2___ftmul	;wreg free
 20628  012E3C  C027  F03C         	movff	?i2___ftmul,i2_fround$3320
 20629  012E40  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3320+1
 20630  012E44  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3320+2
 20631                           
 20632                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 20633  012E48  C03C  F027         	movff	i2_fround$3320,i2___ftmul@f1
 20634  012E4C  C03D  F028         	movff	i2_fround$3320+1,i2___ftmul@f1+1
 20635  012E50  C03E  F029         	movff	i2_fround$3320+2,i2___ftmul@f1+2
 20636  012E54  0E00               	movlw	0
 20637  012E56  6E2A               	movwf	i2___ftmul@f2,c
 20638  012E58  0E00               	movlw	0
 20639  012E5A  6E2B               	movwf	i2___ftmul@f2+1,c
 20640  012E5C  0E3F               	movlw	63
 20641  012E5E  6E2C               	movwf	i2___ftmul@f2+2,c
 20642  012E60  EC55  F0A2         	call	i2___ftmul	;wreg free
 20643  012E64  C027  F036         	movff	?i2___ftmul,?i2_fround
 20644  012E68  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 20645  012E6C  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 20646  012E70  0012               	return	
 20647  012E72                     i2l1053:
 20648                           
 20649                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 20650  012E72  503F               	movf	i2fround@prec,w,c
 20651  012E74  0D03               	mullw	3
 20652  012E76  0EA8               	movlw	low __npowers_
 20653  012E78  24F3               	addwf	prodl,w,c
 20654  012E7A  6EF6               	movwf	tblptrl,c
 20655  012E7C  0EF4               	movlw	high __npowers_
 20656  012E7E  20F4               	addwfc	prodh,w,c
 20657  012E80  6EF7               	movwf	tblptrh,c
 20658  012E82                     	if	1	;There are 3 active tblptr bytes
 20659  012E82  6AF8               	clrf	tblptru,c
 20660  012E84  0E00               	movlw	low (__mediumconst shr (0+16))
 20661  012E86  22F8               	addwfc	tblptru,f,c
 20662  012E88                     	endif
 20663  012E88  0009               	tblrd		*+
 20664  012E8A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20665  012E8E  0009               	tblrd		*+
 20666  012E90  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20667  012E94  000A               	tblrd		*-
 20668  012E96  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20669  012E9A  0E00               	movlw	0
 20670  012E9C  6E2A               	movwf	i2___ftmul@f2,c
 20671  012E9E  0E00               	movlw	0
 20672  012EA0  6E2B               	movwf	i2___ftmul@f2+1,c
 20673  012EA2  0E3F               	movlw	63
 20674  012EA4  6E2C               	movwf	i2___ftmul@f2+2,c
 20675  012EA6  EC55  F0A2         	call	i2___ftmul	;wreg free
 20676  012EAA  C027  F036         	movff	?i2___ftmul,?i2_fround
 20677  012EAE  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 20678  012EB2  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 20679  012EB6  0012               	return	
 20680  012EB8                     __end_ofi2_fround:
 20681                           	opt stack 0
 20682                           tosu	equ	0xFFF
 20683                           tosh	equ	0xFFE
 20684                           tosl	equ	0xFFD
 20685                           pclatu	equ	0xFFB
 20686                           pclath	equ	0xFFA
 20687                           tblptru	equ	0xFF8
 20688                           tblptrh	equ	0xFF7
 20689                           tblptrl	equ	0xFF6
 20690                           tablat	equ	0xFF5
 20691                           prodh	equ	0xFF4
 20692                           prodl	equ	0xFF3
 20693                           intcon	equ	0xFF2
 20694                           postinc0	equ	0xFEE
 20695                           fsr0h	equ	0xFEA
 20696                           fsr0l	equ	0xFE9
 20697                           wreg	equ	0xFE8
 20698                           indf1	equ	0xFE7
 20699                           postdec1	equ	0xFE5
 20700                           fsr1h	equ	0xFE2
 20701                           fsr1l	equ	0xFE1
 20702                           bsr	equ	0xFE0
 20703                           indf2	equ	0xFDF
 20704                           postinc2	equ	0xFDE
 20705                           postdec2	equ	0xFDD
 20706                           fsr2h	equ	0xFDA
 20707                           fsr2l	equ	0xFD9
 20708                           status	equ	0xFD8
 20709                           
 20710 ;; *************** function i2___awmod *****************
 20711 ;; Defined at:
 20712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 20713 ;; Parameters:    Size  Location     Type
 20714 ;;  dividend        2    0[COMRAM] int 
 20715 ;;  divisor         2    2[COMRAM] int 
 20716 ;; Auto vars:     Size  Location     Type
 20717 ;;  __awmod         1    5[COMRAM] unsigned char 
 20718 ;;  __awmod         1    4[COMRAM] unsigned char 
 20719 ;; Return value:  Size  Location     Type
 20720 ;;                  2    0[COMRAM] int 
 20721 ;; Registers used:
 20722 ;;		wreg, status,2, status,0
 20723 ;; Tracked objects:
 20724 ;;		On entry : 0/0
 20725 ;;		On exit  : 0/0
 20726 ;;		Unchanged: 0/0
 20727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20732 ;;Total ram usage:        6 bytes
 20733 ;; Hardware stack levels used:    1
 20734 ;; This function calls:
 20735 ;;		Nothing
 20736 ;; This function is called by:
 20737 ;;		i2_fround
 20738 ;;		i2_scale
 20739 ;; This function uses a non-reentrant model
 20740 ;;
 20741                           
 20742                           	psect	text79
 20743  015394                     __ptext79:
 20744                           	opt stack 0
 20745  015394                     i2___awmod:
 20746                           	opt stack 14
 20747                           
 20748                           ;incstack = 0
 20749  015394  0E00               	movlw	0
 20750  015396  6E06               	movwf	i2___awmod@sign,c
 20751  015398  AE02               	btfss	i2___awmod@dividend+1,7,c
 20752  01539A  D006               	goto	i2l1371
 20753  01539C  6C01               	negf	i2___awmod@dividend,c
 20754  01539E  1E02               	comf	i2___awmod@dividend+1,f,c
 20755  0153A0  B0D8               	btfsc	status,0,c
 20756  0153A2  2A02               	incf	i2___awmod@dividend+1,f,c
 20757  0153A4  0E01               	movlw	1
 20758  0153A6  6E06               	movwf	i2___awmod@sign,c
 20759  0153A8                     i2l1371:
 20760  0153A8  AE04               	btfss	i2___awmod@divisor+1,7,c
 20761  0153AA  D004               	goto	i2l1372
 20762  0153AC  6C03               	negf	i2___awmod@divisor,c
 20763  0153AE  1E04               	comf	i2___awmod@divisor+1,f,c
 20764  0153B0  B0D8               	btfsc	status,0,c
 20765  0153B2  2A04               	incf	i2___awmod@divisor+1,f,c
 20766  0153B4                     i2l1372:
 20767  0153B4  5003               	movf	i2___awmod@divisor,w,c
 20768  0153B6  1004               	iorwf	i2___awmod@divisor+1,w,c
 20769  0153B8  B4D8               	btfsc	status,2,c
 20770  0153BA  D018               	goto	i2l1379
 20771  0153BC  0E01               	movlw	1
 20772  0153BE  6E05               	movwf	i2___awmod@counter,c
 20773  0153C0  D004               	goto	i2l1374
 20774  0153C2  90D8               	bcf	status,0,c
 20775  0153C4  3603               	rlcf	i2___awmod@divisor,f,c
 20776  0153C6  3604               	rlcf	i2___awmod@divisor+1,f,c
 20777  0153C8  2A05               	incf	i2___awmod@counter,f,c
 20778  0153CA                     i2l1374:
 20779  0153CA  AE04               	btfss	i2___awmod@divisor+1,7,c
 20780  0153CC  D7FA               	goto	i2l1375
 20781  0153CE                     i2u1077_40:
 20782  0153CE  5003               	movf	i2___awmod@divisor,w,c
 20783  0153D0  5C01               	subwf	i2___awmod@dividend,w,c
 20784  0153D2  5004               	movf	i2___awmod@divisor+1,w,c
 20785  0153D4  5802               	subwfb	i2___awmod@dividend+1,w,c
 20786  0153D6  A0D8               	btfss	status,0,c
 20787  0153D8  D004               	goto	i2l1378
 20788  0153DA  5003               	movf	i2___awmod@divisor,w,c
 20789  0153DC  5E01               	subwf	i2___awmod@dividend,f,c
 20790  0153DE  5004               	movf	i2___awmod@divisor+1,w,c
 20791  0153E0  5A02               	subwfb	i2___awmod@dividend+1,f,c
 20792  0153E2                     i2l1378:
 20793  0153E2  90D8               	bcf	status,0,c
 20794  0153E4  3204               	rrcf	i2___awmod@divisor+1,f,c
 20795  0153E6  3203               	rrcf	i2___awmod@divisor,f,c
 20796  0153E8  2E05               	decfsz	i2___awmod@counter,f,c
 20797  0153EA  D7F1               	goto	i2u1077_40
 20798  0153EC                     i2l1379:
 20799  0153EC  5006               	movf	i2___awmod@sign,w,c
 20800  0153EE  B4D8               	btfsc	status,2,c
 20801  0153F0  D004               	goto	i2l1380
 20802  0153F2  6C01               	negf	i2___awmod@dividend,c
 20803  0153F4  1E02               	comf	i2___awmod@dividend+1,f,c
 20804  0153F6  B0D8               	btfsc	status,0,c
 20805  0153F8  2A02               	incf	i2___awmod@dividend+1,f,c
 20806  0153FA                     i2l1380:
 20807  0153FA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20808  0153FE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20809  015402  0012               	return	
 20810  015404                     __end_ofi2___awmod:
 20811                           	opt stack 0
 20812                           tosu	equ	0xFFF
 20813                           tosh	equ	0xFFE
 20814                           tosl	equ	0xFFD
 20815                           pclatu	equ	0xFFB
 20816                           pclath	equ	0xFFA
 20817                           tblptru	equ	0xFF8
 20818                           tblptrh	equ	0xFF7
 20819                           tblptrl	equ	0xFF6
 20820                           tablat	equ	0xFF5
 20821                           prodh	equ	0xFF4
 20822                           prodl	equ	0xFF3
 20823                           intcon	equ	0xFF2
 20824                           postinc0	equ	0xFEE
 20825                           fsr0h	equ	0xFEA
 20826                           fsr0l	equ	0xFE9
 20827                           wreg	equ	0xFE8
 20828                           indf1	equ	0xFE7
 20829                           postdec1	equ	0xFE5
 20830                           fsr1h	equ	0xFE2
 20831                           fsr1l	equ	0xFE1
 20832                           bsr	equ	0xFE0
 20833                           indf2	equ	0xFDF
 20834                           postinc2	equ	0xFDE
 20835                           postdec2	equ	0xFDD
 20836                           fsr2h	equ	0xFDA
 20837                           fsr2l	equ	0xFD9
 20838                           status	equ	0xFD8
 20839                           
 20840 ;; *************** function i2___awdiv *****************
 20841 ;; Defined at:
 20842 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;  dividend        2    6[COMRAM] int 
 20845 ;;  divisor         2    8[COMRAM] int 
 20846 ;; Auto vars:     Size  Location     Type
 20847 ;;  __awdiv         2   12[COMRAM] int 
 20848 ;;  __awdiv         1   11[COMRAM] unsigned char 
 20849 ;;  __awdiv         1   10[COMRAM] unsigned char 
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  2    6[COMRAM] int 
 20852 ;; Registers used:
 20853 ;;		wreg, status,2, status,0
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20860 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20862 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20863 ;;Total ram usage:        8 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; This function calls:
 20866 ;;		Nothing
 20867 ;; This function is called by:
 20868 ;;		i2_fround
 20869 ;;		i2_scale
 20870 ;;		i2_printf
 20871 ;; This function uses a non-reentrant model
 20872 ;;
 20873                           
 20874                           	psect	text80
 20875  0150BA                     __ptext80:
 20876                           	opt stack 0
 20877  0150BA                     i2___awdiv:
 20878                           	opt stack 14
 20879                           
 20880                           ;incstack = 0
 20881  0150BA  0E00               	movlw	0
 20882  0150BC  6E0C               	movwf	i2___awdiv@sign,c
 20883  0150BE  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 20884  0150C0  D006               	goto	i2l1358
 20885  0150C2  6C09               	negf	i2___awdiv@divisor,c
 20886  0150C4  1E0A               	comf	i2___awdiv@divisor+1,f,c
 20887  0150C6  B0D8               	btfsc	status,0,c
 20888  0150C8  2A0A               	incf	i2___awdiv@divisor+1,f,c
 20889  0150CA  0E01               	movlw	1
 20890  0150CC  6E0C               	movwf	i2___awdiv@sign,c
 20891  0150CE                     i2l1358:
 20892  0150CE  AE08               	btfss	i2___awdiv@dividend+1,7,c
 20893  0150D0  D006               	goto	i2l1359
 20894  0150D2  6C07               	negf	i2___awdiv@dividend,c
 20895  0150D4  1E08               	comf	i2___awdiv@dividend+1,f,c
 20896  0150D6  B0D8               	btfsc	status,0,c
 20897  0150D8  2A08               	incf	i2___awdiv@dividend+1,f,c
 20898  0150DA  0E01               	movlw	1
 20899  0150DC  1A0C               	xorwf	i2___awdiv@sign,f,c
 20900  0150DE                     i2l1359:
 20901  0150DE  0E00               	movlw	0
 20902  0150E0  6E0E               	movwf	i2___awdiv@quotient+1,c
 20903  0150E2  0E00               	movlw	0
 20904  0150E4  6E0D               	movwf	i2___awdiv@quotient,c
 20905  0150E6  5009               	movf	i2___awdiv@divisor,w,c
 20906  0150E8  100A               	iorwf	i2___awdiv@divisor+1,w,c
 20907  0150EA  B4D8               	btfsc	status,2,c
 20908  0150EC  D01C               	goto	i2l1366
 20909  0150EE  0E01               	movlw	1
 20910  0150F0  6E0B               	movwf	i2___awdiv@counter,c
 20911  0150F2  D004               	goto	i2l1361
 20912  0150F4  90D8               	bcf	status,0,c
 20913  0150F6  3609               	rlcf	i2___awdiv@divisor,f,c
 20914  0150F8  360A               	rlcf	i2___awdiv@divisor+1,f,c
 20915  0150FA  2A0B               	incf	i2___awdiv@counter,f,c
 20916  0150FC                     i2l1361:
 20917  0150FC  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 20918  0150FE  D7FA               	goto	i2l1362
 20919  015100                     i2u1071_40:
 20920  015100  90D8               	bcf	status,0,c
 20921  015102  360D               	rlcf	i2___awdiv@quotient,f,c
 20922  015104  360E               	rlcf	i2___awdiv@quotient+1,f,c
 20923  015106  5009               	movf	i2___awdiv@divisor,w,c
 20924  015108  5C07               	subwf	i2___awdiv@dividend,w,c
 20925  01510A  500A               	movf	i2___awdiv@divisor+1,w,c
 20926  01510C  5808               	subwfb	i2___awdiv@dividend+1,w,c
 20927  01510E  A0D8               	btfss	status,0,c
 20928  015110  D005               	goto	i2l1365
 20929  015112  5009               	movf	i2___awdiv@divisor,w,c
 20930  015114  5E07               	subwf	i2___awdiv@dividend,f,c
 20931  015116  500A               	movf	i2___awdiv@divisor+1,w,c
 20932  015118  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 20933  01511A  800D               	bsf	i2___awdiv@quotient,0,c
 20934  01511C                     i2l1365:
 20935  01511C  90D8               	bcf	status,0,c
 20936  01511E  320A               	rrcf	i2___awdiv@divisor+1,f,c
 20937  015120  3209               	rrcf	i2___awdiv@divisor,f,c
 20938  015122  2E0B               	decfsz	i2___awdiv@counter,f,c
 20939  015124  D7ED               	goto	i2u1071_40
 20940  015126                     i2l1366:
 20941  015126  500C               	movf	i2___awdiv@sign,w,c
 20942  015128  B4D8               	btfsc	status,2,c
 20943  01512A  D004               	goto	i2l1367
 20944  01512C  6C0D               	negf	i2___awdiv@quotient,c
 20945  01512E  1E0E               	comf	i2___awdiv@quotient+1,f,c
 20946  015130  B0D8               	btfsc	status,0,c
 20947  015132  2A0E               	incf	i2___awdiv@quotient+1,f,c
 20948  015134                     i2l1367:
 20949  015134  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 20950  015138  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 20951  01513C  0012               	return	
 20952  01513E                     __end_ofi2___awdiv:
 20953                           	opt stack 0
 20954                           tosu	equ	0xFFF
 20955                           tosh	equ	0xFFE
 20956                           tosl	equ	0xFFD
 20957                           pclatu	equ	0xFFB
 20958                           pclath	equ	0xFFA
 20959                           tblptru	equ	0xFF8
 20960                           tblptrh	equ	0xFF7
 20961                           tblptrl	equ	0xFF6
 20962                           tablat	equ	0xFF5
 20963                           prodh	equ	0xFF4
 20964                           prodl	equ	0xFF3
 20965                           intcon	equ	0xFF2
 20966                           postinc0	equ	0xFEE
 20967                           fsr0h	equ	0xFEA
 20968                           fsr0l	equ	0xFE9
 20969                           wreg	equ	0xFE8
 20970                           indf1	equ	0xFE7
 20971                           postdec1	equ	0xFE5
 20972                           fsr1h	equ	0xFE2
 20973                           fsr1l	equ	0xFE1
 20974                           bsr	equ	0xFE0
 20975                           indf2	equ	0xFDF
 20976                           postinc2	equ	0xFDE
 20977                           postdec2	equ	0xFDD
 20978                           fsr2h	equ	0xFDA
 20979                           fsr2l	equ	0xFD9
 20980                           status	equ	0xFD8
 20981                           
 20982 ;; *************** function i2__tdiv_to_l_ *****************
 20983 ;; Defined at:
 20984 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 20985 ;; Parameters:    Size  Location     Type
 20986 ;;  f1              3    0[COMRAM] float 
 20987 ;;  f2              3    3[COMRAM] float 
 20988 ;; Auto vars:     Size  Location     Type
 20989 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 20990 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 20991 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 20992 ;; Return value:  Size  Location     Type
 20993 ;;                  4    0[COMRAM] unsigned long 
 20994 ;; Registers used:
 20995 ;;		wreg, status,2, status,0
 20996 ;; Tracked objects:
 20997 ;;		On entry : 0/0
 20998 ;;		On exit  : 0/0
 20999 ;;		Unchanged: 0/0
 21000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21001 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21002 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21003 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21004 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21005 ;;Total ram usage:       15 bytes
 21006 ;; Hardware stack levels used:    1
 21007 ;; This function calls:
 21008 ;;		Nothing
 21009 ;; This function is called by:
 21010 ;;		i2_printf
 21011 ;; This function uses a non-reentrant model
 21012 ;;
 21013                           
 21014                           	psect	text81
 21015  013D28                     __ptext81:
 21016                           	opt stack 0
 21017  013D28                     i2__tdiv_to_l_:
 21018                           	opt stack 15
 21019                           
 21020                           ;incstack = 0
 21021  013D28  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 21022  013D2C  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21023  013D2E  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21024  013D30  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 21025  013D32  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 21026  013D34  E301               	bnc	u1111_41
 21027  013D36  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 21028  013D38                     u1111_41:
 21029  013D38  5007               	movf	??i2__tdiv_to_l_,w,c
 21030  013D3A  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 21031  013D3C  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21032  013D3E  A4D8               	btfss	status,2,c
 21033  013D40  D009               	goto	i2l1506
 21034  013D42  0E00               	movlw	0
 21035  013D44  6E01               	movwf	?i2__tdiv_to_l_,c
 21036  013D46  0E00               	movlw	0
 21037  013D48  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21038  013D4A  0E00               	movlw	0
 21039  013D4C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21040  013D4E  0E00               	movlw	0
 21041  013D50  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21042  013D52  0012               	return	
 21043  013D54                     i2l1506:
 21044  013D54  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 21045  013D58  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21046  013D5A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21047  013D5C  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 21048  013D5E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 21049  013D60  E301               	bnc	u1113_41
 21050  013D62  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 21051  013D64                     u1113_41:
 21052  013D64  5007               	movf	??i2__tdiv_to_l_,w,c
 21053  013D66  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 21054  013D68  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 21055  013D6A  A4D8               	btfss	status,2,c
 21056  013D6C  D009               	goto	i2l1508
 21057  013D6E  0E00               	movlw	0
 21058  013D70  6E01               	movwf	?i2__tdiv_to_l_,c
 21059  013D72  0E00               	movlw	0
 21060  013D74  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21061  013D76  0E00               	movlw	0
 21062  013D78  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21063  013D7A  0E00               	movlw	0
 21064  013D7C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21065  013D7E  0012               	return	
 21066  013D80                     i2l1508:
 21067  013D80  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 21068  013D82  0EFF               	movlw	255
 21069  013D84  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 21070  013D86  0EFF               	movlw	255
 21071  013D88  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 21072  013D8A  0E00               	movlw	0
 21073  013D8C  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 21074  013D8E  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 21075  013D90  0EFF               	movlw	255
 21076  013D92  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 21077  013D94  0EFF               	movlw	255
 21078  013D96  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 21079  013D98  0E00               	movlw	0
 21080  013D9A  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 21081  013D9C  0E00               	movlw	0
 21082  013D9E  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 21083  013DA0  0E00               	movlw	0
 21084  013DA2  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 21085  013DA4  0E00               	movlw	0
 21086  013DA6  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 21087  013DA8  0E00               	movlw	0
 21088  013DAA  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 21089  013DAC  0E7F               	movlw	127
 21090  013DAE  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 21091  013DB0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 21092  013DB2  0F98               	addlw	152
 21093  013DB4  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 21094  013DB6  0E18               	movlw	24
 21095  013DB8  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 21096  013DBA                     i2l1509:
 21097  013DBA  90D8               	bcf	status,0,c
 21098  013DBC  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 21099  013DBE  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 21100  013DC0  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 21101  013DC2  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 21102  013DC4  5004               	movf	i2__tdiv_to_l_@f2,w,c
 21103  013DC6  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 21104  013DC8  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 21105  013DCA  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 21106  013DCC  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 21107  013DCE  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 21108  013DD0  A0D8               	btfss	status,0,c
 21109  013DD2  D007               	goto	i2l1510
 21110  013DD4  5004               	movf	i2__tdiv_to_l_@f2,w,c
 21111  013DD6  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 21112  013DD8  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 21113  013DDA  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 21114  013DDC  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 21115  013DDE  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 21116  013DE0  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 21117  013DE2                     i2l1510:
 21118  013DE2  90D8               	bcf	status,0,c
 21119  013DE4  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 21120  013DE6  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 21121  013DE8  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 21122  013DEA  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 21123  013DEC  D7E6               	goto	i2l1509
 21124  013DEE  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 21125  013DF0  D016               	goto	i2l1512
 21126  013DF2  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21127  013DF4  0A80               	xorlw	128
 21128  013DF6  0F97               	addlw	151
 21129  013DF8  B0D8               	btfsc	status,0,c
 21130  013DFA  D009               	goto	i2l1513
 21131  013DFC  0E00               	movlw	0
 21132  013DFE  6E01               	movwf	?i2__tdiv_to_l_,c
 21133  013E00  0E00               	movlw	0
 21134  013E02  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21135  013E04  0E00               	movlw	0
 21136  013E06  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21137  013E08  0E00               	movlw	0
 21138  013E0A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21139  013E0C  0012               	return	
 21140  013E0E                     i2l1513:
 21141  013E0E  90D8               	bcf	status,0,c
 21142  013E10  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 21143  013E12  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 21144  013E14  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 21145  013E16  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 21146  013E18  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 21147  013E1A  D7F9               	goto	i2l1513
 21148  013E1C  D015               	goto	i2u1119_40
 21149  013E1E                     i2l1512:
 21150  013E1E  0E17               	movlw	23
 21151  013E20  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 21152  013E22  D00F               	goto	i2l1518
 21153  013E24  0E00               	movlw	0
 21154  013E26  6E01               	movwf	?i2__tdiv_to_l_,c
 21155  013E28  0E00               	movlw	0
 21156  013E2A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21157  013E2C  0E00               	movlw	0
 21158  013E2E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21159  013E30  0E00               	movlw	0
 21160  013E32  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21161  013E34  0012               	return	
 21162  013E36  90D8               	bcf	status,0,c
 21163  013E38  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 21164  013E3A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 21165  013E3C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 21166  013E3E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 21167  013E40  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 21168  013E42                     i2l1518:
 21169  013E42  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21170  013E44  A4D8               	btfss	status,2,c
 21171  013E46  D7F7               	goto	i2l1519
 21172  013E48                     i2u1119_40:
 21173  013E48  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 21174  013E4C  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 21175  013E50  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 21176  013E54  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 21177  013E58  0012               	return		;funcret
 21178  013E5A                     __end_ofi2__tdiv_to_l_:
 21179                           	opt stack 0
 21180                           tosu	equ	0xFFF
 21181                           tosh	equ	0xFFE
 21182                           tosl	equ	0xFFD
 21183                           pclatu	equ	0xFFB
 21184                           pclath	equ	0xFFA
 21185                           tblptru	equ	0xFF8
 21186                           tblptrh	equ	0xFF7
 21187                           tblptrl	equ	0xFF6
 21188                           tablat	equ	0xFF5
 21189                           prodh	equ	0xFF4
 21190                           prodl	equ	0xFF3
 21191                           intcon	equ	0xFF2
 21192                           postinc0	equ	0xFEE
 21193                           fsr0h	equ	0xFEA
 21194                           fsr0l	equ	0xFE9
 21195                           wreg	equ	0xFE8
 21196                           indf1	equ	0xFE7
 21197                           postdec1	equ	0xFE5
 21198                           fsr1h	equ	0xFE2
 21199                           fsr1l	equ	0xFE1
 21200                           bsr	equ	0xFE0
 21201                           indf2	equ	0xFDF
 21202                           postinc2	equ	0xFDE
 21203                           postdec2	equ	0xFDD
 21204                           fsr2h	equ	0xFDA
 21205                           fsr2l	equ	0xFD9
 21206                           status	equ	0xFD8
 21207                           
 21208 ;; *************** function i2__div_to_l_ *****************
 21209 ;; Defined at:
 21210 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 21211 ;; Parameters:    Size  Location     Type
 21212 ;;  f1              3    0[COMRAM] unsigned long 
 21213 ;;  f2              3    3[COMRAM] unsigned long 
 21214 ;; Auto vars:     Size  Location     Type
 21215 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 21216 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 21217 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 21218 ;; Return value:  Size  Location     Type
 21219 ;;                  4    0[COMRAM] unsigned long 
 21220 ;; Registers used:
 21221 ;;		wreg, status,2, status,0
 21222 ;; Tracked objects:
 21223 ;;		On entry : 0/0
 21224 ;;		On exit  : 0/0
 21225 ;;		Unchanged: 0/0
 21226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21227 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21228 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21230 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21231 ;;Total ram usage:       12 bytes
 21232 ;; Hardware stack levels used:    1
 21233 ;; This function calls:
 21234 ;;		Nothing
 21235 ;; This function is called by:
 21236 ;;		i2_printf
 21237 ;; This function uses a non-reentrant model
 21238 ;;
 21239                           
 21240                           	psect	text82
 21241  013F84                     __ptext82:
 21242                           	opt stack 0
 21243  013F84                     i2__div_to_l_:
 21244                           	opt stack 15
 21245                           
 21246                           ;incstack = 0
 21247  013F84  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 21248  013F86  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 21249  013F88  6E0C               	movwf	i2__div_to_l_@exp1,c
 21250  013F8A  500C               	movf	i2__div_to_l_@exp1,w,c
 21251  013F8C  A4D8               	btfss	status,2,c
 21252  013F8E  D009               	goto	i2l1402
 21253  013F90  0E00               	movlw	0
 21254  013F92  6E01               	movwf	?i2__div_to_l_,c
 21255  013F94  0E00               	movlw	0
 21256  013F96  6E02               	movwf	?i2__div_to_l_+1,c
 21257  013F98  0E00               	movlw	0
 21258  013F9A  6E03               	movwf	?i2__div_to_l_+2,c
 21259  013F9C  0E00               	movlw	0
 21260  013F9E  6E04               	movwf	?i2__div_to_l_+3,c
 21261  013FA0  0012               	return	
 21262  013FA2                     i2l1402:
 21263  013FA2  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 21264  013FA4  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 21265  013FA6  6E0B               	movwf	i2__div_to_l_@cntr,c
 21266  013FA8  500B               	movf	i2__div_to_l_@cntr,w,c
 21267  013FAA  A4D8               	btfss	status,2,c
 21268  013FAC  D009               	goto	i2l1404
 21269  013FAE  0E00               	movlw	0
 21270  013FB0  6E01               	movwf	?i2__div_to_l_,c
 21271  013FB2  0E00               	movlw	0
 21272  013FB4  6E02               	movwf	?i2__div_to_l_+1,c
 21273  013FB6  0E00               	movlw	0
 21274  013FB8  6E03               	movwf	?i2__div_to_l_+2,c
 21275  013FBA  0E00               	movlw	0
 21276  013FBC  6E04               	movwf	?i2__div_to_l_+3,c
 21277  013FBE  0012               	return	
 21278  013FC0                     i2l1404:
 21279  013FC0  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 21280  013FC2  0EFF               	movlw	255
 21281  013FC4  1601               	andwf	i2__div_to_l_@f1,f,c
 21282  013FC6  0EFF               	movlw	255
 21283  013FC8  1602               	andwf	i2__div_to_l_@f1+1,f,c
 21284  013FCA  0EFF               	movlw	255
 21285  013FCC  1603               	andwf	i2__div_to_l_@f1+2,f,c
 21286  013FCE  0E00               	movlw	0
 21287  013FD0  1604               	andwf	i2__div_to_l_@f1+3,f,c
 21288  013FD2  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 21289  013FD4  0EFF               	movlw	255
 21290  013FD6  1604               	andwf	i2__div_to_l_@f2,f,c
 21291  013FD8  0EFF               	movlw	255
 21292  013FDA  1605               	andwf	i2__div_to_l_@f2+1,f,c
 21293  013FDC  0EFF               	movlw	255
 21294  013FDE  1606               	andwf	i2__div_to_l_@f2+2,f,c
 21295  013FE0  0E00               	movlw	0
 21296  013FE2  1607               	andwf	i2__div_to_l_@f2+3,f,c
 21297  013FE4  0E00               	movlw	0
 21298  013FE6  6E07               	movwf	i2__div_to_l_@quot,c
 21299  013FE8  0E00               	movlw	0
 21300  013FEA  6E08               	movwf	i2__div_to_l_@quot+1,c
 21301  013FEC  0E00               	movlw	0
 21302  013FEE  6E09               	movwf	i2__div_to_l_@quot+2,c
 21303  013FF0  0E00               	movlw	0
 21304  013FF2  6E0A               	movwf	i2__div_to_l_@quot+3,c
 21305  013FF4  0E7F               	movlw	127
 21306  013FF6  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 21307  013FF8  500B               	movf	i2__div_to_l_@cntr,w,c
 21308  013FFA  0FA0               	addlw	160
 21309  013FFC  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 21310  013FFE  0E20               	movlw	32
 21311  014000  6E0B               	movwf	i2__div_to_l_@cntr,c
 21312  014002  90D8               	bcf	status,0,c
 21313  014004  3607               	rlcf	i2__div_to_l_@quot,f,c
 21314  014006  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 21315  014008  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 21316  01400A  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 21317  01400C  5004               	movf	i2__div_to_l_@f2,w,c
 21318  01400E  5C01               	subwf	i2__div_to_l_@f1,w,c
 21319  014010  5005               	movf	i2__div_to_l_@f2+1,w,c
 21320  014012  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 21321  014014  5006               	movf	i2__div_to_l_@f2+2,w,c
 21322  014016  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 21323  014018  5007               	movf	i2__div_to_l_@f2+3,w,c
 21324  01401A  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 21325  01401C  A0D8               	btfss	status,0,c
 21326  01401E  D009               	goto	i2l1406
 21327  014020  5004               	movf	i2__div_to_l_@f2,w,c
 21328  014022  5E01               	subwf	i2__div_to_l_@f1,f,c
 21329  014024  5005               	movf	i2__div_to_l_@f2+1,w,c
 21330  014026  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 21331  014028  5006               	movf	i2__div_to_l_@f2+2,w,c
 21332  01402A  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 21333  01402C  5007               	movf	i2__div_to_l_@f2+3,w,c
 21334  01402E  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 21335  014030  8007               	bsf	i2__div_to_l_@quot,0,c
 21336  014032                     i2l1406:
 21337  014032  90D8               	bcf	status,0,c
 21338  014034  3601               	rlcf	i2__div_to_l_@f1,f,c
 21339  014036  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 21340  014038  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 21341  01403A  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 21342  01403C  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 21343  01403E  D7E1               	goto	i2l1405
 21344  014040  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 21345  014042  D016               	goto	i2l1408
 21346  014044  500C               	movf	i2__div_to_l_@exp1,w,c
 21347  014046  0A80               	xorlw	128
 21348  014048  0F9F               	addlw	159
 21349  01404A  B0D8               	btfsc	status,0,c
 21350  01404C  D009               	goto	i2l1409
 21351  01404E  0E00               	movlw	0
 21352  014050  6E01               	movwf	?i2__div_to_l_,c
 21353  014052  0E00               	movlw	0
 21354  014054  6E02               	movwf	?i2__div_to_l_+1,c
 21355  014056  0E00               	movlw	0
 21356  014058  6E03               	movwf	?i2__div_to_l_+2,c
 21357  01405A  0E00               	movlw	0
 21358  01405C  6E04               	movwf	?i2__div_to_l_+3,c
 21359  01405E  0012               	return	
 21360  014060                     i2l1409:
 21361  014060  90D8               	bcf	status,0,c
 21362  014062  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 21363  014064  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 21364  014066  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 21365  014068  3207               	rrcf	i2__div_to_l_@quot,f,c
 21366  01406A  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 21367  01406C  D7F9               	goto	i2l1409
 21368  01406E  D015               	goto	i2u1110_40
 21369  014070                     i2l1408:
 21370  014070  0E1F               	movlw	31
 21371  014072  640C               	cpfsgt	i2__div_to_l_@exp1,c
 21372  014074  D00F               	goto	i2l1414
 21373  014076  0E00               	movlw	0
 21374  014078  6E01               	movwf	?i2__div_to_l_,c
 21375  01407A  0E00               	movlw	0
 21376  01407C  6E02               	movwf	?i2__div_to_l_+1,c
 21377  01407E  0E00               	movlw	0
 21378  014080  6E03               	movwf	?i2__div_to_l_+2,c
 21379  014082  0E00               	movlw	0
 21380  014084  6E04               	movwf	?i2__div_to_l_+3,c
 21381  014086  0012               	return	
 21382  014088  90D8               	bcf	status,0,c
 21383  01408A  3607               	rlcf	i2__div_to_l_@quot,f,c
 21384  01408C  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 21385  01408E  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 21386  014090  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 21387  014092  060C               	decf	i2__div_to_l_@exp1,f,c
 21388  014094                     i2l1414:
 21389  014094  500C               	movf	i2__div_to_l_@exp1,w,c
 21390  014096  A4D8               	btfss	status,2,c
 21391  014098  D7F7               	goto	i2l1415
 21392  01409A                     i2u1110_40:
 21393  01409A  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 21394  01409E  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 21395  0140A2  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 21396  0140A6  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 21397  0140AA  0012               	return		;funcret
 21398  0140AC                     __end_ofi2__div_to_l_:
 21399                           	opt stack 0
 21400                           tosu	equ	0xFFF
 21401                           tosh	equ	0xFFE
 21402                           tosl	equ	0xFFD
 21403                           pclatu	equ	0xFFB
 21404                           pclath	equ	0xFFA
 21405                           tblptru	equ	0xFF8
 21406                           tblptrh	equ	0xFF7
 21407                           tblptrl	equ	0xFF6
 21408                           tablat	equ	0xFF5
 21409                           prodh	equ	0xFF4
 21410                           prodl	equ	0xFF3
 21411                           intcon	equ	0xFF2
 21412                           postinc0	equ	0xFEE
 21413                           fsr0h	equ	0xFEA
 21414                           fsr0l	equ	0xFE9
 21415                           wreg	equ	0xFE8
 21416                           indf1	equ	0xFE7
 21417                           postdec1	equ	0xFE5
 21418                           fsr1h	equ	0xFE2
 21419                           fsr1l	equ	0xFE1
 21420                           bsr	equ	0xFE0
 21421                           indf2	equ	0xFDF
 21422                           postinc2	equ	0xFDE
 21423                           postdec2	equ	0xFDD
 21424                           fsr2h	equ	0xFDA
 21425                           fsr2l	equ	0xFD9
 21426                           status	equ	0xFD8
 21427                           
 21428 ;; *************** function i2___lltoft *****************
 21429 ;; Defined at:
 21430 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 21431 ;; Parameters:    Size  Location     Type
 21432 ;;  c               4    8[COMRAM] unsigned long 
 21433 ;; Auto vars:     Size  Location     Type
 21434 ;;  __lltoft        1   16[COMRAM] unsigned char 
 21435 ;; Return value:  Size  Location     Type
 21436 ;;                  3    8[COMRAM] float 
 21437 ;; Registers used:
 21438 ;;		wreg, status,2, status,0, cstack
 21439 ;; Tracked objects:
 21440 ;;		On entry : 0/0
 21441 ;;		On exit  : 0/0
 21442 ;;		Unchanged: 0/0
 21443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21446 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21447 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21448 ;;Total ram usage:        9 bytes
 21449 ;; Hardware stack levels used:    1
 21450 ;; Hardware stack levels required when called:    1
 21451 ;; This function calls:
 21452 ;;		i2___ftpack
 21453 ;; This function is called by:
 21454 ;;		i2_printf
 21455 ;; This function uses a non-reentrant model
 21456 ;;
 21457                           
 21458                           	psect	text83
 21459  0156C2                     __ptext83:
 21460                           	opt stack 0
 21461  0156C2                     i2___lltoft:
 21462                           	opt stack 14
 21463                           
 21464                           ;incstack = 0
 21465  0156C2  0E8E               	movlw	142
 21466  0156C4  6E11               	movwf	i2___lltoft@exp,c
 21467  0156C6  D006               	goto	i2l1613
 21468  0156C8  90D8               	bcf	status,0,c
 21469  0156CA  320C               	rrcf	i2___lltoft@c+3,f,c
 21470  0156CC  320B               	rrcf	i2___lltoft@c+2,f,c
 21471  0156CE  320A               	rrcf	i2___lltoft@c+1,f,c
 21472  0156D0  3209               	rrcf	i2___lltoft@c,f,c
 21473  0156D2  2A11               	incf	i2___lltoft@exp,f,c
 21474  0156D4                     i2l1613:
 21475  0156D4  0E00               	movlw	0
 21476  0156D6  1409               	andwf	i2___lltoft@c,w,c
 21477  0156D8  6E0D               	movwf	??i2___lltoft& (0+255),c
 21478  0156DA  0E00               	movlw	0
 21479  0156DC  140A               	andwf	i2___lltoft@c+1,w,c
 21480  0156DE  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 21481  0156E0  0E00               	movlw	0
 21482  0156E2  140B               	andwf	i2___lltoft@c+2,w,c
 21483  0156E4  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 21484  0156E6  0EFF               	movlw	255
 21485  0156E8  140C               	andwf	i2___lltoft@c+3,w,c
 21486  0156EA  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 21487  0156EC  500D               	movf	??i2___lltoft,w,c
 21488  0156EE  100E               	iorwf	??i2___lltoft+1,w,c
 21489  0156F0  100F               	iorwf	??i2___lltoft+2,w,c
 21490  0156F2  1010               	iorwf	??i2___lltoft+3,w,c
 21491  0156F4  A4D8               	btfss	status,2,c
 21492  0156F6  D7E8               	goto	i2l1614
 21493  0156F8  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 21494  0156FC  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 21495  015700  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 21496  015704  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 21497  015708  0E00               	movlw	0
 21498  01570A  6E05               	movwf	i2___ftpack@sign,c
 21499  01570C  ECBC  F0A5         	call	i2___ftpack	;wreg free
 21500  015710  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 21501  015714  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 21502  015718  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 21503  01571C  0012               	return	
 21504  01571E                     __end_ofi2___lltoft:
 21505                           	opt stack 0
 21506                           tosu	equ	0xFFF
 21507                           tosh	equ	0xFFE
 21508                           tosl	equ	0xFFD
 21509                           pclatu	equ	0xFFB
 21510                           pclath	equ	0xFFA
 21511                           tblptru	equ	0xFF8
 21512                           tblptrh	equ	0xFF7
 21513                           tblptrl	equ	0xFF6
 21514                           tablat	equ	0xFF5
 21515                           prodh	equ	0xFF4
 21516                           prodl	equ	0xFF3
 21517                           intcon	equ	0xFF2
 21518                           postinc0	equ	0xFEE
 21519                           fsr0h	equ	0xFEA
 21520                           fsr0l	equ	0xFE9
 21521                           wreg	equ	0xFE8
 21522                           indf1	equ	0xFE7
 21523                           postdec1	equ	0xFE5
 21524                           fsr1h	equ	0xFE2
 21525                           fsr1l	equ	0xFE1
 21526                           bsr	equ	0xFE0
 21527                           indf2	equ	0xFDF
 21528                           postinc2	equ	0xFDE
 21529                           postdec2	equ	0xFDD
 21530                           fsr2h	equ	0xFDA
 21531                           fsr2l	equ	0xFD9
 21532                           status	equ	0xFD8
 21533                           
 21534 ;; *************** function i2___llmod *****************
 21535 ;; Defined at:
 21536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 21537 ;; Parameters:    Size  Location     Type
 21538 ;;  dividend        4   13[COMRAM] unsigned long 
 21539 ;;  divisor         4   17[COMRAM] unsigned long 
 21540 ;; Auto vars:     Size  Location     Type
 21541 ;;  __llmod         1   21[COMRAM] unsigned char 
 21542 ;; Return value:  Size  Location     Type
 21543 ;;                  4   13[COMRAM] unsigned long 
 21544 ;; Registers used:
 21545 ;;		wreg, status,2, status,0
 21546 ;; Tracked objects:
 21547 ;;		On entry : 0/0
 21548 ;;		On exit  : 0/0
 21549 ;;		Unchanged: 0/0
 21550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21554 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21555 ;;Total ram usage:        9 bytes
 21556 ;; Hardware stack levels used:    1
 21557 ;; This function calls:
 21558 ;;		Nothing
 21559 ;; This function is called by:
 21560 ;;		i2_printf
 21561 ;; This function uses a non-reentrant model
 21562 ;;
 21563                           
 21564                           	psect	text84
 21565  01553A                     __ptext84:
 21566                           	opt stack 0
 21567  01553A                     i2___llmod:
 21568                           	opt stack 15
 21569                           
 21570                           ;incstack = 0
 21571  01553A  5012               	movf	i2___llmod@divisor,w,c
 21572  01553C  1013               	iorwf	i2___llmod@divisor+1,w,c
 21573  01553E  1014               	iorwf	i2___llmod@divisor+2,w,c
 21574  015540  1015               	iorwf	i2___llmod@divisor+3,w,c
 21575  015542  B4D8               	btfsc	status,2,c
 21576  015544  D024               	goto	i2l1607
 21577  015546  0E01               	movlw	1
 21578  015548  6E16               	movwf	i2___llmod@counter,c
 21579  01554A  D006               	goto	i2l1602
 21580  01554C  90D8               	bcf	status,0,c
 21581  01554E  3612               	rlcf	i2___llmod@divisor,f,c
 21582  015550  3613               	rlcf	i2___llmod@divisor+1,f,c
 21583  015552  3614               	rlcf	i2___llmod@divisor+2,f,c
 21584  015554  3615               	rlcf	i2___llmod@divisor+3,f,c
 21585  015556  2A16               	incf	i2___llmod@counter,f,c
 21586  015558                     i2l1602:
 21587  015558  AE15               	btfss	i2___llmod@divisor+3,7,c
 21588  01555A  D7F8               	goto	i2l1603
 21589  01555C                     i2u1126_40:
 21590  01555C  5012               	movf	i2___llmod@divisor,w,c
 21591  01555E  5C0E               	subwf	i2___llmod@dividend,w,c
 21592  015560  5013               	movf	i2___llmod@divisor+1,w,c
 21593  015562  580F               	subwfb	i2___llmod@dividend+1,w,c
 21594  015564  5014               	movf	i2___llmod@divisor+2,w,c
 21595  015566  5810               	subwfb	i2___llmod@dividend+2,w,c
 21596  015568  5015               	movf	i2___llmod@divisor+3,w,c
 21597  01556A  5811               	subwfb	i2___llmod@dividend+3,w,c
 21598  01556C  A0D8               	btfss	status,0,c
 21599  01556E  D008               	goto	i2l1606
 21600  015570  5012               	movf	i2___llmod@divisor,w,c
 21601  015572  5E0E               	subwf	i2___llmod@dividend,f,c
 21602  015574  5013               	movf	i2___llmod@divisor+1,w,c
 21603  015576  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 21604  015578  5014               	movf	i2___llmod@divisor+2,w,c
 21605  01557A  5A10               	subwfb	i2___llmod@dividend+2,f,c
 21606  01557C  5015               	movf	i2___llmod@divisor+3,w,c
 21607  01557E  5A11               	subwfb	i2___llmod@dividend+3,f,c
 21608  015580                     i2l1606:
 21609  015580  90D8               	bcf	status,0,c
 21610  015582  3215               	rrcf	i2___llmod@divisor+3,f,c
 21611  015584  3214               	rrcf	i2___llmod@divisor+2,f,c
 21612  015586  3213               	rrcf	i2___llmod@divisor+1,f,c
 21613  015588  3212               	rrcf	i2___llmod@divisor,f,c
 21614  01558A  2E16               	decfsz	i2___llmod@counter,f,c
 21615  01558C  D7E7               	goto	i2u1126_40
 21616  01558E                     i2l1607:
 21617  01558E  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 21618  015592  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 21619  015596  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 21620  01559A  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 21621  01559E  0012               	return		;funcret
 21622  0155A0                     __end_ofi2___llmod:
 21623                           	opt stack 0
 21624                           tosu	equ	0xFFF
 21625                           tosh	equ	0xFFE
 21626                           tosl	equ	0xFFD
 21627                           pclatu	equ	0xFFB
 21628                           pclath	equ	0xFFA
 21629                           tblptru	equ	0xFF8
 21630                           tblptrh	equ	0xFF7
 21631                           tblptrl	equ	0xFF6
 21632                           tablat	equ	0xFF5
 21633                           prodh	equ	0xFF4
 21634                           prodl	equ	0xFF3
 21635                           intcon	equ	0xFF2
 21636                           postinc0	equ	0xFEE
 21637                           fsr0h	equ	0xFEA
 21638                           fsr0l	equ	0xFE9
 21639                           wreg	equ	0xFE8
 21640                           indf1	equ	0xFE7
 21641                           postdec1	equ	0xFE5
 21642                           fsr1h	equ	0xFE2
 21643                           fsr1l	equ	0xFE1
 21644                           bsr	equ	0xFE0
 21645                           indf2	equ	0xFDF
 21646                           postinc2	equ	0xFDE
 21647                           postdec2	equ	0xFDD
 21648                           fsr2h	equ	0xFDA
 21649                           fsr2l	equ	0xFD9
 21650                           status	equ	0xFD8
 21651                           
 21652 ;; *************** function i2___lldiv *****************
 21653 ;; Defined at:
 21654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 21655 ;; Parameters:    Size  Location     Type
 21656 ;;  dividend        4    0[COMRAM] unsigned long 
 21657 ;;  divisor         4    4[COMRAM] unsigned long 
 21658 ;; Auto vars:     Size  Location     Type
 21659 ;;  __lldiv         4    8[COMRAM] unsigned long 
 21660 ;;  __lldiv         1   12[COMRAM] unsigned char 
 21661 ;; Return value:  Size  Location     Type
 21662 ;;                  4    0[COMRAM] unsigned long 
 21663 ;; Registers used:
 21664 ;;		wreg, status,2, status,0
 21665 ;; Tracked objects:
 21666 ;;		On entry : 0/0
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21671 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21673 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21674 ;;Total ram usage:       13 bytes
 21675 ;; Hardware stack levels used:    1
 21676 ;; This function calls:
 21677 ;;		Nothing
 21678 ;; This function is called by:
 21679 ;;		i2_printf
 21680 ;; This function uses a non-reentrant model
 21681 ;;
 21682                           
 21683                           	psect	text85
 21684  01513E                     __ptext85:
 21685                           	opt stack 0
 21686  01513E                     i2___lldiv:
 21687                           	opt stack 15
 21688                           
 21689                           ;incstack = 0
 21690  01513E  0E00               	movlw	0
 21691  015140  6E09               	movwf	i2___lldiv@quotient,c
 21692  015142  0E00               	movlw	0
 21693  015144  6E0A               	movwf	i2___lldiv@quotient+1,c
 21694  015146  0E00               	movlw	0
 21695  015148  6E0B               	movwf	i2___lldiv@quotient+2,c
 21696  01514A  0E00               	movlw	0
 21697  01514C  6E0C               	movwf	i2___lldiv@quotient+3,c
 21698  01514E  5005               	movf	i2___lldiv@divisor,w,c
 21699  015150  1006               	iorwf	i2___lldiv@divisor+1,w,c
 21700  015152  1007               	iorwf	i2___lldiv@divisor+2,w,c
 21701  015154  1008               	iorwf	i2___lldiv@divisor+3,w,c
 21702  015156  B4D8               	btfsc	status,2,c
 21703  015158  D02A               	goto	i2l1597
 21704  01515A  0E01               	movlw	1
 21705  01515C  6E0D               	movwf	i2___lldiv@counter,c
 21706  01515E  D006               	goto	i2l1592
 21707  015160  90D8               	bcf	status,0,c
 21708  015162  3605               	rlcf	i2___lldiv@divisor,f,c
 21709  015164  3606               	rlcf	i2___lldiv@divisor+1,f,c
 21710  015166  3607               	rlcf	i2___lldiv@divisor+2,f,c
 21711  015168  3608               	rlcf	i2___lldiv@divisor+3,f,c
 21712  01516A  2A0D               	incf	i2___lldiv@counter,f,c
 21713  01516C                     i2l1592:
 21714  01516C  AE08               	btfss	i2___lldiv@divisor+3,7,c
 21715  01516E  D7F8               	goto	i2l1593
 21716  015170                     i2u1123_40:
 21717  015170  90D8               	bcf	status,0,c
 21718  015172  3609               	rlcf	i2___lldiv@quotient,f,c
 21719  015174  360A               	rlcf	i2___lldiv@quotient+1,f,c
 21720  015176  360B               	rlcf	i2___lldiv@quotient+2,f,c
 21721  015178  360C               	rlcf	i2___lldiv@quotient+3,f,c
 21722  01517A  5005               	movf	i2___lldiv@divisor,w,c
 21723  01517C  5C01               	subwf	i2___lldiv@dividend,w,c
 21724  01517E  5006               	movf	i2___lldiv@divisor+1,w,c
 21725  015180  5802               	subwfb	i2___lldiv@dividend+1,w,c
 21726  015182  5007               	movf	i2___lldiv@divisor+2,w,c
 21727  015184  5803               	subwfb	i2___lldiv@dividend+2,w,c
 21728  015186  5008               	movf	i2___lldiv@divisor+3,w,c
 21729  015188  5804               	subwfb	i2___lldiv@dividend+3,w,c
 21730  01518A  A0D8               	btfss	status,0,c
 21731  01518C  D009               	goto	i2l1596
 21732  01518E  5005               	movf	i2___lldiv@divisor,w,c
 21733  015190  5E01               	subwf	i2___lldiv@dividend,f,c
 21734  015192  5006               	movf	i2___lldiv@divisor+1,w,c
 21735  015194  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 21736  015196  5007               	movf	i2___lldiv@divisor+2,w,c
 21737  015198  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 21738  01519A  5008               	movf	i2___lldiv@divisor+3,w,c
 21739  01519C  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 21740  01519E  8009               	bsf	i2___lldiv@quotient,0,c
 21741  0151A0                     i2l1596:
 21742  0151A0  90D8               	bcf	status,0,c
 21743  0151A2  3208               	rrcf	i2___lldiv@divisor+3,f,c
 21744  0151A4  3207               	rrcf	i2___lldiv@divisor+2,f,c
 21745  0151A6  3206               	rrcf	i2___lldiv@divisor+1,f,c
 21746  0151A8  3205               	rrcf	i2___lldiv@divisor,f,c
 21747  0151AA  2E0D               	decfsz	i2___lldiv@counter,f,c
 21748  0151AC  D7E1               	goto	i2u1123_40
 21749  0151AE                     i2l1597:
 21750  0151AE  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 21751  0151B2  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 21752  0151B6  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 21753  0151BA  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 21754  0151BE  0012               	return		;funcret
 21755  0151C0                     __end_ofi2___lldiv:
 21756                           	opt stack 0
 21757                           tosu	equ	0xFFF
 21758                           tosh	equ	0xFFE
 21759                           tosl	equ	0xFFD
 21760                           pclatu	equ	0xFFB
 21761                           pclath	equ	0xFFA
 21762                           tblptru	equ	0xFF8
 21763                           tblptrh	equ	0xFF7
 21764                           tblptrl	equ	0xFF6
 21765                           tablat	equ	0xFF5
 21766                           prodh	equ	0xFF4
 21767                           prodl	equ	0xFF3
 21768                           intcon	equ	0xFF2
 21769                           postinc0	equ	0xFEE
 21770                           fsr0h	equ	0xFEA
 21771                           fsr0l	equ	0xFE9
 21772                           wreg	equ	0xFE8
 21773                           indf1	equ	0xFE7
 21774                           postdec1	equ	0xFE5
 21775                           fsr1h	equ	0xFE2
 21776                           fsr1l	equ	0xFE1
 21777                           bsr	equ	0xFE0
 21778                           indf2	equ	0xFDF
 21779                           postinc2	equ	0xFDE
 21780                           postdec2	equ	0xFDD
 21781                           fsr2h	equ	0xFDA
 21782                           fsr2l	equ	0xFD9
 21783                           status	equ	0xFD8
 21784                           
 21785 ;; *************** function _ADCC_ISR *****************
 21786 ;; Defined at:
 21787 ;;		line 297 in file "mcc_generated_files/adcc.c"
 21788 ;; Parameters:    Size  Location     Type
 21789 ;;		None
 21790 ;; Auto vars:     Size  Location     Type
 21791 ;;		None
 21792 ;; Return value:  Size  Location     Type
 21793 ;;                  1    wreg      void 
 21794 ;; Registers used:
 21795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21796 ;; Tracked objects:
 21797 ;;		On entry : 0/0
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21805 ;;Total ram usage:        0 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; Hardware stack levels required when called:    8
 21808 ;; This function calls:
 21809 ;;		Absolute function
 21810 ;;		_ADCC_DefaultInterruptHandler
 21811 ;;		_ADC_postProcessingCallback
 21812 ;; This function is called by:
 21813 ;;		_INTERRUPT_InterruptManagerHigh
 21814 ;; This function uses a non-reentrant model
 21815 ;;
 21816                           
 21817                           	psect	text86
 21818  015D14                     __ptext86:
 21819                           	opt stack 0
 21820  015D14                     _ADCC_ISR:
 21821                           	opt stack 9
 21822                           
 21823                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 21824                           
 21825                           ;incstack = 0
 21826  015D14  010E               	movlb	14	; () banked
 21827  015D16  9134               	bcf	52,0,b	;volatile
 21828                           
 21829                           ; BSR set to: 14
 21830                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 21831  015D18  0100               	movlb	0	; () banked
 21832  015D1A  51D1               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21833  015D1C  11D2               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21834  015D1E  11D3               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21835  015D20  B4D8               	btfsc	status,2,c
 21836  015D22  0012               	return	
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 21840  015D24  D801               	call	i2u1559_48
 21841  015D26  0012               	return	
 21842  015D28                     i2u1559_48:
 21843  015D28  0005               	push	
 21844  015D2A  6EFA               	movwf	pclath,c
 21845  015D2C  51D1               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21846  015D2E  6EFD               	movwf	tosl,c
 21847  015D30  51D2               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21848  015D32  6EFE               	movwf	tosh,c
 21849  015D34  51D3               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21850  015D36  6EFF               	movwf	tosu,c
 21851  015D38  50FA               	movf	pclath,w,c
 21852  015D3A  0012               	return		;indir
 21853  015D3C                     __end_of_ADCC_ISR:
 21854                           	opt stack 0
 21855                           tosu	equ	0xFFF
 21856                           tosh	equ	0xFFE
 21857                           tosl	equ	0xFFD
 21858                           pclatu	equ	0xFFB
 21859                           pclath	equ	0xFFA
 21860                           tblptru	equ	0xFF8
 21861                           tblptrh	equ	0xFF7
 21862                           tblptrl	equ	0xFF6
 21863                           tablat	equ	0xFF5
 21864                           prodh	equ	0xFF4
 21865                           prodl	equ	0xFF3
 21866                           intcon	equ	0xFF2
 21867                           postinc0	equ	0xFEE
 21868                           fsr0h	equ	0xFEA
 21869                           fsr0l	equ	0xFE9
 21870                           wreg	equ	0xFE8
 21871                           indf1	equ	0xFE7
 21872                           postdec1	equ	0xFE5
 21873                           fsr1h	equ	0xFE2
 21874                           fsr1l	equ	0xFE1
 21875                           bsr	equ	0xFE0
 21876                           indf2	equ	0xFDF
 21877                           postinc2	equ	0xFDE
 21878                           postdec2	equ	0xFDD
 21879                           fsr2h	equ	0xFDA
 21880                           fsr2l	equ	0xFD9
 21881                           status	equ	0xFD8
 21882                           
 21883 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 21884 ;; Defined at:
 21885 ;;		line 310 in file "mcc_generated_files/adcc.c"
 21886 ;; Parameters:    Size  Location     Type
 21887 ;;		None
 21888 ;; Auto vars:     Size  Location     Type
 21889 ;;		None
 21890 ;; Return value:  Size  Location     Type
 21891 ;;                  1    wreg      void 
 21892 ;; Registers used:
 21893 ;;		None
 21894 ;; Tracked objects:
 21895 ;;		On entry : 0/0
 21896 ;;		On exit  : 0/0
 21897 ;;		Unchanged: 0/0
 21898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21903 ;;Total ram usage:        0 bytes
 21904 ;; Hardware stack levels used:    1
 21905 ;; This function calls:
 21906 ;;		Nothing
 21907 ;; This function is called by:
 21908 ;;		_ADCC_Initialize
 21909 ;;		_ADCC_ISR
 21910 ;; This function uses a non-reentrant model
 21911 ;;
 21912                           
 21913                           	psect	text87
 21914  015F8C                     __ptext87:
 21915                           	opt stack 0
 21916  015F8C                     _ADCC_DefaultInterruptHandler:
 21917                           	opt stack 16
 21918                           
 21919                           ;incstack = 0
 21920  015F8C  0012               	return		;funcret
 21921  015F8E                     __end_of_ADCC_DefaultInterruptHandler:
 21922                           	opt stack 0
 21923                           tosu	equ	0xFFF
 21924                           tosh	equ	0xFFE
 21925                           tosl	equ	0xFFD
 21926                           pclatu	equ	0xFFB
 21927                           pclath	equ	0xFFA
 21928                           tblptru	equ	0xFF8
 21929                           tblptrh	equ	0xFF7
 21930                           tblptrl	equ	0xFF6
 21931                           tablat	equ	0xFF5
 21932                           prodh	equ	0xFF4
 21933                           prodl	equ	0xFF3
 21934                           intcon	equ	0xFF2
 21935                           postinc0	equ	0xFEE
 21936                           fsr0h	equ	0xFEA
 21937                           fsr0l	equ	0xFE9
 21938                           wreg	equ	0xFE8
 21939                           indf1	equ	0xFE7
 21940                           postdec1	equ	0xFE5
 21941                           fsr1h	equ	0xFE2
 21942                           fsr1l	equ	0xFE1
 21943                           bsr	equ	0xFE0
 21944                           indf2	equ	0xFDF
 21945                           postinc2	equ	0xFDE
 21946                           postdec2	equ	0xFDD
 21947                           fsr2h	equ	0xFDA
 21948                           fsr2l	equ	0xFD9
 21949                           status	equ	0xFD8
 21950                           
 21951 ;; *************** function _ADC_postProcessingCallback *****************
 21952 ;; Defined at:
 21953 ;;		line 136 in file "main.c"
 21954 ;; Parameters:    Size  Location     Type
 21955 ;;		None
 21956 ;; Auto vars:     Size  Location     Type
 21957 ;;  currentADCCh    1   79[BANK0 ] enum E17343
 21958 ;; Return value:  Size  Location     Type
 21959 ;;                  1    wreg      void 
 21960 ;; Registers used:
 21961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21962 ;; Tracked objects:
 21963 ;;		On entry : 0/0
 21964 ;;		On exit  : 0/0
 21965 ;;		Unchanged: 0/0
 21966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21968 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21970 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21971 ;;Total ram usage:       13 bytes
 21972 ;; Hardware stack levels used:    1
 21973 ;; Hardware stack levels required when called:    7
 21974 ;; This function calls:
 21975 ;;		_ADCC_GetConversionResult
 21976 ;;		___lwtoft
 21977 ;;		_currentMeasuredToPeak
 21978 ;;		_peakToRMS
 21979 ;;		i2___ftadd
 21980 ;;		i2___ftdiv
 21981 ;;		i2___ftmul
 21982 ;;		i2___ftneg
 21983 ;; This function is called by:
 21984 ;;		_main
 21985 ;;		_ADCC_ISR
 21986 ;; This function uses a non-reentrant model
 21987 ;;
 21988                           
 21989                           	psect	text88
 21990  012238                     __ptext88:
 21991                           	opt stack 0
 21992  012238                     _ADC_postProcessingCallback:
 21993                           	opt stack 9
 21994                           
 21995                           ;main.c: 138: adcc_channel_t currentADCChannel = ADPCH;
 21996                           
 21997                           ;incstack = 0
 21998  012238  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 21999                           
 22000                           ;main.c: 140: switch (currentADCChannel) {
 22001  01223C  D1F2               	goto	i2l743
 22002  01223E                     
 22003                           ;main.c: 144: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 22004  01223E  EC45  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22005  012242  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22006  012246  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22007  01224A  ECE9  F0AE         	call	___lwtoft	;wreg free
 22008  01224E  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22009  012252  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22010  012256  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22011  01225A  0E68               	movlw	104
 22012  01225C  6E2A               	movwf	i2___ftmul@f2,c
 22013  01225E  0E53               	movlw	83
 22014  012260  6E2B               	movwf	i2___ftmul@f2+1,c
 22015  012262  0E3B               	movlw	59
 22016  012264  6E2C               	movwf	i2___ftmul@f2+2,c
 22017  012266  EC55  F0A2         	call	i2___ftmul	;wreg free
 22018  01226A  C027  F0E2         	movff	?i2___ftmul,_FVR_ADC_Result
 22019  01226E  C028  F0E3         	movff	?i2___ftmul+1,_FVR_ADC_Result+1
 22020  012272  C029  F0E4         	movff	?i2___ftmul+2,_FVR_ADC_Result+2
 22021                           
 22022                           ;main.c: 145: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 22023  012276  0E12               	movlw	18
 22024  012278  6E15               	movwf	i2___ftdiv@f1,c
 22025  01227A  0E03               	movlw	3
 22026  01227C  6E16               	movwf	i2___ftdiv@f1+1,c
 22027  01227E  0E40               	movlw	64
 22028  012280  6E17               	movwf	i2___ftdiv@f1+2,c
 22029  012282  C0E2  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2
 22030  012286  C0E3  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1
 22031  01228A  C0E4  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2
 22032  01228E  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22033  012292  C015  F0CE         	movff	?i2___ftdiv,_ADC_Result_Scaling
 22034  012296  C016  F0CF         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1
 22035  01229A  C017  F0D0         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2
 22036                           
 22037                           ;main.c: 146: break;
 22038  01229E  0012               	return	
 22039  0122A0                     
 22040                           ;main.c: 150: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 22041  0122A0  C0CE  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2
 22042  0122A4  C0CF  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1
 22043  0122A8  C0D0  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2
 22044  0122AC  EC45  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22045  0122B0  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22046  0122B4  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22047  0122B8  ECE9  F0AE         	call	___lwtoft	;wreg free
 22048  0122BC  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22049  0122C0  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22050  0122C4  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22051  0122C8  EC55  F0A2         	call	i2___ftmul	;wreg free
 22052  0122CC  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3310
 22053  0122D0  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3310+1
 22054  0122D4  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3310+2
 22055                           
 22056                           ;main.c: 150: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 22057  0122D8  C0B0  F027         	movff	_ADC_postProcessingCallback$3310,i2___ftmul@f1
 22058  0122DC  C0B1  F028         	movff	_ADC_postProcessingCallback$3310+1,i2___ftmul@f1+1
 22059  0122E0  C0B2  F029         	movff	_ADC_postProcessingCallback$3310+2,i2___ftmul@f1+2
 22060  0122E4  0E68               	movlw	104
 22061  0122E6  6E2A               	movwf	i2___ftmul@f2,c
 22062  0122E8  0ED3               	movlw	211
 22063  0122EA  6E2B               	movwf	i2___ftmul@f2+1,c
 22064  0122EC  0E3B               	movlw	59
 22065  0122EE  6E2C               	movwf	i2___ftmul@f2+2,c
 22066  0122F0  EC55  F0A2         	call	i2___ftmul	;wreg free
 22067  0122F4  C027  F0CB         	movff	?i2___ftmul,_POS3P3_ADC_Result
 22068  0122F8  C028  F0CC         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1
 22069  0122FC  C029  F0CD         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2
 22070                           
 22071                           ;main.c: 151: break;
 22072  012300  0012               	return	
 22073  012302                     
 22074                           ;main.c: 154: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 22075  012302  0EC0               	movlw	192
 22076  012304  6E18               	movwf	i2___ftdiv@f2,c
 22077  012306  0E7F               	movlw	127
 22078  012308  6E19               	movwf	i2___ftdiv@f2+1,c
 22079  01230A  0E44               	movlw	68
 22080  01230C  6E1A               	movwf	i2___ftdiv@f2+2,c
 22081  01230E  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22082  012312  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22083  012316  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22084  01231A  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22085  01231E  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22086  012322  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22087  012326  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22088  01232A  EC45  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22089  01232E  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22090  012332  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22091  012336  ECE9  F0AE         	call	___lwtoft	;wreg free
 22092  01233A  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22093  01233E  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22094  012342  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22095  012346  EC55  F0A2         	call	i2___ftmul	;wreg free
 22096  01234A  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3310
 22097  01234E  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3310+1
 22098  012352  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3310+2
 22099                           
 22100                           ;main.c: 154: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 22101  012356  C0B0  F027         	movff	_ADC_postProcessingCallback$3310,i2___ftmul@f1
 22102  01235A  C0B1  F028         	movff	_ADC_postProcessingCallback$3310+1,i2___ftmul@f1+1
 22103  01235E  C0B2  F029         	movff	_ADC_postProcessingCallback$3310+2,i2___ftmul@f1+2
 22104  012362  0E5E               	movlw	94
 22105  012364  6E2A               	movwf	i2___ftmul@f2,c
 22106  012366  0EF2               	movlw	242
 22107  012368  6E2B               	movwf	i2___ftmul@f2+1,c
 22108  01236A  0E3F               	movlw	63
 22109  01236C  6E2C               	movwf	i2___ftmul@f2+2,c
 22110  01236E  EC55  F0A2         	call	i2___ftmul	;wreg free
 22111  012372  C027  F0C5         	movff	?i2___ftmul,_Imeas
 22112  012376  C028  F0C6         	movff	?i2___ftmul+1,_Imeas+1
 22113  01237A  C029  F0C7         	movff	?i2___ftmul+2,_Imeas+2
 22114                           
 22115                           ;main.c: 158: if (LATGbits.LATG0 != 1) {
 22116  01237E  B07F               	btfsc	3967,0,c	;volatile
 22117  012380  D03D               	goto	i2l748
 22118                           
 22119                           ;main.c: 160: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 22120  012382  C0C5  F073         	movff	_Imeas,currentMeasuredToPeak@Measured
 22121  012386  C0C6  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1
 22122  01238A  C0C7  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2
 22123  01238E  C0DF  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle
 22124  012392  C0E0  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1
 22125  012396  C0E1  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2
 22126  01239A  EC02  F0AB         	call	_currentMeasuredToPeak	;wreg free
 22127  01239E  C073  F0C8         	movff	?_currentMeasuredToPeak,_Ipk
 22128  0123A2  C074  F0C9         	movff	?_currentMeasuredToPeak+1,_Ipk+1
 22129  0123A6  C075  F0CA         	movff	?_currentMeasuredToPeak+2,_Ipk+2
 22130                           
 22131                           ;main.c: 161: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 22132  0123AA  C0C8  F094         	movff	_Ipk,peakToRMS@Peak
 22133  0123AE  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1
 22134  0123B2  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2
 22135  0123B6  C0DF  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle
 22136  0123BA  C0E0  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1
 22137  0123BE  C0E1  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2
 22138  0123C2  ECC0  F099         	call	_peakToRMS	;wreg free
 22139  0123C6  C094  F1C2         	movff	?_peakToRMS,_Irms
 22140  0123CA  C095  F1C3         	movff	?_peakToRMS+1,_Irms+1
 22141  0123CE  C096  F1C4         	movff	?_peakToRMS+2,_Irms+2
 22142                           
 22143                           ;main.c: 162: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 22144  0123D2  C0E5  F094         	movff	_Vpk,peakToRMS@Peak
 22145  0123D6  C0E6  F095         	movff	_Vpk+1,peakToRMS@Peak+1
 22146  0123DA  C0E7  F096         	movff	_Vpk+2,peakToRMS@Peak+2
 22147  0123DE  C0DF  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle
 22148  0123E2  C0E0  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1
 22149  0123E6  C0E1  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2
 22150  0123EA  ECC0  F099         	call	_peakToRMS	;wreg free
 22151  0123EE  C094  F1BF         	movff	?_peakToRMS,_Vrms
 22152  0123F2  C095  F1C0         	movff	?_peakToRMS+1,_Vrms+1
 22153  0123F6  C096  F1C1         	movff	?_peakToRMS+2,_Vrms+2
 22154                           
 22155                           ;main.c: 164: }
 22156  0123FA  0012               	return	
 22157  0123FC                     i2l748:
 22158                           
 22159                           ;main.c: 167: else {
 22160                           ;main.c: 169: Ipk = Imeas;
 22161  0123FC  C0C5  F0C8         	movff	_Imeas,_Ipk
 22162  012400  C0C6  F0C9         	movff	_Imeas+1,_Ipk+1
 22163  012404  C0C7  F0CA         	movff	_Imeas+2,_Ipk+2
 22164                           
 22165                           ;main.c: 170: Irms = peakToRMS(Ipk, 0.0);
 22166  012408  C0C8  F094         	movff	_Ipk,peakToRMS@Peak
 22167  01240C  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1
 22168  012410  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2
 22169  012414  0E00               	movlw	0
 22170  012416  0100               	movlb	0	; () banked
 22171  012418  6F97               	movwf	peakToRMS@Angle& (0+255),b
 22172  01241A  0E00               	movlw	0
 22173  01241C  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 22174  01241E  0E00               	movlw	0
 22175  012420  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 22176  012422  ECC0  F099         	call	_peakToRMS	;wreg free
 22177  012426  C094  F1C2         	movff	?_peakToRMS,_Irms
 22178  01242A  C095  F1C3         	movff	?_peakToRMS+1,_Irms+1
 22179  01242E  C096  F1C4         	movff	?_peakToRMS+2,_Irms+2
 22180                           
 22181                           ;main.c: 171: Vrms = peakToRMS(Vpk, 0.0);
 22182  012432  C0E5  F094         	movff	_Vpk,peakToRMS@Peak
 22183  012436  C0E6  F095         	movff	_Vpk+1,peakToRMS@Peak+1
 22184  01243A  C0E7  F096         	movff	_Vpk+2,peakToRMS@Peak+2
 22185  01243E  0E00               	movlw	0
 22186  012440  0100               	movlb	0	; () banked
 22187  012442  6F97               	movwf	peakToRMS@Angle& (0+255),b
 22188  012444  0E00               	movlw	0
 22189  012446  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 22190  012448  0E00               	movlw	0
 22191  01244A  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 22192  01244C  ECC0  F099         	call	_peakToRMS	;wreg free
 22193  012450  C094  F1BF         	movff	?_peakToRMS,_Vrms
 22194  012454  C095  F1C0         	movff	?_peakToRMS+1,_Vrms+1
 22195  012458  C096  F1C1         	movff	?_peakToRMS+2,_Vrms+2
 22196                           
 22197                           ;main.c: 173: }
 22198                           ;main.c: 177: break;
 22199  01245C  0012               	return	
 22200  01245E                     
 22201                           ;main.c: 181: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 22202  01245E  0EC0               	movlw	192
 22203  012460  6E18               	movwf	i2___ftdiv@f2,c
 22204  012462  0E7F               	movlw	127
 22205  012464  6E19               	movwf	i2___ftdiv@f2+1,c
 22206  012466  0E44               	movlw	68
 22207  012468  6E1A               	movwf	i2___ftdiv@f2+2,c
 22208  01246A  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22209  01246E  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22210  012472  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22211  012476  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22212  01247A  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22213  01247E  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22214  012482  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22215  012486  EC45  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22216  01248A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22217  01248E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22218  012492  ECE9  F0AE         	call	___lwtoft	;wreg free
 22219  012496  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22220  01249A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22221  01249E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22222  0124A2  EC55  F0A2         	call	i2___ftmul	;wreg free
 22223  0124A6  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3310
 22224  0124AA  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3310+1
 22225  0124AE  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3310+2
 22226                           
 22227                           ;main.c: 181: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 22228  0124B2  C0B0  F027         	movff	_ADC_postProcessingCallback$3310,i2___ftmul@f1
 22229  0124B6  C0B1  F028         	movff	_ADC_postProcessingCallback$3310+1,i2___ftmul@f1+1
 22230  0124BA  C0B2  F029         	movff	_ADC_postProcessingCallback$3310+2,i2___ftmul@f1+2
 22231  0124BE  0EF8               	movlw	248
 22232  0124C0  6E2A               	movwf	i2___ftmul@f2,c
 22233  0124C2  0E80               	movlw	128
 22234  0124C4  6E2B               	movwf	i2___ftmul@f2+1,c
 22235  0124C6  0E40               	movlw	64
 22236  0124C8  6E2C               	movwf	i2___ftmul@f2+2,c
 22237  0124CA  EC55  F0A2         	call	i2___ftmul	;wreg free
 22238  0124CE  C027  F1C8         	movff	?i2___ftmul,_POS12_ADC_Result
 22239  0124D2  C028  F1C9         	movff	?i2___ftmul+1,_POS12_ADC_Result+1
 22240  0124D6  C029  F1CA         	movff	?i2___ftmul+2,_POS12_ADC_Result+2
 22241                           
 22242                           ;main.c: 182: break;
 22243  0124DA  0012               	return	
 22244  0124DC                     
 22245                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22246  0124DC  0E00               	movlw	0
 22247  0124DE  6E18               	movwf	i2___ftdiv@f2,c
 22248  0124E0  0E00               	movlw	0
 22249  0124E2  6E19               	movwf	i2___ftdiv@f2+1,c
 22250  0124E4  0E40               	movlw	64
 22251  0124E6  6E1A               	movwf	i2___ftdiv@f2+2,c
 22252  0124E8  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22253  0124EC  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22254  0124F0  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22255  0124F4  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22256  0124F8  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22257  0124FC  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22258  012500  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22259  012504  0E00               	movlw	0
 22260  012506  6E43               	movwf	i2___ftadd@f2,c
 22261  012508  0E80               	movlw	128
 22262  01250A  6E44               	movwf	i2___ftadd@f2+1,c
 22263  01250C  0E3F               	movlw	63
 22264  01250E  6E45               	movwf	i2___ftadd@f2+2,c
 22265  012510  0EC0               	movlw	192
 22266  012512  6E18               	movwf	i2___ftdiv@f2,c
 22267  012514  0E7F               	movlw	127
 22268  012516  6E19               	movwf	i2___ftdiv@f2+1,c
 22269  012518  0E44               	movlw	68
 22270  01251A  6E1A               	movwf	i2___ftdiv@f2+2,c
 22271  01251C  EC45  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22272  012520  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22273  012524  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22274  012528  ECE9  F0AE         	call	___lwtoft	;wreg free
 22275  01252C  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 22276  012530  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 22277  012534  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 22278  012538  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22279  01253C  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 22280  012540  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 22281  012544  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 22282  012548  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22283  01254C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22284  012550  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22285  012554  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22286  012558  EC5B  F09C         	call	i2___ftadd	;wreg free
 22287  01255C  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 22288  012560  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 22289  012564  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 22290  012568  EC55  F0A2         	call	i2___ftmul	;wreg free
 22291  01256C  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3311
 22292  012570  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3311+1
 22293  012574  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3311+2
 22294                           
 22295                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22296  012578  0E04               	movlw	4
 22297  01257A  6E18               	movwf	i2___ftdiv@f2,c
 22298  01257C  0EAD               	movlw	173
 22299  01257E  6E19               	movwf	i2___ftdiv@f2+1,c
 22300  012580  0E3A               	movlw	58
 22301  012582  6E1A               	movwf	i2___ftdiv@f2+2,c
 22302  012584  0EB4               	movlw	180
 22303  012586  6E43               	movwf	i2___ftadd@f2,c
 22304  012588  0E28               	movlw	40
 22305  01258A  6E44               	movwf	i2___ftadd@f2+1,c
 22306  01258C  0E3F               	movlw	63
 22307  01258E  6E45               	movwf	i2___ftadd@f2+2,c
 22308  012590  C0A6  F024         	movff	_ADC_postProcessingCallback$3311,i2___ftneg@f1
 22309  012594  C0A7  F025         	movff	_ADC_postProcessingCallback$3311+1,i2___ftneg@f1+1
 22310  012598  C0A8  F026         	movff	_ADC_postProcessingCallback$3311+2,i2___ftneg@f1+2
 22311  01259C  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22312  0125A0  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22313  0125A4  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22314  0125A8  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22315  0125AC  EC5B  F09C         	call	i2___ftadd	;wreg free
 22316  0125B0  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 22317  0125B4  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 22318  0125B8  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 22319  0125BC  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22320  0125C0  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3312
 22321  0125C4  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3312+1
 22322  0125C8  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3312+2
 22323                           
 22324                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22325  0125CC  C0E8  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2
 22326  0125D0  C0E9  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1
 22327  0125D4  C0EA  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2
 22328  0125D8  C0A9  F040         	movff	_ADC_postProcessingCallback$3312,i2___ftadd@f1
 22329  0125DC  C0AA  F041         	movff	_ADC_postProcessingCallback$3312+1,i2___ftadd@f1+1
 22330  0125E0  C0AB  F042         	movff	_ADC_postProcessingCallback$3312+2,i2___ftadd@f1+2
 22331  0125E4  EC5B  F09C         	call	i2___ftadd	;wreg free
 22332  0125E8  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3313
 22333  0125EC  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3313+1
 22334  0125F0  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3313+2
 22335                           
 22336                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22337  0125F4  C0AC  F040         	movff	_ADC_postProcessingCallback$3313,i2___ftadd@f1
 22338  0125F8  C0AD  F041         	movff	_ADC_postProcessingCallback$3313+1,i2___ftadd@f1+1
 22339  0125FC  C0AE  F042         	movff	_ADC_postProcessingCallback$3313+2,i2___ftadd@f1+2
 22340  012600  0E00               	movlw	0
 22341  012602  6E43               	movwf	i2___ftadd@f2,c
 22342  012604  0E20               	movlw	32
 22343  012606  6E44               	movwf	i2___ftadd@f2+1,c
 22344  012608  0EC2               	movlw	194
 22345  01260A  6E45               	movwf	i2___ftadd@f2+2,c
 22346  01260C  EC5B  F09C         	call	i2___ftadd	;wreg free
 22347  012610  C040  F1C5         	movff	?i2___ftadd,_Temp_ADC_Result
 22348  012614  C041  F1C6         	movff	?i2___ftadd+1,_Temp_ADC_Result+1
 22349  012618  C042  F1C7         	movff	?i2___ftadd+2,_Temp_ADC_Result+2
 22350                           
 22351                           ;main.c: 187: break;
 22352  01261C  0012               	return	
 22353  01261E                     i2l752:
 22354                           
 22355                           ; BSR set to: 0
 22356                           ;main.c: 191: LATFbits.LATF3 = 1;
 22357  01261E  867E               	bsf	3966,3,c	;volatile
 22358                           
 22359                           ; BSR set to: 0
 22360                           ;main.c: 194: }
 22361                           
 22362                           ;main.c: 192: break;
 22363  012620  0012               	return	
 22364  012622                     i2l743:
 22365                           
 22366                           ; BSR set to: 0
 22367  012622  0100               	movlb	0	; () banked
 22368  012624  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 22369                           
 22370                           ; Switch size 1, requested type "space"
 22371                           ; Number of cases is 5, Range of values is 0 to 63
 22372                           ; switch strategies available:
 22373                           ; Name         Instructions Cycles
 22374                           ; simple_byte           16     9 (average)
 22375                           ;	Chosen strategy is simple_byte
 22376  012626  0A00               	xorlw	0	; case 0
 22377  012628  B4D8               	btfsc	status,2,c
 22378  01262A  D66B               	goto	i2l747
 22379  01262C  0A04               	xorlw	4	; case 4
 22380  01262E  B4D8               	btfsc	status,2,c
 22381  012630  D716               	goto	i2l750
 22382  012632  0A26               	xorlw	38	; case 34
 22383  012634  B4D8               	btfsc	status,2,c
 22384  012636  D634               	goto	i2l746
 22385  012638  0A1F               	xorlw	31	; case 61
 22386  01263A  B4D8               	btfsc	status,2,c
 22387  01263C  D74F               	goto	i2l751
 22388  01263E  0A02               	xorlw	2	; case 63
 22389  012640  B4D8               	btfsc	status,2,c
 22390  012642  D5FD               	goto	i2l744
 22391  012644  D7EC               	goto	i2l752
 22392  012646                     __end_of_ADC_postProcessingCallback:
 22393                           	opt stack 0
 22394                           tosu	equ	0xFFF
 22395                           tosh	equ	0xFFE
 22396                           tosl	equ	0xFFD
 22397                           pclatu	equ	0xFFB
 22398                           pclath	equ	0xFFA
 22399                           tblptru	equ	0xFF8
 22400                           tblptrh	equ	0xFF7
 22401                           tblptrl	equ	0xFF6
 22402                           tablat	equ	0xFF5
 22403                           prodh	equ	0xFF4
 22404                           prodl	equ	0xFF3
 22405                           intcon	equ	0xFF2
 22406                           postinc0	equ	0xFEE
 22407                           fsr0h	equ	0xFEA
 22408                           fsr0l	equ	0xFE9
 22409                           wreg	equ	0xFE8
 22410                           indf1	equ	0xFE7
 22411                           postdec1	equ	0xFE5
 22412                           fsr1h	equ	0xFE2
 22413                           fsr1l	equ	0xFE1
 22414                           bsr	equ	0xFE0
 22415                           indf2	equ	0xFDF
 22416                           postinc2	equ	0xFDE
 22417                           postdec2	equ	0xFDD
 22418                           fsr2h	equ	0xFDA
 22419                           fsr2l	equ	0xFD9
 22420                           status	equ	0xFD8
 22421                           
 22422 ;; *************** function _peakToRMS *****************
 22423 ;; Defined at:
 22424 ;;		line 86 in file "main.c"
 22425 ;; Parameters:    Size  Location     Type
 22426 ;;  Peak            3   52[BANK0 ] void 
 22427 ;;  Angle           3   55[BANK0 ] void 
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;  RMS             3   67[BANK0 ] void 
 22430 ;; Return value:  Size  Location     Type
 22431 ;;                  3   52[BANK0 ] void 
 22432 ;; Registers used:
 22433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22434 ;; Tracked objects:
 22435 ;;		On entry : 0/0
 22436 ;;		On exit  : 0/0
 22437 ;;		Unchanged: 0/0
 22438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22440 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22442 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22443 ;;Total ram usage:       18 bytes
 22444 ;; Hardware stack levels used:    1
 22445 ;; Hardware stack levels required when called:    6
 22446 ;; This function calls:
 22447 ;;		_acos
 22448 ;;		_sin
 22449 ;;		_sqrt
 22450 ;;		i2___ftadd
 22451 ;;		i2___ftdiv
 22452 ;;		i2___ftmul
 22453 ;;		i2___ftneg
 22454 ;; This function is called by:
 22455 ;;		_ADC_postProcessingCallback
 22456 ;; This function uses a non-reentrant model
 22457 ;;
 22458                           
 22459                           	psect	text89
 22460  013380                     __ptext89:
 22461                           	opt stack 0
 22462  013380                     _peakToRMS:
 22463                           	opt stack 9
 22464                           
 22465                           ;main.c: 89: double RMS = 0.0;
 22466                           
 22467                           ;incstack = 0
 22468  013380  0E00               	movlw	0
 22469  013382  0100               	movlb	0	; () banked
 22470  013384  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 22471  013386  0E00               	movlw	0
 22472  013388  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 22473  01338A  0E00               	movlw	0
 22474  01338C  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;main.c: 92: RMS = 2.0 * acos(-1.0);
 22478  01338E  0E00               	movlw	0
 22479  013390  6F8E               	movwf	acos@x& (0+255),b
 22480  013392  0E80               	movlw	128
 22481  013394  6F8F               	movwf	(acos@x+1)& (0+255),b
 22482  013396  0EBF               	movlw	191
 22483  013398  6F90               	movwf	(acos@x+2)& (0+255),b
 22484  01339A  ECBB  F0AB         	call	_acos	;wreg free
 22485  01339E  C08E  F0A0         	movff	?_acos,_peakToRMS$3307
 22486  0133A2  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3307+1
 22487  0133A6  C090  F0A2         	movff	?_acos+2,_peakToRMS$3307+2
 22488                           
 22489                           ;main.c: 92: RMS = 2.0 * acos(-1.0);
 22490  0133AA  C0A0  F027         	movff	_peakToRMS$3307,i2___ftmul@f1
 22491  0133AE  C0A1  F028         	movff	_peakToRMS$3307+1,i2___ftmul@f1+1
 22492  0133B2  C0A2  F029         	movff	_peakToRMS$3307+2,i2___ftmul@f1+2
 22493  0133B6  0E00               	movlw	0
 22494  0133B8  6E2A               	movwf	i2___ftmul@f2,c
 22495  0133BA  0E00               	movlw	0
 22496  0133BC  6E2B               	movwf	i2___ftmul@f2+1,c
 22497  0133BE  0E40               	movlw	64
 22498  0133C0  6E2C               	movwf	i2___ftmul@f2+2,c
 22499  0133C2  EC55  F0A2         	call	i2___ftmul	;wreg free
 22500  0133C6  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 22501  0133CA  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 22502  0133CE  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 22503                           
 22504                           ;main.c: 93: RMS = RMS - (2.0 * Angle);
 22505  0133D2  0E00               	movlw	0
 22506  0133D4  6E2A               	movwf	i2___ftmul@f2,c
 22507  0133D6  0E00               	movlw	0
 22508  0133D8  6E2B               	movwf	i2___ftmul@f2+1,c
 22509  0133DA  0E40               	movlw	64
 22510  0133DC  6E2C               	movwf	i2___ftmul@f2+2,c
 22511  0133DE  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 22512  0133E2  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 22513  0133E6  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 22514  0133EA  EC55  F0A2         	call	i2___ftmul	;wreg free
 22515  0133EE  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 22516  0133F2  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 22517  0133F6  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 22518  0133FA  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22519  0133FE  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22520  013402  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22521  013406  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22522  01340A  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 22523  01340E  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 22524  013412  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 22525  013416  EC5B  F09C         	call	i2___ftadd	;wreg free
 22526  01341A  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 22527  01341E  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 22528  013422  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 22529                           
 22530                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 22531  013426  0E00               	movlw	0
 22532  013428  6E2A               	movwf	i2___ftmul@f2,c
 22533  01342A  0E00               	movlw	0
 22534  01342C  6E2B               	movwf	i2___ftmul@f2+1,c
 22535  01342E  0E40               	movlw	64
 22536  013430  6E2C               	movwf	i2___ftmul@f2+2,c
 22537  013432  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 22538  013436  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 22539  01343A  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 22540  01343E  EC55  F0A2         	call	i2___ftmul	;wreg free
 22541  013442  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3308
 22542  013446  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3308+1
 22543  01344A  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3308+2
 22544                           
 22545                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 22546  01344E  C09A  F066         	movff	_peakToRMS$3308,sin@f
 22547  013452  C09B  F067         	movff	_peakToRMS$3308+1,sin@f+1
 22548  013456  C09C  F068         	movff	_peakToRMS$3308+2,sin@f+2
 22549  01345A  EC91  F098         	call	_sin	;wreg free
 22550  01345E  C066  F09D         	movff	?_sin,_peakToRMS$3309
 22551  013462  C067  F09E         	movff	?_sin+1,_peakToRMS$3309+1
 22552  013466  C068  F09F         	movff	?_sin+2,_peakToRMS$3309+2
 22553                           
 22554                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 22555  01346A  C09D  F040         	movff	_peakToRMS$3309,i2___ftadd@f1
 22556  01346E  C09E  F041         	movff	_peakToRMS$3309+1,i2___ftadd@f1+1
 22557  013472  C09F  F042         	movff	_peakToRMS$3309+2,i2___ftadd@f1+2
 22558  013476  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 22559  01347A  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 22560  01347E  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 22561  013482  EC5B  F09C         	call	i2___ftadd	;wreg free
 22562  013486  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 22563  01348A  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 22564  01348E  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 22565                           
 22566                           ;main.c: 95: RMS = RMS / (4.0 * acos(-1.0));
 22567  013492  0E00               	movlw	0
 22568  013494  0100               	movlb	0	; () banked
 22569  013496  6F8E               	movwf	acos@x& (0+255),b
 22570  013498  0E80               	movlw	128
 22571  01349A  6F8F               	movwf	(acos@x+1)& (0+255),b
 22572  01349C  0EBF               	movlw	191
 22573  01349E  6F90               	movwf	(acos@x+2)& (0+255),b
 22574  0134A0  ECBB  F0AB         	call	_acos	;wreg free
 22575  0134A4  C08E  F0A0         	movff	?_acos,_peakToRMS$3307
 22576  0134A8  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3307+1
 22577  0134AC  C090  F0A2         	movff	?_acos+2,_peakToRMS$3307+2
 22578                           
 22579                           ;main.c: 95: RMS = RMS / (4.0 * acos(-1.0));
 22580  0134B0  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 22581  0134B4  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 22582  0134B8  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 22583  0134BC  0E00               	movlw	0
 22584  0134BE  6E2A               	movwf	i2___ftmul@f2,c
 22585  0134C0  0E80               	movlw	128
 22586  0134C2  6E2B               	movwf	i2___ftmul@f2+1,c
 22587  0134C4  0E40               	movlw	64
 22588  0134C6  6E2C               	movwf	i2___ftmul@f2+2,c
 22589  0134C8  C0A0  F027         	movff	_peakToRMS$3307,i2___ftmul@f1
 22590  0134CC  C0A1  F028         	movff	_peakToRMS$3307+1,i2___ftmul@f1+1
 22591  0134D0  C0A2  F029         	movff	_peakToRMS$3307+2,i2___ftmul@f1+2
 22592  0134D4  EC55  F0A2         	call	i2___ftmul	;wreg free
 22593  0134D8  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 22594  0134DC  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 22595  0134E0  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 22596  0134E4  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22597  0134E8  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 22598  0134EC  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 22599  0134F0  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 22600                           
 22601                           ;main.c: 96: RMS = sqrt(RMS);
 22602  0134F4  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 22603  0134F8  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 22604  0134FC  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 22605  013500  EC31  F09D         	call	_sqrt	;wreg free
 22606  013504  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 22607  013508  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 22608  01350C  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 22609                           
 22610                           ;main.c: 97: RMS = Peak * RMS;
 22611  013510  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 22612  013514  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 22613  013518  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 22614  01351C  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 22615  013520  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 22616  013524  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 22617  013528  EC55  F0A2         	call	i2___ftmul	;wreg free
 22618  01352C  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 22619  013530  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 22620  013534  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 22621                           
 22622                           ;main.c: 98: return RMS;
 22623  013538  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 22624  01353C  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 22625  013540  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 22626  013544  0012               	return	
 22627  013546                     __end_of_peakToRMS:
 22628                           	opt stack 0
 22629                           tosu	equ	0xFFF
 22630                           tosh	equ	0xFFE
 22631                           tosl	equ	0xFFD
 22632                           pclatu	equ	0xFFB
 22633                           pclath	equ	0xFFA
 22634                           tblptru	equ	0xFF8
 22635                           tblptrh	equ	0xFF7
 22636                           tblptrl	equ	0xFF6
 22637                           tablat	equ	0xFF5
 22638                           prodh	equ	0xFF4
 22639                           prodl	equ	0xFF3
 22640                           intcon	equ	0xFF2
 22641                           postinc0	equ	0xFEE
 22642                           fsr0h	equ	0xFEA
 22643                           fsr0l	equ	0xFE9
 22644                           wreg	equ	0xFE8
 22645                           indf1	equ	0xFE7
 22646                           postdec1	equ	0xFE5
 22647                           fsr1h	equ	0xFE2
 22648                           fsr1l	equ	0xFE1
 22649                           bsr	equ	0xFE0
 22650                           indf2	equ	0xFDF
 22651                           postinc2	equ	0xFDE
 22652                           postdec2	equ	0xFDD
 22653                           fsr2h	equ	0xFDA
 22654                           fsr2l	equ	0xFD9
 22655                           status	equ	0xFD8
 22656                           
 22657 ;; *************** function _acos *****************
 22658 ;; Defined at:
 22659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 22660 ;; Parameters:    Size  Location     Type
 22661 ;;  x               3   46[BANK0 ] void 
 22662 ;; Auto vars:     Size  Location     Type
 22663 ;;		None
 22664 ;; Return value:  Size  Location     Type
 22665 ;;                  3   46[BANK0 ] void 
 22666 ;; Registers used:
 22667 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22668 ;; Tracked objects:
 22669 ;;		On entry : 0/0
 22670 ;;		On exit  : 0/0
 22671 ;;		Unchanged: 0/0
 22672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22673 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22674 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22676 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22677 ;;Total ram usage:        6 bytes
 22678 ;; Hardware stack levels used:    1
 22679 ;; Hardware stack levels required when called:    5
 22680 ;; This function calls:
 22681 ;;		_asin
 22682 ;;		i2___ftadd
 22683 ;;		i2___ftneg
 22684 ;; This function is called by:
 22685 ;;		_peakToRMS
 22686 ;; This function uses a non-reentrant model
 22687 ;;
 22688                           
 22689                           	psect	text90
 22690  015776                     __ptext90:
 22691                           	opt stack 0
 22692  015776                     _acos:
 22693                           	opt stack 9
 22694                           
 22695                           ;incstack = 0
 22696  015776  C08E  F079         	movff	acos@x,asin@x
 22697  01577A  C08F  F07A         	movff	acos@x+1,asin@x+1
 22698  01577E  C090  F07B         	movff	acos@x+2,asin@x+2
 22699  015782  EC5C  F097         	call	_asin	;wreg free
 22700  015786  C079  F091         	movff	?_asin,_acos$3314
 22701  01578A  C07A  F092         	movff	?_asin+1,_acos$3314+1
 22702  01578E  C07B  F093         	movff	?_asin+2,_acos$3314+2
 22703  015792  C091  F024         	movff	_acos$3314,i2___ftneg@f1
 22704  015796  C092  F025         	movff	_acos$3314+1,i2___ftneg@f1+1
 22705  01579A  C093  F026         	movff	_acos$3314+2,i2___ftneg@f1+2
 22706  01579E  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22707  0157A2  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22708  0157A6  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22709  0157AA  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22710  0157AE  0E10               	movlw	16
 22711  0157B0  6E43               	movwf	i2___ftadd@f2,c
 22712  0157B2  0EC9               	movlw	201
 22713  0157B4  6E44               	movwf	i2___ftadd@f2+1,c
 22714  0157B6  0E3F               	movlw	63
 22715  0157B8  6E45               	movwf	i2___ftadd@f2+2,c
 22716  0157BA  EC5B  F09C         	call	i2___ftadd	;wreg free
 22717  0157BE  C040  F08E         	movff	?i2___ftadd,?_acos
 22718  0157C2  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 22719  0157C6  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 22720  0157CA  0012               	return	
 22721  0157CC                     __end_of_acos:
 22722                           	opt stack 0
 22723                           tosu	equ	0xFFF
 22724                           tosh	equ	0xFFE
 22725                           tosl	equ	0xFFD
 22726                           pclatu	equ	0xFFB
 22727                           pclath	equ	0xFFA
 22728                           tblptru	equ	0xFF8
 22729                           tblptrh	equ	0xFF7
 22730                           tblptrl	equ	0xFF6
 22731                           tablat	equ	0xFF5
 22732                           prodh	equ	0xFF4
 22733                           prodl	equ	0xFF3
 22734                           intcon	equ	0xFF2
 22735                           postinc0	equ	0xFEE
 22736                           fsr0h	equ	0xFEA
 22737                           fsr0l	equ	0xFE9
 22738                           wreg	equ	0xFE8
 22739                           indf1	equ	0xFE7
 22740                           postdec1	equ	0xFE5
 22741                           fsr1h	equ	0xFE2
 22742                           fsr1l	equ	0xFE1
 22743                           bsr	equ	0xFE0
 22744                           indf2	equ	0xFDF
 22745                           postinc2	equ	0xFDE
 22746                           postdec2	equ	0xFDD
 22747                           fsr2h	equ	0xFDA
 22748                           fsr2l	equ	0xFD9
 22749                           status	equ	0xFD8
 22750                           
 22751 ;; *************** function _asin *****************
 22752 ;; Defined at:
 22753 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 22754 ;; Parameters:    Size  Location     Type
 22755 ;;  x               3   25[BANK0 ] void 
 22756 ;; Auto vars:     Size  Location     Type
 22757 ;;  y               3   40[BANK0 ] void 
 22758 ;;  sgn             3   28[BANK0 ] void 
 22759 ;; Return value:  Size  Location     Type
 22760 ;;                  3   25[BANK0 ] void 
 22761 ;; Registers used:
 22762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22763 ;; Tracked objects:
 22764 ;;		On entry : 0/0
 22765 ;;		On exit  : 0/0
 22766 ;;		Unchanged: 0/0
 22767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22768 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22769 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22771 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22772 ;;Total ram usage:       21 bytes
 22773 ;; Hardware stack levels used:    1
 22774 ;; Hardware stack levels required when called:    4
 22775 ;; This function calls:
 22776 ;;		_atan
 22777 ;;		_fabs
 22778 ;;		_sqrt
 22779 ;;		i2___ftadd
 22780 ;;		i2___ftdiv
 22781 ;;		i2___ftge
 22782 ;;		i2___ftmul
 22783 ;;		i2___ftneg
 22784 ;; This function is called by:
 22785 ;;		_acos
 22786 ;; This function uses a non-reentrant model
 22787 ;;
 22788                           
 22789                           	psect	text91
 22790  012EB8                     __ptext91:
 22791                           	opt stack 0
 22792  012EB8                     _asin:
 22793                           	opt stack 9
 22794                           
 22795                           ;incstack = 0
 22796  012EB8  0E00               	movlw	0
 22797  012EBA  6E2A               	movwf	i2___ftge@ff1,c
 22798  012EBC  0E80               	movlw	128
 22799  012EBE  6E2B               	movwf	i2___ftge@ff1+1,c
 22800  012EC0  0E3F               	movlw	63
 22801  012EC2  6E2C               	movwf	i2___ftge@ff1+2,c
 22802  012EC4  C079  F027         	movff	asin@x,fabs@d
 22803  012EC8  C07A  F028         	movff	asin@x+1,fabs@d+1
 22804  012ECC  C07B  F029         	movff	asin@x+2,fabs@d+2
 22805  012ED0  EC1E  F0AE         	call	_fabs	;wreg free
 22806  012ED4  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 22807  012ED8  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 22808  012EDC  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 22809  012EE0  EC4A  F0A7         	call	i2___ftge	;wreg free
 22810  012EE4  B0D8               	btfsc	status,0,c
 22811  012EE6  D00C               	goto	i2l1282
 22812  012EE8  0E00               	movlw	0
 22813  012EEA  0100               	movlb	0	; () banked
 22814  012EEC  6FD8               	movwf	(_errno+1)& (0+255),b
 22815  012EEE  0E21               	movlw	33
 22816  012EF0  6FD7               	movwf	_errno& (0+255),b
 22817  012EF2  0E00               	movlw	0
 22818  012EF4  6F79               	movwf	?_asin& (0+255),b
 22819  012EF6  0E00               	movlw	0
 22820  012EF8  6F7A               	movwf	(?_asin+1)& (0+255),b
 22821  012EFA  0E00               	movlw	0
 22822  012EFC  6F7B               	movwf	(?_asin+2)& (0+255),b
 22823                           
 22824                           ; BSR set to: 0
 22825  012EFE  0012               	return	
 22826  012F00                     i2l1282:
 22827                           
 22828                           ; BSR set to: 0
 22829  012F00  0E00               	movlw	0
 22830  012F02  0100               	movlb	0	; () banked
 22831  012F04  6F7C               	movwf	asin@sgn& (0+255),b
 22832  012F06  0E80               	movlw	128
 22833  012F08  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 22834  012F0A  0E3F               	movlw	63
 22835  012F0C  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 22836                           
 22837                           ; BSR set to: 0
 22838  012F0E  C079  F02A         	movff	asin@x,i2___ftmul@f2
 22839  012F12  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 22840  012F16  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 22841  012F1A  C079  F027         	movff	asin@x,i2___ftmul@f1
 22842  012F1E  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 22843  012F22  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 22844  012F26  EC55  F0A2         	call	i2___ftmul	;wreg free
 22845  012F2A  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 22846  012F2E  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 22847  012F32  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 22848  012F36  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22849  012F3A  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22850  012F3E  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22851  012F42  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22852  012F46  0E00               	movlw	0
 22853  012F48  6E43               	movwf	i2___ftadd@f2,c
 22854  012F4A  0E80               	movlw	128
 22855  012F4C  6E44               	movwf	i2___ftadd@f2+1,c
 22856  012F4E  0E3F               	movlw	63
 22857  012F50  6E45               	movwf	i2___ftadd@f2+2,c
 22858  012F52  EC5B  F09C         	call	i2___ftadd	;wreg free
 22859  012F56  C040  F07F         	movff	?i2___ftadd,_asin$3315
 22860  012F5A  C041  F080         	movff	?i2___ftadd+1,_asin$3315+1
 22861  012F5E  C042  F081         	movff	?i2___ftadd+2,_asin$3315+2
 22862  012F62  C07F  F066         	movff	_asin$3315,sqrt@a
 22863  012F66  C080  F067         	movff	_asin$3315+1,sqrt@a+1
 22864  012F6A  C081  F068         	movff	_asin$3315+2,sqrt@a+2
 22865  012F6E  EC31  F09D         	call	_sqrt	;wreg free
 22866  012F72  C066  F088         	movff	?_sqrt,asin@y
 22867  012F76  C067  F089         	movff	?_sqrt+1,asin@y+1
 22868  012F7A  C068  F08A         	movff	?_sqrt+2,asin@y+2
 22869  012F7E  C079  F027         	movff	asin@x,fabs@d
 22870  012F82  C07A  F028         	movff	asin@x+1,fabs@d+1
 22871  012F86  C07B  F029         	movff	asin@x+2,fabs@d+2
 22872  012F8A  EC1E  F0AE         	call	_fabs	;wreg free
 22873  012F8E  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 22874  012F92  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 22875  012F96  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 22876  012F9A  0EC3               	movlw	195
 22877  012F9C  6E2D               	movwf	i2___ftge@ff2,c
 22878  012F9E  0E35               	movlw	53
 22879  012FA0  6E2E               	movwf	i2___ftge@ff2+1,c
 22880  012FA2  0E3F               	movlw	63
 22881  012FA4  6E2F               	movwf	i2___ftge@ff2+2,c
 22882  012FA6  EC4A  F0A7         	call	i2___ftge	;wreg free
 22883  012FAA  B0D8               	btfsc	status,0,c
 22884  012FAC  D023               	goto	i2l1284
 22885  012FAE  C079  F015         	movff	asin@x,i2___ftdiv@f1
 22886  012FB2  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 22887  012FB6  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 22888  012FBA  C088  F018         	movff	asin@y,i2___ftdiv@f2
 22889  012FBE  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 22890  012FC2  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 22891  012FC6  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22892  012FCA  C015  F08B         	movff	?i2___ftdiv,_asin$3316
 22893  012FCE  C016  F08C         	movff	?i2___ftdiv+1,_asin$3316+1
 22894  012FD2  C017  F08D         	movff	?i2___ftdiv+2,_asin$3316+2
 22895  012FD6  C08B  F058         	movff	_asin$3316,atan@f
 22896  012FDA  C08C  F059         	movff	_asin$3316+1,atan@f+1
 22897  012FDE  C08D  F05A         	movff	_asin$3316+2,atan@f+2
 22898  012FE2  ECA3  F09A         	call	_atan	;wreg free
 22899  012FE6  C058  F079         	movff	?_atan,?_asin
 22900  012FEA  C059  F07A         	movff	?_atan+1,?_asin+1
 22901  012FEE  C05A  F07B         	movff	?_atan+2,?_asin+2
 22902  012FF2  0012               	return	
 22903  012FF4                     i2l1284:
 22904  012FF4  0100               	movlb	0	; () banked
 22905  012FF6  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 22906  012FF8  D055               	goto	i2l1285
 22907                           
 22908                           ; BSR set to: 0
 22909  012FFA  C079  F018         	movff	asin@x,i2___ftdiv@f2
 22910  012FFE  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 22911  013002  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 22912  013006  C088  F024         	movff	asin@y,i2___ftneg@f1
 22913  01300A  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 22914  01300E  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 22915  013012  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22916  013016  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 22917  01301A  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 22918  01301E  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 22919  013022  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22920  013026  C015  F08B         	movff	?i2___ftdiv,_asin$3316
 22921  01302A  C016  F08C         	movff	?i2___ftdiv+1,_asin$3316+1
 22922  01302E  C017  F08D         	movff	?i2___ftdiv+2,_asin$3316+2
 22923  013032  C08B  F058         	movff	_asin$3316,atan@f
 22924  013036  C08C  F059         	movff	_asin$3316+1,atan@f+1
 22925  01303A  C08D  F05A         	movff	_asin$3316+2,atan@f+2
 22926  01303E  ECA3  F09A         	call	_atan	;wreg free
 22927  013042  C058  F085         	movff	?_atan,_asin$3317
 22928  013046  C059  F086         	movff	?_atan+1,_asin$3317+1
 22929  01304A  C05A  F087         	movff	?_atan+2,_asin$3317+2
 22930  01304E  0E10               	movlw	16
 22931  013050  6E43               	movwf	i2___ftadd@f2,c
 22932  013052  0EC9               	movlw	201
 22933  013054  6E44               	movwf	i2___ftadd@f2+1,c
 22934  013056  0E3F               	movlw	63
 22935  013058  6E45               	movwf	i2___ftadd@f2+2,c
 22936  01305A  C085  F024         	movff	_asin$3317,i2___ftneg@f1
 22937  01305E  C086  F025         	movff	_asin$3317+1,i2___ftneg@f1+1
 22938  013062  C087  F026         	movff	_asin$3317+2,i2___ftneg@f1+2
 22939  013066  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22940  01306A  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22941  01306E  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22942  013072  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22943  013076  EC5B  F09C         	call	i2___ftadd	;wreg free
 22944  01307A  C040  F082         	movff	?i2___ftadd,_asin$3318
 22945  01307E  C041  F083         	movff	?i2___ftadd+1,_asin$3318+1
 22946  013082  C042  F084         	movff	?i2___ftadd+2,_asin$3318+2
 22947  013086  C082  F024         	movff	_asin$3318,i2___ftneg@f1
 22948  01308A  C083  F025         	movff	_asin$3318+1,i2___ftneg@f1+1
 22949  01308E  C084  F026         	movff	_asin$3318+2,i2___ftneg@f1+2
 22950  013092  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22951  013096  C024  F079         	movff	?i2___ftneg,?_asin
 22952  01309A  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 22953  01309E  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 22954  0130A2  0012               	return	
 22955  0130A4                     i2l1285:
 22956  0130A4  C079  F018         	movff	asin@x,i2___ftdiv@f2
 22957  0130A8  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 22958  0130AC  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 22959  0130B0  C088  F015         	movff	asin@y,i2___ftdiv@f1
 22960  0130B4  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 22961  0130B8  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 22962  0130BC  EC43  F0A3         	call	i2___ftdiv	;wreg free
 22963  0130C0  C015  F08B         	movff	?i2___ftdiv,_asin$3316
 22964  0130C4  C016  F08C         	movff	?i2___ftdiv+1,_asin$3316+1
 22965  0130C8  C017  F08D         	movff	?i2___ftdiv+2,_asin$3316+2
 22966  0130CC  C08B  F058         	movff	_asin$3316,atan@f
 22967  0130D0  C08C  F059         	movff	_asin$3316+1,atan@f+1
 22968  0130D4  C08D  F05A         	movff	_asin$3316+2,atan@f+2
 22969  0130D8  ECA3  F09A         	call	_atan	;wreg free
 22970  0130DC  C058  F085         	movff	?_atan,_asin$3317
 22971  0130E0  C059  F086         	movff	?_atan+1,_asin$3317+1
 22972  0130E4  C05A  F087         	movff	?_atan+2,_asin$3317+2
 22973  0130E8  C085  F024         	movff	_asin$3317,i2___ftneg@f1
 22974  0130EC  C086  F025         	movff	_asin$3317+1,i2___ftneg@f1+1
 22975  0130F0  C087  F026         	movff	_asin$3317+2,i2___ftneg@f1+2
 22976  0130F4  ECD7  F0AE         	call	i2___ftneg	;wreg free
 22977  0130F8  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22978  0130FC  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22979  013100  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22980  013104  0E10               	movlw	16
 22981  013106  6E43               	movwf	i2___ftadd@f2,c
 22982  013108  0EC9               	movlw	201
 22983  01310A  6E44               	movwf	i2___ftadd@f2+1,c
 22984  01310C  0E3F               	movlw	63
 22985  01310E  6E45               	movwf	i2___ftadd@f2+2,c
 22986  013110  EC5B  F09C         	call	i2___ftadd	;wreg free
 22987  013114  C040  F079         	movff	?i2___ftadd,?_asin
 22988  013118  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 22989  01311C  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 22990  013120  0012               	return	
 22991  013122                     __end_of_asin:
 22992                           	opt stack 0
 22993                           tosu	equ	0xFFF
 22994                           tosh	equ	0xFFE
 22995                           tosl	equ	0xFFD
 22996                           pclatu	equ	0xFFB
 22997                           pclath	equ	0xFFA
 22998                           tblptru	equ	0xFF8
 22999                           tblptrh	equ	0xFF7
 23000                           tblptrl	equ	0xFF6
 23001                           tablat	equ	0xFF5
 23002                           prodh	equ	0xFF4
 23003                           prodl	equ	0xFF3
 23004                           intcon	equ	0xFF2
 23005                           postinc0	equ	0xFEE
 23006                           fsr0h	equ	0xFEA
 23007                           fsr0l	equ	0xFE9
 23008                           wreg	equ	0xFE8
 23009                           indf1	equ	0xFE7
 23010                           postdec1	equ	0xFE5
 23011                           fsr1h	equ	0xFE2
 23012                           fsr1l	equ	0xFE1
 23013                           bsr	equ	0xFE0
 23014                           indf2	equ	0xFDF
 23015                           postinc2	equ	0xFDE
 23016                           postdec2	equ	0xFDD
 23017                           fsr2h	equ	0xFDA
 23018                           fsr2l	equ	0xFD9
 23019                           status	equ	0xFD8
 23020                           
 23021 ;; *************** function _sqrt *****************
 23022 ;; Defined at:
 23023 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;  a               3    6[BANK0 ] void 
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;  x               3   22[BANK0 ] void 
 23028 ;;  q               3   19[BANK0 ] void 
 23029 ;;  z               3   16[BANK0 ] void 
 23030 ;;  og              3   12[BANK0 ] void 
 23031 ;;  i               1   15[BANK0 ] unsigned char 
 23032 ;; Return value:  Size  Location     Type
 23033 ;;                  3    6[BANK0 ] unsigned char 
 23034 ;; Registers used:
 23035 ;;		wreg, status,2, status,0, cstack
 23036 ;; Tracked objects:
 23037 ;;		On entry : 0/0
 23038 ;;		On exit  : 0/0
 23039 ;;		Unchanged: 0/0
 23040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23041 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23042 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23043 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23044 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23045 ;;Total ram usage:       19 bytes
 23046 ;; Hardware stack levels used:    1
 23047 ;; Hardware stack levels required when called:    3
 23048 ;; This function calls:
 23049 ;;		i2___ftge
 23050 ;;		i2___ftmul
 23051 ;;		i2___ftsub
 23052 ;; This function is called by:
 23053 ;;		_peakToRMS
 23054 ;;		_asin
 23055 ;; This function uses a non-reentrant model
 23056 ;;
 23057                           
 23058                           	psect	text92
 23059  013A62                     __ptext92:
 23060                           	opt stack 0
 23061  013A62                     _sqrt:
 23062                           	opt stack 11
 23063                           
 23064                           ;incstack = 0
 23065  013A62  0E00               	movlw	0
 23066  013A64  6E2A               	movwf	i2___ftge@ff1,c
 23067  013A66  0E00               	movlw	0
 23068  013A68  6E2B               	movwf	i2___ftge@ff1+1,c
 23069  013A6A  0E00               	movlw	0
 23070  013A6C  6E2C               	movwf	i2___ftge@ff1+2,c
 23071  013A6E  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 23072  013A72  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 23073  013A76  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 23074  013A7A  EC4A  F0A7         	call	i2___ftge	;wreg free
 23075  013A7E  A0D8               	btfss	status,0,c
 23076  013A80  D00E               	goto	i2l1810
 23077  013A82  0100               	movlb	0	; () banked
 23078  013A84  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 23079  013A86  D004               	goto	i2l1811
 23080                           
 23081                           ; BSR set to: 0
 23082  013A88  0E00               	movlw	0
 23083  013A8A  6FD8               	movwf	(_errno+1)& (0+255),b
 23084  013A8C  0E21               	movlw	33
 23085  013A8E  6FD7               	movwf	_errno& (0+255),b
 23086  013A90                     i2l1811:
 23087                           
 23088                           ; BSR set to: 0
 23089  013A90  0E00               	movlw	0
 23090  013A92  6F66               	movwf	?_sqrt& (0+255),b
 23091  013A94  0E00               	movlw	0
 23092  013A96  6F67               	movwf	(?_sqrt+1)& (0+255),b
 23093  013A98  0E00               	movlw	0
 23094  013A9A  6F68               	movwf	(?_sqrt+2)& (0+255),b
 23095                           
 23096                           ; BSR set to: 0
 23097  013A9C  0012               	return	
 23098  013A9E                     i2l1810:
 23099  013A9E  C066  F070         	movff	sqrt@a,sqrt@z
 23100  013AA2  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 23101  013AA6  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 23102  013AAA  C066  F069         	movff	sqrt@a,??_sqrt
 23103  013AAE  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 23104  013AB2  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 23105  013AB6  0100               	movlb	0	; () banked
 23106  013AB8  1F69               	comf	??_sqrt& (0+255),f,b
 23107  013ABA  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 23108  013ABC  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 23109  013ABE  2B69               	incf	??_sqrt& (0+255),f,b
 23110  013AC0  0E00               	movlw	0
 23111  013AC2  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 23112  013AC4  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 23113  013AC6  0EC8               	movlw	200
 23114  013AC8  2569               	addwf	??_sqrt& (0+255),w,b
 23115  013ACA  6F76               	movwf	sqrt@x& (0+255),b
 23116  013ACC  0E6E               	movlw	110
 23117  013ACE  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 23118  013AD0  6F77               	movwf	(sqrt@x+1)& (0+255),b
 23119  013AD2  0EBE               	movlw	190
 23120  013AD4  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 23121  013AD6  6F78               	movwf	(sqrt@x+2)& (0+255),b
 23122                           
 23123                           ; BSR set to: 0
 23124  013AD8  90D8               	bcf	status,0,c
 23125  013ADA  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 23126  013ADC  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 23127  013ADE  3376               	rrcf	sqrt@x& (0+255),f,b
 23128                           
 23129                           ; BSR set to: 0
 23130  013AE0  0E00               	movlw	0
 23131  013AE2  5F70               	subwf	sqrt@z& (0+255),f,b
 23132  013AE4  0E80               	movlw	128
 23133  013AE6  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 23134  013AE8  0E00               	movlw	0
 23135  013AEA  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 23136                           
 23137                           ; BSR set to: 0
 23138  013AEC  0E04               	movlw	4
 23139  013AEE  6F6F               	movwf	sqrt@i& (0+255),b
 23140  013AF0                     
 23141                           ; BSR set to: 0
 23142                           
 23143                           ; BSR set to: 0
 23144  013AF0  C076  F06C         	movff	sqrt@x,sqrt@og
 23145  013AF4  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 23146  013AF8  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 23147                           
 23148                           ; BSR set to: 0
 23149  013AFC  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23150  013B00  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23151  013B04  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23152  013B08  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 23153  013B0C  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 23154  013B10  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 23155  013B14  EC55  F0A2         	call	i2___ftmul	;wreg free
 23156  013B18  C027  F073         	movff	?i2___ftmul,sqrt@q
 23157  013B1C  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23158  013B20  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23159  013B24  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 23160  013B28  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 23161  013B2C  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 23162  013B30  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 23163  013B34  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 23164  013B38  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 23165  013B3C  EC55  F0A2         	call	i2___ftmul	;wreg free
 23166  013B40  C027  F073         	movff	?i2___ftmul,sqrt@q
 23167  013B44  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23168  013B48  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23169  013B4C  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 23170  013B50  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 23171  013B54  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 23172  013B58  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 23173  013B5C  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 23174  013B60  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 23175  013B64  EC55  F0A2         	call	i2___ftmul	;wreg free
 23176  013B68  C027  F073         	movff	?i2___ftmul,sqrt@q
 23177  013B6C  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23178  013B70  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23179  013B74  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23180  013B78  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23181  013B7C  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23182  013B80  0E00               	movlw	0
 23183  013B82  6E2A               	movwf	i2___ftmul@f2,c
 23184  013B84  0EC0               	movlw	192
 23185  013B86  6E2B               	movwf	i2___ftmul@f2+1,c
 23186  013B88  0E3F               	movlw	63
 23187  013B8A  6E2C               	movwf	i2___ftmul@f2+2,c
 23188  013B8C  EC55  F0A2         	call	i2___ftmul	;wreg free
 23189  013B90  C027  F076         	movff	?i2___ftmul,sqrt@x
 23190  013B94  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 23191  013B98  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 23192  013B9C  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 23193  013BA0  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 23194  013BA4  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 23195  013BA8  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 23196  013BAC  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 23197  013BB0  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 23198  013BB4  EC5C  F0AD         	call	i2___ftsub	;wreg free
 23199  013BB8  C060  F076         	movff	?i2___ftsub,sqrt@x
 23200  013BBC  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 23201  013BC0  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 23202  013BC4  0100               	movlb	0	; () banked
 23203  013BC6  2F6F               	decfsz	sqrt@i& (0+255),f,b
 23204  013BC8  D793               	goto	i2l1813
 23205                           
 23206                           ; BSR set to: 0
 23207                           
 23208                           ; BSR set to: 0
 23209  013BCA  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23210  013BCE  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23211  013BD2  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23212  013BD6  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 23213  013BDA  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 23214  013BDE  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 23215  013BE2  EC55  F0A2         	call	i2___ftmul	;wreg free
 23216  013BE6  C027  F066         	movff	?i2___ftmul,?_sqrt
 23217  013BEA  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 23218  013BEE  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 23219  013BF2  0012               	return	
 23220  013BF4                     __end_of_sqrt:
 23221                           	opt stack 0
 23222                           tosu	equ	0xFFF
 23223                           tosh	equ	0xFFE
 23224                           tosl	equ	0xFFD
 23225                           pclatu	equ	0xFFB
 23226                           pclath	equ	0xFFA
 23227                           tblptru	equ	0xFF8
 23228                           tblptrh	equ	0xFF7
 23229                           tblptrl	equ	0xFF6
 23230                           tablat	equ	0xFF5
 23231                           prodh	equ	0xFF4
 23232                           prodl	equ	0xFF3
 23233                           intcon	equ	0xFF2
 23234                           postinc0	equ	0xFEE
 23235                           fsr0h	equ	0xFEA
 23236                           fsr0l	equ	0xFE9
 23237                           wreg	equ	0xFE8
 23238                           indf1	equ	0xFE7
 23239                           postdec1	equ	0xFE5
 23240                           fsr1h	equ	0xFE2
 23241                           fsr1l	equ	0xFE1
 23242                           bsr	equ	0xFE0
 23243                           indf2	equ	0xFDF
 23244                           postinc2	equ	0xFDE
 23245                           postdec2	equ	0xFDD
 23246                           fsr2h	equ	0xFDA
 23247                           fsr2l	equ	0xFD9
 23248                           status	equ	0xFD8
 23249                           
 23250 ;; *************** function _atan *****************
 23251 ;; Defined at:
 23252 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;  f               3   87[COMRAM] unsigned char 
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;  val             3   10[BANK0 ] unsigned char 
 23257 ;;  val_squared     3    7[BANK0 ] unsigned char 
 23258 ;;  x               3    3[BANK0 ] unsigned char 
 23259 ;;  y               3    0[BANK0 ] unsigned char 
 23260 ;;  recip           1    6[BANK0 ] unsigned char 
 23261 ;; Return value:  Size  Location     Type
 23262 ;;                  3   87[COMRAM] unsigned char 
 23263 ;; Registers used:
 23264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23265 ;; Tracked objects:
 23266 ;;		On entry : 0/0
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23270 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23271 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23273 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23274 ;;Total ram usage:       16 bytes
 23275 ;; Hardware stack levels used:    1
 23276 ;; Hardware stack levels required when called:    3
 23277 ;; This function calls:
 23278 ;;		_eval_poly
 23279 ;;		_fabs
 23280 ;;		i2___ftadd
 23281 ;;		i2___ftdiv
 23282 ;;		i2___ftge
 23283 ;;		i2___ftmul
 23284 ;;		i2___ftneg
 23285 ;; This function is called by:
 23286 ;;		_asin
 23287 ;; This function uses a non-reentrant model
 23288 ;;
 23289                           
 23290                           	psect	text93
 23291  013546                     __ptext93:
 23292                           	opt stack 0
 23293  013546                     _atan:
 23294                           	opt stack 9
 23295                           
 23296                           ;incstack = 0
 23297  013546  C058  F027         	movff	atan@f,fabs@d
 23298  01354A  C059  F028         	movff	atan@f+1,fabs@d+1
 23299  01354E  C05A  F029         	movff	atan@f+2,fabs@d+2
 23300  013552  EC1E  F0AE         	call	_fabs	;wreg free
 23301  013556  C027  F06A         	movff	?_fabs,atan@val
 23302  01355A  C028  F06B         	movff	?_fabs+1,atan@val+1
 23303  01355E  C029  F06C         	movff	?_fabs+2,atan@val+2
 23304  013562  0100               	movlb	0	; () banked
 23305  013564  516A               	movf	atan@val& (0+255),w,b
 23306  013566  116B               	iorwf	(atan@val+1)& (0+255),w,b
 23307  013568  116C               	iorwf	(atan@val+2)& (0+255),w,b
 23308  01356A  A4D8               	btfss	status,2,c
 23309  01356C  D007               	goto	i2l1301
 23310                           
 23311                           ; BSR set to: 0
 23312  01356E  0E00               	movlw	0
 23313  013570  6E58               	movwf	?_atan,c
 23314  013572  0E00               	movlw	0
 23315  013574  6E59               	movwf	?_atan+1,c
 23316  013576  0E00               	movlw	0
 23317  013578  6E5A               	movwf	?_atan+2,c
 23318                           
 23319                           ; BSR set to: 0
 23320  01357A  0012               	return	
 23321  01357C                     i2l1301:
 23322                           
 23323                           ; BSR set to: 0
 23324                           
 23325                           ; BSR set to: 0
 23326  01357C  0E00               	movlw	0
 23327  01357E  6E2A               	movwf	i2___ftge@ff1,c
 23328  013580  0E80               	movlw	128
 23329  013582  6E2B               	movwf	i2___ftge@ff1+1,c
 23330  013584  0E3F               	movlw	63
 23331  013586  6E2C               	movwf	i2___ftge@ff1+2,c
 23332  013588  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 23333  01358C  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 23334  013590  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 23335  013594  EC4A  F0A7         	call	i2___ftge	;wreg free
 23336  013598  B0D8               	btfsc	status,0,c
 23337  01359A  D002               	goto	i2u1473_40
 23338  01359C  0E01               	movlw	1
 23339  01359E  D001               	goto	i2u1474_40
 23340  0135A0                     i2u1473_40:
 23341  0135A0  0E00               	movlw	0
 23342  0135A2                     i2u1474_40:
 23343  0135A2  0100               	movlb	0	; () banked
 23344  0135A4  6F66               	movwf	atan@recip& (0+255),b
 23345  0135A6  5166               	movf	atan@recip& (0+255),w,b
 23346  0135A8  B4D8               	btfsc	status,2,c
 23347  0135AA  D014               	goto	i2l1303
 23348                           
 23349                           ; BSR set to: 0
 23350  0135AC  0E00               	movlw	0
 23351  0135AE  6E15               	movwf	i2___ftdiv@f1,c
 23352  0135B0  0E80               	movlw	128
 23353  0135B2  6E16               	movwf	i2___ftdiv@f1+1,c
 23354  0135B4  0E3F               	movlw	63
 23355  0135B6  6E17               	movwf	i2___ftdiv@f1+2,c
 23356  0135B8  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 23357  0135BC  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 23358  0135C0  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 23359  0135C4  EC43  F0A3         	call	i2___ftdiv	;wreg free
 23360  0135C8  C015  F06A         	movff	?i2___ftdiv,atan@val
 23361  0135CC  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 23362  0135D0  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 23363  0135D4                     i2l1303:
 23364  0135D4  C06A  F027         	movff	atan@val,i2___ftmul@f1
 23365  0135D8  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 23366  0135DC  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 23367  0135E0  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 23368  0135E4  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 23369  0135E8  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 23370  0135EC  EC55  F0A2         	call	i2___ftmul	;wreg free
 23371  0135F0  C027  F067         	movff	?i2___ftmul,atan@val_squared
 23372  0135F4  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 23373  0135F8  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 23374  0135FC  C067  F04C         	movff	atan@val_squared,eval_poly@x
 23375  013600  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 23376  013604  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 23377  013608  0EF0               	movlw	low atan@coeff_b
 23378  01360A  6E4F               	movwf	eval_poly@d,c
 23379  01360C  0EF4               	movlw	high atan@coeff_b
 23380  01360E  6E50               	movwf	eval_poly@d+1,c
 23381  013610  0E00               	movlw	0
 23382  013612  6E52               	movwf	eval_poly@n+1,c
 23383  013614  0E04               	movlw	4
 23384  013616  6E51               	movwf	eval_poly@n,c
 23385  013618  EC25  F0A4         	call	_eval_poly	;wreg free
 23386  01361C  C04C  F060         	movff	?_eval_poly,atan@y
 23387  013620  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 23388  013624  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 23389  013628  C067  F04C         	movff	atan@val_squared,eval_poly@x
 23390  01362C  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 23391  013630  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 23392  013634  0ECF               	movlw	low atan@coeff_a
 23393  013636  6E4F               	movwf	eval_poly@d,c
 23394  013638  0EF4               	movlw	high atan@coeff_a
 23395  01363A  6E50               	movwf	eval_poly@d+1,c
 23396  01363C  0E00               	movlw	0
 23397  01363E  6E52               	movwf	eval_poly@n+1,c
 23398  013640  0E05               	movlw	5
 23399  013642  6E51               	movwf	eval_poly@n,c
 23400  013644  EC25  F0A4         	call	_eval_poly	;wreg free
 23401  013648  C04C  F063         	movff	?_eval_poly,atan@x
 23402  01364C  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 23403  013650  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 23404  013654  C06A  F027         	movff	atan@val,i2___ftmul@f1
 23405  013658  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 23406  01365C  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 23407  013660  C060  F018         	movff	atan@y,i2___ftdiv@f2
 23408  013664  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 23409  013668  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 23410  01366C  C063  F015         	movff	atan@x,i2___ftdiv@f1
 23411  013670  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 23412  013674  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 23413  013678  EC43  F0A3         	call	i2___ftdiv	;wreg free
 23414  01367C  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23415  013680  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23416  013684  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23417  013688  EC55  F0A2         	call	i2___ftmul	;wreg free
 23418  01368C  C027  F06A         	movff	?i2___ftmul,atan@val
 23419  013690  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 23420  013694  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 23421  013698  0100               	movlb	0	; () banked
 23422  01369A  5166               	movf	atan@recip& (0+255),w,b
 23423  01369C  B4D8               	btfsc	status,2,c
 23424  01369E  D01C               	goto	i2l1304
 23425                           
 23426                           ; BSR set to: 0
 23427  0136A0  C06A  F024         	movff	atan@val,i2___ftneg@f1
 23428  0136A4  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 23429  0136A8  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 23430  0136AC  ECD7  F0AE         	call	i2___ftneg	;wreg free
 23431  0136B0  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23432  0136B4  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23433  0136B8  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23434  0136BC  0E10               	movlw	16
 23435  0136BE  6E43               	movwf	i2___ftadd@f2,c
 23436  0136C0  0EC9               	movlw	201
 23437  0136C2  6E44               	movwf	i2___ftadd@f2+1,c
 23438  0136C4  0E3F               	movlw	63
 23439  0136C6  6E45               	movwf	i2___ftadd@f2+2,c
 23440  0136C8  EC5B  F09C         	call	i2___ftadd	;wreg free
 23441  0136CC  C040  F06A         	movff	?i2___ftadd,atan@val
 23442  0136D0  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 23443  0136D4  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 23444  0136D8                     i2l1304:
 23445  0136D8  BE5A               	btfsc	atan@f+2,7,c
 23446  0136DA  D007               	goto	i2l1306
 23447  0136DC  C06A  F058         	movff	atan@val,?_atan
 23448  0136E0  C06B  F059         	movff	atan@val+1,?_atan+1
 23449  0136E4  C06C  F05A         	movff	atan@val+2,?_atan+2
 23450  0136E8  0012               	return	
 23451  0136EA                     i2l1306:
 23452  0136EA  C06A  F024         	movff	atan@val,i2___ftneg@f1
 23453  0136EE  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 23454  0136F2  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 23455  0136F6  ECD7  F0AE         	call	i2___ftneg	;wreg free
 23456  0136FA  C024  F058         	movff	?i2___ftneg,?_atan
 23457  0136FE  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 23458  013702  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 23459  013706  0012               	return	
 23460  013708                     __end_of_atan:
 23461                           	opt stack 0
 23462                           tosu	equ	0xFFF
 23463                           tosh	equ	0xFFE
 23464                           tosl	equ	0xFFD
 23465                           pclatu	equ	0xFFB
 23466                           pclath	equ	0xFFA
 23467                           tblptru	equ	0xFF8
 23468                           tblptrh	equ	0xFF7
 23469                           tblptrl	equ	0xFF6
 23470                           tablat	equ	0xFF5
 23471                           prodh	equ	0xFF4
 23472                           prodl	equ	0xFF3
 23473                           intcon	equ	0xFF2
 23474                           postinc0	equ	0xFEE
 23475                           fsr0h	equ	0xFEA
 23476                           fsr0l	equ	0xFE9
 23477                           wreg	equ	0xFE8
 23478                           indf1	equ	0xFE7
 23479                           postdec1	equ	0xFE5
 23480                           fsr1h	equ	0xFE2
 23481                           fsr1l	equ	0xFE1
 23482                           bsr	equ	0xFE0
 23483                           indf2	equ	0xFDF
 23484                           postinc2	equ	0xFDE
 23485                           postdec2	equ	0xFDD
 23486                           fsr2h	equ	0xFDA
 23487                           fsr2l	equ	0xFD9
 23488                           status	equ	0xFD8
 23489                           
 23490 ;; *************** function _fabs *****************
 23491 ;; Defined at:
 23492 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 23493 ;; Parameters:    Size  Location     Type
 23494 ;;  d               3   38[COMRAM] unsigned char 
 23495 ;; Auto vars:     Size  Location     Type
 23496 ;;		None
 23497 ;; Return value:  Size  Location     Type
 23498 ;;                  3   38[COMRAM] unsigned char 
 23499 ;; Registers used:
 23500 ;;		wreg, status,2, status,0, cstack
 23501 ;; Tracked objects:
 23502 ;;		On entry : 0/0
 23503 ;;		On exit  : 0/0
 23504 ;;		Unchanged: 0/0
 23505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23506 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23510 ;;Total ram usage:        3 bytes
 23511 ;; Hardware stack levels used:    1
 23512 ;; Hardware stack levels required when called:    1
 23513 ;; This function calls:
 23514 ;;		i2___ftneg
 23515 ;; This function is called by:
 23516 ;;		_asin
 23517 ;;		_atan
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text94
 23522  015C3C                     __ptext94:
 23523                           	opt stack 0
 23524  015C3C                     _fabs:
 23525                           	opt stack 11
 23526                           
 23527                           ;incstack = 0
 23528  015C3C  AE29               	btfss	fabs@d+2,7,c
 23529  015C3E  D00F               	goto	i2l1398
 23530  015C40  C027  F024         	movff	fabs@d,i2___ftneg@f1
 23531  015C44  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 23532  015C48  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 23533  015C4C  ECD7  F0AE         	call	i2___ftneg	;wreg free
 23534  015C50  C024  F027         	movff	?i2___ftneg,?_fabs
 23535  015C54  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 23536  015C58  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 23537  015C5C  0012               	return	
 23538  015C5E                     i2l1398:
 23539  015C5E  C027  F027         	movff	fabs@d,?_fabs
 23540  015C62  C028  F028         	movff	fabs@d+1,?_fabs+1
 23541  015C66  C029  F029         	movff	fabs@d+2,?_fabs+2
 23542  015C6A  0012               	return		;funcret
 23543  015C6C                     __end_of_fabs:
 23544                           	opt stack 0
 23545                           tosu	equ	0xFFF
 23546                           tosh	equ	0xFFE
 23547                           tosl	equ	0xFFD
 23548                           pclatu	equ	0xFFB
 23549                           pclath	equ	0xFFA
 23550                           tblptru	equ	0xFF8
 23551                           tblptrh	equ	0xFF7
 23552                           tblptrl	equ	0xFF6
 23553                           tablat	equ	0xFF5
 23554                           prodh	equ	0xFF4
 23555                           prodl	equ	0xFF3
 23556                           intcon	equ	0xFF2
 23557                           postinc0	equ	0xFEE
 23558                           fsr0h	equ	0xFEA
 23559                           fsr0l	equ	0xFE9
 23560                           wreg	equ	0xFE8
 23561                           indf1	equ	0xFE7
 23562                           postdec1	equ	0xFE5
 23563                           fsr1h	equ	0xFE2
 23564                           fsr1l	equ	0xFE1
 23565                           bsr	equ	0xFE0
 23566                           indf2	equ	0xFDF
 23567                           postinc2	equ	0xFDE
 23568                           postdec2	equ	0xFDD
 23569                           fsr2h	equ	0xFDA
 23570                           fsr2l	equ	0xFD9
 23571                           status	equ	0xFD8
 23572                           
 23573 ;; *************** function _currentMeasuredToPeak *****************
 23574 ;; Defined at:
 23575 ;;		line 103 in file "main.c"
 23576 ;; Parameters:    Size  Location     Type
 23577 ;;  Measured        3   19[BANK0 ] unsigned char 
 23578 ;;  Angle           3   22[BANK0 ] unsigned char 
 23579 ;; Auto vars:     Size  Location     Type
 23580 ;;  Peak            3   25[BANK0 ] unsigned char 
 23581 ;; Return value:  Size  Location     Type
 23582 ;;                  3   19[BANK0 ] unsigned char 
 23583 ;; Registers used:
 23584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23585 ;; Tracked objects:
 23586 ;;		On entry : 0/0
 23587 ;;		On exit  : 0/0
 23588 ;;		Unchanged: 0/0
 23589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23590 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23591 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23593 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23594 ;;Total ram usage:        9 bytes
 23595 ;; Hardware stack levels used:    1
 23596 ;; Hardware stack levels required when called:    4
 23597 ;; This function calls:
 23598 ;;		_sin
 23599 ;;		i2___ftdiv
 23600 ;; This function is called by:
 23601 ;;		_ADC_postProcessingCallback
 23602 ;; This function uses a non-reentrant model
 23603 ;;
 23604                           
 23605                           	psect	text95
 23606  015604                     __ptext95:
 23607                           	opt stack 0
 23608  015604                     _currentMeasuredToPeak:
 23609                           	opt stack 11
 23610                           
 23611                           ;main.c: 106: double Peak = 0.0;
 23612                           
 23613                           ;incstack = 0
 23614  015604  0E00               	movlw	0
 23615  015606  0100               	movlb	0	; () banked
 23616  015608  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 23617  01560A  0E00               	movlw	0
 23618  01560C  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 23619  01560E  0E00               	movlw	0
 23620  015610  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;main.c: 109: Peak = sin(Angle);
 23624  015612  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 23625  015616  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 23626  01561A  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 23627  01561E  EC91  F098         	call	_sin	;wreg free
 23628  015622  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 23629  015626  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 23630  01562A  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 23631                           
 23632                           ;main.c: 110: Peak = Measured / Peak;
 23633  01562E  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 23634  015632  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 23635  015636  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 23636  01563A  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 23637  01563E  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 23638  015642  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 23639  015646  EC43  F0A3         	call	i2___ftdiv	;wreg free
 23640  01564A  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 23641  01564E  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 23642  015652  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 23643                           
 23644                           ;main.c: 111: return Peak;
 23645  015656  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 23646  01565A  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 23647  01565E  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 23648  015662  0012               	return	
 23649  015664                     __end_of_currentMeasuredToPeak:
 23650                           	opt stack 0
 23651                           tosu	equ	0xFFF
 23652                           tosh	equ	0xFFE
 23653                           tosl	equ	0xFFD
 23654                           pclatu	equ	0xFFB
 23655                           pclath	equ	0xFFA
 23656                           tblptru	equ	0xFF8
 23657                           tblptrh	equ	0xFF7
 23658                           tblptrl	equ	0xFF6
 23659                           tablat	equ	0xFF5
 23660                           prodh	equ	0xFF4
 23661                           prodl	equ	0xFF3
 23662                           intcon	equ	0xFF2
 23663                           postinc0	equ	0xFEE
 23664                           fsr0h	equ	0xFEA
 23665                           fsr0l	equ	0xFE9
 23666                           wreg	equ	0xFE8
 23667                           indf1	equ	0xFE7
 23668                           postdec1	equ	0xFE5
 23669                           fsr1h	equ	0xFE2
 23670                           fsr1l	equ	0xFE1
 23671                           bsr	equ	0xFE0
 23672                           indf2	equ	0xFDF
 23673                           postinc2	equ	0xFDE
 23674                           postdec2	equ	0xFDD
 23675                           fsr2h	equ	0xFDA
 23676                           fsr2l	equ	0xFD9
 23677                           status	equ	0xFD8
 23678                           
 23679 ;; *************** function _sin *****************
 23680 ;; Defined at:
 23681 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;  f               3    6[BANK0 ] unsigned char 
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;  x2              3   15[BANK0 ] unsigned char 
 23686 ;;  y               3    9[BANK0 ] unsigned char 
 23687 ;;  sgn             1   18[BANK0 ] unsigned char 
 23688 ;; Return value:  Size  Location     Type
 23689 ;;                  3    6[BANK0 ] unsigned char 
 23690 ;; Registers used:
 23691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23692 ;; Tracked objects:
 23693 ;;		On entry : 0/0
 23694 ;;		On exit  : 0/0
 23695 ;;		Unchanged: 0/0
 23696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23697 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23698 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23700 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23701 ;;Total ram usage:       13 bytes
 23702 ;; Hardware stack levels used:    1
 23703 ;; Hardware stack levels required when called:    3
 23704 ;; This function calls:
 23705 ;;		_eval_poly
 23706 ;;		_floor
 23707 ;;		i2___ftadd
 23708 ;;		i2___ftdiv
 23709 ;;		i2___ftge
 23710 ;;		i2___ftmul
 23711 ;;		i2___ftneg
 23712 ;;		i2___ftsub
 23713 ;; This function is called by:
 23714 ;;		_peakToRMS
 23715 ;;		_currentMeasuredToPeak
 23716 ;; This function uses a non-reentrant model
 23717 ;;
 23718                           
 23719                           	psect	text96
 23720  013122                     __ptext96:
 23721                           	opt stack 0
 23722  013122                     _sin:
 23723                           	opt stack 11
 23724                           
 23725                           ;incstack = 0
 23726  013122  0E00               	movlw	0
 23727  013124  0100               	movlb	0	; () banked
 23728  013126  6F72               	movwf	sin@sgn& (0+255),b
 23729                           
 23730                           ; BSR set to: 0
 23731  013128  AF68               	btfss	(sin@f+2)& (0+255),7,b
 23732  01312A  D011               	goto	i2l1681
 23733                           
 23734                           ; BSR set to: 0
 23735  01312C  C066  F024         	movff	sin@f,i2___ftneg@f1
 23736  013130  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 23737  013134  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 23738  013138  ECD7  F0AE         	call	i2___ftneg	;wreg free
 23739  01313C  C024  F066         	movff	?i2___ftneg,sin@f
 23740  013140  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 23741  013144  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 23742  013148  0E01               	movlw	1
 23743  01314A  0100               	movlb	0	; () banked
 23744  01314C  6F72               	movwf	sin@sgn& (0+255),b
 23745  01314E                     i2l1681:
 23746                           
 23747                           ; BSR set to: 0
 23748                           
 23749                           ; BSR set to: 0
 23750  01314E  C066  F027         	movff	sin@f,i2___ftmul@f1
 23751  013152  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23752  013156  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23753  01315A  0EFA               	movlw	250
 23754  01315C  6E2A               	movwf	i2___ftmul@f2,c
 23755  01315E  0E22               	movlw	34
 23756  013160  6E2B               	movwf	i2___ftmul@f2+1,c
 23757  013162  0E3E               	movlw	62
 23758  013164  6E2C               	movwf	i2___ftmul@f2+2,c
 23759  013166  EC55  F0A2         	call	i2___ftmul	;wreg free
 23760  01316A  C027  F066         	movff	?i2___ftmul,sin@f
 23761  01316E  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 23762  013172  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 23763  013176  C066  F060         	movff	sin@f,i2___ftsub@f1
 23764  01317A  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 23765  01317E  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 23766  013182  C066  F056         	movff	sin@f,floor@x
 23767  013186  C067  F057         	movff	sin@f+1,floor@x+1
 23768  01318A  C068  F058         	movff	sin@f+2,floor@x+2
 23769  01318E  ECB6  F0A3         	call	_floor	;wreg free
 23770  013192  C056  F063         	movff	?_floor,i2___ftsub@f2
 23771  013196  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 23772  01319A  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 23773  01319E  EC5C  F0AD         	call	i2___ftsub	;wreg free
 23774  0131A2  C060  F066         	movff	?i2___ftsub,sin@f
 23775  0131A6  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 23776  0131AA  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 23777  0131AE  C066  F027         	movff	sin@f,i2___ftmul@f1
 23778  0131B2  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23779  0131B6  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23780  0131BA  0E00               	movlw	0
 23781  0131BC  6E2A               	movwf	i2___ftmul@f2,c
 23782  0131BE  0E80               	movlw	128
 23783  0131C0  6E2B               	movwf	i2___ftmul@f2+1,c
 23784  0131C2  0E40               	movlw	64
 23785  0131C4  6E2C               	movwf	i2___ftmul@f2+2,c
 23786  0131C6  EC55  F0A2         	call	i2___ftmul	;wreg free
 23787  0131CA  C027  F066         	movff	?i2___ftmul,sin@f
 23788  0131CE  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 23789  0131D2  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 23790  0131D6  0E00               	movlw	0
 23791  0131D8  6E2A               	movwf	i2___ftge@ff1,c
 23792  0131DA  0E00               	movlw	0
 23793  0131DC  6E2B               	movwf	i2___ftge@ff1+1,c
 23794  0131DE  0E40               	movlw	64
 23795  0131E0  6E2C               	movwf	i2___ftge@ff1+2,c
 23796  0131E2  C066  F02D         	movff	sin@f,i2___ftge@ff2
 23797  0131E6  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 23798  0131EA  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 23799  0131EE  EC4A  F0A7         	call	i2___ftge	;wreg free
 23800  0131F2  B0D8               	btfsc	status,0,c
 23801  0131F4  D01D               	goto	i2l1682
 23802  0131F6  C066  F060         	movff	sin@f,i2___ftsub@f1
 23803  0131FA  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 23804  0131FE  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 23805  013202  0E00               	movlw	0
 23806  013204  0100               	movlb	0	; () banked
 23807  013206  6F63               	movwf	i2___ftsub@f2& (0+255),b
 23808  013208  0E00               	movlw	0
 23809  01320A  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 23810  01320C  0E40               	movlw	64
 23811  01320E  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 23812  013210  EC5C  F0AD         	call	i2___ftsub	;wreg free
 23813  013214  C060  F066         	movff	?i2___ftsub,sin@f
 23814  013218  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 23815  01321C  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 23816  013220  0100               	movlb	0	; () banked
 23817  013222  5172               	movf	sin@sgn& (0+255),w,b
 23818  013224  A4D8               	btfss	status,2,c
 23819  013226  D002               	goto	i2u1497_40
 23820  013228  0E01               	movlw	1
 23821  01322A  D001               	goto	i2u1498_40
 23822  01322C                     i2u1497_40:
 23823  01322C  0E00               	movlw	0
 23824  01322E                     i2u1498_40:
 23825  01322E  6F72               	movwf	sin@sgn& (0+255),b
 23826  013230                     i2l1682:
 23827                           
 23828                           ; BSR set to: 0
 23829  013230  0E00               	movlw	0
 23830  013232  6E2A               	movwf	i2___ftge@ff1,c
 23831  013234  0E80               	movlw	128
 23832  013236  6E2B               	movwf	i2___ftge@ff1+1,c
 23833  013238  0E3F               	movlw	63
 23834  01323A  6E2C               	movwf	i2___ftge@ff1+2,c
 23835  01323C  C066  F02D         	movff	sin@f,i2___ftge@ff2
 23836  013240  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 23837  013244  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 23838  013248  EC4A  F0A7         	call	i2___ftge	;wreg free
 23839  01324C  B0D8               	btfsc	status,0,c
 23840  01324E  D01C               	goto	i2l1683
 23841  013250  C066  F024         	movff	sin@f,i2___ftneg@f1
 23842  013254  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 23843  013258  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 23844  01325C  ECD7  F0AE         	call	i2___ftneg	;wreg free
 23845  013260  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23846  013264  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23847  013268  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23848  01326C  0E00               	movlw	0
 23849  01326E  6E43               	movwf	i2___ftadd@f2,c
 23850  013270  0E00               	movlw	0
 23851  013272  6E44               	movwf	i2___ftadd@f2+1,c
 23852  013274  0E40               	movlw	64
 23853  013276  6E45               	movwf	i2___ftadd@f2+2,c
 23854  013278  EC5B  F09C         	call	i2___ftadd	;wreg free
 23855  01327C  C040  F066         	movff	?i2___ftadd,sin@f
 23856  013280  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 23857  013284  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 23858  013288                     i2l1683:
 23859  013288  C066  F027         	movff	sin@f,i2___ftmul@f1
 23860  01328C  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23861  013290  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23862  013294  C066  F02A         	movff	sin@f,i2___ftmul@f2
 23863  013298  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 23864  01329C  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 23865  0132A0  EC55  F0A2         	call	i2___ftmul	;wreg free
 23866  0132A4  C027  F06F         	movff	?i2___ftmul,sin@x2
 23867  0132A8  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 23868  0132AC  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 23869  0132B0  C06F  F04C         	movff	sin@x2,eval_poly@x
 23870  0132B4  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 23871  0132B8  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 23872  0132BC  0EFF               	movlw	low sin@coeff_b
 23873  0132BE  6E4F               	movwf	eval_poly@d,c
 23874  0132C0  0EF4               	movlw	high sin@coeff_b
 23875  0132C2  6E50               	movwf	eval_poly@d+1,c
 23876  0132C4  0E00               	movlw	0
 23877  0132C6  6E52               	movwf	eval_poly@n+1,c
 23878  0132C8  0E03               	movlw	3
 23879  0132CA  6E51               	movwf	eval_poly@n,c
 23880  0132CC  EC25  F0A4         	call	_eval_poly	;wreg free
 23881  0132D0  C04C  F069         	movff	?_eval_poly,sin@y
 23882  0132D4  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 23883  0132D8  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 23884  0132DC  C069  F018         	movff	sin@y,i2___ftdiv@f2
 23885  0132E0  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 23886  0132E4  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 23887  0132E8  0E00               	movlw	0
 23888  0132EA  6E52               	movwf	eval_poly@n+1,c
 23889  0132EC  0E04               	movlw	4
 23890  0132EE  6E51               	movwf	eval_poly@n,c
 23891  0132F0  0EE1               	movlw	low sin@coeff_a
 23892  0132F2  6E4F               	movwf	eval_poly@d,c
 23893  0132F4  0EF4               	movlw	high sin@coeff_a
 23894  0132F6  6E50               	movwf	eval_poly@d+1,c
 23895  0132F8  C06F  F04C         	movff	sin@x2,eval_poly@x
 23896  0132FC  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 23897  013300  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 23898  013304  EC25  F0A4         	call	_eval_poly	;wreg free
 23899  013308  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 23900  01330C  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 23901  013310  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 23902  013314  EC43  F0A3         	call	i2___ftdiv	;wreg free
 23903  013318  C015  F06C         	movff	?i2___ftdiv,_sin$3319
 23904  01331C  C016  F06D         	movff	?i2___ftdiv+1,_sin$3319+1
 23905  013320  C017  F06E         	movff	?i2___ftdiv+2,_sin$3319+2
 23906  013324  C066  F027         	movff	sin@f,i2___ftmul@f1
 23907  013328  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23908  01332C  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23909  013330  C06C  F02A         	movff	_sin$3319,i2___ftmul@f2
 23910  013334  C06D  F02B         	movff	_sin$3319+1,i2___ftmul@f2+1
 23911  013338  C06E  F02C         	movff	_sin$3319+2,i2___ftmul@f2+2
 23912  01333C  EC55  F0A2         	call	i2___ftmul	;wreg free
 23913  013340  C027  F066         	movff	?i2___ftmul,sin@f
 23914  013344  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 23915  013348  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 23916  01334C  0100               	movlb	0	; () banked
 23917  01334E  5172               	movf	sin@sgn& (0+255),w,b
 23918  013350  B4D8               	btfsc	status,2,c
 23919  013352  D00F               	goto	i2l1684
 23920                           
 23921                           ; BSR set to: 0
 23922  013354  C066  F024         	movff	sin@f,i2___ftneg@f1
 23923  013358  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 23924  01335C  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 23925  013360  ECD7  F0AE         	call	i2___ftneg	;wreg free
 23926  013364  C024  F066         	movff	?i2___ftneg,?_sin
 23927  013368  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 23928  01336C  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 23929  013370  0012               	return	
 23930  013372                     i2l1684:
 23931                           
 23932                           ; BSR set to: 0
 23933  013372  C066  F066         	movff	sin@f,?_sin
 23934  013376  C067  F067         	movff	sin@f+1,?_sin+1
 23935  01337A  C068  F068         	movff	sin@f+2,?_sin+2
 23936  01337E  0012               	return		;funcret
 23937  013380                     __end_of_sin:
 23938                           	opt stack 0
 23939                           tosu	equ	0xFFF
 23940                           tosh	equ	0xFFE
 23941                           tosl	equ	0xFFD
 23942                           pclatu	equ	0xFFB
 23943                           pclath	equ	0xFFA
 23944                           tblptru	equ	0xFF8
 23945                           tblptrh	equ	0xFF7
 23946                           tblptrl	equ	0xFF6
 23947                           tablat	equ	0xFF5
 23948                           prodh	equ	0xFF4
 23949                           prodl	equ	0xFF3
 23950                           intcon	equ	0xFF2
 23951                           postinc0	equ	0xFEE
 23952                           fsr0h	equ	0xFEA
 23953                           fsr0l	equ	0xFE9
 23954                           wreg	equ	0xFE8
 23955                           indf1	equ	0xFE7
 23956                           postdec1	equ	0xFE5
 23957                           fsr1h	equ	0xFE2
 23958                           fsr1l	equ	0xFE1
 23959                           bsr	equ	0xFE0
 23960                           indf2	equ	0xFDF
 23961                           postinc2	equ	0xFDE
 23962                           postdec2	equ	0xFDD
 23963                           fsr2h	equ	0xFDA
 23964                           fsr2l	equ	0xFD9
 23965                           status	equ	0xFD8
 23966                           
 23967 ;; *************** function i2___ftsub *****************
 23968 ;; Defined at:
 23969 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 23970 ;; Parameters:    Size  Location     Type
 23971 ;;  f1              3    0[BANK0 ] float 
 23972 ;;  f2              3    3[BANK0 ] float 
 23973 ;; Auto vars:     Size  Location     Type
 23974 ;;		None
 23975 ;; Return value:  Size  Location     Type
 23976 ;;                  3    0[BANK0 ] float 
 23977 ;; Registers used:
 23978 ;;		wreg, status,2, status,0, cstack
 23979 ;; Tracked objects:
 23980 ;;		On entry : 0/0
 23981 ;;		On exit  : 0/0
 23982 ;;		Unchanged: 0/0
 23983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23984 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23987 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23988 ;;Total ram usage:        6 bytes
 23989 ;; Hardware stack levels used:    1
 23990 ;; Hardware stack levels required when called:    2
 23991 ;; This function calls:
 23992 ;;		i2___ftadd
 23993 ;; This function is called by:
 23994 ;;		_sin
 23995 ;;		_sqrt
 23996 ;;		i2_printf
 23997 ;; This function uses a non-reentrant model
 23998 ;;
 23999                           
 24000                           	psect	text97
 24001  015AB8                     __ptext97:
 24002                           	opt stack 0
 24003  015AB8                     i2___ftsub:
 24004                           	opt stack 13
 24005                           
 24006                           ;incstack = 0
 24007  015AB8  0100               	movlb	0	; () banked
 24008  015ABA  5163               	movf	i2___ftsub@f2& (0+255),w,b
 24009  015ABC  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 24010  015ABE  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 24011  015AC0  B4D8               	btfsc	status,2,c
 24012  015AC2  D006               	goto	i2l1547
 24013                           
 24014                           ; BSR set to: 0
 24015  015AC4  0E00               	movlw	0
 24016  015AC6  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 24017  015AC8  0E00               	movlw	0
 24018  015ACA  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 24019  015ACC  0E80               	movlw	128
 24020  015ACE  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 24021  015AD0                     i2l1547:
 24022                           
 24023                           ; BSR set to: 0
 24024                           
 24025                           ; BSR set to: 0
 24026  015AD0  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 24027  015AD4  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 24028  015AD8  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 24029  015ADC  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 24030  015AE0  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 24031  015AE4  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 24032  015AE8  EC5B  F09C         	call	i2___ftadd	;wreg free
 24033  015AEC  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 24034  015AF0  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 24035  015AF4  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 24036  015AF8  0012               	return	
 24037  015AFA                     __end_ofi2___ftsub:
 24038                           	opt stack 0
 24039                           tosu	equ	0xFFF
 24040                           tosh	equ	0xFFE
 24041                           tosl	equ	0xFFD
 24042                           pclatu	equ	0xFFB
 24043                           pclath	equ	0xFFA
 24044                           tblptru	equ	0xFF8
 24045                           tblptrh	equ	0xFF7
 24046                           tblptrl	equ	0xFF6
 24047                           tablat	equ	0xFF5
 24048                           prodh	equ	0xFF4
 24049                           prodl	equ	0xFF3
 24050                           intcon	equ	0xFF2
 24051                           postinc0	equ	0xFEE
 24052                           fsr0h	equ	0xFEA
 24053                           fsr0l	equ	0xFE9
 24054                           wreg	equ	0xFE8
 24055                           indf1	equ	0xFE7
 24056                           postdec1	equ	0xFE5
 24057                           fsr1h	equ	0xFE2
 24058                           fsr1l	equ	0xFE1
 24059                           bsr	equ	0xFE0
 24060                           indf2	equ	0xFDF
 24061                           postinc2	equ	0xFDE
 24062                           postdec2	equ	0xFDD
 24063                           fsr2h	equ	0xFDA
 24064                           fsr2l	equ	0xFD9
 24065                           status	equ	0xFD8
 24066                           
 24067 ;; *************** function i2___ftneg *****************
 24068 ;; Defined at:
 24069 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 24070 ;; Parameters:    Size  Location     Type
 24071 ;;  f1              3   35[COMRAM] float 
 24072 ;; Auto vars:     Size  Location     Type
 24073 ;;		None
 24074 ;; Return value:  Size  Location     Type
 24075 ;;                  3   35[COMRAM] float 
 24076 ;; Registers used:
 24077 ;;		wreg, status,2, status,0
 24078 ;; Tracked objects:
 24079 ;;		On entry : 0/0
 24080 ;;		On exit  : 0/0
 24081 ;;		Unchanged: 0/0
 24082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24083 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24087 ;;Total ram usage:        3 bytes
 24088 ;; Hardware stack levels used:    1
 24089 ;; This function calls:
 24090 ;;		Nothing
 24091 ;; This function is called by:
 24092 ;;		_peakToRMS
 24093 ;;		_ADC_postProcessingCallback
 24094 ;;		_acos
 24095 ;;		_asin
 24096 ;;		_atan
 24097 ;;		_fabs
 24098 ;;		_sin
 24099 ;;		i2_printf
 24100 ;; This function uses a non-reentrant model
 24101 ;;
 24102                           
 24103                           	psect	text98
 24104  015DAE                     __ptext98:
 24105                           	opt stack 0
 24106  015DAE                     i2___ftneg:
 24107                           	opt stack 15
 24108                           
 24109                           ;incstack = 0
 24110  015DAE  5024               	movf	i2___ftneg@f1,w,c
 24111  015DB0  1025               	iorwf	i2___ftneg@f1+1,w,c
 24112  015DB2  1026               	iorwf	i2___ftneg@f1+2,w,c
 24113  015DB4  B4D8               	btfsc	status,2,c
 24114  015DB6  D006               	goto	i2l1541
 24115  015DB8  0E00               	movlw	0
 24116  015DBA  1A24               	xorwf	i2___ftneg@f1,f,c
 24117  015DBC  0E00               	movlw	0
 24118  015DBE  1A25               	xorwf	i2___ftneg@f1+1,f,c
 24119  015DC0  0E80               	movlw	128
 24120  015DC2  1A26               	xorwf	i2___ftneg@f1+2,f,c
 24121  015DC4                     i2l1541:
 24122  015DC4  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 24123  015DC8  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 24124  015DCC  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 24125  015DD0  0012               	return		;funcret
 24126  015DD2                     __end_ofi2___ftneg:
 24127                           	opt stack 0
 24128                           tosu	equ	0xFFF
 24129                           tosh	equ	0xFFE
 24130                           tosl	equ	0xFFD
 24131                           pclatu	equ	0xFFB
 24132                           pclath	equ	0xFFA
 24133                           tblptru	equ	0xFF8
 24134                           tblptrh	equ	0xFF7
 24135                           tblptrl	equ	0xFF6
 24136                           tablat	equ	0xFF5
 24137                           prodh	equ	0xFF4
 24138                           prodl	equ	0xFF3
 24139                           intcon	equ	0xFF2
 24140                           postinc0	equ	0xFEE
 24141                           fsr0h	equ	0xFEA
 24142                           fsr0l	equ	0xFE9
 24143                           wreg	equ	0xFE8
 24144                           indf1	equ	0xFE7
 24145                           postdec1	equ	0xFE5
 24146                           fsr1h	equ	0xFE2
 24147                           fsr1l	equ	0xFE1
 24148                           bsr	equ	0xFE0
 24149                           indf2	equ	0xFDF
 24150                           postinc2	equ	0xFDE
 24151                           postdec2	equ	0xFDD
 24152                           fsr2h	equ	0xFDA
 24153                           fsr2l	equ	0xFD9
 24154                           status	equ	0xFD8
 24155                           
 24156 ;; *************** function i2___ftdiv *****************
 24157 ;; Defined at:
 24158 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;  f1              3   20[COMRAM] float 
 24161 ;;  f2              3   23[COMRAM] float 
 24162 ;; Auto vars:     Size  Location     Type
 24163 ;;  __ftdiv         3   31[COMRAM] float 
 24164 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 24165 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 24166 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 24167 ;; Return value:  Size  Location     Type
 24168 ;;                  3   20[COMRAM] float 
 24169 ;; Registers used:
 24170 ;;		wreg, status,2, status,0, cstack
 24171 ;; Tracked objects:
 24172 ;;		On entry : 0/0
 24173 ;;		On exit  : 0/0
 24174 ;;		Unchanged: 0/0
 24175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24177 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24178 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24179 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24180 ;;Total ram usage:       15 bytes
 24181 ;; Hardware stack levels used:    1
 24182 ;; Hardware stack levels required when called:    1
 24183 ;; This function calls:
 24184 ;;		i2___ftpack
 24185 ;; This function is called by:
 24186 ;;		_peakToRMS
 24187 ;;		_currentMeasuredToPeak
 24188 ;;		_ADC_postProcessingCallback
 24189 ;;		_asin
 24190 ;;		_atan
 24191 ;;		_sin
 24192 ;; This function uses a non-reentrant model
 24193 ;;
 24194                           
 24195                           	psect	text99
 24196  014686                     __ptext99:
 24197                           	opt stack 0
 24198  014686                     i2___ftdiv:
 24199                           	opt stack 14
 24200                           
 24201                           ;incstack = 0
 24202  014686  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 24203  01468A  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 24204  01468C  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 24205  01468E  3416               	rlcf	i2___ftdiv@f1+1,w,c
 24206  014690  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 24207  014692  E301               	bnc	u1459_41
 24208  014694  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 24209  014696                     u1459_41:
 24210  014696  501B               	movf	??i2___ftdiv,w,c
 24211  014698  6E1F               	movwf	i2___ftdiv@exp,c
 24212  01469A  501F               	movf	i2___ftdiv@exp,w,c
 24213  01469C  A4D8               	btfss	status,2,c
 24214  01469E  D007               	goto	i2l1498
 24215  0146A0  0E00               	movlw	0
 24216  0146A2  6E15               	movwf	?i2___ftdiv,c
 24217  0146A4  0E00               	movlw	0
 24218  0146A6  6E16               	movwf	?i2___ftdiv+1,c
 24219  0146A8  0E00               	movlw	0
 24220  0146AA  6E17               	movwf	?i2___ftdiv+2,c
 24221  0146AC  0012               	return	
 24222  0146AE                     i2l1498:
 24223  0146AE  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 24224  0146B2  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 24225  0146B4  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 24226  0146B6  3419               	rlcf	i2___ftdiv@f2+1,w,c
 24227  0146B8  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 24228  0146BA  E301               	bnc	u1461_41
 24229  0146BC  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 24230  0146BE                     u1461_41:
 24231  0146BE  501B               	movf	??i2___ftdiv,w,c
 24232  0146C0  6E23               	movwf	i2___ftdiv@sign,c
 24233  0146C2  5023               	movf	i2___ftdiv@sign,w,c
 24234  0146C4  A4D8               	btfss	status,2,c
 24235  0146C6  D007               	goto	i2l1500
 24236  0146C8  0E00               	movlw	0
 24237  0146CA  6E15               	movwf	?i2___ftdiv,c
 24238  0146CC  0E00               	movlw	0
 24239  0146CE  6E16               	movwf	?i2___ftdiv+1,c
 24240  0146D0  0E00               	movlw	0
 24241  0146D2  6E17               	movwf	?i2___ftdiv+2,c
 24242  0146D4  0012               	return	
 24243  0146D6                     i2l1500:
 24244  0146D6  0E00               	movlw	0
 24245  0146D8  6E20               	movwf	i2___ftdiv@f3,c
 24246  0146DA  0E00               	movlw	0
 24247  0146DC  6E21               	movwf	i2___ftdiv@f3+1,c
 24248  0146DE  0E00               	movlw	0
 24249  0146E0  6E22               	movwf	i2___ftdiv@f3+2,c
 24250  0146E2  5023               	movf	i2___ftdiv@sign,w,c
 24251  0146E4  0F89               	addlw	137
 24252  0146E6  5E1F               	subwf	i2___ftdiv@exp,f,c
 24253  0146E8  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 24254  0146EC  501A               	movf	i2___ftdiv@f2+2,w,c
 24255  0146EE  1A23               	xorwf	i2___ftdiv@sign,f,c
 24256  0146F0  0E80               	movlw	128
 24257  0146F2  1623               	andwf	i2___ftdiv@sign,f,c
 24258  0146F4  8E16               	bsf	i2___ftdiv@f1+1,7,c
 24259  0146F6  0EFF               	movlw	255
 24260  0146F8  1615               	andwf	i2___ftdiv@f1,f,c
 24261  0146FA  0EFF               	movlw	255
 24262  0146FC  1616               	andwf	i2___ftdiv@f1+1,f,c
 24263  0146FE  0E00               	movlw	0
 24264  014700  1617               	andwf	i2___ftdiv@f1+2,f,c
 24265  014702  8E19               	bsf	i2___ftdiv@f2+1,7,c
 24266  014704  0EFF               	movlw	255
 24267  014706  1618               	andwf	i2___ftdiv@f2,f,c
 24268  014708  0EFF               	movlw	255
 24269  01470A  1619               	andwf	i2___ftdiv@f2+1,f,c
 24270  01470C  0E00               	movlw	0
 24271  01470E  161A               	andwf	i2___ftdiv@f2+2,f,c
 24272  014710  0E18               	movlw	24
 24273  014712  6E1E               	movwf	i2___ftdiv@cntr,c
 24274  014714  90D8               	bcf	status,0,c
 24275  014716  3620               	rlcf	i2___ftdiv@f3,f,c
 24276  014718  3621               	rlcf	i2___ftdiv@f3+1,f,c
 24277  01471A  3622               	rlcf	i2___ftdiv@f3+2,f,c
 24278  01471C  5018               	movf	i2___ftdiv@f2,w,c
 24279  01471E  5C15               	subwf	i2___ftdiv@f1,w,c
 24280  014720  5019               	movf	i2___ftdiv@f2+1,w,c
 24281  014722  5816               	subwfb	i2___ftdiv@f1+1,w,c
 24282  014724  501A               	movf	i2___ftdiv@f2+2,w,c
 24283  014726  5817               	subwfb	i2___ftdiv@f1+2,w,c
 24284  014728  A0D8               	btfss	status,0,c
 24285  01472A  D007               	goto	i2l1502
 24286  01472C  5018               	movf	i2___ftdiv@f2,w,c
 24287  01472E  5E15               	subwf	i2___ftdiv@f1,f,c
 24288  014730  5019               	movf	i2___ftdiv@f2+1,w,c
 24289  014732  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 24290  014734  501A               	movf	i2___ftdiv@f2+2,w,c
 24291  014736  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 24292  014738  8020               	bsf	i2___ftdiv@f3,0,c
 24293  01473A                     i2l1502:
 24294  01473A  90D8               	bcf	status,0,c
 24295  01473C  3615               	rlcf	i2___ftdiv@f1,f,c
 24296  01473E  3616               	rlcf	i2___ftdiv@f1+1,f,c
 24297  014740  3617               	rlcf	i2___ftdiv@f1+2,f,c
 24298  014742  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 24299  014744  D7E7               	goto	i2l1501
 24300  014746  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 24301  01474A  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 24302  01474E  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 24303  014752  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 24304  014756  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 24305  01475A  ECBC  F0A5         	call	i2___ftpack	;wreg free
 24306  01475E  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 24307  014762  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 24308  014766  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 24309  01476A  0012               	return	
 24310  01476C                     __end_ofi2___ftdiv:
 24311                           	opt stack 0
 24312                           tosu	equ	0xFFF
 24313                           tosh	equ	0xFFE
 24314                           tosl	equ	0xFFD
 24315                           pclatu	equ	0xFFB
 24316                           pclath	equ	0xFFA
 24317                           tblptru	equ	0xFF8
 24318                           tblptrh	equ	0xFF7
 24319                           tblptrl	equ	0xFF6
 24320                           tablat	equ	0xFF5
 24321                           prodh	equ	0xFF4
 24322                           prodl	equ	0xFF3
 24323                           intcon	equ	0xFF2
 24324                           postinc0	equ	0xFEE
 24325                           fsr0h	equ	0xFEA
 24326                           fsr0l	equ	0xFE9
 24327                           wreg	equ	0xFE8
 24328                           indf1	equ	0xFE7
 24329                           postdec1	equ	0xFE5
 24330                           fsr1h	equ	0xFE2
 24331                           fsr1l	equ	0xFE1
 24332                           bsr	equ	0xFE0
 24333                           indf2	equ	0xFDF
 24334                           postinc2	equ	0xFDE
 24335                           postdec2	equ	0xFDD
 24336                           fsr2h	equ	0xFDA
 24337                           fsr2l	equ	0xFD9
 24338                           status	equ	0xFD8
 24339                           
 24340 ;; *************** function _floor *****************
 24341 ;; Defined at:
 24342 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;  x               3   85[COMRAM] float 
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;  i               3   88[COMRAM] float 
 24347 ;;  expon           2   91[COMRAM] int 
 24348 ;; Return value:  Size  Location     Type
 24349 ;;                  3   85[COMRAM] int 
 24350 ;; Registers used:
 24351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24352 ;; Tracked objects:
 24353 ;;		On entry : 0/0
 24354 ;;		On exit  : 0/0
 24355 ;;		Unchanged: 0/0
 24356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24358 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24361 ;;Total ram usage:        8 bytes
 24362 ;; Hardware stack levels used:    1
 24363 ;; Hardware stack levels required when called:    2
 24364 ;; This function calls:
 24365 ;;		___altoft
 24366 ;;		_frexp
 24367 ;;		i2___ftadd
 24368 ;;		i2___ftge
 24369 ;;		i2___fttol
 24370 ;; This function is called by:
 24371 ;;		_sin
 24372 ;; This function uses a non-reentrant model
 24373 ;;
 24374                           
 24375                           	psect	text100
 24376  01476C                     __ptext100:
 24377                           	opt stack 0
 24378  01476C                     _floor:
 24379                           	opt stack 11
 24380                           
 24381                           ;incstack = 0
 24382  01476C  C056  F001         	movff	floor@x,frexp@value
 24383  014770  C057  F002         	movff	floor@x+1,frexp@value+1
 24384  014774  C058  F003         	movff	floor@x+2,frexp@value+2
 24385  014778  0E5C               	movlw	low floor@expon
 24386  01477A  6E04               	movwf	frexp@eptr,c
 24387  01477C  0E00               	movlw	high floor@expon
 24388  01477E  6E05               	movwf	frexp@eptr+1,c
 24389  014780  ECE0  F0A8         	call	_frexp	;wreg free
 24390  014784  AE5D               	btfss	floor@expon+1,7,c
 24391  014786  D010               	goto	i2l1886
 24392  014788  AE58               	btfss	floor@x+2,7,c
 24393  01478A  D007               	goto	i2l1887
 24394  01478C  0E00               	movlw	0
 24395  01478E  6E56               	movwf	?_floor,c
 24396  014790  0E80               	movlw	128
 24397  014792  6E57               	movwf	?_floor+1,c
 24398  014794  0EBF               	movlw	191
 24399  014796  6E58               	movwf	?_floor+2,c
 24400  014798  0012               	return	
 24401  01479A                     i2l1887:
 24402  01479A  0E00               	movlw	0
 24403  01479C  6E56               	movwf	?_floor,c
 24404  01479E  0E00               	movlw	0
 24405  0147A0  6E57               	movwf	?_floor+1,c
 24406  0147A2  0E00               	movlw	0
 24407  0147A4  6E58               	movwf	?_floor+2,c
 24408  0147A6  0012               	return	
 24409  0147A8                     i2l1886:
 24410  0147A8  505D               	movf	floor@expon+1,w,c
 24411  0147AA  E104               	bnz	i2u1493_40
 24412  0147AC  0E15               	movlw	21
 24413  0147AE  5C5C               	subwf	floor@expon,w,c
 24414  0147B0  A0D8               	btfss	status,0,c
 24415  0147B2  D007               	goto	i2l1889
 24416  0147B4                     i2u1493_40:
 24417  0147B4  C056  F056         	movff	floor@x,?_floor
 24418  0147B8  C057  F057         	movff	floor@x+1,?_floor+1
 24419  0147BC  C058  F058         	movff	floor@x+2,?_floor+2
 24420  0147C0  0012               	return	
 24421  0147C2                     i2l1889:
 24422  0147C2  C056  F03D         	movff	floor@x,i2___fttol@f1
 24423  0147C6  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 24424  0147CA  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 24425  0147CE  ECDB  F0A1         	call	i2___fttol	;wreg free
 24426  0147D2  C03D  F04C         	movff	?i2___fttol,___altoft@c
 24427  0147D6  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 24428  0147DA  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 24429  0147DE  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 24430  0147E2  EC1C  F0A9         	call	___altoft	;wreg free
 24431  0147E6  C04C  F059         	movff	?___altoft,floor@i
 24432  0147EA  C04D  F05A         	movff	?___altoft+1,floor@i+1
 24433  0147EE  C04E  F05B         	movff	?___altoft+2,floor@i+2
 24434  0147F2  C056  F02A         	movff	floor@x,i2___ftge@ff1
 24435  0147F6  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 24436  0147FA  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 24437  0147FE  C059  F02D         	movff	floor@i,i2___ftge@ff2
 24438  014802  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 24439  014806  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 24440  01480A  EC4A  F0A7         	call	i2___ftge	;wreg free
 24441  01480E  B0D8               	btfsc	status,0,c
 24442  014810  D015               	goto	i2l1890
 24443  014812  C059  F040         	movff	floor@i,i2___ftadd@f1
 24444  014816  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 24445  01481A  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 24446  01481E  0E00               	movlw	0
 24447  014820  6E43               	movwf	i2___ftadd@f2,c
 24448  014822  0E80               	movlw	128
 24449  014824  6E44               	movwf	i2___ftadd@f2+1,c
 24450  014826  0EBF               	movlw	191
 24451  014828  6E45               	movwf	i2___ftadd@f2+2,c
 24452  01482A  EC5B  F09C         	call	i2___ftadd	;wreg free
 24453  01482E  C040  F056         	movff	?i2___ftadd,?_floor
 24454  014832  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 24455  014836  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 24456  01483A  0012               	return	
 24457  01483C                     i2l1890:
 24458  01483C  C059  F056         	movff	floor@i,?_floor
 24459  014840  C05A  F057         	movff	floor@i+1,?_floor+1
 24460  014844  C05B  F058         	movff	floor@i+2,?_floor+2
 24461  014848  0012               	return		;funcret
 24462  01484A                     __end_of_floor:
 24463                           	opt stack 0
 24464                           tosu	equ	0xFFF
 24465                           tosh	equ	0xFFE
 24466                           tosl	equ	0xFFD
 24467                           pclatu	equ	0xFFB
 24468                           pclath	equ	0xFFA
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           postinc0	equ	0xFEE
 24477                           fsr0h	equ	0xFEA
 24478                           fsr0l	equ	0xFE9
 24479                           wreg	equ	0xFE8
 24480                           indf1	equ	0xFE7
 24481                           postdec1	equ	0xFE5
 24482                           fsr1h	equ	0xFE2
 24483                           fsr1l	equ	0xFE1
 24484                           bsr	equ	0xFE0
 24485                           indf2	equ	0xFDF
 24486                           postinc2	equ	0xFDE
 24487                           postdec2	equ	0xFDD
 24488                           fsr2h	equ	0xFDA
 24489                           fsr2l	equ	0xFD9
 24490                           status	equ	0xFD8
 24491                           
 24492 ;; *************** function i2___fttol *****************
 24493 ;; Defined at:
 24494 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 24495 ;; Parameters:    Size  Location     Type
 24496 ;;  f1              3   60[COMRAM] float 
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;  __fttol         4   70[COMRAM] unsigned long 
 24499 ;;  __fttol         1   74[COMRAM] unsigned char 
 24500 ;;  __fttol         1   69[COMRAM] unsigned char 
 24501 ;; Return value:  Size  Location     Type
 24502 ;;                  4   60[COMRAM] long 
 24503 ;; Registers used:
 24504 ;;		wreg, status,2, status,0
 24505 ;; Tracked objects:
 24506 ;;		On entry : 0/0
 24507 ;;		On exit  : 0/0
 24508 ;;		Unchanged: 0/0
 24509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24511 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24512 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24513 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24514 ;;Total ram usage:       15 bytes
 24515 ;; Hardware stack levels used:    1
 24516 ;; This function calls:
 24517 ;;		Nothing
 24518 ;; This function is called by:
 24519 ;;		_floor
 24520 ;;		i2_printf
 24521 ;; This function uses a non-reentrant model
 24522 ;;
 24523                           
 24524                           	psect	text101
 24525  0143B6                     __ptext101:
 24526                           	opt stack 0
 24527  0143B6                     i2___fttol:
 24528                           	opt stack 15
 24529                           
 24530                           ;incstack = 0
 24531  0143B6  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 24532  0143BA  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 24533  0143BC  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 24534  0143BE  343E               	rlcf	i2___fttol@f1+1,w,c
 24535  0143C0  3641               	rlcf	??i2___fttol& (0+255),f,c
 24536  0143C2  E301               	bnc	u1480_41
 24537  0143C4  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 24538  0143C6                     u1480_41:
 24539  0143C6  5041               	movf	??i2___fttol,w,c
 24540  0143C8  6E4B               	movwf	i2___fttol@exp1,c
 24541  0143CA  504B               	movf	i2___fttol@exp1,w,c
 24542  0143CC  A4D8               	btfss	status,2,c
 24543  0143CE  D009               	goto	i2l1551
 24544  0143D0  0E00               	movlw	0
 24545  0143D2  6E3D               	movwf	?i2___fttol,c
 24546  0143D4  0E00               	movlw	0
 24547  0143D6  6E3E               	movwf	?i2___fttol+1,c
 24548  0143D8  0E00               	movlw	0
 24549  0143DA  6E3F               	movwf	?i2___fttol+2,c
 24550  0143DC  0E00               	movlw	0
 24551  0143DE  6E40               	movwf	?i2___fttol+3,c
 24552  0143E0  0012               	return	
 24553  0143E2                     i2l1551:
 24554  0143E2  0E17               	movlw	23
 24555  0143E4  6E41               	movwf	??i2___fttol& (0+255),c
 24556  0143E6  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 24557  0143EA  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 24558  0143EE  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 24559  0143F2  2841               	incf	??i2___fttol,w,c
 24560  0143F4  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 24561  0143F6  D004               	goto	i2u1482_40
 24562  0143F8                     i2u1482_45:
 24563  0143F8  90D8               	bcf	status,0,c
 24564  0143FA  3244               	rrcf	??i2___fttol+3,f,c
 24565  0143FC  3243               	rrcf	??i2___fttol+2,f,c
 24566  0143FE  3242               	rrcf	??i2___fttol+1,f,c
 24567  014400                     i2u1482_40:
 24568  014400  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 24569  014402  D7FA               	goto	i2u1482_45
 24570  014404  5042               	movf	??i2___fttol+1,w,c
 24571  014406  6E46               	movwf	i2___fttol@sign1,c
 24572  014408  8E3E               	bsf	i2___fttol@f1+1,7,c
 24573  01440A  0EFF               	movlw	255
 24574  01440C  163D               	andwf	i2___fttol@f1,f,c
 24575  01440E  0EFF               	movlw	255
 24576  014410  163E               	andwf	i2___fttol@f1+1,f,c
 24577  014412  0E00               	movlw	0
 24578  014414  163F               	andwf	i2___fttol@f1+2,f,c
 24579  014416  503D               	movf	i2___fttol@f1,w,c
 24580  014418  6E47               	movwf	i2___fttol@lval,c
 24581  01441A  503E               	movf	i2___fttol@f1+1,w,c
 24582  01441C  6E48               	movwf	i2___fttol@lval+1,c
 24583  01441E  503F               	movf	i2___fttol@f1+2,w,c
 24584  014420  6E49               	movwf	i2___fttol@lval+2,c
 24585  014422  6A4A               	clrf	i2___fttol@lval+3,c
 24586  014424  0E8E               	movlw	142
 24587  014426  5E4B               	subwf	i2___fttol@exp1,f,c
 24588  014428  AE4B               	btfss	i2___fttol@exp1,7,c
 24589  01442A  D016               	goto	i2l1553
 24590  01442C  504B               	movf	i2___fttol@exp1,w,c
 24591  01442E  0A80               	xorlw	128
 24592  014430  0F8F               	addlw	143
 24593  014432  B0D8               	btfsc	status,0,c
 24594  014434  D009               	goto	i2l1554
 24595  014436  0E00               	movlw	0
 24596  014438  6E3D               	movwf	?i2___fttol,c
 24597  01443A  0E00               	movlw	0
 24598  01443C  6E3E               	movwf	?i2___fttol+1,c
 24599  01443E  0E00               	movlw	0
 24600  014440  6E3F               	movwf	?i2___fttol+2,c
 24601  014442  0E00               	movlw	0
 24602  014444  6E40               	movwf	?i2___fttol+3,c
 24603  014446  0012               	return	
 24604  014448                     i2l1554:
 24605  014448  90D8               	bcf	status,0,c
 24606  01444A  324A               	rrcf	i2___fttol@lval+3,f,c
 24607  01444C  3249               	rrcf	i2___fttol@lval+2,f,c
 24608  01444E  3248               	rrcf	i2___fttol@lval+1,f,c
 24609  014450  3247               	rrcf	i2___fttol@lval,f,c
 24610  014452  3E4B               	incfsz	i2___fttol@exp1,f,c
 24611  014454  D7F9               	goto	i2l1554
 24612  014456  D015               	goto	i2u1486_40
 24613  014458                     i2l1553:
 24614  014458  0E17               	movlw	23
 24615  01445A  644B               	cpfsgt	i2___fttol@exp1,c
 24616  01445C  D00F               	goto	i2l1559
 24617  01445E  0E00               	movlw	0
 24618  014460  6E3D               	movwf	?i2___fttol,c
 24619  014462  0E00               	movlw	0
 24620  014464  6E3E               	movwf	?i2___fttol+1,c
 24621  014466  0E00               	movlw	0
 24622  014468  6E3F               	movwf	?i2___fttol+2,c
 24623  01446A  0E00               	movlw	0
 24624  01446C  6E40               	movwf	?i2___fttol+3,c
 24625  01446E  0012               	return	
 24626  014470  90D8               	bcf	status,0,c
 24627  014472  3647               	rlcf	i2___fttol@lval,f,c
 24628  014474  3648               	rlcf	i2___fttol@lval+1,f,c
 24629  014476  3649               	rlcf	i2___fttol@lval+2,f,c
 24630  014478  364A               	rlcf	i2___fttol@lval+3,f,c
 24631  01447A  064B               	decf	i2___fttol@exp1,f,c
 24632  01447C                     i2l1559:
 24633  01447C  504B               	movf	i2___fttol@exp1,w,c
 24634  01447E  A4D8               	btfss	status,2,c
 24635  014480  D7F7               	goto	i2l1560
 24636  014482                     i2u1486_40:
 24637  014482  5046               	movf	i2___fttol@sign1,w,c
 24638  014484  B4D8               	btfsc	status,2,c
 24639  014486  D008               	goto	i2l1562
 24640  014488  1E4A               	comf	i2___fttol@lval+3,f,c
 24641  01448A  1E49               	comf	i2___fttol@lval+2,f,c
 24642  01448C  1E48               	comf	i2___fttol@lval+1,f,c
 24643  01448E  6C47               	negf	i2___fttol@lval,c
 24644  014490  0E00               	movlw	0
 24645  014492  2248               	addwfc	i2___fttol@lval+1,f,c
 24646  014494  2249               	addwfc	i2___fttol@lval+2,f,c
 24647  014496  224A               	addwfc	i2___fttol@lval+3,f,c
 24648  014498                     i2l1562:
 24649  014498  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 24650  01449C  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 24651  0144A0  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 24652  0144A4  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 24653  0144A8  0012               	return	
 24654  0144AA                     __end_ofi2___fttol:
 24655                           	opt stack 0
 24656                           tosu	equ	0xFFF
 24657                           tosh	equ	0xFFE
 24658                           tosl	equ	0xFFD
 24659                           pclatu	equ	0xFFB
 24660                           pclath	equ	0xFFA
 24661                           tblptru	equ	0xFF8
 24662                           tblptrh	equ	0xFF7
 24663                           tblptrl	equ	0xFF6
 24664                           tablat	equ	0xFF5
 24665                           prodh	equ	0xFF4
 24666                           prodl	equ	0xFF3
 24667                           intcon	equ	0xFF2
 24668                           postinc0	equ	0xFEE
 24669                           fsr0h	equ	0xFEA
 24670                           fsr0l	equ	0xFE9
 24671                           wreg	equ	0xFE8
 24672                           indf1	equ	0xFE7
 24673                           postdec1	equ	0xFE5
 24674                           fsr1h	equ	0xFE2
 24675                           fsr1l	equ	0xFE1
 24676                           bsr	equ	0xFE0
 24677                           indf2	equ	0xFDF
 24678                           postinc2	equ	0xFDE
 24679                           postdec2	equ	0xFDD
 24680                           fsr2h	equ	0xFDA
 24681                           fsr2l	equ	0xFD9
 24682                           status	equ	0xFD8
 24683                           
 24684 ;; *************** function i2___ftge *****************
 24685 ;; Defined at:
 24686 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 24687 ;; Parameters:    Size  Location     Type
 24688 ;;  ff1             3   41[COMRAM] float 
 24689 ;;  ff2             3   44[COMRAM] float 
 24690 ;; Auto vars:     Size  Location     Type
 24691 ;;		None
 24692 ;; Return value:  Size  Location     Type
 24693 ;;		None               void
 24694 ;; Registers used:
 24695 ;;		wreg, status,2, status,0
 24696 ;; Tracked objects:
 24697 ;;		On entry : 0/0
 24698 ;;		On exit  : 0/0
 24699 ;;		Unchanged: 0/0
 24700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24701 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24703 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24704 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24705 ;;Total ram usage:        9 bytes
 24706 ;; Hardware stack levels used:    1
 24707 ;; This function calls:
 24708 ;;		Nothing
 24709 ;; This function is called by:
 24710 ;;		_asin
 24711 ;;		_atan
 24712 ;;		_sin
 24713 ;;		_sqrt
 24714 ;;		_floor
 24715 ;;		i2_printf
 24716 ;; This function uses a non-reentrant model
 24717 ;;
 24718                           
 24719                           	psect	text102
 24720  014E94                     __ptext102:
 24721                           	opt stack 0
 24722  014E94                     i2___ftge:
 24723                           	opt stack 15
 24724                           
 24725                           ;incstack = 0
 24726  014E94  AE2C               	btfss	i2___ftge@ff1+2,7,c
 24727  014E96  D016               	goto	i2l1523
 24728  014E98  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 24729  014E9C  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 24730  014EA0  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 24731  014EA4  1E30               	comf	??i2___ftge,f,c
 24732  014EA6  1E31               	comf	??i2___ftge+1,f,c
 24733  014EA8  1E32               	comf	??i2___ftge+2,f,c
 24734  014EAA  2A30               	incf	??i2___ftge,f,c
 24735  014EAC  0E00               	movlw	0
 24736  014EAE  2231               	addwfc	??i2___ftge+1,f,c
 24737  014EB0  2232               	addwfc	??i2___ftge+2,f,c
 24738  014EB2  0E00               	movlw	0
 24739  014EB4  2430               	addwf	??i2___ftge,w,c
 24740  014EB6  6E2A               	movwf	i2___ftge@ff1,c
 24741  014EB8  0E00               	movlw	0
 24742  014EBA  2031               	addwfc	??i2___ftge+1,w,c
 24743  014EBC  6E2B               	movwf	i2___ftge@ff1+1,c
 24744  014EBE  0E80               	movlw	128
 24745  014EC0  2032               	addwfc	??i2___ftge+2,w,c
 24746  014EC2  6E2C               	movwf	i2___ftge@ff1+2,c
 24747  014EC4                     i2l1523:
 24748  014EC4  AE2F               	btfss	i2___ftge@ff2+2,7,c
 24749  014EC6  D016               	goto	i2l1524
 24750  014EC8  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 24751  014ECC  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 24752  014ED0  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 24753  014ED4  1E30               	comf	??i2___ftge,f,c
 24754  014ED6  1E31               	comf	??i2___ftge+1,f,c
 24755  014ED8  1E32               	comf	??i2___ftge+2,f,c
 24756  014EDA  2A30               	incf	??i2___ftge,f,c
 24757  014EDC  0E00               	movlw	0
 24758  014EDE  2231               	addwfc	??i2___ftge+1,f,c
 24759  014EE0  2232               	addwfc	??i2___ftge+2,f,c
 24760  014EE2  0E00               	movlw	0
 24761  014EE4  2430               	addwf	??i2___ftge,w,c
 24762  014EE6  6E2D               	movwf	i2___ftge@ff2,c
 24763  014EE8  0E00               	movlw	0
 24764  014EEA  2031               	addwfc	??i2___ftge+1,w,c
 24765  014EEC  6E2E               	movwf	i2___ftge@ff2+1,c
 24766  014EEE  0E80               	movlw	128
 24767  014EF0  2032               	addwfc	??i2___ftge+2,w,c
 24768  014EF2  6E2F               	movwf	i2___ftge@ff2+2,c
 24769  014EF4                     i2l1524:
 24770  014EF4  0E00               	movlw	0
 24771  014EF6  1A2A               	xorwf	i2___ftge@ff1,f,c
 24772  014EF8  0E00               	movlw	0
 24773  014EFA  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 24774  014EFC  0E80               	movlw	128
 24775  014EFE  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 24776  014F00  0E00               	movlw	0
 24777  014F02  1A2D               	xorwf	i2___ftge@ff2,f,c
 24778  014F04  0E00               	movlw	0
 24779  014F06  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 24780  014F08  0E80               	movlw	128
 24781  014F0A  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 24782  014F0C  502D               	movf	i2___ftge@ff2,w,c
 24783  014F0E  5C2A               	subwf	i2___ftge@ff1,w,c
 24784  014F10  502E               	movf	i2___ftge@ff2+1,w,c
 24785  014F12  582B               	subwfb	i2___ftge@ff1+1,w,c
 24786  014F14  502F               	movf	i2___ftge@ff2+2,w,c
 24787  014F16  582C               	subwfb	i2___ftge@ff1+2,w,c
 24788  014F18  B0D8               	btfsc	status,0,c
 24789  014F1A  D002               	goto	i2l11273
 24790  014F1C  90D8               	bcf	status,0,c
 24791  014F1E  0012               	return	
 24792  014F20                     i2l11273:
 24793  014F20  80D8               	bsf	status,0,c
 24794  014F22  0012               	return	
 24795  014F24                     __end_ofi2___ftge:
 24796                           	opt stack 0
 24797                           tosu	equ	0xFFF
 24798                           tosh	equ	0xFFE
 24799                           tosl	equ	0xFFD
 24800                           pclatu	equ	0xFFB
 24801                           pclath	equ	0xFFA
 24802                           tblptru	equ	0xFF8
 24803                           tblptrh	equ	0xFF7
 24804                           tblptrl	equ	0xFF6
 24805                           tablat	equ	0xFF5
 24806                           prodh	equ	0xFF4
 24807                           prodl	equ	0xFF3
 24808                           intcon	equ	0xFF2
 24809                           postinc0	equ	0xFEE
 24810                           fsr0h	equ	0xFEA
 24811                           fsr0l	equ	0xFE9
 24812                           wreg	equ	0xFE8
 24813                           indf1	equ	0xFE7
 24814                           postdec1	equ	0xFE5
 24815                           fsr1h	equ	0xFE2
 24816                           fsr1l	equ	0xFE1
 24817                           bsr	equ	0xFE0
 24818                           indf2	equ	0xFDF
 24819                           postinc2	equ	0xFDE
 24820                           postdec2	equ	0xFDD
 24821                           fsr2h	equ	0xFDA
 24822                           fsr2l	equ	0xFD9
 24823                           status	equ	0xFD8
 24824                           
 24825 ;; *************** function _frexp *****************
 24826 ;; Defined at:
 24827 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 24828 ;; Parameters:    Size  Location     Type
 24829 ;;  value           3    0[COMRAM] float 
 24830 ;;  eptr            2    3[COMRAM] PTR int 
 24831 ;;		 -> floor@expon(2), 
 24832 ;; Auto vars:     Size  Location     Type
 24833 ;;		None
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  3    0[COMRAM] PTR int 
 24836 ;; Registers used:
 24837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24843 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24846 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24847 ;;Total ram usage:        7 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; This function calls:
 24850 ;;		Nothing
 24851 ;; This function is called by:
 24852 ;;		_floor
 24853 ;; This function uses a non-reentrant model
 24854 ;;
 24855                           
 24856                           	psect	text103
 24857  0151C0                     __ptext103:
 24858                           	opt stack 0
 24859  0151C0                     _frexp:
 24860                           	opt stack 12
 24861                           
 24862                           ;incstack = 0
 24863  0151C0  5001               	movf	frexp@value,w,c
 24864  0151C2  1002               	iorwf	frexp@value+1,w,c
 24865  0151C4  1003               	iorwf	frexp@value+2,w,c
 24866  0151C6  A4D8               	btfss	status,2,c
 24867  0151C8  D009               	goto	i2l1895
 24868  0151CA  C004  FFD9         	movff	frexp@eptr,fsr2l
 24869  0151CE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 24870  0151D2  0E00               	movlw	0
 24871  0151D4  6EDE               	movwf	postinc2,c
 24872  0151D6  0E00               	movlw	0
 24873  0151D8  6EDD               	movwf	postdec2,c
 24874                           
 24875                           ;	Return value of _frexp is never used
 24876  0151DA  0012               	return	
 24877  0151DC                     i2l1895:
 24878  0151DC  5003               	movf	frexp@value+2,w,c
 24879  0151DE  0B7F               	andlw	127
 24880  0151E0  6E06               	movwf	??_frexp& (0+255),c
 24881  0151E2  6A07               	clrf	(??_frexp+1)& (0+255),c
 24882  0151E4  90D8               	bcf	status,0,c
 24883  0151E6  3606               	rlcf	??_frexp,f,c
 24884  0151E8  3607               	rlcf	??_frexp+1,f,c
 24885  0151EA  C004  FFD9         	movff	frexp@eptr,fsr2l
 24886  0151EE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 24887  0151F2  C006  FFDE         	movff	??_frexp,postinc2
 24888  0151F6  C007  FFDD         	movff	??_frexp+1,postdec2
 24889  0151FA  AE02               	btfss	frexp@value+1,7,c
 24890  0151FC  D003               	goto	i2u1479_40
 24891  0151FE  6A06               	clrf	??_frexp& (0+255),c
 24892  015200  2A06               	incf	??_frexp& (0+255),f,c
 24893  015202  D001               	goto	i2u1479_48
 24894  015204                     i2u1479_40:
 24895  015204  6A06               	clrf	??_frexp& (0+255),c
 24896  015206                     i2u1479_48:
 24897  015206  5006               	movf	??_frexp,w,c
 24898  015208  C004  FFD9         	movff	frexp@eptr,fsr2l
 24899  01520C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 24900  015210  12DE               	iorwf	postinc2,f,c
 24901  015212  0E00               	movlw	0
 24902  015214  12DD               	iorwf	postdec2,f,c
 24903  015216  C004  FFD9         	movff	frexp@eptr,fsr2l
 24904  01521A  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 24905  01521E  0E82               	movlw	130
 24906  015220  26DE               	addwf	postinc2,f,c
 24907  015222  0EFF               	movlw	255
 24908  015224  22DD               	addwfc	postdec2,f,c
 24909  015226  8003               	bsf	frexp@value+2,0,c
 24910  015228  8203               	bsf	frexp@value+2,1,c
 24911  01522A  8403               	bsf	frexp@value+2,2,c
 24912  01522C  8603               	bsf	frexp@value+2,3,c
 24913  01522E  8803               	bsf	frexp@value+2,4,c
 24914  015230  8A03               	bsf	frexp@value+2,5,c
 24915  015232  9C03               	bcf	frexp@value+2,6,c
 24916  015234  9E02               	bcf	frexp@value+1,7,c
 24917  015236  0012               	return	
 24918  015238                     __end_of_frexp:
 24919                           	opt stack 0
 24920                           tosu	equ	0xFFF
 24921                           tosh	equ	0xFFE
 24922                           tosl	equ	0xFFD
 24923                           pclatu	equ	0xFFB
 24924                           pclath	equ	0xFFA
 24925                           tblptru	equ	0xFF8
 24926                           tblptrh	equ	0xFF7
 24927                           tblptrl	equ	0xFF6
 24928                           tablat	equ	0xFF5
 24929                           prodh	equ	0xFF4
 24930                           prodl	equ	0xFF3
 24931                           intcon	equ	0xFF2
 24932                           postinc0	equ	0xFEE
 24933                           fsr0h	equ	0xFEA
 24934                           fsr0l	equ	0xFE9
 24935                           wreg	equ	0xFE8
 24936                           indf1	equ	0xFE7
 24937                           postdec1	equ	0xFE5
 24938                           fsr1h	equ	0xFE2
 24939                           fsr1l	equ	0xFE1
 24940                           bsr	equ	0xFE0
 24941                           indf2	equ	0xFDF
 24942                           postinc2	equ	0xFDE
 24943                           postdec2	equ	0xFDD
 24944                           fsr2h	equ	0xFDA
 24945                           fsr2l	equ	0xFD9
 24946                           status	equ	0xFD8
 24947                           
 24948 ;; *************** function ___altoft *****************
 24949 ;; Defined at:
 24950 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 24951 ;; Parameters:    Size  Location     Type
 24952 ;;  c               4   75[COMRAM] long 
 24953 ;; Auto vars:     Size  Location     Type
 24954 ;;  sign            1   84[COMRAM] unsigned char 
 24955 ;;  exp             1   83[COMRAM] unsigned char 
 24956 ;; Return value:  Size  Location     Type
 24957 ;;                  3   75[COMRAM] float 
 24958 ;; Registers used:
 24959 ;;		wreg, status,2, status,0, cstack
 24960 ;; Tracked objects:
 24961 ;;		On entry : 0/0
 24962 ;;		On exit  : 0/0
 24963 ;;		Unchanged: 0/0
 24964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24968 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24969 ;;Total ram usage:       10 bytes
 24970 ;; Hardware stack levels used:    1
 24971 ;; Hardware stack levels required when called:    1
 24972 ;; This function calls:
 24973 ;;		i2___ftpack
 24974 ;; This function is called by:
 24975 ;;		_floor
 24976 ;; This function uses a non-reentrant model
 24977 ;;
 24978                           
 24979                           	psect	text104
 24980  015238                     __ptext104:
 24981                           	opt stack 0
 24982  015238                     ___altoft:
 24983                           	opt stack 11
 24984                           
 24985                           ;incstack = 0
 24986  015238  0E00               	movlw	0
 24987  01523A  6E55               	movwf	___altoft@sign,c
 24988  01523C  0E8E               	movlw	142
 24989  01523E  6E54               	movwf	___altoft@exp,c
 24990  015240  AE4F               	btfss	___altoft@c+3,7,c
 24991  015242  D011               	goto	i2l1228
 24992  015244  1E4F               	comf	___altoft@c+3,f,c
 24993  015246  1E4E               	comf	___altoft@c+2,f,c
 24994  015248  1E4D               	comf	___altoft@c+1,f,c
 24995  01524A  6C4C               	negf	___altoft@c,c
 24996  01524C  0E00               	movlw	0
 24997  01524E  224D               	addwfc	___altoft@c+1,f,c
 24998  015250  224E               	addwfc	___altoft@c+2,f,c
 24999  015252  224F               	addwfc	___altoft@c+3,f,c
 25000  015254  0E01               	movlw	1
 25001  015256  6E55               	movwf	___altoft@sign,c
 25002  015258  D006               	goto	i2l1228
 25003  01525A  90D8               	bcf	status,0,c
 25004  01525C  324F               	rrcf	___altoft@c+3,f,c
 25005  01525E  324E               	rrcf	___altoft@c+2,f,c
 25006  015260  324D               	rrcf	___altoft@c+1,f,c
 25007  015262  324C               	rrcf	___altoft@c,f,c
 25008  015264  2A54               	incf	___altoft@exp,f,c
 25009  015266                     i2l1228:
 25010  015266  0E00               	movlw	0
 25011  015268  144C               	andwf	___altoft@c,w,c
 25012  01526A  6E50               	movwf	??___altoft& (0+255),c
 25013  01526C  0E00               	movlw	0
 25014  01526E  144D               	andwf	___altoft@c+1,w,c
 25015  015270  6E51               	movwf	(??___altoft+1)& (0+255),c
 25016  015272  0E00               	movlw	0
 25017  015274  144E               	andwf	___altoft@c+2,w,c
 25018  015276  6E52               	movwf	(??___altoft+2)& (0+255),c
 25019  015278  0EFF               	movlw	255
 25020  01527A  144F               	andwf	___altoft@c+3,w,c
 25021  01527C  6E53               	movwf	(??___altoft+3)& (0+255),c
 25022  01527E  5050               	movf	??___altoft,w,c
 25023  015280  1051               	iorwf	??___altoft+1,w,c
 25024  015282  1052               	iorwf	??___altoft+2,w,c
 25025  015284  1053               	iorwf	??___altoft+3,w,c
 25026  015286  A4D8               	btfss	status,2,c
 25027  015288  D7E8               	goto	i2l1229
 25028  01528A  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 25029  01528E  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 25030  015292  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 25031  015296  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 25032  01529A  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 25033  01529E  ECBC  F0A5         	call	i2___ftpack	;wreg free
 25034  0152A2  C001  F04C         	movff	?i2___ftpack,?___altoft
 25035  0152A6  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 25036  0152AA  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 25037  0152AE  0012               	return	
 25038  0152B0                     __end_of___altoft:
 25039                           	opt stack 0
 25040                           tosu	equ	0xFFF
 25041                           tosh	equ	0xFFE
 25042                           tosl	equ	0xFFD
 25043                           pclatu	equ	0xFFB
 25044                           pclath	equ	0xFFA
 25045                           tblptru	equ	0xFF8
 25046                           tblptrh	equ	0xFF7
 25047                           tblptrl	equ	0xFF6
 25048                           tablat	equ	0xFF5
 25049                           prodh	equ	0xFF4
 25050                           prodl	equ	0xFF3
 25051                           intcon	equ	0xFF2
 25052                           postinc0	equ	0xFEE
 25053                           fsr0h	equ	0xFEA
 25054                           fsr0l	equ	0xFE9
 25055                           wreg	equ	0xFE8
 25056                           indf1	equ	0xFE7
 25057                           postdec1	equ	0xFE5
 25058                           fsr1h	equ	0xFE2
 25059                           fsr1l	equ	0xFE1
 25060                           bsr	equ	0xFE0
 25061                           indf2	equ	0xFDF
 25062                           postinc2	equ	0xFDE
 25063                           postdec2	equ	0xFDD
 25064                           fsr2h	equ	0xFDA
 25065                           fsr2l	equ	0xFD9
 25066                           status	equ	0xFD8
 25067                           
 25068 ;; *************** function _eval_poly *****************
 25069 ;; Defined at:
 25070 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 25071 ;; Parameters:    Size  Location     Type
 25072 ;;  x               3   75[COMRAM] float 
 25073 ;;  d               2   78[COMRAM] PTR const 
 25074 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 25075 ;;  n               2   80[COMRAM] int 
 25076 ;; Auto vars:     Size  Location     Type
 25077 ;;  res             3   84[COMRAM] int 
 25078 ;; Return value:  Size  Location     Type
 25079 ;;                  3   75[COMRAM] int 
 25080 ;; Registers used:
 25081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25082 ;; Tracked objects:
 25083 ;;		On entry : 0/0
 25084 ;;		On exit  : 0/0
 25085 ;;		Unchanged: 0/0
 25086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25087 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25090 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25091 ;;Total ram usage:       12 bytes
 25092 ;; Hardware stack levels used:    1
 25093 ;; Hardware stack levels required when called:    2
 25094 ;; This function calls:
 25095 ;;		i2___ftadd
 25096 ;;		i2___ftmul
 25097 ;;		i2___wmul
 25098 ;; This function is called by:
 25099 ;;		_atan
 25100 ;;		_sin
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           	psect	text105
 25105  01484A                     __ptext105:
 25106                           	opt stack 0
 25107  01484A                     _eval_poly:
 25108                           	opt stack 11
 25109                           
 25110                           ;incstack = 0
 25111  01484A  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 25112  01484E  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 25113  014852  0E00               	movlw	0
 25114  014854  6E12               	movwf	i2___wmul@multiplicand+1,c
 25115  014856  0E03               	movlw	3
 25116  014858  6E11               	movwf	i2___wmul@multiplicand,c
 25117  01485A  ECC4  F0AE         	call	i2___wmul	;wreg free
 25118  01485E  C04F  F053         	movff	eval_poly@d,??_eval_poly
 25119  014862  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 25120  014866  500F               	movf	?i2___wmul,w,c
 25121  014868  2653               	addwf	??_eval_poly,f,c
 25122  01486A  5010               	movf	?i2___wmul+1,w,c
 25123  01486C  2254               	addwfc	??_eval_poly+1,f,c
 25124  01486E  C053  FFF6         	movff	??_eval_poly,tblptrl
 25125  014872  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 25126  014876                     	if	0	;tblptru may be non-zero
 25127  014876                     	endif
 25128  014876                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25129  014876  0E00               	movlw	low (__mediumconst shr (0+16))
 25130  014878  6EF8               	movwf	tblptru,c
 25131  01487A                     	endif
 25132  01487A  0009               	tblrd		*+
 25133  01487C  CFF5 F055          	movff	tablat,eval_poly@res
 25134  014880  0009               	tblrd		*+
 25135  014882  CFF5 F056          	movff	tablat,eval_poly@res+1
 25136  014886  000A               	tblrd		*-
 25137  014888  CFF5 F057          	movff	tablat,eval_poly@res+2
 25138  01488C  D040               	goto	i2l1392
 25139  01488E  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 25140  014892  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 25141  014896  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 25142  01489A  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 25143  01489E  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 25144  0148A2  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 25145  0148A6  EC55  F0A2         	call	i2___ftmul	;wreg free
 25146  0148AA  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 25147  0148AE  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 25148  0148B2  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 25149  0148B6  0E00               	movlw	0
 25150  0148B8  6E12               	movwf	i2___wmul@multiplicand+1,c
 25151  0148BA  0E03               	movlw	3
 25152  0148BC  6E11               	movwf	i2___wmul@multiplicand,c
 25153  0148BE  0651               	decf	eval_poly@n,f,c
 25154  0148C0  A0D8               	btfss	status,0,c
 25155  0148C2  0652               	decf	eval_poly@n+1,f,c
 25156  0148C4  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 25157  0148C8  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 25158  0148CC  ECC4  F0AE         	call	i2___wmul	;wreg free
 25159  0148D0  C04F  F053         	movff	eval_poly@d,??_eval_poly
 25160  0148D4  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 25161  0148D8  500F               	movf	?i2___wmul,w,c
 25162  0148DA  2653               	addwf	??_eval_poly,f,c
 25163  0148DC  5010               	movf	?i2___wmul+1,w,c
 25164  0148DE  2254               	addwfc	??_eval_poly+1,f,c
 25165  0148E0  C053  FFF6         	movff	??_eval_poly,tblptrl
 25166  0148E4  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 25167  0148E8                     	if	0	;tblptru may be non-zero
 25168  0148E8                     	endif
 25169  0148E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25170  0148E8  0E00               	movlw	low (__mediumconst shr (0+16))
 25171  0148EA  6EF8               	movwf	tblptru,c
 25172  0148EC                     	endif
 25173  0148EC  0009               	tblrd		*+
 25174  0148EE  CFF5 F043          	movff	tablat,i2___ftadd@f2
 25175  0148F2  0009               	tblrd		*+
 25176  0148F4  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 25177  0148F8  000A               	tblrd		*-
 25178  0148FA  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 25179  0148FE  EC5B  F09C         	call	i2___ftadd	;wreg free
 25180  014902  C040  F055         	movff	?i2___ftadd,eval_poly@res
 25181  014906  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 25182  01490A  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 25183  01490E                     i2l1392:
 25184  01490E  5051               	movf	eval_poly@n,w,c
 25185  014910  1052               	iorwf	eval_poly@n+1,w,c
 25186  014912  A4D8               	btfss	status,2,c
 25187  014914  D7BC               	goto	i2l1393
 25188  014916  C055  F04C         	movff	eval_poly@res,?_eval_poly
 25189  01491A  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 25190  01491E  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 25191  014922  0012               	return		;funcret
 25192  014924                     __end_of_eval_poly:
 25193                           	opt stack 0
 25194                           tosu	equ	0xFFF
 25195                           tosh	equ	0xFFE
 25196                           tosl	equ	0xFFD
 25197                           pclatu	equ	0xFFB
 25198                           pclath	equ	0xFFA
 25199                           tblptru	equ	0xFF8
 25200                           tblptrh	equ	0xFF7
 25201                           tblptrl	equ	0xFF6
 25202                           tablat	equ	0xFF5
 25203                           prodh	equ	0xFF4
 25204                           prodl	equ	0xFF3
 25205                           intcon	equ	0xFF2
 25206                           postinc0	equ	0xFEE
 25207                           fsr0h	equ	0xFEA
 25208                           fsr0l	equ	0xFE9
 25209                           wreg	equ	0xFE8
 25210                           indf1	equ	0xFE7
 25211                           postdec1	equ	0xFE5
 25212                           fsr1h	equ	0xFE2
 25213                           fsr1l	equ	0xFE1
 25214                           bsr	equ	0xFE0
 25215                           indf2	equ	0xFDF
 25216                           postinc2	equ	0xFDE
 25217                           postdec2	equ	0xFDD
 25218                           fsr2h	equ	0xFDA
 25219                           fsr2l	equ	0xFD9
 25220                           status	equ	0xFD8
 25221                           
 25222 ;; *************** function i2___wmul *****************
 25223 ;; Defined at:
 25224 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 25225 ;; Parameters:    Size  Location     Type
 25226 ;;  multiplier      2   14[COMRAM] unsigned int 
 25227 ;;  multiplicand    2   16[COMRAM] unsigned int 
 25228 ;; Auto vars:     Size  Location     Type
 25229 ;;  __wmul          2   18[COMRAM] unsigned int 
 25230 ;; Return value:  Size  Location     Type
 25231 ;;                  2   14[COMRAM] unsigned int 
 25232 ;; Registers used:
 25233 ;;		wreg, status,2, status,0, prodl, prodh
 25234 ;; Tracked objects:
 25235 ;;		On entry : 0/0
 25236 ;;		On exit  : 0/0
 25237 ;;		Unchanged: 0/0
 25238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25243 ;;Total ram usage:        6 bytes
 25244 ;; Hardware stack levels used:    1
 25245 ;; This function calls:
 25246 ;;		Nothing
 25247 ;; This function is called by:
 25248 ;;		_eval_poly
 25249 ;;		i2_fround
 25250 ;;		i2_scale
 25251 ;;		i2_printf
 25252 ;; This function uses a non-reentrant model
 25253 ;;
 25254                           
 25255                           	psect	text106
 25256  015D88                     __ptext106:
 25257                           	opt stack 0
 25258  015D88                     i2___wmul:
 25259                           	opt stack 14
 25260                           
 25261                           ;incstack = 0
 25262  015D88  500F               	movf	i2___wmul@multiplier,w,c
 25263  015D8A  0211               	mulwf	i2___wmul@multiplicand,c
 25264  015D8C  CFF3 F013          	movff	prodl,i2___wmul@product
 25265  015D90  CFF4 F014          	movff	prodh,i2___wmul@product+1
 25266  015D94  500F               	movf	i2___wmul@multiplier,w,c
 25267  015D96  0212               	mulwf	i2___wmul@multiplicand+1,c
 25268  015D98  50F3               	movf	prodl,w,c
 25269  015D9A  2614               	addwf	i2___wmul@product+1,f,c
 25270  015D9C  5010               	movf	i2___wmul@multiplier+1,w,c
 25271  015D9E  0211               	mulwf	i2___wmul@multiplicand,c
 25272  015DA0  50F3               	movf	prodl,w,c
 25273  015DA2  2614               	addwf	i2___wmul@product+1,f,c
 25274  015DA4  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 25275  015DA8  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 25276  015DAC  0012               	return	
 25277  015DAE                     __end_ofi2___wmul:
 25278                           	opt stack 0
 25279                           tosu	equ	0xFFF
 25280                           tosh	equ	0xFFE
 25281                           tosl	equ	0xFFD
 25282                           pclatu	equ	0xFFB
 25283                           pclath	equ	0xFFA
 25284                           tblptru	equ	0xFF8
 25285                           tblptrh	equ	0xFF7
 25286                           tblptrl	equ	0xFF6
 25287                           tablat	equ	0xFF5
 25288                           prodh	equ	0xFF4
 25289                           prodl	equ	0xFF3
 25290                           intcon	equ	0xFF2
 25291                           postinc0	equ	0xFEE
 25292                           fsr0h	equ	0xFEA
 25293                           fsr0l	equ	0xFE9
 25294                           wreg	equ	0xFE8
 25295                           indf1	equ	0xFE7
 25296                           postdec1	equ	0xFE5
 25297                           fsr1h	equ	0xFE2
 25298                           fsr1l	equ	0xFE1
 25299                           bsr	equ	0xFE0
 25300                           indf2	equ	0xFDF
 25301                           postinc2	equ	0xFDE
 25302                           postdec2	equ	0xFDD
 25303                           fsr2h	equ	0xFDA
 25304                           fsr2l	equ	0xFD9
 25305                           status	equ	0xFD8
 25306                           
 25307 ;; *************** function i2___ftmul *****************
 25308 ;; Defined at:
 25309 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 25310 ;; Parameters:    Size  Location     Type
 25311 ;;  f1              3   38[COMRAM] float 
 25312 ;;  f2              3   41[COMRAM] float 
 25313 ;; Auto vars:     Size  Location     Type
 25314 ;;  __ftmul         3   48[COMRAM] unsigned um
 25315 ;;  __ftmul         1   52[COMRAM] unsigned char 
 25316 ;;  __ftmul         1   51[COMRAM] unsigned char 
 25317 ;;  __ftmul         1   47[COMRAM] unsigned char 
 25318 ;; Return value:  Size  Location     Type
 25319 ;;                  3   38[COMRAM] float 
 25320 ;; Registers used:
 25321 ;;		wreg, status,2, status,0, cstack
 25322 ;; Tracked objects:
 25323 ;;		On entry : 0/0
 25324 ;;		On exit  : 0/0
 25325 ;;		Unchanged: 0/0
 25326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25328 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25329 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25330 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25331 ;;Total ram usage:       15 bytes
 25332 ;; Hardware stack levels used:    1
 25333 ;; Hardware stack levels required when called:    1
 25334 ;; This function calls:
 25335 ;;		i2___ftpack
 25336 ;; This function is called by:
 25337 ;;		_peakToRMS
 25338 ;;		_ADC_postProcessingCallback
 25339 ;;		_asin
 25340 ;;		_atan
 25341 ;;		_eval_poly
 25342 ;;		_sin
 25343 ;;		_sqrt
 25344 ;;		i2_fround
 25345 ;;		i2_scale
 25346 ;;		i2_printf
 25347 ;; This function uses a non-reentrant model
 25348 ;;
 25349                           
 25350                           	psect	text107
 25351  0144AA                     __ptext107:
 25352                           	opt stack 0
 25353  0144AA                     i2___ftmul:
 25354                           	opt stack 13
 25355                           
 25356                           ;incstack = 0
 25357  0144AA  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 25358  0144AE  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 25359  0144B0  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 25360  0144B2  3428               	rlcf	i2___ftmul@f1+1,w,c
 25361  0144B4  362D               	rlcf	??i2___ftmul& (0+255),f,c
 25362  0144B6  E301               	bnc	u1450_41
 25363  0144B8  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 25364  0144BA                     u1450_41:
 25365  0144BA  502D               	movf	??i2___ftmul,w,c
 25366  0144BC  6E30               	movwf	i2___ftmul@exp,c
 25367  0144BE  5030               	movf	i2___ftmul@exp,w,c
 25368  0144C0  A4D8               	btfss	status,2,c
 25369  0144C2  D007               	goto	i2l1530
 25370  0144C4  0E00               	movlw	0
 25371  0144C6  6E27               	movwf	?i2___ftmul,c
 25372  0144C8  0E00               	movlw	0
 25373  0144CA  6E28               	movwf	?i2___ftmul+1,c
 25374  0144CC  0E00               	movlw	0
 25375  0144CE  6E29               	movwf	?i2___ftmul+2,c
 25376  0144D0  0012               	return	
 25377  0144D2                     i2l1530:
 25378  0144D2  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 25379  0144D6  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 25380  0144D8  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 25381  0144DA  342B               	rlcf	i2___ftmul@f2+1,w,c
 25382  0144DC  362D               	rlcf	??i2___ftmul& (0+255),f,c
 25383  0144DE  E301               	bnc	u1452_41
 25384  0144E0  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 25385  0144E2                     u1452_41:
 25386  0144E2  502D               	movf	??i2___ftmul,w,c
 25387  0144E4  6E35               	movwf	i2___ftmul@sign,c
 25388  0144E6  5035               	movf	i2___ftmul@sign,w,c
 25389  0144E8  A4D8               	btfss	status,2,c
 25390  0144EA  D007               	goto	i2l1532
 25391  0144EC  0E00               	movlw	0
 25392  0144EE  6E27               	movwf	?i2___ftmul,c
 25393  0144F0  0E00               	movlw	0
 25394  0144F2  6E28               	movwf	?i2___ftmul+1,c
 25395  0144F4  0E00               	movlw	0
 25396  0144F6  6E29               	movwf	?i2___ftmul+2,c
 25397  0144F8  0012               	return	
 25398  0144FA                     i2l1532:
 25399  0144FA  5035               	movf	i2___ftmul@sign,w,c
 25400  0144FC  0F7B               	addlw	123
 25401  0144FE  2630               	addwf	i2___ftmul@exp,f,c
 25402  014500  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 25403  014504  502C               	movf	i2___ftmul@f2+2,w,c
 25404  014506  1A35               	xorwf	i2___ftmul@sign,f,c
 25405  014508  0E80               	movlw	128
 25406  01450A  1635               	andwf	i2___ftmul@sign,f,c
 25407  01450C  8E28               	bsf	i2___ftmul@f1+1,7,c
 25408  01450E  8E2B               	bsf	i2___ftmul@f2+1,7,c
 25409  014510  0EFF               	movlw	255
 25410  014512  162A               	andwf	i2___ftmul@f2,f,c
 25411  014514  0EFF               	movlw	255
 25412  014516  162B               	andwf	i2___ftmul@f2+1,f,c
 25413  014518  0E00               	movlw	0
 25414  01451A  162C               	andwf	i2___ftmul@f2+2,f,c
 25415  01451C  0E00               	movlw	0
 25416  01451E  6E31               	movwf	i2___ftmul@f3_as_product,c
 25417  014520  0E00               	movlw	0
 25418  014522  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 25419  014524  0E00               	movlw	0
 25420  014526  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 25421  014528  0E07               	movlw	7
 25422  01452A  6E34               	movwf	i2___ftmul@cntr,c
 25423  01452C  A027               	btfss	i2___ftmul@f1,0,c
 25424  01452E  D006               	goto	i2l1534
 25425  014530  502A               	movf	i2___ftmul@f2,w,c
 25426  014532  2631               	addwf	i2___ftmul@f3_as_product,f,c
 25427  014534  502B               	movf	i2___ftmul@f2+1,w,c
 25428  014536  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 25429  014538  502C               	movf	i2___ftmul@f2+2,w,c
 25430  01453A  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 25431  01453C                     i2l1534:
 25432  01453C  90D8               	bcf	status,0,c
 25433  01453E  3229               	rrcf	i2___ftmul@f1+2,f,c
 25434  014540  3228               	rrcf	i2___ftmul@f1+1,f,c
 25435  014542  3227               	rrcf	i2___ftmul@f1,f,c
 25436  014544  90D8               	bcf	status,0,c
 25437  014546  362A               	rlcf	i2___ftmul@f2,f,c
 25438  014548  362B               	rlcf	i2___ftmul@f2+1,f,c
 25439  01454A  362C               	rlcf	i2___ftmul@f2+2,f,c
 25440  01454C  2E34               	decfsz	i2___ftmul@cntr,f,c
 25441  01454E  D7EE               	goto	i2l1533
 25442  014550  0E09               	movlw	9
 25443  014552  6E34               	movwf	i2___ftmul@cntr,c
 25444  014554  A027               	btfss	i2___ftmul@f1,0,c
 25445  014556  D006               	goto	i2l1537
 25446  014558  502A               	movf	i2___ftmul@f2,w,c
 25447  01455A  2631               	addwf	i2___ftmul@f3_as_product,f,c
 25448  01455C  502B               	movf	i2___ftmul@f2+1,w,c
 25449  01455E  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 25450  014560  502C               	movf	i2___ftmul@f2+2,w,c
 25451  014562  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 25452  014564                     i2l1537:
 25453  014564  90D8               	bcf	status,0,c
 25454  014566  3229               	rrcf	i2___ftmul@f1+2,f,c
 25455  014568  3228               	rrcf	i2___ftmul@f1+1,f,c
 25456  01456A  3227               	rrcf	i2___ftmul@f1,f,c
 25457  01456C  90D8               	bcf	status,0,c
 25458  01456E  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 25459  014570  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 25460  014572  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 25461  014574  2E34               	decfsz	i2___ftmul@cntr,f,c
 25462  014576  D7EE               	goto	i2l1536
 25463  014578  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 25464  01457C  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 25465  014580  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 25466  014584  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 25467  014588  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 25468  01458C  ECBC  F0A5         	call	i2___ftpack	;wreg free
 25469  014590  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 25470  014594  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 25471  014598  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 25472  01459C  0012               	return	
 25473  01459E                     __end_ofi2___ftmul:
 25474                           	opt stack 0
 25475                           tosu	equ	0xFFF
 25476                           tosh	equ	0xFFE
 25477                           tosl	equ	0xFFD
 25478                           pclatu	equ	0xFFB
 25479                           pclath	equ	0xFFA
 25480                           tblptru	equ	0xFF8
 25481                           tblptrh	equ	0xFF7
 25482                           tblptrl	equ	0xFF6
 25483                           tablat	equ	0xFF5
 25484                           prodh	equ	0xFF4
 25485                           prodl	equ	0xFF3
 25486                           intcon	equ	0xFF2
 25487                           postinc0	equ	0xFEE
 25488                           fsr0h	equ	0xFEA
 25489                           fsr0l	equ	0xFE9
 25490                           wreg	equ	0xFE8
 25491                           indf1	equ	0xFE7
 25492                           postdec1	equ	0xFE5
 25493                           fsr1h	equ	0xFE2
 25494                           fsr1l	equ	0xFE1
 25495                           bsr	equ	0xFE0
 25496                           indf2	equ	0xFDF
 25497                           postinc2	equ	0xFDE
 25498                           postdec2	equ	0xFDD
 25499                           fsr2h	equ	0xFDA
 25500                           fsr2l	equ	0xFD9
 25501                           status	equ	0xFD8
 25502                           
 25503 ;; *************** function i2___ftadd *****************
 25504 ;; Defined at:
 25505 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 25506 ;; Parameters:    Size  Location     Type
 25507 ;;  f1              3   63[COMRAM] float 
 25508 ;;  f2              3   66[COMRAM] float 
 25509 ;; Auto vars:     Size  Location     Type
 25510 ;;  __ftadd         1   74[COMRAM] unsigned char 
 25511 ;;  __ftadd         1   73[COMRAM] unsigned char 
 25512 ;;  __ftadd         1   72[COMRAM] unsigned char 
 25513 ;; Return value:  Size  Location     Type
 25514 ;;                  3   63[COMRAM] float 
 25515 ;; Registers used:
 25516 ;;		wreg, status,2, status,0, cstack
 25517 ;; Tracked objects:
 25518 ;;		On entry : 0/0
 25519 ;;		On exit  : 0/0
 25520 ;;		Unchanged: 0/0
 25521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25522 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25523 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25524 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25525 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25526 ;;Total ram usage:       12 bytes
 25527 ;; Hardware stack levels used:    1
 25528 ;; Hardware stack levels required when called:    1
 25529 ;; This function calls:
 25530 ;;		i2___ftpack
 25531 ;; This function is called by:
 25532 ;;		_peakToRMS
 25533 ;;		_ADC_postProcessingCallback
 25534 ;;		_acos
 25535 ;;		_asin
 25536 ;;		_atan
 25537 ;;		_eval_poly
 25538 ;;		_sin
 25539 ;;		_floor
 25540 ;;		i2_printf
 25541 ;;		i2___ftsub
 25542 ;; This function uses a non-reentrant model
 25543 ;;
 25544                           
 25545                           	psect	text108
 25546  0138B6                     __ptext108:
 25547                           	opt stack 0
 25548  0138B6                     i2___ftadd:
 25549                           	opt stack 13
 25550                           
 25551                           ;incstack = 0
 25552  0138B6  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 25553  0138BA  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 25554  0138BC  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 25555  0138BE  3441               	rlcf	i2___ftadd@f1+1,w,c
 25556  0138C0  3646               	rlcf	??i2___ftadd& (0+255),f,c
 25557  0138C2  E301               	bnc	u1429_41
 25558  0138C4  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 25559  0138C6                     u1429_41:
 25560  0138C6  5046               	movf	??i2___ftadd,w,c
 25561  0138C8  6E4B               	movwf	i2___ftadd@exp1,c
 25562  0138CA  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 25563  0138CE  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 25564  0138D0  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 25565  0138D2  3444               	rlcf	i2___ftadd@f2+1,w,c
 25566  0138D4  3646               	rlcf	??i2___ftadd& (0+255),f,c
 25567  0138D6  E301               	bnc	u1430_41
 25568  0138D8  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 25569  0138DA                     u1430_41:
 25570  0138DA  5046               	movf	??i2___ftadd,w,c
 25571  0138DC  6E4A               	movwf	i2___ftadd@exp2,c
 25572  0138DE  504B               	movf	i2___ftadd@exp1,w,c
 25573  0138E0  B4D8               	btfsc	status,2,c
 25574  0138E2  D00B               	goto	i2u1433_40
 25575  0138E4  504A               	movf	i2___ftadd@exp2,w,c
 25576  0138E6  5C4B               	subwf	i2___ftadd@exp1,w,c
 25577  0138E8  B0D8               	btfsc	status,0,c
 25578  0138EA  D00E               	goto	i2l1465
 25579  0138EC  504B               	movf	i2___ftadd@exp1,w,c
 25580  0138EE  0800               	sublw	0
 25581  0138F0  244A               	addwf	i2___ftadd@exp2,w,c
 25582  0138F2  6E46               	movwf	??i2___ftadd& (0+255),c
 25583  0138F4  0E18               	movlw	24
 25584  0138F6  6446               	cpfsgt	??i2___ftadd,c
 25585  0138F8  D007               	goto	i2l1465
 25586  0138FA                     i2u1433_40:
 25587  0138FA  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 25588  0138FE  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 25589  013902  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 25590  013906  0012               	return	
 25591  013908                     i2l1465:
 25592  013908  504A               	movf	i2___ftadd@exp2,w,c
 25593  01390A  B4D8               	btfsc	status,2,c
 25594  01390C  D00B               	goto	i2u1436_40
 25595  01390E  504B               	movf	i2___ftadd@exp1,w,c
 25596  013910  5C4A               	subwf	i2___ftadd@exp2,w,c
 25597  013912  B0D8               	btfsc	status,0,c
 25598  013914  D00E               	goto	i2l1469
 25599  013916  504A               	movf	i2___ftadd@exp2,w,c
 25600  013918  0800               	sublw	0
 25601  01391A  244B               	addwf	i2___ftadd@exp1,w,c
 25602  01391C  6E46               	movwf	??i2___ftadd& (0+255),c
 25603  01391E  0E18               	movlw	24
 25604  013920  6446               	cpfsgt	??i2___ftadd,c
 25605  013922  D007               	goto	i2l1469
 25606  013924                     i2u1436_40:
 25607  013924  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 25608  013928  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 25609  01392C  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 25610  013930  0012               	return	
 25611  013932                     i2l1469:
 25612  013932  0E06               	movlw	6
 25613  013934  6E49               	movwf	i2___ftadd@sign,c
 25614  013936  BE42               	btfsc	i2___ftadd@f1+2,7,c
 25615  013938  8E49               	bsf	i2___ftadd@sign,7,c
 25616  01393A  BE45               	btfsc	i2___ftadd@f2+2,7,c
 25617  01393C  8C49               	bsf	i2___ftadd@sign,6,c
 25618  01393E  8E41               	bsf	i2___ftadd@f1+1,7,c
 25619  013940  0EFF               	movlw	255
 25620  013942  1640               	andwf	i2___ftadd@f1,f,c
 25621  013944  0EFF               	movlw	255
 25622  013946  1641               	andwf	i2___ftadd@f1+1,f,c
 25623  013948  0E00               	movlw	0
 25624  01394A  1642               	andwf	i2___ftadd@f1+2,f,c
 25625  01394C  8E44               	bsf	i2___ftadd@f2+1,7,c
 25626  01394E  0EFF               	movlw	255
 25627  013950  1643               	andwf	i2___ftadd@f2,f,c
 25628  013952  0EFF               	movlw	255
 25629  013954  1644               	andwf	i2___ftadd@f2+1,f,c
 25630  013956  0E00               	movlw	0
 25631  013958  1645               	andwf	i2___ftadd@f2+2,f,c
 25632  01395A  504A               	movf	i2___ftadd@exp2,w,c
 25633  01395C  5C4B               	subwf	i2___ftadd@exp1,w,c
 25634  01395E  B0D8               	btfsc	status,0,c
 25635  013960  D01B               	goto	i2l1474
 25636  013962                     i2u1439_40:
 25637  013962  90D8               	bcf	status,0,c
 25638  013964  3643               	rlcf	i2___ftadd@f2,f,c
 25639  013966  3644               	rlcf	i2___ftadd@f2+1,f,c
 25640  013968  3645               	rlcf	i2___ftadd@f2+2,f,c
 25641  01396A  064A               	decf	i2___ftadd@exp2,f,c
 25642  01396C  504B               	movf	i2___ftadd@exp1,w,c
 25643  01396E  184A               	xorwf	i2___ftadd@exp2,w,c
 25644  013970  B4D8               	btfsc	status,2,c
 25645  013972  D00D               	goto	i2l1479
 25646  013974  0649               	decf	i2___ftadd@sign,f,c
 25647  013976  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 25648  01397A  0E07               	movlw	7
 25649  01397C  1646               	andwf	??i2___ftadd,f,c
 25650  01397E  B4D8               	btfsc	status,2,c
 25651  013980  D006               	goto	i2l1479
 25652  013982  D7EF               	goto	i2u1439_40
 25653  013984  90D8               	bcf	status,0,c
 25654  013986  3242               	rrcf	i2___ftadd@f1+2,f,c
 25655  013988  3241               	rrcf	i2___ftadd@f1+1,f,c
 25656  01398A  3240               	rrcf	i2___ftadd@f1,f,c
 25657  01398C  2A4B               	incf	i2___ftadd@exp1,f,c
 25658  01398E                     i2l1479:
 25659  01398E  504A               	movf	i2___ftadd@exp2,w,c
 25660  013990  184B               	xorwf	i2___ftadd@exp1,w,c
 25661  013992  B4D8               	btfsc	status,2,c
 25662  013994  D01F               	goto	i2u1446_40
 25663  013996  D7F6               	goto	i2l1480
 25664  013998                     i2l1474:
 25665  013998  504B               	movf	i2___ftadd@exp1,w,c
 25666  01399A  5C4A               	subwf	i2___ftadd@exp2,w,c
 25667  01399C  B0D8               	btfsc	status,0,c
 25668  01399E  D01A               	goto	i2u1446_40
 25669  0139A0                     i2u1443_40:
 25670  0139A0  90D8               	bcf	status,0,c
 25671  0139A2  3640               	rlcf	i2___ftadd@f1,f,c
 25672  0139A4  3641               	rlcf	i2___ftadd@f1+1,f,c
 25673  0139A6  3642               	rlcf	i2___ftadd@f1+2,f,c
 25674  0139A8  064B               	decf	i2___ftadd@exp1,f,c
 25675  0139AA  504B               	movf	i2___ftadd@exp1,w,c
 25676  0139AC  184A               	xorwf	i2___ftadd@exp2,w,c
 25677  0139AE  B4D8               	btfsc	status,2,c
 25678  0139B0  D00D               	goto	i2l1488
 25679  0139B2  0649               	decf	i2___ftadd@sign,f,c
 25680  0139B4  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 25681  0139B8  0E07               	movlw	7
 25682  0139BA  1646               	andwf	??i2___ftadd,f,c
 25683  0139BC  B4D8               	btfsc	status,2,c
 25684  0139BE  D006               	goto	i2l1488
 25685  0139C0  D7EF               	goto	i2u1443_40
 25686  0139C2  90D8               	bcf	status,0,c
 25687  0139C4  3245               	rrcf	i2___ftadd@f2+2,f,c
 25688  0139C6  3244               	rrcf	i2___ftadd@f2+1,f,c
 25689  0139C8  3243               	rrcf	i2___ftadd@f2,f,c
 25690  0139CA  2A4A               	incf	i2___ftadd@exp2,f,c
 25691  0139CC                     i2l1488:
 25692  0139CC  504A               	movf	i2___ftadd@exp2,w,c
 25693  0139CE  184B               	xorwf	i2___ftadd@exp1,w,c
 25694  0139D0  A4D8               	btfss	status,2,c
 25695  0139D2  D7F7               	goto	i2l1489
 25696  0139D4                     i2u1446_40:
 25697  0139D4  AE49               	btfss	i2___ftadd@sign,7,c
 25698  0139D6  D00C               	goto	i2l1491
 25699  0139D8  0EFF               	movlw	255
 25700  0139DA  1A40               	xorwf	i2___ftadd@f1,f,c
 25701  0139DC  0EFF               	movlw	255
 25702  0139DE  1A41               	xorwf	i2___ftadd@f1+1,f,c
 25703  0139E0  0EFF               	movlw	255
 25704  0139E2  1A42               	xorwf	i2___ftadd@f1+2,f,c
 25705  0139E4  0E01               	movlw	1
 25706  0139E6  2640               	addwf	i2___ftadd@f1,f,c
 25707  0139E8  0E00               	movlw	0
 25708  0139EA  2241               	addwfc	i2___ftadd@f1+1,f,c
 25709  0139EC  0E00               	movlw	0
 25710  0139EE  2242               	addwfc	i2___ftadd@f1+2,f,c
 25711  0139F0                     i2l1491:
 25712  0139F0  AC49               	btfss	i2___ftadd@sign,6,c
 25713  0139F2  D00C               	goto	i2l1492
 25714  0139F4  0EFF               	movlw	255
 25715  0139F6  1A43               	xorwf	i2___ftadd@f2,f,c
 25716  0139F8  0EFF               	movlw	255
 25717  0139FA  1A44               	xorwf	i2___ftadd@f2+1,f,c
 25718  0139FC  0EFF               	movlw	255
 25719  0139FE  1A45               	xorwf	i2___ftadd@f2+2,f,c
 25720  013A00  0E01               	movlw	1
 25721  013A02  2643               	addwf	i2___ftadd@f2,f,c
 25722  013A04  0E00               	movlw	0
 25723  013A06  2244               	addwfc	i2___ftadd@f2+1,f,c
 25724  013A08  0E00               	movlw	0
 25725  013A0A  2245               	addwfc	i2___ftadd@f2+2,f,c
 25726  013A0C                     i2l1492:
 25727  013A0C  0E00               	movlw	0
 25728  013A0E  6E49               	movwf	i2___ftadd@sign,c
 25729  013A10  5040               	movf	i2___ftadd@f1,w,c
 25730  013A12  2643               	addwf	i2___ftadd@f2,f,c
 25731  013A14  5041               	movf	i2___ftadd@f1+1,w,c
 25732  013A16  2244               	addwfc	i2___ftadd@f2+1,f,c
 25733  013A18  5042               	movf	i2___ftadd@f1+2,w,c
 25734  013A1A  2245               	addwfc	i2___ftadd@f2+2,f,c
 25735  013A1C  AE45               	btfss	i2___ftadd@f2+2,7,c
 25736  013A1E  D00E               	goto	i2l1493
 25737  013A20  0EFF               	movlw	255
 25738  013A22  1A43               	xorwf	i2___ftadd@f2,f,c
 25739  013A24  0EFF               	movlw	255
 25740  013A26  1A44               	xorwf	i2___ftadd@f2+1,f,c
 25741  013A28  0EFF               	movlw	255
 25742  013A2A  1A45               	xorwf	i2___ftadd@f2+2,f,c
 25743  013A2C  0E01               	movlw	1
 25744  013A2E  2643               	addwf	i2___ftadd@f2,f,c
 25745  013A30  0E00               	movlw	0
 25746  013A32  2244               	addwfc	i2___ftadd@f2+1,f,c
 25747  013A34  0E00               	movlw	0
 25748  013A36  2245               	addwfc	i2___ftadd@f2+2,f,c
 25749  013A38  0E01               	movlw	1
 25750  013A3A  6E49               	movwf	i2___ftadd@sign,c
 25751  013A3C                     i2l1493:
 25752  013A3C  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 25753  013A40  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 25754  013A44  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 25755  013A48  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 25756  013A4C  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 25757  013A50  ECBC  F0A5         	call	i2___ftpack	;wreg free
 25758  013A54  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 25759  013A58  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 25760  013A5C  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 25761  013A60  0012               	return	
 25762  013A62                     __end_ofi2___ftadd:
 25763                           	opt stack 0
 25764                           tosu	equ	0xFFF
 25765                           tosh	equ	0xFFE
 25766                           tosl	equ	0xFFD
 25767                           pclatu	equ	0xFFB
 25768                           pclath	equ	0xFFA
 25769                           tblptru	equ	0xFF8
 25770                           tblptrh	equ	0xFF7
 25771                           tblptrl	equ	0xFF6
 25772                           tablat	equ	0xFF5
 25773                           prodh	equ	0xFF4
 25774                           prodl	equ	0xFF3
 25775                           intcon	equ	0xFF2
 25776                           postinc0	equ	0xFEE
 25777                           fsr0h	equ	0xFEA
 25778                           fsr0l	equ	0xFE9
 25779                           wreg	equ	0xFE8
 25780                           indf1	equ	0xFE7
 25781                           postdec1	equ	0xFE5
 25782                           fsr1h	equ	0xFE2
 25783                           fsr1l	equ	0xFE1
 25784                           bsr	equ	0xFE0
 25785                           indf2	equ	0xFDF
 25786                           postinc2	equ	0xFDE
 25787                           postdec2	equ	0xFDD
 25788                           fsr2h	equ	0xFDA
 25789                           fsr2l	equ	0xFD9
 25790                           status	equ	0xFD8
 25791                           
 25792 ;; *************** function ___lwtoft *****************
 25793 ;; Defined at:
 25794 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 25795 ;; Parameters:    Size  Location     Type
 25796 ;;  c               2    8[COMRAM] unsigned int 
 25797 ;; Auto vars:     Size  Location     Type
 25798 ;;		None
 25799 ;; Return value:  Size  Location     Type
 25800 ;;                  3    8[COMRAM] float 
 25801 ;; Registers used:
 25802 ;;		wreg, status,2, status,0, cstack
 25803 ;; Tracked objects:
 25804 ;;		On entry : 0/0
 25805 ;;		On exit  : 0/0
 25806 ;;		Unchanged: 0/0
 25807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25808 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25811 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25812 ;;Total ram usage:        3 bytes
 25813 ;; Hardware stack levels used:    1
 25814 ;; Hardware stack levels required when called:    1
 25815 ;; This function calls:
 25816 ;;		i2___ftpack
 25817 ;; This function is called by:
 25818 ;;		_ADC_postProcessingCallback
 25819 ;; This function uses a non-reentrant model
 25820 ;;
 25821                           
 25822                           	psect	text109
 25823  015DD2                     __ptext109:
 25824                           	opt stack 0
 25825  015DD2                     ___lwtoft:
 25826                           	opt stack 14
 25827                           
 25828                           ;incstack = 0
 25829  015DD2  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 25830  015DD6  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 25831  015DDA  6A03               	clrf	i2___ftpack@arg+2,c
 25832  015DDC  0E8E               	movlw	142
 25833  015DDE  6E04               	movwf	i2___ftpack@exp,c
 25834  015DE0  0E00               	movlw	0
 25835  015DE2  6E05               	movwf	i2___ftpack@sign,c
 25836  015DE4  ECBC  F0A5         	call	i2___ftpack	;wreg free
 25837  015DE8  C001  F009         	movff	?i2___ftpack,?___lwtoft
 25838  015DEC  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 25839  015DF0  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 25840  015DF4  0012               	return	
 25841  015DF6                     __end_of___lwtoft:
 25842                           	opt stack 0
 25843                           tosu	equ	0xFFF
 25844                           tosh	equ	0xFFE
 25845                           tosl	equ	0xFFD
 25846                           pclatu	equ	0xFFB
 25847                           pclath	equ	0xFFA
 25848                           tblptru	equ	0xFF8
 25849                           tblptrh	equ	0xFF7
 25850                           tblptrl	equ	0xFF6
 25851                           tablat	equ	0xFF5
 25852                           prodh	equ	0xFF4
 25853                           prodl	equ	0xFF3
 25854                           intcon	equ	0xFF2
 25855                           postinc0	equ	0xFEE
 25856                           fsr0h	equ	0xFEA
 25857                           fsr0l	equ	0xFE9
 25858                           wreg	equ	0xFE8
 25859                           indf1	equ	0xFE7
 25860                           postdec1	equ	0xFE5
 25861                           fsr1h	equ	0xFE2
 25862                           fsr1l	equ	0xFE1
 25863                           bsr	equ	0xFE0
 25864                           indf2	equ	0xFDF
 25865                           postinc2	equ	0xFDE
 25866                           postdec2	equ	0xFDD
 25867                           fsr2h	equ	0xFDA
 25868                           fsr2l	equ	0xFD9
 25869                           status	equ	0xFD8
 25870                           
 25871 ;; *************** function i2___ftpack *****************
 25872 ;; Defined at:
 25873 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 25874 ;; Parameters:    Size  Location     Type
 25875 ;;  arg             3    0[COMRAM] unsigned um
 25876 ;;  exp             1    3[COMRAM] unsigned char 
 25877 ;;  sign            1    4[COMRAM] unsigned char 
 25878 ;; Auto vars:     Size  Location     Type
 25879 ;;		None
 25880 ;; Return value:  Size  Location     Type
 25881 ;;                  3    0[COMRAM] float 
 25882 ;; Registers used:
 25883 ;;		wreg, status,2, status,0
 25884 ;; Tracked objects:
 25885 ;;		On entry : 0/0
 25886 ;;		On exit  : 0/0
 25887 ;;		Unchanged: 0/0
 25888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25889 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25892 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25893 ;;Total ram usage:        8 bytes
 25894 ;; Hardware stack levels used:    1
 25895 ;; This function calls:
 25896 ;;		Nothing
 25897 ;; This function is called by:
 25898 ;;		___altoft
 25899 ;;		___lwtoft
 25900 ;;		i2___ftadd
 25901 ;;		i2___ftdiv
 25902 ;;		i2___ftmul
 25903 ;;		i2___lltoft
 25904 ;; This function uses a non-reentrant model
 25905 ;;
 25906                           
 25907                           	psect	text110
 25908  014B78                     __ptext110:
 25909                           	opt stack 0
 25910  014B78                     i2___ftpack:
 25911                           	opt stack 13
 25912                           
 25913                           ;incstack = 0
 25914  014B78  5004               	movf	i2___ftpack@exp,w,c
 25915  014B7A  B4D8               	btfsc	status,2,c
 25916  014B7C  D005               	goto	i2u1422_40
 25917  014B7E  5001               	movf	i2___ftpack@arg,w,c
 25918  014B80  1002               	iorwf	i2___ftpack@arg+1,w,c
 25919  014B82  1003               	iorwf	i2___ftpack@arg+2,w,c
 25920  014B84  A4D8               	btfss	status,2,c
 25921  014B86  D00C               	goto	i2l1434
 25922  014B88                     i2u1422_40:
 25923  014B88  0E00               	movlw	0
 25924  014B8A  6E01               	movwf	?i2___ftpack,c
 25925  014B8C  0E00               	movlw	0
 25926  014B8E  6E02               	movwf	?i2___ftpack+1,c
 25927  014B90  0E00               	movlw	0
 25928  014B92  6E03               	movwf	?i2___ftpack+2,c
 25929  014B94  0012               	return	
 25930  014B96  2A04               	incf	i2___ftpack@exp,f,c
 25931  014B98  90D8               	bcf	status,0,c
 25932  014B9A  3203               	rrcf	i2___ftpack@arg+2,f,c
 25933  014B9C  3202               	rrcf	i2___ftpack@arg+1,f,c
 25934  014B9E  3201               	rrcf	i2___ftpack@arg,f,c
 25935  014BA0                     i2l1434:
 25936  014BA0  0E00               	movlw	0
 25937  014BA2  1401               	andwf	i2___ftpack@arg,w,c
 25938  014BA4  6E06               	movwf	??i2___ftpack& (0+255),c
 25939  014BA6  0E00               	movlw	0
 25940  014BA8  1402               	andwf	i2___ftpack@arg+1,w,c
 25941  014BAA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 25942  014BAC  0EFE               	movlw	254
 25943  014BAE  1403               	andwf	i2___ftpack@arg+2,w,c
 25944  014BB0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 25945  014BB2  5006               	movf	??i2___ftpack,w,c
 25946  014BB4  1007               	iorwf	??i2___ftpack+1,w,c
 25947  014BB6  1008               	iorwf	??i2___ftpack+2,w,c
 25948  014BB8  B4D8               	btfsc	status,2,c
 25949  014BBA  D00C               	goto	i2l1437
 25950  014BBC  D7EC               	goto	i2l1435
 25951  014BBE  2A04               	incf	i2___ftpack@exp,f,c
 25952  014BC0  0E01               	movlw	1
 25953  014BC2  2601               	addwf	i2___ftpack@arg,f,c
 25954  014BC4  0E00               	movlw	0
 25955  014BC6  2202               	addwfc	i2___ftpack@arg+1,f,c
 25956  014BC8  0E00               	movlw	0
 25957  014BCA  2203               	addwfc	i2___ftpack@arg+2,f,c
 25958  014BCC  90D8               	bcf	status,0,c
 25959  014BCE  3203               	rrcf	i2___ftpack@arg+2,f,c
 25960  014BD0  3202               	rrcf	i2___ftpack@arg+1,f,c
 25961  014BD2  3201               	rrcf	i2___ftpack@arg,f,c
 25962  014BD4                     i2l1437:
 25963  014BD4  0E00               	movlw	0
 25964  014BD6  1401               	andwf	i2___ftpack@arg,w,c
 25965  014BD8  6E06               	movwf	??i2___ftpack& (0+255),c
 25966  014BDA  0E00               	movlw	0
 25967  014BDC  1402               	andwf	i2___ftpack@arg+1,w,c
 25968  014BDE  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 25969  014BE0  0EFF               	movlw	255
 25970  014BE2  1403               	andwf	i2___ftpack@arg+2,w,c
 25971  014BE4  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 25972  014BE6  5006               	movf	??i2___ftpack,w,c
 25973  014BE8  1007               	iorwf	??i2___ftpack+1,w,c
 25974  014BEA  1008               	iorwf	??i2___ftpack+2,w,c
 25975  014BEC  B4D8               	btfsc	status,2,c
 25976  014BEE  D006               	goto	i2l1440
 25977  014BF0  D7E6               	goto	i2l1438
 25978  014BF2  0604               	decf	i2___ftpack@exp,f,c
 25979  014BF4  90D8               	bcf	status,0,c
 25980  014BF6  3601               	rlcf	i2___ftpack@arg,f,c
 25981  014BF8  3602               	rlcf	i2___ftpack@arg+1,f,c
 25982  014BFA  3603               	rlcf	i2___ftpack@arg+2,f,c
 25983  014BFC                     i2l1440:
 25984  014BFC  BE02               	btfsc	i2___ftpack@arg+1,7,c
 25985  014BFE  D003               	goto	i2u1426_40
 25986  014C00  0E02               	movlw	2
 25987  014C02  6004               	cpfslt	i2___ftpack@exp,c
 25988  014C04  D7F6               	goto	i2l1441
 25989  014C06                     i2u1426_40:
 25990  014C06  A004               	btfss	i2___ftpack@exp,0,c
 25991  014C08  9E02               	bcf	i2___ftpack@arg+1,7,c
 25992  014C0A  90D8               	bcf	status,0,c
 25993  014C0C  3204               	rrcf	i2___ftpack@exp,f,c
 25994  014C0E  5004               	movf	i2___ftpack@exp,w,c
 25995  014C10  1203               	iorwf	i2___ftpack@arg+2,f,c
 25996  014C12  5005               	movf	i2___ftpack@sign,w,c
 25997  014C14  A4D8               	btfss	status,2,c
 25998  014C16  8E03               	bsf	i2___ftpack@arg+2,7,c
 25999  014C18  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 26000  014C1C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 26001  014C20  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 26002  014C24  0012               	return	
 26003  014C26                     __end_ofi2___ftpack:
 26004                           	opt stack 0
 26005                           tosu	equ	0xFFF
 26006                           tosh	equ	0xFFE
 26007                           tosl	equ	0xFFD
 26008                           pclatu	equ	0xFFB
 26009                           pclath	equ	0xFFA
 26010                           tblptru	equ	0xFF8
 26011                           tblptrh	equ	0xFF7
 26012                           tblptrl	equ	0xFF6
 26013                           tablat	equ	0xFF5
 26014                           prodh	equ	0xFF4
 26015                           prodl	equ	0xFF3
 26016                           intcon	equ	0xFF2
 26017                           postinc0	equ	0xFEE
 26018                           fsr0h	equ	0xFEA
 26019                           fsr0l	equ	0xFE9
 26020                           wreg	equ	0xFE8
 26021                           indf1	equ	0xFE7
 26022                           postdec1	equ	0xFE5
 26023                           fsr1h	equ	0xFE2
 26024                           fsr1l	equ	0xFE1
 26025                           bsr	equ	0xFE0
 26026                           indf2	equ	0xFDF
 26027                           postinc2	equ	0xFDE
 26028                           postdec2	equ	0xFDD
 26029                           fsr2h	equ	0xFDA
 26030                           fsr2l	equ	0xFD9
 26031                           status	equ	0xFD8
 26032                           
 26033 ;; *************** function _ADCC_GetConversionResult *****************
 26034 ;; Defined at:
 26035 ;;		line 130 in file "mcc_generated_files/adcc.c"
 26036 ;; Parameters:    Size  Location     Type
 26037 ;;		None
 26038 ;; Auto vars:     Size  Location     Type
 26039 ;;		None
 26040 ;; Return value:  Size  Location     Type
 26041 ;;                  2    0[COMRAM] unsigned int 
 26042 ;; Registers used:
 26043 ;;		wreg, status,2, status,0
 26044 ;; Tracked objects:
 26045 ;;		On entry : 0/0
 26046 ;;		On exit  : 0/0
 26047 ;;		Unchanged: 0/0
 26048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26053 ;;Total ram usage:        4 bytes
 26054 ;; Hardware stack levels used:    1
 26055 ;; This function calls:
 26056 ;;		Nothing
 26057 ;; This function is called by:
 26058 ;;		_ADC_postProcessingCallback
 26059 ;; This function uses a non-reentrant model
 26060 ;;
 26061                           
 26062                           	psect	text111
 26063  015E8A                     __ptext111:
 26064                           	opt stack 0
 26065  015E8A                     _ADCC_GetConversionResult:
 26066                           	opt stack 15
 26067                           
 26068                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 26069                           
 26070                           ;incstack = 0
 26071  015E8A  5064               	movf	3940,w,c	;volatile
 26072  015E8C  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 26073  015E8E  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 26074  015E90  5063               	movf	3939,w,c	;volatile
 26075  015E92  2403               	addwf	??_ADCC_GetConversionResult,w,c
 26076  015E94  6E01               	movwf	?_ADCC_GetConversionResult,c
 26077  015E96  0E00               	movlw	0
 26078  015E98  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 26079  015E9A  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 26080  015E9C  0012               	return	
 26081  015E9E                     __end_of_ADCC_GetConversionResult:
 26082                           	opt stack 0
 26083                           tosu	equ	0xFFF
 26084                           tosh	equ	0xFFE
 26085                           tosl	equ	0xFFD
 26086                           pclatu	equ	0xFFB
 26087                           pclath	equ	0xFFA
 26088                           tblptru	equ	0xFF8
 26089                           tblptrh	equ	0xFF7
 26090                           tblptrl	equ	0xFF6
 26091                           tablat	equ	0xFF5
 26092                           prodh	equ	0xFF4
 26093                           prodl	equ	0xFF3
 26094                           intcon	equ	0xFF2
 26095                           postinc0	equ	0xFEE
 26096                           fsr0h	equ	0xFEA
 26097                           fsr0l	equ	0xFE9
 26098                           wreg	equ	0xFE8
 26099                           indf1	equ	0xFE7
 26100                           postdec1	equ	0xFE5
 26101                           fsr1h	equ	0xFE2
 26102                           fsr1l	equ	0xFE1
 26103                           bsr	equ	0xFE0
 26104                           indf2	equ	0xFDF
 26105                           postinc2	equ	0xFDE
 26106                           postdec2	equ	0xFDD
 26107                           fsr2h	equ	0xFDA
 26108                           fsr2l	equ	0xFD9
 26109                           status	equ	0xFD8
 26110                           tosu	equ	0xFFF
 26111                           tosh	equ	0xFFE
 26112                           tosl	equ	0xFFD
 26113                           pclatu	equ	0xFFB
 26114                           pclath	equ	0xFFA
 26115                           tblptru	equ	0xFF8
 26116                           tblptrh	equ	0xFF7
 26117                           tblptrl	equ	0xFF6
 26118                           tablat	equ	0xFF5
 26119                           prodh	equ	0xFF4
 26120                           prodl	equ	0xFF3
 26121                           intcon	equ	0xFF2
 26122                           postinc0	equ	0xFEE
 26123                           fsr0h	equ	0xFEA
 26124                           fsr0l	equ	0xFE9
 26125                           wreg	equ	0xFE8
 26126                           indf1	equ	0xFE7
 26127                           postdec1	equ	0xFE5
 26128                           fsr1h	equ	0xFE2
 26129                           fsr1l	equ	0xFE1
 26130                           bsr	equ	0xFE0
 26131                           indf2	equ	0xFDF
 26132                           postinc2	equ	0xFDE
 26133                           postdec2	equ	0xFDD
 26134                           fsr2h	equ	0xFDA
 26135                           fsr2l	equ	0xFD9
 26136                           status	equ	0xFD8
 26137                           
 26138                           	psect	text112
 26139  000000                     __ptext112:
 26140                           	opt stack 0
 26141                           tosu	equ	0xFFF
 26142                           tosh	equ	0xFFE
 26143                           tosl	equ	0xFFD
 26144                           pclatu	equ	0xFFB
 26145                           pclath	equ	0xFFA
 26146                           tblptru	equ	0xFF8
 26147                           tblptrh	equ	0xFF7
 26148                           tblptrl	equ	0xFF6
 26149                           tablat	equ	0xFF5
 26150                           prodh	equ	0xFF4
 26151                           prodl	equ	0xFF3
 26152                           intcon	equ	0xFF2
 26153                           postinc0	equ	0xFEE
 26154                           fsr0h	equ	0xFEA
 26155                           fsr0l	equ	0xFE9
 26156                           wreg	equ	0xFE8
 26157                           indf1	equ	0xFE7
 26158                           postdec1	equ	0xFE5
 26159                           fsr1h	equ	0xFE2
 26160                           fsr1l	equ	0xFE1
 26161                           bsr	equ	0xFE0
 26162                           indf2	equ	0xFDF
 26163                           postinc2	equ	0xFDE
 26164                           postdec2	equ	0xFDD
 26165                           fsr2h	equ	0xFDA
 26166                           fsr2l	equ	0xFD9
 26167                           status	equ	0xFD8
 26168                           
 26169                           	psect	rparam
 26170  0000                     tosu	equ	0xFFF
 26171                           tosh	equ	0xFFE
 26172                           tosl	equ	0xFFD
 26173                           pclatu	equ	0xFFB
 26174                           pclath	equ	0xFFA
 26175                           tblptru	equ	0xFF8
 26176                           tblptrh	equ	0xFF7
 26177                           tblptrl	equ	0xFF6
 26178                           tablat	equ	0xFF5
 26179                           prodh	equ	0xFF4
 26180                           prodl	equ	0xFF3
 26181                           intcon	equ	0xFF2
 26182                           postinc0	equ	0xFEE
 26183                           fsr0h	equ	0xFEA
 26184                           fsr0l	equ	0xFE9
 26185                           wreg	equ	0xFE8
 26186                           indf1	equ	0xFE7
 26187                           postdec1	equ	0xFE5
 26188                           fsr1h	equ	0xFE2
 26189                           fsr1l	equ	0xFE1
 26190                           bsr	equ	0xFE0
 26191                           indf2	equ	0xFDF
 26192                           postinc2	equ	0xFDE
 26193                           postdec2	equ	0xFDD
 26194                           fsr2h	equ	0xFDA
 26195                           fsr2l	equ	0xFD9
 26196                           status	equ	0xFD8
 26197                           
 26198                           	psect	temp
 26199  00005E                     btemp:
 26200                           	opt stack 0
 26201  00005E                     	ds	1
 26202  0000                     int$flags	set	btemp
 26203  0000                     wtemp6	set	btemp+1
 26204                           tosu	equ	0xFFF
 26205                           tosh	equ	0xFFE
 26206                           tosl	equ	0xFFD
 26207                           pclatu	equ	0xFFB
 26208                           pclath	equ	0xFFA
 26209                           tblptru	equ	0xFF8
 26210                           tblptrh	equ	0xFF7
 26211                           tblptrl	equ	0xFF6
 26212                           tablat	equ	0xFF5
 26213                           prodh	equ	0xFF4
 26214                           prodl	equ	0xFF3
 26215                           intcon	equ	0xFF2
 26216                           postinc0	equ	0xFEE
 26217                           fsr0h	equ	0xFEA
 26218                           fsr0l	equ	0xFE9
 26219                           wreg	equ	0xFE8
 26220                           indf1	equ	0xFE7
 26221                           postdec1	equ	0xFE5
 26222                           fsr1h	equ	0xFE2
 26223                           fsr1l	equ	0xFE1
 26224                           bsr	equ	0xFE0
 26225                           indf2	equ	0xFDF
 26226                           postinc2	equ	0xFDE
 26227                           postdec2	equ	0xFDD
 26228                           fsr2h	equ	0xFDA
 26229                           fsr2l	equ	0xFD9
 26230                           status	equ	0xFD8


Data Sizes:
    Strings     2803
    Constant    178
    Data        6
    BSS         261
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    101     140
    BANK1           256    184     221
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_73(CODE[24]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_73(CODE[24]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_73(CODE[24]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_73(CODE[24]), line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_80(CODE[5]), STR_78(CODE[9]), STR_71(CODE[13]), STR_69(CODE[12]), 
		 -> STR_67(CODE[16]), STR_65(CODE[15]), STR_63(CODE[21]), STR_61(CODE[21]), 
		 -> STR_59(CODE[26]), STR_57(CODE[13]), STR_55(CODE[18]), STR_53(CODE[15]), 
		 -> STR_51(CODE[16]), STR_48(CODE[4]), STR_47(CODE[6]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1152
		 -> STR_86(CODE[30]), STR_85(CODE[23]), STR_84(CODE[40]), STR_83(CODE[30]), 
		 -> STR_82(CODE[33]), STR_81(CODE[1152]), STR_79(CODE[58]), STR_77(CODE[63]), 
		 -> STR_76(CODE[37]), STR_75(CODE[102]), STR_74(CODE[86]), STR_72(CODE[25]), 
		 -> STR_70(CODE[24]), STR_68(CODE[41]), STR_66(CODE[40]), STR_64(CODE[34]), 
		 -> STR_62(CODE[34]), STR_60(CODE[32]), STR_58(CODE[56]), STR_56(CODE[34]), 
		 -> STR_54(CODE[34]), STR_52(CODE[35]), STR_50(CODE[47]), STR_49(CODE[17]), 
		 -> STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), 
		 -> STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  631574
                                            182 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   80385
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  378281
                                            173 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       14    12      2  377553
                                            159 BANK1     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                               _atoi
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   90894
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   90894
                                            141 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   80385
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3193
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4221
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   80385
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              44    36      8   80385
                                            100 BANK1     41    33      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   17856
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   17577
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3698
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9231
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     781
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7054
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6308
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  331332
                                             83 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   63601
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           38    36      2   63601
                                              6 BANK0     35    33      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13387
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   12892
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     451
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  267491
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         13    13      0  267491
                                             70 BANK0     13    13      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  183235
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   87919
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   80582
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   16787
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   40885
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   62849
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   58157
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6552
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12065
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   17902
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7392
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    5905
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2397
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C0      10       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      DD       7       86.3%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     65      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     286       8        0.0%
DATA                 0      0     286       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 01 13:42:06 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 5F2A  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 5E68                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 5F80                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 4B78  
               __end_of_heartbeatTimerCallback 5C9A                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 56C2  
                                 ___ftadd@sign 0134                                            l370 5A64  
                                          l374 59AC                                            l375 59AA  
                                          l367 5A3C                                            l368 5A3A  
                                          l377 59C0                                            l378 59E6  
                                          l379 59E4                                            l820 4150  
                                          l821 4122                                            l815 40CC  
                                          l817 4108                                            l850 26CA  
                                          l818 40EC                                            l851 26E2  
                                          l860 27CC                                            l844 2712  
                                          l852 26FA                                            l940 1474  
                                          l932 1314                                            l924 1208  
                                          l853 282C                                            l861 27E4  
                                          l845 266A                                            l870 28DA  
                                          l862 27FC                                            l854 2754  
                                          l846 273C                                            l950 160E  
                                          l942 14CC                                            l934 136C  
                                          l926 1244                                            l871 28F2  
                                          l855 2862                                            l863 2814  
                                          l847 2682                                            l864 2952  
                                          l872 290A                                            l856 276C  
                                          l848 269A                                            l952 165E  
                                          l944 1524                                            l936 13C4  
                                          l928 12BC                                            l776 5316  
                                          l873 2922                                            l865 287A  
                                          l857 2784                                            l849 26B2  
                                          l866 2988                                            l874 293A  
                                          l858 279C                                            l962 18A2  
                                          l954 1846                                            l946 1572  
                                          l938 141C                                            l867 2892  
                                          l859 27B4                                            l955 1696  
                                          l868 28AA                                            l948 15C2  
                                          l869 28C2                                            l957 1742  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00C8                                            _Vpk 00E5  
                                          _sin 3122                     currentMeasuredToPeak@Angle 0076  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000            __size_of_ADC_postProcessingCallback 040E  
                                 __CFG_ZCD$OFF 000000                                   ___ftdiv@cntr 0140  
                                 ___ftdiv@sign 0145                                           l1110 056C  
                                         l1111 04D8                                           l1120 0618  
                                         l1113 0586                                           l1105 047A  
                                         l1050 2B18                                           l1130 07D4  
                                         l1122 071A                                           l1114 0578  
                                         l1123 070C                                           l1060 1B82  
                                         l1132 07F4                                           l1116 05AA  
                                         l1053 2BFA                                           l1061 1CF8  
                                         l1125 075E                                           l1117 05AE  
                                         l1134 0898                                           l1126 0776  
                                         l1118 05C6                                           l1070 00B8  
                                         l1063 1DBC                                           l1135 0810  
                                         l1119 0700                                           l1071 0064  
                                         l1056 1BAE                                           l1057 1ABE  
                                         l1081 00F6                                           l1402 3E7A  
                                         l1074 014C                                           l1091 0284  
                                         l1083 0128                                           l1067 000E  
                                         l1404 3E98                                           l1092 02EC  
                                         l1084 0114                                           l1068 0020  
                                         l1500 45F0                                           l1340 4926  
                                         l1405 3EDA                                           l1077 00F2  
                                         l1069 00E4                                           l1501 462E  
                                         l1414 3F6C                                           l1406 3F0A  
                                         l1510 3CB0                                           l1094 0312  
                                         l1078 019A                                           l1086 013A  
                                         l1502 4654                                           l1342 496E  
                                         l1415 3F60                                           l1087 0724  
                                         l1095 0350                                           l1440 4B4E  
                                         l1408 3F48                                           l1512 3CEC  
                                         l1096 0414                                           l1088 01AE  
                                         l1441 4B44                                           l1409 3F38  
                                         l1513 3CDC                                           l1361 4FF4  
                                         l1089 01F0                                           l1345 49BE  
                                         l1434 4AF2                                           l1602 548C  
                                         l1506 3C22                                           l1362 4FEC  
                                         l1530 42EA                                           l1346 4980  
                                         l1523 4DA4                                           l1435 4AE8  
                                         l1603 5480                                           l1371 5338  
                                         l1099 03BE                                           l1339 492C  
                                         l1524 4DD4                                           l1508 3C4E  
                                         l1380 538A                                           l1372 5344  
                                         l1532 4312                                           l1348 49F2  
                                         l1541 5D54                                           l1437 4B26  
                                         l1613 5678                                           l1509 3C88  
                                         l1365 5014                                           l1533 4344  
                                         l1438 4B10                                           l1606 54B4  
                                         l1614 566C                                           l1518 3D10  
                                         l1366 501E                                           l1358 4FC6  
                                         l1374 535A                                           l1534 4354  
                                         l1551 41F6                                           l1607 54C2  
                                         l1519 3D04                                           l1367 502C  
                                         l1359 4FD6                                           l1375 5352  
                                         l1480 37D8                                           l1560 4286  
                                         l1536 436C                                           l1465 375C  
                                         l1553 426E                                           l1537 437C  
                                         l1474 37EC                                           l1562 42AE  
                                         l1554 425E                                           l1378 5372  
                                         l1386 5B10                                           l1491 3844  
                                         l1547 5A8E                                           l1379 537C  
                                         l1492 3860                                           l1820 5938  
                                         l1493 3890                                           l1469 3786  
                                         l1821 592E                                           l1566 5E10  
                                         l1910 5B50                                           l1479 37E2  
                                         l1559 4292                                           l1488 3820  
                                         l1592 5066                                           l1489 3816  
                                         l1593 505A                                           l1817 591E  
                                         l1841 540E                                           l1498 45C8  
                                         l1826 587C                                           l1834 572E  
                                         l1818 5918                                           l1842 543E  
                                         l1827 5872                                           l1835 5728  
                                         l1915 4E78                                           l1596 509A  
                                         l1916 4E06                                           l1844 545A  
                                         l1597 50A8                                           l1917 4E70  
                                         l1845 544A                           _ADCC_StartConversion 5F54  
                                         l1856 4F8E                                           l1857 4F26  
                                         l1858 4F62                                           l8621 0350  
                                         l7577 4E00                                           ?_sin 0066  
                                         l8629 0398                                           l8751 0810  
                                         l8727 077A                                           l8559 0114  
                                         l9199 49BA                                           l8673 0578  
                                         l8649 047E                                           l8769 544A  
                                         l9753 16F8                                           l9737 1686  
                                         l9755 1742                                           l9747 16C4  
                                         l8973 4E06                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC1                                           STR_2 FFAC  
                                         STR_3 FFB5                                           STR_4 F98B  
                                         STR_6 FFAC                                           STR_7 FFB5  
                                         STR_9 FFB9                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 017F  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           u9021 42D2  
                                         u9041 42FA                                           u9130 4FF8  
                                         u8430 4ADA                                           u9500 3D16  
                                         u9421 3C06                                           u8470 4B58  
                                         u9190 535E                                           u9441 3C32  
                                         u8811 371A                                           u8821 372E  
                                         u8910 37B6                                           u9711 41DA  
                                         u9800 506A                                           u8850 374E  
                                         u9730 4214                                           u9570 3F72  
                                         _PLLR 007230                                           u8950 37F4  
                                         u9830 5490                                           u9735 420C  
                                         u8880 3778                                           u9770 4298  
                                         u8980 3828                                           u9950 004C  
                                         u9970 009C                                           u9980 00DA  
                                         u9957 0042                                           _TMR6 000FAF  
                                         u9977 0092                                           u9987 00D0  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 5D3C  
                                         _Irms 01C2                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 59A4                                           _Vrms 01BF  
                                         _acos 5776                                           _fabs 5C3C  
                                         _atan 3546                                           _asin 2EB8  
                                         _atoi 4924                                           _main 52B0  
                                         _line 0280                                   ___ftpack@arg 0117  
                                 ___ftpack@exp 011A                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005E                                           _sqrt 3A62  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 01D4  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 2238  
                 __end_of_EUSART2_Transmit_ISR 5BA2                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 5F78                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 0046  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01D6  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 5E6E  
                     ?_terminal_textAttributes 018D                              ??_TMR7_WriteTimer 0102  
                                        l10101 40BC                                          l10111 40E2  
                                        ?_acos 008E                                          ?_fabs 0027  
                                        ?_atan 0058                                          ?_asin 0079  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 012B  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 5036  
                                        _ADPRE 000F5E                                __end_of___ftadd 38B6  
                                        STR_10 FFBD                                          STR_11 FFF5  
                                        STR_12 FFC6                                          STR_20 FFC5  
                                        STR_13 FFCC                                          STR_21 FFCB  
                                        STR_14 FFDE                                          STR_22 FFD1  
                                        STR_30 FFC8                                          STR_15 FFE4  
                                        STR_23 FFD7                                          STR_31 FFCE  
                                        STR_40 FBF7                                          STR_16 FFF0  
                                        STR_24 FFDD                                          STR_32 FFD4  
                                        STR_17 FFF8                                          STR_25 FFE3  
                                        STR_33 FFDA                                          STR_41 FFA1  
                                        STR_18 FFC6                                          STR_42 FFAC  
                                        STR_26 FFE9                                          STR_34 FFE0  
                                        STR_50 FC6C                                          STR_43 FFB5  
                                        STR_19 FFFA                                          STR_27 FFEF  
                                        STR_35 FFE6                                          STR_51 FF28  
                                        STR_28 FFEF                                          STR_36 FFEC  
                                        STR_44 FF9B                                          STR_60 FE05  
                                        STR_52 FD39                                __end_of___awmod 5394  
                                        STR_29 FFFA                                          STR_45 FFAC  
                                        STR_37 FFF2                                          STR_53 FF48  
                                        STR_61 FEF0                                          STR_38 FFF2  
                                        STR_46 FFB5                                          STR_70 FE94  
                                        STR_54 FDC2                                          STR_62 FD7E  
                                        STR_39 FFFC                                          STR_47 FF95  
                                        STR_71 FF73                                          STR_55 FF05  
                                        STR_63 FEDB                                          STR_48 FFB1  
                                        STR_80 FFA7                                          STR_72 FE7B  
                                        STR_64 FDA0                                          STR_56 FD5C  
                                        _ADRPT 000F66                                          STR_57 FF66  
                                        STR_65 FF57                                          STR_49 FF17  
                                        STR_73 FEAC                                          STR_81 F50B  
                                        STR_82 FDE4                                          STR_66 FCC4  
                                        STR_58 FC34                                          STR_74 FB65  
                                        STR_67 FF38                                          STR_59 FE61  
                                        STR_83 FE43                                          STR_75 FAFF  
                                        STR_76 FD14                                          STR_84 FCEC  
                                        STR_68 FC9B                                          STR_69 FF80  
                                        STR_85 FEC4                                          STR_77 FBBB  
                                        STR_78 FF8C                                          STR_86 FE25  
                                        STR_79 FBFA                                __end_of___ftdiv 4686  
                              __end_of___ftneg 5D62                                __end_of___lldiv 50BA  
                                        ?_sqrt 0066                                          u10030 017C  
                                        u10200 04BC                                          u10120 0322  
                                        u10130 0362                                          u10037 0172  
                                        u10230 0594                                          u10240 05A4  
                                        u10160 0398                                          u10080 0228  
                                        u10330 07B8                                __end_of___ftmul 43B6  
                                        u10085 021E                                          u10370 08AA  
                                        u10610 4E38                                          u10380 08DA  
                                        u11500 16C4                                ___awdiv@divisor 011F  
                                        u11510 16EA                                          u11520 16F8  
                                        u11360 1282                                          u12160 40E2  
                              __end_of___llmod 54D4                                          u10810 58B4  
                              __end_of___ftsub 5AB8                                          u10387 08D0  
                                        u10580 5750                                __end_of___fttol 42C0  
                                        u10911 45B0                                          u10840 4FA6  
                                        u10931 45D8                                          u10587 5746  
                                        _T5CLK 000FC6                                          _T5CON 000FC3  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        u15857 52BC                                          _T6HLT 000FB2  
                                        i1l213 007C                                          i1l215 009C  
                                        i1l217 00A6                                          i2l202 4A66  
                                        i2l204 4A72                                          i2l206 4A7C  
                                        i1l390 5B98                                          i2l400 4C78  
                                        i2l402 4CC8                                          i1l626 5D7A  
                                        i1l389 5B9C                                          i1l760 5834  
                                        i1l763 5844                                          _T6TMR 000FAF  
                                        i1l757 5824                                          i2l374 59F2  
                                        i1l766 5854                                          i2l375 59F0  
                                        i2l377 5A06                                          i1l769 5864  
                                        i2l378 5A2C                                          _T6RST 000FB4  
                                        i2l379 5A2A                                          i2l395 4C30  
                                        i2l396 4C52                                          i2l397 4C74  
                                        i2l750 245E                                          i2l743 2622  
                                        i2l751 24DC                                          i2l752 261E  
                                        i2l744 223E                                          i2l746 22A0  
                                        i2l747 2302                                          i2l748 23FC  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 3F84                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a F4F0  
                           __end_ofsin@coeff_b F50B                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 00C5                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                   ___lltoft@exp 0127  
                                __CFG_WRT6$OFF 000000                        ??_ADCC_IsConversionDone 0100  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 5C0A                               __end_of_TMR6_ISR 5D14  
                             __end_of_TMR7_ISR 5BD6                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                                  ___awtoft@sign 0122  
                    ??_terminal_ringBufferPull 01AD                                __end_of_dpowers F481  
                                        acos@x 008E                                          fabs@d 0027  
                                   i2scale@scl 003C                                          _floor 476C  
                                        _frexp 51C0                                          _errno 00D7  
                        ?_ADCC_StartConversion 0001                                          _scale 1968  
                              __end_of_isdigit 5E18                                          atan@f 0058  
                                        atan@x 0063                                          atan@y 0060  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 011B  
                                        asin@x 0079                                          asin@y 0088  
                                        atoi@a 0130                                          atoi@s 012B  
                                        _putch 5EF2                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          sin@x2 006F  
                                        tablat 000FF5                               __end_ofi2___ftge 4F24  
                             __end_ofi2___wmul 5DAE                                 ??_EUSART2_Read 0117  
                                        sqrt@a 0066                                          sqrt@i 006F  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          status 000FD8  
                                        wtemp6 005F                                __end_of_strncmp 4E94  
                              __end_of_strncpy 546C                               __end_ofi2_fround 2EB8  
               ?_INTERRUPT_InterruptManagerLow 0001                                  i2___ftdiv@exp 001F  
                           __size_ofi2___awdiv 0084                             __size_ofi2___ftadd 01AC  
                           __size_ofi2___awmod 0070                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0042                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 11CA                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 5F38         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 5F2A                                _TMR5_Initialize 595A  
                              __initialization 57CC                              i2___lldiv@divisor 0005  
                                 __end_of_acos 57CC                                   __end_of_fabs 5C6C  
                                 __end_of_atan 3708                                   __end_of_asin 3122  
                                 __end_of_atoi 49FC                                   __end_of_main 5322  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 0030  
                                 __end_of_sqrt 3BF4                                     i2printf@ap 0075  
                                   i2printf@cp 0071                          __end_of_ringBufferLUT 1968  
                               __CFG_SCANE$OFF 000000                             __size_ofi2_isdigit 001E  
                                  ?i2___ftpack 0001                                         ??_acos 005E  
                                       ??_fabs 002A                                         ??_atan 005B  
                                  ?i2___lltoft 0009                                         ??_asin 005E  
                                       ??_atoi 012D                                         ??_main 01B6  
                                ___fttol@sign1 015E                       _TMR5_SetInterruptHandler 5F1C  
                                       ??_sqrt 0069                                  __activetblptr 000003  
                         __size_of__tdiv_to_l_ 0134                                _TMR6_Initialize 5C0A  
                           _TRIAC_Firing_Angle 00DF                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 553A  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01DA                                         ?_floor 0056  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               __end_of___altoft 52B0  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 0155                                         _ADLTHL 000F6A  
                                       _ADRESH 000F64                                         _ADRESL 000F63  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                             __end_of___awtoft 5B34                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                               __end_of___ftpack 4B78  
                                       _ANSELG 000EBC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                             __end_of___lltoft 56C2                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1110 0E52                                         i2l1111 0DC0  
                                       i2l1120 0EFE                                         i2l1008 5E80  
                                       i2l1113 0E6C                                         i2l1105 0D62  
                                       i2l1050 2D9A                                         i2l1130 10B8  
                                       i2l1122 0FFE                                         i2l1114 0E5E  
                                       i2l1123 0FF0                                         i2l1060 1FEA  
                                       i2l1132 10D8                                         i2l1116 0E90  
                                       i2l1301 357C                                         i2l1053 2E72  
                                       i2l1061 2152                                         i2l1125 1042  
                                       i2l1117 0E94                                         i2l1134 117A  
                                       i2l1126 105A                                         i2l1118 0EAC  
                                       i2l1070 099E                                         i2l1303 35D4  
                                       i2l1063 220E                                         i2l1135 10F4  
                                       i2l1119 0FE4                                         i2l1071 094C  
                                       i2l1304 36D8                                         i2l1056 2014  
                                       i2l1057 1F2E                                         i2l1081 09DC  
                                       i2l1306 36EA                                         i2l1402 3FA2  
                                       i2l1074 0A32                                         i2l1091 0B68  
                                       i2l1083 0A0E                                         i2l1067 08F6  
                                       i2l1228 5266                                         i2l1500 46D6  
                                       i2l1404 3FC0                                         i2l1092 0BCE  
                                       i2l1084 09FA                                         i2l1068 0908  
                                       i2l1229 525A                                         i2l1501 4714  
                                       i2l1405 4002                                         i2l1077 09D8  
                                       i2l1069 09CA                                         i2l1502 473A  
                                       i2l1414 4094                                         i2l1406 4032  
                                       i2l1510 3DE2                                         i2l1094 0BF4  
                                       i2l1078 0A80                                         i2l1086 0A20  
                                       i2l1415 4088                                         i2l1087 1008  
                                       i2l1095 0C34                                         i2l1440 4BFC  
                                       i2l1408 4070                                         i2l1512 3E1E  
                                       i2l1096 0CFC                                         i2l1088 0A94  
                                       i2l1441 4BF2                                         i2l1409 4060  
                                       i2l1513 3E0E                                         i2l1361 50FC  
                                       i2l1089 0AD6                                         i2l1434 4BA0  
                                       i2l1530 44D2                                         i2l1282 2F00  
                                       i2l1602 5558                                         i2l1506 3D54  
                                       i2l1362 50F4                                         i2l1435 4B96  
                                       i2l1523 4EC4                                         i2l1603 554C  
                                       i2l1371 53A8                                         i2l1099 0CA4  
                                       i2l1532 44FA                                         i2l1524 4EF4  
                                       i2l1284 2FF4                                         i2l1508 3D80  
                                       i2l1380 53FA                                         i2l1372 53B4  
                                       i2l1437 4BD4                                         i2l1533 452C  
                                       i2l1541 5DC4                                         i2l1285 30A4  
                                       i2l1613 56D4                                         i2l1509 3DBA  
                                       i2l1365 511C                                         i2l1438 4BBE  
                                       i2l1534 453C                                         i2l1606 5580  
                                       i2l1614 56C8                                         i2l1518 3E42  
                                       i2l1366 5126                                         i2l1358 50CE  
                                       i2l1374 53CA                                         i2l1551 43E2  
                                       i2l1607 558E                                         i2l1519 3E36  
                                       i2l1367 5134                                         i2l1359 50DE  
                                       i2l1375 53C2                                         i2l1480 3984  
                                       i2l1536 4554                                         i2l1392 490E  
                                       i2l1560 4470                                         i2l1465 3908  
                                       i2l1537 4564                                         i2l1393 488E  
                                       i2l1553 4458                                         i2l1474 3998  
                                       i2l1562 4498                                         i2l1554 4448  
                                       i2l1810 3A9E                                         i2l1378 53E2  
                                       i2l1491 39F0                                         i2l1547 5AD0  
                                       i2l1811 3A90                                         i2l1379 53EC  
                                       i2l1492 3A0C                                         i2l1493 3A3C  
                                       i2l1469 3932                                         i2l1813 3AF0  
                                       i2l1398 5C5E                                         i2l1566 5E2E  
                                       i2l1479 398E                                         i2l1559 447C  
                                       i2l1488 39CC                                         i2l1592 516C  
                                       i2l1489 39C2                                         i2l1681 314E  
                                       i2l1593 5160                                         i2l1498 46AE  
                                       i2l1682 3230                                         i2l1683 3288  
                                       i2l1684 3372                                         i2l1596 51A0  
                                       i2l1597 51AE                                         i2l1890 483C  
                                       i2l1886 47A8                                         i2l1895 51DC  
                                       i2l1887 479A                                         i2l1889 47C2  
                                       _RG7PPS 000E89                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 0039  
                             __end_of___lwtoft 5DF6                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6             __end_of_ADC_postProcessingCallback 2646  
                   _ADC_postProcessingCallback 2238                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 58C0                                   i2_scale$3322 0039  
                             __end_of__powers_ F4A8           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 41C8                                         ___ftge 4D72  
                                       ___wmul 5CC4                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                     ??_terminal_setCursorHome 018D                                         _fround 29AE  
                                       clear_0 57F2                                         clear_1 57FE  
                                       clear_2 580E                           _eusart2RxStringReady 0758  
                             ___awdiv@quotient 0123                                ___awmod@divisor 0119  
                              ___awmod@counter 011B                                         _printf 0000  
                                       _strcat 590E                                         _strchr 5B34  
                                       _strcmp 5870                                      ?_ADCC_ISR 0001  
                                       _strlen 571E                                 i2___awdiv@sign 000C  
                                       _strstr 4F24                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                             _background_color 00DB                                _ADCC_Initialize 55A0  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 5E36  
                                    ??_isdigit 0117                              __end_ofi2___awdiv 513E  
                            __end_ofi2___ftadd 3A62                              __end_ofi2___awmod 5404  
                            __end_ofi2___ftdiv 476C                                 i2___ftadd@exp1 004B  
                               i2___ftadd@exp2 004A                              __end_ofi2___ftneg 5DD2  
                            __end_ofi2___lldiv 51C0                                         sin@sgn 0072  
                            __end_ofi2___ftmul 459E                              __end_ofi2___llmod 55A0  
                            __end_ofi2___ftsub 5AFA                              __end_ofi2___fttol 44AA  
                               i2___ftadd@sign 0049                                   __mediumconst F458  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 5B6C  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                                       sqrt@og 006C                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
  ADCC_SetADIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 0097                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 018D  
                __size_of_INTERRUPT_Initialize 0012                                _eusart2RxBuffer 0200  
                      __end_of_TMR5_Initialize 59A4                              __end_ofi2_isdigit 5E36  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B3  
                            _SYSTEM_Initialize 5C9A           __end_of_TMR7_DefaultInterruptHandler 5F88  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 5F86  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0240  
                                   __accesstop 0060                        __end_of__initialization 5814  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 007B  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 5E6E  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01B0  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                                   ___fttol@f1 0155                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 018D  
                                 __pidataBANK0 5F80                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 484A                                  __end_of_frexp 5238  
                               i2___ftmul@cntr 0034                                  __end_of_scale 1DE8  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 5F00                       ??_terminal_clearTerminal 018D  
                                  i2printf@len 0073                                    i2printf@exp 0079  
                                  i2printf@val 007F                        __end_of_TMR6_Initialize 5C3C  
                       __end_of_PMD_Initialize 5E52                                 i2___fttol@exp1 004B  
                                   ___lwtoft@c 0009                                 i2___fttol@lval 0047  
                                    ?i2___ftge 002A                                     ??_ADCC_ISR 005E  
                         __end_of_EUSART2_Read 5A76                                      ?i2___wmul 000F  
                                i2__tdiv_to_l_ 3D28                                     __div_to_l_ 3E5A  
                                    ?i2_fround 0036                          ?_EUSART2_Transmit_ISR 0001  
                                    ?i2_printf 0066                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0122                                        ??_floor 0059  
                              __div_to_l_@cntr 0121                                        ??_frexp 0006  
                                      ??_scale 0158                      __end_of_SYSTEM_Initialize 5CC4  
                               i2___lltoft@exp 0011                                __div_to_l_@quot 011D  
                                      ??_putch 0118                                   peakToRMS@RMS 00A3  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00DE  
                                _eusart2TxHead 01DC                                     __pbssBANK0 00C5  
                                   __pbssBANK1 01B8                                     __pbssBANK2 0200  
                                _eusart2RxTail 01D9                                  _eusart2TxTail 01DB  
                           __size_of_eval_poly 00DA                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 590E  
                           __size_of_peakToRMS 01C6                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011A  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 5D62  
                             ??_FVR_Initialize 0117                                 _peakToRMS$3307 00A0  
                               _peakToRMS$3308 009A                                 _peakToRMS$3309 009D  
                        ringBufferLUT@arg_buff 01A6                                        ?___ftge 0117  
            terminal_ringBufferPull@index_1778 01B2                                        ?___wmul 0125  
                        _currentMeasuredToPeak 5604                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 5F1C                        __end_of_ADCC_Initialize 5604  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                      ?___altoft 004C  
                                      ?_fround 0155                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                      ?___awtoft 011F  
                                    ?___ftpack 0117                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0164                                ?_PMD_Initialize 0001  
                                    ?___lltoft 011F                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0030                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strlen 0117                                      ?___lwtoft 0009  
                                      u1111_41 3D38                                        ?_strstr 0126  
                                      u1113_41 3D64                                     ??i2___wmul 0013  
                                      u1430_41 38DA                                        u1450_41 44BA  
                                      u1452_41 44E2                                        u1429_41 38C6  
                                      u1461_41 46BE                                        u1480_41 43C6  
                                      u1459_41 4696                                        i2l12031 0C7E  
                                      i2l12023 0C34                                        i2l12051 0D66  
                                      i2l11273 4F20                                        i2l12153 10F4  
                                      i2l12129 105E                                        i2l12075 0E5E  
                                      i2l11961 09FA                                        _SP2BRGH 000EF4  
                                   ??i2_fround 0039                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 4CD0                                     ??i2_printf 0068  
                                      _OSCTUNE 000E48                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 5F6E                       _acquisitionTimerCallback 581E  
                      __end_of_TMR5_WriteTimer 5E8A               __size_of_terminal_textAttributes 0368  
                                      i2_scale 1DE8                               ?_TMR5_Initialize 0001  
                                      i2_putch 5F6E           __end_of_terminal_textAttributesReset 5EB0  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 5E9E  
                            __end_of__npowers_ F4CF                                        __Hparam 0000  
                                   _scale$3128 0158                                        __Lparam 0000  
                   ??_TMR5_SetInterruptHandler 011A                                __size_of___ftge 0092  
                                      ___awdiv 4FB0                                        ___ftadd 3708  
                                      ___awmod 5322                                        ___ftdiv 459E  
                                      ___ftneg 5D3C                                        ___lldiv 5036  
                              __size_of___wmul 0028                                        ___ftmul 42C0  
                                      ___llmod 546C                                        ___ftsub 5A76  
                                      ___fttol 41C8                                     ??___altoft 0050  
                                      __pcinit 57CC                                   ??i2___ftpack 0006  
                                   ??___awtoft 0122                                     ??___ftpack 011C  
                            __end_of_eval_poly 4924                                __size_of_fround 0294  
                             ?_TMR6_Initialize 0001                        i2___ftmul@f3_as_product 0031  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                 ??i2___lltoft 000D                                     ??___lltoft 0123  
                                      __ptext0 52B0                                        __ptext1 5EC2  
                                      __ptext2 40AC                                        __ptext3 11CA  
                                      __ptext4 5E9E                                        __ptext5 2646  
                                      __ptext6 5404                                        __ptext7 590E  
                                      __ptext8 5ED2                                        __ptext9 4F24  
                            __end_of_peakToRMS 3546                                __size_of_printf 08E8  
                currentMeasuredToPeak@Measured 0073                                     ??___lwtoft 000C  
                   ringBufferLUT@angle_degrees 01A3                                  i2_fround$3320 003C  
                                i2_fround$3321 0039                                __size_of_strcat 004C  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                              __size_of_strlen 0058                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers F459  
                        _OSCILLATOR_Initialize 5E52                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 5DF6  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117    ADC_postProcessingCallback@currentADCChannel 00AF  
                                      _on_time 01B8                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 006A                                      _T5CONbits 000FC3  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 007C  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 01A9  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 002A  
                        i2EUSART2_Write@txData 0001                                        _strncmp 4E04  
                               __pintcode_body 49FC                                        _strncpy 5404  
                         end_of_initialization 5814                        __end_of_TMR7_WriteTimer 5D88  
                       _terminal_setCursorHome 5EC2                               ?_TMR7_Initialize 0001  
                                      int_func 49FC                            i2___wmul@multiplier 000F  
                                    _T6RSTbits 000FB4                                      i1u1561_28 5D00  
                                    i1u1563_28 5BC2                    ?_ADC_postProcessingCallback 0001  
                                    i1u1581_28 0086                                      i2u1110_40 409A  
                                    i2u1123_40 5170                                      i2u1126_40 555C  
                                    i2u1119_40 3E48                                      i2u1071_40 5100  
                                    i2u1077_40 53CE                                      i2u1422_40 4B88  
                                    i2u1511_40 0934                                      i2u1511_47 092A  
                           __end_ofi2___ftpack 4C26                                      i2u1433_40 38FA  
                                    i2u1513_40 0982                                      i2u1513_47 0978  
                                    i2u1426_40 4C06                                      i2u1514_40 09C0  
                                    i2u1514_47 09B6                                      i2u1443_40 39A0  
                                    i2u1436_40 3924                                      i2u1540_40 0E8A  
                                    i2u1532_40 0C7E                                      i2u1524_40 0B0E  
                                    i2u1524_45 0B04                                      i2u1446_40 39D4  
                                    i2u1439_40 3962                                      i2u1519_40 0A62  
                                    i2u1519_47 0A58                                      i2u1536_40 0DA4  
                                    i2u1528_40 0C06                                      i2u1473_40 35A0  
                                    i2u1553_40 118C                                      i2u1529_40 0C46  
                                    i2u1482_40 4400                                      i2u1474_40 35A2  
                                    i2u1554_40 11BC                                      i2u1482_45 43F8  
                                    i2u1554_47 11B2                                      i2u1539_40 0E7A  
                                    i2u1493_40 47B4                                      i2u1549_40 109C  
                                    i2u1572_48 4A50                                      i2u1486_40 4482  
                                    i2u1557_48 5BF6                                      i2u1479_40 5204  
                                    i2u1567_40 4C68                                      i2u1479_48 5206  
                                    i2u1559_48 5D28                                      i2u1497_40 322C  
                                    i2u1498_40 322E                             __end_ofi2___lltoft 571E  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 54D4                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                                i2_EUSART2_Write 59EC  
                                      printf@c 018C                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01B4  
                                ??__tdiv_to_l_ 011D                       _TMR6_SetInterruptHandler 5F0E  
                        _TMR5_InterruptHandler 01BC                       ?_terminal_ringBufferPull 0001  
                         __CFG_WDTCCS$LFINTOSC 000000                              __size_of_ADCC_ISR 0028  
          __end_of_ADCC_SetADIInterruptHandler 5F54                    _ADCC_SetADIInterruptHandler 5F46  
                                    i2___awdiv 50BA                                      i2___ftadd 38B6  
                                    i2___awmod 5394                               __CFG_FEXTOSC$ECH 000000  
                                    i2___ftdiv 4686                                      i2___ftneg 5DAE  
                                    i2___lldiv 513E                                      i2___ftmul 44AA  
                                    i2___llmod 553A                                      i2___ftsub 5AB8  
                                    i2___fttol 43B6                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 5EE2  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 079E  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 5A32                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 5E18                            __size_of__div_to_l_ 012A  
                                  ___ftmul@exp 014F                   __end_of_INTERRUPT_Initialize 5EC2  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___ftge 4E04                  __end_of_terminal_printNewline 5EE2  
                               __end_of___wmul 5CEC                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 0758  
                               __end_of_fround 2C42              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 005C  
                             i2___wmul@product 0013                                 __end_of_printf 08E8  
                                i2_printf$3323 006E                                 __end_of_strcat 595A  
                               __end_of_strchr 5B6C                                 __end_of_strcmp 58C0  
                                 i2printf@flag 0077                                 __end_of_strlen 5776  
                                 i2printf@fval 0083                                 __end_of_strstr 4FB0  
                                 i2printf@prec 0086                            start_initialization 57CC  
                            __size_ofi2___ftge 0090                                     eval_poly@d 004F  
                                   eval_poly@n 0051                                     eval_poly@x 004C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 5F8C          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 5F8A                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 3D28                                    __end_of_sin 3380  
                                    i2printf@c 0088                                      i2printf@f 0066  
              _ADC_postProcessingCallback$3310 00B0                _ADC_postProcessingCallback$3311 00A6  
              _ADC_postProcessingCallback$3312 00A9                _ADC_postProcessingCallback$3313 00AC  
                              i2___fttol@sign1 0046                        _terminal_textAttributes 2646  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                            __size_ofi2_fround 0276                                     ?i2___awdiv 0007  
                                   ?i2___ftadd 0040                                     ?i2___awmod 0001  
                                   ?i2___ftdiv 0015                                     ?i2___ftneg 0024  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 0027  
                                   ?i2___llmod 000E                                     ?i2___ftsub 0060  
                                   ?i2___fttol 003D                  __size_of_ADCC_StartConversion 000E  
                                  putch@txData 0118                              __size_ofi2_printf 08E2  
                        __end_of_EUSART2_Write 59EC                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0190  
                      __end_ofi2_EUSART2_Write 5A32                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 00E2                               __CFG_LPBOREN$OFF 000000  
                             ??_PMD_Initialize 0117                                       ??___ftge 011D  
                                     ??___wmul 0129                __size_of_heartbeatTimerCallback 002E  
                                  __pdataBANK0 00E5                                       ??_fround 0158  
                                _ringBufferLUT 11CA                 ??_terminal_textAttributesReset 019F  
                                     ??_printf 016C                              _POS3P3_ADC_Result 00CB  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                                     ??_strstr 012A                              __size_of___altoft 0078  
                                   fround@prec 015E                                 _eusart2RxCount 01D8  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$3314 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                 _isdigit$2484 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                          EUSART2_Write@txData 0117                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3315 007F  
                                    _asin$3316 008B                                      _asin$3317 0085  
                                    _asin$3318 0082                                       ?i2_putch 0001  
                                   sin@coeff_a F4E1                                     sin@coeff_b F4FF  
                        _TMR6_InterruptHandler 01CE                         _PIN_MANAGER_Initialize 4CD0  
                                    __pintcode 0008                                  __pmediumconst F458  
                                     ?___awdiv 011D                                      __ptext100 476C  
                                    __ptext101 43B6                                      __ptext110 4B78  
                                    __ptext102 4E94                                      __ptext111 5E8A  
                                    __ptext103 51C0                                      __ptext112 0000  
                                    __ptext104 5238                                      __ptext105 484A  
                                    __ptext106 5D88                                      __ptext107 44AA  
                                    __ptext108 38B6                                      __ptext109 5DD2  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 5F0E  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F4A8  
                                     ?___fttol 0155                                 ?_ringBufferLUT 019F  
            _EUSART2_TxDefaultInterruptHandler 01D1                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 3BF4                                       _ADCC_ISR 5D14  
                               ??i2__div_to_l_ 0007                                   ??__div_to_l_ 011D  
                             _POS12_ADC_Result 01C8                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                      _eval_poly 484A  
                    ??_terminal_textAttributes 018F                                      _attribute 00DD  
                                    _peakToRMS 3380                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                         _heartbeatTimerCallback 5C6C  
                               _dimming_period 00D9                                    ??i2___awdiv 000B  
                                  ??i2___ftadd 0046                                    ??i2___awmod 0005  
                               __size_of_floor 00DE                                    ??i2___ftdiv 001B  
                               __size_of_frexp 0078                                    ??i2___ftneg 0027  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 002D  
                               __size_of_scale 0480                                    ??i2___llmod 0016  
                                  ??i2___ftsub 005E                                    ??i2___fttol 0041  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 5EB0  
                                     _T6CLKCON 000FB3                          _ADCC_IsConversionDone 5F62  
       terminal_textAttributes@input_attribute 018E                   __size_of_EUSART2_Receive_ISR 00AA  
                               ___wmul@product 0129                      currentMeasuredToPeak@Peak 0079  
                             ?i2_EUSART2_Write 0001                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0066  
                                     _IPR1bits 000E20                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     i1u721_20 5C78                                       i1u722_28 5C7C  
                                     _PIR1bits 000E34                                       i1u666_20 5F6A  
                           __end_of__div_to_l_ 3F84                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 5BD6  
                                     _TMR6_ISR 5CEC                                       _TMR7_ISR 5BA2  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0125                                       i2___ftge 4E94  
                                     i2___wmul 5D88                        __size_of_FVR_Initialize 0008  
                                   printf@flag 017B                                     printf@fval 0187  
                                   printf@prec 018A                                     ?_eval_poly 004C  
               __end_of_terminal_setCursorHome 5ED2                              i2___awdiv@divisor 0009  
                                     i2_fround 2C42              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 0094                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 08E8                            __end_ofatan@coeff_a F4E1  
                          __end_ofatan@coeff_b F4FF                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 57E0  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0450  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0004                __end_of_terminal_textAttributes 29AE  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 5E9E                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 5F46         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 5F38                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01A1  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 00DC  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___awmod 0072  
                             __size_of___ftdiv 00E8                               __size_of___ftneg 0026  
                        i2___wmul@multiplicand 0011                               __size_of___lldiv 0084  
                                     ___altoft 5238                               __size_of___ftmul 00F6  
                             __size_of___llmod 0068                               __size_of___ftsub 0042  
                             __size_of___fttol 00F8                                       ___awtoft 5AFA  
                                     ___ftpack 4AC8               __end_of_acquisitionTimerCallback 5870  
                                  _fround$3126 015B                                    _fround$3127 0158  
                                     ___lltoft 5664                          __end_ofi2__tdiv_to_l_ 3E5A  
                                     ___lwtoft 5DD2                       _TMR7_SetInterruptHandler 5F00  
                        _TMR7_InterruptHandler 01CB                             _ADC_Result_Scaling 00CE  
      terminal_textAttributes@foreground_color 018F                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 5EF2                               __size_of_isdigit 0022  
                                     __ptext10 4E04                                       __ptext11 571E  
                                     __ptext20 1968                                       __ptext12 5B34  
                                     __ptext21 5EF2                                       __ptext13 5870  
                                     __ptext30 3E5A                                       __ptext22 59A4  
                                     __ptext14 4924                                       __ptext31 5664  
                                     __ptext23 5DF6                                       __ptext15 459E  
                                     __ptext40 5C9A                                       __ptext32 546C  
                                     __ptext24 29AE                                       __ptext16 5AFA  
                                     __ptext41 58C0                                       __ptext33 5036  
                                     __ptext25 5CC4                                       __ptext17 5A32  
                                     __ptext50 5EB0                                       __ptext42 5F00  
                                     __ptext34 41C8                                       __ptext26 42C0  
                                     __ptext18 5EE2                                       __ptext51 5F78  
                                     __ptext43 5C0A                                       __ptext35 5A76  
                                     __ptext27 5322                                       __ptext19 0000  
                                     __ptext60 581E                                       __ptext52 54D4  
                                     __ptext44 5F0E                                       __ptext36 3708  
                                     __ptext28 4FB0                                       __ptext61 5F54  
                                     __ptext53 5F2A                                       __ptext45 595A  
                                     __ptext37 4AC8                                       __ptext29 3BF4  
                                     __ptext70 5E6E                                       __ptext62 5F62  
                                     __ptext54 5F38                                       __ptext46 5F1C  
                                     __ptext38 5D3C                                       __ptext71 5F8A  
                                     __ptext63 5D62                                       __ptext55 55A0  
                                     __ptext47 5E36                                       __ptext39 4D72  
                                     __ptext80 50BA                                       __ptext72 4C26  
                                     __ptext64 5CEC                                       __ptext56 5F46  
                                     __ptext48 4CD0                                       __ptext81 3D28  
                                     __ptext73 08E8                                       __ptext65 5F88  
                                     __ptext49 5E52                                       __ptext90 5776  
                                     __ptext82 3F84                                       __ptext74 1DE8  
                                     __ptext66 5C6C                                       __ptext58 5BA2  
                                     __ptext91 2EB8                                       __ptext83 56C2  
                                     __ptext75 5F6E                                       __ptext67 5B6C  
                                     __ptext59 5F86                                       __ptext92 3A62  
                                     __ptext84 553A                                       __ptext76 59EC  
                                     __ptext93 3546                                       __ptext85 513E  
                                     __ptext77 5E18                                       __ptext69 5BD6  
                                     __ptext94 5C3C                                       __ptext86 5D14  
                                     __ptext78 2C42                                       __ptext95 5604  
                                     __ptext87 5F8C                                       __ptext79 5394  
                                     __ptext96 3122                                       __ptext88 2238  
                                     __ptext97 5AB8                                       __ptext89 3380  
                                     __ptext98 5DAE                                       __ptext99 4686  
                                     _sin$3319 006C                                       __powers_ F481  
                       ?_ADCC_IsConversionDone 0001                                _Temp_ADC_Offset 00E8  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 0066                                 i2_isdigit$2484 0002  
                              _Temp_ADC_Result 01C5                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026A                                  __size_of_atoi 00D8  
                                __size_of_main 0072                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0192                           __end_ofi2__div_to_l_ 40AC  
                                   strncmp@len 0121                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      _ADCC_ADI_InterruptHandler 00D1  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 5F62  
                                     int$flags 005E                                       atoi@sign 012F  
                                    printf@len 0177                                      printf@exp 017D  
                                    printf@val 0183                                    atan@coeff_a F4CF  
                                  atan@coeff_b F4F0                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 5ED2                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0053                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 015B  
         __end_of_TMR6_DefaultInterruptHandler 5F8A          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 5F88           __end_of_ADCC_DefaultInterruptHandler 5F8E  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 5F8C  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 01AB  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                       printf@ap 0179  
                                     printf@cp 0175                       _ADCC_GetConversionResult 5E8A  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 4C26  
       __end_of_INTERRUPT_InterruptManagerHigh 4AC8        __size_of_INTERRUPT_InterruptManagerHigh 4AC0  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 011A  
                                  _printf$3129 0172                                 _FVR_Initialize 5F78  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 019F  
                             ___lldiv@quotient 011F                                       strlen@cp 011B  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 4D72                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 40AC                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0052  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 005E              _EUSART2_RxDefaultInterruptHandler 00D4  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 5664  
