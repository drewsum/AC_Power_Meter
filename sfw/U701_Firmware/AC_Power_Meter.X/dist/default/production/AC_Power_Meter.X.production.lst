

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 05 23:48:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   148                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   149  0000                     
   150                           ; Version 1.45 (B)
   151                           ; Generated 30/01/2018 GMT
   152                           ; 
   153                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC18LF67K40 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     
   185                           	psect	idataBANK0
   186  01816E                     __pidataBANK0:
   187                           	opt stack 0
   188                           
   189                           ;initializer for _dimming_period
   190  01816E  7FEE               	dw	32750
   191                           
   192                           ;initializer for _TRIAC_Firing_Angle
   193                           ;main.c: 71: volatile double FVR_ADC_Result;
   194                           ;main.c: 72: volatile double AVSS_ADC_Result;
   195                           ;main.c: 73: volatile double ADC_Result_Scaling;
   196                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   197                           ;main.c: 75: volatile double POS12_ADC_Result;
   198                           ;main.c: 76: volatile double Temp_ADC_Result;
   199                           ;main.c: 77: volatile double Temp_ADC_Offset = -267.409;
   200                           ;main.c: 78: double Vpk_const = 169.7056274847714;
   201                           ;main.c: 79: volatile double Vpk;
   202                           ;main.c: 80: volatile double Ipk;
   203                           ;main.c: 81: volatile double Imeas;
   204                           ;main.c: 82: double Irms_offset = -0.113;
   205  018170  0000               	dw	0
   206  018172  42B4               	dw	17076
   207                           
   208                           	psect	idataBANK2
   209  017F6C                     __pidataBANK2:
   210                           	opt stack 0
   211                           
   212                           ;initializer for getCauseOfResetString@strings
   213  017F6C  1E                 	db	low STR_123
   214  017F6D  FE                 	db	high STR_123
   215  017F6E  8E                 	db	low STR_124
   216  017F6F  FE                 	db	high STR_124
   217  017F70  2E                 	db	low STR_125
   218  017F71  FE                 	db	high STR_125
   219  017F72  C6                 	db	low STR_126
   220  017F73  FD                 	db	high STR_126
   221  017F74  9C                 	db	low (STR_128+9)
   222  017F75  FA                 	db	high (STR_128+9)
   223  017F76  93                 	db	low STR_128
   224  017F77  FA                 	db	high STR_128
   225  017F78  B0                 	db	low STR_129
   226  017F79  FC                 	db	high STR_129
   227  017F7A  72                 	db	low STR_130
   228  017F7B  FD                 	db	high STR_130
   229  017F7C  46                 	db	low STR_131
   230  017F7D  FD                 	db	high STR_131
   231                           
   232                           ;initializer for getDeviceIDString@F17550
   233  017F7E  44                 	db	low STR_120
   234  017F7F  FF                 	db	high STR_120
   235  017F80  10                 	db	low STR_121
   236  017F81  FF                 	db	high STR_121
   237  017F82  7C                 	db	low STR_68
   238  017F83  FF                 	db	high STR_68
   239                           
   240                           ;initializer for _Irms_offset
   241  017F84  6C8B               	dw	27787
   242  017F86  BDE7               	dw	48615
   243                           
   244                           ;initializer for _Vpk_const
   245                           ;main.c: 71: volatile double FVR_ADC_Result;
   246                           ;main.c: 72: volatile double AVSS_ADC_Result;
   247                           ;main.c: 73: volatile double ADC_Result_Scaling;
   248                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   249                           ;main.c: 75: volatile double POS12_ADC_Result;
   250                           ;main.c: 76: volatile double Temp_ADC_Result;
   251                           ;main.c: 77: volatile double Temp_ADC_Offset = -267.409;
   252  017F88  B4A4               	dw	46244
   253  017F8A  4329               	dw	17193
   254                           
   255                           ;initializer for _Temp_ADC_Offset
   256  017F8C  B45A               	dw	46170
   257  017F8E  C385               	dw	50053
   258                           
   259                           	psect	mediumconst
   260  00EBB8                     __pmediumconst:
   261                           	opt stack 0
   262  00EBB8  00                 	db	0
   263  00EBB9                     __powers_:
   264                           	opt stack 0
   265  00EBB9  0000               	dw	0
   266  00EBBB  3F80               	dw	16256
   267  00EBBD  0000               	dw	0
   268  00EBBF  4120               	dw	16672
   269  00EBC1  0000               	dw	0
   270  00EBC3  42C8               	dw	17096
   271  00EBC5  0000               	dw	0
   272  00EBC7  447A               	dw	17530
   273  00EBC9  4000               	dw	16384
   274  00EBCB  461C               	dw	17948
   275  00EBCD  5000               	dw	20480
   276  00EBCF  47C3               	dw	18371
   277  00EBD1  2400               	dw	9216
   278  00EBD3  4974               	dw	18804
   279  00EBD5  9680               	dw	38528
   280  00EBD7  4B18               	dw	19224
   281  00EBD9  BC20               	dw	48160
   282  00EBDB  4CBE               	dw	19646
   283  00EBDD  6B28               	dw	27432
   284  00EBDF  4E6E               	dw	20078
   285  00EBE1  02F9               	dw	761
   286  00EBE3  5015               	dw	20501
   287  00EBE5  78EC               	dw	30956
   288  00EBE7  60AD               	dw	24749
   289  00EBE9  F2CA               	dw	62154
   290  00EBEB  7149               	dw	29001
   291  00EBED                     __end_of__powers_:
   292                           	opt stack 0
   293  00EBED                     __npowers_:
   294                           	opt stack 0
   295  00EBED  0000               	dw	0
   296  00EBEF  3F80               	dw	16256
   297  00EBF1  CCCD               	dw	52429
   298  00EBF3  3DCC               	dw	15820
   299  00EBF5  D70A               	dw	55050
   300  00EBF7  3C23               	dw	15395
   301  00EBF9  126F               	dw	4719
   302  00EBFB  3A83               	dw	14979
   303  00EBFD  B717               	dw	46871
   304  00EBFF  38D1               	dw	14545
   305  00EC01  C5AC               	dw	50604
   306  00EC03  3727               	dw	14119
   307  00EC05  37BD               	dw	14269
   308  00EC07  3586               	dw	13702
   309  00EC09  BF95               	dw	49045
   310  00EC0B  33D6               	dw	13270
   311  00EC0D  CC77               	dw	52343
   312  00EC0F  322B               	dw	12843
   313  00EC11  705F               	dw	28767
   314  00EC13  3089               	dw	12425
   315  00EC15  E6FF               	dw	59135
   316  00EC17  2EDB               	dw	11995
   317  00EC19  E508               	dw	58632
   318  00EC1B  1E3C               	dw	7740
   319  00EC1D  4260               	dw	16992
   320  00EC1F  0DA2               	dw	3490
   321  00EC21                     __end_of__npowers_:
   322                           	opt stack 0
   323  00EC21                     _dpowers:
   324                           	opt stack 0
   325  00EC21  0001               	dw	1
   326  00EC23  0000               	dw	0
   327  00EC25  000A               	dw	10
   328  00EC27  0000               	dw	0
   329  00EC29  0064               	dw	100
   330  00EC2B  0000               	dw	0
   331  00EC2D  03E8               	dw	1000
   332  00EC2F  0000               	dw	0
   333  00EC31  2710               	dw	10000
   334  00EC33  0000               	dw	0
   335  00EC35  86A0               	dw	34464
   336  00EC37  0001               	dw	1
   337  00EC39  4240               	dw	16960
   338  00EC3B  000F               	dw	15
   339  00EC3D  9680               	dw	38528
   340  00EC3F  0098               	dw	152
   341  00EC41  E100               	dw	57600
   342  00EC43  05F5               	dw	1525
   343  00EC45  CA00               	dw	51712
   344  00EC47  3B9A               	dw	15258
   345  00EC49                     __end_of_dpowers:
   346                           	opt stack 0
   347  00EC49                     _hexpowers:
   348                           	opt stack 0
   349  00EC49  0001               	dw	1
   350  00EC4B  0000               	dw	0
   351  00EC4D  0010               	dw	16
   352  00EC4F  0000               	dw	0
   353  00EC51  0100               	dw	256
   354  00EC53  0000               	dw	0
   355  00EC55  1000               	dw	4096
   356  00EC57  0000               	dw	0
   357  00EC59  0000               	dw	0
   358  00EC5B  0001               	dw	1
   359  00EC5D  0000               	dw	0
   360  00EC5F  0010               	dw	16
   361  00EC61  0000               	dw	0
   362  00EC63  0100               	dw	256
   363  00EC65  0000               	dw	0
   364  00EC67  1000               	dw	4096
   365  00EC69                     __end_of_hexpowers:
   366                           	opt stack 0
   367  00EC69                     atan@coeff_a:
   368                           	opt stack 0
   369  00EC69  3C06               	dw	15366
   370  00EC6B  4204               	dw	16900
   371  00EC6D  9F7D               	dw	40829
   372  00EC6F  426A               	dw	17002
   373  00EC71  905C               	dw	36956
   374  00EC73  4201               	dw	16897
   375  00EC75  4D60               	dw	19808
   376  00EC77  40BB               	dw	16571
   377  00EC79  EC51               	dw	60497
   378  00EC7B  3E47               	dw	15943
   379  00EC7D  8DDE               	dw	36318
   380  00EC7F  BB1F               	dw	47903
   381  00EC81                     __end_ofatan@coeff_a:
   382                           	opt stack 0
   383  00EC81                     sin@coeff_a:
   384                           	opt stack 0
   385  00EC81  F3EC               	dw	62444
   386  00EC83  484A               	dw	18506
   387  00EC85  9535               	dw	38197
   388  00EC87  C795               	dw	51093
   389  00EC89  C117               	dw	49431
   390  00EC8B  45DC               	dw	17884
   391  00EC8D  DBFD               	dw	56317
   392  00EC8F  C36D               	dw	50029
   393  00EC91  B372               	dw	45938
   394  00EC93  4033               	dw	16435
   395  00EC95                     __end_ofsin@coeff_a:
   396                           	opt stack 0
   397  00EC95                     atan@coeff_b:
   398                           	opt stack 0
   399  00EC95  3C06               	dw	15366
   400  00EC97  4204               	dw	16900
   401  00EC99  59C0               	dw	22976
   402  00EC9B  428B               	dw	17035
   403  00EC9D  0474               	dw	1140
   404  00EC9F  4244               	dw	16964
   405  00ECA1  9BF9               	dw	39929
   406  00ECA3  414F               	dw	16719
   407  00ECA5  0000               	dw	0
   408  00ECA7  3F80               	dw	16256
   409  00ECA9                     __end_ofatan@coeff_b:
   410                           	opt stack 0
   411  00ECA9                     sin@coeff_b:
   412                           	opt stack 0
   413  00ECA9  342B               	dw	13355
   414  00ECAB  4801               	dw	18433
   415  00ECAD  9D7F               	dw	40319
   416  00ECAF  45B0               	dw	17840
   417  00ECB1  FFE7               	dw	65511
   418  00ECB3  42D9               	dw	17113
   419  00ECB5  0000               	dw	0
   420  00ECB7  3F80               	dw	16256
   421  00ECB9                     __end_ofsin@coeff_b:
   422                           	opt stack 0
   423  00ECB9                     STR_114:
   424  00ECB9  4C                 	db	76	;'L'
   425  00ECBA  69                 	db	105	;'i'
   426  00ECBB  73                 	db	115	;'s'
   427  00ECBC  74                 	db	116	;'t'
   428  00ECBD  20                 	db	32
   429  00ECBE  6F                 	db	111	;'o'
   430  00ECBF  66                 	db	102	;'f'
   431  00ECC0  20                 	db	32
   432  00ECC1  73                 	db	115	;'s'
   433  00ECC2  75                 	db	117	;'u'
   434  00ECC3  70                 	db	112	;'p'
   435  00ECC4  70                 	db	112	;'p'
   436  00ECC5  6F                 	db	111	;'o'
   437  00ECC6  72                 	db	114	;'r'
   438  00ECC7  74                 	db	116	;'t'
   439  00ECC8  65                 	db	101	;'e'
   440  00ECC9  64                 	db	100	;'d'
   441  00ECCA  20                 	db	32
   442  00ECCB  63                 	db	99	;'c'
   443  00ECCC  6F                 	db	111	;'o'
   444  00ECCD  6D                 	db	109	;'m'
   445  00ECCE  6D                 	db	109	;'m'
   446  00ECCF  61                 	db	97	;'a'
   447  00ECD0  6E                 	db	110	;'n'
   448  00ECD1  64                 	db	100	;'d'
   449  00ECD2  73                 	db	115	;'s'
   450  00ECD3  3A                 	db	58	;':'
   451  00ECD4  0A                 	db	10
   452  00ECD5  0D                 	db	13
   453  00ECD6  44                 	db	68	;'D'
   454  00ECD7  65                 	db	101	;'e'
   455  00ECD8  76                 	db	118	;'v'
   456  00ECD9  69                 	db	105	;'i'
   457  00ECDA  63                 	db	99	;'c'
   458  00ECDB  65                 	db	101	;'e'
   459  00ECDC  20                 	db	32
   460  00ECDD  43                 	db	67	;'C'
   461  00ECDE  6F                 	db	111	;'o'
   462  00ECDF  6D                 	db	109	;'m'
   463  00ECE0  6D                 	db	109	;'m'
   464  00ECE1  61                 	db	97	;'a'
   465  00ECE2  6E                 	db	110	;'n'
   466  00ECE3  64                 	db	100	;'d'
   467  00ECE4  73                 	db	115	;'s'
   468  00ECE5  3A                 	db	58	;':'
   469  00ECE6  0A                 	db	10
   470  00ECE7  0D                 	db	13
   471  00ECE8  20                 	db	32
   472  00ECE9  20                 	db	32
   473  00ECEA  20                 	db	32
   474  00ECEB  52                 	db	82	;'R'
   475  00ECEC  65                 	db	101	;'e'
   476  00ECED  73                 	db	115	;'s'
   477  00ECEE  65                 	db	101	;'e'
   478  00ECEF  74                 	db	116	;'t'
   479  00ECF0  3A                 	db	58	;':'
   480  00ECF1  20                 	db	32
   481  00ECF2  43                 	db	67	;'C'
   482  00ECF3  6C                 	db	108	;'l'
   483  00ECF4  65                 	db	101	;'e'
   484  00ECF5  61                 	db	97	;'a'
   485  00ECF6  72                 	db	114	;'r'
   486  00ECF7  73                 	db	115	;'s'
   487  00ECF8  20                 	db	32
   488  00ECF9  74                 	db	116	;'t'
   489  00ECFA  68                 	db	104	;'h'
   490  00ECFB  65                 	db	101	;'e'
   491  00ECFC  20                 	db	32
   492  00ECFD  74                 	db	116	;'t'
   493  00ECFE  65                 	db	101	;'e'
   494  00ECFF  72                 	db	114	;'r'
   495  00ED00  6D                 	db	109	;'m'
   496  00ED01  69                 	db	105	;'i'
   497  00ED02  6E                 	db	110	;'n'
   498  00ED03  61                 	db	97	;'a'
   499  00ED04  6C                 	db	108	;'l'
   500  00ED05  20                 	db	32
   501  00ED06  61                 	db	97	;'a'
   502  00ED07  6E                 	db	110	;'n'
   503  00ED08  64                 	db	100	;'d'
   504  00ED09  20                 	db	32
   505  00ED0A  72                 	db	114	;'r'
   506  00ED0B  65                 	db	101	;'e'
   507  00ED0C  73                 	db	115	;'s'
   508  00ED0D  65                 	db	101	;'e'
   509  00ED0E  74                 	db	116	;'t'
   510  00ED0F  73                 	db	115	;'s'
   511  00ED10  20                 	db	32
   512  00ED11  74                 	db	116	;'t'
   513  00ED12  68                 	db	104	;'h'
   514  00ED13  65                 	db	101	;'e'
   515  00ED14  20                 	db	32
   516  00ED15  6D                 	db	109	;'m'
   517  00ED16  69                 	db	105	;'i'
   518  00ED17  63                 	db	99	;'c'
   519  00ED18  72                 	db	114	;'r'
   520  00ED19  6F                 	db	111	;'o'
   521  00ED1A  0A                 	db	10
   522  00ED1B  0D                 	db	13
   523  00ED1C  20                 	db	32
   524  00ED1D  20                 	db	32
   525  00ED1E  20                 	db	32
   526  00ED1F  43                 	db	67	;'C'
   527  00ED20  6C                 	db	108	;'l'
   528  00ED21  65                 	db	101	;'e'
   529  00ED22  61                 	db	97	;'a'
   530  00ED23  72                 	db	114	;'r'
   531  00ED24  3A                 	db	58	;':'
   532  00ED25  20                 	db	32
   533  00ED26  43                 	db	67	;'C'
   534  00ED27  6C                 	db	108	;'l'
   535  00ED28  65                 	db	101	;'e'
   536  00ED29  61                 	db	97	;'a'
   537  00ED2A  72                 	db	114	;'r'
   538  00ED2B  73                 	db	115	;'s'
   539  00ED2C  20                 	db	32
   540  00ED2D  74                 	db	116	;'t'
   541  00ED2E  68                 	db	104	;'h'
   542  00ED2F  65                 	db	101	;'e'
   543  00ED30  20                 	db	32
   544  00ED31  74                 	db	116	;'t'
   545  00ED32  65                 	db	101	;'e'
   546  00ED33  72                 	db	114	;'r'
   547  00ED34  6D                 	db	109	;'m'
   548  00ED35  69                 	db	105	;'i'
   549  00ED36  6E                 	db	110	;'n'
   550  00ED37  61                 	db	97	;'a'
   551  00ED38  6C                 	db	108	;'l'
   552  00ED39  20                 	db	32
   553  00ED3A  62                 	db	98	;'b'
   554  00ED3B  75                 	db	117	;'u'
   555  00ED3C  74                 	db	116	;'t'
   556  00ED3D  20                 	db	32
   557  00ED3E  64                 	db	100	;'d'
   558  00ED3F  6F                 	db	111	;'o'
   559  00ED40  65                 	db	101	;'e'
   560  00ED41  73                 	db	115	;'s'
   561  00ED42  6E                 	db	110	;'n'
   562  00ED43  27                 	db	39
   563  00ED44  74                 	db	116	;'t'
   564  00ED45  20                 	db	32
   565  00ED46  72                 	db	114	;'r'
   566  00ED47  65                 	db	101	;'e'
   567  00ED48  73                 	db	115	;'s'
   568  00ED49  65                 	db	101	;'e'
   569  00ED4A  74                 	db	116	;'t'
   570  00ED4B  20                 	db	32
   571  00ED4C  74                 	db	116	;'t'
   572  00ED4D  68                 	db	104	;'h'
   573  00ED4E  65                 	db	101	;'e'
   574  00ED4F  20                 	db	32
   575  00ED50  6D                 	db	109	;'m'
   576  00ED51  69                 	db	105	;'i'
   577  00ED52  63                 	db	99	;'c'
   578  00ED53  72                 	db	114	;'r'
   579  00ED54  6F                 	db	111	;'o'
   580  00ED55  0A                 	db	10
   581  00ED56  0D                 	db	13
   582  00ED57  20                 	db	32
   583  00ED58  20                 	db	32
   584  00ED59  20                 	db	32
   585  00ED5A  43                 	db	67	;'C'
   586  00ED5B  61                 	db	97	;'a'
   587  00ED5C  75                 	db	117	;'u'
   588  00ED5D  73                 	db	115	;'s'
   589  00ED5E  65                 	db	101	;'e'
   590  00ED5F  20                 	db	32
   591  00ED60  6F                 	db	111	;'o'
   592  00ED61  66                 	db	102	;'f'
   593  00ED62  20                 	db	32
   594  00ED63  52                 	db	82	;'R'
   595  00ED64  65                 	db	101	;'e'
   596  00ED65  73                 	db	115	;'s'
   597  00ED66  65                 	db	101	;'e'
   598  00ED67  74                 	db	116	;'t'
   599  00ED68  3F                 	db	63	;'?'
   600  00ED69  3A                 	db	58	;':'
   601  00ED6A  20                 	db	32
   602  00ED6B  52                 	db	82	;'R'
   603  00ED6C  65                 	db	101	;'e'
   604  00ED6D  74                 	db	116	;'t'
   605  00ED6E  75                 	db	117	;'u'
   606  00ED6F  72                 	db	114	;'r'
   607  00ED70  6E                 	db	110	;'n'
   608  00ED71  73                 	db	115	;'s'
   609  00ED72  20                 	db	32
   610  00ED73  74                 	db	116	;'t'
   611  00ED74  68                 	db	104	;'h'
   612  00ED75  65                 	db	101	;'e'
   613  00ED76  20                 	db	32
   614  00ED77  63                 	db	99	;'c'
   615  00ED78  61                 	db	97	;'a'
   616  00ED79  75                 	db	117	;'u'
   617  00ED7A  73                 	db	115	;'s'
   618  00ED7B  65                 	db	101	;'e'
   619  00ED7C  20                 	db	32
   620  00ED7D  6F                 	db	111	;'o'
   621  00ED7E  66                 	db	102	;'f'
   622  00ED7F  20                 	db	32
   623  00ED80  74                 	db	116	;'t'
   624  00ED81  68                 	db	104	;'h'
   625  00ED82  65                 	db	101	;'e'
   626  00ED83  20                 	db	32
   627  00ED84  6D                 	db	109	;'m'
   628  00ED85  6F                 	db	111	;'o'
   629  00ED86  73                 	db	115	;'s'
   630  00ED87  74                 	db	116	;'t'
   631  00ED88  20                 	db	32
   632  00ED89  72                 	db	114	;'r'
   633  00ED8A  65                 	db	101	;'e'
   634  00ED8B  63                 	db	99	;'c'
   635  00ED8C  65                 	db	101	;'e'
   636  00ED8D  6E                 	db	110	;'n'
   637  00ED8E  74                 	db	116	;'t'
   638  00ED8F  20                 	db	32
   639  00ED90  64                 	db	100	;'d'
   640  00ED91  65                 	db	101	;'e'
   641  00ED92  76                 	db	118	;'v'
   642  00ED93  69                 	db	105	;'i'
   643  00ED94  63                 	db	99	;'c'
   644  00ED95  65                 	db	101	;'e'
   645  00ED96  20                 	db	32
   646  00ED97  72                 	db	114	;'r'
   647  00ED98  65                 	db	101	;'e'
   648  00ED99  73                 	db	115	;'s'
   649  00ED9A  65                 	db	101	;'e'
   650  00ED9B  74                 	db	116	;'t'
   651  00ED9C  0A                 	db	10
   652  00ED9D  0D                 	db	13
   653  00ED9E  20                 	db	32
   654  00ED9F  20                 	db	32
   655  00EDA0  20                 	db	32
   656  00EDA1  2A                 	db	42
   657  00EDA2  49                 	db	73	;'I'
   658  00EDA3  44                 	db	68	;'D'
   659  00EDA4  4E                 	db	78	;'N'
   660  00EDA5  3F                 	db	63	;'?'
   661  00EDA6  3A                 	db	58	;':'
   662  00EDA7  20                 	db	32
   663  00EDA8  52                 	db	82	;'R'
   664  00EDA9  65                 	db	101	;'e'
   665  00EDAA  74                 	db	116	;'t'
   666  00EDAB  75                 	db	117	;'u'
   667  00EDAC  72                 	db	114	;'r'
   668  00EDAD  6E                 	db	110	;'n'
   669  00EDAE  73                 	db	115	;'s'
   670  00EDAF  20                 	db	32
   671  00EDB0  64                 	db	100	;'d'
   672  00EDB1  65                 	db	101	;'e'
   673  00EDB2  76                 	db	118	;'v'
   674  00EDB3  69                 	db	105	;'i'
   675  00EDB4  63                 	db	99	;'c'
   676  00EDB5  65                 	db	101	;'e'
   677  00EDB6  20                 	db	32
   678  00EDB7  69                 	db	105	;'i'
   679  00EDB8  64                 	db	100	;'d'
   680  00EDB9  65                 	db	101	;'e'
   681  00EDBA  6E                 	db	110	;'n'
   682  00EDBB  74                 	db	116	;'t'
   683  00EDBC  69                 	db	105	;'i'
   684  00EDBD  66                 	db	102	;'f'
   685  00EDBE  69                 	db	105	;'i'
   686  00EDBF  63                 	db	99	;'c'
   687  00EDC0  61                 	db	97	;'a'
   688  00EDC1  74                 	db	116	;'t'
   689  00EDC2  69                 	db	105	;'i'
   690  00EDC3  6F                 	db	111	;'o'
   691  00EDC4  6E                 	db	110	;'n'
   692  00EDC5  20                 	db	32
   693  00EDC6  73                 	db	115	;'s'
   694  00EDC7  74                 	db	116	;'t'
   695  00EDC8  72                 	db	114	;'r'
   696  00EDC9  69                 	db	105	;'i'
   697  00EDCA  6E                 	db	110	;'n'
   698  00EDCB  67                 	db	103	;'g'
   699  00EDCC  0A                 	db	10
   700  00EDCD  0D                 	db	13
   701  00EDCE  20                 	db	32
   702  00EDCF  20                 	db	32
   703  00EDD0  20                 	db	32
   704  00EDD1  44                 	db	68	;'D'
   705  00EDD2  65                 	db	101	;'e'
   706  00EDD3  76                 	db	118	;'v'
   707  00EDD4  69                 	db	105	;'i'
   708  00EDD5  63                 	db	99	;'c'
   709  00EDD6  65                 	db	101	;'e'
   710  00EDD7  20                 	db	32
   711  00EDD8  4F                 	db	79	;'O'
   712  00EDD9  6E                 	db	110	;'n'
   713  00EDDA  20                 	db	32
   714  00EDDB  54                 	db	84	;'T'
   715  00EDDC  69                 	db	105	;'i'
   716  00EDDD  6D                 	db	109	;'m'
   717  00EDDE  65                 	db	101	;'e'
   718  00EDDF  3F                 	db	63	;'?'
   719  00EDE0  3A                 	db	58	;':'
   720  00EDE1  20                 	db	32
   721  00EDE2  52                 	db	82	;'R'
   722  00EDE3  65                 	db	101	;'e'
   723  00EDE4  74                 	db	116	;'t'
   724  00EDE5  75                 	db	117	;'u'
   725  00EDE6  72                 	db	114	;'r'
   726  00EDE7  6E                 	db	110	;'n'
   727  00EDE8  73                 	db	115	;'s'
   728  00EDE9  20                 	db	32
   729  00EDEA  64                 	db	100	;'d'
   730  00EDEB  65                 	db	101	;'e'
   731  00EDEC  76                 	db	118	;'v'
   732  00EDED  69                 	db	105	;'i'
   733  00EDEE  63                 	db	99	;'c'
   734  00EDEF  65                 	db	101	;'e'
   735  00EDF0  20                 	db	32
   736  00EDF1  6F                 	db	111	;'o'
   737  00EDF2  6E                 	db	110	;'n'
   738  00EDF3  20                 	db	32
   739  00EDF4  74                 	db	116	;'t'
   740  00EDF5  69                 	db	105	;'i'
   741  00EDF6  6D                 	db	109	;'m'
   742  00EDF7  65                 	db	101	;'e'
   743  00EDF8  20                 	db	32
   744  00EDF9  73                 	db	115	;'s'
   745  00EDFA  69                 	db	105	;'i'
   746  00EDFB  6E                 	db	110	;'n'
   747  00EDFC  63                 	db	99	;'c'
   748  00EDFD  65                 	db	101	;'e'
   749  00EDFE  20                 	db	32
   750  00EDFF  6C                 	db	108	;'l'
   751  00EE00  61                 	db	97	;'a'
   752  00EE01  73                 	db	115	;'s'
   753  00EE02  74                 	db	116	;'t'
   754  00EE03  20                 	db	32
   755  00EE04  64                 	db	100	;'d'
   756  00EE05  65                 	db	101	;'e'
   757  00EE06  76                 	db	118	;'v'
   758  00EE07  69                 	db	105	;'i'
   759  00EE08  63                 	db	99	;'c'
   760  00EE09  65                 	db	101	;'e'
   761  00EE0A  20                 	db	32
   762  00EE0B  72                 	db	114	;'r'
   763  00EE0C  65                 	db	101	;'e'
   764  00EE0D  73                 	db	115	;'s'
   765  00EE0E  65                 	db	101	;'e'
   766  00EE0F  74                 	db	116	;'t'
   767  00EE10  0A                 	db	10
   768  00EE11  0D                 	db	13
   769  00EE12  20                 	db	32
   770  00EE13  20                 	db	32
   771  00EE14  20                 	db	32
   772  00EE15  44                 	db	68	;'D'
   773  00EE16  65                 	db	101	;'e'
   774  00EE17  76                 	db	118	;'v'
   775  00EE18  69                 	db	105	;'i'
   776  00EE19  63                 	db	99	;'c'
   777  00EE1A  65                 	db	101	;'e'
   778  00EE1B  20                 	db	32
   779  00EE1C  49                 	db	73	;'I'
   780  00EE1D  44                 	db	68	;'D'
   781  00EE1E  3F                 	db	63	;'?'
   782  00EE1F  3A                 	db	58	;':'
   783  00EE20  20                 	db	32
   784  00EE21  52                 	db	82	;'R'
   785  00EE22  65                 	db	101	;'e'
   786  00EE23  74                 	db	116	;'t'
   787  00EE24  75                 	db	117	;'u'
   788  00EE25  72                 	db	114	;'r'
   789  00EE26  6E                 	db	110	;'n'
   790  00EE27  73                 	db	115	;'s'
   791  00EE28  20                 	db	32
   792  00EE29  64                 	db	100	;'d'
   793  00EE2A  65                 	db	101	;'e'
   794  00EE2B  76                 	db	118	;'v'
   795  00EE2C  69                 	db	105	;'i'
   796  00EE2D  63                 	db	99	;'c'
   797  00EE2E  65                 	db	101	;'e'
   798  00EE2F  20                 	db	32
   799  00EE30  49                 	db	73	;'I'
   800  00EE31  44                 	db	68	;'D'
   801  00EE32  20                 	db	32
   802  00EE33  61                 	db	97	;'a'
   803  00EE34  73                 	db	115	;'s'
   804  00EE35  20                 	db	32
   805  00EE36  70                 	db	112	;'p'
   806  00EE37  72                 	db	114	;'r'
   807  00EE38  65                 	db	101	;'e'
   808  00EE39  2D                 	db	45
   809  00EE3A  70                 	db	112	;'p'
   810  00EE3B  72                 	db	114	;'r'
   811  00EE3C  6F                 	db	111	;'o'
   812  00EE3D  67                 	db	103	;'g'
   813  00EE3E  72                 	db	114	;'r'
   814  00EE3F  61                 	db	97	;'a'
   815  00EE40  6D                 	db	109	;'m'
   816  00EE41  6D                 	db	109	;'m'
   817  00EE42  65                 	db	101	;'e'
   818  00EE43  64                 	db	100	;'d'
   819  00EE44  20                 	db	32
   820  00EE45  69                 	db	105	;'i'
   821  00EE46  6E                 	db	110	;'n'
   822  00EE47  20                 	db	32
   823  00EE48  66                 	db	102	;'f'
   824  00EE49  6C                 	db	108	;'l'
   825  00EE4A  61                 	db	97	;'a'
   826  00EE4B  73                 	db	115	;'s'
   827  00EE4C  68                 	db	104	;'h'
   828  00EE4D  20                 	db	32
   829  00EE4E  6D                 	db	109	;'m'
   830  00EE4F  65                 	db	101	;'e'
   831  00EE50  6D                 	db	109	;'m'
   832  00EE51  6F                 	db	111	;'o'
   833  00EE52  72                 	db	114	;'r'
   834  00EE53  79                 	db	121	;'y'
   835  00EE54  0A                 	db	10
   836  00EE55  0D                 	db	13
   837  00EE56  20                 	db	32
   838  00EE57  20                 	db	32
   839  00EE58  20                 	db	32
   840  00EE59  52                 	db	82	;'R'
   841  00EE5A  65                 	db	101	;'e'
   842  00EE5B  76                 	db	118	;'v'
   843  00EE5C  69                 	db	105	;'i'
   844  00EE5D  73                 	db	115	;'s'
   845  00EE5E  69                 	db	105	;'i'
   846  00EE5F  6F                 	db	111	;'o'
   847  00EE60  6E                 	db	110	;'n'
   848  00EE61  20                 	db	32
   849  00EE62  49                 	db	73	;'I'
   850  00EE63  44                 	db	68	;'D'
   851  00EE64  3F                 	db	63	;'?'
   852  00EE65  3A                 	db	58	;':'
   853  00EE66  20                 	db	32
   854  00EE67  52                 	db	82	;'R'
   855  00EE68  65                 	db	101	;'e'
   856  00EE69  74                 	db	116	;'t'
   857  00EE6A  75                 	db	117	;'u'
   858  00EE6B  72                 	db	114	;'r'
   859  00EE6C  6E                 	db	110	;'n'
   860  00EE6D  73                 	db	115	;'s'
   861  00EE6E  20                 	db	32
   862  00EE6F  64                 	db	100	;'d'
   863  00EE70  65                 	db	101	;'e'
   864  00EE71  76                 	db	118	;'v'
   865  00EE72  69                 	db	105	;'i'
   866  00EE73  63                 	db	99	;'c'
   867  00EE74  65                 	db	101	;'e'
   868  00EE75  20                 	db	32
   869  00EE76  73                 	db	115	;'s'
   870  00EE77  69                 	db	105	;'i'
   871  00EE78  6C                 	db	108	;'l'
   872  00EE79  69                 	db	105	;'i'
   873  00EE7A  63                 	db	99	;'c'
   874  00EE7B  6F                 	db	111	;'o'
   875  00EE7C  6E                 	db	110	;'n'
   876  00EE7D  20                 	db	32
   877  00EE7E  72                 	db	114	;'r'
   878  00EE7F  65                 	db	101	;'e'
   879  00EE80  76                 	db	118	;'v'
   880  00EE81  69                 	db	105	;'i'
   881  00EE82  73                 	db	115	;'s'
   882  00EE83  69                 	db	105	;'i'
   883  00EE84  6F                 	db	111	;'o'
   884  00EE85  6E                 	db	110	;'n'
   885  00EE86  20                 	db	32
   886  00EE87  49                 	db	73	;'I'
   887  00EE88  44                 	db	68	;'D'
   888  00EE89  20                 	db	32
   889  00EE8A  61                 	db	97	;'a'
   890  00EE8B  73                 	db	115	;'s'
   891  00EE8C  20                 	db	32
   892  00EE8D  70                 	db	112	;'p'
   893  00EE8E  72                 	db	114	;'r'
   894  00EE8F  65                 	db	101	;'e'
   895  00EE90  2D                 	db	45
   896  00EE91  70                 	db	112	;'p'
   897  00EE92  72                 	db	114	;'r'
   898  00EE93  6F                 	db	111	;'o'
   899  00EE94  67                 	db	103	;'g'
   900  00EE95  72                 	db	114	;'r'
   901  00EE96  61                 	db	97	;'a'
   902  00EE97  6D                 	db	109	;'m'
   903  00EE98  6D                 	db	109	;'m'
   904  00EE99  65                 	db	101	;'e'
   905  00EE9A  64                 	db	100	;'d'
   906  00EE9B  20                 	db	32
   907  00EE9C  69                 	db	105	;'i'
   908  00EE9D  6E                 	db	110	;'n'
   909  00EE9E  20                 	db	32
   910  00EE9F  66                 	db	102	;'f'
   911  00EEA0  6C                 	db	108	;'l'
   912  00EEA1  61                 	db	97	;'a'
   913  00EEA2  73                 	db	115	;'s'
   914  00EEA3  68                 	db	104	;'h'
   915  00EEA4  20                 	db	32
   916  00EEA5  6D                 	db	109	;'m'
   917  00EEA6  65                 	db	101	;'e'
   918  00EEA7  6D                 	db	109	;'m'
   919  00EEA8  6F                 	db	111	;'o'
   920  00EEA9  72                 	db	114	;'r'
   921  00EEAA  79                 	db	121	;'y'
   922  00EEAB  0A                 	db	10
   923  00EEAC  0D                 	db	13
   924  00EEAD  20                 	db	32
   925  00EEAE  20                 	db	32
   926  00EEAF  20                 	db	32
   927  00EEB0  55                 	db	85	;'U'
   928  00EEB1  73                 	db	115	;'s'
   929  00EEB2  65                 	db	101	;'e'
   930  00EEB3  72                 	db	114	;'r'
   931  00EEB4  20                 	db	32
   932  00EEB5  49                 	db	73	;'I'
   933  00EEB6  44                 	db	68	;'D'
   934  00EEB7  73                 	db	115	;'s'
   935  00EEB8  3F                 	db	63	;'?'
   936  00EEB9  3A                 	db	58	;':'
   937  00EEBA  20                 	db	32
   938  00EEBB  52                 	db	82	;'R'
   939  00EEBC  65                 	db	101	;'e'
   940  00EEBD  74                 	db	116	;'t'
   941  00EEBE  75                 	db	117	;'u'
   942  00EEBF  72                 	db	114	;'r'
   943  00EEC0  6E                 	db	110	;'n'
   944  00EEC1  73                 	db	115	;'s'
   945  00EEC2  20                 	db	32
   946  00EEC3  61                 	db	97	;'a'
   947  00EEC4  20                 	db	32
   948  00EEC5  6C                 	db	108	;'l'
   949  00EEC6  69                 	db	105	;'i'
   950  00EEC7  73                 	db	115	;'s'
   951  00EEC8  74                 	db	116	;'t'
   952  00EEC9  20                 	db	32
   953  00EECA  6F                 	db	111	;'o'
   954  00EECB  66                 	db	102	;'f'
   955  00EECC  20                 	db	32
   956  00EECD  75                 	db	117	;'u'
   957  00EECE  73                 	db	115	;'s'
   958  00EECF  65                 	db	101	;'e'
   959  00EED0  72                 	db	114	;'r'
   960  00EED1  20                 	db	32
   961  00EED2  49                 	db	73	;'I'
   962  00EED3  44                 	db	68	;'D'
   963  00EED4  73                 	db	115	;'s'
   964  00EED5  20                 	db	32
   965  00EED6  28                 	db	40
   966  00EED7  64                 	db	100	;'d'
   967  00EED8  69                 	db	105	;'i'
   968  00EED9  73                 	db	115	;'s'
   969  00EEDA  70                 	db	112	;'p'
   970  00EEDB  6C                 	db	108	;'l'
   971  00EEDC  61                 	db	97	;'a'
   972  00EEDD  79                 	db	121	;'y'
   973  00EEDE  65                 	db	101	;'e'
   974  00EEDF  64                 	db	100	;'d'
   975  00EEE0  20                 	db	32
   976  00EEE1  69                 	db	105	;'i'
   977  00EEE2  6E                 	db	110	;'n'
   978  00EEE3  20                 	db	32
   979  00EEE4  68                 	db	104	;'h'
   980  00EEE5  65                 	db	101	;'e'
   981  00EEE6  78                 	db	120	;'x'
   982  00EEE7  29                 	db	41
   983  00EEE8  20                 	db	32
   984  00EEE9  61                 	db	97	;'a'
   985  00EEEA  73                 	db	115	;'s'
   986  00EEEB  20                 	db	32
   987  00EEEC  73                 	db	115	;'s'
   988  00EEED  74                 	db	116	;'t'
   989  00EEEE  6F                 	db	111	;'o'
   990  00EEEF  72                 	db	114	;'r'
   991  00EEF0  65                 	db	101	;'e'
   992  00EEF1  64                 	db	100	;'d'
   993  00EEF2  20                 	db	32
   994  00EEF3  69                 	db	105	;'i'
   995  00EEF4  6E                 	db	110	;'n'
   996  00EEF5  20                 	db	32
   997  00EEF6  66                 	db	102	;'f'
   998  00EEF7  6C                 	db	108	;'l'
   999  00EEF8  61                 	db	97	;'a'
  1000  00EEF9  73                 	db	115	;'s'
  1001  00EEFA  68                 	db	104	;'h'
  1002  00EEFB  20                 	db	32
  1003  00EEFC  6D                 	db	109	;'m'
  1004  00EEFD  65                 	db	101	;'e'
  1005  00EEFE  6D                 	db	109	;'m'
  1006  00EEFF  6F                 	db	111	;'o'
  1007  00EF00  72                 	db	114	;'r'
  1008  00EF01  79                 	db	121	;'y'
  1009  00EF02  0A                 	db	10
  1010  00EF03  0D                 	db	13
  1011  00EF04  20                 	db	32
  1012  00EF05  20                 	db	32
  1013  00EF06  20                 	db	32
  1014  00EF07  41                 	db	65	;'A'
  1015  00EF08  44                 	db	68	;'D'
  1016  00EF09  43                 	db	67	;'C'
  1017  00EF0A  20                 	db	32
  1018  00EF0B  45                 	db	69	;'E'
  1019  00EF0C  72                 	db	114	;'r'
  1020  00EF0D  72                 	db	114	;'r'
  1021  00EF0E  6F                 	db	111	;'o'
  1022  00EF0F  72                 	db	114	;'r'
  1023  00EF10  3F                 	db	63	;'?'
  1024  00EF11  3A                 	db	58	;':'
  1025  00EF12  20                 	db	32
  1026  00EF13  52                 	db	82	;'R'
  1027  00EF14  65                 	db	101	;'e'
  1028  00EF15  74                 	db	116	;'t'
  1029  00EF16  75                 	db	117	;'u'
  1030  00EF17  72                 	db	114	;'r'
  1031  00EF18  6E                 	db	110	;'n'
  1032  00EF19  73                 	db	115	;'s'
  1033  00EF1A  20                 	db	32
  1034  00EF1B  74                 	db	116	;'t'
  1035  00EF1C  68                 	db	104	;'h'
  1036  00EF1D  65                 	db	101	;'e'
  1037  00EF1E  20                 	db	32
  1038  00EF1F  63                 	db	99	;'c'
  1039  00EF20  61                 	db	97	;'a'
  1040  00EF21  75                 	db	117	;'u'
  1041  00EF22  73                 	db	115	;'s'
  1042  00EF23  65                 	db	101	;'e'
  1043  00EF24  20                 	db	32
  1044  00EF25  6F                 	db	111	;'o'
  1045  00EF26  66                 	db	102	;'f'
  1046  00EF27  20                 	db	32
  1047  00EF28  61                 	db	97	;'a'
  1048  00EF29  6E                 	db	110	;'n'
  1049  00EF2A  20                 	db	32
  1050  00EF2B  41                 	db	65	;'A'
  1051  00EF2C  44                 	db	68	;'D'
  1052  00EF2D  43                 	db	67	;'C'
  1053  00EF2E  20                 	db	32
  1054  00EF2F  65                 	db	101	;'e'
  1055  00EF30  72                 	db	114	;'r'
  1056  00EF31  72                 	db	114	;'r'
  1057  00EF32  6F                 	db	111	;'o'
  1058  00EF33  72                 	db	114	;'r'
  1059  00EF34  20                 	db	32
  1060  00EF35  69                 	db	105	;'i'
  1061  00EF36  66                 	db	102	;'f'
  1062  00EF37  20                 	db	32
  1063  00EF38  61                 	db	97	;'a'
  1064  00EF39  6E                 	db	110	;'n'
  1065  00EF3A  20                 	db	32
  1066  00EF3B  65                 	db	101	;'e'
  1067  00EF3C  72                 	db	114	;'r'
  1068  00EF3D  72                 	db	114	;'r'
  1069  00EF3E  6F                 	db	111	;'o'
  1070  00EF3F  72                 	db	114	;'r'
  1071  00EF40  20                 	db	32
  1072  00EF41  6F                 	db	111	;'o'
  1073  00EF42  63                 	db	99	;'c'
  1074  00EF43  63                 	db	99	;'c'
  1075  00EF44  75                 	db	117	;'u'
  1076  00EF45  72                 	db	114	;'r'
  1077  00EF46  72                 	db	114	;'r'
  1078  00EF47  65                 	db	101	;'e'
  1079  00EF48  64                 	db	100	;'d'
  1080  00EF49  0A                 	db	10
  1081  00EF4A  0D                 	db	13
  1082  00EF4B  20                 	db	32
  1083  00EF4C  20                 	db	32
  1084  00EF4D  20                 	db	32
  1085  00EF4E  43                 	db	67	;'C'
  1086  00EF4F  6C                 	db	108	;'l'
  1087  00EF50  65                 	db	101	;'e'
  1088  00EF51  61                 	db	97	;'a'
  1089  00EF52  72                 	db	114	;'r'
  1090  00EF53  20                 	db	32
  1091  00EF54  41                 	db	65	;'A'
  1092  00EF55  44                 	db	68	;'D'
  1093  00EF56  43                 	db	67	;'C'
  1094  00EF57  20                 	db	32
  1095  00EF58  45                 	db	69	;'E'
  1096  00EF59  72                 	db	114	;'r'
  1097  00EF5A  72                 	db	114	;'r'
  1098  00EF5B  6F                 	db	111	;'o'
  1099  00EF5C  72                 	db	114	;'r'
  1100  00EF5D  3A                 	db	58	;':'
  1101  00EF5E  20                 	db	32
  1102  00EF5F  43                 	db	67	;'C'
  1103  00EF60  6C                 	db	108	;'l'
  1104  00EF61  65                 	db	101	;'e'
  1105  00EF62  61                 	db	97	;'a'
  1106  00EF63  72                 	db	114	;'r'
  1107  00EF64  73                 	db	115	;'s'
  1108  00EF65  20                 	db	32
  1109  00EF66  74                 	db	116	;'t'
  1110  00EF67  68                 	db	104	;'h'
  1111  00EF68  65                 	db	101	;'e'
  1112  00EF69  20                 	db	32
  1113  00EF6A  41                 	db	65	;'A'
  1114  00EF6B  44                 	db	68	;'D'
  1115  00EF6C  43                 	db	67	;'C'
  1116  00EF6D  20                 	db	32
  1117  00EF6E  65                 	db	101	;'e'
  1118  00EF6F  72                 	db	114	;'r'
  1119  00EF70  72                 	db	114	;'r'
  1120  00EF71  6F                 	db	111	;'o'
  1121  00EF72  72                 	db	114	;'r'
  1122  00EF73  20                 	db	32
  1123  00EF74  61                 	db	97	;'a'
  1124  00EF75  6E                 	db	110	;'n'
  1125  00EF76  64                 	db	100	;'d'
  1126  00EF77  20                 	db	32
  1127  00EF78  72                 	db	114	;'r'
  1128  00EF79  65                 	db	101	;'e'
  1129  00EF7A  73                 	db	115	;'s'
  1130  00EF7B  75                 	db	117	;'u'
  1131  00EF7C  6D                 	db	109	;'m'
  1132  00EF7D  65                 	db	101	;'e'
  1133  00EF7E  73                 	db	115	;'s'
  1134  00EF7F  20                 	db	32
  1135  00EF80  41                 	db	65	;'A'
  1136  00EF81  44                 	db	68	;'D'
  1137  00EF82  43                 	db	67	;'C'
  1138  00EF83  20                 	db	32
  1139  00EF84  63                 	db	99	;'c'
  1140  00EF85  6F                 	db	111	;'o'
  1141  00EF86  6E                 	db	110	;'n'
  1142  00EF87  76                 	db	118	;'v'
  1143  00EF88  65                 	db	101	;'e'
  1144  00EF89  72                 	db	114	;'r'
  1145  00EF8A  73                 	db	115	;'s'
  1146  00EF8B  69                 	db	105	;'i'
  1147  00EF8C  6F                 	db	111	;'o'
  1148  00EF8D  6E                 	db	110	;'n'
  1149  00EF8E  73                 	db	115	;'s'
  1150  00EF8F  0A                 	db	10
  1151  00EF90  0D                 	db	13
  1152  00EF91  20                 	db	32
  1153  00EF92  20                 	db	32
  1154  00EF93  20                 	db	32
  1155  00EF94  56                 	db	86	;'V'
  1156  00EF95  43                 	db	67	;'C'
  1157  00EF96  43                 	db	67	;'C'
  1158  00EF97  20                 	db	32
  1159  00EF98  4F                 	db	79	;'O'
  1160  00EF99  76                 	db	118	;'v'
  1161  00EF9A  65                 	db	101	;'e'
  1162  00EF9B  72                 	db	114	;'r'
  1163  00EF9C  76                 	db	118	;'v'
  1164  00EF9D  6F                 	db	111	;'o'
  1165  00EF9E  6C                 	db	108	;'l'
  1166  00EF9F  74                 	db	116	;'t'
  1167  00EFA0  61                 	db	97	;'a'
  1168  00EFA1  67                 	db	103	;'g'
  1169  00EFA2  65                 	db	101	;'e'
  1170  00EFA3  3F                 	db	63	;'?'
  1171  00EFA4  3A                 	db	58	;':'
  1172  00EFA5  20                 	db	32
  1173  00EFA6  53                 	db	83	;'S'
  1174  00EFA7  74                 	db	116	;'t'
  1175  00EFA8  61                 	db	97	;'a'
  1176  00EFA9  74                 	db	116	;'t'
  1177  00EFAA  65                 	db	101	;'e'
  1178  00EFAB  73                 	db	115	;'s'
  1179  00EFAC  20                 	db	32
  1180  00EFAD  69                 	db	105	;'i'
  1181  00EFAE  66                 	db	102	;'f'
  1182  00EFAF  20                 	db	32
  1183  00EFB0  61                 	db	97	;'a'
  1184  00EFB1  20                 	db	32
  1185  00EFB2  56                 	db	86	;'V'
  1186  00EFB3  43                 	db	67	;'C'
  1187  00EFB4  43                 	db	67	;'C'
  1188  00EFB5  20                 	db	32
  1189  00EFB6  6F                 	db	111	;'o'
  1190  00EFB7  76                 	db	118	;'v'
  1191  00EFB8  65                 	db	101	;'e'
  1192  00EFB9  72                 	db	114	;'r'
  1193  00EFBA  76                 	db	118	;'v'
  1194  00EFBB  6F                 	db	111	;'o'
  1195  00EFBC  6C                 	db	108	;'l'
  1196  00EFBD  74                 	db	116	;'t'
  1197  00EFBE  61                 	db	97	;'a'
  1198  00EFBF  67                 	db	103	;'g'
  1199  00EFC0  65                 	db	101	;'e'
  1200  00EFC1  20                 	db	32
  1201  00EFC2  63                 	db	99	;'c'
  1202  00EFC3  6F                 	db	111	;'o'
  1203  00EFC4  6E                 	db	110	;'n'
  1204  00EFC5  64                 	db	100	;'d'
  1205  00EFC6  69                 	db	105	;'i'
  1206  00EFC7  74                 	db	116	;'t'
  1207  00EFC8  69                 	db	105	;'i'
  1208  00EFC9  6F                 	db	111	;'o'
  1209  00EFCA  6E                 	db	110	;'n'
  1210  00EFCB  20                 	db	32
  1211  00EFCC  68                 	db	104	;'h'
  1212  00EFCD  61                 	db	97	;'a'
  1213  00EFCE  73                 	db	115	;'s'
  1214  00EFCF  20                 	db	32
  1215  00EFD0  6F                 	db	111	;'o'
  1216  00EFD1  63                 	db	99	;'c'
  1217  00EFD2  63                 	db	99	;'c'
  1218  00EFD3  75                 	db	117	;'u'
  1219  00EFD4  72                 	db	114	;'r'
  1220  00EFD5  72                 	db	114	;'r'
  1221  00EFD6  65                 	db	101	;'e'
  1222  00EFD7  64                 	db	100	;'d'
  1223  00EFD8  20                 	db	32
  1224  00EFD9  6F                 	db	111	;'o'
  1225  00EFDA  72                 	db	114	;'r'
  1226  00EFDB  20                 	db	32
  1227  00EFDC  6E                 	db	110	;'n'
  1228  00EFDD  6F                 	db	111	;'o'
  1229  00EFDE  74                 	db	116	;'t'
  1230  00EFDF  0A                 	db	10
  1231  00EFE0  0D                 	db	13
  1232  00EFE1  20                 	db	32
  1233  00EFE2  20                 	db	32
  1234  00EFE3  20                 	db	32
  1235  00EFE4  48                 	db	72	;'H'
  1236  00EFE5  65                 	db	101	;'e'
  1237  00EFE6  6C                 	db	108	;'l'
  1238  00EFE7  70                 	db	112	;'p'
  1239  00EFE8  3A                 	db	58	;':'
  1240  00EFE9  20                 	db	32
  1241  00EFEA  54                 	db	84	;'T'
  1242  00EFEB  68                 	db	104	;'h'
  1243  00EFEC  69                 	db	105	;'i'
  1244  00EFED  73                 	db	115	;'s'
  1245  00EFEE  20                 	db	32
  1246  00EFEF  6D                 	db	109	;'m'
  1247  00EFF0  65                 	db	101	;'e'
  1248  00EFF1  73                 	db	115	;'s'
  1249  00EFF2  73                 	db	115	;'s'
  1250  00EFF3  61                 	db	97	;'a'
  1251  00EFF4  67                 	db	103	;'g'
  1252  00EFF5  65                 	db	101	;'e'
  1253  00EFF6  2C                 	db	44
  1254  00EFF7  20                 	db	32
  1255  00EFF8  6C                 	db	108	;'l'
  1256  00EFF9  69                 	db	105	;'i'
  1257  00EFFA  73                 	db	115	;'s'
  1258  00EFFB  74                 	db	116	;'t'
  1259  00EFFC  73                 	db	115	;'s'
  1260  00EFFD  20                 	db	32
  1261  00EFFE  73                 	db	115	;'s'
  1262  00EFFF  75                 	db	117	;'u'
  1263  00F000  70                 	db	112	;'p'
  1264  00F001  70                 	db	112	;'p'
  1265  00F002  6F                 	db	111	;'o'
  1266  00F003  72                 	db	114	;'r'
  1267  00F004  74                 	db	116	;'t'
  1268  00F005  65                 	db	101	;'e'
  1269  00F006  64                 	db	100	;'d'
  1270  00F007  20                 	db	32
  1271  00F008  63                 	db	99	;'c'
  1272  00F009  6F                 	db	111	;'o'
  1273  00F00A  6D                 	db	109	;'m'
  1274  00F00B  6D                 	db	109	;'m'
  1275  00F00C  61                 	db	97	;'a'
  1276  00F00D  6E                 	db	110	;'n'
  1277  00F00E  64                 	db	100	;'d'
  1278  00F00F  73                 	db	115	;'s'
  1279  00F010  0A                 	db	10
  1280  00F011  0D                 	db	13
  1281  00F012  44                 	db	68	;'D'
  1282  00F013  65                 	db	101	;'e'
  1283  00F014  76                 	db	118	;'v'
  1284  00F015  69                 	db	105	;'i'
  1285  00F016  63                 	db	99	;'c'
  1286  00F017  65                 	db	101	;'e'
  1287  00F018  20                 	db	32
  1288  00F019  4D                 	db	77	;'M'
  1289  00F01A  65                 	db	101	;'e'
  1290  00F01B  61                 	db	97	;'a'
  1291  00F01C  73                 	db	115	;'s'
  1292  00F01D  75                 	db	117	;'u'
  1293  00F01E  72                 	db	114	;'r'
  1294  00F01F  65                 	db	101	;'e'
  1295  00F020  6D                 	db	109	;'m'
  1296  00F021  65                 	db	101	;'e'
  1297  00F022  6E                 	db	110	;'n'
  1298  00F023  74                 	db	116	;'t'
  1299  00F024  20                 	db	32
  1300  00F025  43                 	db	67	;'C'
  1301  00F026  6F                 	db	111	;'o'
  1302  00F027  6D                 	db	109	;'m'
  1303  00F028  6D                 	db	109	;'m'
  1304  00F029  61                 	db	97	;'a'
  1305  00F02A  6E                 	db	110	;'n'
  1306  00F02B  64                 	db	100	;'d'
  1307  00F02C  73                 	db	115	;'s'
  1308  00F02D  3A                 	db	58	;':'
  1309  00F02E  0A                 	db	10
  1310  00F02F  0D                 	db	13
  1311  00F030  20                 	db	32
  1312  00F031  20                 	db	32
  1313  00F032  20                 	db	32
  1314  00F033  4D                 	db	77	;'M'
  1315  00F034  65                 	db	101	;'e'
  1316  00F035  61                 	db	97	;'a'
  1317  00F036  73                 	db	115	;'s'
  1318  00F037  75                 	db	117	;'u'
  1319  00F038  72                 	db	114	;'r'
  1320  00F039  65                 	db	101	;'e'
  1321  00F03A  20                 	db	32
  1322  00F03B  50                 	db	80	;'P'
  1323  00F03C  4F                 	db	79	;'O'
  1324  00F03D  53                 	db	83	;'S'
  1325  00F03E  33                 	db	51	;'3'
  1326  00F03F  50                 	db	80	;'P'
  1327  00F040  33                 	db	51	;'3'
  1328  00F041  3F                 	db	63	;'?'
  1329  00F042  3A                 	db	58	;':'
  1330  00F043  20                 	db	32
  1331  00F044  52                 	db	82	;'R'
  1332  00F045  65                 	db	101	;'e'
  1333  00F046  74                 	db	116	;'t'
  1334  00F047  75                 	db	117	;'u'
  1335  00F048  72                 	db	114	;'r'
  1336  00F049  6E                 	db	110	;'n'
  1337  00F04A  73                 	db	115	;'s'
  1338  00F04B  20                 	db	32
  1339  00F04C  2B                 	db	43
  1340  00F04D  33                 	db	51	;'3'
  1341  00F04E  2E                 	db	46
  1342  00F04F  33                 	db	51	;'3'
  1343  00F050  56                 	db	86	;'V'
  1344  00F051  20                 	db	32
  1345  00F052  41                 	db	65	;'A'
  1346  00F053  44                 	db	68	;'D'
  1347  00F054  43                 	db	67	;'C'
  1348  00F055  20                 	db	32
  1349  00F056  43                 	db	67	;'C'
  1350  00F057  6F                 	db	111	;'o'
  1351  00F058  6E                 	db	110	;'n'
  1352  00F059  76                 	db	118	;'v'
  1353  00F05A  65                 	db	101	;'e'
  1354  00F05B  72                 	db	114	;'r'
  1355  00F05C  73                 	db	115	;'s'
  1356  00F05D  69                 	db	105	;'i'
  1357  00F05E  6F                 	db	111	;'o'
  1358  00F05F  6E                 	db	110	;'n'
  1359  00F060  20                 	db	32
  1360  00F061  69                 	db	105	;'i'
  1361  00F062  6E                 	db	110	;'n'
  1362  00F063  20                 	db	32
  1363  00F064  76                 	db	118	;'v'
  1364  00F065  6F                 	db	111	;'o'
  1365  00F066  6C                 	db	108	;'l'
  1366  00F067  74                 	db	116	;'t'
  1367  00F068  73                 	db	115	;'s'
  1368  00F069  0A                 	db	10
  1369  00F06A  0D                 	db	13
  1370  00F06B  20                 	db	32
  1371  00F06C  20                 	db	32
  1372  00F06D  20                 	db	32
  1373  00F06E  4D                 	db	77	;'M'
  1374  00F06F  65                 	db	101	;'e'
  1375  00F070  61                 	db	97	;'a'
  1376  00F071  73                 	db	115	;'s'
  1377  00F072  75                 	db	117	;'u'
  1378  00F073  72                 	db	114	;'r'
  1379  00F074  65                 	db	101	;'e'
  1380  00F075  20                 	db	32
  1381  00F076  50                 	db	80	;'P'
  1382  00F077  4F                 	db	79	;'O'
  1383  00F078  53                 	db	83	;'S'
  1384  00F079  31                 	db	49	;'1'
  1385  00F07A  32                 	db	50	;'2'
  1386  00F07B  3F                 	db	63	;'?'
  1387  00F07C  3A                 	db	58	;':'
  1388  00F07D  20                 	db	32
  1389  00F07E  52                 	db	82	;'R'
  1390  00F07F  65                 	db	101	;'e'
  1391  00F080  74                 	db	116	;'t'
  1392  00F081  75                 	db	117	;'u'
  1393  00F082  72                 	db	114	;'r'
  1394  00F083  6E                 	db	110	;'n'
  1395  00F084  73                 	db	115	;'s'
  1396  00F085  20                 	db	32
  1397  00F086  2B                 	db	43
  1398  00F087  31                 	db	49	;'1'
  1399  00F088  32                 	db	50	;'2'
  1400  00F089  56                 	db	86	;'V'
  1401  00F08A  20                 	db	32
  1402  00F08B  41                 	db	65	;'A'
  1403  00F08C  44                 	db	68	;'D'
  1404  00F08D  43                 	db	67	;'C'
  1405  00F08E  20                 	db	32
  1406  00F08F  43                 	db	67	;'C'
  1407  00F090  6F                 	db	111	;'o'
  1408  00F091  6E                 	db	110	;'n'
  1409  00F092  76                 	db	118	;'v'
  1410  00F093  65                 	db	101	;'e'
  1411  00F094  72                 	db	114	;'r'
  1412  00F095  73                 	db	115	;'s'
  1413  00F096  69                 	db	105	;'i'
  1414  00F097  6F                 	db	111	;'o'
  1415  00F098  6E                 	db	110	;'n'
  1416  00F099  20                 	db	32
  1417  00F09A  69                 	db	105	;'i'
  1418  00F09B  6E                 	db	110	;'n'
  1419  00F09C  20                 	db	32
  1420  00F09D  76                 	db	118	;'v'
  1421  00F09E  6F                 	db	111	;'o'
  1422  00F09F  6C                 	db	108	;'l'
  1423  00F0A0  74                 	db	116	;'t'
  1424  00F0A1  73                 	db	115	;'s'
  1425  00F0A2  0A                 	db	10
  1426  00F0A3  0D                 	db	13
  1427  00F0A4  20                 	db	32
  1428  00F0A5  20                 	db	32
  1429  00F0A6  20                 	db	32
  1430  00F0A7  4D                 	db	77	;'M'
  1431  00F0A8  65                 	db	101	;'e'
  1432  00F0A9  61                 	db	97	;'a'
  1433  00F0AA  73                 	db	115	;'s'
  1434  00F0AB  75                 	db	117	;'u'
  1435  00F0AC  72                 	db	114	;'r'
  1436  00F0AD  65                 	db	101	;'e'
  1437  00F0AE  20                 	db	32
  1438  00F0AF  44                 	db	68	;'D'
  1439  00F0B0  69                 	db	105	;'i'
  1440  00F0B1  65                 	db	101	;'e'
  1441  00F0B2  20                 	db	32
  1442  00F0B3  54                 	db	84	;'T'
  1443  00F0B4  65                 	db	101	;'e'
  1444  00F0B5  6D                 	db	109	;'m'
  1445  00F0B6  70                 	db	112	;'p'
  1446  00F0B7  3F                 	db	63	;'?'
  1447  00F0B8  3A                 	db	58	;':'
  1448  00F0B9  20                 	db	32
  1449  00F0BA  52                 	db	82	;'R'
  1450  00F0BB  65                 	db	101	;'e'
  1451  00F0BC  74                 	db	116	;'t'
  1452  00F0BD  75                 	db	117	;'u'
  1453  00F0BE  72                 	db	114	;'r'
  1454  00F0BF  6E                 	db	110	;'n'
  1455  00F0C0  73                 	db	115	;'s'
  1456  00F0C1  20                 	db	32
  1457  00F0C2  74                 	db	116	;'t'
  1458  00F0C3  68                 	db	104	;'h'
  1459  00F0C4  65                 	db	101	;'e'
  1460  00F0C5  20                 	db	32
  1461  00F0C6  6D                 	db	109	;'m'
  1462  00F0C7  69                 	db	105	;'i'
  1463  00F0C8  63                 	db	99	;'c'
  1464  00F0C9  72                 	db	114	;'r'
  1465  00F0CA  6F                 	db	111	;'o'
  1466  00F0CB  63                 	db	99	;'c'
  1467  00F0CC  6F                 	db	111	;'o'
  1468  00F0CD  6E                 	db	110	;'n'
  1469  00F0CE  74                 	db	116	;'t'
  1470  00F0CF  72                 	db	114	;'r'
  1471  00F0D0  6F                 	db	111	;'o'
  1472  00F0D1  6C                 	db	108	;'l'
  1473  00F0D2  6C                 	db	108	;'l'
  1474  00F0D3  65                 	db	101	;'e'
  1475  00F0D4  72                 	db	114	;'r'
  1476  00F0D5  20                 	db	32
  1477  00F0D6  64                 	db	100	;'d'
  1478  00F0D7  69                 	db	105	;'i'
  1479  00F0D8  65                 	db	101	;'e'
  1480  00F0D9  20                 	db	32
  1481  00F0DA  74                 	db	116	;'t'
  1482  00F0DB  65                 	db	101	;'e'
  1483  00F0DC  6D                 	db	109	;'m'
  1484  00F0DD  70                 	db	112	;'p'
  1485  00F0DE  65                 	db	101	;'e'
  1486  00F0DF  72                 	db	114	;'r'
  1487  00F0E0  61                 	db	97	;'a'
  1488  00F0E1  74                 	db	116	;'t'
  1489  00F0E2  75                 	db	117	;'u'
  1490  00F0E3  72                 	db	114	;'r'
  1491  00F0E4  65                 	db	101	;'e'
  1492  00F0E5  20                 	db	32
  1493  00F0E6  69                 	db	105	;'i'
  1494  00F0E7  6E                 	db	110	;'n'
  1495  00F0E8  20                 	db	32
  1496  00F0E9  64                 	db	100	;'d'
  1497  00F0EA  65                 	db	101	;'e'
  1498  00F0EB  67                 	db	103	;'g'
  1499  00F0EC  72                 	db	114	;'r'
  1500  00F0ED  65                 	db	101	;'e'
  1501  00F0EE  65                 	db	101	;'e'
  1502  00F0EF  73                 	db	115	;'s'
  1503  00F0F0  20                 	db	32
  1504  00F0F1  43                 	db	67	;'C'
  1505  00F0F2  0A                 	db	10
  1506  00F0F3  0D                 	db	13
  1507  00F0F4  20                 	db	32
  1508  00F0F5  20                 	db	32
  1509  00F0F6  20                 	db	32
  1510  00F0F7  4D                 	db	77	;'M'
  1511  00F0F8  65                 	db	101	;'e'
  1512  00F0F9  61                 	db	97	;'a'
  1513  00F0FA  73                 	db	115	;'s'
  1514  00F0FB  75                 	db	117	;'u'
  1515  00F0FC  72                 	db	114	;'r'
  1516  00F0FD  65                 	db	101	;'e'
  1517  00F0FE  20                 	db	32
  1518  00F0FF  46                 	db	70	;'F'
  1519  00F100  56                 	db	86	;'V'
  1520  00F101  52                 	db	82	;'R'
  1521  00F102  3F                 	db	63	;'?'
  1522  00F103  3A                 	db	58	;':'
  1523  00F104  20                 	db	32
  1524  00F105  52                 	db	82	;'R'
  1525  00F106  65                 	db	101	;'e'
  1526  00F107  74                 	db	116	;'t'
  1527  00F108  75                 	db	117	;'u'
  1528  00F109  72                 	db	114	;'r'
  1529  00F10A  6E                 	db	110	;'n'
  1530  00F10B  73                 	db	115	;'s'
  1531  00F10C  20                 	db	32
  1532  00F10D  74                 	db	116	;'t'
  1533  00F10E  68                 	db	104	;'h'
  1534  00F10F  65                 	db	101	;'e'
  1535  00F110  20                 	db	32
  1536  00F111  69                 	db	105	;'i'
  1537  00F112  6E                 	db	110	;'n'
  1538  00F113  74                 	db	116	;'t'
  1539  00F114  65                 	db	101	;'e'
  1540  00F115  72                 	db	114	;'r'
  1541  00F116  6E                 	db	110	;'n'
  1542  00F117  61                 	db	97	;'a'
  1543  00F118  6C                 	db	108	;'l'
  1544  00F119  20                 	db	32
  1545  00F11A  66                 	db	102	;'f'
  1546  00F11B  69                 	db	105	;'i'
  1547  00F11C  78                 	db	120	;'x'
  1548  00F11D  65                 	db	101	;'e'
  1549  00F11E  64                 	db	100	;'d'
  1550  00F11F  20                 	db	32
  1551  00F120  76                 	db	118	;'v'
  1552  00F121  6F                 	db	111	;'o'
  1553  00F122  6C                 	db	108	;'l'
  1554  00F123  74                 	db	116	;'t'
  1555  00F124  61                 	db	97	;'a'
  1556  00F125  67                 	db	103	;'g'
  1557  00F126  65                 	db	101	;'e'
  1558  00F127  20                 	db	32
  1559  00F128  72                 	db	114	;'r'
  1560  00F129  65                 	db	101	;'e'
  1561  00F12A  66                 	db	102	;'f'
  1562  00F12B  65                 	db	101	;'e'
  1563  00F12C  72                 	db	114	;'r'
  1564  00F12D  65                 	db	101	;'e'
  1565  00F12E  6E                 	db	110	;'n'
  1566  00F12F  63                 	db	99	;'c'
  1567  00F130  65                 	db	101	;'e'
  1568  00F131  20                 	db	32
  1569  00F132  62                 	db	98	;'b'
  1570  00F133  75                 	db	117	;'u'
  1571  00F134  66                 	db	102	;'f'
  1572  00F135  66                 	db	102	;'f'
  1573  00F136  65                 	db	101	;'e'
  1574  00F137  72                 	db	114	;'r'
  1575  00F138  20                 	db	32
  1576  00F139  31                 	db	49	;'1'
  1577  00F13A  20                 	db	32
  1578  00F13B  6F                 	db	111	;'o'
  1579  00F13C  75                 	db	117	;'u'
  1580  00F13D  74                 	db	116	;'t'
  1581  00F13E  70                 	db	112	;'p'
  1582  00F13F  75                 	db	117	;'u'
  1583  00F140  74                 	db	116	;'t'
  1584  00F141  20                 	db	32
  1585  00F142  69                 	db	105	;'i'
  1586  00F143  6E                 	db	110	;'n'
  1587  00F144  20                 	db	32
  1588  00F145  76                 	db	118	;'v'
  1589  00F146  6F                 	db	111	;'o'
  1590  00F147  6C                 	db	108	;'l'
  1591  00F148  74                 	db	116	;'t'
  1592  00F149  73                 	db	115	;'s'
  1593  00F14A  0A                 	db	10
  1594  00F14B  0D                 	db	13
  1595  00F14C  20                 	db	32
  1596  00F14D  20                 	db	32
  1597  00F14E  20                 	db	32
  1598  00F14F  4D                 	db	77	;'M'
  1599  00F150  65                 	db	101	;'e'
  1600  00F151  61                 	db	97	;'a'
  1601  00F152  73                 	db	115	;'s'
  1602  00F153  75                 	db	117	;'u'
  1603  00F154  72                 	db	114	;'r'
  1604  00F155  65                 	db	101	;'e'
  1605  00F156  20                 	db	32
  1606  00F157  41                 	db	65	;'A'
  1607  00F158  56                 	db	86	;'V'
  1608  00F159  53                 	db	83	;'S'
  1609  00F15A  53                 	db	83	;'S'
  1610  00F15B  3F                 	db	63	;'?'
  1611  00F15C  3A                 	db	58	;':'
  1612  00F15D  20                 	db	32
  1613  00F15E  52                 	db	82	;'R'
  1614  00F15F  65                 	db	101	;'e'
  1615  00F160  74                 	db	116	;'t'
  1616  00F161  75                 	db	117	;'u'
  1617  00F162  72                 	db	114	;'r'
  1618  00F163  6E                 	db	110	;'n'
  1619  00F164  73                 	db	115	;'s'
  1620  00F165  20                 	db	32
  1621  00F166  74                 	db	116	;'t'
  1622  00F167  68                 	db	104	;'h'
  1623  00F168  65                 	db	101	;'e'
  1624  00F169  20                 	db	32
  1625  00F16A  6D                 	db	109	;'m'
  1626  00F16B  65                 	db	101	;'e'
  1627  00F16C  61                 	db	97	;'a'
  1628  00F16D  73                 	db	115	;'s'
  1629  00F16E  75                 	db	117	;'u'
  1630  00F16F  72                 	db	114	;'r'
  1631  00F170  65                 	db	101	;'e'
  1632  00F171  64                 	db	100	;'d'
  1633  00F172  20                 	db	32
  1634  00F173  76                 	db	118	;'v'
  1635  00F174  61                 	db	97	;'a'
  1636  00F175  6C                 	db	108	;'l'
  1637  00F176  75                 	db	117	;'u'
  1638  00F177  65                 	db	101	;'e'
  1639  00F178  20                 	db	32
  1640  00F179  6F                 	db	111	;'o'
  1641  00F17A  66                 	db	102	;'f'
  1642  00F17B  20                 	db	32
  1643  00F17C  41                 	db	65	;'A'
  1644  00F17D  6E                 	db	110	;'n'
  1645  00F17E  61                 	db	97	;'a'
  1646  00F17F  6C                 	db	108	;'l'
  1647  00F180  6F                 	db	111	;'o'
  1648  00F181  67                 	db	103	;'g'
  1649  00F182  20                 	db	32
  1650  00F183  56                 	db	86	;'V'
  1651  00F184  53                 	db	83	;'S'
  1652  00F185  53                 	db	83	;'S'
  1653  00F186  20                 	db	32
  1654  00F187  69                 	db	105	;'i'
  1655  00F188  6E                 	db	110	;'n'
  1656  00F189  20                 	db	32
  1657  00F18A  76                 	db	118	;'v'
  1658  00F18B  6F                 	db	111	;'o'
  1659  00F18C  6C                 	db	108	;'l'
  1660  00F18D  74                 	db	116	;'t'
  1661  00F18E  73                 	db	115	;'s'
  1662  00F18F  0A                 	db	10
  1663  00F190  0D                 	db	13
  1664  00F191  50                 	db	80	;'P'
  1665  00F192  72                 	db	114	;'r'
  1666  00F193  69                 	db	105	;'i'
  1667  00F194  6D                 	db	109	;'m'
  1668  00F195  61                 	db	97	;'a'
  1669  00F196  72                 	db	114	;'r'
  1670  00F197  79                 	db	121	;'y'
  1671  00F198  20                 	db	32
  1672  00F199  4D                 	db	77	;'M'
  1673  00F19A  65                 	db	101	;'e'
  1674  00F19B  61                 	db	97	;'a'
  1675  00F19C  73                 	db	115	;'s'
  1676  00F19D  75                 	db	117	;'u'
  1677  00F19E  72                 	db	114	;'r'
  1678  00F19F  65                 	db	101	;'e'
  1679  00F1A0  6D                 	db	109	;'m'
  1680  00F1A1  65                 	db	101	;'e'
  1681  00F1A2  6E                 	db	110	;'n'
  1682  00F1A3  74                 	db	116	;'t'
  1683  00F1A4  20                 	db	32
  1684  00F1A5  43                 	db	67	;'C'
  1685  00F1A6  6F                 	db	111	;'o'
  1686  00F1A7  6D                 	db	109	;'m'
  1687  00F1A8  6D                 	db	109	;'m'
  1688  00F1A9  61                 	db	97	;'a'
  1689  00F1AA  6E                 	db	110	;'n'
  1690  00F1AB  64                 	db	100	;'d'
  1691  00F1AC  73                 	db	115	;'s'
  1692  00F1AD  3A                 	db	58	;':'
  1693  00F1AE  0A                 	db	10
  1694  00F1AF  0D                 	db	13
  1695  00F1B0  20                 	db	32
  1696  00F1B1  20                 	db	32
  1697  00F1B2  20                 	db	32
  1698  00F1B3  4D                 	db	77	;'M'
  1699  00F1B4  65                 	db	101	;'e'
  1700  00F1B5  61                 	db	97	;'a'
  1701  00F1B6  73                 	db	115	;'s'
  1702  00F1B7  75                 	db	117	;'u'
  1703  00F1B8  72                 	db	114	;'r'
  1704  00F1B9  65                 	db	101	;'e'
  1705  00F1BA  20                 	db	32
  1706  00F1BB  44                 	db	68	;'D'
  1707  00F1BC  65                 	db	101	;'e'
  1708  00F1BD  74                 	db	116	;'t'
  1709  00F1BE  65                 	db	101	;'e'
  1710  00F1BF  63                 	db	99	;'c'
  1711  00F1C0  74                 	db	116	;'t'
  1712  00F1C1  65                 	db	101	;'e'
  1713  00F1C2  64                 	db	100	;'d'
  1714  00F1C3  20                 	db	32
  1715  00F1C4  43                 	db	67	;'C'
  1716  00F1C5  75                 	db	117	;'u'
  1717  00F1C6  72                 	db	114	;'r'
  1718  00F1C7  72                 	db	114	;'r'
  1719  00F1C8  65                 	db	101	;'e'
  1720  00F1C9  6E                 	db	110	;'n'
  1721  00F1CA  74                 	db	116	;'t'
  1722  00F1CB  3F                 	db	63	;'?'
  1723  00F1CC  3A                 	db	58	;':'
  1724  00F1CD  20                 	db	32
  1725  00F1CE  52                 	db	82	;'R'
  1726  00F1CF  65                 	db	101	;'e'
  1727  00F1D0  74                 	db	116	;'t'
  1728  00F1D1  75                 	db	117	;'u'
  1729  00F1D2  72                 	db	114	;'r'
  1730  00F1D3  6E                 	db	110	;'n'
  1731  00F1D4  73                 	db	115	;'s'
  1732  00F1D5  20                 	db	32
  1733  00F1D6  6D                 	db	109	;'m'
  1734  00F1D7  65                 	db	101	;'e'
  1735  00F1D8  61                 	db	97	;'a'
  1736  00F1D9  73                 	db	115	;'s'
  1737  00F1DA  75                 	db	117	;'u'
  1738  00F1DB  72                 	db	114	;'r'
  1739  00F1DC  65                 	db	101	;'e'
  1740  00F1DD  64                 	db	100	;'d'
  1741  00F1DE  20                 	db	32
  1742  00F1DF  6F                 	db	111	;'o'
  1743  00F1E0  75                 	db	117	;'u'
  1744  00F1E1  74                 	db	116	;'t'
  1745  00F1E2  70                 	db	112	;'p'
  1746  00F1E3  75                 	db	117	;'u'
  1747  00F1E4  74                 	db	116	;'t'
  1748  00F1E5  20                 	db	32
  1749  00F1E6  63                 	db	99	;'c'
  1750  00F1E7  75                 	db	117	;'u'
  1751  00F1E8  72                 	db	114	;'r'
  1752  00F1E9  72                 	db	114	;'r'
  1753  00F1EA  65                 	db	101	;'e'
  1754  00F1EB  6E                 	db	110	;'n'
  1755  00F1EC  74                 	db	116	;'t'
  1756  00F1ED  20                 	db	32
  1757  00F1EE  69                 	db	105	;'i'
  1758  00F1EF  6E                 	db	110	;'n'
  1759  00F1F0  20                 	db	32
  1760  00F1F1  61                 	db	97	;'a'
  1761  00F1F2  6D                 	db	109	;'m'
  1762  00F1F3  70                 	db	112	;'p'
  1763  00F1F4  73                 	db	115	;'s'
  1764  00F1F5  20                 	db	32
  1765  00F1F6  61                 	db	97	;'a'
  1766  00F1F7  73                 	db	115	;'s'
  1767  00F1F8  20                 	db	32
  1768  00F1F9  73                 	db	115	;'s'
  1769  00F1FA  65                 	db	101	;'e'
  1770  00F1FB  65                 	db	101	;'e'
  1771  00F1FC  6E                 	db	110	;'n'
  1772  00F1FD  20                 	db	32
  1773  00F1FE  62                 	db	98	;'b'
  1774  00F1FF  79                 	db	121	;'y'
  1775  00F200  20                 	db	32
  1776  00F201  41                 	db	65	;'A'
  1777  00F202  44                 	db	68	;'D'
  1778  00F203  43                 	db	67	;'C'
  1779  00F204  0A                 	db	10
  1780  00F205  0D                 	db	13
  1781  00F206  20                 	db	32
  1782  00F207  20                 	db	32
  1783  00F208  20                 	db	32
  1784  00F209  4D                 	db	77	;'M'
  1785  00F20A  65                 	db	101	;'e'
  1786  00F20B  61                 	db	97	;'a'
  1787  00F20C  73                 	db	115	;'s'
  1788  00F20D  75                 	db	117	;'u'
  1789  00F20E  72                 	db	114	;'r'
  1790  00F20F  65                 	db	101	;'e'
  1791  00F210  20                 	db	32
  1792  00F211  52                 	db	82	;'R'
  1793  00F212  4D                 	db	77	;'M'
  1794  00F213  53                 	db	83	;'S'
  1795  00F214  20                 	db	32
  1796  00F215  43                 	db	67	;'C'
  1797  00F216  75                 	db	117	;'u'
  1798  00F217  72                 	db	114	;'r'
  1799  00F218  72                 	db	114	;'r'
  1800  00F219  65                 	db	101	;'e'
  1801  00F21A  6E                 	db	110	;'n'
  1802  00F21B  74                 	db	116	;'t'
  1803  00F21C  3F                 	db	63	;'?'
  1804  00F21D  3A                 	db	58	;':'
  1805  00F21E  20                 	db	32
  1806  00F21F  52                 	db	82	;'R'
  1807  00F220  65                 	db	101	;'e'
  1808  00F221  74                 	db	116	;'t'
  1809  00F222  75                 	db	117	;'u'
  1810  00F223  72                 	db	114	;'r'
  1811  00F224  6E                 	db	110	;'n'
  1812  00F225  73                 	db	115	;'s'
  1813  00F226  20                 	db	32
  1814  00F227  74                 	db	116	;'t'
  1815  00F228  68                 	db	104	;'h'
  1816  00F229  65                 	db	101	;'e'
  1817  00F22A  20                 	db	32
  1818  00F22B  63                 	db	99	;'c'
  1819  00F22C  61                 	db	97	;'a'
  1820  00F22D  6C                 	db	108	;'l'
  1821  00F22E  63                 	db	99	;'c'
  1822  00F22F  75                 	db	117	;'u'
  1823  00F230  6C                 	db	108	;'l'
  1824  00F231  61                 	db	97	;'a'
  1825  00F232  74                 	db	116	;'t'
  1826  00F233  65                 	db	101	;'e'
  1827  00F234  64                 	db	100	;'d'
  1828  00F235  20                 	db	32
  1829  00F236  52                 	db	82	;'R'
  1830  00F237  4D                 	db	77	;'M'
  1831  00F238  53                 	db	83	;'S'
  1832  00F239  20                 	db	32
  1833  00F23A  6F                 	db	111	;'o'
  1834  00F23B  75                 	db	117	;'u'
  1835  00F23C  74                 	db	116	;'t'
  1836  00F23D  70                 	db	112	;'p'
  1837  00F23E  75                 	db	117	;'u'
  1838  00F23F  74                 	db	116	;'t'
  1839  00F240  20                 	db	32
  1840  00F241  63                 	db	99	;'c'
  1841  00F242  75                 	db	117	;'u'
  1842  00F243  72                 	db	114	;'r'
  1843  00F244  72                 	db	114	;'r'
  1844  00F245  65                 	db	101	;'e'
  1845  00F246  6E                 	db	110	;'n'
  1846  00F247  74                 	db	116	;'t'
  1847  00F248  20                 	db	32
  1848  00F249  66                 	db	102	;'f'
  1849  00F24A  72                 	db	114	;'r'
  1850  00F24B  6F                 	db	111	;'o'
  1851  00F24C  6D                 	db	109	;'m'
  1852  00F24D  20                 	db	32
  1853  00F24E  6D                 	db	109	;'m'
  1854  00F24F  65                 	db	101	;'e'
  1855  00F250  61                 	db	97	;'a'
  1856  00F251  73                 	db	115	;'s'
  1857  00F252  75                 	db	117	;'u'
  1858  00F253  72                 	db	114	;'r'
  1859  00F254  65                 	db	101	;'e'
  1860  00F255  6D                 	db	109	;'m'
  1861  00F256  65                 	db	101	;'e'
  1862  00F257  6E                 	db	110	;'n'
  1863  00F258  74                 	db	116	;'t'
  1864  00F259  73                 	db	115	;'s'
  1865  00F25A  20                 	db	32
  1866  00F25B  61                 	db	97	;'a'
  1867  00F25C  6E                 	db	110	;'n'
  1868  00F25D  64                 	db	100	;'d'
  1869  00F25E  20                 	db	32
  1870  00F25F  54                 	db	84	;'T'
  1871  00F260  52                 	db	82	;'R'
  1872  00F261  49                 	db	73	;'I'
  1873  00F262  41                 	db	65	;'A'
  1874  00F263  43                 	db	67	;'C'
  1875  00F264  20                 	db	32
  1876  00F265  66                 	db	102	;'f'
  1877  00F266  69                 	db	105	;'i'
  1878  00F267  72                 	db	114	;'r'
  1879  00F268  69                 	db	105	;'i'
  1880  00F269  6E                 	db	110	;'n'
  1881  00F26A  67                 	db	103	;'g'
  1882  00F26B  20                 	db	32
  1883  00F26C  61                 	db	97	;'a'
  1884  00F26D  6E                 	db	110	;'n'
  1885  00F26E  67                 	db	103	;'g'
  1886  00F26F  6C                 	db	108	;'l'
  1887  00F270  65                 	db	101	;'e'
  1888  00F271  0A                 	db	10
  1889  00F272  0D                 	db	13
  1890  00F273  20                 	db	32
  1891  00F274  20                 	db	32
  1892  00F275  20                 	db	32
  1893  00F276  4D                 	db	77	;'M'
  1894  00F277  65                 	db	101	;'e'
  1895  00F278  61                 	db	97	;'a'
  1896  00F279  73                 	db	115	;'s'
  1897  00F27A  75                 	db	117	;'u'
  1898  00F27B  72                 	db	114	;'r'
  1899  00F27C  65                 	db	101	;'e'
  1900  00F27D  20                 	db	32
  1901  00F27E  52                 	db	82	;'R'
  1902  00F27F  4D                 	db	77	;'M'
  1903  00F280  53                 	db	83	;'S'
  1904  00F281  20                 	db	32
  1905  00F282  56                 	db	86	;'V'
  1906  00F283  6F                 	db	111	;'o'
  1907  00F284  6C                 	db	108	;'l'
  1908  00F285  74                 	db	116	;'t'
  1909  00F286  61                 	db	97	;'a'
  1910  00F287  67                 	db	103	;'g'
  1911  00F288  65                 	db	101	;'e'
  1912  00F289  3F                 	db	63	;'?'
  1913  00F28A  3A                 	db	58	;':'
  1914  00F28B  20                 	db	32
  1915  00F28C  52                 	db	82	;'R'
  1916  00F28D  65                 	db	101	;'e'
  1917  00F28E  74                 	db	116	;'t'
  1918  00F28F  75                 	db	117	;'u'
  1919  00F290  72                 	db	114	;'r'
  1920  00F291  6E                 	db	110	;'n'
  1921  00F292  73                 	db	115	;'s'
  1922  00F293  20                 	db	32
  1923  00F294  74                 	db	116	;'t'
  1924  00F295  68                 	db	104	;'h'
  1925  00F296  65                 	db	101	;'e'
  1926  00F297  20                 	db	32
  1927  00F298  63                 	db	99	;'c'
  1928  00F299  61                 	db	97	;'a'
  1929  00F29A  6C                 	db	108	;'l'
  1930  00F29B  63                 	db	99	;'c'
  1931  00F29C  75                 	db	117	;'u'
  1932  00F29D  6C                 	db	108	;'l'
  1933  00F29E  61                 	db	97	;'a'
  1934  00F29F  74                 	db	116	;'t'
  1935  00F2A0  65                 	db	101	;'e'
  1936  00F2A1  64                 	db	100	;'d'
  1937  00F2A2  20                 	db	32
  1938  00F2A3  52                 	db	82	;'R'
  1939  00F2A4  4D                 	db	77	;'M'
  1940  00F2A5  53                 	db	83	;'S'
  1941  00F2A6  20                 	db	32
  1942  00F2A7  6F                 	db	111	;'o'
  1943  00F2A8  75                 	db	117	;'u'
  1944  00F2A9  74                 	db	116	;'t'
  1945  00F2AA  70                 	db	112	;'p'
  1946  00F2AB  75                 	db	117	;'u'
  1947  00F2AC  74                 	db	116	;'t'
  1948  00F2AD  20                 	db	32
  1949  00F2AE  76                 	db	118	;'v'
  1950  00F2AF  6F                 	db	111	;'o'
  1951  00F2B0  6C                 	db	108	;'l'
  1952  00F2B1  74                 	db	116	;'t'
  1953  00F2B2  61                 	db	97	;'a'
  1954  00F2B3  67                 	db	103	;'g'
  1955  00F2B4  65                 	db	101	;'e'
  1956  00F2B5  20                 	db	32
  1957  00F2B6  66                 	db	102	;'f'
  1958  00F2B7  72                 	db	114	;'r'
  1959  00F2B8  6F                 	db	111	;'o'
  1960  00F2B9  6D                 	db	109	;'m'
  1961  00F2BA  20                 	db	32
  1962  00F2BB  54                 	db	84	;'T'
  1963  00F2BC  52                 	db	82	;'R'
  1964  00F2BD  49                 	db	73	;'I'
  1965  00F2BE  41                 	db	65	;'A'
  1966  00F2BF  43                 	db	67	;'C'
  1967  00F2C0  20                 	db	32
  1968  00F2C1  66                 	db	102	;'f'
  1969  00F2C2  69                 	db	105	;'i'
  1970  00F2C3  72                 	db	114	;'r'
  1971  00F2C4  69                 	db	105	;'i'
  1972  00F2C5  6E                 	db	110	;'n'
  1973  00F2C6  67                 	db	103	;'g'
  1974  00F2C7  20                 	db	32
  1975  00F2C8  61                 	db	97	;'a'
  1976  00F2C9  6E                 	db	110	;'n'
  1977  00F2CA  67                 	db	103	;'g'
  1978  00F2CB  6C                 	db	108	;'l'
  1979  00F2CC  65                 	db	101	;'e'
  1980  00F2CD  0A                 	db	10
  1981  00F2CE  0D                 	db	13
  1982  00F2CF  20                 	db	32
  1983  00F2D0  20                 	db	32
  1984  00F2D1  20                 	db	32
  1985  00F2D2  4D                 	db	77	;'M'
  1986  00F2D3  65                 	db	101	;'e'
  1987  00F2D4  61                 	db	97	;'a'
  1988  00F2D5  73                 	db	115	;'s'
  1989  00F2D6  75                 	db	117	;'u'
  1990  00F2D7  72                 	db	114	;'r'
  1991  00F2D8  65                 	db	101	;'e'
  1992  00F2D9  20                 	db	32
  1993  00F2DA  50                 	db	80	;'P'
  1994  00F2DB  6F                 	db	111	;'o'
  1995  00F2DC  77                 	db	119	;'w'
  1996  00F2DD  65                 	db	101	;'e'
  1997  00F2DE  72                 	db	114	;'r'
  1998  00F2DF  3F                 	db	63	;'?'
  1999  00F2E0  3A                 	db	58	;':'
  2000  00F2E1  20                 	db	32
  2001  00F2E2  52                 	db	82	;'R'
  2002  00F2E3  65                 	db	101	;'e'
  2003  00F2E4  74                 	db	116	;'t'
  2004  00F2E5  75                 	db	117	;'u'
  2005  00F2E6  72                 	db	114	;'r'
  2006  00F2E7  6E                 	db	110	;'n'
  2007  00F2E8  73                 	db	115	;'s'
  2008  00F2E9  20                 	db	32
  2009  00F2EA  74                 	db	116	;'t'
  2010  00F2EB  68                 	db	104	;'h'
  2011  00F2EC  65                 	db	101	;'e'
  2012  00F2ED  20                 	db	32
  2013  00F2EE  63                 	db	99	;'c'
  2014  00F2EF  61                 	db	97	;'a'
  2015  00F2F0  6C                 	db	108	;'l'
  2016  00F2F1  63                 	db	99	;'c'
  2017  00F2F2  75                 	db	117	;'u'
  2018  00F2F3  6C                 	db	108	;'l'
  2019  00F2F4  61                 	db	97	;'a'
  2020  00F2F5  74                 	db	116	;'t'
  2021  00F2F6  65                 	db	101	;'e'
  2022  00F2F7  64                 	db	100	;'d'
  2023  00F2F8  20                 	db	32
  2024  00F2F9  6F                 	db	111	;'o'
  2025  00F2FA  75                 	db	117	;'u'
  2026  00F2FB  74                 	db	116	;'t'
  2027  00F2FC  70                 	db	112	;'p'
  2028  00F2FD  75                 	db	117	;'u'
  2029  00F2FE  74                 	db	116	;'t'
  2030  00F2FF  20                 	db	32
  2031  00F300  70                 	db	112	;'p'
  2032  00F301  6F                 	db	111	;'o'
  2033  00F302  77                 	db	119	;'w'
  2034  00F303  65                 	db	101	;'e'
  2035  00F304  72                 	db	114	;'r'
  2036  00F305  20                 	db	32
  2037  00F306  69                 	db	105	;'i'
  2038  00F307  6E                 	db	110	;'n'
  2039  00F308  20                 	db	32
  2040  00F309  57                 	db	87	;'W'
  2041  00F30A  61                 	db	97	;'a'
  2042  00F30B  74                 	db	116	;'t'
  2043  00F30C  74                 	db	116	;'t'
  2044  00F30D  73                 	db	115	;'s'
  2045  00F30E  0A                 	db	10
  2046  00F30F  0D                 	db	13
  2047  00F310  20                 	db	32
  2048  00F311  20                 	db	32
  2049  00F312  20                 	db	32
  2050  00F313  4C                 	db	76	;'L'
  2051  00F314  6F                 	db	111	;'o'
  2052  00F315  61                 	db	97	;'a'
  2053  00F316  64                 	db	100	;'d'
  2054  00F317  20                 	db	32
  2055  00F318  4F                 	db	79	;'O'
  2056  00F319  6E                 	db	110	;'n'
  2057  00F31A  20                 	db	32
  2058  00F31B  54                 	db	84	;'T'
  2059  00F31C  69                 	db	105	;'i'
  2060  00F31D  6D                 	db	109	;'m'
  2061  00F31E  65                 	db	101	;'e'
  2062  00F31F  3F                 	db	63	;'?'
  2063  00F320  3A                 	db	58	;':'
  2064  00F321  20                 	db	32
  2065  00F322  52                 	db	82	;'R'
  2066  00F323  65                 	db	101	;'e'
  2067  00F324  74                 	db	116	;'t'
  2068  00F325  75                 	db	117	;'u'
  2069  00F326  72                 	db	114	;'r'
  2070  00F327  6E                 	db	110	;'n'
  2071  00F328  73                 	db	115	;'s'
  2072  00F329  20                 	db	32
  2073  00F32A  6C                 	db	108	;'l'
  2074  00F32B  6F                 	db	111	;'o'
  2075  00F32C  61                 	db	97	;'a'
  2076  00F32D  64                 	db	100	;'d'
  2077  00F32E  20                 	db	32
  2078  00F32F  6F                 	db	111	;'o'
  2079  00F330  6E                 	db	110	;'n'
  2080  00F331  20                 	db	32
  2081  00F332  74                 	db	116	;'t'
  2082  00F333  69                 	db	105	;'i'
  2083  00F334  6D                 	db	109	;'m'
  2084  00F335  65                 	db	101	;'e'
  2085  00F336  20                 	db	32
  2086  00F337  73                 	db	115	;'s'
  2087  00F338  69                 	db	105	;'i'
  2088  00F339  6E                 	db	110	;'n'
  2089  00F33A  63                 	db	99	;'c'
  2090  00F33B  65                 	db	101	;'e'
  2091  00F33C  20                 	db	32
  2092  00F33D  6C                 	db	108	;'l'
  2093  00F33E  61                 	db	97	;'a'
  2094  00F33F  73                 	db	115	;'s'
  2095  00F340  74                 	db	116	;'t'
  2096  00F341  20                 	db	32
  2097  00F342  64                 	db	100	;'d'
  2098  00F343  65                 	db	101	;'e'
  2099  00F344  76                 	db	118	;'v'
  2100  00F345  69                 	db	105	;'i'
  2101  00F346  63                 	db	99	;'c'
  2102  00F347  65                 	db	101	;'e'
  2103  00F348  20                 	db	32
  2104  00F349  72                 	db	114	;'r'
  2105  00F34A  65                 	db	101	;'e'
  2106  00F34B  73                 	db	115	;'s'
  2107  00F34C  65                 	db	101	;'e'
  2108  00F34D  74                 	db	116	;'t'
  2109  00F34E  20                 	db	32
  2110  00F34F  69                 	db	105	;'i'
  2111  00F350  6E                 	db	110	;'n'
  2112  00F351  20                 	db	32
  2113  00F352  73                 	db	115	;'s'
  2114  00F353  65                 	db	101	;'e'
  2115  00F354  63                 	db	99	;'c'
  2116  00F355  6F                 	db	111	;'o'
  2117  00F356  6E                 	db	110	;'n'
  2118  00F357  64                 	db	100	;'d'
  2119  00F358  73                 	db	115	;'s'
  2120  00F359  0A                 	db	10
  2121  00F35A  0D                 	db	13
  2122  00F35B  4F                 	db	79	;'O'
  2123  00F35C  75                 	db	117	;'u'
  2124  00F35D  74                 	db	116	;'t'
  2125  00F35E  70                 	db	112	;'p'
  2126  00F35F  75                 	db	117	;'u'
  2127  00F360  74                 	db	116	;'t'
  2128  00F361  20                 	db	32
  2129  00F362  43                 	db	67	;'C'
  2130  00F363  6F                 	db	111	;'o'
  2131  00F364  6E                 	db	110	;'n'
  2132  00F365  74                 	db	116	;'t'
  2133  00F366  72                 	db	114	;'r'
  2134  00F367  6F                 	db	111	;'o'
  2135  00F368  6C                 	db	108	;'l'
  2136  00F369  20                 	db	32
  2137  00F36A  43                 	db	67	;'C'
  2138  00F36B  6F                 	db	111	;'o'
  2139  00F36C  6D                 	db	109	;'m'
  2140  00F36D  6D                 	db	109	;'m'
  2141  00F36E  61                 	db	97	;'a'
  2142  00F36F  6E                 	db	110	;'n'
  2143  00F370  64                 	db	100	;'d'
  2144  00F371  73                 	db	115	;'s'
  2145  00F372  3A                 	db	58	;':'
  2146  00F373  0A                 	db	10
  2147  00F374  0D                 	db	13
  2148  00F375  20                 	db	32
  2149  00F376  20                 	db	32
  2150  00F377  20                 	db	32
  2151  00F378  45                 	db	69	;'E'
  2152  00F379  6E                 	db	110	;'n'
  2153  00F37A  61                 	db	97	;'a'
  2154  00F37B  62                 	db	98	;'b'
  2155  00F37C  6C                 	db	108	;'l'
  2156  00F37D  65                 	db	101	;'e'
  2157  00F37E  20                 	db	32
  2158  00F37F  44                 	db	68	;'D'
  2159  00F380  69                 	db	105	;'i'
  2160  00F381  6D                 	db	109	;'m'
  2161  00F382  6D                 	db	109	;'m'
  2162  00F383  69                 	db	105	;'i'
  2163  00F384  6E                 	db	110	;'n'
  2164  00F385  67                 	db	103	;'g'
  2165  00F386  3A                 	db	58	;':'
  2166  00F387  20                 	db	32
  2167  00F388  45                 	db	69	;'E'
  2168  00F389  6E                 	db	110	;'n'
  2169  00F38A  61                 	db	97	;'a'
  2170  00F38B  62                 	db	98	;'b'
  2171  00F38C  6C                 	db	108	;'l'
  2172  00F38D  65                 	db	101	;'e'
  2173  00F38E  20                 	db	32
  2174  00F38F  54                 	db	84	;'T'
  2175  00F390  52                 	db	82	;'R'
  2176  00F391  49                 	db	73	;'I'
  2177  00F392  41                 	db	65	;'A'
  2178  00F393  43                 	db	67	;'C'
  2179  00F394  20                 	db	32
  2180  00F395  6F                 	db	111	;'o'
  2181  00F396  75                 	db	117	;'u'
  2182  00F397  74                 	db	116	;'t'
  2183  00F398  70                 	db	112	;'p'
  2184  00F399  75                 	db	117	;'u'
  2185  00F39A  74                 	db	116	;'t'
  2186  00F39B  20                 	db	32
  2187  00F39C  64                 	db	100	;'d'
  2188  00F39D  69                 	db	105	;'i'
  2189  00F39E  6D                 	db	109	;'m'
  2190  00F39F  6D                 	db	109	;'m'
  2191  00F3A0  69                 	db	105	;'i'
  2192  00F3A1  6E                 	db	110	;'n'
  2193  00F3A2  67                 	db	103	;'g'
  2194  00F3A3  0A                 	db	10
  2195  00F3A4  0D                 	db	13
  2196  00F3A5  20                 	db	32
  2197  00F3A6  20                 	db	32
  2198  00F3A7  20                 	db	32
  2199  00F3A8  44                 	db	68	;'D'
  2200  00F3A9  69                 	db	105	;'i'
  2201  00F3AA  73                 	db	115	;'s'
  2202  00F3AB  61                 	db	97	;'a'
  2203  00F3AC  62                 	db	98	;'b'
  2204  00F3AD  6C                 	db	108	;'l'
  2205  00F3AE  65                 	db	101	;'e'
  2206  00F3AF  20                 	db	32
  2207  00F3B0  44                 	db	68	;'D'
  2208  00F3B1  69                 	db	105	;'i'
  2209  00F3B2  6D                 	db	109	;'m'
  2210  00F3B3  6D                 	db	109	;'m'
  2211  00F3B4  69                 	db	105	;'i'
  2212  00F3B5  6E                 	db	110	;'n'
  2213  00F3B6  67                 	db	103	;'g'
  2214  00F3B7  3A                 	db	58	;':'
  2215  00F3B8  20                 	db	32
  2216  00F3B9  44                 	db	68	;'D'
  2217  00F3BA  69                 	db	105	;'i'
  2218  00F3BB  73                 	db	115	;'s'
  2219  00F3BC  61                 	db	97	;'a'
  2220  00F3BD  62                 	db	98	;'b'
  2221  00F3BE  6C                 	db	108	;'l'
  2222  00F3BF  65                 	db	101	;'e'
  2223  00F3C0  20                 	db	32
  2224  00F3C1  54                 	db	84	;'T'
  2225  00F3C2  52                 	db	82	;'R'
  2226  00F3C3  49                 	db	73	;'I'
  2227  00F3C4  41                 	db	65	;'A'
  2228  00F3C5  43                 	db	67	;'C'
  2229  00F3C6  20                 	db	32
  2230  00F3C7  6F                 	db	111	;'o'
  2231  00F3C8  75                 	db	117	;'u'
  2232  00F3C9  74                 	db	116	;'t'
  2233  00F3CA  70                 	db	112	;'p'
  2234  00F3CB  75                 	db	117	;'u'
  2235  00F3CC  74                 	db	116	;'t'
  2236  00F3CD  20                 	db	32
  2237  00F3CE  64                 	db	100	;'d'
  2238  00F3CF  69                 	db	105	;'i'
  2239  00F3D0  6D                 	db	109	;'m'
  2240  00F3D1  6D                 	db	109	;'m'
  2241  00F3D2  69                 	db	105	;'i'
  2242  00F3D3  6E                 	db	110	;'n'
  2243  00F3D4  67                 	db	103	;'g'
  2244  00F3D5  0A                 	db	10
  2245  00F3D6  0D                 	db	13
  2246  00F3D7  20                 	db	32
  2247  00F3D8  20                 	db	32
  2248  00F3D9  20                 	db	32
  2249  00F3DA  45                 	db	69	;'E'
  2250  00F3DB  6E                 	db	110	;'n'
  2251  00F3DC  61                 	db	97	;'a'
  2252  00F3DD  62                 	db	98	;'b'
  2253  00F3DE  6C                 	db	108	;'l'
  2254  00F3DF  65                 	db	101	;'e'
  2255  00F3E0  20                 	db	32
  2256  00F3E1  4C                 	db	76	;'L'
  2257  00F3E2  6F                 	db	111	;'o'
  2258  00F3E3  61                 	db	97	;'a'
  2259  00F3E4  64                 	db	100	;'d'
  2260  00F3E5  3A                 	db	58	;':'
  2261  00F3E6  20                 	db	32
  2262  00F3E7  45                 	db	69	;'E'
  2263  00F3E8  6E                 	db	110	;'n'
  2264  00F3E9  61                 	db	97	;'a'
  2265  00F3EA  62                 	db	98	;'b'
  2266  00F3EB  6C                 	db	108	;'l'
  2267  00F3EC  65                 	db	101	;'e'
  2268  00F3ED  73                 	db	115	;'s'
  2269  00F3EE  20                 	db	32
  2270  00F3EF  74                 	db	116	;'t'
  2271  00F3F0  68                 	db	104	;'h'
  2272  00F3F1  65                 	db	101	;'e'
  2273  00F3F2  20                 	db	32
  2274  00F3F3  6F                 	db	111	;'o'
  2275  00F3F4  75                 	db	117	;'u'
  2276  00F3F5  74                 	db	116	;'t'
  2277  00F3F6  70                 	db	112	;'p'
  2278  00F3F7  75                 	db	117	;'u'
  2279  00F3F8  74                 	db	116	;'t'
  2280  00F3F9  20                 	db	32
  2281  00F3FA  54                 	db	84	;'T'
  2282  00F3FB  52                 	db	82	;'R'
  2283  00F3FC  49                 	db	73	;'I'
  2284  00F3FD  41                 	db	65	;'A'
  2285  00F3FE  43                 	db	67	;'C'
  2286  00F3FF  20                 	db	32
  2287  00F400  77                 	db	119	;'w'
  2288  00F401  69                 	db	105	;'i'
  2289  00F402  74                 	db	116	;'t'
  2290  00F403  68                 	db	104	;'h'
  2291  00F404  20                 	db	32
  2292  00F405  64                 	db	100	;'d'
  2293  00F406  69                 	db	105	;'i'
  2294  00F407  6D                 	db	109	;'m'
  2295  00F408  6D                 	db	109	;'m'
  2296  00F409  69                 	db	105	;'i'
  2297  00F40A  6E                 	db	110	;'n'
  2298  00F40B  67                 	db	103	;'g'
  2299  00F40C  20                 	db	32
  2300  00F40D  64                 	db	100	;'d'
  2301  00F40E  69                 	db	105	;'i'
  2302  00F40F  73                 	db	115	;'s'
  2303  00F410  61                 	db	97	;'a'
  2304  00F411  62                 	db	98	;'b'
  2305  00F412  6C                 	db	108	;'l'
  2306  00F413  65                 	db	101	;'e'
  2307  00F414  64                 	db	100	;'d'
  2308  00F415  0A                 	db	10
  2309  00F416  0D                 	db	13
  2310  00F417  20                 	db	32
  2311  00F418  20                 	db	32
  2312  00F419  20                 	db	32
  2313  00F41A  44                 	db	68	;'D'
  2314  00F41B  69                 	db	105	;'i'
  2315  00F41C  73                 	db	115	;'s'
  2316  00F41D  61                 	db	97	;'a'
  2317  00F41E  62                 	db	98	;'b'
  2318  00F41F  6C                 	db	108	;'l'
  2319  00F420  65                 	db	101	;'e'
  2320  00F421  20                 	db	32
  2321  00F422  4C                 	db	76	;'L'
  2322  00F423  6F                 	db	111	;'o'
  2323  00F424  61                 	db	97	;'a'
  2324  00F425  64                 	db	100	;'d'
  2325  00F426  3A                 	db	58	;':'
  2326  00F427  20                 	db	32
  2327  00F428  44                 	db	68	;'D'
  2328  00F429  69                 	db	105	;'i'
  2329  00F42A  73                 	db	115	;'s'
  2330  00F42B  61                 	db	97	;'a'
  2331  00F42C  62                 	db	98	;'b'
  2332  00F42D  6C                 	db	108	;'l'
  2333  00F42E  65                 	db	101	;'e'
  2334  00F42F  73                 	db	115	;'s'
  2335  00F430  20                 	db	32
  2336  00F431  74                 	db	116	;'t'
  2337  00F432  68                 	db	104	;'h'
  2338  00F433  65                 	db	101	;'e'
  2339  00F434  20                 	db	32
  2340  00F435  6F                 	db	111	;'o'
  2341  00F436  75                 	db	117	;'u'
  2342  00F437  74                 	db	116	;'t'
  2343  00F438  70                 	db	112	;'p'
  2344  00F439  75                 	db	117	;'u'
  2345  00F43A  74                 	db	116	;'t'
  2346  00F43B  20                 	db	32
  2347  00F43C  54                 	db	84	;'T'
  2348  00F43D  52                 	db	82	;'R'
  2349  00F43E  49                 	db	73	;'I'
  2350  00F43F  41                 	db	65	;'A'
  2351  00F440  43                 	db	67	;'C'
  2352  00F441  20                 	db	32
  2353  00F442  63                 	db	99	;'c'
  2354  00F443  6F                 	db	111	;'o'
  2355  00F444  6D                 	db	109	;'m'
  2356  00F445  70                 	db	112	;'p'
  2357  00F446  6C                 	db	108	;'l'
  2358  00F447  65                 	db	101	;'e'
  2359  00F448  74                 	db	116	;'t'
  2360  00F449  65                 	db	101	;'e'
  2361  00F44A  6C                 	db	108	;'l'
  2362  00F44B  79                 	db	121	;'y'
  2363  00F44C  0A                 	db	10
  2364  00F44D  0D                 	db	13
  2365  00F44E  20                 	db	32
  2366  00F44F  20                 	db	32
  2367  00F450  20                 	db	32
  2368  00F451  53                 	db	83	;'S'
  2369  00F452  65                 	db	101	;'e'
  2370  00F453  74                 	db	116	;'t'
  2371  00F454  20                 	db	32
  2372  00F455  44                 	db	68	;'D'
  2373  00F456  69                 	db	105	;'i'
  2374  00F457  6D                 	db	109	;'m'
  2375  00F458  6D                 	db	109	;'m'
  2376  00F459  69                 	db	105	;'i'
  2377  00F45A  6E                 	db	110	;'n'
  2378  00F45B  67                 	db	103	;'g'
  2379  00F45C  20                 	db	32
  2380  00F45D  50                 	db	80	;'P'
  2381  00F45E  65                 	db	101	;'e'
  2382  00F45F  72                 	db	114	;'r'
  2383  00F460  63                 	db	99	;'c'
  2384  00F461  65                 	db	101	;'e'
  2385  00F462  6E                 	db	110	;'n'
  2386  00F463  74                 	db	116	;'t'
  2387  00F464  61                 	db	97	;'a'
  2388  00F465  67                 	db	103	;'g'
  2389  00F466  65                 	db	101	;'e'
  2390  00F467  3A                 	db	58	;':'
  2391  00F468  20                 	db	32
  2392  00F469  3C                 	db	60	;'<'
  2393  00F46A  78                 	db	120	;'x'
  2394  00F46B  3E                 	db	62	;'>'
  2395  00F46C  3A                 	db	58	;':'
  2396  00F46D  20                 	db	32
  2397  00F46E  53                 	db	83	;'S'
  2398  00F46F  65                 	db	101	;'e'
  2399  00F470  74                 	db	116	;'t'
  2400  00F471  73                 	db	115	;'s'
  2401  00F472  20                 	db	32
  2402  00F473  74                 	db	116	;'t'
  2403  00F474  68                 	db	104	;'h'
  2404  00F475  65                 	db	101	;'e'
  2405  00F476  20                 	db	32
  2406  00F477  6F                 	db	111	;'o'
  2407  00F478  75                 	db	117	;'u'
  2408  00F479  74                 	db	116	;'t'
  2409  00F47A  70                 	db	112	;'p'
  2410  00F47B  75                 	db	117	;'u'
  2411  00F47C  74                 	db	116	;'t'
  2412  00F47D  20                 	db	32
  2413  00F47E  64                 	db	100	;'d'
  2414  00F47F  69                 	db	105	;'i'
  2415  00F480  6D                 	db	109	;'m'
  2416  00F481  6D                 	db	109	;'m'
  2417  00F482  69                 	db	105	;'i'
  2418  00F483  6E                 	db	110	;'n'
  2419  00F484  67                 	db	103	;'g'
  2420  00F485  20                 	db	32
  2421  00F486  70                 	db	112	;'p'
  2422  00F487  65                 	db	101	;'e'
  2423  00F488  72                 	db	114	;'r'
  2424  00F489  63                 	db	99	;'c'
  2425  00F48A  65                 	db	101	;'e'
  2426  00F48B  6E                 	db	110	;'n'
  2427  00F48C  74                 	db	116	;'t'
  2428  00F48D  61                 	db	97	;'a'
  2429  00F48E  67                 	db	103	;'g'
  2430  00F48F  65                 	db	101	;'e'
  2431  00F490  20                 	db	32
  2432  00F491  61                 	db	97	;'a'
  2433  00F492  73                 	db	115	;'s'
  2434  00F493  20                 	db	32
  2435  00F494  78                 	db	120	;'x'
  2436  00F495  20                 	db	32
  2437  00F496  70                 	db	112	;'p'
  2438  00F497  65                 	db	101	;'e'
  2439  00F498  72                 	db	114	;'r'
  2440  00F499  63                 	db	99	;'c'
  2441  00F49A  65                 	db	101	;'e'
  2442  00F49B  6E                 	db	110	;'n'
  2443  00F49C  74                 	db	116	;'t'
  2444  00F49D  0A                 	db	10
  2445  00F49E  0D                 	db	13
  2446  00F49F  00                 	db	0
  2447  00F4A0  20                 	db	32
  2448  00F4A1  20                 	db	32
  2449  00F4A2  20                 	db	32
  2450  00F4A3  20                 	db	32
  2451  00F4A4  42                 	db	66	;'B'
  2452  00F4A5  6F                 	db	111	;'o'
  2453  00F4A6  6F                 	db	111	;'o'
  2454  00F4A7  74                 	db	116	;'t'
  2455  00F4A8  20                 	db	32
  2456  00F4A9  63                 	db	99	;'c'
  2457  00F4AA  6F                 	db	111	;'o'
  2458  00F4AB  6D                 	db	109	;'m'
  2459  00F4AC  70                 	db	112	;'p'
  2460  00F4AD  6C                 	db	108	;'l'
  2461  00F4AE  65                 	db	101	;'e'
  2462  00F4AF  74                 	db	116	;'t'
  2463  00F4B0  65                 	db	101	;'e'
  2464  00F4B1  0A                 	db	10
  2465  00F4B2  0D                 	db	13
  2466  00F4B3  20                 	db	32
  2467  00F4B4  20                 	db	32
  2468  00F4B5  20                 	db	32
  2469  00F4B6  20                 	db	32
  2470  00F4B7  50                 	db	80	;'P'
  2471  00F4B8  49                 	db	73	;'I'
  2472  00F4B9  43                 	db	67	;'C'
  2473  00F4BA  31                 	db	49	;'1'
  2474  00F4BB  38                 	db	56	;'8'
  2475  00F4BC  46                 	db	70	;'F'
  2476  00F4BD  36                 	db	54	;'6'
  2477  00F4BE  37                 	db	55	;'7'
  2478  00F4BF  4B                 	db	75	;'K'
  2479  00F4C0  34                 	db	52	;'4'
  2480  00F4C1  30                 	db	48	;'0'
  2481  00F4C2  20                 	db	32
  2482  00F4C3  6D                 	db	109	;'m'
  2483  00F4C4  54                 	db	84	;'T'
  2484  00F4C5  6F                 	db	111	;'o'
  2485  00F4C6  75                 	db	117	;'u'
  2486  00F4C7  63                 	db	99	;'c'
  2487  00F4C8  68                 	db	104	;'h'
  2488  00F4C9  20                 	db	32
  2489  00F4CA  54                 	db	84	;'T'
  2490  00F4CB  65                 	db	101	;'e'
  2491  00F4CC  73                 	db	115	;'s'
  2492  00F4CD  74                 	db	116	;'t'
  2493  00F4CE  20                 	db	32
  2494  00F4CF  42                 	db	66	;'B'
  2495  00F4D0  6F                 	db	111	;'o'
  2496  00F4D1  61                 	db	97	;'a'
  2497  00F4D2  72                 	db	114	;'r'
  2498  00F4D3  64                 	db	100	;'d'
  2499  00F4D4  0A                 	db	10
  2500  00F4D5  0D                 	db	13
  2501  00F4D6  20                 	db	32
  2502  00F4D7  20                 	db	32
  2503  00F4D8  20                 	db	32
  2504  00F4D9  20                 	db	32
  2505  00F4DA  45                 	db	69	;'E'
  2506  00F4DB  76                 	db	118	;'v'
  2507  00F4DC  61                 	db	97	;'a'
  2508  00F4DD  6C                 	db	108	;'l'
  2509  00F4DE  75                 	db	117	;'u'
  2510  00F4DF  61                 	db	97	;'a'
  2511  00F4E0  74                 	db	116	;'t'
  2512  00F4E1  65                 	db	101	;'e'
  2513  00F4E2  73                 	db	115	;'s'
  2514  00F4E3  20                 	db	32
  2515  00F4E4  74                 	db	116	;'t'
  2516  00F4E5  68                 	db	104	;'h'
  2517  00F4E6  65                 	db	101	;'e'
  2518  00F4E7  20                 	db	32
  2519  00F4E8  6D                 	db	109	;'m'
  2520  00F4E9  54                 	db	84	;'T'
  2521  00F4EA  6F                 	db	111	;'o'
  2522  00F4EB  75                 	db	117	;'u'
  2523  00F4EC  63                 	db	99	;'c'
  2524  00F4ED  68                 	db	104	;'h'
  2525  00F4EE  20                 	db	32
  2526  00F4EF  63                 	db	99	;'c'
  2527  00F4F0  61                 	db	97	;'a'
  2528  00F4F1  70                 	db	112	;'p'
  2529  00F4F2  61                 	db	97	;'a'
  2530  00F4F3  63                 	db	99	;'c'
  2531  00F4F4  69                 	db	105	;'i'
  2532  00F4F5  74                 	db	116	;'t'
  2533  00F4F6  69                 	db	105	;'i'
  2534  00F4F7  76                 	db	118	;'v'
  2535  00F4F8  65                 	db	101	;'e'
  2536  00F4F9  20                 	db	32
  2537  00F4FA  74                 	db	116	;'t'
  2538  00F4FB  6F                 	db	111	;'o'
  2539  00F4FC  75                 	db	117	;'u'
  2540  00F4FD  63                 	db	99	;'c'
  2541  00F4FE  68                 	db	104	;'h'
  2542  00F4FF  20                 	db	32
  2543  00F500  6C                 	db	108	;'l'
  2544  00F501  69                 	db	105	;'i'
  2545  00F502  62                 	db	98	;'b'
  2546  00F503  72                 	db	114	;'r'
  2547  00F504  61                 	db	97	;'a'
  2548  00F505  72                 	db	114	;'r'
  2549  00F506  79                 	db	121	;'y'
  2550  00F507  20                 	db	32
  2551  00F508  64                 	db	100	;'d'
  2552  00F509  69                 	db	105	;'i'
  2553  00F50A  73                 	db	115	;'s'
  2554  00F50B  74                 	db	116	;'t'
  2555  00F50C  72                 	db	114	;'r'
  2556  00F50D  69                 	db	105	;'i'
  2557  00F50E  62                 	db	98	;'b'
  2558  00F50F  75                 	db	117	;'u'
  2559  00F510  74                 	db	116	;'t'
  2560  00F511  65                 	db	101	;'e'
  2561  00F512  64                 	db	100	;'d'
  2562  00F513  20                 	db	32
  2563  00F514  62                 	db	98	;'b'
  2564  00F515  79                 	db	121	;'y'
  2565  00F516  20                 	db	32
  2566  00F517  4D                 	db	77	;'M'
  2567  00F518  69                 	db	105	;'i'
  2568  00F519  63                 	db	99	;'c'
  2569  00F51A  72                 	db	114	;'r'
  2570  00F51B  6F                 	db	111	;'o'
  2571  00F51C  63                 	db	99	;'c'
  2572  00F51D  68                 	db	104	;'h'
  2573  00F51E  69                 	db	105	;'i'
  2574  00F51F  70                 	db	112	;'p'
  2575  00F520  0A                 	db	10
  2576  00F521  0D                 	db	13
  2577  00F522  20                 	db	32
  2578  00F523  20                 	db	32
  2579  00F524  20                 	db	32
  2580  00F525  20                 	db	32
  2581  00F526  53                 	db	83	;'S'
  2582  00F527  65                 	db	101	;'e'
  2583  00F528  74                 	db	116	;'t'
  2584  00F529  73                 	db	115	;'s'
  2585  00F52A  20                 	db	32
  2586  00F52B  74                 	db	116	;'t'
  2587  00F52C  68                 	db	104	;'h'
  2588  00F52D  65                 	db	101	;'e'
  2589  00F52E  20                 	db	32
  2590  00F52F  73                 	db	115	;'s'
  2591  00F530  74                 	db	116	;'t'
  2592  00F531  61                 	db	97	;'a'
  2593  00F532  74                 	db	116	;'t'
  2594  00F533  65                 	db	101	;'e'
  2595  00F534  20                 	db	32
  2596  00F535  6F                 	db	111	;'o'
  2597  00F536  66                 	db	102	;'f'
  2598  00F537  20                 	db	32
  2599  00F538  66                 	db	102	;'f'
  2600  00F539  69                 	db	105	;'i'
  2601  00F53A  76                 	db	118	;'v'
  2602  00F53B  65                 	db	101	;'e'
  2603  00F53C  20                 	db	32
  2604  00F53D  4C                 	db	76	;'L'
  2605  00F53E  45                 	db	69	;'E'
  2606  00F53F  44                 	db	68	;'D'
  2607  00F540  73                 	db	115	;'s'
  2608  00F541  20                 	db	32
  2609  00F542  62                 	db	98	;'b'
  2610  00F543  61                 	db	97	;'a'
  2611  00F544  73                 	db	115	;'s'
  2612  00F545  65                 	db	101	;'e'
  2613  00F546  64                 	db	100	;'d'
  2614  00F547  20                 	db	32
  2615  00F548  6F                 	db	111	;'o'
  2616  00F549  6E                 	db	110	;'n'
  2617  00F54A  20                 	db	32
  2618  00F54B  6D                 	db	109	;'m'
  2619  00F54C  54                 	db	84	;'T'
  2620  00F54D  6F                 	db	111	;'o'
  2621  00F54E  75                 	db	117	;'u'
  2622  00F54F  63                 	db	99	;'c'
  2623  00F550  68                 	db	104	;'h'
  2624  00F551  20                 	db	32
  2625  00F552  63                 	db	99	;'c'
  2626  00F553  61                 	db	97	;'a'
  2627  00F554  70                 	db	112	;'p'
  2628  00F555  61                 	db	97	;'a'
  2629  00F556  63                 	db	99	;'c'
  2630  00F557  69                 	db	105	;'i'
  2631  00F558  74                 	db	116	;'t'
  2632  00F559  69                 	db	105	;'i'
  2633  00F55A  76                 	db	118	;'v'
  2634  00F55B  65                 	db	101	;'e'
  2635  00F55C  20                 	db	32
  2636  00F55D  70                 	db	112	;'p'
  2637  00F55E  75                 	db	117	;'u'
  2638  00F55F  73                 	db	115	;'s'
  2639  00F560  68                 	db	104	;'h'
  2640  00F561  62                 	db	98	;'b'
  2641  00F562  75                 	db	117	;'u'
  2642  00F563  74                 	db	116	;'t'
  2643  00F564  74                 	db	116	;'t'
  2644  00F565  6F                 	db	111	;'o'
  2645  00F566  6E                 	db	110	;'n'
  2646  00F567  73                 	db	115	;'s'
  2647  00F568  0A                 	db	10
  2648  00F569  0D                 	db	13
  2649  00F56A  20                 	db	32
  2650  00F56B  20                 	db	32
  2651  00F56C  20                 	db	32
  2652  00F56D  20                 	db	32
  2653  00F56E  42                 	db	66	;'B'
  2654  00F56F  61                 	db	97	;'a'
  2655  00F570  75                 	db	117	;'u'
  2656  00F571  64                 	db	100	;'d'
  2657  00F572  20                 	db	32
  2658  00F573  72                 	db	114	;'r'
  2659  00F574  61                 	db	97	;'a'
  2660  00F575  74                 	db	116	;'t'
  2661  00F576  65                 	db	101	;'e'
  2662  00F577  3A                 	db	58	;':'
  2663  00F578  20                 	db	32
  2664  00F579  31                 	db	49	;'1'
  2665  00F57A  31                 	db	49	;'1'
  2666  00F57B  35                 	db	53	;'5'
  2667  00F57C  32                 	db	50	;'2'
  2668  00F57D  30                 	db	48	;'0'
  2669  00F57E  30                 	db	48	;'0'
  2670  00F57F  20                 	db	32
  2671  00F580  62                 	db	98	;'b'
  2672  00F581  70                 	db	112	;'p'
  2673  00F582  73                 	db	115	;'s'
  2674  00F583  0A                 	db	10
  2675  00F584  0D                 	db	13
  2676  00F585  20                 	db	32
  2677  00F586  20                 	db	32
  2678  00F587  20                 	db	32
  2679  00F588  20                 	db	32
  2680  00F589  4E                 	db	78	;'N'
  2681  00F58A  6F                 	db	111	;'o'
  2682  00F58B  20                 	db	32
  2683  00F58C  70                 	db	112	;'p'
  2684  00F58D  61                 	db	97	;'a'
  2685  00F58E  72                 	db	114	;'r'
  2686  00F58F  69                 	db	105	;'i'
  2687  00F590  74                 	db	116	;'t'
  2688  00F591  79                 	db	121	;'y'
  2689  00F592  2C                 	db	44
  2690  00F593  20                 	db	32
  2691  00F594  38                 	db	56	;'8'
  2692  00F595  20                 	db	32
  2693  00F596  62                 	db	98	;'b'
  2694  00F597  69                 	db	105	;'i'
  2695  00F598  74                 	db	116	;'t'
  2696  00F599  73                 	db	115	;'s'
  2697  00F59A  2C                 	db	44
  2698  00F59B  20                 	db	32
  2699  00F59C  6E                 	db	110	;'n'
  2700  00F59D  6F                 	db	111	;'o'
  2701  00F59E  20                 	db	32
  2702  00F59F  66                 	db	102	;'f'
  2703  00F5A0  6C                 	db	108	;'l'
  2704  00F5A1  6F                 	db	111	;'o'
  2705  00F5A2  77                 	db	119	;'w'
  2706  00F5A3  20                 	db	32
  2707  00F5A4  63                 	db	99	;'c'
  2708  00F5A5  6F                 	db	111	;'o'
  2709  00F5A6  6E                 	db	110	;'n'
  2710  00F5A7  74                 	db	116	;'t'
  2711  00F5A8  72                 	db	114	;'r'
  2712  00F5A9  6F                 	db	111	;'o'
  2713  00F5AA  6C                 	db	108	;'l'
  2714  00F5AB  2C                 	db	44
  2715  00F5AC  20                 	db	32
  2716  00F5AD  31                 	db	49	;'1'
  2717  00F5AE  20                 	db	32
  2718  00F5AF  73                 	db	115	;'s'
  2719  00F5B0  74                 	db	116	;'t'
  2720  00F5B1  6F                 	db	111	;'o'
  2721  00F5B2  70                 	db	112	;'p'
  2722  00F5B3  20                 	db	32
  2723  00F5B4  62                 	db	98	;'b'
  2724  00F5B5  69                 	db	105	;'i'
  2725  00F5B6  74                 	db	116	;'t'
  2726  00F5B7  0A                 	db	10
  2727  00F5B8  0D                 	db	13
  2728  00F5B9  20                 	db	32
  2729  00F5BA  20                 	db	32
  2730  00F5BB  20                 	db	32
  2731  00F5BC  20                 	db	32
  2732  00F5BD  43                 	db	67	;'C'
  2733  00F5BE  6F                 	db	111	;'o'
  2734  00F5BF  6D                 	db	109	;'m'
  2735  00F5C0  6D                 	db	109	;'m'
  2736  00F5C1  61                 	db	97	;'a'
  2737  00F5C2  6E                 	db	110	;'n'
  2738  00F5C3  64                 	db	100	;'d'
  2739  00F5C4  73                 	db	115	;'s'
  2740  00F5C5  20                 	db	32
  2741  00F5C6  61                 	db	97	;'a'
  2742  00F5C7  72                 	db	114	;'r'
  2743  00F5C8  65                 	db	101	;'e'
  2744  00F5C9  20                 	db	32
  2745  00F5CA  63                 	db	99	;'c'
  2746  00F5CB  61                 	db	97	;'a'
  2747  00F5CC  73                 	db	115	;'s'
  2748  00F5CD  65                 	db	101	;'e'
  2749  00F5CE  20                 	db	32
  2750  00F5CF  73                 	db	115	;'s'
  2751  00F5D0  65                 	db	101	;'e'
  2752  00F5D1  6E                 	db	110	;'n'
  2753  00F5D2  73                 	db	115	;'s'
  2754  00F5D3  69                 	db	105	;'i'
  2755  00F5D4  74                 	db	116	;'t'
  2756  00F5D5  69                 	db	105	;'i'
  2757  00F5D6  76                 	db	118	;'v'
  2758  00F5D7  65                 	db	101	;'e'
  2759  00F5D8  0A                 	db	10
  2760  00F5D9  0D                 	db	13
  2761  00F5DA  20                 	db	32
  2762  00F5DB  20                 	db	32
  2763  00F5DC  20                 	db	32
  2764  00F5DD  20                 	db	32
  2765  00F5DE  45                 	db	69	;'E'
  2766  00F5DF  6E                 	db	110	;'n'
  2767  00F5E0  74                 	db	116	;'t'
  2768  00F5E1  65                 	db	101	;'e'
  2769  00F5E2  72                 	db	114	;'r'
  2770  00F5E3  20                 	db	32
  2771  00F5E4  61                 	db	97	;'a'
  2772  00F5E5  20                 	db	32
  2773  00F5E6  63                 	db	99	;'c'
  2774  00F5E7  6F                 	db	111	;'o'
  2775  00F5E8  6D                 	db	109	;'m'
  2776  00F5E9  6D                 	db	109	;'m'
  2777  00F5EA  61                 	db	97	;'a'
  2778  00F5EB  6E                 	db	110	;'n'
  2779  00F5EC  64                 	db	100	;'d'
  2780  00F5ED  2C                 	db	44
  2781  00F5EE  20                 	db	32
  2782  00F5EF  6F                 	db	111	;'o'
  2783  00F5F0  72                 	db	114	;'r'
  2784  00F5F1  20                 	db	32
  2785  00F5F2  65                 	db	101	;'e'
  2786  00F5F3  6E                 	db	110	;'n'
  2787  00F5F4  74                 	db	116	;'t'
  2788  00F5F5  65                 	db	101	;'e'
  2789  00F5F6  72                 	db	114	;'r'
  2790  00F5F7  20                 	db	32
  2791  00F5F8  48                 	db	72	;'H'
  2792  00F5F9  65                 	db	101	;'e'
  2793  00F5FA  6C                 	db	108	;'l'
  2794  00F5FB  70                 	db	112	;'p'
  2795  00F5FC  20                 	db	32
  2796  00F5FD  66                 	db	102	;'f'
  2797  00F5FE  6F                 	db	111	;'o'
  2798  00F5FF  72                 	db	114	;'r'
  2799  00F600  20                 	db	32
  2800  00F601  6C                 	db	108	;'l'
  2801  00F602  69                 	db	105	;'i'
  2802  00F603  73                 	db	115	;'s'
  2803  00F604  74                 	db	116	;'t'
  2804  00F605  20                 	db	32
  2805  00F606  6F                 	db	111	;'o'
  2806  00F607  66                 	db	102	;'f'
  2807  00F608  20                 	db	32
  2808  00F609  63                 	db	99	;'c'
  2809  00F60A  6F                 	db	111	;'o'
  2810  00F60B  6D                 	db	109	;'m'
  2811  00F60C  6D                 	db	109	;'m'
  2812  00F60D  61                 	db	97	;'a'
  2813  00F60E  6E                 	db	110	;'n'
  2814  00F60F  64                 	db	100	;'d'
  2815  00F610  73                 	db	115	;'s'
  2816  00F611  0A                 	db	10
  2817  00F612  0D                 	db	13
  2818  00F613  00                 	db	0
  2819  00F614                     STR_104:
  2820  00F614  49                 	db	73	;'I'
  2821  00F615  66                 	db	102	;'f'
  2822  00F616  20                 	db	32
  2823  00F617  79                 	db	121	;'y'
  2824  00F618  6F                 	db	111	;'o'
  2825  00F619  75                 	db	117	;'u'
  2826  00F61A  27                 	db	39
  2827  00F61B  64                 	db	100	;'d'
  2828  00F61C  20                 	db	32
  2829  00F61D  6C                 	db	108	;'l'
  2830  00F61E  69                 	db	105	;'i'
  2831  00F61F  6B                 	db	107	;'k'
  2832  00F620  65                 	db	101	;'e'
  2833  00F621  20                 	db	32
  2834  00F622  74                 	db	116	;'t'
  2835  00F623  6F                 	db	111	;'o'
  2836  00F624  20                 	db	32
  2837  00F625  63                 	db	99	;'c'
  2838  00F626  6F                 	db	111	;'o'
  2839  00F627  6D                 	db	109	;'m'
  2840  00F628  70                 	db	112	;'p'
  2841  00F629  6C                 	db	108	;'l'
  2842  00F62A  65                 	db	101	;'e'
  2843  00F62B  74                 	db	116	;'t'
  2844  00F62C  65                 	db	101	;'e'
  2845  00F62D  6C                 	db	108	;'l'
  2846  00F62E  79                 	db	121	;'y'
  2847  00F62F  20                 	db	32
  2848  00F630  65                 	db	101	;'e'
  2849  00F631  6E                 	db	110	;'n'
  2850  00F632  61                 	db	97	;'a'
  2851  00F633  62                 	db	98	;'b'
  2852  00F634  6C                 	db	108	;'l'
  2853  00F635  65                 	db	101	;'e'
  2854  00F636  20                 	db	32
  2855  00F637  6F                 	db	111	;'o'
  2856  00F638  72                 	db	114	;'r'
  2857  00F639  20                 	db	32
  2858  00F63A  64                 	db	100	;'d'
  2859  00F63B  69                 	db	105	;'i'
  2860  00F63C  73                 	db	115	;'s'
  2861  00F63D  61                 	db	97	;'a'
  2862  00F63E  62                 	db	98	;'b'
  2863  00F63F  6C                 	db	108	;'l'
  2864  00F640  65                 	db	101	;'e'
  2865  00F641  20                 	db	32
  2866  00F642  74                 	db	116	;'t'
  2867  00F643  68                 	db	104	;'h'
  2868  00F644  65                 	db	101	;'e'
  2869  00F645  20                 	db	32
  2870  00F646  6C                 	db	108	;'l'
  2871  00F647  6F                 	db	111	;'o'
  2872  00F648  61                 	db	97	;'a'
  2873  00F649  64                 	db	100	;'d'
  2874  00F64A  2C                 	db	44
  2875  00F64B  20                 	db	32
  2876  00F64C  64                 	db	100	;'d'
  2877  00F64D  69                 	db	105	;'i'
  2878  00F64E  73                 	db	115	;'s'
  2879  00F64F  61                 	db	97	;'a'
  2880  00F650  62                 	db	98	;'b'
  2881  00F651  6C                 	db	108	;'l'
  2882  00F652  65                 	db	101	;'e'
  2883  00F653  20                 	db	32
  2884  00F654  64                 	db	100	;'d'
  2885  00F655  69                 	db	105	;'i'
  2886  00F656  6D                 	db	109	;'m'
  2887  00F657  6D                 	db	109	;'m'
  2888  00F658  69                 	db	105	;'i'
  2889  00F659  6E                 	db	110	;'n'
  2890  00F65A  67                 	db	103	;'g'
  2891  00F65B  20                 	db	32
  2892  00F65C  61                 	db	97	;'a'
  2893  00F65D  6E                 	db	110	;'n'
  2894  00F65E  64                 	db	100	;'d'
  2895  00F65F  20                 	db	32
  2896  00F660  75                 	db	117	;'u'
  2897  00F661  73                 	db	115	;'s'
  2898  00F662  65                 	db	101	;'e'
  2899  00F663  20                 	db	32
  2900  00F664  72                 	db	114	;'r'
  2901  00F665  65                 	db	101	;'e'
  2902  00F666  73                 	db	115	;'s'
  2903  00F667  70                 	db	112	;'p'
  2904  00F668  65                 	db	101	;'e'
  2905  00F669  63                 	db	99	;'c'
  2906  00F66A  74                 	db	116	;'t'
  2907  00F66B  69                 	db	105	;'i'
  2908  00F66C  76                 	db	118	;'v'
  2909  00F66D  65                 	db	101	;'e'
  2910  00F66E  20                 	db	32
  2911  00F66F  63                 	db	99	;'c'
  2912  00F670  6F                 	db	111	;'o'
  2913  00F671  6D                 	db	109	;'m'
  2914  00F672  6D                 	db	109	;'m'
  2915  00F673  61                 	db	97	;'a'
  2916  00F674  6E                 	db	110	;'n'
  2917  00F675  64                 	db	100	;'d'
  2918  00F676  73                 	db	115	;'s'
  2919  00F677  0A                 	db	10
  2920  00F678  0D                 	db	13
  2921  00F679  00                 	db	0
  2922  00F67A                     STR_103:
  2923  00F67A  45                 	db	69	;'E'
  2924  00F67B  52                 	db	82	;'R'
  2925  00F67C  52                 	db	82	;'R'
  2926  00F67D  4F                 	db	79	;'O'
  2927  00F67E  52                 	db	82	;'R'
  2928  00F67F  3A                 	db	58	;':'
  2929  00F680  20                 	db	32
  2930  00F681  50                 	db	80	;'P'
  2931  00F682  6C                 	db	108	;'l'
  2932  00F683  65                 	db	101	;'e'
  2933  00F684  61                 	db	97	;'a'
  2934  00F685  73                 	db	115	;'s'
  2935  00F686  65                 	db	101	;'e'
  2936  00F687  20                 	db	32
  2937  00F688  73                 	db	115	;'s'
  2938  00F689  65                 	db	101	;'e'
  2939  00F68A  74                 	db	116	;'t'
  2940  00F68B  20                 	db	32
  2941  00F68C  64                 	db	100	;'d'
  2942  00F68D  69                 	db	105	;'i'
  2943  00F68E  6D                 	db	109	;'m'
  2944  00F68F  6D                 	db	109	;'m'
  2945  00F690  69                 	db	105	;'i'
  2946  00F691  6E                 	db	110	;'n'
  2947  00F692  67                 	db	103	;'g'
  2948  00F693  20                 	db	32
  2949  00F694  70                 	db	112	;'p'
  2950  00F695  65                 	db	101	;'e'
  2951  00F696  72                 	db	114	;'r'
  2952  00F697  63                 	db	99	;'c'
  2953  00F698  65                 	db	101	;'e'
  2954  00F699  6E                 	db	110	;'n'
  2955  00F69A  74                 	db	116	;'t'
  2956  00F69B  61                 	db	97	;'a'
  2957  00F69C  67                 	db	103	;'g'
  2958  00F69D  65                 	db	101	;'e'
  2959  00F69E  20                 	db	32
  2960  00F69F  74                 	db	116	;'t'
  2961  00F6A0  6F                 	db	111	;'o'
  2962  00F6A1  20                 	db	32
  2963  00F6A2  61                 	db	97	;'a'
  2964  00F6A3  6E                 	db	110	;'n'
  2965  00F6A4  20                 	db	32
  2966  00F6A5  69                 	db	105	;'i'
  2967  00F6A6  6E                 	db	110	;'n'
  2968  00F6A7  74                 	db	116	;'t'
  2969  00F6A8  65                 	db	101	;'e'
  2970  00F6A9  67                 	db	103	;'g'
  2971  00F6AA  65                 	db	101	;'e'
  2972  00F6AB  72                 	db	114	;'r'
  2973  00F6AC  20                 	db	32
  2974  00F6AD  67                 	db	103	;'g'
  2975  00F6AE  72                 	db	114	;'r'
  2976  00F6AF  65                 	db	101	;'e'
  2977  00F6B0  61                 	db	97	;'a'
  2978  00F6B1  74                 	db	116	;'t'
  2979  00F6B2  65                 	db	101	;'e'
  2980  00F6B3  72                 	db	114	;'r'
  2981  00F6B4  20                 	db	32
  2982  00F6B5  74                 	db	116	;'t'
  2983  00F6B6  68                 	db	104	;'h'
  2984  00F6B7  61                 	db	97	;'a'
  2985  00F6B8  6E                 	db	110	;'n'
  2986  00F6B9  20                 	db	32
  2987  00F6BA  30                 	db	48	;'0'
  2988  00F6BB  20                 	db	32
  2989  00F6BC  61                 	db	97	;'a'
  2990  00F6BD  6E                 	db	110	;'n'
  2991  00F6BE  64                 	db	100	;'d'
  2992  00F6BF  20                 	db	32
  2993  00F6C0  6C                 	db	108	;'l'
  2994  00F6C1  65                 	db	101	;'e'
  2995  00F6C2  73                 	db	115	;'s'
  2996  00F6C3  73                 	db	115	;'s'
  2997  00F6C4  20                 	db	32
  2998  00F6C5  74                 	db	116	;'t'
  2999  00F6C6  68                 	db	104	;'h'
  3000  00F6C7  61                 	db	97	;'a'
  3001  00F6C8  6E                 	db	110	;'n'
  3002  00F6C9  20                 	db	32
  3003  00F6CA  31                 	db	49	;'1'
  3004  00F6CB  30                 	db	48	;'0'
  3005  00F6CC  30                 	db	48	;'0'
  3006  00F6CD  0A                 	db	10
  3007  00F6CE  0D                 	db	13
  3008  00F6CF  00                 	db	0
  3009  00F6D0                     STR_54:
  3010  00F6D0  44                 	db	68	;'D'
  3011  00F6D1  65                 	db	101	;'e'
  3012  00F6D2  76                 	db	118	;'v'
  3013  00F6D3  69                 	db	105	;'i'
  3014  00F6D4  63                 	db	99	;'c'
  3015  00F6D5  65                 	db	101	;'e'
  3016  00F6D6  20                 	db	32
  3017  00F6D7  49                 	db	73	;'I'
  3018  00F6D8  44                 	db	68	;'D'
  3019  00F6D9  20                 	db	32
  3020  00F6DA  73                 	db	115	;'s'
  3021  00F6DB  74                 	db	116	;'t'
  3022  00F6DC  6F                 	db	111	;'o'
  3023  00F6DD  72                 	db	114	;'r'
  3024  00F6DE  65                 	db	101	;'e'
  3025  00F6DF  64                 	db	100	;'d'
  3026  00F6E0  20                 	db	32
  3027  00F6E1  69                 	db	105	;'i'
  3028  00F6E2  6E                 	db	110	;'n'
  3029  00F6E3  20                 	db	32
  3030  00F6E4  46                 	db	70	;'F'
  3031  00F6E5  6C                 	db	108	;'l'
  3032  00F6E6  61                 	db	97	;'a'
  3033  00F6E7  73                 	db	115	;'s'
  3034  00F6E8  68                 	db	104	;'h'
  3035  00F6E9  20                 	db	32
  3036  00F6EA  69                 	db	105	;'i'
  3037  00F6EB  73                 	db	115	;'s'
  3038  00F6EC  3A                 	db	58	;':'
  3039  00F6ED  20                 	db	32
  3040  00F6EE  30                 	db	48	;'0'
  3041  00F6EF  78                 	db	120	;'x'
  3042  00F6F0  25                 	db	37
  3043  00F6F1  58                 	db	88	;'X'
  3044  00F6F2  2E                 	db	46
  3045  00F6F3  20                 	db	32
  3046  00F6F4  54                 	db	84	;'T'
  3047  00F6F5  68                 	db	104	;'h'
  3048  00F6F6  69                 	db	105	;'i'
  3049  00F6F7  73                 	db	115	;'s'
  3050  00F6F8  20                 	db	32
  3051  00F6F9  63                 	db	99	;'c'
  3052  00F6FA  6F                 	db	111	;'o'
  3053  00F6FB  72                 	db	114	;'r'
  3054  00F6FC  72                 	db	114	;'r'
  3055  00F6FD  65                 	db	101	;'e'
  3056  00F6FE  73                 	db	115	;'s'
  3057  00F6FF  70                 	db	112	;'p'
  3058  00F700  6F                 	db	111	;'o'
  3059  00F701  6E                 	db	110	;'n'
  3060  00F702  64                 	db	100	;'d'
  3061  00F703  73                 	db	115	;'s'
  3062  00F704  20                 	db	32
  3063  00F705  74                 	db	116	;'t'
  3064  00F706  6F                 	db	111	;'o'
  3065  00F707  20                 	db	32
  3066  00F708  61                 	db	97	;'a'
  3067  00F709  20                 	db	32
  3068  00F70A  64                 	db	100	;'d'
  3069  00F70B  65                 	db	101	;'e'
  3070  00F70C  76                 	db	118	;'v'
  3071  00F70D  69                 	db	105	;'i'
  3072  00F70E  63                 	db	99	;'c'
  3073  00F70F  65                 	db	101	;'e'
  3074  00F710  20                 	db	32
  3075  00F711  70                 	db	112	;'p'
  3076  00F712  61                 	db	97	;'a'
  3077  00F713  72                 	db	114	;'r'
  3078  00F714  74                 	db	116	;'t'
  3079  00F715  20                 	db	32
  3080  00F716  6E                 	db	110	;'n'
  3081  00F717  75                 	db	117	;'u'
  3082  00F718  6D                 	db	109	;'m'
  3083  00F719  62                 	db	98	;'b'
  3084  00F71A  65                 	db	101	;'e'
  3085  00F71B  72                 	db	114	;'r'
  3086  00F71C  20                 	db	32
  3087  00F71D  6F                 	db	111	;'o'
  3088  00F71E  66                 	db	102	;'f'
  3089  00F71F  20                 	db	32
  3090  00F720  25                 	db	37
  3091  00F721  73                 	db	115	;'s'
  3092  00F722  0A                 	db	10
  3093  00F723  0D                 	db	13
  3094  00F724  00                 	db	0
  3095  00F725                     STR_108:
  3096  00F725  54                 	db	84	;'T'
  3097  00F726  68                 	db	104	;'h'
  3098  00F727  69                 	db	105	;'i'
  3099  00F728  73                 	db	115	;'s'
  3100  00F729  20                 	db	32
  3101  00F72A  63                 	db	99	;'c'
  3102  00F72B  6F                 	db	111	;'o'
  3103  00F72C  72                 	db	114	;'r'
  3104  00F72D  72                 	db	114	;'r'
  3105  00F72E  65                 	db	101	;'e'
  3106  00F72F  73                 	db	115	;'s'
  3107  00F730  70                 	db	112	;'p'
  3108  00F731  6F                 	db	111	;'o'
  3109  00F732  6E                 	db	110	;'n'
  3110  00F733  64                 	db	100	;'d'
  3111  00F734  73                 	db	115	;'s'
  3112  00F735  20                 	db	32
  3113  00F736  74                 	db	116	;'t'
  3114  00F737  6F                 	db	111	;'o'
  3115  00F738  20                 	db	32
  3116  00F739  61                 	db	97	;'a'
  3117  00F73A  20                 	db	32
  3118  00F73B  31                 	db	49	;'1'
  3119  00F73C  36                 	db	54	;'6'
  3120  00F73D  20                 	db	32
  3121  00F73E  62                 	db	98	;'b'
  3122  00F73F  69                 	db	105	;'i'
  3123  00F740  74                 	db	116	;'t'
  3124  00F741  20                 	db	32
  3125  00F742  74                 	db	116	;'t'
  3126  00F743  69                 	db	105	;'i'
  3127  00F744  6D                 	db	109	;'m'
  3128  00F745  65                 	db	101	;'e'
  3129  00F746  72                 	db	114	;'r'
  3130  00F747  20                 	db	32
  3131  00F748  70                 	db	112	;'p'
  3132  00F749  72                 	db	114	;'r'
  3133  00F74A  65                 	db	101	;'e'
  3134  00F74B  2D                 	db	45
  3135  00F74C  6C                 	db	108	;'l'
  3136  00F74D  6F                 	db	111	;'o'
  3137  00F74E  61                 	db	97	;'a'
  3138  00F74F  64                 	db	100	;'d'
  3139  00F750  20                 	db	32
  3140  00F751  76                 	db	118	;'v'
  3141  00F752  61                 	db	97	;'a'
  3142  00F753  6C                 	db	108	;'l'
  3143  00F754  75                 	db	117	;'u'
  3144  00F755  65                 	db	101	;'e'
  3145  00F756  20                 	db	32
  3146  00F757  6F                 	db	111	;'o'
  3147  00F758  66                 	db	102	;'f'
  3148  00F759  20                 	db	32
  3149  00F75A  30                 	db	48	;'0'
  3150  00F75B  78                 	db	120	;'x'
  3151  00F75C  25                 	db	37
  3152  00F75D  58                 	db	88	;'X'
  3153  00F75E  20                 	db	32
  3154  00F75F  28                 	db	40
  3155  00F760  25                 	db	37
  3156  00F761  75                 	db	117	;'u'
  3157  00F762  20                 	db	32
  3158  00F763  4C                 	db	76	;'L'
  3159  00F764  53                 	db	83	;'S'
  3160  00F765  42                 	db	66	;'B'
  3161  00F766  73                 	db	115	;'s'
  3162  00F767  29                 	db	41
  3163  00F768  20                 	db	32
  3164  00F769  0A                 	db	10
  3165  00F76A  0D                 	db	13
  3166  00F76B  00                 	db	0
  3167  00F76C                     STR_74:
  3168  00F76C  56                 	db	86	;'V'
  3169  00F76D  43                 	db	67	;'C'
  3170  00F76E  43                 	db	67	;'C'
  3171  00F76F  20                 	db	32
  3172  00F770  4F                 	db	79	;'O'
  3173  00F771  76                 	db	118	;'v'
  3174  00F772  65                 	db	101	;'e'
  3175  00F773  72                 	db	114	;'r'
  3176  00F774  76                 	db	118	;'v'
  3177  00F775  6F                 	db	111	;'o'
  3178  00F776  6C                 	db	108	;'l'
  3179  00F777  74                 	db	116	;'t'
  3180  00F778  61                 	db	97	;'a'
  3181  00F779  67                 	db	103	;'g'
  3182  00F77A  65                 	db	101	;'e'
  3183  00F77B  20                 	db	32
  3184  00F77C  63                 	db	99	;'c'
  3185  00F77D  6F                 	db	111	;'o'
  3186  00F77E  6E                 	db	110	;'n'
  3187  00F77F  64                 	db	100	;'d'
  3188  00F780  69                 	db	105	;'i'
  3189  00F781  74                 	db	116	;'t'
  3190  00F782  69                 	db	105	;'i'
  3191  00F783  6F                 	db	111	;'o'
  3192  00F784  6E                 	db	110	;'n'
  3193  00F785  20                 	db	32
  3194  00F786  68                 	db	104	;'h'
  3195  00F787  61                 	db	97	;'a'
  3196  00F788  73                 	db	115	;'s'
  3197  00F789  20                 	db	32
  3198  00F78A  6F                 	db	111	;'o'
  3199  00F78B  63                 	db	99	;'c'
  3200  00F78C  63                 	db	99	;'c'
  3201  00F78D  75                 	db	117	;'u'
  3202  00F78E  72                 	db	114	;'r'
  3203  00F78F  72                 	db	114	;'r'
  3204  00F790  65                 	db	101	;'e'
  3205  00F791  64                 	db	100	;'d'
  3206  00F792  20                 	db	32
  3207  00F793  28                 	db	40
  3208  00F794  56                 	db	86	;'V'
  3209  00F795  43                 	db	67	;'C'
  3210  00F796  43                 	db	67	;'C'
  3211  00F797  20                 	db	32
  3212  00F798  68                 	db	104	;'h'
  3213  00F799  61                 	db	97	;'a'
  3214  00F79A  73                 	db	115	;'s'
  3215  00F79B  20                 	db	32
  3216  00F79C  65                 	db	101	;'e'
  3217  00F79D  78                 	db	120	;'x'
  3218  00F79E  63                 	db	99	;'c'
  3219  00F79F  65                 	db	101	;'e'
  3220  00F7A0  65                 	db	101	;'e'
  3221  00F7A1  64                 	db	100	;'d'
  3222  00F7A2  65                 	db	101	;'e'
  3223  00F7A3  64                 	db	100	;'d'
  3224  00F7A4  20                 	db	32
  3225  00F7A5  33                 	db	51	;'3'
  3226  00F7A6  2E                 	db	46
  3227  00F7A7  36                 	db	54	;'6'
  3228  00F7A8  30                 	db	48	;'0'
  3229  00F7A9  56                 	db	86	;'V'
  3230  00F7AA  29                 	db	41
  3231  00F7AB  0A                 	db	10
  3232  00F7AC  0D                 	db	13
  3233  00F7AD  00                 	db	0
  3234  00F7AE                     STR_58:
  3235  00F7AE  54                 	db	84	;'T'
  3236  00F7AF  68                 	db	104	;'h'
  3237  00F7B0  65                 	db	101	;'e'
  3238  00F7B1  20                 	db	32
  3239  00F7B2  66                 	db	102	;'f'
  3240  00F7B3  6F                 	db	111	;'o'
  3241  00F7B4  6C                 	db	108	;'l'
  3242  00F7B5  6C                 	db	108	;'l'
  3243  00F7B6  6F                 	db	111	;'o'
  3244  00F7B7  77                 	db	119	;'w'
  3245  00F7B8  69                 	db	105	;'i'
  3246  00F7B9  6E                 	db	110	;'n'
  3247  00F7BA  67                 	db	103	;'g'
  3248  00F7BB  20                 	db	32
  3249  00F7BC  55                 	db	85	;'U'
  3250  00F7BD  73                 	db	115	;'s'
  3251  00F7BE  65                 	db	101	;'e'
  3252  00F7BF  72                 	db	114	;'r'
  3253  00F7C0  20                 	db	32
  3254  00F7C1  49                 	db	73	;'I'
  3255  00F7C2  44                 	db	68	;'D'
  3256  00F7C3  73                 	db	115	;'s'
  3257  00F7C4  20                 	db	32
  3258  00F7C5  68                 	db	104	;'h'
  3259  00F7C6  61                 	db	97	;'a'
  3260  00F7C7  76                 	db	118	;'v'
  3261  00F7C8  65                 	db	101	;'e'
  3262  00F7C9  20                 	db	32
  3263  00F7CA  62                 	db	98	;'b'
  3264  00F7CB  65                 	db	101	;'e'
  3265  00F7CC  65                 	db	101	;'e'
  3266  00F7CD  6E                 	db	110	;'n'
  3267  00F7CE  20                 	db	32
  3268  00F7CF  72                 	db	114	;'r'
  3269  00F7D0  65                 	db	101	;'e'
  3270  00F7D1  74                 	db	116	;'t'
  3271  00F7D2  72                 	db	114	;'r'
  3272  00F7D3  69                 	db	105	;'i'
  3273  00F7D4  65                 	db	101	;'e'
  3274  00F7D5  76                 	db	118	;'v'
  3275  00F7D6  65                 	db	101	;'e'
  3276  00F7D7  64                 	db	100	;'d'
  3277  00F7D8  20                 	db	32
  3278  00F7D9  66                 	db	102	;'f'
  3279  00F7DA  72                 	db	114	;'r'
  3280  00F7DB  6F                 	db	111	;'o'
  3281  00F7DC  6D                 	db	109	;'m'
  3282  00F7DD  20                 	db	32
  3283  00F7DE  66                 	db	102	;'f'
  3284  00F7DF  6C                 	db	108	;'l'
  3285  00F7E0  61                 	db	97	;'a'
  3286  00F7E1  73                 	db	115	;'s'
  3287  00F7E2  68                 	db	104	;'h'
  3288  00F7E3  20                 	db	32
  3289  00F7E4  6D                 	db	109	;'m'
  3290  00F7E5  65                 	db	101	;'e'
  3291  00F7E6  6D                 	db	109	;'m'
  3292  00F7E7  6F                 	db	111	;'o'
  3293  00F7E8  72                 	db	114	;'r'
  3294  00F7E9  79                 	db	121	;'y'
  3295  00F7EA  3A                 	db	58	;':'
  3296  00F7EB  0A                 	db	10
  3297  00F7EC  0D                 	db	13
  3298  00F7ED  00                 	db	0
  3299  00F7EE                     STR_107:
  3300  00F7EE  43                 	db	67	;'C'
  3301  00F7EF  61                 	db	97	;'a'
  3302  00F7F0  6C                 	db	108	;'l'
  3303  00F7F1  63                 	db	99	;'c'
  3304  00F7F2  75                 	db	117	;'u'
  3305  00F7F3  6C                 	db	108	;'l'
  3306  00F7F4  61                 	db	97	;'a'
  3307  00F7F5  74                 	db	116	;'t'
  3308  00F7F6  65                 	db	101	;'e'
  3309  00F7F7  64                 	db	100	;'d'
  3310  00F7F8  20                 	db	32
  3311  00F7F9  54                 	db	84	;'T'
  3312  00F7FA  52                 	db	82	;'R'
  3313  00F7FB  49                 	db	73	;'I'
  3314  00F7FC  41                 	db	65	;'A'
  3315  00F7FD  43                 	db	67	;'C'
  3316  00F7FE  20                 	db	32
  3317  00F7FF  66                 	db	102	;'f'
  3318  00F800  69                 	db	105	;'i'
  3319  00F801  72                 	db	114	;'r'
  3320  00F802  69                 	db	105	;'i'
  3321  00F803  6E                 	db	110	;'n'
  3322  00F804  67                 	db	103	;'g'
  3323  00F805  20                 	db	32
  3324  00F806  61                 	db	97	;'a'
  3325  00F807  6E                 	db	110	;'n'
  3326  00F808  67                 	db	103	;'g'
  3327  00F809  6C                 	db	108	;'l'
  3328  00F80A  65                 	db	101	;'e'
  3329  00F80B  20                 	db	32
  3330  00F80C  69                 	db	105	;'i'
  3331  00F80D  73                 	db	115	;'s'
  3332  00F80E  20                 	db	32
  3333  00F80F  25                 	db	37
  3334  00F810  2E                 	db	46
  3335  00F811  33                 	db	51	;'3'
  3336  00F812  66                 	db	102	;'f'
  3337  00F813  20                 	db	32
  3338  00F814  72                 	db	114	;'r'
  3339  00F815  61                 	db	97	;'a'
  3340  00F816  64                 	db	100	;'d'
  3341  00F817  69                 	db	105	;'i'
  3342  00F818  61                 	db	97	;'a'
  3343  00F819  6E                 	db	110	;'n'
  3344  00F81A  73                 	db	115	;'s'
  3345  00F81B  20                 	db	32
  3346  00F81C  28                 	db	40
  3347  00F81D  25                 	db	37
  3348  00F81E  2E                 	db	46
  3349  00F81F  33                 	db	51	;'3'
  3350  00F820  66                 	db	102	;'f'
  3351  00F821  20                 	db	32
  3352  00F822  64                 	db	100	;'d'
  3353  00F823  65                 	db	101	;'e'
  3354  00F824  67                 	db	103	;'g'
  3355  00F825  72                 	db	114	;'r'
  3356  00F826  65                 	db	101	;'e'
  3357  00F827  65                 	db	101	;'e'
  3358  00F828  73                 	db	115	;'s'
  3359  00F829  29                 	db	41
  3360  00F82A  0A                 	db	10
  3361  00F82B  0D                 	db	13
  3362  00F82C  00                 	db	0
  3363  00F82D                     STR_110:
  3364  00F82D  44                 	db	68	;'D'
  3365  00F82E  65                 	db	101	;'e'
  3366  00F82F  76                 	db	118	;'v'
  3367  00F830  69                 	db	105	;'i'
  3368  00F831  63                 	db	99	;'c'
  3369  00F832  65                 	db	101	;'e'
  3370  00F833  20                 	db	32
  3371  00F834  6F                 	db	111	;'o'
  3372  00F835  6E                 	db	110	;'n'
  3373  00F836  20                 	db	32
  3374  00F837  74                 	db	116	;'t'
  3375  00F838  69                 	db	105	;'i'
  3376  00F839  6D                 	db	109	;'m'
  3377  00F83A  65                 	db	101	;'e'
  3378  00F83B  20                 	db	32
  3379  00F83C  73                 	db	115	;'s'
  3380  00F83D  69                 	db	105	;'i'
  3381  00F83E  6E                 	db	110	;'n'
  3382  00F83F  63                 	db	99	;'c'
  3383  00F840  65                 	db	101	;'e'
  3384  00F841  20                 	db	32
  3385  00F842  6C                 	db	108	;'l'
  3386  00F843  61                 	db	97	;'a'
  3387  00F844  73                 	db	115	;'s'
  3388  00F845  74                 	db	116	;'t'
  3389  00F846  20                 	db	32
  3390  00F847  72                 	db	114	;'r'
  3391  00F848  65                 	db	101	;'e'
  3392  00F849  73                 	db	115	;'s'
  3393  00F84A  65                 	db	101	;'e'
  3394  00F84B  74                 	db	116	;'t'
  3395  00F84C  20                 	db	32
  3396  00F84D  63                 	db	99	;'c'
  3397  00F84E  6F                 	db	111	;'o'
  3398  00F84F  6E                 	db	110	;'n'
  3399  00F850  64                 	db	100	;'d'
  3400  00F851  69                 	db	105	;'i'
  3401  00F852  74                 	db	116	;'t'
  3402  00F853  69                 	db	105	;'i'
  3403  00F854  6F                 	db	111	;'o'
  3404  00F855  6E                 	db	110	;'n'
  3405  00F856  20                 	db	32
  3406  00F857  69                 	db	105	;'i'
  3407  00F858  73                 	db	115	;'s'
  3408  00F859  20                 	db	32
  3409  00F85A  25                 	db	37
  3410  00F85B  64                 	db	100	;'d'
  3411  00F85C  20                 	db	32
  3412  00F85D  73                 	db	115	;'s'
  3413  00F85E  65                 	db	101	;'e'
  3414  00F85F  63                 	db	99	;'c'
  3415  00F860  6F                 	db	111	;'o'
  3416  00F861  6E                 	db	110	;'n'
  3417  00F862  64                 	db	100	;'d'
  3418  00F863  73                 	db	115	;'s'
  3419  00F864  0A                 	db	10
  3420  00F865  0D                 	db	13
  3421  00F866  00                 	db	0
  3422  00F867                     STR_56:
  3423  00F867  44                 	db	68	;'D'
  3424  00F868  65                 	db	101	;'e'
  3425  00F869  76                 	db	118	;'v'
  3426  00F86A  69                 	db	105	;'i'
  3427  00F86B  63                 	db	99	;'c'
  3428  00F86C  65                 	db	101	;'e'
  3429  00F86D  20                 	db	32
  3430  00F86E  73                 	db	115	;'s'
  3431  00F86F  69                 	db	105	;'i'
  3432  00F870  6C                 	db	108	;'l'
  3433  00F871  69                 	db	105	;'i'
  3434  00F872  63                 	db	99	;'c'
  3435  00F873  6F                 	db	111	;'o'
  3436  00F874  6E                 	db	110	;'n'
  3437  00F875  20                 	db	32
  3438  00F876  72                 	db	114	;'r'
  3439  00F877  65                 	db	101	;'e'
  3440  00F878  76                 	db	118	;'v'
  3441  00F879  69                 	db	105	;'i'
  3442  00F87A  73                 	db	115	;'s'
  3443  00F87B  69                 	db	105	;'i'
  3444  00F87C  6F                 	db	111	;'o'
  3445  00F87D  6E                 	db	110	;'n'
  3446  00F87E  20                 	db	32
  3447  00F87F  49                 	db	73	;'I'
  3448  00F880  44                 	db	68	;'D'
  3449  00F881  20                 	db	32
  3450  00F882  61                 	db	97	;'a'
  3451  00F883  73                 	db	115	;'s'
  3452  00F884  20                 	db	32
  3453  00F885  73                 	db	115	;'s'
  3454  00F886  74                 	db	116	;'t'
  3455  00F887  6F                 	db	111	;'o'
  3456  00F888  72                 	db	114	;'r'
  3457  00F889  65                 	db	101	;'e'
  3458  00F88A  64                 	db	100	;'d'
  3459  00F88B  20                 	db	32
  3460  00F88C  69                 	db	105	;'i'
  3461  00F88D  6E                 	db	110	;'n'
  3462  00F88E  20                 	db	32
  3463  00F88F  46                 	db	70	;'F'
  3464  00F890  6C                 	db	108	;'l'
  3465  00F891  61                 	db	97	;'a'
  3466  00F892  73                 	db	115	;'s'
  3467  00F893  68                 	db	104	;'h'
  3468  00F894  20                 	db	32
  3469  00F895  69                 	db	105	;'i'
  3470  00F896  73                 	db	115	;'s'
  3471  00F897  3A                 	db	58	;':'
  3472  00F898  20                 	db	32
  3473  00F899  25                 	db	37
  3474  00F89A  63                 	db	99	;'c'
  3475  00F89B  25                 	db	37
  3476  00F89C  64                 	db	100	;'d'
  3477  00F89D  0A                 	db	10
  3478  00F89E  0D                 	db	13
  3479  00F89F  00                 	db	0
  3480  00F8A0                     STR_93:
  3481  00F8A0  4F                 	db	79	;'O'
  3482  00F8A1  75                 	db	117	;'u'
  3483  00F8A2  74                 	db	116	;'t'
  3484  00F8A3  70                 	db	112	;'p'
  3485  00F8A4  75                 	db	117	;'u'
  3486  00F8A5  74                 	db	116	;'t'
  3487  00F8A6  20                 	db	32
  3488  00F8A7  70                 	db	112	;'p'
  3489  00F8A8  6F                 	db	111	;'o'
  3490  00F8A9  77                 	db	119	;'w'
  3491  00F8AA  65                 	db	101	;'e'
  3492  00F8AB  72                 	db	114	;'r'
  3493  00F8AC  20                 	db	32
  3494  00F8AD  63                 	db	99	;'c'
  3495  00F8AE  61                 	db	97	;'a'
  3496  00F8AF  6C                 	db	108	;'l'
  3497  00F8B0  63                 	db	99	;'c'
  3498  00F8B1  75                 	db	117	;'u'
  3499  00F8B2  6C                 	db	108	;'l'
  3500  00F8B3  61                 	db	97	;'a'
  3501  00F8B4  74                 	db	116	;'t'
  3502  00F8B5  65                 	db	101	;'e'
  3503  00F8B6  64                 	db	100	;'d'
  3504  00F8B7  20                 	db	32
  3505  00F8B8  61                 	db	97	;'a'
  3506  00F8B9  73                 	db	115	;'s'
  3507  00F8BA  20                 	db	32
  3508  00F8BB  25                 	db	37
  3509  00F8BC  2E                 	db	46
  3510  00F8BD  33                 	db	51	;'3'
  3511  00F8BE  66                 	db	102	;'f'
  3512  00F8BF  20                 	db	32
  3513  00F8C0  57                 	db	87	;'W'
  3514  00F8C1  61                 	db	97	;'a'
  3515  00F8C2  74                 	db	116	;'t'
  3516  00F8C3  74                 	db	116	;'t'
  3517  00F8C4  73                 	db	115	;'s'
  3518  00F8C5  20                 	db	32
  3519  00F8C6  66                 	db	102	;'f'
  3520  00F8C7  72                 	db	114	;'r'
  3521  00F8C8  6F                 	db	111	;'o'
  3522  00F8C9  6D                 	db	109	;'m'
  3523  00F8CA  20                 	db	32
  3524  00F8CB  52                 	db	82	;'R'
  3525  00F8CC  4D                 	db	77	;'M'
  3526  00F8CD  53                 	db	83	;'S'
  3527  00F8CE  20                 	db	32
  3528  00F8CF  76                 	db	118	;'v'
  3529  00F8D0  61                 	db	97	;'a'
  3530  00F8D1  6C                 	db	108	;'l'
  3531  00F8D2  75                 	db	117	;'u'
  3532  00F8D3  65                 	db	101	;'e'
  3533  00F8D4  73                 	db	115	;'s'
  3534  00F8D5  0A                 	db	10
  3535  00F8D6  0D                 	db	13
  3536  00F8D7  00                 	db	0
  3537  00F8D8                     STR_83:
  3538  00F8D8  46                 	db	70	;'F'
  3539  00F8D9  69                 	db	105	;'i'
  3540  00F8DA  78                 	db	120	;'x'
  3541  00F8DB  65                 	db	101	;'e'
  3542  00F8DC  64                 	db	100	;'d'
  3543  00F8DD  20                 	db	32
  3544  00F8DE  56                 	db	86	;'V'
  3545  00F8DF  6F                 	db	111	;'o'
  3546  00F8E0  6C                 	db	108	;'l'
  3547  00F8E1  74                 	db	116	;'t'
  3548  00F8E2  61                 	db	97	;'a'
  3549  00F8E3  67                 	db	103	;'g'
  3550  00F8E4  65                 	db	101	;'e'
  3551  00F8E5  20                 	db	32
  3552  00F8E6  52                 	db	82	;'R'
  3553  00F8E7  65                 	db	101	;'e'
  3554  00F8E8  66                 	db	102	;'f'
  3555  00F8E9  65                 	db	101	;'e'
  3556  00F8EA  72                 	db	114	;'r'
  3557  00F8EB  65                 	db	101	;'e'
  3558  00F8EC  6E                 	db	110	;'n'
  3559  00F8ED  63                 	db	99	;'c'
  3560  00F8EE  65                 	db	101	;'e'
  3561  00F8EF  20                 	db	32
  3562  00F8F0  42                 	db	66	;'B'
  3563  00F8F1  75                 	db	117	;'u'
  3564  00F8F2  66                 	db	102	;'f'
  3565  00F8F3  66                 	db	102	;'f'
  3566  00F8F4  65                 	db	101	;'e'
  3567  00F8F5  72                 	db	114	;'r'
  3568  00F8F6  20                 	db	32
  3569  00F8F7  31                 	db	49	;'1'
  3570  00F8F8  20                 	db	32
  3571  00F8F9  6D                 	db	109	;'m'
  3572  00F8FA  65                 	db	101	;'e'
  3573  00F8FB  61                 	db	97	;'a'
  3574  00F8FC  73                 	db	115	;'s'
  3575  00F8FD  75                 	db	117	;'u'
  3576  00F8FE  72                 	db	114	;'r'
  3577  00F8FF  65                 	db	101	;'e'
  3578  00F900  64                 	db	100	;'d'
  3579  00F901  20                 	db	32
  3580  00F902  61                 	db	97	;'a'
  3581  00F903  73                 	db	115	;'s'
  3582  00F904  20                 	db	32
  3583  00F905  25                 	db	37
  3584  00F906  66                 	db	102	;'f'
  3585  00F907  20                 	db	32
  3586  00F908  56                 	db	86	;'V'
  3587  00F909  6F                 	db	111	;'o'
  3588  00F90A  6C                 	db	108	;'l'
  3589  00F90B  74                 	db	116	;'t'
  3590  00F90C  73                 	db	115	;'s'
  3591  00F90D  0A                 	db	10
  3592  00F90E  0D                 	db	13
  3593  00F90F  00                 	db	0
  3594  00F910                     STR_59:
  3595  00F910  20                 	db	32
  3596  00F911  20                 	db	32
  3597  00F912  20                 	db	32
  3598  00F913  20                 	db	32
  3599  00F914  55                 	db	85	;'U'
  3600  00F915  73                 	db	115	;'s'
  3601  00F916  65                 	db	101	;'e'
  3602  00F917  72                 	db	114	;'r'
  3603  00F918  20                 	db	32
  3604  00F919  49                 	db	73	;'I'
  3605  00F91A  44                 	db	68	;'D'
  3606  00F91B  20                 	db	32
  3607  00F91C  57                 	db	87	;'W'
  3608  00F91D  6F                 	db	111	;'o'
  3609  00F91E  72                 	db	114	;'r'
  3610  00F91F  64                 	db	100	;'d'
  3611  00F920  20                 	db	32
  3612  00F921  25                 	db	37
  3613  00F922  64                 	db	100	;'d'
  3614  00F923  20                 	db	32
  3615  00F924  28                 	db	40
  3616  00F925  46                 	db	70	;'F'
  3617  00F926  6C                 	db	108	;'l'
  3618  00F927  61                 	db	97	;'a'
  3619  00F928  73                 	db	115	;'s'
  3620  00F929  68                 	db	104	;'h'
  3621  00F92A  20                 	db	32
  3622  00F92B  61                 	db	97	;'a'
  3623  00F92C  64                 	db	100	;'d'
  3624  00F92D  64                 	db	100	;'d'
  3625  00F92E  72                 	db	114	;'r'
  3626  00F92F  65                 	db	101	;'e'
  3627  00F930  73                 	db	115	;'s'
  3628  00F931  73                 	db	115	;'s'
  3629  00F932  20                 	db	32
  3630  00F933  30                 	db	48	;'0'
  3631  00F934  78                 	db	120	;'x'
  3632  00F935  32                 	db	50	;'2'
  3633  00F936  30                 	db	48	;'0'
  3634  00F937  30                 	db	48	;'0'
  3635  00F938  30                 	db	48	;'0'
  3636  00F939  30                 	db	48	;'0'
  3637  00F93A  25                 	db	37
  3638  00F93B  58                 	db	88	;'X'
  3639  00F93C  29                 	db	41
  3640  00F93D  3A                 	db	58	;':'
  3641  00F93E  20                 	db	32
  3642  00F93F  30                 	db	48	;'0'
  3643  00F940  78                 	db	120	;'x'
  3644  00F941  25                 	db	37
  3645  00F942  58                 	db	88	;'X'
  3646  00F943  0A                 	db	10
  3647  00F944  0D                 	db	13
  3648  00F945  00                 	db	0
  3649  00F946                     STR_112:
  3650  00F946  4C                 	db	76	;'L'
  3651  00F947  6F                 	db	111	;'o'
  3652  00F948  61                 	db	97	;'a'
  3653  00F949  64                 	db	100	;'d'
  3654  00F94A  20                 	db	32
  3655  00F94B  6F                 	db	111	;'o'
  3656  00F94C  6E                 	db	110	;'n'
  3657  00F94D  20                 	db	32
  3658  00F94E  74                 	db	116	;'t'
  3659  00F94F  69                 	db	105	;'i'
  3660  00F950  6D                 	db	109	;'m'
  3661  00F951  65                 	db	101	;'e'
  3662  00F952  20                 	db	32
  3663  00F953  73                 	db	115	;'s'
  3664  00F954  69                 	db	105	;'i'
  3665  00F955  6E                 	db	110	;'n'
  3666  00F956  63                 	db	99	;'c'
  3667  00F957  65                 	db	101	;'e'
  3668  00F958  20                 	db	32
  3669  00F959  6C                 	db	108	;'l'
  3670  00F95A  61                 	db	97	;'a'
  3671  00F95B  73                 	db	115	;'s'
  3672  00F95C  74                 	db	116	;'t'
  3673  00F95D  20                 	db	32
  3674  00F95E  64                 	db	100	;'d'
  3675  00F95F  65                 	db	101	;'e'
  3676  00F960  76                 	db	118	;'v'
  3677  00F961  69                 	db	105	;'i'
  3678  00F962  63                 	db	99	;'c'
  3679  00F963  65                 	db	101	;'e'
  3680  00F964  20                 	db	32
  3681  00F965  72                 	db	114	;'r'
  3682  00F966  65                 	db	101	;'e'
  3683  00F967  73                 	db	115	;'s'
  3684  00F968  65                 	db	101	;'e'
  3685  00F969  74                 	db	116	;'t'
  3686  00F96A  20                 	db	32
  3687  00F96B  69                 	db	105	;'i'
  3688  00F96C  73                 	db	115	;'s'
  3689  00F96D  20                 	db	32
  3690  00F96E  25                 	db	37
  3691  00F96F  64                 	db	100	;'d'
  3692  00F970  20                 	db	32
  3693  00F971  73                 	db	115	;'s'
  3694  00F972  65                 	db	101	;'e'
  3695  00F973  63                 	db	99	;'c'
  3696  00F974  6F                 	db	111	;'o'
  3697  00F975  6E                 	db	110	;'n'
  3698  00F976  64                 	db	100	;'d'
  3699  00F977  73                 	db	115	;'s'
  3700  00F978  0A                 	db	10
  3701  00F979  0D                 	db	13
  3702  00F97A  00                 	db	0
  3703  00F97B                     STR_48:
  3704  00F97B  54                 	db	84	;'T'
  3705  00F97C  68                 	db	104	;'h'
  3706  00F97D  65                 	db	101	;'e'
  3707  00F97E  20                 	db	32
  3708  00F97F  63                 	db	99	;'c'
  3709  00F980  61                 	db	97	;'a'
  3710  00F981  75                 	db	117	;'u'
  3711  00F982  73                 	db	115	;'s'
  3712  00F983  65                 	db	101	;'e'
  3713  00F984  20                 	db	32
  3714  00F985  6F                 	db	111	;'o'
  3715  00F986  66                 	db	102	;'f'
  3716  00F987  20                 	db	32
  3717  00F988  74                 	db	116	;'t'
  3718  00F989  68                 	db	104	;'h'
  3719  00F98A  65                 	db	101	;'e'
  3720  00F98B  20                 	db	32
  3721  00F98C  6D                 	db	109	;'m'
  3722  00F98D  6F                 	db	111	;'o'
  3723  00F98E  73                 	db	115	;'s'
  3724  00F98F  74                 	db	116	;'t'
  3725  00F990  20                 	db	32
  3726  00F991  72                 	db	114	;'r'
  3727  00F992  65                 	db	101	;'e'
  3728  00F993  63                 	db	99	;'c'
  3729  00F994  65                 	db	101	;'e'
  3730  00F995  6E                 	db	110	;'n'
  3731  00F996  74                 	db	116	;'t'
  3732  00F997  20                 	db	32
  3733  00F998  64                 	db	100	;'d'
  3734  00F999  65                 	db	101	;'e'
  3735  00F99A  76                 	db	118	;'v'
  3736  00F99B  69                 	db	105	;'i'
  3737  00F99C  63                 	db	99	;'c'
  3738  00F99D  65                 	db	101	;'e'
  3739  00F99E  20                 	db	32
  3740  00F99F  72                 	db	114	;'r'
  3741  00F9A0  65                 	db	101	;'e'
  3742  00F9A1  73                 	db	115	;'s'
  3743  00F9A2  65                 	db	101	;'e'
  3744  00F9A3  74                 	db	116	;'t'
  3745  00F9A4  20                 	db	32
  3746  00F9A5  77                 	db	119	;'w'
  3747  00F9A6  61                 	db	97	;'a'
  3748  00F9A7  73                 	db	115	;'s'
  3749  00F9A8  3A                 	db	58	;':'
  3750  00F9A9  20                 	db	32
  3751  00F9AA  25                 	db	37
  3752  00F9AB  73                 	db	115	;'s'
  3753  00F9AC  0A                 	db	10
  3754  00F9AD  0D                 	db	13
  3755  00F9AE  00                 	db	0
  3756  00F9AF                     STR_69:
  3757  00F9AF  54                 	db	84	;'T'
  3758  00F9B0  68                 	db	104	;'h'
  3759  00F9B1  65                 	db	101	;'e'
  3760  00F9B2  20                 	db	32
  3761  00F9B3  66                 	db	102	;'f'
  3762  00F9B4  6F                 	db	111	;'o'
  3763  00F9B5  6C                 	db	108	;'l'
  3764  00F9B6  6C                 	db	108	;'l'
  3765  00F9B7  6F                 	db	111	;'o'
  3766  00F9B8  77                 	db	119	;'w'
  3767  00F9B9  69                 	db	105	;'i'
  3768  00F9BA  6E                 	db	110	;'n'
  3769  00F9BB  67                 	db	103	;'g'
  3770  00F9BC  20                 	db	32
  3771  00F9BD  63                 	db	99	;'c'
  3772  00F9BE  68                 	db	104	;'h'
  3773  00F9BF  61                 	db	97	;'a'
  3774  00F9C0  6E                 	db	110	;'n'
  3775  00F9C1  6E                 	db	110	;'n'
  3776  00F9C2  65                 	db	101	;'e'
  3777  00F9C3  6C                 	db	108	;'l'
  3778  00F9C4  20                 	db	32
  3779  00F9C5  63                 	db	99	;'c'
  3780  00F9C6  61                 	db	97	;'a'
  3781  00F9C7  75                 	db	117	;'u'
  3782  00F9C8  73                 	db	115	;'s'
  3783  00F9C9  65                 	db	101	;'e'
  3784  00F9CA  64                 	db	100	;'d'
  3785  00F9CB  20                 	db	32
  3786  00F9CC  61                 	db	97	;'a'
  3787  00F9CD  6E                 	db	110	;'n'
  3788  00F9CE  20                 	db	32
  3789  00F9CF  41                 	db	65	;'A'
  3790  00F9D0  44                 	db	68	;'D'
  3791  00F9D1  43                 	db	67	;'C'
  3792  00F9D2  20                 	db	32
  3793  00F9D3  65                 	db	101	;'e'
  3794  00F9D4  72                 	db	114	;'r'
  3795  00F9D5  72                 	db	114	;'r'
  3796  00F9D6  6F                 	db	111	;'o'
  3797  00F9D7  72                 	db	114	;'r'
  3798  00F9D8  3A                 	db	58	;':'
  3799  00F9D9  20                 	db	32
  3800  00F9DA  25                 	db	37
  3801  00F9DB  73                 	db	115	;'s'
  3802  00F9DC  0A                 	db	10
  3803  00F9DD  0D                 	db	13
  3804  00F9DE  00                 	db	0
  3805  00F9DF                     STR_52:
  3806  00F9DF  4D                 	db	77	;'M'
  3807  00F9E0  61                 	db	97	;'a'
  3808  00F9E1  72                 	db	114	;'r'
  3809  00F9E2  71                 	db	113	;'q'
  3810  00F9E3  75                 	db	117	;'u'
  3811  00F9E4  65                 	db	101	;'e'
  3812  00F9E5  74                 	db	116	;'t'
  3813  00F9E6  74                 	db	116	;'t'
  3814  00F9E7  65                 	db	101	;'e'
  3815  00F9E8  20                 	db	32
  3816  00F9E9  55                 	db	85	;'U'
  3817  00F9EA  6E                 	db	110	;'n'
  3818  00F9EB  69                 	db	105	;'i'
  3819  00F9EC  76                 	db	118	;'v'
  3820  00F9ED  65                 	db	101	;'e'
  3821  00F9EE  72                 	db	114	;'r'
  3822  00F9EF  73                 	db	115	;'s'
  3823  00F9F0  69                 	db	105	;'i'
  3824  00F9F1  74                 	db	116	;'t'
  3825  00F9F2  79                 	db	121	;'y'
  3826  00F9F3  20                 	db	32
  3827  00F9F4  45                 	db	69	;'E'
  3828  00F9F5  4C                 	db	76	;'L'
  3829  00F9F6  45                 	db	69	;'E'
  3830  00F9F7  4E                 	db	78	;'N'
  3831  00F9F8  20                 	db	32
  3832  00F9F9  33                 	db	51	;'3'
  3833  00F9FA  30                 	db	48	;'0'
  3834  00F9FB  33                 	db	51	;'3'
  3835  00F9FC  35                 	db	53	;'5'
  3836  00F9FD  20                 	db	32
  3837  00F9FE  46                 	db	70	;'F'
  3838  00F9FF  69                 	db	105	;'i'
  3839  00FA00  6E                 	db	110	;'n'
  3840  00FA01  61                 	db	97	;'a'
  3841  00FA02  6C                 	db	108	;'l'
  3842  00FA03  20                 	db	32
  3843  00FA04  50                 	db	80	;'P'
  3844  00FA05  72                 	db	114	;'r'
  3845  00FA06  6F                 	db	111	;'o'
  3846  00FA07  6A                 	db	106	;'j'
  3847  00FA08  65                 	db	101	;'e'
  3848  00FA09  63                 	db	99	;'c'
  3849  00FA0A  74                 	db	116	;'t'
  3850  00FA0B  0A                 	db	10
  3851  00FA0C  0D                 	db	13
  3852  00FA0D  00                 	db	0
  3853  00FA0E                     STR_105:
  3854  00FA0E  45                 	db	69	;'E'
  3855  00FA0F  6E                 	db	110	;'n'
  3856  00FA10  74                 	db	116	;'t'
  3857  00FA11  65                 	db	101	;'e'
  3858  00FA12  72                 	db	114	;'r'
  3859  00FA13  20                 	db	32
  3860  00FA14  27                 	db	39
  3861  00FA15  48                 	db	72	;'H'
  3862  00FA16  65                 	db	101	;'e'
  3863  00FA17  6C                 	db	108	;'l'
  3864  00FA18  70                 	db	112	;'p'
  3865  00FA19  27                 	db	39
  3866  00FA1A  20                 	db	32
  3867  00FA1B  66                 	db	102	;'f'
  3868  00FA1C  6F                 	db	111	;'o'
  3869  00FA1D  72                 	db	114	;'r'
  3870  00FA1E  20                 	db	32
  3871  00FA1F  6C                 	db	108	;'l'
  3872  00FA20  69                 	db	105	;'i'
  3873  00FA21  73                 	db	115	;'s'
  3874  00FA22  74                 	db	116	;'t'
  3875  00FA23  20                 	db	32
  3876  00FA24  6F                 	db	111	;'o'
  3877  00FA25  66                 	db	102	;'f'
  3878  00FA26  20                 	db	32
  3879  00FA27  61                 	db	97	;'a'
  3880  00FA28  76                 	db	118	;'v'
  3881  00FA29  61                 	db	97	;'a'
  3882  00FA2A  69                 	db	105	;'i'
  3883  00FA2B  6C                 	db	108	;'l'
  3884  00FA2C  61                 	db	97	;'a'
  3885  00FA2D  62                 	db	98	;'b'
  3886  00FA2E  6C                 	db	108	;'l'
  3887  00FA2F  65                 	db	101	;'e'
  3888  00FA30  20                 	db	32
  3889  00FA31  63                 	db	99	;'c'
  3890  00FA32  6F                 	db	111	;'o'
  3891  00FA33  6D                 	db	109	;'m'
  3892  00FA34  6D                 	db	109	;'m'
  3893  00FA35  61                 	db	97	;'a'
  3894  00FA36  6E                 	db	110	;'n'
  3895  00FA37  64                 	db	100	;'d'
  3896  00FA38  73                 	db	115	;'s'
  3897  00FA39  0A                 	db	10
  3898  00FA3A  0D                 	db	13
  3899  00FA3B  00                 	db	0
  3900  00FA3C                     STR_75:
  3901  00FA3C  56                 	db	86	;'V'
  3902  00FA3D  43                 	db	67	;'C'
  3903  00FA3E  43                 	db	67	;'C'
  3904  00FA3F  20                 	db	32
  3905  00FA40  4F                 	db	79	;'O'
  3906  00FA41  76                 	db	118	;'v'
  3907  00FA42  65                 	db	101	;'e'
  3908  00FA43  72                 	db	114	;'r'
  3909  00FA44  76                 	db	118	;'v'
  3910  00FA45  6F                 	db	111	;'o'
  3911  00FA46  6C                 	db	108	;'l'
  3912  00FA47  74                 	db	116	;'t'
  3913  00FA48  61                 	db	97	;'a'
  3914  00FA49  67                 	db	103	;'g'
  3915  00FA4A  65                 	db	101	;'e'
  3916  00FA4B  20                 	db	32
  3917  00FA4C  63                 	db	99	;'c'
  3918  00FA4D  6F                 	db	111	;'o'
  3919  00FA4E  6E                 	db	110	;'n'
  3920  00FA4F  64                 	db	100	;'d'
  3921  00FA50  69                 	db	105	;'i'
  3922  00FA51  74                 	db	116	;'t'
  3923  00FA52  69                 	db	105	;'i'
  3924  00FA53  6F                 	db	111	;'o'
  3925  00FA54  6E                 	db	110	;'n'
  3926  00FA55  20                 	db	32
  3927  00FA56  68                 	db	104	;'h'
  3928  00FA57  61                 	db	97	;'a'
  3929  00FA58  73                 	db	115	;'s'
  3930  00FA59  20                 	db	32
  3931  00FA5A  6E                 	db	110	;'n'
  3932  00FA5B  6F                 	db	111	;'o'
  3933  00FA5C  74                 	db	116	;'t'
  3934  00FA5D  20                 	db	32
  3935  00FA5E  6F                 	db	111	;'o'
  3936  00FA5F  63                 	db	99	;'c'
  3937  00FA60  63                 	db	99	;'c'
  3938  00FA61  75                 	db	117	;'u'
  3939  00FA62  72                 	db	114	;'r'
  3940  00FA63  72                 	db	114	;'r'
  3941  00FA64  65                 	db	101	;'e'
  3942  00FA65  64                 	db	100	;'d'
  3943  00FA66  0A                 	db	10
  3944  00FA67  0D                 	db	13
  3945  00FA68  00                 	db	0
  3946  00FA69                     STR_99:
  3947  00FA69  4C                 	db	76	;'L'
  3948  00FA6A  6F                 	db	111	;'o'
  3949  00FA6B  61                 	db	97	;'a'
  3950  00FA6C  64                 	db	100	;'d'
  3951  00FA6D  20                 	db	32
  3952  00FA6E  68                 	db	104	;'h'
  3953  00FA6F  61                 	db	97	;'a'
  3954  00FA70  73                 	db	115	;'s'
  3955  00FA71  20                 	db	32
  3956  00FA72  62                 	db	98	;'b'
  3957  00FA73  65                 	db	101	;'e'
  3958  00FA74  65                 	db	101	;'e'
  3959  00FA75  6E                 	db	110	;'n'
  3960  00FA76  20                 	db	32
  3961  00FA77  65                 	db	101	;'e'
  3962  00FA78  6E                 	db	110	;'n'
  3963  00FA79  61                 	db	97	;'a'
  3964  00FA7A  62                 	db	98	;'b'
  3965  00FA7B  6C                 	db	108	;'l'
  3966  00FA7C  65                 	db	101	;'e'
  3967  00FA7D  64                 	db	100	;'d'
  3968  00FA7E  2C                 	db	44
  3969  00FA7F  20                 	db	32
  3970  00FA80  64                 	db	100	;'d'
  3971  00FA81  69                 	db	105	;'i'
  3972  00FA82  6D                 	db	109	;'m'
  3973  00FA83  6D                 	db	109	;'m'
  3974  00FA84  69                 	db	105	;'i'
  3975  00FA85  6E                 	db	110	;'n'
  3976  00FA86  67                 	db	103	;'g'
  3977  00FA87  20                 	db	32
  3978  00FA88  64                 	db	100	;'d'
  3979  00FA89  69                 	db	105	;'i'
  3980  00FA8A  73                 	db	115	;'s'
  3981  00FA8B  61                 	db	97	;'a'
  3982  00FA8C  62                 	db	98	;'b'
  3983  00FA8D  6C                 	db	108	;'l'
  3984  00FA8E  65                 	db	101	;'e'
  3985  00FA8F  64                 	db	100	;'d'
  3986  00FA90  0A                 	db	10
  3987  00FA91  0D                 	db	13
  3988  00FA92  00                 	db	0
  3989  00FA93                     STR_128:
  3990  00FA93  57                 	db	87	;'W'
  3991  00FA94  69                 	db	105	;'i'
  3992  00FA95  6E                 	db	110	;'n'
  3993  00FA96  64                 	db	100	;'d'
  3994  00FA97  6F                 	db	111	;'o'
  3995  00FA98  77                 	db	119	;'w'
  3996  00FA99  65                 	db	101	;'e'
  3997  00FA9A  64                 	db	100	;'d'
  3998  00FA9B  20                 	db	32
  3999  00FA9C  57                 	db	87	;'W'
  4000  00FA9D  61                 	db	97	;'a'
  4001  00FA9E  74                 	db	116	;'t'
  4002  00FA9F  63                 	db	99	;'c'
  4003  00FAA0  68                 	db	104	;'h'
  4004  00FAA1  20                 	db	32
  4005  00FAA2  44                 	db	68	;'D'
  4006  00FAA3  6F                 	db	111	;'o'
  4007  00FAA4  67                 	db	103	;'g'
  4008  00FAA5  20                 	db	32
  4009  00FAA6  54                 	db	84	;'T'
  4010  00FAA7  69                 	db	105	;'i'
  4011  00FAA8  6D                 	db	109	;'m'
  4012  00FAA9  65                 	db	101	;'e'
  4013  00FAAA  72                 	db	114	;'r'
  4014  00FAAB  20                 	db	32
  4015  00FAAC  56                 	db	86	;'V'
  4016  00FAAD  69                 	db	105	;'i'
  4017  00FAAE  6F                 	db	111	;'o'
  4018  00FAAF  6C                 	db	108	;'l'
  4019  00FAB0  61                 	db	97	;'a'
  4020  00FAB1  74                 	db	116	;'t'
  4021  00FAB2  69                 	db	105	;'i'
  4022  00FAB3  6F                 	db	111	;'o'
  4023  00FAB4  6E                 	db	110	;'n'
  4024  00FAB5  20                 	db	32
  4025  00FAB6  52                 	db	82	;'R'
  4026  00FAB7  65                 	db	101	;'e'
  4027  00FAB8  73                 	db	115	;'s'
  4028  00FAB9  65                 	db	101	;'e'
  4029  00FABA  74                 	db	116	;'t'
  4030  00FABB  00                 	db	0
  4031  00FABC                     STR_97:
  4032  00FABC  54                 	db	84	;'T'
  4033  00FABD  52                 	db	82	;'R'
  4034  00FABE  49                 	db	73	;'I'
  4035  00FABF  41                 	db	65	;'A'
  4036  00FAC0  43                 	db	67	;'C'
  4037  00FAC1  20                 	db	32
  4038  00FAC2  6F                 	db	111	;'o'
  4039  00FAC3  75                 	db	117	;'u'
  4040  00FAC4  74                 	db	116	;'t'
  4041  00FAC5  70                 	db	112	;'p'
  4042  00FAC6  75                 	db	117	;'u'
  4043  00FAC7  74                 	db	116	;'t'
  4044  00FAC8  20                 	db	32
  4045  00FAC9  64                 	db	100	;'d'
  4046  00FACA  69                 	db	105	;'i'
  4047  00FACB  6D                 	db	109	;'m'
  4048  00FACC  6D                 	db	109	;'m'
  4049  00FACD  69                 	db	105	;'i'
  4050  00FACE  6E                 	db	110	;'n'
  4051  00FACF  67                 	db	103	;'g'
  4052  00FAD0  20                 	db	32
  4053  00FAD1  68                 	db	104	;'h'
  4054  00FAD2  61                 	db	97	;'a'
  4055  00FAD3  73                 	db	115	;'s'
  4056  00FAD4  20                 	db	32
  4057  00FAD5  62                 	db	98	;'b'
  4058  00FAD6  65                 	db	101	;'e'
  4059  00FAD7  65                 	db	101	;'e'
  4060  00FAD8  6E                 	db	110	;'n'
  4061  00FAD9  20                 	db	32
  4062  00FADA  64                 	db	100	;'d'
  4063  00FADB  69                 	db	105	;'i'
  4064  00FADC  73                 	db	115	;'s'
  4065  00FADD  61                 	db	97	;'a'
  4066  00FADE  62                 	db	98	;'b'
  4067  00FADF  6C                 	db	108	;'l'
  4068  00FAE0  65                 	db	101	;'e'
  4069  00FAE1  64                 	db	100	;'d'
  4070  00FAE2  0A                 	db	10
  4071  00FAE3  0D                 	db	13
  4072  00FAE4  00                 	db	0
  4073  00FAE5                     STR_95:
  4074  00FAE5  54                 	db	84	;'T'
  4075  00FAE6  52                 	db	82	;'R'
  4076  00FAE7  49                 	db	73	;'I'
  4077  00FAE8  41                 	db	65	;'A'
  4078  00FAE9  43                 	db	67	;'C'
  4079  00FAEA  20                 	db	32
  4080  00FAEB  6F                 	db	111	;'o'
  4081  00FAEC  75                 	db	117	;'u'
  4082  00FAED  74                 	db	116	;'t'
  4083  00FAEE  70                 	db	112	;'p'
  4084  00FAEF  75                 	db	117	;'u'
  4085  00FAF0  74                 	db	116	;'t'
  4086  00FAF1  20                 	db	32
  4087  00FAF2  64                 	db	100	;'d'
  4088  00FAF3  69                 	db	105	;'i'
  4089  00FAF4  6D                 	db	109	;'m'
  4090  00FAF5  6D                 	db	109	;'m'
  4091  00FAF6  69                 	db	105	;'i'
  4092  00FAF7  6E                 	db	110	;'n'
  4093  00FAF8  67                 	db	103	;'g'
  4094  00FAF9  20                 	db	32
  4095  00FAFA  68                 	db	104	;'h'
  4096  00FAFB  61                 	db	97	;'a'
  4097  00FAFC  73                 	db	115	;'s'
  4098  00FAFD  20                 	db	32
  4099  00FAFE  62                 	db	98	;'b'
  4100  00FAFF  65                 	db	101	;'e'
  4101  00FB00  65                 	db	101	;'e'
  4102  00FB01  6E                 	db	110	;'n'
  4103  00FB02  20                 	db	32
  4104  00FB03  65                 	db	101	;'e'
  4105  00FB04  6E                 	db	110	;'n'
  4106  00FB05  61                 	db	97	;'a'
  4107  00FB06  62                 	db	98	;'b'
  4108  00FB07  6C                 	db	108	;'l'
  4109  00FB08  65                 	db	101	;'e'
  4110  00FB09  64                 	db	100	;'d'
  4111  00FB0A  0A                 	db	10
  4112  00FB0B  0D                 	db	13
  4113  00FB0C  00                 	db	0
  4114  00FB0D                     STR_117:
  4115  00FB0D  4D                 	db	77	;'M'
  4116  00FB0E  65                 	db	101	;'e'
  4117  00FB0F  61                 	db	97	;'a'
  4118  00FB10  73                 	db	115	;'s'
  4119  00FB11  75                 	db	117	;'u'
  4120  00FB12  72                 	db	114	;'r'
  4121  00FB13  65                 	db	101	;'e'
  4122  00FB14  6D                 	db	109	;'m'
  4123  00FB15  65                 	db	101	;'e'
  4124  00FB16  6E                 	db	110	;'n'
  4125  00FB17  74                 	db	116	;'t'
  4126  00FB18  20                 	db	32
  4127  00FB19  72                 	db	114	;'r'
  4128  00FB1A  65                 	db	101	;'e'
  4129  00FB1B  73                 	db	115	;'s'
  4130  00FB1C  70                 	db	112	;'p'
  4131  00FB1D  6F                 	db	111	;'o'
  4132  00FB1E  6E                 	db	110	;'n'
  4133  00FB1F  73                 	db	115	;'s'
  4134  00FB20  65                 	db	101	;'e'
  4135  00FB21  73                 	db	115	;'s'
  4136  00FB22  20                 	db	32
  4137  00FB23  61                 	db	97	;'a'
  4138  00FB24  70                 	db	112	;'p'
  4139  00FB25  70                 	db	112	;'p'
  4140  00FB26  65                 	db	101	;'e'
  4141  00FB27  61                 	db	97	;'a'
  4142  00FB28  72                 	db	114	;'r'
  4143  00FB29  20                 	db	32
  4144  00FB2A  69                 	db	105	;'i'
  4145  00FB2B  6E                 	db	110	;'n'
  4146  00FB2C  20                 	db	32
  4147  00FB2D  63                 	db	99	;'c'
  4148  00FB2E  79                 	db	121	;'y'
  4149  00FB2F  61                 	db	97	;'a'
  4150  00FB30  6E                 	db	110	;'n'
  4151  00FB31  0A                 	db	10
  4152  00FB32  0D                 	db	13
  4153  00FB33  00                 	db	0
  4154  00FB34                     STR_85:
  4155  00FB34  41                 	db	65	;'A'
  4156  00FB35  56                 	db	86	;'V'
  4157  00FB36  53                 	db	83	;'S'
  4158  00FB37  53                 	db	83	;'S'
  4159  00FB38  20                 	db	32
  4160  00FB39  6D                 	db	109	;'m'
  4161  00FB3A  65                 	db	101	;'e'
  4162  00FB3B  61                 	db	97	;'a'
  4163  00FB3C  73                 	db	115	;'s'
  4164  00FB3D  75                 	db	117	;'u'
  4165  00FB3E  72                 	db	114	;'r'
  4166  00FB3F  65                 	db	101	;'e'
  4167  00FB40  64                 	db	100	;'d'
  4168  00FB41  20                 	db	32
  4169  00FB42  61                 	db	97	;'a'
  4170  00FB43  73                 	db	115	;'s'
  4171  00FB44  20                 	db	32
  4172  00FB45  25                 	db	37
  4173  00FB46  2E                 	db	46
  4174  00FB47  33                 	db	51	;'3'
  4175  00FB48  66                 	db	102	;'f'
  4176  00FB49  20                 	db	32
  4177  00FB4A  56                 	db	86	;'V'
  4178  00FB4B  6F                 	db	111	;'o'
  4179  00FB4C  6C                 	db	108	;'l'
  4180  00FB4D  74                 	db	116	;'t'
  4181  00FB4E  73                 	db	115	;'s'
  4182  00FB4F  20                 	db	32
  4183  00FB50  62                 	db	98	;'b'
  4184  00FB51  79                 	db	121	;'y'
  4185  00FB52  20                 	db	32
  4186  00FB53  41                 	db	65	;'A'
  4187  00FB54  44                 	db	68	;'D'
  4188  00FB55  43                 	db	67	;'C'
  4189  00FB56  0A                 	db	10
  4190  00FB57  0D                 	db	13
  4191  00FB58  00                 	db	0
  4192  00FB59                     STR_77:
  4193  00FB59  2B                 	db	43
  4194  00FB5A  33                 	db	51	;'3'
  4195  00FB5B  2E                 	db	46
  4196  00FB5C  33                 	db	51	;'3'
  4197  00FB5D  56                 	db	86	;'V'
  4198  00FB5E  20                 	db	32
  4199  00FB5F  72                 	db	114	;'r'
  4200  00FB60  61                 	db	97	;'a'
  4201  00FB61  69                 	db	105	;'i'
  4202  00FB62  6C                 	db	108	;'l'
  4203  00FB63  20                 	db	32
  4204  00FB64  6D                 	db	109	;'m'
  4205  00FB65  65                 	db	101	;'e'
  4206  00FB66  61                 	db	97	;'a'
  4207  00FB67  73                 	db	115	;'s'
  4208  00FB68  75                 	db	117	;'u'
  4209  00FB69  72                 	db	114	;'r'
  4210  00FB6A  65                 	db	101	;'e'
  4211  00FB6B  64                 	db	100	;'d'
  4212  00FB6C  20                 	db	32
  4213  00FB6D  61                 	db	97	;'a'
  4214  00FB6E  73                 	db	115	;'s'
  4215  00FB6F  20                 	db	32
  4216  00FB70  2B                 	db	43
  4217  00FB71  25                 	db	37
  4218  00FB72  2E                 	db	46
  4219  00FB73  33                 	db	51	;'3'
  4220  00FB74  66                 	db	102	;'f'
  4221  00FB75  20                 	db	32
  4222  00FB76  56                 	db	86	;'V'
  4223  00FB77  6F                 	db	111	;'o'
  4224  00FB78  6C                 	db	108	;'l'
  4225  00FB79  74                 	db	116	;'t'
  4226  00FB7A  73                 	db	115	;'s'
  4227  00FB7B  0A                 	db	10
  4228  00FB7C  0D                 	db	13
  4229  00FB7D  00                 	db	0
  4230  00FB7E                     STR_106:
  4231  00FB7E  44                 	db	68	;'D'
  4232  00FB7F  69                 	db	105	;'i'
  4233  00FB80  6D                 	db	109	;'m'
  4234  00FB81  6D                 	db	109	;'m'
  4235  00FB82  69                 	db	105	;'i'
  4236  00FB83  6E                 	db	110	;'n'
  4237  00FB84  67                 	db	103	;'g'
  4238  00FB85  20                 	db	32
  4239  00FB86  68                 	db	104	;'h'
  4240  00FB87  61                 	db	97	;'a'
  4241  00FB88  73                 	db	115	;'s'
  4242  00FB89  20                 	db	32
  4243  00FB8A  62                 	db	98	;'b'
  4244  00FB8B  65                 	db	101	;'e'
  4245  00FB8C  65                 	db	101	;'e'
  4246  00FB8D  6E                 	db	110	;'n'
  4247  00FB8E  20                 	db	32
  4248  00FB8F  73                 	db	115	;'s'
  4249  00FB90  65                 	db	101	;'e'
  4250  00FB91  74                 	db	116	;'t'
  4251  00FB92  20                 	db	32
  4252  00FB93  74                 	db	116	;'t'
  4253  00FB94  6F                 	db	111	;'o'
  4254  00FB95  20                 	db	32
  4255  00FB96  25                 	db	37
  4256  00FB97  64                 	db	100	;'d'
  4257  00FB98  20                 	db	32
  4258  00FB99  70                 	db	112	;'p'
  4259  00FB9A  65                 	db	101	;'e'
  4260  00FB9B  72                 	db	114	;'r'
  4261  00FB9C  63                 	db	99	;'c'
  4262  00FB9D  65                 	db	101	;'e'
  4263  00FB9E  6E                 	db	110	;'n'
  4264  00FB9F  74                 	db	116	;'t'
  4265  00FBA0  0A                 	db	10
  4266  00FBA1  0D                 	db	13
  4267  00FBA2  00                 	db	0
  4268  00FBA3                     STR_116:
  4269  00FBA3  53                 	db	83	;'S'
  4270  00FBA4  79                 	db	121	;'y'
  4271  00FBA5  73                 	db	115	;'s'
  4272  00FBA6  74                 	db	116	;'t'
  4273  00FBA7  65                 	db	101	;'e'
  4274  00FBA8  6D                 	db	109	;'m'
  4275  00FBA9  20                 	db	32
  4276  00FBAA  70                 	db	112	;'p'
  4277  00FBAB  61                 	db	97	;'a'
  4278  00FBAC  72                 	db	114	;'r'
  4279  00FBAD  61                 	db	97	;'a'
  4280  00FBAE  6D                 	db	109	;'m'
  4281  00FBAF  65                 	db	101	;'e'
  4282  00FBB0  74                 	db	116	;'t'
  4283  00FBB1  65                 	db	101	;'e'
  4284  00FBB2  72                 	db	114	;'r'
  4285  00FBB3  73                 	db	115	;'s'
  4286  00FBB4  20                 	db	32
  4287  00FBB5  61                 	db	97	;'a'
  4288  00FBB6  70                 	db	112	;'p'
  4289  00FBB7  70                 	db	112	;'p'
  4290  00FBB8  65                 	db	101	;'e'
  4291  00FBB9  61                 	db	97	;'a'
  4292  00FBBA  72                 	db	114	;'r'
  4293  00FBBB  20                 	db	32
  4294  00FBBC  69                 	db	105	;'i'
  4295  00FBBD  6E                 	db	110	;'n'
  4296  00FBBE  20                 	db	32
  4297  00FBBF  67                 	db	103	;'g'
  4298  00FBC0  72                 	db	114	;'r'
  4299  00FBC1  65                 	db	101	;'e'
  4300  00FBC2  65                 	db	101	;'e'
  4301  00FBC3  6E                 	db	110	;'n'
  4302  00FBC4  0A                 	db	10
  4303  00FBC5  0D                 	db	13
  4304  00FBC6  00                 	db	0
  4305  00FBC7                     STR_79:
  4306  00FBC7  2B                 	db	43
  4307  00FBC8  31                 	db	49	;'1'
  4308  00FBC9  32                 	db	50	;'2'
  4309  00FBCA  56                 	db	86	;'V'
  4310  00FBCB  20                 	db	32
  4311  00FBCC  72                 	db	114	;'r'
  4312  00FBCD  61                 	db	97	;'a'
  4313  00FBCE  69                 	db	105	;'i'
  4314  00FBCF  6C                 	db	108	;'l'
  4315  00FBD0  20                 	db	32
  4316  00FBD1  6D                 	db	109	;'m'
  4317  00FBD2  65                 	db	101	;'e'
  4318  00FBD3  61                 	db	97	;'a'
  4319  00FBD4  73                 	db	115	;'s'
  4320  00FBD5  75                 	db	117	;'u'
  4321  00FBD6  72                 	db	114	;'r'
  4322  00FBD7  65                 	db	101	;'e'
  4323  00FBD8  64                 	db	100	;'d'
  4324  00FBD9  20                 	db	32
  4325  00FBDA  61                 	db	97	;'a'
  4326  00FBDB  73                 	db	115	;'s'
  4327  00FBDC  20                 	db	32
  4328  00FBDD  2B                 	db	43
  4329  00FBDE  25                 	db	37
  4330  00FBDF  2E                 	db	46
  4331  00FBE0  33                 	db	51	;'3'
  4332  00FBE1  66                 	db	102	;'f'
  4333  00FBE2  20                 	db	32
  4334  00FBE3  56                 	db	86	;'V'
  4335  00FBE4  6F                 	db	111	;'o'
  4336  00FBE5  6C                 	db	108	;'l'
  4337  00FBE6  74                 	db	116	;'t'
  4338  00FBE7  73                 	db	115	;'s'
  4339  00FBE8  0A                 	db	10
  4340  00FBE9  0D                 	db	13
  4341  00FBEA  00                 	db	0
  4342  00FBEB                     STR_81:
  4343  00FBEB  44                 	db	68	;'D'
  4344  00FBEC  69                 	db	105	;'i'
  4345  00FBED  65                 	db	101	;'e'
  4346  00FBEE  20                 	db	32
  4347  00FBEF  54                 	db	84	;'T'
  4348  00FBF0  65                 	db	101	;'e'
  4349  00FBF1  6D                 	db	109	;'m'
  4350  00FBF2  70                 	db	112	;'p'
  4351  00FBF3  65                 	db	101	;'e'
  4352  00FBF4  72                 	db	114	;'r'
  4353  00FBF5  61                 	db	97	;'a'
  4354  00FBF6  74                 	db	116	;'t'
  4355  00FBF7  75                 	db	117	;'u'
  4356  00FBF8  72                 	db	114	;'r'
  4357  00FBF9  65                 	db	101	;'e'
  4358  00FBFA  20                 	db	32
  4359  00FBFB  6D                 	db	109	;'m'
  4360  00FBFC  65                 	db	101	;'e'
  4361  00FBFD  61                 	db	97	;'a'
  4362  00FBFE  73                 	db	115	;'s'
  4363  00FBFF  75                 	db	117	;'u'
  4364  00FC00  72                 	db	114	;'r'
  4365  00FC01  65                 	db	101	;'e'
  4366  00FC02  64                 	db	100	;'d'
  4367  00FC03  20                 	db	32
  4368  00FC04  61                 	db	97	;'a'
  4369  00FC05  73                 	db	115	;'s'
  4370  00FC06  20                 	db	32
  4371  00FC07  25                 	db	37
  4372  00FC08  66                 	db	102	;'f'
  4373  00FC09  43                 	db	67	;'C'
  4374  00FC0A  0A                 	db	10
  4375  00FC0B  0D                 	db	13
  4376  00FC0C  00                 	db	0
  4377  00FC0D                     STR_89:
  4378  00FC0D  52                 	db	82	;'R'
  4379  00FC0E  4D                 	db	77	;'M'
  4380  00FC0F  53                 	db	83	;'S'
  4381  00FC10  20                 	db	32
  4382  00FC11  4F                 	db	79	;'O'
  4383  00FC12  75                 	db	117	;'u'
  4384  00FC13  74                 	db	116	;'t'
  4385  00FC14  70                 	db	112	;'p'
  4386  00FC15  75                 	db	117	;'u'
  4387  00FC16  74                 	db	116	;'t'
  4388  00FC17  20                 	db	32
  4389  00FC18  43                 	db	67	;'C'
  4390  00FC19  75                 	db	117	;'u'
  4391  00FC1A  72                 	db	114	;'r'
  4392  00FC1B  72                 	db	114	;'r'
  4393  00FC1C  65                 	db	101	;'e'
  4394  00FC1D  6E                 	db	110	;'n'
  4395  00FC1E  74                 	db	116	;'t'
  4396  00FC1F  20                 	db	32
  4397  00FC20  69                 	db	105	;'i'
  4398  00FC21  73                 	db	115	;'s'
  4399  00FC22  20                 	db	32
  4400  00FC23  25                 	db	37
  4401  00FC24  2E                 	db	46
  4402  00FC25  33                 	db	51	;'3'
  4403  00FC26  66                 	db	102	;'f'
  4404  00FC27  20                 	db	32
  4405  00FC28  41                 	db	65	;'A'
  4406  00FC29  72                 	db	114	;'r'
  4407  00FC2A  6D                 	db	109	;'m'
  4408  00FC2B  73                 	db	115	;'s'
  4409  00FC2C  0A                 	db	10
  4410  00FC2D  0D                 	db	13
  4411  00FC2E  00                 	db	0
  4412  00FC2F                     STR_91:
  4413  00FC2F  52                 	db	82	;'R'
  4414  00FC30  4D                 	db	77	;'M'
  4415  00FC31  53                 	db	83	;'S'
  4416  00FC32  20                 	db	32
  4417  00FC33  4F                 	db	79	;'O'
  4418  00FC34  75                 	db	117	;'u'
  4419  00FC35  74                 	db	116	;'t'
  4420  00FC36  70                 	db	112	;'p'
  4421  00FC37  75                 	db	117	;'u'
  4422  00FC38  74                 	db	116	;'t'
  4423  00FC39  20                 	db	32
  4424  00FC3A  56                 	db	86	;'V'
  4425  00FC3B  6F                 	db	111	;'o'
  4426  00FC3C  6C                 	db	108	;'l'
  4427  00FC3D  74                 	db	116	;'t'
  4428  00FC3E  61                 	db	97	;'a'
  4429  00FC3F  67                 	db	103	;'g'
  4430  00FC40  65                 	db	101	;'e'
  4431  00FC41  20                 	db	32
  4432  00FC42  69                 	db	105	;'i'
  4433  00FC43  73                 	db	115	;'s'
  4434  00FC44  20                 	db	32
  4435  00FC45  25                 	db	37
  4436  00FC46  2E                 	db	46
  4437  00FC47  33                 	db	51	;'3'
  4438  00FC48  66                 	db	102	;'f'
  4439  00FC49  20                 	db	32
  4440  00FC4A  56                 	db	86	;'V'
  4441  00FC4B  72                 	db	114	;'r'
  4442  00FC4C  6D                 	db	109	;'m'
  4443  00FC4D  73                 	db	115	;'s'
  4444  00FC4E  0A                 	db	10
  4445  00FC4F  0D                 	db	13
  4446  00FC50  00                 	db	0
  4447  00FC51                     STR_115:
  4448  00FC51  48                 	db	72	;'H'
  4449  00FC52  65                 	db	101	;'e'
  4450  00FC53  6C                 	db	108	;'l'
  4451  00FC54  70                 	db	112	;'p'
  4452  00FC55  20                 	db	32
  4453  00FC56  6D                 	db	109	;'m'
  4454  00FC57  65                 	db	101	;'e'
  4455  00FC58  73                 	db	115	;'s'
  4456  00FC59  73                 	db	115	;'s'
  4457  00FC5A  61                 	db	97	;'a'
  4458  00FC5B  67                 	db	103	;'g'
  4459  00FC5C  65                 	db	101	;'e'
  4460  00FC5D  73                 	db	115	;'s'
  4461  00FC5E  20                 	db	32
  4462  00FC5F  61                 	db	97	;'a'
  4463  00FC60  70                 	db	112	;'p'
  4464  00FC61  70                 	db	112	;'p'
  4465  00FC62  65                 	db	101	;'e'
  4466  00FC63  61                 	db	97	;'a'
  4467  00FC64  72                 	db	114	;'r'
  4468  00FC65  20                 	db	32
  4469  00FC66  69                 	db	105	;'i'
  4470  00FC67  6E                 	db	110	;'n'
  4471  00FC68  20                 	db	32
  4472  00FC69  79                 	db	121	;'y'
  4473  00FC6A  65                 	db	101	;'e'
  4474  00FC6B  6C                 	db	108	;'l'
  4475  00FC6C  6C                 	db	108	;'l'
  4476  00FC6D  6F                 	db	111	;'o'
  4477  00FC6E  77                 	db	119	;'w'
  4478  00FC6F  0A                 	db	10
  4479  00FC70  0D                 	db	13
  4480  00FC71  00                 	db	0
  4481  00FC72                     STR_87:
  4482  00FC72  4D                 	db	77	;'M'
  4483  00FC73  65                 	db	101	;'e'
  4484  00FC74  61                 	db	97	;'a'
  4485  00FC75  73                 	db	115	;'s'
  4486  00FC76  75                 	db	117	;'u'
  4487  00FC77  72                 	db	114	;'r'
  4488  00FC78  65                 	db	101	;'e'
  4489  00FC79  64                 	db	100	;'d'
  4490  00FC7A  20                 	db	32
  4491  00FC7B  43                 	db	67	;'C'
  4492  00FC7C  75                 	db	117	;'u'
  4493  00FC7D  72                 	db	114	;'r'
  4494  00FC7E  72                 	db	114	;'r'
  4495  00FC7F  65                 	db	101	;'e'
  4496  00FC80  6E                 	db	110	;'n'
  4497  00FC81  74                 	db	116	;'t'
  4498  00FC82  20                 	db	32
  4499  00FC83  69                 	db	105	;'i'
  4500  00FC84  73                 	db	115	;'s'
  4501  00FC85  20                 	db	32
  4502  00FC86  25                 	db	37
  4503  00FC87  2E                 	db	46
  4504  00FC88  33                 	db	51	;'3'
  4505  00FC89  66                 	db	102	;'f'
  4506  00FC8A  20                 	db	32
  4507  00FC8B  41                 	db	65	;'A'
  4508  00FC8C  6D                 	db	109	;'m'
  4509  00FC8D  70                 	db	112	;'p'
  4510  00FC8E  73                 	db	115	;'s'
  4511  00FC8F  0A                 	db	10
  4512  00FC90  0D                 	db	13
  4513  00FC91  00                 	db	0
  4514  00FC92                     STR_119:
  4515  00FC92  55                 	db	85	;'U'
  4516  00FC93  73                 	db	115	;'s'
  4517  00FC94  65                 	db	101	;'e'
  4518  00FC95  72                 	db	114	;'r'
  4519  00FC96  20                 	db	32
  4520  00FC97  69                 	db	105	;'i'
  4521  00FC98  6E                 	db	110	;'n'
  4522  00FC99  70                 	db	112	;'p'
  4523  00FC9A  75                 	db	117	;'u'
  4524  00FC9B  74                 	db	116	;'t'
  4525  00FC9C  20                 	db	32
  4526  00FC9D  61                 	db	97	;'a'
  4527  00FC9E  70                 	db	112	;'p'
  4528  00FC9F  70                 	db	112	;'p'
  4529  00FCA0  65                 	db	101	;'e'
  4530  00FCA1  61                 	db	97	;'a'
  4531  00FCA2  72                 	db	114	;'r'
  4532  00FCA3  73                 	db	115	;'s'
  4533  00FCA4  20                 	db	32
  4534  00FCA5  69                 	db	105	;'i'
  4535  00FCA6  6E                 	db	110	;'n'
  4536  00FCA7  20                 	db	32
  4537  00FCA8  77                 	db	119	;'w'
  4538  00FCA9  68                 	db	104	;'h'
  4539  00FCAA  69                 	db	105	;'i'
  4540  00FCAB  74                 	db	116	;'t'
  4541  00FCAC  65                 	db	101	;'e'
  4542  00FCAD  0A                 	db	10
  4543  00FCAE  0D                 	db	13
  4544  00FCAF  00                 	db	0
  4545  00FCB0                     STR_129:
  4546  00FCB0  52                 	db	82	;'R'
  4547  00FCB1  45                 	db	69	;'E'
  4548  00FCB2  53                 	db	83	;'S'
  4549  00FCB3  45                 	db	69	;'E'
  4550  00FCB4  54                 	db	84	;'T'
  4551  00FCB5  20                 	db	32
  4552  00FCB6  49                 	db	73	;'I'
  4553  00FCB7  6E                 	db	110	;'n'
  4554  00FCB8  73                 	db	115	;'s'
  4555  00FCB9  74                 	db	116	;'t'
  4556  00FCBA  72                 	db	114	;'r'
  4557  00FCBB  75                 	db	117	;'u'
  4558  00FCBC  63                 	db	99	;'c'
  4559  00FCBD  74                 	db	116	;'t'
  4560  00FCBE  69                 	db	105	;'i'
  4561  00FCBF  6F                 	db	111	;'o'
  4562  00FCC0  6E                 	db	110	;'n'
  4563  00FCC1  20                 	db	32
  4564  00FCC2  45                 	db	69	;'E'
  4565  00FCC3  78                 	db	120	;'x'
  4566  00FCC4  65                 	db	101	;'e'
  4567  00FCC5  63                 	db	99	;'c'
  4568  00FCC6  75                 	db	117	;'u'
  4569  00FCC7  74                 	db	116	;'t'
  4570  00FCC8  65                 	db	101	;'e'
  4571  00FCC9  64                 	db	100	;'d'
  4572  00FCCA  00                 	db	0
  4573  00FCCB                     STR_86:
  4574  00FCCB  4D                 	db	77	;'M'
  4575  00FCCC  65                 	db	101	;'e'
  4576  00FCCD  61                 	db	97	;'a'
  4577  00FCCE  73                 	db	115	;'s'
  4578  00FCCF  75                 	db	117	;'u'
  4579  00FCD0  72                 	db	114	;'r'
  4580  00FCD1  65                 	db	101	;'e'
  4581  00FCD2  20                 	db	32
  4582  00FCD3  44                 	db	68	;'D'
  4583  00FCD4  65                 	db	101	;'e'
  4584  00FCD5  74                 	db	116	;'t'
  4585  00FCD6  65                 	db	101	;'e'
  4586  00FCD7  63                 	db	99	;'c'
  4587  00FCD8  74                 	db	116	;'t'
  4588  00FCD9  65                 	db	101	;'e'
  4589  00FCDA  64                 	db	100	;'d'
  4590  00FCDB  20                 	db	32
  4591  00FCDC  43                 	db	67	;'C'
  4592  00FCDD  75                 	db	117	;'u'
  4593  00FCDE  72                 	db	114	;'r'
  4594  00FCDF  72                 	db	114	;'r'
  4595  00FCE0  65                 	db	101	;'e'
  4596  00FCE1  6E                 	db	110	;'n'
  4597  00FCE2  74                 	db	116	;'t'
  4598  00FCE3  3F                 	db	63	;'?'
  4599  00FCE4  00                 	db	0
  4600  00FCE5                     STR_101:
  4601  00FCE5  4C                 	db	76	;'L'
  4602  00FCE6  6F                 	db	111	;'o'
  4603  00FCE7  61                 	db	97	;'a'
  4604  00FCE8  64                 	db	100	;'d'
  4605  00FCE9  20                 	db	32
  4606  00FCEA  68                 	db	104	;'h'
  4607  00FCEB  61                 	db	97	;'a'
  4608  00FCEC  73                 	db	115	;'s'
  4609  00FCED  20                 	db	32
  4610  00FCEE  62                 	db	98	;'b'
  4611  00FCEF  65                 	db	101	;'e'
  4612  00FCF0  65                 	db	101	;'e'
  4613  00FCF1  6E                 	db	110	;'n'
  4614  00FCF2  20                 	db	32
  4615  00FCF3  64                 	db	100	;'d'
  4616  00FCF4  69                 	db	105	;'i'
  4617  00FCF5  73                 	db	115	;'s'
  4618  00FCF6  61                 	db	97	;'a'
  4619  00FCF7  62                 	db	98	;'b'
  4620  00FCF8  6C                 	db	108	;'l'
  4621  00FCF9  65                 	db	101	;'e'
  4622  00FCFA  64                 	db	100	;'d'
  4623  00FCFB  0A                 	db	10
  4624  00FCFC  0D                 	db	13
  4625  00FCFD  00                 	db	0
  4626  00FCFE                     STR_102:
  4627  00FCFE  53                 	db	83	;'S'
  4628  00FCFF  65                 	db	101	;'e'
  4629  00FD00  74                 	db	116	;'t'
  4630  00FD01  20                 	db	32
  4631  00FD02  44                 	db	68	;'D'
  4632  00FD03  69                 	db	105	;'i'
  4633  00FD04  6D                 	db	109	;'m'
  4634  00FD05  6D                 	db	109	;'m'
  4635  00FD06  69                 	db	105	;'i'
  4636  00FD07  6E                 	db	110	;'n'
  4637  00FD08  67                 	db	103	;'g'
  4638  00FD09  20                 	db	32
  4639  00FD0A  50                 	db	80	;'P'
  4640  00FD0B  65                 	db	101	;'e'
  4641  00FD0C  72                 	db	114	;'r'
  4642  00FD0D  63                 	db	99	;'c'
  4643  00FD0E  65                 	db	101	;'e'
  4644  00FD0F  6E                 	db	110	;'n'
  4645  00FD10  74                 	db	116	;'t'
  4646  00FD11  61                 	db	97	;'a'
  4647  00FD12  67                 	db	103	;'g'
  4648  00FD13  65                 	db	101	;'e'
  4649  00FD14  3A                 	db	58	;':'
  4650  00FD15  20                 	db	32
  4651  00FD16  00                 	db	0
  4652  00FD17                     STR_70:
  4653  00FD17  4E                 	db	78	;'N'
  4654  00FD18  6F                 	db	111	;'o'
  4655  00FD19  20                 	db	32
  4656  00FD1A  41                 	db	65	;'A'
  4657  00FD1B  44                 	db	68	;'D'
  4658  00FD1C  43                 	db	67	;'C'
  4659  00FD1D  20                 	db	32
  4660  00FD1E  45                 	db	69	;'E'
  4661  00FD1F  72                 	db	114	;'r'
  4662  00FD20  72                 	db	114	;'r'
  4663  00FD21  6F                 	db	111	;'o'
  4664  00FD22  72                 	db	114	;'r'
  4665  00FD23  20                 	db	32
  4666  00FD24  64                 	db	100	;'d'
  4667  00FD25  65                 	db	101	;'e'
  4668  00FD26  74                 	db	116	;'t'
  4669  00FD27  65                 	db	101	;'e'
  4670  00FD28  63                 	db	99	;'c'
  4671  00FD29  74                 	db	116	;'t'
  4672  00FD2A  65                 	db	101	;'e'
  4673  00FD2B  64                 	db	100	;'d'
  4674  00FD2C  0A                 	db	10
  4675  00FD2D  0D                 	db	13
  4676  00FD2E  00                 	db	0
  4677  00FD2F                     STR_118:
  4678  00FD2F  45                 	db	69	;'E'
  4679  00FD30  72                 	db	114	;'r'
  4680  00FD31  72                 	db	114	;'r'
  4681  00FD32  6F                 	db	111	;'o'
  4682  00FD33  72                 	db	114	;'r'
  4683  00FD34  73                 	db	115	;'s'
  4684  00FD35  20                 	db	32
  4685  00FD36  61                 	db	97	;'a'
  4686  00FD37  70                 	db	112	;'p'
  4687  00FD38  70                 	db	112	;'p'
  4688  00FD39  65                 	db	101	;'e'
  4689  00FD3A  61                 	db	97	;'a'
  4690  00FD3B  72                 	db	114	;'r'
  4691  00FD3C  20                 	db	32
  4692  00FD3D  69                 	db	105	;'i'
  4693  00FD3E  6E                 	db	110	;'n'
  4694  00FD3F  20                 	db	32
  4695  00FD40  72                 	db	114	;'r'
  4696  00FD41  65                 	db	101	;'e'
  4697  00FD42  64                 	db	100	;'d'
  4698  00FD43  0A                 	db	10
  4699  00FD44  0D                 	db	13
  4700  00FD45  00                 	db	0
  4701  00FD46                     STR_131:
  4702  00FD46  53                 	db	83	;'S'
  4703  00FD47  74                 	db	116	;'t'
  4704  00FD48  61                 	db	97	;'a'
  4705  00FD49  63                 	db	99	;'c'
  4706  00FD4A  6B                 	db	107	;'k'
  4707  00FD4B  20                 	db	32
  4708  00FD4C  55                 	db	85	;'U'
  4709  00FD4D  6E                 	db	110	;'n'
  4710  00FD4E  64                 	db	100	;'d'
  4711  00FD4F  65                 	db	101	;'e'
  4712  00FD50  72                 	db	114	;'r'
  4713  00FD51  66                 	db	102	;'f'
  4714  00FD52  6C                 	db	108	;'l'
  4715  00FD53  6F                 	db	111	;'o'
  4716  00FD54  77                 	db	119	;'w'
  4717  00FD55  20                 	db	32
  4718  00FD56  52                 	db	82	;'R'
  4719  00FD57  65                 	db	101	;'e'
  4720  00FD58  73                 	db	115	;'s'
  4721  00FD59  65                 	db	101	;'e'
  4722  00FD5A  74                 	db	116	;'t'
  4723  00FD5B  00                 	db	0
  4724  00FD5C                     STR_67:
  4725  00FD5C  49                 	db	73	;'I'
  4726  00FD5D  6E                 	db	110	;'n'
  4727  00FD5E  74                 	db	116	;'t'
  4728  00FD5F  65                 	db	101	;'e'
  4729  00FD60  72                 	db	114	;'r'
  4730  00FD61  6E                 	db	110	;'n'
  4731  00FD62  61                 	db	97	;'a'
  4732  00FD63  6C                 	db	108	;'l'
  4733  00FD64  20                 	db	32
  4734  00FD65  46                 	db	70	;'F'
  4735  00FD66  56                 	db	86	;'V'
  4736  00FD67  52                 	db	82	;'R'
  4737  00FD68  20                 	db	32
  4738  00FD69  42                 	db	66	;'B'
  4739  00FD6A  75                 	db	117	;'u'
  4740  00FD6B  66                 	db	102	;'f'
  4741  00FD6C  66                 	db	102	;'f'
  4742  00FD6D  65                 	db	101	;'e'
  4743  00FD6E  72                 	db	114	;'r'
  4744  00FD6F  20                 	db	32
  4745  00FD70  31                 	db	49	;'1'
  4746  00FD71  00                 	db	0
  4747  00FD72                     STR_130:
  4748  00FD72  53                 	db	83	;'S'
  4749  00FD73  74                 	db	116	;'t'
  4750  00FD74  61                 	db	97	;'a'
  4751  00FD75  63                 	db	99	;'c'
  4752  00FD76  6B                 	db	107	;'k'
  4753  00FD77  20                 	db	32
  4754  00FD78  4F                 	db	79	;'O'
  4755  00FD79  76                 	db	118	;'v'
  4756  00FD7A  65                 	db	101	;'e'
  4757  00FD7B  72                 	db	114	;'r'
  4758  00FD7C  66                 	db	102	;'f'
  4759  00FD7D  6C                 	db	108	;'l'
  4760  00FD7E  6F                 	db	111	;'o'
  4761  00FD7F  77                 	db	119	;'w'
  4762  00FD80  20                 	db	32
  4763  00FD81  52                 	db	82	;'R'
  4764  00FD82  65                 	db	101	;'e'
  4765  00FD83  73                 	db	115	;'s'
  4766  00FD84  65                 	db	101	;'e'
  4767  00FD85  74                 	db	116	;'t'
  4768  00FD86  00                 	db	0
  4769  00FD87                     STR_72:
  4770  00FD87  43                 	db	67	;'C'
  4771  00FD88  6C                 	db	108	;'l'
  4772  00FD89  65                 	db	101	;'e'
  4773  00FD8A  61                 	db	97	;'a'
  4774  00FD8B  72                 	db	114	;'r'
  4775  00FD8C  69                 	db	105	;'i'
  4776  00FD8D  6E                 	db	110	;'n'
  4777  00FD8E  67                 	db	103	;'g'
  4778  00FD8F  20                 	db	32
  4779  00FD90  41                 	db	65	;'A'
  4780  00FD91  44                 	db	68	;'D'
  4781  00FD92  43                 	db	67	;'C'
  4782  00FD93  20                 	db	32
  4783  00FD94  45                 	db	69	;'E'
  4784  00FD95  72                 	db	114	;'r'
  4785  00FD96  72                 	db	114	;'r'
  4786  00FD97  6F                 	db	111	;'o'
  4787  00FD98  72                 	db	114	;'r'
  4788  00FD99  0A                 	db	10
  4789  00FD9A  0D                 	db	13
  4790  00FD9B  00                 	db	0
  4791  00FD9C                     STR_90:
  4792  00FD9C  4D                 	db	77	;'M'
  4793  00FD9D  65                 	db	101	;'e'
  4794  00FD9E  61                 	db	97	;'a'
  4795  00FD9F  73                 	db	115	;'s'
  4796  00FDA0  75                 	db	117	;'u'
  4797  00FDA1  72                 	db	114	;'r'
  4798  00FDA2  65                 	db	101	;'e'
  4799  00FDA3  20                 	db	32
  4800  00FDA4  52                 	db	82	;'R'
  4801  00FDA5  4D                 	db	77	;'M'
  4802  00FDA6  53                 	db	83	;'S'
  4803  00FDA7  20                 	db	32
  4804  00FDA8  56                 	db	86	;'V'
  4805  00FDA9  6F                 	db	111	;'o'
  4806  00FDAA  6C                 	db	108	;'l'
  4807  00FDAB  74                 	db	116	;'t'
  4808  00FDAC  61                 	db	97	;'a'
  4809  00FDAD  67                 	db	103	;'g'
  4810  00FDAE  65                 	db	101	;'e'
  4811  00FDAF  3F                 	db	63	;'?'
  4812  00FDB0  00                 	db	0
  4813  00FDB1                     STR_88:
  4814  00FDB1  4D                 	db	77	;'M'
  4815  00FDB2  65                 	db	101	;'e'
  4816  00FDB3  61                 	db	97	;'a'
  4817  00FDB4  73                 	db	115	;'s'
  4818  00FDB5  75                 	db	117	;'u'
  4819  00FDB6  72                 	db	114	;'r'
  4820  00FDB7  65                 	db	101	;'e'
  4821  00FDB8  20                 	db	32
  4822  00FDB9  52                 	db	82	;'R'
  4823  00FDBA  4D                 	db	77	;'M'
  4824  00FDBB  53                 	db	83	;'S'
  4825  00FDBC  20                 	db	32
  4826  00FDBD  43                 	db	67	;'C'
  4827  00FDBE  75                 	db	117	;'u'
  4828  00FDBF  72                 	db	114	;'r'
  4829  00FDC0  72                 	db	114	;'r'
  4830  00FDC1  65                 	db	101	;'e'
  4831  00FDC2  6E                 	db	110	;'n'
  4832  00FDC3  74                 	db	116	;'t'
  4833  00FDC4  3F                 	db	63	;'?'
  4834  00FDC5  00                 	db	0
  4835  00FDC6                     STR_126:
  4836  00FDC6  4D                 	db	77	;'M'
  4837  00FDC7  61                 	db	97	;'a'
  4838  00FDC8  73                 	db	115	;'s'
  4839  00FDC9  74                 	db	116	;'t'
  4840  00FDCA  65                 	db	101	;'e'
  4841  00FDCB  72                 	db	114	;'r'
  4842  00FDCC  20                 	db	32
  4843  00FDCD  43                 	db	67	;'C'
  4844  00FDCE  6C                 	db	108	;'l'
  4845  00FDCF  65                 	db	101	;'e'
  4846  00FDD0  61                 	db	97	;'a'
  4847  00FDD1  72                 	db	114	;'r'
  4848  00FDD2  20                 	db	32
  4849  00FDD3  52                 	db	82	;'R'
  4850  00FDD4  65                 	db	101	;'e'
  4851  00FDD5  73                 	db	115	;'s'
  4852  00FDD6  65                 	db	101	;'e'
  4853  00FDD7  74                 	db	116	;'t'
  4854  00FDD8  00                 	db	0
  4855  00FDD9                     STR_80:
  4856  00FDD9  4D                 	db	77	;'M'
  4857  00FDDA  65                 	db	101	;'e'
  4858  00FDDB  61                 	db	97	;'a'
  4859  00FDDC  73                 	db	115	;'s'
  4860  00FDDD  75                 	db	117	;'u'
  4861  00FDDE  72                 	db	114	;'r'
  4862  00FDDF  65                 	db	101	;'e'
  4863  00FDE0  20                 	db	32
  4864  00FDE1  44                 	db	68	;'D'
  4865  00FDE2  69                 	db	105	;'i'
  4866  00FDE3  65                 	db	101	;'e'
  4867  00FDE4  20                 	db	32
  4868  00FDE5  54                 	db	84	;'T'
  4869  00FDE6  65                 	db	101	;'e'
  4870  00FDE7  6D                 	db	109	;'m'
  4871  00FDE8  70                 	db	112	;'p'
  4872  00FDE9  3F                 	db	63	;'?'
  4873  00FDEA  00                 	db	0
  4874  00FDEB                     STR_134:
  4875  00FDEB  30                 	db	48	;'0'
  4876  00FDEC  31                 	db	49	;'1'
  4877  00FDED  32                 	db	50	;'2'
  4878  00FDEE  33                 	db	51	;'3'
  4879  00FDEF  34                 	db	52	;'4'
  4880  00FDF0  35                 	db	53	;'5'
  4881  00FDF1  36                 	db	54	;'6'
  4882  00FDF2  37                 	db	55	;'7'
  4883  00FDF3  38                 	db	56	;'8'
  4884  00FDF4  39                 	db	57	;'9'
  4885  00FDF5  41                 	db	65	;'A'
  4886  00FDF6  42                 	db	66	;'B'
  4887  00FDF7  43                 	db	67	;'C'
  4888  00FDF8  44                 	db	68	;'D'
  4889  00FDF9  45                 	db	69	;'E'
  4890  00FDFA  46                 	db	70	;'F'
  4891  00FDFB  00                 	db	0
  4892  00FDFC                     STR_51:
  4893  00FDFC  41                 	db	65	;'A'
  4894  00FDFD  43                 	db	67	;'C'
  4895  00FDFE  20                 	db	32
  4896  00FDFF  50                 	db	80	;'P'
  4897  00FE00  6F                 	db	111	;'o'
  4898  00FE01  77                 	db	119	;'w'
  4899  00FE02  65                 	db	101	;'e'
  4900  00FE03  72                 	db	114	;'r'
  4901  00FE04  20                 	db	32
  4902  00FE05  4D                 	db	77	;'M'
  4903  00FE06  65                 	db	101	;'e'
  4904  00FE07  74                 	db	116	;'t'
  4905  00FE08  65                 	db	101	;'e'
  4906  00FE09  72                 	db	114	;'r'
  4907  00FE0A  0A                 	db	10
  4908  00FE0B  0D                 	db	13
  4909  00FE0C  00                 	db	0
  4910  00FE0D                     STR_73:
  4911  00FE0D  56                 	db	86	;'V'
  4912  00FE0E  43                 	db	67	;'C'
  4913  00FE0F  43                 	db	67	;'C'
  4914  00FE10  20                 	db	32
  4915  00FE11  4F                 	db	79	;'O'
  4916  00FE12  76                 	db	118	;'v'
  4917  00FE13  65                 	db	101	;'e'
  4918  00FE14  72                 	db	114	;'r'
  4919  00FE15  76                 	db	118	;'v'
  4920  00FE16  6F                 	db	111	;'o'
  4921  00FE17  6C                 	db	108	;'l'
  4922  00FE18  74                 	db	116	;'t'
  4923  00FE19  61                 	db	97	;'a'
  4924  00FE1A  67                 	db	103	;'g'
  4925  00FE1B  65                 	db	101	;'e'
  4926  00FE1C  3F                 	db	63	;'?'
  4927  00FE1D  00                 	db	0
  4928  00FE1E                     STR_123:
  4929  00FE1E  55                 	db	85	;'U'
  4930  00FE1F  6E                 	db	110	;'n'
  4931  00FE20  64                 	db	100	;'d'
  4932  00FE21  65                 	db	101	;'e'
  4933  00FE22  66                 	db	102	;'f'
  4934  00FE23  69                 	db	105	;'i'
  4935  00FE24  6E                 	db	110	;'n'
  4936  00FE25  65                 	db	101	;'e'
  4937  00FE26  64                 	db	100	;'d'
  4938  00FE27  20                 	db	32
  4939  00FE28  52                 	db	82	;'R'
  4940  00FE29  65                 	db	101	;'e'
  4941  00FE2A  73                 	db	115	;'s'
  4942  00FE2B  65                 	db	101	;'e'
  4943  00FE2C  74                 	db	116	;'t'
  4944  00FE2D  00                 	db	0
  4945  00FE2E                     STR_125:
  4946  00FE2E  42                 	db	66	;'B'
  4947  00FE2F  72                 	db	114	;'r'
  4948  00FE30  6F                 	db	111	;'o'
  4949  00FE31  77                 	db	119	;'w'
  4950  00FE32  6E                 	db	110	;'n'
  4951  00FE33  20                 	db	32
  4952  00FE34  4F                 	db	79	;'O'
  4953  00FE35  75                 	db	117	;'u'
  4954  00FE36  74                 	db	116	;'t'
  4955  00FE37  20                 	db	32
  4956  00FE38  52                 	db	82	;'R'
  4957  00FE39  65                 	db	101	;'e'
  4958  00FE3A  73                 	db	115	;'s'
  4959  00FE3B  65                 	db	101	;'e'
  4960  00FE3C  74                 	db	116	;'t'
  4961  00FE3D  00                 	db	0
  4962  00FE3E                     STR_76:
  4963  00FE3E  4D                 	db	77	;'M'
  4964  00FE3F  65                 	db	101	;'e'
  4965  00FE40  61                 	db	97	;'a'
  4966  00FE41  73                 	db	115	;'s'
  4967  00FE42  75                 	db	117	;'u'
  4968  00FE43  72                 	db	114	;'r'
  4969  00FE44  65                 	db	101	;'e'
  4970  00FE45  20                 	db	32
  4971  00FE46  50                 	db	80	;'P'
  4972  00FE47  4F                 	db	79	;'O'
  4973  00FE48  53                 	db	83	;'S'
  4974  00FE49  33                 	db	51	;'3'
  4975  00FE4A  50                 	db	80	;'P'
  4976  00FE4B  33                 	db	51	;'3'
  4977  00FE4C  3F                 	db	63	;'?'
  4978  00FE4D  00                 	db	0
  4979  00FE4E                     STR_109:
  4980  00FE4E  44                 	db	68	;'D'
  4981  00FE4F  65                 	db	101	;'e'
  4982  00FE50  76                 	db	118	;'v'
  4983  00FE51  69                 	db	105	;'i'
  4984  00FE52  63                 	db	99	;'c'
  4985  00FE53  65                 	db	101	;'e'
  4986  00FE54  20                 	db	32
  4987  00FE55  4F                 	db	79	;'O'
  4988  00FE56  6E                 	db	110	;'n'
  4989  00FE57  20                 	db	32
  4990  00FE58  54                 	db	84	;'T'
  4991  00FE59  69                 	db	105	;'i'
  4992  00FE5A  6D                 	db	109	;'m'
  4993  00FE5B  65                 	db	101	;'e'
  4994  00FE5C  3F                 	db	63	;'?'
  4995  00FE5D  00                 	db	0
  4996  00FE5E                     STR_47:
  4997  00FE5E  43                 	db	67	;'C'
  4998  00FE5F  61                 	db	97	;'a'
  4999  00FE60  75                 	db	117	;'u'
  5000  00FE61  73                 	db	115	;'s'
  5001  00FE62  65                 	db	101	;'e'
  5002  00FE63  20                 	db	32
  5003  00FE64  6F                 	db	111	;'o'
  5004  00FE65  66                 	db	102	;'f'
  5005  00FE66  20                 	db	32
  5006  00FE67  52                 	db	82	;'R'
  5007  00FE68  65                 	db	101	;'e'
  5008  00FE69  73                 	db	115	;'s'
  5009  00FE6A  65                 	db	101	;'e'
  5010  00FE6B  74                 	db	116	;'t'
  5011  00FE6C  3F                 	db	63	;'?'
  5012  00FE6D  00                 	db	0
  5013  00FE6E                     STR_96:
  5014  00FE6E  44                 	db	68	;'D'
  5015  00FE6F  69                 	db	105	;'i'
  5016  00FE70  73                 	db	115	;'s'
  5017  00FE71  61                 	db	97	;'a'
  5018  00FE72  62                 	db	98	;'b'
  5019  00FE73  6C                 	db	108	;'l'
  5020  00FE74  65                 	db	101	;'e'
  5021  00FE75  20                 	db	32
  5022  00FE76  44                 	db	68	;'D'
  5023  00FE77  69                 	db	105	;'i'
  5024  00FE78  6D                 	db	109	;'m'
  5025  00FE79  6D                 	db	109	;'m'
  5026  00FE7A  69                 	db	105	;'i'
  5027  00FE7B  6E                 	db	110	;'n'
  5028  00FE7C  67                 	db	103	;'g'
  5029  00FE7D  00                 	db	0
  5030  00FE7E                     STR_71:
  5031  00FE7E  43                 	db	67	;'C'
  5032  00FE7F  6C                 	db	108	;'l'
  5033  00FE80  65                 	db	101	;'e'
  5034  00FE81  61                 	db	97	;'a'
  5035  00FE82  72                 	db	114	;'r'
  5036  00FE83  20                 	db	32
  5037  00FE84  41                 	db	65	;'A'
  5038  00FE85  44                 	db	68	;'D'
  5039  00FE86  43                 	db	67	;'C'
  5040  00FE87  20                 	db	32
  5041  00FE88  45                 	db	69	;'E'
  5042  00FE89  72                 	db	114	;'r'
  5043  00FE8A  72                 	db	114	;'r'
  5044  00FE8B  6F                 	db	111	;'o'
  5045  00FE8C  72                 	db	114	;'r'
  5046  00FE8D  00                 	db	0
  5047  00FE8E                     STR_124:
  5048  00FE8E  50                 	db	80	;'P'
  5049  00FE8F  6F                 	db	111	;'o'
  5050  00FE90  77                 	db	119	;'w'
  5051  00FE91  65                 	db	101	;'e'
  5052  00FE92  72                 	db	114	;'r'
  5053  00FE93  20                 	db	32
  5054  00FE94  4F                 	db	79	;'O'
  5055  00FE95  6E                 	db	110	;'n'
  5056  00FE96  20                 	db	32
  5057  00FE97  52                 	db	82	;'R'
  5058  00FE98  65                 	db	101	;'e'
  5059  00FE99  73                 	db	115	;'s'
  5060  00FE9A  65                 	db	101	;'e'
  5061  00FE9B  74                 	db	116	;'t'
  5062  00FE9C  00                 	db	0
  5063  00FE9D                     STR_78:
  5064  00FE9D  4D                 	db	77	;'M'
  5065  00FE9E  65                 	db	101	;'e'
  5066  00FE9F  61                 	db	97	;'a'
  5067  00FEA0  73                 	db	115	;'s'
  5068  00FEA1  75                 	db	117	;'u'
  5069  00FEA2  72                 	db	114	;'r'
  5070  00FEA3  65                 	db	101	;'e'
  5071  00FEA4  20                 	db	32
  5072  00FEA5  50                 	db	80	;'P'
  5073  00FEA6  4F                 	db	79	;'O'
  5074  00FEA7  53                 	db	83	;'S'
  5075  00FEA8  31                 	db	49	;'1'
  5076  00FEA9  32                 	db	50	;'2'
  5077  00FEAA  3F                 	db	63	;'?'
  5078  00FEAB  00                 	db	0
  5079  00FEAC                     STR_92:
  5080  00FEAC  4D                 	db	77	;'M'
  5081  00FEAD  65                 	db	101	;'e'
  5082  00FEAE  61                 	db	97	;'a'
  5083  00FEAF  73                 	db	115	;'s'
  5084  00FEB0  75                 	db	117	;'u'
  5085  00FEB1  72                 	db	114	;'r'
  5086  00FEB2  65                 	db	101	;'e'
  5087  00FEB3  20                 	db	32
  5088  00FEB4  50                 	db	80	;'P'
  5089  00FEB5  6F                 	db	111	;'o'
  5090  00FEB6  77                 	db	119	;'w'
  5091  00FEB7  65                 	db	101	;'e'
  5092  00FEB8  72                 	db	114	;'r'
  5093  00FEB9  3F                 	db	63	;'?'
  5094  00FEBA  00                 	db	0
  5095  00FEBB                     STR_94:
  5096  00FEBB  45                 	db	69	;'E'
  5097  00FEBC  6E                 	db	110	;'n'
  5098  00FEBD  61                 	db	97	;'a'
  5099  00FEBE  62                 	db	98	;'b'
  5100  00FEBF  6C                 	db	108	;'l'
  5101  00FEC0  65                 	db	101	;'e'
  5102  00FEC1  20                 	db	32
  5103  00FEC2  44                 	db	68	;'D'
  5104  00FEC3  69                 	db	105	;'i'
  5105  00FEC4  6D                 	db	109	;'m'
  5106  00FEC5  6D                 	db	109	;'m'
  5107  00FEC6  69                 	db	105	;'i'
  5108  00FEC7  6E                 	db	110	;'n'
  5109  00FEC8  67                 	db	103	;'g'
  5110  00FEC9  00                 	db	0
  5111  00FECA                     STR_66:
  5112  00FECA  49                 	db	73	;'I'
  5113  00FECB  6E                 	db	110	;'n'
  5114  00FECC  74                 	db	116	;'t'
  5115  00FECD  65                 	db	101	;'e'
  5116  00FECE  72                 	db	114	;'r'
  5117  00FECF  6E                 	db	110	;'n'
  5118  00FED0  61                 	db	97	;'a'
  5119  00FED1  6C                 	db	108	;'l'
  5120  00FED2  20                 	db	32
  5121  00FED3  44                 	db	68	;'D'
  5122  00FED4  41                 	db	65	;'A'
  5123  00FED5  43                 	db	67	;'C'
  5124  00FED6  31                 	db	49	;'1'
  5125  00FED7  00                 	db	0
  5126  00FED8                     STR_84:
  5127  00FED8  4D                 	db	77	;'M'
  5128  00FED9  65                 	db	101	;'e'
  5129  00FEDA  61                 	db	97	;'a'
  5130  00FEDB  73                 	db	115	;'s'
  5131  00FEDC  75                 	db	117	;'u'
  5132  00FEDD  72                 	db	114	;'r'
  5133  00FEDE  65                 	db	101	;'e'
  5134  00FEDF  20                 	db	32
  5135  00FEE0  41                 	db	65	;'A'
  5136  00FEE1  56                 	db	86	;'V'
  5137  00FEE2  53                 	db	83	;'S'
  5138  00FEE3  53                 	db	83	;'S'
  5139  00FEE4  3F                 	db	63	;'?'
  5140  00FEE5  00                 	db	0
  5141  00FEE6                     STR_111:
  5142  00FEE6  4C                 	db	76	;'L'
  5143  00FEE7  6F                 	db	111	;'o'
  5144  00FEE8  61                 	db	97	;'a'
  5145  00FEE9  64                 	db	100	;'d'
  5146  00FEEA  20                 	db	32
  5147  00FEEB  4F                 	db	79	;'O'
  5148  00FEEC  6E                 	db	110	;'n'
  5149  00FEED  20                 	db	32
  5150  00FEEE  54                 	db	84	;'T'
  5151  00FEEF  69                 	db	105	;'i'
  5152  00FEF0  6D                 	db	109	;'m'
  5153  00FEF1  65                 	db	101	;'e'
  5154  00FEF2  3F                 	db	63	;'?'
  5155  00FEF3  00                 	db	0
  5156  00FEF4                     STR_64:
  5157  00FEF4  49                 	db	73	;'I'
  5158  00FEF5  6E                 	db	110	;'n'
  5159  00FEF6  74                 	db	116	;'t'
  5160  00FEF7  65                 	db	101	;'e'
  5161  00FEF8  72                 	db	114	;'r'
  5162  00FEF9  6E                 	db	110	;'n'
  5163  00FEFA  61                 	db	97	;'a'
  5164  00FEFB  6C                 	db	108	;'l'
  5165  00FEFC  20                 	db	32
  5166  00FEFD  41                 	db	65	;'A'
  5167  00FEFE  56                 	db	86	;'V'
  5168  00FEFF  53                 	db	83	;'S'
  5169  00FF00  53                 	db	83	;'S'
  5170  00FF01  00                 	db	0
  5171  00FF02                     STR_65:
  5172  00FF02  49                 	db	73	;'I'
  5173  00FF03  6E                 	db	110	;'n'
  5174  00FF04  74                 	db	116	;'t'
  5175  00FF05  65                 	db	101	;'e'
  5176  00FF06  72                 	db	114	;'r'
  5177  00FF07  6E                 	db	110	;'n'
  5178  00FF08  61                 	db	97	;'a'
  5179  00FF09  6C                 	db	108	;'l'
  5180  00FF0A  20                 	db	32
  5181  00FF0B  54                 	db	84	;'T'
  5182  00FF0C  65                 	db	101	;'e'
  5183  00FF0D  6D                 	db	109	;'m'
  5184  00FF0E  70                 	db	112	;'p'
  5185  00FF0F  00                 	db	0
  5186  00FF10                     STR_121:
  5187  00FF10  50                 	db	80	;'P'
  5188  00FF11  49                 	db	73	;'I'
  5189  00FF12  43                 	db	67	;'C'
  5190  00FF13  31                 	db	49	;'1'
  5191  00FF14  38                 	db	56	;'8'
  5192  00FF15  4C                 	db	76	;'L'
  5193  00FF16  46                 	db	70	;'F'
  5194  00FF17  36                 	db	54	;'6'
  5195  00FF18  37                 	db	55	;'7'
  5196  00FF19  4B                 	db	75	;'K'
  5197  00FF1A  34                 	db	52	;'4'
  5198  00FF1B  30                 	db	48	;'0'
  5199  00FF1C  00                 	db	0
  5200  00FF1D                     STR_55:
  5201  00FF1D  52                 	db	82	;'R'
  5202  00FF1E  65                 	db	101	;'e'
  5203  00FF1F  76                 	db	118	;'v'
  5204  00FF20  69                 	db	105	;'i'
  5205  00FF21  73                 	db	115	;'s'
  5206  00FF22  69                 	db	105	;'i'
  5207  00FF23  6F                 	db	111	;'o'
  5208  00FF24  6E                 	db	110	;'n'
  5209  00FF25  20                 	db	32
  5210  00FF26  49                 	db	73	;'I'
  5211  00FF27  44                 	db	68	;'D'
  5212  00FF28  3F                 	db	63	;'?'
  5213  00FF29  00                 	db	0
  5214  00FF2A                     STR_82:
  5215  00FF2A  4D                 	db	77	;'M'
  5216  00FF2B  65                 	db	101	;'e'
  5217  00FF2C  61                 	db	97	;'a'
  5218  00FF2D  73                 	db	115	;'s'
  5219  00FF2E  75                 	db	117	;'u'
  5220  00FF2F  72                 	db	114	;'r'
  5221  00FF30  65                 	db	101	;'e'
  5222  00FF31  20                 	db	32
  5223  00FF32  46                 	db	70	;'F'
  5224  00FF33  56                 	db	86	;'V'
  5225  00FF34  52                 	db	82	;'R'
  5226  00FF35  3F                 	db	63	;'?'
  5227  00FF36  00                 	db	0
  5228  00FF37                     STR_100:
  5229  00FF37  44                 	db	68	;'D'
  5230  00FF38  69                 	db	105	;'i'
  5231  00FF39  73                 	db	115	;'s'
  5232  00FF3A  61                 	db	97	;'a'
  5233  00FF3B  62                 	db	98	;'b'
  5234  00FF3C  6C                 	db	108	;'l'
  5235  00FF3D  65                 	db	101	;'e'
  5236  00FF3E  20                 	db	32
  5237  00FF3F  4C                 	db	76	;'L'
  5238  00FF40  6F                 	db	111	;'o'
  5239  00FF41  61                 	db	97	;'a'
  5240  00FF42  64                 	db	100	;'d'
  5241  00FF43  00                 	db	0
  5242  00FF44                     STR_120:
  5243  00FF44  50                 	db	80	;'P'
  5244  00FF45  49                 	db	73	;'I'
  5245  00FF46  43                 	db	67	;'C'
  5246  00FF47  31                 	db	49	;'1'
  5247  00FF48  38                 	db	56	;'8'
  5248  00FF49  46                 	db	70	;'F'
  5249  00FF4A  36                 	db	54	;'6'
  5250  00FF4B  37                 	db	55	;'7'
  5251  00FF4C  4B                 	db	75	;'K'
  5252  00FF4D  34                 	db	52	;'4'
  5253  00FF4E  30                 	db	48	;'0'
  5254  00FF4F  00                 	db	0
  5255  00FF50                     STR_98:
  5256  00FF50  45                 	db	69	;'E'
  5257  00FF51  6E                 	db	110	;'n'
  5258  00FF52  61                 	db	97	;'a'
  5259  00FF53  62                 	db	98	;'b'
  5260  00FF54  6C                 	db	108	;'l'
  5261  00FF55  65                 	db	101	;'e'
  5262  00FF56  20                 	db	32
  5263  00FF57  4C                 	db	76	;'L'
  5264  00FF58  6F                 	db	111	;'o'
  5265  00FF59  61                 	db	97	;'a'
  5266  00FF5A  64                 	db	100	;'d'
  5267  00FF5B  00                 	db	0
  5268  00FF5C                     STR_53:
  5269  00FF5C  44                 	db	68	;'D'
  5270  00FF5D  65                 	db	101	;'e'
  5271  00FF5E  76                 	db	118	;'v'
  5272  00FF5F  69                 	db	105	;'i'
  5273  00FF60  63                 	db	99	;'c'
  5274  00FF61  65                 	db	101	;'e'
  5275  00FF62  20                 	db	32
  5276  00FF63  49                 	db	73	;'I'
  5277  00FF64  44                 	db	68	;'D'
  5278  00FF65  3F                 	db	63	;'?'
  5279  00FF66  00                 	db	0
  5280  00FF67                     STR_60:
  5281  00FF67  41                 	db	65	;'A'
  5282  00FF68  44                 	db	68	;'D'
  5283  00FF69  43                 	db	67	;'C'
  5284  00FF6A  20                 	db	32
  5285  00FF6B  45                 	db	69	;'E'
  5286  00FF6C  72                 	db	114	;'r'
  5287  00FF6D  72                 	db	114	;'r'
  5288  00FF6E  6F                 	db	111	;'o'
  5289  00FF6F  72                 	db	114	;'r'
  5290  00FF70  3F                 	db	63	;'?'
  5291  00FF71  00                 	db	0
  5292  00FF72                     STR_57:
  5293  00FF72  55                 	db	85	;'U'
  5294  00FF73  73                 	db	115	;'s'
  5295  00FF74  65                 	db	101	;'e'
  5296  00FF75  72                 	db	114	;'r'
  5297  00FF76  20                 	db	32
  5298  00FF77  49                 	db	73	;'I'
  5299  00FF78  44                 	db	68	;'D'
  5300  00FF79  73                 	db	115	;'s'
  5301  00FF7A  3F                 	db	63	;'?'
  5302  00FF7B  00                 	db	0
  5303  00FF7C                     STR_68:
  5304  00FF7C  55                 	db	85	;'U'
  5305  00FF7D  6E                 	db	110	;'n'
  5306  00FF7E  64                 	db	100	;'d'
  5307  00FF7F  65                 	db	101	;'e'
  5308  00FF80  66                 	db	102	;'f'
  5309  00FF81  69                 	db	105	;'i'
  5310  00FF82  6E                 	db	110	;'n'
  5311  00FF83  65                 	db	101	;'e'
  5312  00FF84  64                 	db	100	;'d'
  5313  00FF85  00                 	db	0
  5314  00FF86                     STR_133:
  5315  00FF86  28                 	db	40
  5316  00FF87  6E                 	db	110	;'n'
  5317  00FF88  75                 	db	117	;'u'
  5318  00FF89  6C                 	db	108	;'l'
  5319  00FF8A  6C                 	db	108	;'l'
  5320  00FF8B  29                 	db	41
  5321  00FF8C  00                 	db	0
  5322  00FF8D                     STR_63:
  5323  00FF8D  50                 	db	80	;'P'
  5324  00FF8E  4F                 	db	79	;'O'
  5325  00FF8F  53                 	db	83	;'S'
  5326  00FF90  33                 	db	51	;'3'
  5327  00FF91  50                 	db	80	;'P'
  5328  00FF92  33                 	db	51	;'3'
  5329  00FF93  00                 	db	0
  5330  00FF94                     STR_62:
  5331  00FF94  50                 	db	80	;'P'
  5332  00FF95  4F                 	db	79	;'O'
  5333  00FF96  53                 	db	83	;'S'
  5334  00FF97  31                 	db	49	;'1'
  5335  00FF98  32                 	db	50	;'2'
  5336  00FF99  00                 	db	0
  5337  00FF9A                     STR_49:
  5338  00FF9A  2A                 	db	42
  5339  00FF9B  49                 	db	73	;'I'
  5340  00FF9C  44                 	db	68	;'D'
  5341  00FF9D  4E                 	db	78	;'N'
  5342  00FF9E  3F                 	db	63	;'?'
  5343  00FF9F  00                 	db	0
  5344  00FFA0                     STR_44:
  5345  00FFA0  43                 	db	67	;'C'
  5346  00FFA1  6C                 	db	108	;'l'
  5347  00FFA2  65                 	db	101	;'e'
  5348  00FFA3  61                 	db	97	;'a'
  5349  00FFA4  72                 	db	114	;'r'
  5350  00FFA5  00                 	db	0
  5351  00FFA6                     STR_61:
  5352  00FFA6  49                 	db	73	;'I'
  5353  00FFA7  53                 	db	83	;'S'
  5354  00FFA8  4E                 	db	78	;'N'
  5355  00FFA9  53                 	db	83	;'S'
  5356  00FFAA  00                 	db	0
  5357  00FFAB                     STR_113:
  5358  00FFAB  48                 	db	72	;'H'
  5359  00FFAC  65                 	db	101	;'e'
  5360  00FFAD  6C                 	db	108	;'l'
  5361  00FFAE  70                 	db	112	;'p'
  5362  00FFAF  00                 	db	0
  5363  00FFB0                     STR_2:
  5364  00FFB0  1B                 	db	27
  5365  00FFB1  5B                 	db	91	;'['
  5366  00FFB2  32                 	db	50	;'2'
  5367  00FFB3  4A                 	db	74	;'J'
  5368  00FFB4  00                 	db	0
  5369  00FFB5                     STR_50:
  5370  00FFB5  49                 	db	73	;'I'
  5371  00FFB6  44                 	db	68	;'D'
  5372  00FFB7  4E                 	db	78	;'N'
  5373  00FFB8  00                 	db	0
  5374  00FFB9                     STR_3:
  5375  00FFB9  1B                 	db	27
  5376  00FFBA  5B                 	db	91	;'['
  5377  00FFBB  48                 	db	72	;'H'
  5378  00FFBC  00                 	db	0
  5379  00FFBD  1B                 	db	27
  5380  00FFBE  5B                 	db	91	;'['
  5381  00FFBF  73                 	db	115	;'s'
  5382  00FFC0  00                 	db	0
  5383  00FFC1  1B                 	db	27
  5384  00FFC2  5B                 	db	91	;'['
  5385  00FFC3  75                 	db	117	;'u'
  5386  00FFC4  00                 	db	0
  5387  00FFC5                     STR_1:
  5388  00FFC5  1B                 	db	27
  5389  00FFC6  5B                 	db	91	;'['
  5390  00FFC7  4B                 	db	75	;'K'
  5391  00FFC8  00                 	db	0
  5392  00FFC9                     STR_20:
  5393  00FFC9  33                 	db	51	;'3'
  5394  00FFCA  30                 	db	48	;'0'
  5395  00FFCB  00                 	db	0
  5396  00FFCC                     STR_21:
  5397  00FFCC  33                 	db	51	;'3'
  5398  00FFCD  31                 	db	49	;'1'
  5399  00FFCE  00                 	db	0
  5400  00FFCF                     STR_31:
  5401  00FFCF  34                 	db	52	;'4'
  5402  00FFD0  31                 	db	49	;'1'
  5403  00FFD1  00                 	db	0
  5404  00FFD2                     STR_22:
  5405  00FFD2  33                 	db	51	;'3'
  5406  00FFD3  32                 	db	50	;'2'
  5407  00FFD4  00                 	db	0
  5408  00FFD5                     STR_32:
  5409  00FFD5  34                 	db	52	;'4'
  5410  00FFD6  32                 	db	50	;'2'
  5411  00FFD7  00                 	db	0
  5412  00FFD8                     STR_23:
  5413  00FFD8  33                 	db	51	;'3'
  5414  00FFD9  33                 	db	51	;'3'
  5415  00FFDA  00                 	db	0
  5416  00FFDB                     STR_33:
  5417  00FFDB  34                 	db	52	;'4'
  5418  00FFDC  33                 	db	51	;'3'
  5419  00FFDD  00                 	db	0
  5420  00FFDE                     STR_24:
  5421  00FFDE  33                 	db	51	;'3'
  5422  00FFDF  34                 	db	52	;'4'
  5423  00FFE0  00                 	db	0
  5424  00FFE1                     STR_34:
  5425  00FFE1  34                 	db	52	;'4'
  5426  00FFE2  34                 	db	52	;'4'
  5427  00FFE3  00                 	db	0
  5428  00FFE4                     STR_25:
  5429  00FFE4  33                 	db	51	;'3'
  5430  00FFE5  35                 	db	53	;'5'
  5431  00FFE6  00                 	db	0
  5432  00FFE7                     STR_35:
  5433  00FFE7  34                 	db	52	;'4'
  5434  00FFE8  35                 	db	53	;'5'
  5435  00FFE9  00                 	db	0
  5436  00FFEA                     STR_26:
  5437  00FFEA  33                 	db	51	;'3'
  5438  00FFEB  36                 	db	54	;'6'
  5439  00FFEC  00                 	db	0
  5440  00FFED                     STR_36:
  5441  00FFED  34                 	db	52	;'4'
  5442  00FFEE  36                 	db	54	;'6'
  5443  00FFEF  00                 	db	0
  5444  00FFF0                     STR_27:
  5445  00FFF0  33                 	db	51	;'3'
  5446  00FFF1  37                 	db	55	;'7'
  5447  00FFF2  00                 	db	0
  5448  00FFF3                     STR_37:
  5449  00FFF3  34                 	db	52	;'4'
  5450  00FFF4  37                 	db	55	;'7'
  5451  00FFF5  00                 	db	0
  5452  00FFF6                     STR_11:
  5453  00FFF6  1B                 	db	27
  5454  00FFF7  5B                 	db	91	;'['
  5455  00FFF8  00                 	db	0
  5456  00FFF9                     STR_17:
  5457  00FFF9  38                 	db	56	;'8'
  5458  00FFFA  00                 	db	0
  5459  00FFFB                     STR_19:
  5460  00FFFB  3B                 	db	59	;';'
  5461  00FFFC  00                 	db	0
  5462  00FFFD                     STR_39:
  5463  00FFFD  6D                 	db	109	;'m'
  5464  00FFFE  00                 	db	0
  5465  0000                     
  5466                           ; #config settings
  5467  00FFFF  00                 	db	0	; dummy byte at the end
  5468  0000                     
  5469                           	psect	nvBANK2
  5470  0002DD                     __pnvBANK2:
  5471                           	opt stack 0
  5472  0002DD                     _reset_cause:
  5473                           	opt stack 0
  5474  0002DD                     	ds	1
  5475  0000                     _HLVDCON0bits	set	3778
  5476  0000                     _HLVDCON0	set	3778
  5477  0000                     _HLVDCON1	set	3779
  5478  0000                     _PIR8bits	set	3643
  5479  0000                     _FVRCONbits	set	3780
  5480  0000                     _FVRCON	set	3780
  5481  0000                     _RC2REG	set	3825
  5482  0000                     _RC2STAbits	set	3829
  5483  0000                     _TX2REG	set	3826
  5484  0000                     _TX2STAbits	set	3830
  5485  0000                     _SP2BRGH	set	3828
  5486  0000                     _SP2BRGL	set	3827
  5487  0000                     _TX2STA	set	3830
  5488  0000                     _RC2STA	set	3829
  5489  0000                     _BAUD2CON	set	3831
  5490  0000                     _PIR2bits	set	3637
  5491  0000                     _PIE2bits	set	3627
  5492  0000                     _PIR1bits	set	3636
  5493  0000                     _PIE1bits	set	3626
  5494  0000                     _PIR5bits	set	3640
  5495  0000                     _PIE5bits	set	3630
  5496  0000                     _PIR3bits	set	3638
  5497  0000                     _PIE3bits	set	3628
  5498  0000                     _IPR2bits	set	3617
  5499  0000                     _IPR1bits	set	3616
  5500  0000                     _IPR5bits	set	3620
  5501  0000                     _IPR3bits	set	3618
  5502  0000                     _RX2PPS	set	3601
  5503  0000                     _RG7PPS	set	3721
  5504  0000                     _SLRCONH	set	3774
  5505  0000                     _SLRCONG	set	3769
  5506  0000                     _SLRCONF	set	3761
  5507  0000                     _SLRCONE	set	3756
  5508  0000                     _SLRCOND	set	3748
  5509  0000                     _SLRCONC	set	3743
  5510  0000                     _SLRCONB	set	3735
  5511  0000                     _SLRCONA	set	3727
  5512  0000                     _ODCOND	set	3749
  5513  0000                     _ODCONC	set	3744
  5514  0000                     _ODCONH	set	3775
  5515  0000                     _ODCONB	set	3736
  5516  0000                     _ODCONG	set	3770
  5517  0000                     _ODCONA	set	3728
  5518  0000                     _ODCONF	set	3762
  5519  0000                     _ODCONE	set	3757
  5520  0000                     _WPUH	set	3776
  5521  0000                     _WPUC	set	3745
  5522  0000                     _WPUA	set	3729
  5523  0000                     _WPUG	set	3771
  5524  0000                     _WPUB	set	3737
  5525  0000                     _WPUE	set	3758
  5526  0000                     _WPUF	set	3763
  5527  0000                     _WPUD	set	3750
  5528  0000                     _ANSELA	set	3730
  5529  0000                     _ANSELF	set	3764
  5530  0000                     _ANSELG	set	3772
  5531  0000                     _ANSELE	set	3759
  5532  0000                     _ANSELB	set	3738
  5533  0000                     _ANSELD	set	3751
  5534  0000                     _PMD5	set	3665
  5535  0000                     _PMD4	set	3664
  5536  0000                     _PMD3	set	3663
  5537  0000                     _PMD2	set	3662
  5538  0000                     _PMD1	set	3661
  5539  0000                     _PMD0	set	3660
  5540  0000                     _OSCTUNE	set	3656
  5541  0000                     _OSCFRQ	set	3657
  5542  0000                     _OSCEN	set	3655
  5543  0000                     _OSCCON3	set	3653
  5544  0000                     _OSCCON1	set	3651
  5545  0000                     _PLLR	set	29232
  5546  0000                     _T7GCONbits	set	3889
  5547  0000                     _T7CONbits	set	3888
  5548  0000                     _T7CON	set	3888
  5549  0000                     _TMR7L	set	3886
  5550  0000                     _TMR7H	set	3887
  5551  0000                     _T7CLK	set	3891
  5552  0000                     _T7GATE	set	3890
  5553  0000                     _T7GCON	set	3889
  5554  0000                     _ADCON1bits	set	3929
  5555  0000                     _ADCON2bits	set	3930
  5556  0000                     _ADPRE	set	3934
  5557  0000                     _ADCON3bits	set	3931
  5558  0000                     _ADACQ	set	3932
  5559  0000                     _ADCLK	set	3927
  5560  0000                     _ADACT	set	3926
  5561  0000                     _ADREF	set	3928
  5562  0000                     _ADCON3	set	3931
  5563  0000                     _ADCON2	set	3930
  5564  0000                     _ADCON1	set	3929
  5565  0000                     _ADCAP	set	3933
  5566  0000                     _ADPCH	set	3935
  5567  0000                     _PCON0bits	set	4055
  5568  0000                     _LATGbits	set	3967
  5569  0000                     _NVMDAT	set	3958
  5570  0000                     _NVMADRL	set	3956
  5571  0000                     _NVMADRH	set	3957
  5572  0000                     _NVMCON2	set	3960
  5573  0000                     _TABLAT	set	4085
  5574  0000                     _TBLPTRL	set	4086
  5575  0000                     _TBLPTRH	set	4087
  5576  0000                     _TBLPTRU	set	4088
  5577  0000                     _NVMCON1bits	set	3959
  5578  0000                     _T5GCONbits	set	4036
  5579  0000                     _T5CONbits	set	4035
  5580  0000                     _T5CON	set	4035
  5581  0000                     _TMR5L	set	4033
  5582  0000                     _TMR5H	set	4034
  5583  0000                     _T5CLK	set	4038
  5584  0000                     _T5GATE	set	4037
  5585  0000                     _T5GCON	set	4036
  5586  0000                     _ADERRL	set	3950
  5587  0000                     _ADERRH	set	3951
  5588  0000                     _ADPREVL	set	3937
  5589  0000                     _ADPREVH	set	3938
  5590  0000                     _ADFLTRL	set	3954
  5591  0000                     _ADFLTRH	set	3955
  5592  0000                     _ADSTATbits	set	3941
  5593  0000                     _ADACCL	set	3952
  5594  0000                     _ADACCH	set	3953
  5595  0000                     _ADCNT	set	3943
  5596  0000                     _ADRESL	set	3939
  5597  0000                     _ADRESH	set	3940
  5598  0000                     _ADCON0bits	set	3936
  5599  0000                     _ADCON0	set	3936
  5600  0000                     _ADSTAT	set	3941
  5601  0000                     _ADRPT	set	3942
  5602  0000                     _ADSTPTH	set	3945
  5603  0000                     _ADSTPTL	set	3944
  5604  0000                     _ADUTHH	set	3949
  5605  0000                     _ADUTHL	set	3948
  5606  0000                     _ADLTHH	set	3947
  5607  0000                     _ADLTHL	set	3946
  5608  0000                     _LATFbits	set	3966
  5609  0000                     _PR6	set	4016
  5610  0000                     _TMR6	set	4015
  5611  0000                     _T6CONbits	set	4017
  5612  0000                     _T6RSTbits	set	4020
  5613  0000                     _T6HLTbits	set	4018
  5614  0000                     _T6CON	set	4017
  5615  0000                     _T6TMR	set	4015
  5616  0000                     _T6PR	set	4016
  5617  0000                     _T6RST	set	4020
  5618  0000                     _T6HLT	set	4018
  5619  0000                     _T6CLKCON	set	4019
  5620  0000                     _INTCONbits	set	4082
  5621  0000                     _TRISD	set	3972
  5622  0000                     _TRISC	set	3971
  5623  0000                     _TRISH	set	3976
  5624  0000                     _TRISB	set	3970
  5625  0000                     _TRISG	set	3975
  5626  0000                     _TRISA	set	3969
  5627  0000                     _TRISF	set	3974
  5628  0000                     _TRISE	set	3973
  5629  0000                     _LATH	set	3968
  5630  0000                     _LATC	set	3963
  5631  0000                     _LATG	set	3967
  5632  0000                     _LATB	set	3962
  5633  0000                     _LATF	set	3966
  5634  0000                     _LATA	set	3961
  5635  0000                     _LATD	set	3964
  5636  0000                     _LATE	set	3965
  5637                           
  5638                           	psect	cinit
  5639  01724E                     __pcinit:
  5640                           	opt stack 0
  5641  01724E                     start_initialization:
  5642                           	opt stack 0
  5643  01724E                     __initialization:
  5644                           	opt stack 0
  5645                           
  5646                           ; Initialize objects allocated to BANK2 (36 bytes)
  5647                           ; load TBLPTR registers with __pidataBANK2
  5648  01724E  0E6C               	movlw	low __pidataBANK2
  5649  017250  6EF6               	movwf	tblptrl,c
  5650  017252  0E7F               	movlw	high __pidataBANK2
  5651  017254  6EF7               	movwf	tblptrh,c
  5652  017256  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  5653  017258  6EF8               	movwf	tblptru,c
  5654  01725A  EE02  F0B9         	lfsr	0,__pdataBANK2
  5655  01725E  EE10 F024          	lfsr	1,36
  5656  017262                     copy_data0:
  5657  017262  0009               	tblrd		*+
  5658  017264  CFF5 FFEE          	movff	tablat,postinc0
  5659  017268  50E5               	movf	postdec1,w,c
  5660  01726A  50E1               	movf	fsr1l,w,c
  5661  01726C  E1FA               	bnz	copy_data0
  5662                           
  5663                           ; Initialize objects allocated to BANK0 (6 bytes)
  5664                           ; load TBLPTR registers with __pidataBANK0
  5665  01726E  0E6E               	movlw	low __pidataBANK0
  5666  017270  6EF6               	movwf	tblptrl,c
  5667  017272  0E81               	movlw	high __pidataBANK0
  5668  017274  6EF7               	movwf	tblptrh,c
  5669  017276  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  5670  017278  6EF8               	movwf	tblptru,c
  5671  01727A  EE00  F0F9         	lfsr	0,__pdataBANK0
  5672  01727E  EE10 F006          	lfsr	1,6
  5673  017282                     copy_data1:
  5674  017282  0009               	tblrd		*+
  5675  017284  CFF5 FFEE          	movff	tablat,postinc0
  5676  017288  50E5               	movf	postdec1,w,c
  5677  01728A  50E1               	movf	fsr1l,w,c
  5678  01728C  E1FA               	bnz	copy_data1
  5679                           
  5680                           ; Clear objects allocated to BANK3 (128 bytes)
  5681  01728E  EE03  F000         	lfsr	0,__pbssBANK3
  5682  017292  0E80               	movlw	128
  5683  017294                     clear_0:
  5684  017294  6AEE               	clrf	postinc0,c
  5685  017296  06E8               	decf	wreg,f,c
  5686  017298  E1FD               	bnz	clear_0
  5687                           
  5688                           ; Clear objects allocated to BANK2 (185 bytes)
  5689  01729A  EE02  F000         	lfsr	0,__pbssBANK2
  5690  01729E  0EB9               	movlw	185
  5691  0172A0                     clear_1:
  5692  0172A0  6AEE               	clrf	postinc0,c
  5693  0172A2  06E8               	decf	wreg,f,c
  5694  0172A4  E1FD               	bnz	clear_1
  5695                           
  5696                           ; Clear objects allocated to BANK1 (24 bytes)
  5697  0172A6  EE01  F0CB         	lfsr	0,__pbssBANK1
  5698  0172AA  0E18               	movlw	24
  5699  0172AC                     clear_2:
  5700  0172AC  6AEE               	clrf	postinc0,c
  5701  0172AE  06E8               	decf	wreg,f,c
  5702  0172B0  E1FD               	bnz	clear_2
  5703                           
  5704                           ; Clear objects allocated to BITBANK0 (1 bytes)
  5705  0172B2  0100               	movlb	0
  5706  0172B4  6BFF               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  5707                           
  5708                           ; Clear objects allocated to BANK0 (9 bytes)
  5709  0172B6  EE00  F0F0         	lfsr	0,__pbssBANK0
  5710  0172BA  0E09               	movlw	9
  5711  0172BC                     clear_3:
  5712  0172BC  6AEE               	clrf	postinc0,c
  5713  0172BE  06E8               	decf	wreg,f,c
  5714  0172C0  E1FD               	bnz	clear_3
  5715                           
  5716                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  5717  0172C2  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  5718  0172C4                     end_of_initialization:
  5719                           	opt stack 0
  5720  0172C4                     __end_of__initialization:
  5721                           	opt stack 0
  5722  0172C4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5723  0172C6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5724  0172C8  0100               	movlb	0
  5725  0172CA  EF67  F0B9         	goto	_main	;jump to C main() function
  5726                           tblptru	equ	0xFF8
  5727                           tblptrh	equ	0xFF7
  5728                           tblptrl	equ	0xFF6
  5729                           tablat	equ	0xFF5
  5730                           postinc0	equ	0xFEE
  5731                           wreg	equ	0xFE8
  5732                           postdec1	equ	0xFE5
  5733                           fsr1l	equ	0xFE1
  5734                           
  5735                           	psect	bitbssCOMRAM
  5736  0002F0                     __pbitbssCOMRAM:
  5737                           	opt stack 0
  5738  0002F0                     _adc_error_flag:
  5739                           	opt stack 0
  5740  0002F0                     	ds	1
  5741  0002F1                     _load_enable:
  5742                           	opt stack 0
  5743  0002F1                     	ds	1
  5744  0002F2                     _VCC_overvoltage_flag:
  5745                           	opt stack 0
  5746  0002F2                     	ds	1
  5747                           tblptru	equ	0xFF8
  5748                           tblptrh	equ	0xFF7
  5749                           tblptrl	equ	0xFF6
  5750                           tablat	equ	0xFF5
  5751                           postinc0	equ	0xFEE
  5752                           wreg	equ	0xFE8
  5753                           postdec1	equ	0xFE5
  5754                           fsr1l	equ	0xFE1
  5755                           
  5756                           	psect	bitbssBANK0
  5757  0007F8                     __pbitbssBANK0:
  5758                           	opt stack 0
  5759  0007F8                     _eusart2RxStringReady:
  5760                           	opt stack 0
  5761  0007F8                     	ds	1
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           postinc0	equ	0xFEE
  5767                           wreg	equ	0xFE8
  5768                           postdec1	equ	0xFE5
  5769                           fsr1l	equ	0xFE1
  5770                           
  5771                           	psect	bssBANK0
  5772  0000F0                     __pbssBANK0:
  5773                           	opt stack 0
  5774  0000F0                     _POS3P3_ADC_Result:
  5775                           	opt stack 0
  5776  0000F0                     	ds	4
  5777  0000F4                     _eusart2RxHead:
  5778                           	opt stack 0
  5779  0000F4                     	ds	1
  5780  0000F5                     _FVR_ADC_Result:
  5781                           	opt stack 0
  5782  0000F5                     	ds	4
  5783                           tblptru	equ	0xFF8
  5784                           tblptrh	equ	0xFF7
  5785                           tblptrl	equ	0xFF6
  5786                           tablat	equ	0xFF5
  5787                           postinc0	equ	0xFEE
  5788                           wreg	equ	0xFE8
  5789                           postdec1	equ	0xFE5
  5790                           fsr1l	equ	0xFE1
  5791                           
  5792                           	psect	dataBANK0
  5793  0000F9                     __pdataBANK0:
  5794                           	opt stack 0
  5795  0000F9                     _dimming_period:
  5796                           	opt stack 0
  5797  0000F9                     	ds	2
  5798  0000FB                     _TRIAC_Firing_Angle:
  5799                           	opt stack 0
  5800  0000FB                     	ds	4
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           postdec1	equ	0xFE5
  5808                           fsr1l	equ	0xFE1
  5809                           
  5810                           	psect	bssBANK1
  5811  0001CB                     __pbssBANK1:
  5812                           	opt stack 0
  5813  0001CB                     _Vrms:
  5814                           	opt stack 0
  5815  0001CB                     	ds	4
  5816  0001CF                     _Irms:
  5817                           	opt stack 0
  5818  0001CF                     	ds	4
  5819  0001D3                     _Imeas:
  5820                           	opt stack 0
  5821  0001D3                     	ds	4
  5822  0001D7                     _AVSS_ADC_Result:
  5823                           	opt stack 0
  5824  0001D7                     	ds	4
  5825  0001DB                     _timer7ReloadVal:
  5826                           	opt stack 0
  5827  0001DB                     	ds	2
  5828  0001DD                     _current_adc_channel:
  5829                           	opt stack 0
  5830  0001DD                     	ds	1
  5831  0001DE                     _eusart2RxCount:
  5832                           	opt stack 0
  5833  0001DE                     	ds	1
  5834  0001DF                     _eusart2RxTail:
  5835                           	opt stack 0
  5836  0001DF                     	ds	1
  5837  0001E0                     _eusart2TxBufferRemaining:
  5838                           	opt stack 0
  5839  0001E0                     	ds	1
  5840  0001E1                     _eusart2TxTail:
  5841                           	opt stack 0
  5842  0001E1                     	ds	1
  5843  0001E2                     _eusart2TxHead:
  5844                           	opt stack 0
  5845  0001E2                     	ds	1
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           postinc0	equ	0xFEE
  5851                           wreg	equ	0xFE8
  5852                           postdec1	equ	0xFE5
  5853                           fsr1l	equ	0xFE1
  5854                           
  5855                           	psect	bssBANK2
  5856  000200                     __pbssBANK2:
  5857                           	opt stack 0
  5858  000200                     _eusart2RxBuffer:
  5859                           	opt stack 0
  5860  000200                     	ds	64
  5861  000240                     _load_on_time:
  5862                           	opt stack 0
  5863  000240                     	ds	4
  5864  000244                     _dev_on_time:
  5865                           	opt stack 0
  5866  000244                     	ds	4
  5867  000248                     _Avg_Power:
  5868                           	opt stack 0
  5869  000248                     	ds	4
  5870  00024C                     _Ipk:
  5871                           	opt stack 0
  5872  00024C                     	ds	4
  5873  000250                     _Vpk:
  5874                           	opt stack 0
  5875  000250                     	ds	4
  5876  000254                     _Temp_ADC_Result:
  5877                           	opt stack 0
  5878  000254                     	ds	4
  5879  000258                     _POS12_ADC_Result:
  5880                           	opt stack 0
  5881  000258                     	ds	4
  5882  00025C                     _ADC_Result_Scaling:
  5883                           	opt stack 0
  5884  00025C                     	ds	4
  5885  000260                     _TMR5_InterruptHandler:
  5886                           	opt stack 0
  5887  000260                     	ds	3
  5888  000263                     _TMR7_InterruptHandler:
  5889                           	opt stack 0
  5890  000263                     	ds	3
  5891  000266                     _ADCC_ADI_InterruptHandler:
  5892                           	opt stack 0
  5893  000266                     	ds	3
  5894  000269                     _TMR6_InterruptHandler:
  5895                           	opt stack 0
  5896  000269                     	ds	3
  5897  00026C                     _EUSART2_RxDefaultInterruptHandler:
  5898                           	opt stack 0
  5899  00026C                     	ds	3
  5900  00026F                     _EUSART2_TxDefaultInterruptHandler:
  5901                           	opt stack 0
  5902  00026F                     	ds	3
  5903  000272                     _errno:
  5904                           	opt stack 0
  5905  000272                     	ds	2
  5906  000274                     _timer5ReloadVal:
  5907                           	opt stack 0
  5908  000274                     	ds	2
  5909  000276                     _background_color:
  5910                           	opt stack 0
  5911  000276                     	ds	1
  5912  000277                     _foreground_color:
  5913                           	opt stack 0
  5914  000277                     	ds	1
  5915  000278                     _attribute:
  5916                           	opt stack 0
  5917  000278                     	ds	1
  5918  000279                     _line:
  5919                           	opt stack 0
  5920  000279                     	ds	64
  5921                           tblptru	equ	0xFF8
  5922                           tblptrh	equ	0xFF7
  5923                           tblptrl	equ	0xFF6
  5924                           tablat	equ	0xFF5
  5925                           postinc0	equ	0xFEE
  5926                           wreg	equ	0xFE8
  5927                           postdec1	equ	0xFE5
  5928                           fsr1l	equ	0xFE1
  5929                           
  5930                           	psect	dataBANK2
  5931  0002B9                     __pdataBANK2:
  5932                           	opt stack 0
  5933  0002B9                     getCauseOfResetString@strings:
  5934                           	opt stack 0
  5935  0002B9                     	ds	18
  5936  0002CB                     getDeviceIDString@F17550:
  5937                           	opt stack 0
  5938  0002CB                     	ds	6
  5939  0002D1                     _Irms_offset:
  5940                           	opt stack 0
  5941  0002D1                     	ds	4
  5942  0002D5                     _Vpk_const:
  5943                           	opt stack 0
  5944  0002D5                     	ds	4
  5945  0002D9                     _Temp_ADC_Offset:
  5946                           	opt stack 0
  5947  0002D9                     	ds	4
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           postdec1	equ	0xFE5
  5955                           fsr1l	equ	0xFE1
  5956                           
  5957                           	psect	bssBANK3
  5958  000300                     __pbssBANK3:
  5959                           	opt stack 0
  5960  000300                     _eusart2TxBuffer:
  5961                           	opt stack 0
  5962  000300                     	ds	128
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           postinc0	equ	0xFEE
  5968                           wreg	equ	0xFE8
  5969                           postdec1	equ	0xFE5
  5970                           fsr1l	equ	0xFE1
  5971                           
  5972                           	psect	cstackBANK3
  5973  000380                     __pcstackBANK3:
  5974                           	opt stack 0
  5975  000380                     ringBufferLUT@channel_name:
  5976                           	opt stack 0
  5977                           
  5978                           ; 22 bytes @ 0x0
  5979  000380                     	ds	22
  5980  000396                     ringBufferLUT@angle_degrees:
  5981                           	opt stack 0
  5982                           
  5983                           ; 4 bytes @ 0x16
  5984  000396                     	ds	4
  5985  00039A                     ringBufferLUT@arg_buff:
  5986                           	opt stack 0
  5987                           
  5988                           ; 3 bytes @ 0x1A
  5989  00039A                     	ds	3
  5990  00039D                     ringBufferLUT@index:
  5991                           	opt stack 0
  5992                           
  5993                           ; 2 bytes @ 0x1D
  5994  00039D                     	ds	2
  5995  00039F                     ringBufferLUT@percentage:
  5996                           	opt stack 0
  5997                           
  5998                           ; 2 bytes @ 0x1F
  5999  00039F                     	ds	2
  6000  0003A1                     ringBufferLUT@userID:
  6001                           	opt stack 0
  6002                           
  6003                           ; 2 bytes @ 0x21
  6004  0003A1                     	ds	2
  6005                           tblptru	equ	0xFF8
  6006                           tblptrh	equ	0xFF7
  6007                           tblptrl	equ	0xFF6
  6008                           tablat	equ	0xFF5
  6009                           postinc0	equ	0xFEE
  6010                           wreg	equ	0xFE8
  6011                           postdec1	equ	0xFE5
  6012                           fsr1l	equ	0xFE1
  6013                           
  6014                           	psect	cstackBANK1
  6015  000100                     __pcstackBANK1:
  6016                           	opt stack 0
  6017  000100                     ??_heartbeatTimerCallback:
  6018  000100                     ADCC_StartConversion@channel:
  6019                           	opt stack 0
  6020  000100                     TMR7_WriteTimer@timerVal:
  6021                           	opt stack 0
  6022                           
  6023                           ; 2 bytes @ 0x0
  6024  000100                     	ds	1
  6025  000101                     
  6026                           ; 1 bytes @ 0x1
  6027  000101                     	ds	1
  6028  000102                     ??_INTERRUPT_InterruptManagerLow:
  6029  000102                     
  6030                           ; 1 bytes @ 0x2
  6031  000102                     	ds	21
  6032  000117                     ??_isdigit:
  6033  000117                     ?_strlen:
  6034                           	opt stack 0
  6035  000117                     ?_strcmp:
  6036                           	opt stack 0
  6037  000117                     ?_getCauseOfResetString:
  6038                           	opt stack 0
  6039  000117                     ?_strchr:
  6040                           	opt stack 0
  6041  000117                     ?___wmul:
  6042                           	opt stack 0
  6043  000117                     ?___awmod:
  6044                           	opt stack 0
  6045  000117                     ?__tdiv_to_l_:
  6046                           	opt stack 0
  6047  000117                     ?__div_to_l_:
  6048                           	opt stack 0
  6049  000117                     ?___lldiv:
  6050                           	opt stack 0
  6051  000117                     ?___xxtofl:
  6052                           	opt stack 0
  6053  000117                     EUSART2_Read@readValue:
  6054                           	opt stack 0
  6055  000117                     EUSART2_Write@txData:
  6056                           	opt stack 0
  6057  000117                     getCauseOfReset@return_reset_cause:
  6058                           	opt stack 0
  6059  000117                     ___wmul@multiplier:
  6060                           	opt stack 0
  6061  000117                     ___awmod@dividend:
  6062                           	opt stack 0
  6063  000117                     strcat@to:
  6064                           	opt stack 0
  6065  000117                     strcmp@s1:
  6066                           	opt stack 0
  6067  000117                     strcpy@to:
  6068                           	opt stack 0
  6069  000117                     strlen@s:
  6070                           	opt stack 0
  6071  000117                     strncpy@to:
  6072                           	opt stack 0
  6073  000117                     strchr@ptr:
  6074                           	opt stack 0
  6075  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6076                           	opt stack 0
  6077  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6078                           	opt stack 0
  6079  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6080                           	opt stack 0
  6081  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  6082                           	opt stack 0
  6083  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6084                           	opt stack 0
  6085  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6086                           	opt stack 0
  6087  000117                     __tdiv_to_l_@f1:
  6088                           	opt stack 0
  6089  000117                     FLASH_ReadByte@flashAddr:
  6090                           	opt stack 0
  6091  000117                     __div_to_l_@f1:
  6092                           	opt stack 0
  6093  000117                     ___flge@ff1:
  6094                           	opt stack 0
  6095  000117                     ___lldiv@dividend:
  6096                           	opt stack 0
  6097  000117                     ___xxtofl@val:
  6098                           	opt stack 0
  6099                           
  6100                           ; 4 bytes @ 0x17
  6101  000117                     	ds	1
  6102  000118                     putch@txData:
  6103                           	opt stack 0
  6104  000118                     _isdigit$3141:
  6105                           	opt stack 0
  6106                           
  6107                           ; 1 bytes @ 0x18
  6108  000118                     	ds	1
  6109  000119                     ??_strlen:
  6110  000119                     getCauseOfResetString@r:
  6111                           	opt stack 0
  6112  000119                     isdigit@c:
  6113                           	opt stack 0
  6114  000119                     ___wmul@multiplicand:
  6115                           	opt stack 0
  6116  000119                     ___awmod@divisor:
  6117                           	opt stack 0
  6118  000119                     strcat@from:
  6119                           	opt stack 0
  6120  000119                     strcmp@s2:
  6121                           	opt stack 0
  6122  000119                     strcpy@from:
  6123                           	opt stack 0
  6124  000119                     strncpy@from:
  6125                           	opt stack 0
  6126  000119                     strchr@chr:
  6127                           	opt stack 0
  6128                           
  6129                           ; 2 bytes @ 0x19
  6130  000119                     	ds	1
  6131  00011A                     ??_TMR7_Initialize:
  6132  00011A                     ??_TMR5_Initialize:
  6133  00011A                     __tdiv_to_l_@f2:
  6134                           	opt stack 0
  6135                           
  6136                           ; 3 bytes @ 0x1A
  6137  00011A                     	ds	1
  6138  00011B                     ??_strcmp:
  6139  00011B                     ??___xxtofl:
  6140  00011B                     ?_FLASH_ReadWord:
  6141                           	opt stack 0
  6142  00011B                     ___awmod@counter:
  6143                           	opt stack 0
  6144  00011B                     ___wmul@product:
  6145                           	opt stack 0
  6146  00011B                     strcat@cp:
  6147                           	opt stack 0
  6148  00011B                     strcpy@cp:
  6149                           	opt stack 0
  6150  00011B                     strlen@cp:
  6151                           	opt stack 0
  6152  00011B                     strncpy@size:
  6153                           	opt stack 0
  6154  00011B                     FLASH_ReadWord@flashAddr:
  6155                           	opt stack 0
  6156  00011B                     __div_to_l_@f2:
  6157                           	opt stack 0
  6158  00011B                     ___flge@ff2:
  6159                           	opt stack 0
  6160  00011B                     ___lldiv@divisor:
  6161                           	opt stack 0
  6162                           
  6163                           ; 4 bytes @ 0x1B
  6164  00011B                     	ds	1
  6165  00011C                     ___awmod@sign:
  6166                           	opt stack 0
  6167  00011C                     strcmp@r:
  6168                           	opt stack 0
  6169                           
  6170                           ; 1 bytes @ 0x1C
  6171  00011C                     	ds	1
  6172  00011D                     ??__tdiv_to_l_:
  6173  00011D                     ?_atoi:
  6174                           	opt stack 0
  6175  00011D                     ?_strncmp:
  6176                           	opt stack 0
  6177  00011D                     ?___awdiv:
  6178                           	opt stack 0
  6179  00011D                     atoi@s:
  6180                           	opt stack 0
  6181  00011D                     ___awdiv@dividend:
  6182                           	opt stack 0
  6183  00011D                     strncpy@cp:
  6184                           	opt stack 0
  6185  00011D                     strncmp@s1:
  6186                           	opt stack 0
  6187                           
  6188                           ; 2 bytes @ 0x1D
  6189  00011D                     	ds	2
  6190  00011F                     ??_atoi:
  6191  00011F                     ??_FLASH_ReadWord:
  6192  00011F                     ??___flge:
  6193  00011F                     ___xxtofl@sign:
  6194                           	opt stack 0
  6195  00011F                     ___awdiv@divisor:
  6196                           	opt stack 0
  6197  00011F                     strncmp@s2:
  6198                           	opt stack 0
  6199  00011F                     __div_to_l_@quot:
  6200                           	opt stack 0
  6201  00011F                     ___lldiv@quotient:
  6202                           	opt stack 0
  6203                           
  6204                           ; 4 bytes @ 0x1F
  6205  00011F                     	ds	1
  6206  000120                     ___xxtofl@exp:
  6207                           	opt stack 0
  6208  000120                     __tdiv_to_l_@quot:
  6209                           	opt stack 0
  6210                           
  6211                           ; 4 bytes @ 0x20
  6212  000120                     	ds	1
  6213  000121                     atoi@sign:
  6214                           	opt stack 0
  6215  000121                     ___awdiv@counter:
  6216                           	opt stack 0
  6217  000121                     strncmp@len:
  6218                           	opt stack 0
  6219  000121                     ___xxtofl@arg:
  6220                           	opt stack 0
  6221                           
  6222                           ; 4 bytes @ 0x21
  6223  000121                     	ds	1
  6224  000122                     ??_getMajorRevisionID:
  6225  000122                     ?_getDeviceID:
  6226                           	opt stack 0
  6227  000122                     ?_getUserID:
  6228                           	opt stack 0
  6229  000122                     ___awdiv@sign:
  6230                           	opt stack 0
  6231  000122                     getMinorRevisionID@REVID_RAW:
  6232                           	opt stack 0
  6233  000122                     atoi@a:
  6234                           	opt stack 0
  6235                           
  6236                           ; 2 bytes @ 0x22
  6237  000122                     	ds	1
  6238  000123                     ??_strncmp:
  6239  000123                     __div_to_l_@cntr:
  6240                           	opt stack 0
  6241  000123                     ___lldiv@counter:
  6242                           	opt stack 0
  6243  000123                     ___awdiv@quotient:
  6244                           	opt stack 0
  6245                           
  6246                           ; 2 bytes @ 0x23
  6247  000123                     	ds	1
  6248  000124                     ?_getDeviceIDString:
  6249                           	opt stack 0
  6250  000124                     ?___llmod:
  6251                           	opt stack 0
  6252  000124                     __div_to_l_@exp1:
  6253                           	opt stack 0
  6254  000124                     __tdiv_to_l_@cntr:
  6255                           	opt stack 0
  6256  000124                     getDeviceIDString@inputDevID:
  6257                           	opt stack 0
  6258  000124                     getUserID@initialOffset:
  6259                           	opt stack 0
  6260  000124                     ___llmod@dividend:
  6261                           	opt stack 0
  6262                           
  6263                           ; 4 bytes @ 0x24
  6264  000124                     	ds	1
  6265  000125                     ?___flneg:
  6266                           	opt stack 0
  6267  000125                     __tdiv_to_l_@exp1:
  6268                           	opt stack 0
  6269  000125                     getMajorRevisionID@REVID_RAW:
  6270                           	opt stack 0
  6271  000125                     ___flneg@f1:
  6272                           	opt stack 0
  6273                           
  6274                           ; 4 bytes @ 0x25
  6275  000125                     	ds	1
  6276  000126                     ??_getDeviceIDString:
  6277  000126                     ?_strstr:
  6278                           	opt stack 0
  6279  000126                     strstr@s1:
  6280                           	opt stack 0
  6281                           
  6282                           ; 2 bytes @ 0x26
  6283  000126                     	ds	2
  6284  000128                     getUserID@inputUserID:
  6285                           	opt stack 0
  6286  000128                     strstr@s2:
  6287                           	opt stack 0
  6288  000128                     ___llmod@divisor:
  6289                           	opt stack 0
  6290  000128                     getDeviceIDString@strings:
  6291                           	opt stack 0
  6292                           
  6293                           ; 6 bytes @ 0x28
  6294  000128                     	ds	1
  6295  000129                     ?___fladd:
  6296                           	opt stack 0
  6297  000129                     getUserID@IDOffset:
  6298                           	opt stack 0
  6299  000129                     ___fladd@b:
  6300                           	opt stack 0
  6301                           
  6302                           ; 4 bytes @ 0x29
  6303  000129                     	ds	1
  6304  00012A                     
  6305                           ; 1 bytes @ 0x2A
  6306  00012A                     	ds	2
  6307  00012C                     ___llmod@counter:
  6308                           	opt stack 0
  6309                           
  6310                           ; 1 bytes @ 0x2C
  6311  00012C                     	ds	1
  6312  00012D                     ___fladd@a:
  6313                           	opt stack 0
  6314                           
  6315                           ; 4 bytes @ 0x2D
  6316  00012D                     	ds	4
  6317  000131                     ??___fladd:
  6318                           
  6319                           ; 1 bytes @ 0x31
  6320  000131                     	ds	8
  6321  000139                     ___fladd@signs:
  6322                           	opt stack 0
  6323                           
  6324                           ; 1 bytes @ 0x39
  6325  000139                     	ds	1
  6326  00013A                     ___fladd@aexp:
  6327                           	opt stack 0
  6328                           
  6329                           ; 1 bytes @ 0x3A
  6330  00013A                     	ds	1
  6331  00013B                     ___fladd@bexp:
  6332                           	opt stack 0
  6333                           
  6334                           ; 1 bytes @ 0x3B
  6335  00013B                     	ds	1
  6336  00013C                     ___fladd@grs:
  6337                           	opt stack 0
  6338                           
  6339                           ; 1 bytes @ 0x3C
  6340  00013C                     	ds	1
  6341  00013D                     ?___fldiv:
  6342                           	opt stack 0
  6343  00013D                     ?___flsub:
  6344                           	opt stack 0
  6345  00013D                     ___flsub@b:
  6346                           	opt stack 0
  6347  00013D                     ___fldiv@b:
  6348                           	opt stack 0
  6349                           
  6350                           ; 4 bytes @ 0x3D
  6351  00013D                     	ds	4
  6352  000141                     ___flsub@a:
  6353                           	opt stack 0
  6354  000141                     ___fldiv@a:
  6355                           	opt stack 0
  6356                           
  6357                           ; 4 bytes @ 0x41
  6358  000141                     	ds	4
  6359  000145                     ??___fldiv:
  6360  000145                     
  6361                           ; 1 bytes @ 0x45
  6362  000145                     	ds	4
  6363  000149                     ___fldiv@sign:
  6364                           	opt stack 0
  6365                           
  6366                           ; 1 bytes @ 0x49
  6367  000149                     	ds	1
  6368  00014A                     ___fldiv@rem:
  6369                           	opt stack 0
  6370                           
  6371                           ; 4 bytes @ 0x4A
  6372  00014A                     	ds	4
  6373  00014E                     ___fldiv@new_exp:
  6374                           	opt stack 0
  6375                           
  6376                           ; 2 bytes @ 0x4E
  6377  00014E                     	ds	2
  6378  000150                     ___fldiv@grs:
  6379                           	opt stack 0
  6380                           
  6381                           ; 4 bytes @ 0x50
  6382  000150                     	ds	4
  6383  000154                     ___fldiv@bexp:
  6384                           	opt stack 0
  6385                           
  6386                           ; 1 bytes @ 0x54
  6387  000154                     	ds	1
  6388  000155                     ___fldiv@aexp:
  6389                           	opt stack 0
  6390                           
  6391                           ; 1 bytes @ 0x55
  6392  000155                     	ds	1
  6393  000156                     ?___flmul:
  6394                           	opt stack 0
  6395  000156                     ___flmul@b:
  6396                           	opt stack 0
  6397                           
  6398                           ; 4 bytes @ 0x56
  6399  000156                     	ds	4
  6400  00015A                     ___flmul@a:
  6401                           	opt stack 0
  6402                           
  6403                           ; 4 bytes @ 0x5A
  6404  00015A                     	ds	4
  6405  00015E                     ??___flmul:
  6406                           
  6407                           ; 1 bytes @ 0x5E
  6408  00015E                     	ds	4
  6409  000162                     ___flmul@sign:
  6410                           	opt stack 0
  6411                           
  6412                           ; 1 bytes @ 0x62
  6413  000162                     	ds	1
  6414  000163                     ___flmul@aexp:
  6415                           	opt stack 0
  6416                           
  6417                           ; 1 bytes @ 0x63
  6418  000163                     	ds	1
  6419  000164                     ___flmul@grs:
  6420                           	opt stack 0
  6421                           
  6422                           ; 4 bytes @ 0x64
  6423  000164                     	ds	4
  6424  000168                     ___flmul@bexp:
  6425                           	opt stack 0
  6426                           
  6427                           ; 1 bytes @ 0x68
  6428  000168                     	ds	1
  6429  000169                     ___flmul@prod:
  6430                           	opt stack 0
  6431                           
  6432                           ; 4 bytes @ 0x69
  6433  000169                     	ds	4
  6434  00016D                     ___flmul@temp:
  6435                           	opt stack 0
  6436                           
  6437                           ; 2 bytes @ 0x6D
  6438  00016D                     	ds	2
  6439  00016F                     ?_fround:
  6440                           	opt stack 0
  6441  00016F                     ?_scale:
  6442                           	opt stack 0
  6443  00016F                     ?___fltol:
  6444                           	opt stack 0
  6445  00016F                     ___fltol@f1:
  6446                           	opt stack 0
  6447                           
  6448                           ; 4 bytes @ 0x6F
  6449  00016F                     	ds	4
  6450  000173                     ??___fltol:
  6451  000173                     _fround$3859:
  6452                           	opt stack 0
  6453  000173                     _scale$3860:
  6454                           	opt stack 0
  6455                           
  6456                           ; 4 bytes @ 0x73
  6457  000173                     	ds	4
  6458  000177                     scale@scl:
  6459                           	opt stack 0
  6460  000177                     ___fltol@sign1:
  6461                           	opt stack 0
  6462  000177                     _fround$3858:
  6463                           	opt stack 0
  6464                           
  6465                           ; 4 bytes @ 0x77
  6466  000177                     	ds	1
  6467  000178                     ___fltol@exp1:
  6468                           	opt stack 0
  6469                           
  6470                           ; 1 bytes @ 0x78
  6471  000178                     	ds	3
  6472  00017B                     fround@prec:
  6473                           	opt stack 0
  6474                           
  6475                           ; 1 bytes @ 0x7B
  6476  00017B                     	ds	1
  6477  00017C                     ?_printf:
  6478                           	opt stack 0
  6479  00017C                     printf@f:
  6480                           	opt stack 0
  6481                           
  6482                           ; 2 bytes @ 0x7C
  6483  00017C                     	ds	10
  6484  000186                     ??_printf:
  6485                           
  6486                           ; 1 bytes @ 0x86
  6487  000186                     	ds	6
  6488  00018C                     _printf$3861:
  6489                           	opt stack 0
  6490                           
  6491                           ; 4 bytes @ 0x8C
  6492  00018C                     	ds	4
  6493  000190                     printf@idx:
  6494                           	opt stack 0
  6495                           
  6496                           ; 1 bytes @ 0x90
  6497  000190                     	ds	1
  6498  000191                     printf@len:
  6499                           	opt stack 0
  6500                           
  6501                           ; 2 bytes @ 0x91
  6502  000191                     	ds	2
  6503  000193                     printf@cp:
  6504                           	opt stack 0
  6505                           
  6506                           ; 2 bytes @ 0x93
  6507  000193                     	ds	2
  6508  000195                     printf@ap:
  6509                           	opt stack 0
  6510                           
  6511                           ; 2 bytes @ 0x95
  6512  000195                     	ds	2
  6513  000197                     printf@flag:
  6514                           	opt stack 0
  6515                           
  6516                           ; 2 bytes @ 0x97
  6517  000197                     	ds	2
  6518  000199                     printf@exp:
  6519                           	opt stack 0
  6520                           
  6521                           ; 2 bytes @ 0x99
  6522  000199                     	ds	2
  6523  00019B                     printf@tmpval:
  6524                           	opt stack 0
  6525                           
  6526                           ; 4 bytes @ 0x9B
  6527  00019B                     	ds	4
  6528  00019F                     printf@val:
  6529                           	opt stack 0
  6530                           
  6531                           ; 4 bytes @ 0x9F
  6532  00019F                     	ds	4
  6533  0001A3                     printf@fval:
  6534                           	opt stack 0
  6535                           
  6536                           ; 4 bytes @ 0xA3
  6537  0001A3                     	ds	4
  6538  0001A7                     printf@prec:
  6539                           	opt stack 0
  6540                           
  6541                           ; 2 bytes @ 0xA7
  6542  0001A7                     	ds	2
  6543  0001A9                     printf@c:
  6544                           	opt stack 0
  6545                           
  6546                           ; 1 bytes @ 0xA9
  6547  0001A9                     	ds	1
  6548  0001AA                     terminal_textAttributes@background_color:
  6549                           	opt stack 0
  6550                           
  6551                           ; 1 bytes @ 0xAA
  6552  0001AA                     	ds	1
  6553  0001AB                     terminal_textAttributes@input_attribute:
  6554                           	opt stack 0
  6555                           
  6556                           ; 1 bytes @ 0xAB
  6557  0001AB                     	ds	1
  6558  0001AC                     terminal_textAttributes@foreground_color:
  6559                           	opt stack 0
  6560                           
  6561                           ; 1 bytes @ 0xAC
  6562  0001AC                     	ds	1
  6563  0001AD                     terminal_textAttributes@output_buff:
  6564                           	opt stack 0
  6565                           
  6566                           ; 15 bytes @ 0xAD
  6567  0001AD                     	ds	15
  6568  0001BC                     ringBufferLUT@line:
  6569                           	opt stack 0
  6570                           
  6571                           ; 2 bytes @ 0xBC
  6572  0001BC                     	ds	2
  6573  0001BE                     ??_ringBufferLUT:
  6574                           
  6575                           ; 1 bytes @ 0xBE
  6576  0001BE                     	ds	2
  6577  0001C0                     ??_terminal_ringBufferPull:
  6578                           
  6579                           ; 1 bytes @ 0xC0
  6580  0001C0                     	ds	3
  6581  0001C3                     terminal_ringBufferPull@charNumber:
  6582                           	opt stack 0
  6583                           
  6584                           ; 2 bytes @ 0xC3
  6585  0001C3                     	ds	2
  6586  0001C5                     terminal_ringBufferPull@index_2365:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0xC5
  6590  0001C5                     	ds	2
  6591  0001C7                     terminal_ringBufferPull@index:
  6592                           	opt stack 0
  6593                           
  6594                           ; 2 bytes @ 0xC7
  6595  0001C7                     	ds	2
  6596  0001C9                     ??_main:
  6597                           
  6598                           ; 1 bytes @ 0xC9
  6599  0001C9                     	ds	2
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           postinc0	equ	0xFEE
  6605                           wreg	equ	0xFE8
  6606                           postdec1	equ	0xFE5
  6607                           fsr1l	equ	0xFE1
  6608                           
  6609                           	psect	cstackBANK0
  6610  000060                     __pcstackBANK0:
  6611                           	opt stack 0
  6612  000060                     ??i2___fladd:
  6613                           
  6614                           ; 1 bytes @ 0x0
  6615  000060                     	ds	8
  6616  000068                     i2___fladd@signs:
  6617                           	opt stack 0
  6618                           
  6619                           ; 1 bytes @ 0x8
  6620  000068                     	ds	1
  6621  000069                     i2___fladd@aexp:
  6622                           	opt stack 0
  6623                           
  6624                           ; 1 bytes @ 0x9
  6625  000069                     	ds	1
  6626  00006A                     i2___fladd@bexp:
  6627                           	opt stack 0
  6628                           
  6629                           ; 1 bytes @ 0xA
  6630  00006A                     	ds	1
  6631  00006B                     i2___fladd@grs:
  6632                           	opt stack 0
  6633                           
  6634                           ; 1 bytes @ 0xB
  6635  00006B                     	ds	1
  6636  00006C                     ?_sqrt:
  6637                           	opt stack 0
  6638  00006C                     ?_eval_poly:
  6639                           	opt stack 0
  6640  00006C                     ?_floor:
  6641                           	opt stack 0
  6642  00006C                     eval_poly@x:
  6643                           	opt stack 0
  6644  00006C                     sqrt@a:
  6645                           	opt stack 0
  6646  00006C                     floor@x:
  6647                           	opt stack 0
  6648                           
  6649                           ; 4 bytes @ 0xC
  6650  00006C                     	ds	4
  6651  000070                     ??_sqrt:
  6652  000070                     eval_poly@d:
  6653                           	opt stack 0
  6654  000070                     floor@i:
  6655                           	opt stack 0
  6656                           
  6657                           ; 4 bytes @ 0x10
  6658  000070                     	ds	2
  6659  000072                     eval_poly@n:
  6660                           	opt stack 0
  6661                           
  6662                           ; 2 bytes @ 0x12
  6663  000072                     	ds	2
  6664  000074                     ??_eval_poly:
  6665  000074                     sqrt@sign:
  6666                           	opt stack 0
  6667  000074                     floor@expon:
  6668                           	opt stack 0
  6669                           
  6670                           ; 2 bytes @ 0x14
  6671  000074                     	ds	1
  6672  000075                     sqrt@i:
  6673                           	opt stack 0
  6674                           
  6675                           ; 1 bytes @ 0x15
  6676  000075                     	ds	1
  6677  000076                     ?i2___flsub:
  6678                           	opt stack 0
  6679  000076                     sqrt@tfrac:
  6680                           	opt stack 0
  6681  000076                     i2___flsub@b:
  6682                           	opt stack 0
  6683                           
  6684                           ; 4 bytes @ 0x16
  6685  000076                     	ds	2
  6686  000078                     eval_poly@res:
  6687                           	opt stack 0
  6688                           
  6689                           ; 4 bytes @ 0x18
  6690  000078                     	ds	2
  6691  00007A                     sqrt@p:
  6692                           	opt stack 0
  6693  00007A                     i2___flsub@a:
  6694                           	opt stack 0
  6695                           
  6696                           ; 4 bytes @ 0x1A
  6697  00007A                     	ds	1
  6698  00007B                     sqrt@grs:
  6699                           	opt stack 0
  6700                           
  6701                           ; 4 bytes @ 0x1B
  6702  00007B                     	ds	1
  6703  00007C                     ?_atan:
  6704                           	opt stack 0
  6705  00007C                     atan@f:
  6706                           	opt stack 0
  6707                           
  6708                           ; 4 bytes @ 0x1C
  6709  00007C                     	ds	2
  6710  00007E                     ?i2_printf:
  6711                           	opt stack 0
  6712  00007E                     ?_sin:
  6713                           	opt stack 0
  6714  00007E                     i2printf@f:
  6715                           	opt stack 0
  6716  00007E                     sin@f:
  6717                           	opt stack 0
  6718                           
  6719                           ; 4 bytes @ 0x1E
  6720  00007E                     	ds	1
  6721  00007F                     sqrt@exp:
  6722                           	opt stack 0
  6723                           
  6724                           ; 2 bytes @ 0x1F
  6725  00007F                     	ds	1
  6726  000080                     ??i2_printf:
  6727  000080                     atan@y:
  6728                           	opt stack 0
  6729                           
  6730                           ; 4 bytes @ 0x20
  6731  000080                     	ds	1
  6732  000081                     sqrt@root:
  6733                           	opt stack 0
  6734                           
  6735                           ; 4 bytes @ 0x21
  6736  000081                     	ds	1
  6737  000082                     sin@y:
  6738                           	opt stack 0
  6739                           
  6740                           ; 4 bytes @ 0x22
  6741  000082                     	ds	2
  6742  000084                     atan@x:
  6743                           	opt stack 0
  6744                           
  6745                           ; 4 bytes @ 0x24
  6746  000084                     	ds	1
  6747  000085                     sqrt@frac:
  6748                           	opt stack 0
  6749                           
  6750                           ; 4 bytes @ 0x25
  6751  000085                     	ds	1
  6752  000086                     _sin$4060:
  6753                           	opt stack 0
  6754  000086                     i2_printf$4064:
  6755                           	opt stack 0
  6756                           
  6757                           ; 4 bytes @ 0x26
  6758  000086                     	ds	2
  6759  000088                     atan@recip:
  6760                           	opt stack 0
  6761                           
  6762                           ; 1 bytes @ 0x28
  6763  000088                     	ds	1
  6764  000089                     atan@val_squared:
  6765                           	opt stack 0
  6766                           
  6767                           ; 4 bytes @ 0x29
  6768  000089                     	ds	1
  6769  00008A                     i2printf@idx:
  6770                           	opt stack 0
  6771  00008A                     sin@x2:
  6772                           	opt stack 0
  6773                           
  6774                           ; 4 bytes @ 0x2A
  6775  00008A                     	ds	1
  6776  00008B                     i2printf@len:
  6777                           	opt stack 0
  6778                           
  6779                           ; 2 bytes @ 0x2B
  6780  00008B                     	ds	2
  6781  00008D                     i2printf@cp:
  6782                           	opt stack 0
  6783  00008D                     atan@val:
  6784                           	opt stack 0
  6785                           
  6786                           ; 4 bytes @ 0x2D
  6787  00008D                     	ds	1
  6788  00008E                     sin@sgn:
  6789                           	opt stack 0
  6790                           
  6791                           ; 1 bytes @ 0x2E
  6792  00008E                     	ds	1
  6793  00008F                     ?_currentMeasuredToPeak:
  6794                           	opt stack 0
  6795  00008F                     i2printf@ap:
  6796                           	opt stack 0
  6797  00008F                     currentMeasuredToPeak@Measured:
  6798                           	opt stack 0
  6799                           
  6800                           ; 4 bytes @ 0x2F
  6801  00008F                     	ds	2
  6802  000091                     ?_asin:
  6803                           	opt stack 0
  6804  000091                     i2printf@flag:
  6805                           	opt stack 0
  6806  000091                     asin@x:
  6807                           	opt stack 0
  6808                           
  6809                           ; 4 bytes @ 0x31
  6810  000091                     	ds	2
  6811  000093                     i2printf@exp:
  6812                           	opt stack 0
  6813  000093                     currentMeasuredToPeak@Angle:
  6814                           	opt stack 0
  6815                           
  6816                           ; 4 bytes @ 0x33
  6817  000093                     	ds	2
  6818  000095                     asin@sgn:
  6819                           	opt stack 0
  6820  000095                     i2printf@tmpval:
  6821                           	opt stack 0
  6822                           
  6823                           ; 4 bytes @ 0x35
  6824  000095                     	ds	2
  6825  000097                     currentMeasuredToPeak@Peak:
  6826                           	opt stack 0
  6827                           
  6828                           ; 4 bytes @ 0x37
  6829  000097                     	ds	2
  6830  000099                     i2printf@val:
  6831                           	opt stack 0
  6832  000099                     _asin$4059:
  6833                           	opt stack 0
  6834                           
  6835                           ; 4 bytes @ 0x39
  6836  000099                     	ds	4
  6837  00009D                     i2printf@fval:
  6838                           	opt stack 0
  6839  00009D                     _asin$4058:
  6840                           	opt stack 0
  6841                           
  6842                           ; 4 bytes @ 0x3D
  6843  00009D                     	ds	4
  6844  0000A1                     i2printf@prec:
  6845                           	opt stack 0
  6846  0000A1                     asin@y:
  6847                           	opt stack 0
  6848                           
  6849                           ; 4 bytes @ 0x41
  6850  0000A1                     	ds	2
  6851  0000A3                     i2printf@c:
  6852                           	opt stack 0
  6853                           
  6854                           ; 1 bytes @ 0x43
  6855  0000A3                     	ds	2
  6856  0000A5                     _asin$4057:
  6857                           	opt stack 0
  6858                           
  6859                           ; 4 bytes @ 0x45
  6860  0000A5                     	ds	4
  6861  0000A9                     ?_acos:
  6862                           	opt stack 0
  6863  0000A9                     acos@x:
  6864                           	opt stack 0
  6865                           
  6866                           ; 4 bytes @ 0x49
  6867  0000A9                     	ds	4
  6868  0000AD                     _acos$4056:
  6869                           	opt stack 0
  6870                           
  6871                           ; 4 bytes @ 0x4D
  6872  0000AD                     	ds	4
  6873  0000B1                     ?_peakToRMS:
  6874                           	opt stack 0
  6875  0000B1                     peakToRMS@Peak:
  6876                           	opt stack 0
  6877                           
  6878                           ; 4 bytes @ 0x51
  6879  0000B1                     	ds	4
  6880  0000B5                     peakToRMS@Angle:
  6881                           	opt stack 0
  6882                           
  6883                           ; 4 bytes @ 0x55
  6884  0000B5                     	ds	4
  6885  0000B9                     _peakToRMS$4049:
  6886                           	opt stack 0
  6887                           
  6888                           ; 4 bytes @ 0x59
  6889  0000B9                     	ds	4
  6890  0000BD                     _peakToRMS$4050:
  6891                           	opt stack 0
  6892                           
  6893                           ; 4 bytes @ 0x5D
  6894  0000BD                     	ds	4
  6895  0000C1                     _peakToRMS$4048:
  6896                           	opt stack 0
  6897                           
  6898                           ; 4 bytes @ 0x61
  6899  0000C1                     	ds	4
  6900  0000C5                     peakToRMS@RMS:
  6901                           	opt stack 0
  6902                           
  6903                           ; 4 bytes @ 0x65
  6904  0000C5                     	ds	4
  6905  0000C9                     _ADCPostProcessingCallback$4053:
  6906                           	opt stack 0
  6907                           
  6908                           ; 4 bytes @ 0x69
  6909  0000C9                     	ds	4
  6910  0000CD                     _ADCPostProcessingCallback$4054:
  6911                           	opt stack 0
  6912                           
  6913                           ; 4 bytes @ 0x6D
  6914  0000CD                     	ds	4
  6915  0000D1                     _ADCPostProcessingCallback$4055:
  6916                           	opt stack 0
  6917                           
  6918                           ; 4 bytes @ 0x71
  6919  0000D1                     	ds	4
  6920  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  6921                           	opt stack 0
  6922                           
  6923                           ; 1 bytes @ 0x75
  6924  0000D5                     	ds	1
  6925  0000D6                     _ADCPostProcessingCallback$4052:
  6926                           	opt stack 0
  6927                           
  6928                           ; 4 bytes @ 0x76
  6929  0000D6                     	ds	4
  6930  0000DA                     _ADCPostProcessingCallback$4051:
  6931                           	opt stack 0
  6932                           
  6933                           ; 4 bytes @ 0x7A
  6934  0000DA                     	ds	4
  6935  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  6936                           
  6937                           ; 1 bytes @ 0x7E
  6938  0000DE                     	ds	18
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           postdec1	equ	0xFE5
  6946                           fsr1l	equ	0xFE1
  6947                           
  6948                           	psect	cstackCOMRAM
  6949  000001                     __pcstackCOMRAM:
  6950                           	opt stack 0
  6951  000001                     ??i2_isdigit:
  6952  000001                     ?_ADCC_GetConversionResult:
  6953                           	opt stack 0
  6954  000001                     ?i2___wmul:
  6955                           	opt stack 0
  6956  000001                     ?i2___awmod:
  6957                           	opt stack 0
  6958  000001                     ?i2__div_to_l_:
  6959                           	opt stack 0
  6960  000001                     ?i2__tdiv_to_l_:
  6961                           	opt stack 0
  6962  000001                     ?i2___lldiv:
  6963                           	opt stack 0
  6964  000001                     i2EUSART2_Write@txData:
  6965                           	opt stack 0
  6966  000001                     TMR5_WriteTimer@timerVal:
  6967                           	opt stack 0
  6968  000001                     i2___wmul@multiplier:
  6969                           	opt stack 0
  6970  000001                     i2___awmod@dividend:
  6971                           	opt stack 0
  6972  000001                     i2__tdiv_to_l_@f1:
  6973                           	opt stack 0
  6974  000001                     frexp@value:
  6975                           	opt stack 0
  6976  000001                     i2__div_to_l_@f1:
  6977                           	opt stack 0
  6978  000001                     i2___lldiv@dividend:
  6979                           	opt stack 0
  6980                           
  6981                           ; 4 bytes @ 0x0
  6982  000001                     	ds	1
  6983  000002                     i2putch@txData:
  6984                           	opt stack 0
  6985  000002                     i2_isdigit$3141:
  6986                           	opt stack 0
  6987                           
  6988                           ; 1 bytes @ 0x1
  6989  000002                     	ds	1
  6990  000003                     ??_ADCC_GetConversionResult:
  6991  000003                     i2isdigit@c:
  6992                           	opt stack 0
  6993  000003                     i2___wmul@multiplicand:
  6994                           	opt stack 0
  6995  000003                     i2___awmod@divisor:
  6996                           	opt stack 0
  6997                           
  6998                           ; 2 bytes @ 0x2
  6999  000003                     	ds	1
  7000  000004                     i2__tdiv_to_l_@f2:
  7001                           	opt stack 0
  7002                           
  7003                           ; 3 bytes @ 0x3
  7004  000004                     	ds	1
  7005  000005                     ?i2___xxtofl:
  7006                           	opt stack 0
  7007  000005                     i2___awmod@counter:
  7008                           	opt stack 0
  7009  000005                     frexp@eptr:
  7010                           	opt stack 0
  7011  000005                     i2___wmul@product:
  7012                           	opt stack 0
  7013  000005                     i2__div_to_l_@f2:
  7014                           	opt stack 0
  7015  000005                     i2___lldiv@divisor:
  7016                           	opt stack 0
  7017  000005                     i2___xxtofl@val:
  7018                           	opt stack 0
  7019                           
  7020                           ; 4 bytes @ 0x4
  7021  000005                     	ds	1
  7022  000006                     i2___awmod@sign:
  7023                           	opt stack 0
  7024                           
  7025                           ; 1 bytes @ 0x5
  7026  000006                     	ds	1
  7027  000007                     ??_frexp:
  7028  000007                     ??i2__tdiv_to_l_:
  7029  000007                     ?i2___awdiv:
  7030                           	opt stack 0
  7031  000007                     i2___awdiv@dividend:
  7032                           	opt stack 0
  7033                           
  7034                           ; 2 bytes @ 0x6
  7035  000007                     	ds	2
  7036  000009                     ??i2___xxtofl:
  7037  000009                     i2___awdiv@divisor:
  7038                           	opt stack 0
  7039  000009                     i2__div_to_l_@quot:
  7040                           	opt stack 0
  7041  000009                     i2___lldiv@quotient:
  7042                           	opt stack 0
  7043                           
  7044                           ; 4 bytes @ 0x8
  7045  000009                     	ds	1
  7046  00000A                     i2__tdiv_to_l_@quot:
  7047                           	opt stack 0
  7048                           
  7049                           ; 4 bytes @ 0x9
  7050  00000A                     	ds	1
  7051  00000B                     i2___awdiv@counter:
  7052                           	opt stack 0
  7053                           
  7054                           ; 1 bytes @ 0xA
  7055  00000B                     	ds	1
  7056  00000C                     i2___awdiv@sign:
  7057                           	opt stack 0
  7058                           
  7059                           ; 1 bytes @ 0xB
  7060  00000C                     	ds	1
  7061  00000D                     i2__div_to_l_@cntr:
  7062                           	opt stack 0
  7063  00000D                     i2___lldiv@counter:
  7064                           	opt stack 0
  7065  00000D                     i2___xxtofl@sign:
  7066                           	opt stack 0
  7067  00000D                     i2___awdiv@quotient:
  7068                           	opt stack 0
  7069                           
  7070                           ; 2 bytes @ 0xC
  7071  00000D                     	ds	1
  7072  00000E                     ?i2___llmod:
  7073                           	opt stack 0
  7074  00000E                     i2__div_to_l_@exp1:
  7075                           	opt stack 0
  7076  00000E                     i2__tdiv_to_l_@cntr:
  7077                           	opt stack 0
  7078  00000E                     i2___xxtofl@exp:
  7079                           	opt stack 0
  7080  00000E                     i2___llmod@dividend:
  7081                           	opt stack 0
  7082                           
  7083                           ; 4 bytes @ 0xD
  7084  00000E                     	ds	1
  7085  00000F                     i2__tdiv_to_l_@exp1:
  7086                           	opt stack 0
  7087  00000F                     i2___xxtofl@arg:
  7088                           	opt stack 0
  7089                           
  7090                           ; 4 bytes @ 0xE
  7091  00000F                     	ds	3
  7092  000012                     i2___llmod@divisor:
  7093                           	opt stack 0
  7094                           
  7095                           ; 4 bytes @ 0x11
  7096  000012                     	ds	1
  7097  000013                     ?i2___fldiv:
  7098                           	opt stack 0
  7099  000013                     i2___fldiv@b:
  7100                           	opt stack 0
  7101                           
  7102                           ; 4 bytes @ 0x12
  7103  000013                     	ds	3
  7104  000016                     i2___llmod@counter:
  7105                           	opt stack 0
  7106                           
  7107                           ; 1 bytes @ 0x15
  7108  000016                     	ds	1
  7109  000017                     i2___fldiv@a:
  7110                           	opt stack 0
  7111                           
  7112                           ; 4 bytes @ 0x16
  7113  000017                     	ds	4
  7114  00001B                     ??i2___fldiv:
  7115                           
  7116                           ; 1 bytes @ 0x1A
  7117  00001B                     	ds	4
  7118  00001F                     i2___fldiv@sign:
  7119                           	opt stack 0
  7120                           
  7121                           ; 1 bytes @ 0x1E
  7122  00001F                     	ds	1
  7123  000020                     i2___fldiv@rem:
  7124                           	opt stack 0
  7125                           
  7126                           ; 4 bytes @ 0x1F
  7127  000020                     	ds	4
  7128  000024                     i2___fldiv@new_exp:
  7129                           	opt stack 0
  7130                           
  7131                           ; 2 bytes @ 0x23
  7132  000024                     	ds	2
  7133  000026                     i2___fldiv@grs:
  7134                           	opt stack 0
  7135                           
  7136                           ; 4 bytes @ 0x25
  7137  000026                     	ds	4
  7138  00002A                     i2___fldiv@bexp:
  7139                           	opt stack 0
  7140                           
  7141                           ; 1 bytes @ 0x29
  7142  00002A                     	ds	1
  7143  00002B                     i2___fldiv@aexp:
  7144                           	opt stack 0
  7145                           
  7146                           ; 1 bytes @ 0x2A
  7147  00002B                     	ds	1
  7148  00002C                     ?i2___flneg:
  7149                           	opt stack 0
  7150  00002C                     i2___flneg@f1:
  7151                           	opt stack 0
  7152                           
  7153                           ; 4 bytes @ 0x2B
  7154  00002C                     	ds	4
  7155  000030                     ?_fabs:
  7156                           	opt stack 0
  7157  000030                     ?i2___flmul:
  7158                           	opt stack 0
  7159  000030                     fabs@d:
  7160                           	opt stack 0
  7161  000030                     i2___flmul@b:
  7162                           	opt stack 0
  7163                           
  7164                           ; 4 bytes @ 0x2F
  7165  000030                     	ds	4
  7166  000034                     i2___flge@ff1:
  7167                           	opt stack 0
  7168  000034                     i2___flmul@a:
  7169                           	opt stack 0
  7170                           
  7171                           ; 4 bytes @ 0x33
  7172  000034                     	ds	4
  7173  000038                     ??i2___flmul:
  7174  000038                     i2___flge@ff2:
  7175                           	opt stack 0
  7176                           
  7177                           ; 4 bytes @ 0x37
  7178  000038                     	ds	4
  7179  00003C                     ??i2___flge:
  7180  00003C                     i2___flmul@sign:
  7181                           	opt stack 0
  7182                           
  7183                           ; 1 bytes @ 0x3B
  7184  00003C                     	ds	1
  7185  00003D                     i2___flmul@aexp:
  7186                           	opt stack 0
  7187                           
  7188                           ; 1 bytes @ 0x3C
  7189  00003D                     	ds	1
  7190  00003E                     i2___flmul@grs:
  7191                           	opt stack 0
  7192                           
  7193                           ; 4 bytes @ 0x3D
  7194  00003E                     	ds	4
  7195  000042                     i2___flmul@bexp:
  7196                           	opt stack 0
  7197                           
  7198                           ; 1 bytes @ 0x41
  7199  000042                     	ds	1
  7200  000043                     i2___flmul@prod:
  7201                           	opt stack 0
  7202                           
  7203                           ; 4 bytes @ 0x42
  7204  000043                     	ds	4
  7205  000047                     i2___flmul@temp:
  7206                           	opt stack 0
  7207                           
  7208                           ; 2 bytes @ 0x46
  7209  000047                     	ds	2
  7210  000049                     ?i2_fround:
  7211                           	opt stack 0
  7212  000049                     ?i2_scale:
  7213                           	opt stack 0
  7214  000049                     ?i2___fltol:
  7215                           	opt stack 0
  7216  000049                     i2___fltol@f1:
  7217                           	opt stack 0
  7218                           
  7219                           ; 4 bytes @ 0x48
  7220  000049                     	ds	4
  7221  00004D                     ??i2___fltol:
  7222  00004D                     i2_fround$4062:
  7223                           	opt stack 0
  7224  00004D                     i2_scale$4063:
  7225                           	opt stack 0
  7226                           
  7227                           ; 4 bytes @ 0x4C
  7228  00004D                     	ds	4
  7229  000051                     i2scale@scl:
  7230                           	opt stack 0
  7231  000051                     i2___fltol@sign1:
  7232                           	opt stack 0
  7233  000051                     i2_fround$4061:
  7234                           	opt stack 0
  7235                           
  7236                           ; 4 bytes @ 0x50
  7237  000051                     	ds	1
  7238  000052                     i2___fltol@exp1:
  7239                           	opt stack 0
  7240                           
  7241                           ; 1 bytes @ 0x51
  7242  000052                     	ds	3
  7243  000055                     i2fround@prec:
  7244                           	opt stack 0
  7245                           
  7246                           ; 1 bytes @ 0x54
  7247  000055                     	ds	1
  7248  000056                     ?i2___fladd:
  7249                           	opt stack 0
  7250  000056                     i2___fladd@b:
  7251                           	opt stack 0
  7252                           
  7253                           ; 4 bytes @ 0x55
  7254  000056                     	ds	4
  7255  00005A                     i2___fladd@a:
  7256                           	opt stack 0
  7257                           
  7258                           ; 4 bytes @ 0x59
  7259  00005A                     	ds	4
  7260  00005E                     tblptru	equ	0xFF8
  7261                           tblptrh	equ	0xFF7
  7262                           tblptrl	equ	0xFF6
  7263                           tablat	equ	0xFF5
  7264                           postinc0	equ	0xFEE
  7265                           wreg	equ	0xFE8
  7266                           postdec1	equ	0xFE5
  7267                           fsr1l	equ	0xFE1
  7268                           
  7269                           ; 1 bytes @ 0x5D
  7270 ;;
  7271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7272 ;;
  7273 ;; *************** function _main *****************
  7274 ;; Defined at:
  7275 ;;		line 453 in file "main.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;Total ram usage:        2 bytes
  7294 ;; Hardware stack levels required when called:   20
  7295 ;; This function calls:
  7296 ;;		_ADCC_SetADIInterruptHandler
  7297 ;;		_SYSTEM_Initialize
  7298 ;;		_TMR6_SetInterruptHandler
  7299 ;;		_TMR7_SetInterruptHandler
  7300 ;;		_getCauseOfReset
  7301 ;;		_terminal_clearTerminal
  7302 ;;		_terminal_ringBufferPull
  7303 ;;		_terminal_setCursorHome
  7304 ;;		_terminal_textAttributesReset
  7305 ;; This function is called by:
  7306 ;;		Startup code after reset
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text0
  7311  0172CE                     __ptext0:
  7312                           	opt stack 0
  7313  0172CE                     _main:
  7314                           	opt stack 11
  7315                           
  7316                           ;main.c: 457: reset_cause = getCauseOfReset();
  7317                           
  7318                           ;incstack = 0
  7319  0172CE  EC28  F0BC         	call	_getCauseOfReset	;wreg free
  7320  0172D2  0102               	movlb	2	; () banked
  7321  0172D4  6FDD               	movwf	_reset_cause& (0+255),b
  7322                           
  7323                           ; BSR set to: 2
  7324                           ;main.c: 461: _delay((unsigned long)((250)*(64000000/4000.0)));
  7325  0172D6  0E15               	movlw	21
  7326  0172D8  0101               	movlb	1	; () banked
  7327  0172DA  6FCA               	movwf	(??_main+1)& (0+255),b
  7328  0172DC  0E4B               	movlw	75
  7329  0172DE  6FC9               	movwf	??_main& (0+255),b
  7330  0172E0  0EBE               	movlw	190
  7331  0172E2                     u17737:
  7332  0172E2  2EE8               	decfsz	wreg,f,c
  7333  0172E4  D7FE               	bra	u17737
  7334  0172E6  2FC9               	decfsz	??_main& (0+255),f,b
  7335  0172E8  D7FC               	bra	u17737
  7336  0172EA  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  7337  0172EC  D7FA               	bra	u17737
  7338  0172EE  F000               	nop	
  7339                           
  7340                           ;main.c: 464: SYSTEM_Initialize();
  7341  0172F0  EC13  F0BF         	call	_SYSTEM_Initialize	;wreg free
  7342                           
  7343                           ;main.c: 467: LATGbits.LATG0 = 0;
  7344  0172F4  907F               	bcf	3967,0,c	;volatile
  7345                           
  7346                           ;main.c: 468: LATGbits.LATG1 = 0;
  7347  0172F6  927F               	bcf	3967,1,c	;volatile
  7348                           
  7349                           ;main.c: 469: load_enable = 0;
  7350  0172F8  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7351                           
  7352                           ;main.c: 472: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7353  0172FA  0ED0               	movlw	low _heartbeatTimerCallback
  7354  0172FC  0101               	movlb	1	; () banked
  7355  0172FE  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7356  017300  0E7B               	movlw	high _heartbeatTimerCallback
  7357  017302  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7358  017304  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7359  017306  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7360  017308  EC7A  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
  7361                           
  7362                           ;main.c: 475: ADCC_SetADIInterruptHandler(ADCPostProcessingCallback);
  7363  01730C  0EEA               	movlw	low _ADCPostProcessingCallback
  7364  01730E  0101               	movlb	1	; () banked
  7365  017310  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  7366  017312  0E22               	movlw	high _ADCPostProcessingCallback
  7367  017314  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  7368  017316  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7369  017318  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  7370  01731A  EC96  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7371                           
  7372                           ;main.c: 478: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7373  01731E  0E10               	movlw	low _acquisitionTimerCallback
  7374  017320  0101               	movlb	1	; () banked
  7375  017322  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7376  017324  0E6D               	movlw	high _acquisitionTimerCallback
  7377  017326  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7378  017328  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7379  01732A  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7380  01732C  EC73  F0C0         	call	_TMR7_SetInterruptHandler	;wreg free
  7381                           
  7382                           ;main.c: 481: (INTCONbits.GIEH = 1);
  7383  017330  8EF2               	bsf	intcon,7,c	;volatile
  7384                           
  7385                           ;main.c: 484: (INTCONbits.GIEL = 1);
  7386  017332  8CF2               	bsf	intcon,6,c	;volatile
  7387                           
  7388                           ;main.c: 487: VCC_overvoltage_flag = 0;
  7389  017334  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  7390                           
  7391                           ;main.c: 490: terminal_clearTerminal();
  7392  017336  EC5C  F0C0         	call	_terminal_clearTerminal	;wreg free
  7393                           
  7394                           ;main.c: 491: terminal_setCursorHome();
  7395  01733A  EC4C  F0C0         	call	_terminal_setCursorHome	;wreg free
  7396                           
  7397                           ;main.c: 492: terminal_textAttributesReset();
  7398  01733E  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  7399  017342                     
  7400                           ;main.c: 496: {
  7401                           ;main.c: 499: if (eusart2RxStringReady) {
  7402  017342  0100               	movlb	0	; () banked
  7403  017344  A1FF               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7404  017346  D7FD               	goto	l996
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;main.c: 501: terminal_ringBufferPull();
  7408  017348  EC42  F0B3         	call	_terminal_ringBufferPull	;wreg free
  7409  01734C  D7FA               	goto	l996
  7410  01734E                     __end_of_main:
  7411                           	opt stack 0
  7412                           tblptru	equ	0xFF8
  7413                           tblptrh	equ	0xFF7
  7414                           tblptrl	equ	0xFF6
  7415                           tablat	equ	0xFF5
  7416                           intcon	equ	0xFF2
  7417                           postinc0	equ	0xFEE
  7418                           wreg	equ	0xFE8
  7419                           postdec1	equ	0xFE5
  7420                           fsr1l	equ	0xFE1
  7421                           
  7422 ;; *************** function _terminal_setCursorHome *****************
  7423 ;; Defined at:
  7424 ;;		line 85 in file "ring_buffer_interface.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:   16
  7445 ;; This function calls:
  7446 ;;		_printf
  7447 ;; This function is called by:
  7448 ;;		_main
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text1
  7453  018098                     __ptext1:
  7454                           	opt stack 0
  7455  018098                     _terminal_setCursorHome:
  7456                           	opt stack 14
  7457                           
  7458                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7459                           
  7460                           ;incstack = 0
  7461  018098  0EB9               	movlw	low STR_3
  7462  01809A  0101               	movlb	1	; () banked
  7463  01809C  6F7C               	movwf	printf@f& (0+255),b
  7464  01809E  0EFF               	movlw	high STR_3
  7465  0180A0  6F7D               	movwf	(printf@f+1)& (0+255),b
  7466  0180A2  EC52  F086         	call	_printf	;wreg free
  7467  0180A6  0012               	return		;funcret
  7468  0180A8                     __end_of_terminal_setCursorHome:
  7469                           	opt stack 0
  7470                           tblptru	equ	0xFF8
  7471                           tblptrh	equ	0xFF7
  7472                           tblptrl	equ	0xFF6
  7473                           tablat	equ	0xFF5
  7474                           intcon	equ	0xFF2
  7475                           postinc0	equ	0xFEE
  7476                           wreg	equ	0xFE8
  7477                           postdec1	equ	0xFE5
  7478                           fsr1l	equ	0xFE1
  7479                           
  7480 ;; *************** function _terminal_ringBufferPull *****************
  7481 ;; Defined at:
  7482 ;;		line 12 in file "ring_buffer_interface.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  index           2  197[BANK1 ] int 
  7487 ;;  index           2  199[BANK1 ] int 
  7488 ;;  charNumber      2  195[BANK1 ] int 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7500 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;Total ram usage:        9 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:   19
  7505 ;; This function calls:
  7506 ;;		_EUSART2_Read
  7507 ;;		_ringBufferLUT
  7508 ;;		_strlen
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text2
  7515  016684                     __ptext2:
  7516                           	opt stack 0
  7517  016684                     _terminal_ringBufferPull:
  7518                           	opt stack 11
  7519                           
  7520                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  7521                           
  7522                           ;incstack = 0
  7523  016684  C1DE  F1C3         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  7524  016688  0101               	movlb	1	; () banked
  7525  01668A  6BC4               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  7526                           
  7527                           ; BSR set to: 1
  7528                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  7529  01668C  0E00               	movlw	0
  7530  01668E  6FC8               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  7531  016690  0E00               	movlw	0
  7532  016692  6FC7               	movwf	terminal_ringBufferPull@index& (0+255),b
  7533  016694                     l13818:
  7534                           
  7535                           ; BSR set to: 1
  7536  016694  BFC8               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  7537  016696  D006               	goto	l1035
  7538  016698  51C8               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7539  01669A  E10F               	bnz	l13828
  7540  01669C  0E40               	movlw	64
  7541  01669E  5DC7               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  7542  0166A0  B0D8               	btfsc	status,0,c
  7543  0166A2  D00B               	goto	u16780
  7544  0166A4                     l1035:
  7545                           
  7546                           ; BSR set to: 1
  7547                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  7548                           
  7549                           ; BSR set to: 1
  7550  0166A4  0E79               	movlw	low _line
  7551  0166A6  25C7               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  7552  0166A8  6ED9               	movwf	fsr2l,c
  7553  0166AA  0E02               	movlw	high _line
  7554  0166AC  21C8               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7555  0166AE  6EDA               	movwf	fsr2h,c
  7556  0166B0  0E00               	movlw	0
  7557  0166B2  6EDF               	movwf	indf2,c
  7558                           
  7559                           ; BSR set to: 1
  7560  0166B4  4BC7               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  7561  0166B6  2BC8               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  7562  0166B8  D7ED               	goto	l13818
  7563  0166BA                     u16780:
  7564  0166BA                     l13828:
  7565                           
  7566                           ; BSR set to: 1
  7567                           ;ring_buffer_interface.c: 21: }
  7568                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  7569  0166BA  0E00               	movlw	0
  7570  0166BC  6FC6               	movwf	(terminal_ringBufferPull@index_2365+1)& (0+255),b
  7571  0166BE  0E00               	movlw	0
  7572  0166C0  6FC5               	movwf	terminal_ringBufferPull@index_2365& (0+255),b
  7573  0166C2  D00E               	goto	l1037
  7574  0166C4                     
  7575                           ; BSR set to: 1
  7576                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  7577                           
  7578                           ; BSR set to: 1
  7579  0166C4  EC39  F0BD         	call	_EUSART2_Read	;wreg free
  7580  0166C8  0101               	movlb	1	; () banked
  7581  0166CA  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7582  0166CC  0E79               	movlw	low _line
  7583  0166CE  25C5               	addwf	terminal_ringBufferPull@index_2365& (0+255),w,b
  7584  0166D0  6ED9               	movwf	fsr2l,c
  7585  0166D2  0E02               	movlw	high _line
  7586  0166D4  21C6               	addwfc	(terminal_ringBufferPull@index_2365+1)& (0+255),w,b
  7587  0166D6  6EDA               	movwf	fsr2h,c
  7588  0166D8  C1C0  FFDF         	movff	??_terminal_ringBufferPull,indf2
  7589                           
  7590                           ; BSR set to: 1
  7591  0166DC  4BC5               	infsnz	terminal_ringBufferPull@index_2365& (0+255),f,b
  7592  0166DE  2BC6               	incf	(terminal_ringBufferPull@index_2365+1)& (0+255),f,b
  7593  0166E0                     l1037:
  7594                           
  7595                           ; BSR set to: 1
  7596                           
  7597                           ; BSR set to: 1
  7598  0166E0  51C3               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  7599  0166E2  5DC5               	subwf	terminal_ringBufferPull@index_2365& (0+255),w,b
  7600  0166E4  51C6               	movf	(terminal_ringBufferPull@index_2365+1)& (0+255),w,b
  7601  0166E6  0A80               	xorlw	128
  7602  0166E8  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7603  0166EA  51C4               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  7604  0166EC  0A80               	xorlw	128
  7605  0166EE  59C0               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  7606  0166F0  A0D8               	btfss	status,0,c
  7607  0166F2  D7E8               	goto	l1038
  7608                           
  7609                           ; BSR set to: 1
  7610                           ;ring_buffer_interface.c: 28: }
  7611                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  7612  0166F4  C0F4  F1DF         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  7613                           
  7614                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  7615                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  7616  0166F8  D017               	goto	l1040
  7617  0166FA                     
  7618                           ; BSR set to: 1
  7619                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  7620                           
  7621                           ; BSR set to: 1
  7622  0166FA  0EFF               	movlw	255
  7623  0166FC  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7624  0166FE  0EFF               	movlw	255
  7625  016700  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7626  016702  0E79               	movlw	low _line
  7627  016704  6F17               	movwf	strlen@s& (0+255),b
  7628  016706  0E02               	movlw	high _line
  7629  016708  6F18               	movwf	(strlen@s+1)& (0+255),b
  7630  01670A  ECFC  F0BB         	call	_strlen	;wreg free
  7631  01670E  0101               	movlb	1	; () banked
  7632  016710  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7633  016712  2717               	addwf	?_strlen& (0+255),f,b
  7634  016714  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7635  016716  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7636  016718  0E79               	movlw	low _line
  7637  01671A  2517               	addwf	?_strlen& (0+255),w,b
  7638  01671C  6ED9               	movwf	fsr2l,c
  7639  01671E  0E02               	movlw	high _line
  7640  016720  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7641  016722  6EDA               	movwf	fsr2h,c
  7642  016724  0E00               	movlw	0
  7643  016726  6EDF               	movwf	indf2,c
  7644  016728                     l1040:
  7645                           
  7646                           ; BSR set to: 1
  7647  016728  0EFF               	movlw	255
  7648  01672A  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7649  01672C  0EFF               	movlw	255
  7650  01672E  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7651  016730  0E79               	movlw	low _line
  7652  016732  6F17               	movwf	strlen@s& (0+255),b
  7653  016734  0E02               	movlw	high _line
  7654  016736  6F18               	movwf	(strlen@s+1)& (0+255),b
  7655  016738  ECFC  F0BB         	call	_strlen	;wreg free
  7656  01673C  0101               	movlb	1	; () banked
  7657  01673E  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7658  016740  2717               	addwf	?_strlen& (0+255),f,b
  7659  016742  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7660  016744  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7661  016746  0E79               	movlw	low _line
  7662  016748  2517               	addwf	?_strlen& (0+255),w,b
  7663  01674A  6ED9               	movwf	fsr2l,c
  7664  01674C  0E02               	movlw	high _line
  7665  01674E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7666  016750  6EDA               	movwf	fsr2h,c
  7667  016752  0E0A               	movlw	10
  7668  016754  18DE               	xorwf	postinc2,w,c
  7669  016756  B4D8               	btfsc	status,2,c
  7670  016758  D7D0               	goto	l1041
  7671                           
  7672                           ; BSR set to: 1
  7673  01675A  0EFF               	movlw	255
  7674  01675C  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7675  01675E  0EFF               	movlw	255
  7676  016760  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7677  016762  0E79               	movlw	low _line
  7678  016764  6F17               	movwf	strlen@s& (0+255),b
  7679  016766  0E02               	movlw	high _line
  7680  016768  6F18               	movwf	(strlen@s+1)& (0+255),b
  7681  01676A  ECFC  F0BB         	call	_strlen	;wreg free
  7682  01676E  0101               	movlb	1	; () banked
  7683  016770  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7684  016772  2717               	addwf	?_strlen& (0+255),f,b
  7685  016774  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7686  016776  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7687  016778  0E79               	movlw	low _line
  7688  01677A  2517               	addwf	?_strlen& (0+255),w,b
  7689  01677C  6ED9               	movwf	fsr2l,c
  7690  01677E  0E02               	movlw	high _line
  7691  016780  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7692  016782  6EDA               	movwf	fsr2h,c
  7693  016784  0E0D               	movlw	13
  7694  016786  18DE               	xorwf	postinc2,w,c
  7695  016788  B4D8               	btfsc	status,2,c
  7696  01678A  D7B7               	goto	l1041
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;ring_buffer_interface.c: 40: }
  7700                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  7701  01678C  0100               	movlb	0	; () banked
  7702  01678E  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  7706  016790  0E79               	movlw	low _line
  7707  016792  0101               	movlb	1	; () banked
  7708  016794  6FBC               	movwf	ringBufferLUT@line& (0+255),b
  7709  016796  0E02               	movlw	high _line
  7710  016798  6FBD               	movwf	(ringBufferLUT@line+1)& (0+255),b
  7711  01679A  EC00  F080         	call	_ringBufferLUT	;wreg free
  7712  01679E  0012               	return		;funcret
  7713  0167A0                     __end_of_terminal_ringBufferPull:
  7714                           	opt stack 0
  7715                           tblptru	equ	0xFF8
  7716                           tblptrh	equ	0xFF7
  7717                           tblptrl	equ	0xFF6
  7718                           tablat	equ	0xFF5
  7719                           intcon	equ	0xFF2
  7720                           postinc0	equ	0xFEE
  7721                           wreg	equ	0xFE8
  7722                           postdec1	equ	0xFE5
  7723                           fsr1l	equ	0xFE1
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           fsr2h	equ	0xFDA
  7727                           fsr2l	equ	0xFD9
  7728                           status	equ	0xFD8
  7729                           
  7730 ;; *************** function _ringBufferLUT *****************
  7731 ;; Defined at:
  7732 ;;		line 43 in file "ring_buffer_LUT.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  line            2  188[BANK1 ] PTR unsigned char 
  7735 ;;		 -> line(64), 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  angle_degree    4   22[BANK3 ] PTR unsigned char 
  7738 ;;  index           2   29[BANK3 ] int 
  7739 ;;  channel_name   22    0[BANK3 ] unsigned char [22]
  7740 ;;  userID          2   33[BANK3 ] int 
  7741 ;;  arg_buff        3   26[BANK3 ] unsigned char [3]
  7742 ;;  percentage      2   31[BANK3 ] int 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      void 
  7745 ;; Registers used:
  7746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7752 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;      Locals:         0       0       0       0      35       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7755 ;;      Totals:         0       0       4       0      35       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;Total ram usage:       39 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:   18
  7759 ;; This function calls:
  7760 ;;		_TMR7_StartTimer
  7761 ;;		___fladd
  7762 ;;		___fldiv
  7763 ;;		___flmul
  7764 ;;		___flneg
  7765 ;;		___wmul
  7766 ;;		___xxtofl
  7767 ;;		_atoi
  7768 ;;		_getCauseOfResetString
  7769 ;;		_getDeviceID
  7770 ;;		_getDeviceIDString
  7771 ;;		_getMajorRevisionID
  7772 ;;		_getMinorRevisionID
  7773 ;;		_getUserID
  7774 ;;		_printf
  7775 ;;		_strcmp
  7776 ;;		_strcpy
  7777 ;;		_strstr
  7778 ;;		_terminal_printNewline
  7779 ;;		_terminal_textAttributes
  7780 ;;		_terminal_textAttributesReset
  7781 ;; This function is called by:
  7782 ;;		_terminal_ringBufferPull
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text3
  7787  010000                     __ptext3:
  7788                           	opt stack 0
  7789  010000                     _ringBufferLUT:
  7790                           	opt stack 11
  7791                           
  7792                           ;ring_buffer_LUT.c: 49: if((0 == strcmp(line, "Reset"))) {
  7793                           
  7794                           ;incstack = 0
  7795  010000  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7796  010004  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7797  010008  0E28               	movlw	low (STR_123+10)
  7798  01000A  0101               	movlb	1	; () banked
  7799  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  7800  01000E  0EFE               	movlw	high (STR_123+10)
  7801  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7802  010012  EC51  F0BC         	call	_strcmp	;wreg free
  7803  010016  0101               	movlb	1	; () banked
  7804  010018  5117               	movf	?_strcmp& (0+255),w,b
  7805  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7806  01001C  A4D8               	btfss	status,2,c
  7807  01001E  D00F               	goto	l1184
  7808                           
  7809                           ; BSR set to: 1
  7810                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  7811  010020  0EB0               	movlw	low STR_2
  7812  010022  6F7C               	movwf	printf@f& (0+255),b
  7813  010024  0EFF               	movlw	high STR_2
  7814  010026  6F7D               	movwf	(printf@f+1)& (0+255),b
  7815  010028  EC52  F086         	call	_printf	;wreg free
  7816                           
  7817                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  7818  01002C  0EB9               	movlw	low STR_3
  7819  01002E  0101               	movlb	1	; () banked
  7820  010030  6F7C               	movwf	printf@f& (0+255),b
  7821  010032  0EFF               	movlw	high STR_3
  7822  010034  6F7D               	movwf	(printf@f+1)& (0+255),b
  7823  010036  EC52  F086         	call	_printf	;wreg free
  7824  01003A  00FF               	reset		;# 
  7825                           
  7826                           ;ring_buffer_LUT.c: 60: }
  7827  01003C  0012               	return	
  7828  01003E                     l1184:
  7829                           
  7830                           ;ring_buffer_LUT.c: 63: else if((0 == strcmp(line, "Clear"))) {
  7831  01003E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7832  010042  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7833  010046  0EA0               	movlw	low STR_44
  7834  010048  0101               	movlb	1	; () banked
  7835  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  7836  01004C  0EFF               	movlw	high STR_44
  7837  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7838  010050  EC51  F0BC         	call	_strcmp	;wreg free
  7839  010054  0101               	movlb	1	; () banked
  7840  010056  5117               	movf	?_strcmp& (0+255),w,b
  7841  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7842  01005A  A4D8               	btfss	status,2,c
  7843  01005C  D00E               	goto	l1186
  7844                           
  7845                           ; BSR set to: 1
  7846                           ;ring_buffer_LUT.c: 66: printf("\033[2J");
  7847  01005E  0EB0               	movlw	low STR_2
  7848  010060  6F7C               	movwf	printf@f& (0+255),b
  7849  010062  0EFF               	movlw	high STR_2
  7850  010064  6F7D               	movwf	(printf@f+1)& (0+255),b
  7851  010066  EC52  F086         	call	_printf	;wreg free
  7852                           
  7853                           ;ring_buffer_LUT.c: 69: printf("\033[H");
  7854  01006A  0EB9               	movlw	low STR_3
  7855  01006C  0101               	movlb	1	; () banked
  7856  01006E  6F7C               	movwf	printf@f& (0+255),b
  7857  010070  0EFF               	movlw	high STR_3
  7858  010072  6F7D               	movwf	(printf@f+1)& (0+255),b
  7859  010074  EC52  F086         	call	_printf	;wreg free
  7860                           
  7861                           ;ring_buffer_LUT.c: 71: }
  7862  010078  0012               	return	
  7863  01007A                     l1186:
  7864                           
  7865                           ;ring_buffer_LUT.c: 74: else if((0 == strcmp(line, "Cause of Reset?"))) {
  7866  01007A  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7867  01007E  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7868  010082  0E5E               	movlw	low STR_47
  7869  010084  0101               	movlb	1	; () banked
  7870  010086  6F19               	movwf	strcmp@s2& (0+255),b
  7871  010088  0EFE               	movlw	high STR_47
  7872  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7873  01008C  EC51  F0BC         	call	_strcmp	;wreg free
  7874  010090  0101               	movlb	1	; () banked
  7875  010092  5117               	movf	?_strcmp& (0+255),w,b
  7876  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7877  010096  A4D8               	btfss	status,2,c
  7878  010098  D019               	goto	l1188
  7879                           
  7880                           ; BSR set to: 1
  7881                           ;ring_buffer_LUT.c: 76: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7882  01009A  0E00               	movlw	0
  7883  01009C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  7884  01009E  0E00               	movlw	0
  7885  0100A0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7886  0100A2  0E02               	movlw	2
  7887  0100A4  EC1E  F09A         	call	_terminal_textAttributes
  7888                           
  7889                           ;ring_buffer_LUT.c: 79: printf("The cause of the most recent device reset was: %s\n\r",
  7890                           ;ring_buffer_LUT.c: 80: getCauseOfResetString(reset_cause));
  7891  0100A8  0E7B               	movlw	low STR_48
  7892  0100AA  0101               	movlb	1	; () banked
  7893  0100AC  6F7C               	movwf	printf@f& (0+255),b
  7894  0100AE  0EF9               	movlw	high STR_48
  7895  0100B0  6F7D               	movwf	(printf@f+1)& (0+255),b
  7896  0100B2  0102               	movlb	2	; () banked
  7897  0100B4  51DD               	movf	_reset_cause& (0+255),w,b
  7898  0100B6  ECE3  F0BE         	call	_getCauseOfResetString
  7899  0100BA  C117  F17E         	movff	?_getCauseOfResetString,?_printf+2
  7900  0100BE  C118  F17F         	movff	?_getCauseOfResetString+1,?_printf+3
  7901  0100C2  EC52  F086         	call	_printf	;wreg free
  7902                           
  7903                           ;ring_buffer_LUT.c: 82: terminal_textAttributesReset();
  7904  0100C6  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  7905                           
  7906                           ;ring_buffer_LUT.c: 84: }
  7907  0100CA  0012               	return	
  7908  0100CC                     l1188:
  7909                           
  7910                           ;ring_buffer_LUT.c: 87: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  7911  0100CC  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7912  0100D0  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7913  0100D4  0E9A               	movlw	low STR_49
  7914  0100D6  0101               	movlb	1	; () banked
  7915  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
  7916  0100DA  0EFF               	movlw	high STR_49
  7917  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7918  0100DE  EC51  F0BC         	call	_strcmp	;wreg free
  7919  0100E2  0101               	movlb	1	; () banked
  7920  0100E4  5117               	movf	?_strcmp& (0+255),w,b
  7921  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7922  0100E8  B4D8               	btfsc	status,2,c
  7923  0100EA  D00F               	goto	u15710
  7924                           
  7925                           ; BSR set to: 1
  7926  0100EC  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7927  0100F0  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7928  0100F4  0EB5               	movlw	low STR_50
  7929  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
  7930  0100F8  0EFF               	movlw	high STR_50
  7931  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7932  0100FC  EC51  F0BC         	call	_strcmp	;wreg free
  7933  010100  0101               	movlb	1	; () banked
  7934  010102  5117               	movf	?_strcmp& (0+255),w,b
  7935  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7936  010106  A4D8               	btfss	status,2,c
  7937  010108  D018               	goto	l1190
  7938  01010A                     u15710:
  7939                           
  7940                           ; BSR set to: 1
  7941                           ;ring_buffer_LUT.c: 89: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7942                           
  7943                           ; BSR set to: 1
  7944  01010A  0E00               	movlw	0
  7945  01010C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  7946  01010E  0E00               	movlw	0
  7947  010110  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7948  010112  0E02               	movlw	2
  7949  010114  EC1E  F09A         	call	_terminal_textAttributes
  7950                           
  7951                           ;ring_buffer_LUT.c: 90: printf("AC Power Meter\n\r");
  7952  010118  0EFC               	movlw	low STR_51
  7953  01011A  0101               	movlb	1	; () banked
  7954  01011C  6F7C               	movwf	printf@f& (0+255),b
  7955  01011E  0EFD               	movlw	high STR_51
  7956  010120  6F7D               	movwf	(printf@f+1)& (0+255),b
  7957  010122  EC52  F086         	call	_printf	;wreg free
  7958                           
  7959                           ;ring_buffer_LUT.c: 91: printf("Marquette University ELEN 3035 Final Project\n\r");
  7960  010126  0EDF               	movlw	low STR_52
  7961  010128  0101               	movlb	1	; () banked
  7962  01012A  6F7C               	movwf	printf@f& (0+255),b
  7963  01012C  0EF9               	movlw	high STR_52
  7964  01012E  6F7D               	movwf	(printf@f+1)& (0+255),b
  7965  010130  EC52  F086         	call	_printf	;wreg free
  7966                           
  7967                           ;ring_buffer_LUT.c: 92: terminal_textAttributesReset();
  7968  010134  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  7969                           
  7970                           ;ring_buffer_LUT.c: 94: }
  7971  010138  0012               	return	
  7972  01013A                     l1190:
  7973                           
  7974                           ;ring_buffer_LUT.c: 97: else if((0 == strcmp(line, "Device ID?"))) {
  7975  01013A  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7976  01013E  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7977  010142  0E5C               	movlw	low STR_53
  7978  010144  0101               	movlb	1	; () banked
  7979  010146  6F19               	movwf	strcmp@s2& (0+255),b
  7980  010148  0EFF               	movlw	high STR_53
  7981  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7982  01014C  EC51  F0BC         	call	_strcmp	;wreg free
  7983  010150  0101               	movlb	1	; () banked
  7984  010152  5117               	movf	?_strcmp& (0+255),w,b
  7985  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7986  010156  A4D8               	btfss	status,2,c
  7987  010158  D023               	goto	l1194
  7988                           
  7989                           ; BSR set to: 1
  7990                           ;ring_buffer_LUT.c: 99: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7991  01015A  0E00               	movlw	0
  7992  01015C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  7993  01015E  0E00               	movlw	0
  7994  010160  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7995  010162  0E02               	movlw	2
  7996  010164  EC1E  F09A         	call	_terminal_textAttributes
  7997                           
  7998                           ;ring_buffer_LUT.c: 102: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  7999                           ;ring_buffer_LUT.c: 103: "part number of %s\n\r",
  8000                           ;ring_buffer_LUT.c: 104: getDeviceID(),
  8001                           ;ring_buffer_LUT.c: 105: getDeviceIDString(getDeviceID()));
  8002  010168  0ED0               	movlw	low STR_54
  8003  01016A  0101               	movlb	1	; () banked
  8004  01016C  6F7C               	movwf	printf@f& (0+255),b
  8005  01016E  0EF6               	movlw	high STR_54
  8006  010170  6F7D               	movwf	(printf@f+1)& (0+255),b
  8007  010172  ECD9  F0BF         	call	_getDeviceID	;wreg free
  8008  010176  C122  F17E         	movff	?_getDeviceID,?_printf+2
  8009  01017A  C123  F17F         	movff	?_getDeviceID+1,?_printf+3
  8010  01017E  ECD9  F0BF         	call	_getDeviceID	;wreg free
  8011  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  8012  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  8013  01018A  ECCC  F0BB         	call	_getDeviceIDString	;wreg free
  8014  01018E  C124  F180         	movff	?_getDeviceIDString,?_printf+4
  8015  010192  C125  F181         	movff	?_getDeviceIDString+1,?_printf+5
  8016  010196  EC52  F086         	call	_printf	;wreg free
  8017                           
  8018                           ;ring_buffer_LUT.c: 107: terminal_textAttributesReset();
  8019  01019A  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8020                           
  8021                           ;ring_buffer_LUT.c: 109: }
  8022  01019E  0012               	return	
  8023  0101A0                     l1194:
  8024                           
  8025                           ;ring_buffer_LUT.c: 112: else if((0 == strcmp(line, "Revision ID?"))) {
  8026  0101A0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8027  0101A4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8028  0101A8  0E1D               	movlw	low STR_55
  8029  0101AA  0101               	movlb	1	; () banked
  8030  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
  8031  0101AE  0EFF               	movlw	high STR_55
  8032  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8033  0101B2  EC51  F0BC         	call	_strcmp	;wreg free
  8034  0101B6  0101               	movlb	1	; () banked
  8035  0101B8  5117               	movf	?_strcmp& (0+255),w,b
  8036  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8037  0101BC  A4D8               	btfss	status,2,c
  8038  0101BE  D022               	goto	l1196
  8039                           
  8040                           ; BSR set to: 1
  8041                           ;ring_buffer_LUT.c: 114: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8042  0101C0  0E00               	movlw	0
  8043  0101C2  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8044  0101C4  0E00               	movlw	0
  8045  0101C6  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8046  0101C8  0E02               	movlw	2
  8047  0101CA  EC1E  F09A         	call	_terminal_textAttributes
  8048                           
  8049                           ;ring_buffer_LUT.c: 117: printf("Device silicon revision ID as stored in Flash is: %c%d\
      +                          n\r",
  8050                           ;ring_buffer_LUT.c: 118: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  8051  0101CE  0E67               	movlw	low STR_56
  8052  0101D0  0101               	movlb	1	; () banked
  8053  0101D2  6F7C               	movwf	printf@f& (0+255),b
  8054  0101D4  0EF8               	movlw	high STR_56
  8055  0101D6  6F7D               	movwf	(printf@f+1)& (0+255),b
  8056  0101D8  EC08  F0BE         	call	_getMajorRevisionID	;wreg free
  8057  0101DC  0101               	movlb	1	; () banked
  8058  0101DE  6FBE               	movwf	??_ringBufferLUT& (0+255),b
  8059  0101E0  0E41               	movlw	65
  8060  0101E2  25BE               	addwf	??_ringBufferLUT& (0+255),w,b
  8061  0101E4  6F7E               	movwf	(?_printf+2)& (0+255),b
  8062  0101E6  6B7F               	clrf	(?_printf+3)& (0+255),b
  8063  0101E8  0E00               	movlw	0
  8064  0101EA  237F               	addwfc	(?_printf+3)& (0+255),f,b
  8065  0101EC  EC7D  F0BF         	call	_getMinorRevisionID	;wreg free
  8066  0101F0  0101               	movlb	1	; () banked
  8067  0101F2  6FBF               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8068  0101F4  51BF               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  8069  0101F6  6F80               	movwf	(?_printf+4)& (0+255),b
  8070  0101F8  6B81               	clrf	(?_printf+5)& (0+255),b
  8071  0101FA  EC52  F086         	call	_printf	;wreg free
  8072                           
  8073                           ;ring_buffer_LUT.c: 120: terminal_textAttributesReset();
  8074  0101FE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8075                           
  8076                           ;ring_buffer_LUT.c: 122: }
  8077  010202  0012               	return	
  8078  010204                     l1196:
  8079                           
  8080                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "User IDs?"))) {
  8081  010204  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8082  010208  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8083  01020C  0E72               	movlw	low STR_57
  8084  01020E  0101               	movlb	1	; () banked
  8085  010210  6F19               	movwf	strcmp@s2& (0+255),b
  8086  010212  0EFF               	movlw	high STR_57
  8087  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8088  010216  EC51  F0BC         	call	_strcmp	;wreg free
  8089  01021A  0101               	movlb	1	; () banked
  8090  01021C  5117               	movf	?_strcmp& (0+255),w,b
  8091  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8092  010220  A4D8               	btfss	status,2,c
  8093  010222  D03E               	goto	l1198
  8094                           
  8095                           ; BSR set to: 1
  8096                           ;ring_buffer_LUT.c: 127: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8097  010224  0E00               	movlw	0
  8098  010226  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8099  010228  0E00               	movlw	0
  8100  01022A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8101  01022C  0E02               	movlw	2
  8102  01022E  EC1E  F09A         	call	_terminal_textAttributes
  8103                           
  8104                           ;ring_buffer_LUT.c: 129: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8105  010232  0EAE               	movlw	low STR_58
  8106  010234  0101               	movlb	1	; () banked
  8107  010236  6F7C               	movwf	printf@f& (0+255),b
  8108  010238  0EF7               	movlw	high STR_58
  8109  01023A  6F7D               	movwf	(printf@f+1)& (0+255),b
  8110  01023C  EC52  F086         	call	_printf	;wreg free
  8111                           
  8112                           ;ring_buffer_LUT.c: 132: for (int userID = 0; userID <= 7; userID++) {
  8113  010240  0E00               	movlw	0
  8114  010242  0103               	movlb	3	; () banked
  8115  010244  6FA2               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8116  010246  0E00               	movlw	0
  8117  010248  6FA1               	movwf	ringBufferLUT@userID& (0+255),b
  8118  01024A                     l13228:
  8119                           
  8120                           ; BSR set to: 3
  8121  01024A  BFA2               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8122  01024C  D006               	goto	l1199
  8123  01024E  51A2               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8124  010250  E124               	bnz	l13238
  8125  010252  0E08               	movlw	8
  8126  010254  5DA1               	subwf	ringBufferLUT@userID& (0+255),w,b
  8127  010256  B0D8               	btfsc	status,0,c
  8128  010258  D020               	goto	u15760
  8129  01025A                     l1199:
  8130                           
  8131                           ; BSR set to: 3
  8132                           ;ring_buffer_LUT.c: 134: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  8133                           ;ring_buffer_LUT.c: 135: userID,
  8134                           ;ring_buffer_LUT.c: 136: (2 * userID),
  8135                           ;ring_buffer_LUT.c: 137: getUserID(userID));
  8136                           
  8137                           ; BSR set to: 3
  8138  01025A  0E10               	movlw	low STR_59
  8139  01025C  0101               	movlb	1	; () banked
  8140  01025E  6F7C               	movwf	printf@f& (0+255),b
  8141  010260  0EF9               	movlw	high STR_59
  8142  010262  6F7D               	movwf	(printf@f+1)& (0+255),b
  8143  010264  C3A1  F17E         	movff	ringBufferLUT@userID,?_printf+2
  8144  010268  C3A2  F17F         	movff	ringBufferLUT@userID+1,?_printf+3
  8145  01026C  90D8               	bcf	status,0,c
  8146  01026E  0103               	movlb	3	; () banked
  8147  010270  35A1               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8148  010272  0101               	movlb	1	; () banked
  8149  010274  6F80               	movwf	(?_printf+4)& (0+255),b
  8150  010276  0103               	movlb	3	; () banked
  8151  010278  35A2               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8152  01027A  0101               	movlb	1	; () banked
  8153  01027C  6F81               	movwf	(?_printf+5)& (0+255),b
  8154  01027E  0103               	movlb	3	; () banked
  8155  010280  51A1               	movf	ringBufferLUT@userID& (0+255),w,b
  8156  010282  ECA5  F0BD         	call	_getUserID
  8157  010286  C122  F182         	movff	?_getUserID,?_printf+6
  8158  01028A  C123  F183         	movff	?_getUserID+1,?_printf+7
  8159  01028E  EC52  F086         	call	_printf	;wreg free
  8160  010292  0103               	movlb	3	; () banked
  8161  010294  4BA1               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8162  010296  2BA2               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8163  010298  D7D8               	goto	l13228
  8164  01029A                     u15760:
  8165  01029A                     l13238:
  8166                           
  8167                           ; BSR set to: 3
  8168                           ;ring_buffer_LUT.c: 139: }
  8169                           ;ring_buffer_LUT.c: 141: terminal_textAttributesReset();
  8170  01029A  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8171                           
  8172                           ;ring_buffer_LUT.c: 143: }
  8173  01029E  0012               	return	
  8174  0102A0                     l1198:
  8175                           
  8176                           ;ring_buffer_LUT.c: 146: else if((0 == strcmp(line, "ADC Error?"))) {
  8177  0102A0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8178  0102A4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8179  0102A8  0E67               	movlw	low STR_60
  8180  0102AA  0101               	movlb	1	; () banked
  8181  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
  8182  0102AE  0EFF               	movlw	high STR_60
  8183  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8184  0102B2  EC51  F0BC         	call	_strcmp	;wreg free
  8185  0102B6  0101               	movlb	1	; () banked
  8186  0102B8  5117               	movf	?_strcmp& (0+255),w,b
  8187  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8188  0102BC  A4D8               	btfss	status,2,c
  8189  0102BE  D0A4               	goto	l1202
  8190                           
  8191                           ; BSR set to: 1
  8192                           ;ring_buffer_LUT.c: 148: if (adc_error_flag) {
  8193  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8194  0102C2  D090               	goto	l1203
  8195                           
  8196                           ; BSR set to: 1
  8197                           ;ring_buffer_LUT.c: 150: terminal_textAttributes(RED, BLACK, NORMAL);
  8198  0102C4  0E00               	movlw	0
  8199  0102C6  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8200  0102C8  0E00               	movlw	0
  8201  0102CA  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8202  0102CC  0E01               	movlw	1
  8203  0102CE  EC1E  F09A         	call	_terminal_textAttributes
  8204                           
  8205                           ;ring_buffer_LUT.c: 153: current_adc_channel = ADPCH;
  8206  0102D2  CF5F F1DD          	movff	3935,_current_adc_channel	;volatile
  8207                           
  8208                           ;ring_buffer_LUT.c: 156: char channel_name[22];
  8209                           ;ring_buffer_LUT.c: 158: switch (current_adc_channel) {
  8210  0102D6  D060               	goto	l1204
  8211  0102D8                     
  8212                           ;ring_buffer_LUT.c: 161: strcpy(channel_name, "ISNS");
  8213  0102D8  0E80               	movlw	low ringBufferLUT@channel_name
  8214  0102DA  0101               	movlb	1	; () banked
  8215  0102DC  6F17               	movwf	strcpy@to& (0+255),b
  8216  0102DE  0E03               	movlw	high ringBufferLUT@channel_name
  8217  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8218  0102E2  0EA6               	movlw	low STR_61
  8219  0102E4  6F19               	movwf	strcpy@from& (0+255),b
  8220  0102E6  0EFF               	movlw	high STR_61
  8221  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8222  0102EA  EC60  F0BE         	call	_strcpy	;wreg free
  8223                           
  8224                           ;ring_buffer_LUT.c: 162: break;
  8225  0102EE  D06C               	goto	l1206
  8226  0102F0                     
  8227                           ;ring_buffer_LUT.c: 165: strcpy(channel_name, "POS12");
  8228  0102F0  0E80               	movlw	low ringBufferLUT@channel_name
  8229  0102F2  0101               	movlb	1	; () banked
  8230  0102F4  6F17               	movwf	strcpy@to& (0+255),b
  8231  0102F6  0E03               	movlw	high ringBufferLUT@channel_name
  8232  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8233  0102FA  0E94               	movlw	low STR_62
  8234  0102FC  6F19               	movwf	strcpy@from& (0+255),b
  8235  0102FE  0EFF               	movlw	high STR_62
  8236  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8237  010302  EC60  F0BE         	call	_strcpy	;wreg free
  8238                           
  8239                           ;ring_buffer_LUT.c: 166: break;
  8240  010306  D060               	goto	l1206
  8241  010308                     
  8242                           ;ring_buffer_LUT.c: 169: strcpy(channel_name, "POS3P3");
  8243  010308  0E80               	movlw	low ringBufferLUT@channel_name
  8244  01030A  0101               	movlb	1	; () banked
  8245  01030C  6F17               	movwf	strcpy@to& (0+255),b
  8246  01030E  0E03               	movlw	high ringBufferLUT@channel_name
  8247  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8248  010312  0E8D               	movlw	low STR_63
  8249  010314  6F19               	movwf	strcpy@from& (0+255),b
  8250  010316  0EFF               	movlw	high STR_63
  8251  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8252  01031A  EC60  F0BE         	call	_strcpy	;wreg free
  8253                           
  8254                           ;ring_buffer_LUT.c: 170: break;
  8255  01031E  D054               	goto	l1206
  8256  010320                     
  8257                           ;ring_buffer_LUT.c: 173: strcpy(channel_name, "Internal AVSS");
  8258  010320  0E80               	movlw	low ringBufferLUT@channel_name
  8259  010322  0101               	movlb	1	; () banked
  8260  010324  6F17               	movwf	strcpy@to& (0+255),b
  8261  010326  0E03               	movlw	high ringBufferLUT@channel_name
  8262  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8263  01032A  0EF4               	movlw	low STR_64
  8264  01032C  6F19               	movwf	strcpy@from& (0+255),b
  8265  01032E  0EFE               	movlw	high STR_64
  8266  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8267  010332  EC60  F0BE         	call	_strcpy	;wreg free
  8268                           
  8269                           ;ring_buffer_LUT.c: 174: break;
  8270  010336  D048               	goto	l1206
  8271  010338                     
  8272                           ;ring_buffer_LUT.c: 177: strcpy(channel_name, "Internal Temp");
  8273  010338  0E80               	movlw	low ringBufferLUT@channel_name
  8274  01033A  0101               	movlb	1	; () banked
  8275  01033C  6F17               	movwf	strcpy@to& (0+255),b
  8276  01033E  0E03               	movlw	high ringBufferLUT@channel_name
  8277  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8278  010342  0E02               	movlw	low STR_65
  8279  010344  6F19               	movwf	strcpy@from& (0+255),b
  8280  010346  0EFF               	movlw	high STR_65
  8281  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8282  01034A  EC60  F0BE         	call	_strcpy	;wreg free
  8283                           
  8284                           ;ring_buffer_LUT.c: 178: break;
  8285  01034E  D03C               	goto	l1206
  8286  010350                     
  8287                           ;ring_buffer_LUT.c: 181: strcpy(channel_name, "Internal DAC1");
  8288  010350  0E80               	movlw	low ringBufferLUT@channel_name
  8289  010352  0101               	movlb	1	; () banked
  8290  010354  6F17               	movwf	strcpy@to& (0+255),b
  8291  010356  0E03               	movlw	high ringBufferLUT@channel_name
  8292  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8293  01035A  0ECA               	movlw	low STR_66
  8294  01035C  6F19               	movwf	strcpy@from& (0+255),b
  8295  01035E  0EFE               	movlw	high STR_66
  8296  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8297  010362  EC60  F0BE         	call	_strcpy	;wreg free
  8298                           
  8299                           ;ring_buffer_LUT.c: 182: break;
  8300  010366  D030               	goto	l1206
  8301  010368                     
  8302                           ;ring_buffer_LUT.c: 185: strcpy(channel_name, "Internal FVR Buffer 1");
  8303  010368  0E80               	movlw	low ringBufferLUT@channel_name
  8304  01036A  0101               	movlb	1	; () banked
  8305  01036C  6F17               	movwf	strcpy@to& (0+255),b
  8306  01036E  0E03               	movlw	high ringBufferLUT@channel_name
  8307  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8308  010372  0E5C               	movlw	low STR_67
  8309  010374  6F19               	movwf	strcpy@from& (0+255),b
  8310  010376  0EFD               	movlw	high STR_67
  8311  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8312  01037A  EC60  F0BE         	call	_strcpy	;wreg free
  8313                           
  8314                           ;ring_buffer_LUT.c: 186: break;
  8315  01037E  D024               	goto	l1206
  8316  010380                     
  8317                           ;ring_buffer_LUT.c: 189: strcpy(channel_name, "Undefined");
  8318  010380  0E80               	movlw	low ringBufferLUT@channel_name
  8319  010382  0101               	movlb	1	; () banked
  8320  010384  6F17               	movwf	strcpy@to& (0+255),b
  8321  010386  0E03               	movlw	high ringBufferLUT@channel_name
  8322  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8323  01038A  0E7C               	movlw	low STR_68
  8324  01038C  6F19               	movwf	strcpy@from& (0+255),b
  8325  01038E  0EFF               	movlw	high STR_68
  8326  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8327  010392  EC60  F0BE         	call	_strcpy	;wreg free
  8328                           
  8329                           ;ring_buffer_LUT.c: 192: }
  8330                           
  8331                           ;ring_buffer_LUT.c: 190: break;
  8332  010396  D018               	goto	l1206
  8333  010398                     l1204:
  8334  010398  0101               	movlb	1	; () banked
  8335  01039A  51DD               	movf	_current_adc_channel& (0+255),w,b
  8336                           
  8337                           ; Switch size 1, requested type "space"
  8338                           ; Number of cases is 7, Range of values is 0 to 63
  8339                           ; switch strategies available:
  8340                           ; Name         Instructions Cycles
  8341                           ; simple_byte           22    12 (average)
  8342                           ;	Chosen strategy is simple_byte
  8343  01039C  0A00               	xorlw	0	; case 0
  8344  01039E  B4D8               	btfsc	status,2,c
  8345  0103A0  D79B               	goto	l1205
  8346  0103A2  0A04               	xorlw	4	; case 4
  8347  0103A4  B4D8               	btfsc	status,2,c
  8348  0103A6  D7A4               	goto	l1207
  8349  0103A8  0A26               	xorlw	38	; case 34
  8350  0103AA  B4D8               	btfsc	status,2,c
  8351  0103AC  D7AD               	goto	l1208
  8352  0103AE  0A1E               	xorlw	30	; case 60
  8353  0103B0  B4D8               	btfsc	status,2,c
  8354  0103B2  D7B6               	goto	l1209
  8355  0103B4  0A01               	xorlw	1	; case 61
  8356  0103B6  B4D8               	btfsc	status,2,c
  8357  0103B8  D7BF               	goto	l1210
  8358  0103BA  0A03               	xorlw	3	; case 62
  8359  0103BC  B4D8               	btfsc	status,2,c
  8360  0103BE  D7C8               	goto	l1211
  8361  0103C0  0A01               	xorlw	1	; case 63
  8362  0103C2  B4D8               	btfsc	status,2,c
  8363  0103C4  D7D1               	goto	l1212
  8364  0103C6  D7DC               	goto	l1213
  8365  0103C8                     l1206:
  8366                           
  8367                           ;ring_buffer_LUT.c: 195: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8368                           
  8369                           ; BSR set to: 1
  8370  0103C8  0EAF               	movlw	low STR_69
  8371  0103CA  0101               	movlb	1	; () banked
  8372  0103CC  6F7C               	movwf	printf@f& (0+255),b
  8373  0103CE  0EF9               	movlw	high STR_69
  8374  0103D0  6F7D               	movwf	(printf@f+1)& (0+255),b
  8375  0103D2  0E80               	movlw	low ringBufferLUT@channel_name
  8376  0103D4  6F7E               	movwf	(?_printf+2)& (0+255),b
  8377  0103D6  0E03               	movlw	high ringBufferLUT@channel_name
  8378  0103D8  6F7F               	movwf	(?_printf+3)& (0+255),b
  8379  0103DA  EC52  F086         	call	_printf	;wreg free
  8380                           
  8381                           ;ring_buffer_LUT.c: 196: terminal_textAttributesReset();
  8382  0103DE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8383                           
  8384                           ;ring_buffer_LUT.c: 198: }
  8385  0103E2  0012               	return	
  8386  0103E4                     l1203:
  8387                           
  8388                           ;ring_buffer_LUT.c: 200: else {
  8389                           ;ring_buffer_LUT.c: 202: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8390  0103E4  0E00               	movlw	0
  8391  0103E6  0101               	movlb	1	; () banked
  8392  0103E8  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8393  0103EA  0E00               	movlw	0
  8394  0103EC  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8395  0103EE  0E02               	movlw	2
  8396  0103F0  EC1E  F09A         	call	_terminal_textAttributes
  8397                           
  8398                           ;ring_buffer_LUT.c: 203: printf("No ADC Error detected\n\r");
  8399  0103F4  0E17               	movlw	low STR_70
  8400  0103F6  0101               	movlb	1	; () banked
  8401  0103F8  6F7C               	movwf	printf@f& (0+255),b
  8402  0103FA  0EFD               	movlw	high STR_70
  8403  0103FC  6F7D               	movwf	(printf@f+1)& (0+255),b
  8404  0103FE  EC52  F086         	call	_printf	;wreg free
  8405                           
  8406                           ;ring_buffer_LUT.c: 204: terminal_textAttributesReset();
  8407  010402  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8408                           
  8409                           ;ring_buffer_LUT.c: 206: }
  8410                           ;ring_buffer_LUT.c: 208: }
  8411  010406  0012               	return	
  8412  010408                     l1202:
  8413                           
  8414                           ;ring_buffer_LUT.c: 211: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8415  010408  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8416  01040C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8417  010410  0E7E               	movlw	low STR_71
  8418  010412  0101               	movlb	1	; () banked
  8419  010414  6F19               	movwf	strcmp@s2& (0+255),b
  8420  010416  0EFE               	movlw	high STR_71
  8421  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8422  01041A  EC51  F0BC         	call	_strcmp	;wreg free
  8423  01041E  0101               	movlb	1	; () banked
  8424  010420  5117               	movf	?_strcmp& (0+255),w,b
  8425  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8426  010424  A4D8               	btfss	status,2,c
  8427  010426  D018               	goto	l1216
  8428                           
  8429                           ; BSR set to: 1
  8430                           ;ring_buffer_LUT.c: 213: LATFbits.LATF3 = 0;
  8431  010428  967E               	bcf	3966,3,c	;volatile
  8432                           
  8433                           ;ring_buffer_LUT.c: 214: adc_error_flag = 0;
  8434  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8435                           
  8436                           ; BSR set to: 1
  8437                           ;ring_buffer_LUT.c: 216: PIE5bits.TMR7IE == 1;
  8438  01042C  010E               	movlb	14	; () banked
  8439  01042E  512E               	movf	46,w,b	;volatile
  8440                           
  8441                           ; BSR set to: 14
  8442                           ;ring_buffer_LUT.c: 217: TMR7_StartTimer();
  8443  010430  ECBA  F0C0         	call	_TMR7_StartTimer	;wreg free
  8444                           
  8445                           ;ring_buffer_LUT.c: 219: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8446  010434  0E00               	movlw	0
  8447  010436  0101               	movlb	1	; () banked
  8448  010438  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8449  01043A  0E00               	movlw	0
  8450  01043C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8451  01043E  0E02               	movlw	2
  8452  010440  EC1E  F09A         	call	_terminal_textAttributes
  8453                           
  8454                           ;ring_buffer_LUT.c: 220: printf("Clearing ADC Error\n\r");
  8455  010444  0E87               	movlw	low STR_72
  8456  010446  0101               	movlb	1	; () banked
  8457  010448  6F7C               	movwf	printf@f& (0+255),b
  8458  01044A  0EFD               	movlw	high STR_72
  8459  01044C  6F7D               	movwf	(printf@f+1)& (0+255),b
  8460  01044E  EC52  F086         	call	_printf	;wreg free
  8461                           
  8462                           ;ring_buffer_LUT.c: 221: terminal_textAttributesReset();
  8463  010452  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8464                           
  8465                           ;ring_buffer_LUT.c: 223: }
  8466  010456  0012               	return	
  8467  010458                     l1216:
  8468                           
  8469                           ;ring_buffer_LUT.c: 226: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  8470  010458  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8471  01045C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8472  010460  0E0D               	movlw	low STR_73
  8473  010462  0101               	movlb	1	; () banked
  8474  010464  6F19               	movwf	strcmp@s2& (0+255),b
  8475  010466  0EFE               	movlw	high STR_73
  8476  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8477  01046A  EC51  F0BC         	call	_strcmp	;wreg free
  8478  01046E  0101               	movlb	1	; () banked
  8479  010470  5117               	movf	?_strcmp& (0+255),w,b
  8480  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8481  010474  A4D8               	btfss	status,2,c
  8482  010476  D026               	goto	l1218
  8483                           
  8484                           ; BSR set to: 1
  8485                           ;ring_buffer_LUT.c: 229: if (VCC_overvoltage_flag == 1) {
  8486  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8487  01047A  D012               	goto	l1219
  8488                           
  8489                           ; BSR set to: 1
  8490                           ;ring_buffer_LUT.c: 231: terminal_textAttributes(RED, BLACK, NORMAL);
  8491  01047C  0E00               	movlw	0
  8492  01047E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8493  010480  0E00               	movlw	0
  8494  010482  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8495  010484  0E01               	movlw	1
  8496  010486  EC1E  F09A         	call	_terminal_textAttributes
  8497                           
  8498                           ;ring_buffer_LUT.c: 232: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  8499  01048A  0E6C               	movlw	low STR_74
  8500  01048C  0101               	movlb	1	; () banked
  8501  01048E  6F7C               	movwf	printf@f& (0+255),b
  8502  010490  0EF7               	movlw	high STR_74
  8503  010492  6F7D               	movwf	(printf@f+1)& (0+255),b
  8504  010494  EC52  F086         	call	_printf	;wreg free
  8505                           
  8506                           ;ring_buffer_LUT.c: 233: terminal_textAttributesReset();
  8507  010498  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8508                           
  8509                           ;ring_buffer_LUT.c: 236: VCC_overvoltage_flag = 0;
  8510  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8511                           
  8512                           ;ring_buffer_LUT.c: 238: }
  8513  01049E  0012               	return	
  8514  0104A0                     l1219:
  8515                           
  8516                           ;ring_buffer_LUT.c: 240: else {
  8517                           ;ring_buffer_LUT.c: 242: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8518  0104A0  0E00               	movlw	0
  8519  0104A2  0101               	movlb	1	; () banked
  8520  0104A4  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8521  0104A6  0E00               	movlw	0
  8522  0104A8  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8523  0104AA  0E02               	movlw	2
  8524  0104AC  EC1E  F09A         	call	_terminal_textAttributes
  8525                           
  8526                           ;ring_buffer_LUT.c: 243: printf("VCC Overvoltage condition has not occurred\n\r");
  8527  0104B0  0E3C               	movlw	low STR_75
  8528  0104B2  0101               	movlb	1	; () banked
  8529  0104B4  6F7C               	movwf	printf@f& (0+255),b
  8530  0104B6  0EFA               	movlw	high STR_75
  8531  0104B8  6F7D               	movwf	(printf@f+1)& (0+255),b
  8532  0104BA  EC52  F086         	call	_printf	;wreg free
  8533                           
  8534                           ;ring_buffer_LUT.c: 244: terminal_textAttributesReset();
  8535  0104BE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8536                           
  8537                           ;ring_buffer_LUT.c: 246: }
  8538                           ;ring_buffer_LUT.c: 248: }
  8539  0104C2  0012               	return	
  8540  0104C4                     l1218:
  8541                           
  8542                           ;ring_buffer_LUT.c: 251: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  8543  0104C4  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8544  0104C8  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8545  0104CC  0E3E               	movlw	low STR_76
  8546  0104CE  0101               	movlb	1	; () banked
  8547  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
  8548  0104D2  0EFE               	movlw	high STR_76
  8549  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8550  0104D6  EC51  F0BC         	call	_strcmp	;wreg free
  8551  0104DA  0101               	movlb	1	; () banked
  8552  0104DC  5117               	movf	?_strcmp& (0+255),w,b
  8553  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8554  0104E0  A4D8               	btfss	status,2,c
  8555  0104E2  D019               	goto	l1222
  8556                           
  8557                           ; BSR set to: 1
  8558                           ;ring_buffer_LUT.c: 253: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8559  0104E4  0E00               	movlw	0
  8560  0104E6  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8561  0104E8  0E00               	movlw	0
  8562  0104EA  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8563  0104EC  0E06               	movlw	6
  8564  0104EE  EC1E  F09A         	call	_terminal_textAttributes
  8565                           
  8566                           ;ring_buffer_LUT.c: 254: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
  8567  0104F2  0E59               	movlw	low STR_77
  8568  0104F4  0101               	movlb	1	; () banked
  8569  0104F6  6F7C               	movwf	printf@f& (0+255),b
  8570  0104F8  0EFB               	movlw	high STR_77
  8571  0104FA  6F7D               	movwf	(printf@f+1)& (0+255),b
  8572  0104FC  C0F0  F17E         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  8573  010500  C0F1  F17F         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  8574  010504  C0F2  F180         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  8575  010508  C0F3  F181         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
  8576  01050C  EC52  F086         	call	_printf	;wreg free
  8577                           
  8578                           ;ring_buffer_LUT.c: 255: terminal_textAttributesReset();
  8579  010510  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8580                           
  8581                           ;ring_buffer_LUT.c: 257: }
  8582  010514  0012               	return	
  8583  010516                     l1222:
  8584                           
  8585                           ;ring_buffer_LUT.c: 260: else if((0 == strcmp(line, "Measure POS12?"))) {
  8586  010516  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8587  01051A  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8588  01051E  0E9D               	movlw	low STR_78
  8589  010520  0101               	movlb	1	; () banked
  8590  010522  6F19               	movwf	strcmp@s2& (0+255),b
  8591  010524  0EFE               	movlw	high STR_78
  8592  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8593  010528  EC51  F0BC         	call	_strcmp	;wreg free
  8594  01052C  0101               	movlb	1	; () banked
  8595  01052E  5117               	movf	?_strcmp& (0+255),w,b
  8596  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8597  010532  A4D8               	btfss	status,2,c
  8598  010534  D019               	goto	l1224
  8599                           
  8600                           ; BSR set to: 1
  8601                           ;ring_buffer_LUT.c: 262: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8602  010536  0E00               	movlw	0
  8603  010538  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8604  01053A  0E00               	movlw	0
  8605  01053C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8606  01053E  0E06               	movlw	6
  8607  010540  EC1E  F09A         	call	_terminal_textAttributes
  8608                           
  8609                           ;ring_buffer_LUT.c: 263: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
  8610  010544  0EC7               	movlw	low STR_79
  8611  010546  0101               	movlb	1	; () banked
  8612  010548  6F7C               	movwf	printf@f& (0+255),b
  8613  01054A  0EFB               	movlw	high STR_79
  8614  01054C  6F7D               	movwf	(printf@f+1)& (0+255),b
  8615  01054E  C258  F17E         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  8616  010552  C259  F17F         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  8617  010556  C25A  F180         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  8618  01055A  C25B  F181         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
  8619  01055E  EC52  F086         	call	_printf	;wreg free
  8620                           
  8621                           ;ring_buffer_LUT.c: 264: terminal_textAttributesReset();
  8622  010562  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8623                           
  8624                           ;ring_buffer_LUT.c: 266: }
  8625  010566  0012               	return	
  8626  010568                     l1224:
  8627                           
  8628                           ;ring_buffer_LUT.c: 269: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  8629  010568  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8630  01056C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8631  010570  0ED9               	movlw	low STR_80
  8632  010572  0101               	movlb	1	; () banked
  8633  010574  6F19               	movwf	strcmp@s2& (0+255),b
  8634  010576  0EFD               	movlw	high STR_80
  8635  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8636  01057A  EC51  F0BC         	call	_strcmp	;wreg free
  8637  01057E  0101               	movlb	1	; () banked
  8638  010580  5117               	movf	?_strcmp& (0+255),w,b
  8639  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8640  010584  A4D8               	btfss	status,2,c
  8641  010586  D019               	goto	l1226
  8642                           
  8643                           ; BSR set to: 1
  8644                           ;ring_buffer_LUT.c: 271: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8645  010588  0E00               	movlw	0
  8646  01058A  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8647  01058C  0E00               	movlw	0
  8648  01058E  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8649  010590  0E06               	movlw	6
  8650  010592  EC1E  F09A         	call	_terminal_textAttributes
  8651                           
  8652                           ;ring_buffer_LUT.c: 272: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  8653  010596  0EEB               	movlw	low STR_81
  8654  010598  0101               	movlb	1	; () banked
  8655  01059A  6F7C               	movwf	printf@f& (0+255),b
  8656  01059C  0EFB               	movlw	high STR_81
  8657  01059E  6F7D               	movwf	(printf@f+1)& (0+255),b
  8658  0105A0  C254  F17E         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  8659  0105A4  C255  F17F         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  8660  0105A8  C256  F180         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  8661  0105AC  C257  F181         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
  8662  0105B0  EC52  F086         	call	_printf	;wreg free
  8663                           
  8664                           ;ring_buffer_LUT.c: 273: terminal_textAttributesReset();
  8665  0105B4  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8666                           
  8667                           ;ring_buffer_LUT.c: 277: }
  8668  0105B8  0012               	return	
  8669  0105BA                     l1226:
  8670                           
  8671                           ;ring_buffer_LUT.c: 280: else if((0 == strcmp(line, "Measure FVR?"))) {
  8672  0105BA  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8673  0105BE  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8674  0105C2  0E2A               	movlw	low STR_82
  8675  0105C4  0101               	movlb	1	; () banked
  8676  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
  8677  0105C8  0EFF               	movlw	high STR_82
  8678  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8679  0105CC  EC51  F0BC         	call	_strcmp	;wreg free
  8680  0105D0  0101               	movlb	1	; () banked
  8681  0105D2  5117               	movf	?_strcmp& (0+255),w,b
  8682  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8683  0105D6  A4D8               	btfss	status,2,c
  8684  0105D8  D019               	goto	l1228
  8685                           
  8686                           ; BSR set to: 1
  8687                           ;ring_buffer_LUT.c: 282: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8688  0105DA  0E00               	movlw	0
  8689  0105DC  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8690  0105DE  0E00               	movlw	0
  8691  0105E0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8692  0105E2  0E06               	movlw	6
  8693  0105E4  EC1E  F09A         	call	_terminal_textAttributes
  8694                           
  8695                           ;ring_buffer_LUT.c: 283: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  8696  0105E8  0ED8               	movlw	low STR_83
  8697  0105EA  0101               	movlb	1	; () banked
  8698  0105EC  6F7C               	movwf	printf@f& (0+255),b
  8699  0105EE  0EF8               	movlw	high STR_83
  8700  0105F0  6F7D               	movwf	(printf@f+1)& (0+255),b
  8701  0105F2  C0F5  F17E         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  8702  0105F6  C0F6  F17F         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  8703  0105FA  C0F7  F180         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  8704  0105FE  C0F8  F181         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
  8705  010602  EC52  F086         	call	_printf	;wreg free
  8706                           
  8707                           ;ring_buffer_LUT.c: 284: terminal_textAttributesReset();
  8708  010606  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8709                           
  8710                           ;ring_buffer_LUT.c: 286: }
  8711  01060A  0012               	return	
  8712  01060C                     l1228:
  8713                           
  8714                           ;ring_buffer_LUT.c: 289: else if((0 == strcmp(line, "Measure AVSS?"))) {
  8715  01060C  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8716  010610  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8717  010614  0ED8               	movlw	low STR_84
  8718  010616  0101               	movlb	1	; () banked
  8719  010618  6F19               	movwf	strcmp@s2& (0+255),b
  8720  01061A  0EFE               	movlw	high STR_84
  8721  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8722  01061E  EC51  F0BC         	call	_strcmp	;wreg free
  8723  010622  0101               	movlb	1	; () banked
  8724  010624  5117               	movf	?_strcmp& (0+255),w,b
  8725  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8726  010628  A4D8               	btfss	status,2,c
  8727  01062A  D019               	goto	l1230
  8728                           
  8729                           ; BSR set to: 1
  8730                           ;ring_buffer_LUT.c: 291: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8731  01062C  0E00               	movlw	0
  8732  01062E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8733  010630  0E00               	movlw	0
  8734  010632  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8735  010634  0E06               	movlw	6
  8736  010636  EC1E  F09A         	call	_terminal_textAttributes
  8737                           
  8738                           ;ring_buffer_LUT.c: 292: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  8739  01063A  0E34               	movlw	low STR_85
  8740  01063C  0101               	movlb	1	; () banked
  8741  01063E  6F7C               	movwf	printf@f& (0+255),b
  8742  010640  0EFB               	movlw	high STR_85
  8743  010642  6F7D               	movwf	(printf@f+1)& (0+255),b
  8744  010644  C1D7  F17E         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  8745  010648  C1D8  F17F         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  8746  01064C  C1D9  F180         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  8747  010650  C1DA  F181         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
  8748  010654  EC52  F086         	call	_printf	;wreg free
  8749                           
  8750                           ;ring_buffer_LUT.c: 293: terminal_textAttributesReset();
  8751  010658  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8752                           
  8753                           ;ring_buffer_LUT.c: 295: }
  8754  01065C  0012               	return	
  8755  01065E                     l1230:
  8756                           
  8757                           ;ring_buffer_LUT.c: 298: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  8758  01065E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8759  010662  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8760  010666  0ECB               	movlw	low STR_86
  8761  010668  0101               	movlb	1	; () banked
  8762  01066A  6F19               	movwf	strcmp@s2& (0+255),b
  8763  01066C  0EFC               	movlw	high STR_86
  8764  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8765  010670  EC51  F0BC         	call	_strcmp	;wreg free
  8766  010674  0101               	movlb	1	; () banked
  8767  010676  5117               	movf	?_strcmp& (0+255),w,b
  8768  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8769  01067A  A4D8               	btfss	status,2,c
  8770  01067C  D019               	goto	l1232
  8771                           
  8772                           ; BSR set to: 1
  8773                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8774  01067E  0E00               	movlw	0
  8775  010680  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8776  010682  0E00               	movlw	0
  8777  010684  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8778  010686  0E06               	movlw	6
  8779  010688  EC1E  F09A         	call	_terminal_textAttributes
  8780                           
  8781                           ;ring_buffer_LUT.c: 301: printf("Measured Current is %.3f Amps\n\r", Imeas);
  8782  01068C  0E72               	movlw	low STR_87
  8783  01068E  0101               	movlb	1	; () banked
  8784  010690  6F7C               	movwf	printf@f& (0+255),b
  8785  010692  0EFC               	movlw	high STR_87
  8786  010694  6F7D               	movwf	(printf@f+1)& (0+255),b
  8787  010696  C1D3  F17E         	movff	_Imeas,?_printf+2	;volatile
  8788  01069A  C1D4  F17F         	movff	_Imeas+1,?_printf+3	;volatile
  8789  01069E  C1D5  F180         	movff	_Imeas+2,?_printf+4	;volatile
  8790  0106A2  C1D6  F181         	movff	_Imeas+3,?_printf+5	;volatile
  8791  0106A6  EC52  F086         	call	_printf	;wreg free
  8792                           
  8793                           ;ring_buffer_LUT.c: 302: terminal_textAttributesReset();
  8794  0106AA  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8795                           
  8796                           ;ring_buffer_LUT.c: 304: }
  8797  0106AE  0012               	return	
  8798  0106B0                     l1232:
  8799                           
  8800                           ;ring_buffer_LUT.c: 307: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  8801  0106B0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8802  0106B4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8803  0106B8  0EB1               	movlw	low STR_88
  8804  0106BA  0101               	movlb	1	; () banked
  8805  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
  8806  0106BE  0EFD               	movlw	high STR_88
  8807  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8808  0106C2  EC51  F0BC         	call	_strcmp	;wreg free
  8809  0106C6  0101               	movlb	1	; () banked
  8810  0106C8  5117               	movf	?_strcmp& (0+255),w,b
  8811  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8812  0106CC  A4D8               	btfss	status,2,c
  8813  0106CE  D019               	goto	l1234
  8814                           
  8815                           ; BSR set to: 1
  8816                           ;ring_buffer_LUT.c: 309: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8817  0106D0  0E00               	movlw	0
  8818  0106D2  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8819  0106D4  0E00               	movlw	0
  8820  0106D6  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8821  0106D8  0E06               	movlw	6
  8822  0106DA  EC1E  F09A         	call	_terminal_textAttributes
  8823                           
  8824                           ;ring_buffer_LUT.c: 310: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  8825  0106DE  0E0D               	movlw	low STR_89
  8826  0106E0  0101               	movlb	1	; () banked
  8827  0106E2  6F7C               	movwf	printf@f& (0+255),b
  8828  0106E4  0EFC               	movlw	high STR_89
  8829  0106E6  6F7D               	movwf	(printf@f+1)& (0+255),b
  8830  0106E8  C1CF  F17E         	movff	_Irms,?_printf+2	;volatile
  8831  0106EC  C1D0  F17F         	movff	_Irms+1,?_printf+3	;volatile
  8832  0106F0  C1D1  F180         	movff	_Irms+2,?_printf+4	;volatile
  8833  0106F4  C1D2  F181         	movff	_Irms+3,?_printf+5	;volatile
  8834  0106F8  EC52  F086         	call	_printf	;wreg free
  8835                           
  8836                           ;ring_buffer_LUT.c: 311: terminal_textAttributesReset();
  8837  0106FC  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8838                           
  8839                           ;ring_buffer_LUT.c: 313: }
  8840  010700  0012               	return	
  8841  010702                     l1234:
  8842                           
  8843                           ;ring_buffer_LUT.c: 316: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  8844  010702  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8845  010706  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8846  01070A  0E9C               	movlw	low STR_90
  8847  01070C  0101               	movlb	1	; () banked
  8848  01070E  6F19               	movwf	strcmp@s2& (0+255),b
  8849  010710  0EFD               	movlw	high STR_90
  8850  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8851  010714  EC51  F0BC         	call	_strcmp	;wreg free
  8852  010718  0101               	movlb	1	; () banked
  8853  01071A  5117               	movf	?_strcmp& (0+255),w,b
  8854  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8855  01071E  A4D8               	btfss	status,2,c
  8856  010720  D019               	goto	l1236
  8857                           
  8858                           ; BSR set to: 1
  8859                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8860  010722  0E00               	movlw	0
  8861  010724  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8862  010726  0E00               	movlw	0
  8863  010728  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8864  01072A  0E06               	movlw	6
  8865  01072C  EC1E  F09A         	call	_terminal_textAttributes
  8866                           
  8867                           ;ring_buffer_LUT.c: 319: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  8868  010730  0E2F               	movlw	low STR_91
  8869  010732  0101               	movlb	1	; () banked
  8870  010734  6F7C               	movwf	printf@f& (0+255),b
  8871  010736  0EFC               	movlw	high STR_91
  8872  010738  6F7D               	movwf	(printf@f+1)& (0+255),b
  8873  01073A  C1CB  F17E         	movff	_Vrms,?_printf+2	;volatile
  8874  01073E  C1CC  F17F         	movff	_Vrms+1,?_printf+3	;volatile
  8875  010742  C1CD  F180         	movff	_Vrms+2,?_printf+4	;volatile
  8876  010746  C1CE  F181         	movff	_Vrms+3,?_printf+5	;volatile
  8877  01074A  EC52  F086         	call	_printf	;wreg free
  8878                           
  8879                           ;ring_buffer_LUT.c: 320: terminal_textAttributesReset();
  8880  01074E  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8881                           
  8882                           ;ring_buffer_LUT.c: 322: }
  8883  010752  0012               	return	
  8884  010754                     l1236:
  8885                           
  8886                           ;ring_buffer_LUT.c: 325: else if ((0 == strcmp(line, "Measure Power?"))) {
  8887  010754  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8888  010758  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8889  01075C  0EAC               	movlw	low STR_92
  8890  01075E  0101               	movlb	1	; () banked
  8891  010760  6F19               	movwf	strcmp@s2& (0+255),b
  8892  010762  0EFE               	movlw	high STR_92
  8893  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8894  010766  EC51  F0BC         	call	_strcmp	;wreg free
  8895  01076A  0101               	movlb	1	; () banked
  8896  01076C  5117               	movf	?_strcmp& (0+255),w,b
  8897  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8898  010770  A4D8               	btfss	status,2,c
  8899  010772  D019               	goto	l1238
  8900                           
  8901                           ; BSR set to: 1
  8902                           ;ring_buffer_LUT.c: 327: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8903  010774  0E00               	movlw	0
  8904  010776  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8905  010778  0E00               	movlw	0
  8906  01077A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8907  01077C  0E06               	movlw	6
  8908  01077E  EC1E  F09A         	call	_terminal_textAttributes
  8909                           
  8910                           ;ring_buffer_LUT.c: 328: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  8911  010782  0EA0               	movlw	low STR_93
  8912  010784  0101               	movlb	1	; () banked
  8913  010786  6F7C               	movwf	printf@f& (0+255),b
  8914  010788  0EF8               	movlw	high STR_93
  8915  01078A  6F7D               	movwf	(printf@f+1)& (0+255),b
  8916  01078C  C248  F17E         	movff	_Avg_Power,?_printf+2	;volatile
  8917  010790  C249  F17F         	movff	_Avg_Power+1,?_printf+3	;volatile
  8918  010794  C24A  F180         	movff	_Avg_Power+2,?_printf+4	;volatile
  8919  010798  C24B  F181         	movff	_Avg_Power+3,?_printf+5	;volatile
  8920  01079C  EC52  F086         	call	_printf	;wreg free
  8921                           
  8922                           ;ring_buffer_LUT.c: 329: terminal_textAttributesReset();
  8923  0107A0  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8924                           
  8925                           ;ring_buffer_LUT.c: 331: }
  8926  0107A4  0012               	return	
  8927  0107A6                     l1238:
  8928                           
  8929                           ;ring_buffer_LUT.c: 334: else if ((0 == strcmp(line, "Enable Dimming"))) {
  8930  0107A6  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8931  0107AA  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8932  0107AE  0EBB               	movlw	low STR_94
  8933  0107B0  0101               	movlb	1	; () banked
  8934  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
  8935  0107B4  0EFE               	movlw	high STR_94
  8936  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8937  0107B8  EC51  F0BC         	call	_strcmp	;wreg free
  8938  0107BC  0101               	movlb	1	; () banked
  8939  0107BE  5117               	movf	?_strcmp& (0+255),w,b
  8940  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8941  0107C2  A4D8               	btfss	status,2,c
  8942  0107C4  D012               	goto	l1240
  8943                           
  8944                           ; BSR set to: 1
  8945                           ;ring_buffer_LUT.c: 337: LATGbits.LATG0 = 0;
  8946  0107C6  907F               	bcf	3967,0,c	;volatile
  8947                           
  8948                           ; BSR set to: 1
  8949                           ;ring_buffer_LUT.c: 339: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8950  0107C8  0E00               	movlw	0
  8951  0107CA  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8952  0107CC  0E00               	movlw	0
  8953  0107CE  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8954  0107D0  0E06               	movlw	6
  8955  0107D2  EC1E  F09A         	call	_terminal_textAttributes
  8956                           
  8957                           ;ring_buffer_LUT.c: 340: printf("TRIAC output dimming has been enabled\n\r");
  8958  0107D6  0EE5               	movlw	low STR_95
  8959  0107D8  0101               	movlb	1	; () banked
  8960  0107DA  6F7C               	movwf	printf@f& (0+255),b
  8961  0107DC  0EFA               	movlw	high STR_95
  8962  0107DE  6F7D               	movwf	(printf@f+1)& (0+255),b
  8963  0107E0  EC52  F086         	call	_printf	;wreg free
  8964                           
  8965                           ;ring_buffer_LUT.c: 341: terminal_textAttributesReset();
  8966  0107E4  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8967                           
  8968                           ;ring_buffer_LUT.c: 343: }
  8969  0107E8  0012               	return	
  8970  0107EA                     l1240:
  8971                           
  8972                           ;ring_buffer_LUT.c: 346: else if ((0 == strcmp(line, "Disable Dimming"))) {
  8973  0107EA  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8974  0107EE  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8975  0107F2  0E6E               	movlw	low STR_96
  8976  0107F4  0101               	movlb	1	; () banked
  8977  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
  8978  0107F8  0EFE               	movlw	high STR_96
  8979  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8980  0107FC  EC51  F0BC         	call	_strcmp	;wreg free
  8981  010800  0101               	movlb	1	; () banked
  8982  010802  5117               	movf	?_strcmp& (0+255),w,b
  8983  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8984  010806  A4D8               	btfss	status,2,c
  8985  010808  D012               	goto	l1242
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;ring_buffer_LUT.c: 349: LATGbits.LATG0 = 1;
  8989  01080A  807F               	bsf	3967,0,c	;volatile
  8990                           
  8991                           ; BSR set to: 1
  8992                           ;ring_buffer_LUT.c: 351: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8993  01080C  0E00               	movlw	0
  8994  01080E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8995  010810  0E00               	movlw	0
  8996  010812  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8997  010814  0E06               	movlw	6
  8998  010816  EC1E  F09A         	call	_terminal_textAttributes
  8999                           
  9000                           ;ring_buffer_LUT.c: 352: printf("TRIAC output dimming has been disabled\n\r");
  9001  01081A  0EBC               	movlw	low STR_97
  9002  01081C  0101               	movlb	1	; () banked
  9003  01081E  6F7C               	movwf	printf@f& (0+255),b
  9004  010820  0EFA               	movlw	high STR_97
  9005  010822  6F7D               	movwf	(printf@f+1)& (0+255),b
  9006  010824  EC52  F086         	call	_printf	;wreg free
  9007                           
  9008                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
  9009  010828  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9010                           
  9011                           ;ring_buffer_LUT.c: 355: }
  9012  01082C  0012               	return	
  9013  01082E                     l1242:
  9014                           
  9015                           ;ring_buffer_LUT.c: 358: else if ((0 == strcmp(line, "Enable Load"))) {
  9016  01082E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9017  010832  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9018  010836  0E50               	movlw	low STR_98
  9019  010838  0101               	movlb	1	; () banked
  9020  01083A  6F19               	movwf	strcmp@s2& (0+255),b
  9021  01083C  0EFF               	movlw	high STR_98
  9022  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9023  010840  EC51  F0BC         	call	_strcmp	;wreg free
  9024  010844  0101               	movlb	1	; () banked
  9025  010846  5117               	movf	?_strcmp& (0+255),w,b
  9026  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9027  01084A  A4D8               	btfss	status,2,c
  9028  01084C  D014               	goto	l1244
  9029                           
  9030                           ; BSR set to: 1
  9031                           ;ring_buffer_LUT.c: 360: LATGbits.LATG0 = 1;
  9032  01084E  807F               	bsf	3967,0,c	;volatile
  9033                           
  9034                           ;ring_buffer_LUT.c: 361: LATGbits.LATG1 = 0;
  9035  010850  927F               	bcf	3967,1,c	;volatile
  9036                           
  9037                           ;ring_buffer_LUT.c: 362: load_enable = 1;
  9038  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9039                           
  9040                           ; BSR set to: 1
  9041                           ;ring_buffer_LUT.c: 364: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9042  010854  0E00               	movlw	0
  9043  010856  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9044  010858  0E00               	movlw	0
  9045  01085A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9046  01085C  0E06               	movlw	6
  9047  01085E  EC1E  F09A         	call	_terminal_textAttributes
  9048                           
  9049                           ;ring_buffer_LUT.c: 365: printf("Load has been enabled, dimming disabled\n\r");
  9050  010862  0E69               	movlw	low STR_99
  9051  010864  0101               	movlb	1	; () banked
  9052  010866  6F7C               	movwf	printf@f& (0+255),b
  9053  010868  0EFA               	movlw	high STR_99
  9054  01086A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9055  01086C  EC52  F086         	call	_printf	;wreg free
  9056                           
  9057                           ;ring_buffer_LUT.c: 366: terminal_textAttributesReset();
  9058  010870  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9059                           
  9060                           ;ring_buffer_LUT.c: 368: }
  9061  010874  0012               	return	
  9062  010876                     l1244:
  9063                           
  9064                           ;ring_buffer_LUT.c: 371: else if ((0 == strcmp(line, "Disable Load"))) {
  9065  010876  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9066  01087A  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9067  01087E  0E37               	movlw	low STR_100
  9068  010880  0101               	movlb	1	; () banked
  9069  010882  6F19               	movwf	strcmp@s2& (0+255),b
  9070  010884  0EFF               	movlw	high STR_100
  9071  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9072  010888  EC51  F0BC         	call	_strcmp	;wreg free
  9073  01088C  0101               	movlb	1	; () banked
  9074  01088E  5117               	movf	?_strcmp& (0+255),w,b
  9075  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9076  010892  A4D8               	btfss	status,2,c
  9077  010894  D014               	goto	l1246
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;ring_buffer_LUT.c: 373: LATGbits.LATG1 = 0;
  9081  010896  927F               	bcf	3967,1,c	;volatile
  9082                           
  9083                           ;ring_buffer_LUT.c: 374: LATGbits.LATG0 = 0;
  9084  010898  907F               	bcf	3967,0,c	;volatile
  9085                           
  9086                           ;ring_buffer_LUT.c: 375: load_enable = 0;
  9087  01089A  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9088                           
  9089                           ; BSR set to: 1
  9090                           ;ring_buffer_LUT.c: 377: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9091  01089C  0E00               	movlw	0
  9092  01089E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9093  0108A0  0E00               	movlw	0
  9094  0108A2  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9095  0108A4  0E06               	movlw	6
  9096  0108A6  EC1E  F09A         	call	_terminal_textAttributes
  9097                           
  9098                           ;ring_buffer_LUT.c: 378: printf("Load has been disabled\n\r");
  9099  0108AA  0EE5               	movlw	low STR_101
  9100  0108AC  0101               	movlb	1	; () banked
  9101  0108AE  6F7C               	movwf	printf@f& (0+255),b
  9102  0108B0  0EFC               	movlw	high STR_101
  9103  0108B2  6F7D               	movwf	(printf@f+1)& (0+255),b
  9104  0108B4  EC52  F086         	call	_printf	;wreg free
  9105                           
  9106                           ;ring_buffer_LUT.c: 379: terminal_textAttributesReset();
  9107  0108B8  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9108                           
  9109                           ;ring_buffer_LUT.c: 381: }
  9110  0108BC  0012               	return	
  9111  0108BE                     l1246:
  9112                           
  9113                           ;ring_buffer_LUT.c: 384: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9114  0108BE  C1BC  F126         	movff	ringBufferLUT@line,strstr@s1
  9115  0108C2  C1BD  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9116  0108C6  0EFE               	movlw	low STR_102
  9117  0108C8  0101               	movlb	1	; () banked
  9118  0108CA  6F28               	movwf	strstr@s2& (0+255),b
  9119  0108CC  0EFC               	movlw	high STR_102
  9120  0108CE  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9121  0108D0  ECD9  F0B7         	call	_strstr	;wreg free
  9122  0108D4  0101               	movlb	1	; () banked
  9123  0108D6  5126               	movf	?_strstr& (0+255),w,b
  9124  0108D8  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9125  0108DA  B4D8               	btfsc	status,2,c
  9126  0108DC  D131               	goto	l1248
  9127                           
  9128                           ; BSR set to: 1
  9129                           ;ring_buffer_LUT.c: 387: char arg_buff[3];
  9130                           ;ring_buffer_LUT.c: 390: for (int index = 0; index < 3; index++) {
  9131  0108DE  0E00               	movlw	0
  9132  0108E0  0103               	movlb	3	; () banked
  9133  0108E2  6F9E               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9134  0108E4  0E00               	movlw	0
  9135  0108E6  6F9D               	movwf	ringBufferLUT@index& (0+255),b
  9136  0108E8                     l13360:
  9137                           
  9138                           ; BSR set to: 3
  9139  0108E8  BF9E               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9140  0108EA  D006               	goto	l1249
  9141  0108EC  519E               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9142  0108EE  E11F               	bnz	l13370
  9143  0108F0  0E03               	movlw	3
  9144  0108F2  5D9D               	subwf	ringBufferLUT@index& (0+255),w,b
  9145  0108F4  B0D8               	btfsc	status,0,c
  9146  0108F6  D01B               	goto	u15970
  9147  0108F8                     l1249:
  9148                           
  9149                           ; BSR set to: 3
  9150                           ;ring_buffer_LUT.c: 392: arg_buff[index] = line[index + 24];
  9151                           
  9152                           ; BSR set to: 3
  9153  0108F8  0E18               	movlw	24
  9154  0108FA  259D               	addwf	ringBufferLUT@index& (0+255),w,b
  9155  0108FC  0101               	movlb	1	; () banked
  9156  0108FE  6FBE               	movwf	??_ringBufferLUT& (0+255),b
  9157  010900  0E00               	movlw	0
  9158  010902  0103               	movlb	3	; () banked
  9159  010904  219E               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9160  010906  0101               	movlb	1	; () banked
  9161  010908  6FBF               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9162  01090A  51BE               	movf	??_ringBufferLUT& (0+255),w,b
  9163  01090C  25BC               	addwf	ringBufferLUT@line& (0+255),w,b
  9164  01090E  6ED9               	movwf	fsr2l,c
  9165  010910  51BF               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9166  010912  21BD               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9167  010914  6EDA               	movwf	fsr2h,c
  9168  010916  0E9A               	movlw	low ringBufferLUT@arg_buff
  9169  010918  0103               	movlb	3	; () banked
  9170  01091A  259D               	addwf	ringBufferLUT@index& (0+255),w,b
  9171  01091C  6EE1               	movwf	fsr1l,c
  9172  01091E  0E03               	movlw	high ringBufferLUT@arg_buff
  9173  010920  219E               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9174  010922  6EE2               	movwf	fsr1h,c
  9175  010924  CFDF FFE7          	movff	indf2,indf1
  9176                           
  9177                           ; BSR set to: 3
  9178  010928  4B9D               	infsnz	ringBufferLUT@index& (0+255),f,b
  9179  01092A  2B9E               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9180  01092C  D7DD               	goto	l13360
  9181  01092E                     u15970:
  9182  01092E                     l13370:
  9183                           
  9184                           ; BSR set to: 3
  9185                           ;ring_buffer_LUT.c: 394: }
  9186                           ;ring_buffer_LUT.c: 396: int percentage = atoi(arg_buff);
  9187  01092E  0E9A               	movlw	low ringBufferLUT@arg_buff
  9188  010930  0101               	movlb	1	; () banked
  9189  010932  6F1D               	movwf	atoi@s& (0+255),b
  9190  010934  0E03               	movlw	high ringBufferLUT@arg_buff
  9191  010936  6F1E               	movwf	(atoi@s+1)& (0+255),b
  9192  010938  ECB6  F0B5         	call	_atoi	;wreg free
  9193  01093C  C11D  F39F         	movff	?_atoi,ringBufferLUT@percentage
  9194  010940  C11E  F3A0         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9195                           
  9196                           ;ring_buffer_LUT.c: 399: if ( (percentage >= 100) ||
  9197                           ;ring_buffer_LUT.c: 400: (percentage <= 0)) {
  9198  010944  0103               	movlb	3	; () banked
  9199  010946  BFA0               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9200  010948  D006               	goto	u15980
  9201  01094A  51A0               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9202  01094C  E10B               	bnz	l13376
  9203  01094E  0E64               	movlw	100
  9204  010950  5D9F               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9205  010952  B0D8               	btfsc	status,0,c
  9206  010954  D007               	goto	u15990
  9207  010956                     u15980:
  9208                           
  9209                           ; BSR set to: 3
  9210  010956  BFA0               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9211  010958  D005               	goto	u15990
  9212  01095A  51A0               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9213  01095C  E12B               	bnz	l13378
  9214  01095E  059F               	decf	ringBufferLUT@percentage& (0+255),w,b
  9215  010960  B0D8               	btfsc	status,0,c
  9216  010962  D028               	goto	l1251
  9217  010964                     u15990:
  9218  010964                     l13376:
  9219                           
  9220                           ; BSR set to: 3
  9221                           ;ring_buffer_LUT.c: 402: terminal_textAttributes(RED, BLACK, NORMAL);
  9222  010964  0E00               	movlw	0
  9223  010966  0101               	movlb	1	; () banked
  9224  010968  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9225  01096A  0E00               	movlw	0
  9226  01096C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9227  01096E  0E01               	movlw	1
  9228  010970  EC1E  F09A         	call	_terminal_textAttributes
  9229                           
  9230                           ;ring_buffer_LUT.c: 403: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9231  010974  0E7A               	movlw	low STR_103
  9232  010976  0101               	movlb	1	; () banked
  9233  010978  6F7C               	movwf	printf@f& (0+255),b
  9234  01097A  0EF6               	movlw	high STR_103
  9235  01097C  6F7D               	movwf	(printf@f+1)& (0+255),b
  9236  01097E  EC52  F086         	call	_printf	;wreg free
  9237                           
  9238                           ;ring_buffer_LUT.c: 404: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9239  010982  0E00               	movlw	0
  9240  010984  0101               	movlb	1	; () banked
  9241  010986  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9242  010988  0E00               	movlw	0
  9243  01098A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9244  01098C  0E03               	movlw	3
  9245  01098E  EC1E  F09A         	call	_terminal_textAttributes
  9246                           
  9247                           ;ring_buffer_LUT.c: 405: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9248  010992  0E14               	movlw	low STR_104
  9249  010994  0101               	movlb	1	; () banked
  9250  010996  6F7C               	movwf	printf@f& (0+255),b
  9251  010998  0EF6               	movlw	high STR_104
  9252  01099A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9253  01099C  EC52  F086         	call	_printf	;wreg free
  9254                           
  9255                           ;ring_buffer_LUT.c: 406: printf("Enter 'Help' for list of available commands\n\r");
  9256  0109A0  0E0E               	movlw	low STR_105
  9257  0109A2  0101               	movlb	1	; () banked
  9258  0109A4  6F7C               	movwf	printf@f& (0+255),b
  9259  0109A6  0EFA               	movlw	high STR_105
  9260  0109A8  6F7D               	movwf	(printf@f+1)& (0+255),b
  9261  0109AA  EC52  F086         	call	_printf	;wreg free
  9262                           
  9263                           ;ring_buffer_LUT.c: 407: terminal_textAttributesReset();
  9264  0109AE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9265                           
  9266                           ;ring_buffer_LUT.c: 409: }
  9267  0109B2  0012               	return	
  9268  0109B4                     l1251:
  9269  0109B4                     l13378:
  9270                           
  9271                           ;ring_buffer_LUT.c: 412: else {
  9272                           ;ring_buffer_LUT.c: 415: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9273  0109B4  0E00               	movlw	0
  9274  0109B6  0101               	movlb	1	; () banked
  9275  0109B8  6F41               	movwf	___fldiv@a& (0+255),b
  9276  0109BA  0E00               	movlw	0
  9277  0109BC  6F42               	movwf	(___fldiv@a+1)& (0+255),b
  9278  0109BE  0EC8               	movlw	200
  9279  0109C0  6F43               	movwf	(___fldiv@a+2)& (0+255),b
  9280  0109C2  0E42               	movlw	66
  9281  0109C4  6F44               	movwf	(___fldiv@a+3)& (0+255),b
  9282  0109C6  0E00               	movlw	0
  9283  0109C8  6F2D               	movwf	___fladd@a& (0+255),b
  9284  0109CA  0E00               	movlw	0
  9285  0109CC  6F2E               	movwf	(___fladd@a+1)& (0+255),b
  9286  0109CE  0EC8               	movlw	200
  9287  0109D0  6F2F               	movwf	(___fladd@a+2)& (0+255),b
  9288  0109D2  0E42               	movlw	66
  9289  0109D4  6F30               	movwf	(___fladd@a+3)& (0+255),b
  9290  0109D6  C39F  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
  9291  0109DA  C3A0  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
  9292  0109DE  0E00               	movlw	0
  9293  0109E0  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9294  0109E2  0EFF               	movlw	-1
  9295  0109E4  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
  9296  0109E6  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
  9297  0109E8  0E01               	movlw	1
  9298  0109EA  EC73  F0AE         	call	___xxtofl
  9299  0109EE  C117  F125         	movff	?___xxtofl,___flneg@f1
  9300  0109F2  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
  9301  0109F6  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
  9302  0109FA  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
  9303  0109FE  ECFB  F0BE         	call	___flneg	;wreg free
  9304  010A02  C125  F129         	movff	?___flneg,___fladd@b
  9305  010A06  C126  F12A         	movff	?___flneg+1,___fladd@b+1
  9306  010A0A  C127  F12B         	movff	?___flneg+2,___fladd@b+2
  9307  010A0E  C128  F12C         	movff	?___flneg+3,___fladd@b+3
  9308  010A12  EC23  F09F         	call	___fladd	;wreg free
  9309  010A16  C129  F13D         	movff	?___fladd,___fldiv@b
  9310  010A1A  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
  9311  010A1E  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
  9312  010A22  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
  9313  010A26  EC27  F0A8         	call	___fldiv	;wreg free
  9314  010A2A  C13D  F156         	movff	?___fldiv,___flmul@b
  9315  010A2E  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
  9316  010A32  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
  9317  010A36  C140  F159         	movff	?___fldiv+3,___flmul@b+3
  9318  010A3A  0EDB               	movlw	219
  9319  010A3C  0101               	movlb	1	; () banked
  9320  010A3E  6F5A               	movwf	___flmul@a& (0+255),b
  9321  010A40  0E0F               	movlw	15
  9322  010A42  6F5B               	movwf	(___flmul@a+1)& (0+255),b
  9323  010A44  0E49               	movlw	73
  9324  010A46  6F5C               	movwf	(___flmul@a+2)& (0+255),b
  9325  010A48  0E40               	movlw	64
  9326  010A4A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
  9327  010A4C  ECD2  F09B         	call	___flmul	;wreg free
  9328  010A50  C156  F0FB         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
  9329  010A54  C157  F0FC         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
  9330  010A58  C158  F0FD         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
  9331  010A5C  C159  F0FE         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
  9332                           
  9333                           ;ring_buffer_LUT.c: 416: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  9334  010A60  C0FB  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
  9335  010A64  C0FC  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
  9336  010A68  C0FD  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
  9337  010A6C  C0FE  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
  9338  010A70  0EE1               	movlw	225
  9339  010A72  0101               	movlb	1	; () banked
  9340  010A74  6F5A               	movwf	___flmul@a& (0+255),b
  9341  010A76  0E2E               	movlw	46
  9342  010A78  6F5B               	movwf	(___flmul@a+1)& (0+255),b
  9343  010A7A  0E65               	movlw	101
  9344  010A7C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
  9345  010A7E  0E42               	movlw	66
  9346  010A80  6F5D               	movwf	(___flmul@a+3)& (0+255),b
  9347  010A82  ECD2  F09B         	call	___flmul	;wreg free
  9348  010A86  C156  F396         	movff	?___flmul,ringBufferLUT@angle_degrees
  9349  010A8A  C157  F397         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
  9350  010A8E  C158  F398         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
  9351  010A92  C159  F399         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
  9352                           
  9353                           ;ring_buffer_LUT.c: 417: dimming_period = (100 - percentage) * (0xFFFF / 100);
  9354  010A96  C39F  F1BE         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  9355  010A9A  C3A0  F1BF         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  9356  010A9E  0101               	movlb	1	; () banked
  9357  010AA0  1FBE               	comf	??_ringBufferLUT& (0+255),f,b
  9358  010AA2  1FBF               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  9359  010AA4  4BBE               	infsnz	??_ringBufferLUT& (0+255),f,b
  9360  010AA6  2BBF               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  9361  010AA8  0E64               	movlw	100
  9362  010AAA  25BE               	addwf	??_ringBufferLUT& (0+255),w,b
  9363  010AAC  6F17               	movwf	___wmul@multiplier& (0+255),b
  9364  010AAE  0E00               	movlw	0
  9365  010AB0  21BF               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  9366  010AB2  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
  9367  010AB4  0E02               	movlw	2
  9368  010AB6  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9369  010AB8  0E8F               	movlw	143
  9370  010ABA  6F19               	movwf	___wmul@multiplicand& (0+255),b
  9371  010ABC  EC41  F0BF         	call	___wmul	;wreg free
  9372  010AC0  C117  F0F9         	movff	?___wmul,_dimming_period	;volatile
  9373  010AC4  C118  F0FA         	movff	?___wmul+1,_dimming_period+1	;volatile
  9374                           
  9375                           ;ring_buffer_LUT.c: 419: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9376  010AC8  0E00               	movlw	0
  9377  010ACA  0101               	movlb	1	; () banked
  9378  010ACC  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9379  010ACE  0E00               	movlw	0
  9380  010AD0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9381  010AD2  0E02               	movlw	2
  9382  010AD4  EC1E  F09A         	call	_terminal_textAttributes
  9383                           
  9384                           ;ring_buffer_LUT.c: 420: printf("Dimming has been set to %d percent\n\r", percentage);
  9385  010AD8  0E7E               	movlw	low STR_106
  9386  010ADA  0101               	movlb	1	; () banked
  9387  010ADC  6F7C               	movwf	printf@f& (0+255),b
  9388  010ADE  0EFB               	movlw	high STR_106
  9389  010AE0  6F7D               	movwf	(printf@f+1)& (0+255),b
  9390  010AE2  C39F  F17E         	movff	ringBufferLUT@percentage,?_printf+2
  9391  010AE6  C3A0  F17F         	movff	ringBufferLUT@percentage+1,?_printf+3
  9392  010AEA  EC52  F086         	call	_printf	;wreg free
  9393                           
  9394                           ;ring_buffer_LUT.c: 421: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  9395  010AEE  0EEE               	movlw	low STR_107
  9396  010AF0  0101               	movlb	1	; () banked
  9397  010AF2  6F7C               	movwf	printf@f& (0+255),b
  9398  010AF4  0EF7               	movlw	high STR_107
  9399  010AF6  6F7D               	movwf	(printf@f+1)& (0+255),b
  9400  010AF8  C0FB  F17E         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  9401  010AFC  C0FC  F17F         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  9402  010B00  C0FD  F180         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  9403  010B04  C0FE  F181         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
  9404  010B08  C396  F182         	movff	ringBufferLUT@angle_degrees,?_printf+6
  9405  010B0C  C397  F183         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
  9406  010B10  C398  F184         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
  9407  010B14  C399  F185         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
  9408  010B18  EC52  F086         	call	_printf	;wreg free
  9409                           
  9410                           ;ring_buffer_LUT.c: 422: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  9411  010B1C  0E25               	movlw	low STR_108
  9412  010B1E  0101               	movlb	1	; () banked
  9413  010B20  6F7C               	movwf	printf@f& (0+255),b
  9414  010B22  0EF7               	movlw	high STR_108
  9415  010B24  6F7D               	movwf	(printf@f+1)& (0+255),b
  9416  010B26  C0F9  F17E         	movff	_dimming_period,?_printf+2	;volatile
  9417  010B2A  C0FA  F17F         	movff	_dimming_period+1,?_printf+3	;volatile
  9418  010B2E  C0F9  F180         	movff	_dimming_period,?_printf+4	;volatile
  9419  010B32  C0FA  F181         	movff	_dimming_period+1,?_printf+5	;volatile
  9420  010B36  EC52  F086         	call	_printf	;wreg free
  9421                           
  9422                           ;ring_buffer_LUT.c: 423: terminal_textAttributesReset();
  9423  010B3A  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9424                           
  9425                           ;ring_buffer_LUT.c: 425: }
  9426                           ;ring_buffer_LUT.c: 427: }
  9427  010B3E  0012               	return	
  9428  010B40                     l1248:
  9429                           
  9430                           ;ring_buffer_LUT.c: 430: else if((0 == strcmp(line, "Device On Time?"))) {
  9431  010B40  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9432  010B44  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9433  010B48  0E4E               	movlw	low STR_109
  9434  010B4A  0101               	movlb	1	; () banked
  9435  010B4C  6F19               	movwf	strcmp@s2& (0+255),b
  9436  010B4E  0EFE               	movlw	high STR_109
  9437  010B50  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9438  010B52  EC51  F0BC         	call	_strcmp	;wreg free
  9439  010B56  0101               	movlb	1	; () banked
  9440  010B58  5117               	movf	?_strcmp& (0+255),w,b
  9441  010B5A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9442  010B5C  A4D8               	btfss	status,2,c
  9443  010B5E  D019               	goto	l1256
  9444                           
  9445                           ; BSR set to: 1
  9446                           ;ring_buffer_LUT.c: 432: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9447  010B60  0E00               	movlw	0
  9448  010B62  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9449  010B64  0E00               	movlw	0
  9450  010B66  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9451  010B68  0E02               	movlw	2
  9452  010B6A  EC1E  F09A         	call	_terminal_textAttributes
  9453                           
  9454                           ;ring_buffer_LUT.c: 433: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  9455  010B6E  0E2D               	movlw	low STR_110
  9456  010B70  0101               	movlb	1	; () banked
  9457  010B72  6F7C               	movwf	printf@f& (0+255),b
  9458  010B74  0EF8               	movlw	high STR_110
  9459  010B76  6F7D               	movwf	(printf@f+1)& (0+255),b
  9460  010B78  C244  F17E         	movff	_dev_on_time,?_printf+2	;volatile
  9461  010B7C  C245  F17F         	movff	_dev_on_time+1,?_printf+3	;volatile
  9462  010B80  C246  F180         	movff	_dev_on_time+2,?_printf+4	;volatile
  9463  010B84  C247  F181         	movff	_dev_on_time+3,?_printf+5	;volatile
  9464  010B88  EC52  F086         	call	_printf	;wreg free
  9465                           
  9466                           ;ring_buffer_LUT.c: 434: terminal_textAttributesReset();
  9467  010B8C  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9468                           
  9469                           ;ring_buffer_LUT.c: 436: }
  9470  010B90  0012               	return	
  9471  010B92                     l1256:
  9472                           
  9473                           ;ring_buffer_LUT.c: 439: else if((0 == strcmp(line, "Load On Time?"))) {
  9474  010B92  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9475  010B96  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9476  010B9A  0EE6               	movlw	low STR_111
  9477  010B9C  0101               	movlb	1	; () banked
  9478  010B9E  6F19               	movwf	strcmp@s2& (0+255),b
  9479  010BA0  0EFE               	movlw	high STR_111
  9480  010BA2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9481  010BA4  EC51  F0BC         	call	_strcmp	;wreg free
  9482  010BA8  0101               	movlb	1	; () banked
  9483  010BAA  5117               	movf	?_strcmp& (0+255),w,b
  9484  010BAC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9485  010BAE  A4D8               	btfss	status,2,c
  9486  010BB0  D019               	goto	l1258
  9487                           
  9488                           ; BSR set to: 1
  9489                           ;ring_buffer_LUT.c: 441: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9490  010BB2  0E00               	movlw	0
  9491  010BB4  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9492  010BB6  0E00               	movlw	0
  9493  010BB8  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9494  010BBA  0E06               	movlw	6
  9495  010BBC  EC1E  F09A         	call	_terminal_textAttributes
  9496                           
  9497                           ;ring_buffer_LUT.c: 442: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  9498  010BC0  0E46               	movlw	low STR_112
  9499  010BC2  0101               	movlb	1	; () banked
  9500  010BC4  6F7C               	movwf	printf@f& (0+255),b
  9501  010BC6  0EF9               	movlw	high STR_112
  9502  010BC8  6F7D               	movwf	(printf@f+1)& (0+255),b
  9503  010BCA  C240  F17E         	movff	_load_on_time,?_printf+2	;volatile
  9504  010BCE  C241  F17F         	movff	_load_on_time+1,?_printf+3	;volatile
  9505  010BD2  C242  F180         	movff	_load_on_time+2,?_printf+4	;volatile
  9506  010BD6  C243  F181         	movff	_load_on_time+3,?_printf+5	;volatile
  9507  010BDA  EC52  F086         	call	_printf	;wreg free
  9508                           
  9509                           ;ring_buffer_LUT.c: 443: terminal_textAttributesReset();
  9510  010BDE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9511                           
  9512                           ;ring_buffer_LUT.c: 445: }
  9513  010BE2  0012               	return	
  9514  010BE4                     l1258:
  9515                           
  9516                           ;ring_buffer_LUT.c: 450: else if((0 == strcmp(line, "Help"))) {
  9517  010BE4  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9518  010BE8  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9519  010BEC  0EAB               	movlw	low STR_113
  9520  010BEE  0101               	movlb	1	; () banked
  9521  010BF0  6F19               	movwf	strcmp@s2& (0+255),b
  9522  010BF2  0EFF               	movlw	high STR_113
  9523  010BF4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9524  010BF6  EC51  F0BC         	call	_strcmp	;wreg free
  9525  010BFA  0101               	movlb	1	; () banked
  9526  010BFC  5117               	movf	?_strcmp& (0+255),w,b
  9527  010BFE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9528  010C00  A4D8               	btfss	status,2,c
  9529  010C02  0012               	return	
  9530                           
  9531                           ; BSR set to: 1
  9532                           ;ring_buffer_LUT.c: 452: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9533  010C04  0E00               	movlw	0
  9534  010C06  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9535  010C08  0E00               	movlw	0
  9536  010C0A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9537  010C0C  0E03               	movlw	3
  9538  010C0E  EC1E  F09A         	call	_terminal_textAttributes
  9539                           
  9540                           ;ring_buffer_LUT.c: 453: printf("List of supported commands:\n\r"
  9541                           ;ring_buffer_LUT.c: 455: "Device Commands:\n\r"
  9542                           ;ring_buffer_LUT.c: 456: "   Reset: Clears the terminal and resets the micro\n\r"
  9543                           ;ring_buffer_LUT.c: 457: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  9544                           ;ring_buffer_LUT.c: 458: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
  9545                           ;ring_buffer_LUT.c: 459: "   *IDN?: Returns device identification string\n\r"
  9546                           ;ring_buffer_LUT.c: 460: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  9547  010C12  0EB9               	movlw	low STR_114
  9548  010C14  0101               	movlb	1	; () banked
  9549  010C16  6F7C               	movwf	printf@f& (0+255),b
  9550  010C18  0EEC               	movlw	high STR_114
  9551  010C1A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9552  010C1C  EC52  F086         	call	_printf	;wreg free
  9553                           
  9554                           ;ring_buffer_LUT.c: 492: terminal_printNewline();
  9555  010C20  EC54  F0C0         	call	_terminal_printNewline	;wreg free
  9556                           
  9557                           ;ring_buffer_LUT.c: 493: printf("Help messages appear in yellow\n\r");
  9558  010C24  0E51               	movlw	low STR_115
  9559  010C26  0101               	movlb	1	; () banked
  9560  010C28  6F7C               	movwf	printf@f& (0+255),b
  9561  010C2A  0EFC               	movlw	high STR_115
  9562  010C2C  6F7D               	movwf	(printf@f+1)& (0+255),b
  9563  010C2E  EC52  F086         	call	_printf	;wreg free
  9564                           
  9565                           ;ring_buffer_LUT.c: 495: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9566  010C32  0E00               	movlw	0
  9567  010C34  0101               	movlb	1	; () banked
  9568  010C36  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9569  010C38  0E00               	movlw	0
  9570  010C3A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9571  010C3C  0E02               	movlw	2
  9572  010C3E  EC1E  F09A         	call	_terminal_textAttributes
  9573                           
  9574                           ;ring_buffer_LUT.c: 496: printf("System parameters appear in green\n\r");
  9575  010C42  0EA3               	movlw	low STR_116
  9576  010C44  0101               	movlb	1	; () banked
  9577  010C46  6F7C               	movwf	printf@f& (0+255),b
  9578  010C48  0EFB               	movlw	high STR_116
  9579  010C4A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9580  010C4C  EC52  F086         	call	_printf	;wreg free
  9581                           
  9582                           ;ring_buffer_LUT.c: 497: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9583  010C50  0E00               	movlw	0
  9584  010C52  0101               	movlb	1	; () banked
  9585  010C54  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9586  010C56  0E00               	movlw	0
  9587  010C58  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9588  010C5A  0E06               	movlw	6
  9589  010C5C  EC1E  F09A         	call	_terminal_textAttributes
  9590                           
  9591                           ;ring_buffer_LUT.c: 498: printf("Measurement responses appear in cyan\n\r");
  9592  010C60  0E0D               	movlw	low STR_117
  9593  010C62  0101               	movlb	1	; () banked
  9594  010C64  6F7C               	movwf	printf@f& (0+255),b
  9595  010C66  0EFB               	movlw	high STR_117
  9596  010C68  6F7D               	movwf	(printf@f+1)& (0+255),b
  9597  010C6A  EC52  F086         	call	_printf	;wreg free
  9598                           
  9599                           ;ring_buffer_LUT.c: 499: terminal_textAttributes(RED, BLACK, NORMAL);
  9600  010C6E  0E00               	movlw	0
  9601  010C70  0101               	movlb	1	; () banked
  9602  010C72  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9603  010C74  0E00               	movlw	0
  9604  010C76  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9605  010C78  0E01               	movlw	1
  9606  010C7A  EC1E  F09A         	call	_terminal_textAttributes
  9607                           
  9608                           ;ring_buffer_LUT.c: 500: printf("Errors appear in red\n\r");
  9609  010C7E  0E2F               	movlw	low STR_118
  9610  010C80  0101               	movlb	1	; () banked
  9611  010C82  6F7C               	movwf	printf@f& (0+255),b
  9612  010C84  0EFD               	movlw	high STR_118
  9613  010C86  6F7D               	movwf	(printf@f+1)& (0+255),b
  9614  010C88  EC52  F086         	call	_printf	;wreg free
  9615                           
  9616                           ;ring_buffer_LUT.c: 501: terminal_textAttributesReset();
  9617  010C8C  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9618                           
  9619                           ;ring_buffer_LUT.c: 502: printf("User input appears in white\n\r");
  9620  010C90  0E92               	movlw	low STR_119
  9621  010C92  0101               	movlb	1	; () banked
  9622  010C94  6F7C               	movwf	printf@f& (0+255),b
  9623  010C96  0EFC               	movlw	high STR_119
  9624  010C98  6F7D               	movwf	(printf@f+1)& (0+255),b
  9625  010C9A  EC52  F086         	call	_printf	;wreg free
  9626                           
  9627                           ;ring_buffer_LUT.c: 505: terminal_printNewline();
  9628  010C9E  EC54  F0C0         	call	_terminal_printNewline	;wreg free
  9629  010CA2  0012               	return	
  9630  010CA4                     __end_of_ringBufferLUT:
  9631                           	opt stack 0
  9632                           tblptru	equ	0xFF8
  9633                           tblptrh	equ	0xFF7
  9634                           tblptrl	equ	0xFF6
  9635                           tablat	equ	0xFF5
  9636                           intcon	equ	0xFF2
  9637                           postinc0	equ	0xFEE
  9638                           wreg	equ	0xFE8
  9639                           indf1	equ	0xFE7
  9640                           postdec1	equ	0xFE5
  9641                           fsr1h	equ	0xFE2
  9642                           fsr1l	equ	0xFE1
  9643                           indf2	equ	0xFDF
  9644                           postinc2	equ	0xFDE
  9645                           fsr2h	equ	0xFDA
  9646                           fsr2l	equ	0xFD9
  9647                           status	equ	0xFD8
  9648                           
  9649 ;; *************** function _terminal_textAttributesReset *****************
  9650 ;; Defined at:
  9651 ;;		line 223 in file "ring_buffer_interface.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;		None
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;Total ram usage:        0 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:   17
  9672 ;; This function calls:
  9673 ;;		_terminal_textAttributes
  9674 ;; This function is called by:
  9675 ;;		_main
  9676 ;;		_ringBufferLUT
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text4
  9681  018086                     __ptext4:
  9682                           	opt stack 0
  9683  018086                     _terminal_textAttributesReset:
  9684                           	opt stack 13
  9685                           
  9686                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  9687                           
  9688                           ;incstack = 0
  9689  018086  0E00               	movlw	0
  9690  018088  0101               	movlb	1	; () banked
  9691  01808A  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9692  01808C  0E00               	movlw	0
  9693  01808E  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9694  018090  0E07               	movlw	7
  9695  018092  EC1E  F09A         	call	_terminal_textAttributes
  9696  018096  0012               	return		;funcret
  9697  018098                     __end_of_terminal_textAttributesReset:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           intcon	equ	0xFF2
  9704                           postinc0	equ	0xFEE
  9705                           wreg	equ	0xFE8
  9706                           indf1	equ	0xFE7
  9707                           postdec1	equ	0xFE5
  9708                           fsr1h	equ	0xFE2
  9709                           fsr1l	equ	0xFE1
  9710                           indf2	equ	0xFDF
  9711                           postinc2	equ	0xFDE
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function _terminal_textAttributes *****************
  9717 ;; Defined at:
  9718 ;;		line 115 in file "ring_buffer_interface.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  foreground_c    1    wreg     enum E17893
  9721 ;;  background_c    1  170[BANK1 ] enum E17893
  9722 ;;  input_attrib    1  171[BANK1 ] enum E17885
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  foreground_c    1  172[BANK1 ] enum E17893
  9725 ;;  output_buff    15  173[BANK1 ] unsigned char [15]
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9735 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9736 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9738 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9739 ;;Total ram usage:       18 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:   16
  9742 ;; This function calls:
  9743 ;;		_printf
  9744 ;;		_strcat
  9745 ;;		_strncpy
  9746 ;; This function is called by:
  9747 ;;		_terminal_textAttributesReset
  9748 ;;		_ringBufferLUT
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text5
  9753  01343C                     __ptext5:
  9754                           	opt stack 0
  9755  01343C                     _terminal_textAttributes:
  9756                           	opt stack 13
  9757                           
  9758                           ;incstack = 0
  9759                           ;terminal_textAttributes@foreground_color stored from wreg
  9760  01343C  0101               	movlb	1	; () banked
  9761  01343E  6FAC               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  9762                           
  9763                           ;ring_buffer_interface.c: 119: char output_buff[15];
  9764                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  9765  013440  0EAD               	movlw	low terminal_textAttributes@output_buff
  9766  013442  0101               	movlb	1	; () banked
  9767  013444  6F17               	movwf	strncpy@to& (0+255),b
  9768  013446  0E01               	movlw	high terminal_textAttributes@output_buff
  9769  013448  6F18               	movwf	(strncpy@to+1)& (0+255),b
  9770  01344A  0EF6               	movlw	low STR_11
  9771  01344C  6F19               	movwf	strncpy@from& (0+255),b
  9772  01344E  0EFF               	movlw	high STR_11
  9773  013450  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  9774  013452  0E00               	movlw	0
  9775  013454  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  9776  013456  0E0F               	movlw	15
  9777  013458  6F1B               	movwf	strncpy@size& (0+255),b
  9778  01345A  ECFF  F0BA         	call	_strncpy	;wreg free
  9779                           
  9780                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  9781  01345E  D054               	goto	l1064
  9782  013460                     
  9783                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  9784  013460  0EAD               	movlw	low terminal_textAttributes@output_buff
  9785  013462  0101               	movlb	1	; () banked
  9786  013464  6F17               	movwf	strcat@to& (0+255),b
  9787  013466  0E01               	movlw	high terminal_textAttributes@output_buff
  9788  013468  6F18               	movwf	(strcat@to+1)& (0+255),b
  9789  01346A  0ECA               	movlw	low (STR_20+1)
  9790  01346C  6F19               	movwf	strcat@from& (0+255),b
  9791  01346E  0EFF               	movlw	high (STR_20+1)
  9792  013470  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9793  013472  ECC8  F0BC         	call	_strcat	;wreg free
  9794                           
  9795                           ;ring_buffer_interface.c: 127: break;
  9796  013476  D05D               	goto	l1066
  9797  013478                     
  9798                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  9799  013478  0EAD               	movlw	low terminal_textAttributes@output_buff
  9800  01347A  0101               	movlb	1	; () banked
  9801  01347C  6F17               	movwf	strcat@to& (0+255),b
  9802  01347E  0E01               	movlw	high terminal_textAttributes@output_buff
  9803  013480  6F18               	movwf	(strcat@to+1)& (0+255),b
  9804  013482  0E70               	movlw	low (STR_67+20)
  9805  013484  6F19               	movwf	strcat@from& (0+255),b
  9806  013486  0EFD               	movlw	high (STR_67+20)
  9807  013488  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9808  01348A  ECC8  F0BC         	call	_strcat	;wreg free
  9809                           
  9810                           ;ring_buffer_interface.c: 130: break;
  9811  01348E  D051               	goto	l1066
  9812  013490                     
  9813                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  9814  013490  0EAD               	movlw	low terminal_textAttributes@output_buff
  9815  013492  0101               	movlb	1	; () banked
  9816  013494  6F17               	movwf	strcat@to& (0+255),b
  9817  013496  0E01               	movlw	high terminal_textAttributes@output_buff
  9818  013498  6F18               	movwf	(strcat@to+1)& (0+255),b
  9819  01349A  0EDF               	movlw	low (STR_24+1)
  9820  01349C  6F19               	movwf	strcat@from& (0+255),b
  9821  01349E  0EFF               	movlw	high (STR_24+1)
  9822  0134A0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9823  0134A2  ECC8  F0BC         	call	_strcat	;wreg free
  9824                           
  9825                           ;ring_buffer_interface.c: 133: break;
  9826  0134A6  D045               	goto	l1066
  9827  0134A8                     
  9828                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  9829  0134A8  0EAD               	movlw	low terminal_textAttributes@output_buff
  9830  0134AA  0101               	movlb	1	; () banked
  9831  0134AC  6F17               	movwf	strcat@to& (0+255),b
  9832  0134AE  0E01               	movlw	high terminal_textAttributes@output_buff
  9833  0134B0  6F18               	movwf	(strcat@to+1)& (0+255),b
  9834  0134B2  0EE5               	movlw	low (STR_25+1)
  9835  0134B4  6F19               	movwf	strcat@from& (0+255),b
  9836  0134B6  0EFF               	movlw	high (STR_25+1)
  9837  0134B8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9838  0134BA  ECC8  F0BC         	call	_strcat	;wreg free
  9839                           
  9840                           ;ring_buffer_interface.c: 136: break;
  9841  0134BE  D039               	goto	l1066
  9842  0134C0                     
  9843                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  9844  0134C0  0EAD               	movlw	low terminal_textAttributes@output_buff
  9845  0134C2  0101               	movlb	1	; () banked
  9846  0134C4  6F17               	movwf	strcat@to& (0+255),b
  9847  0134C6  0E01               	movlw	high terminal_textAttributes@output_buff
  9848  0134C8  6F18               	movwf	(strcat@to+1)& (0+255),b
  9849  0134CA  0EF1               	movlw	low (STR_27+1)
  9850  0134CC  6F19               	movwf	strcat@from& (0+255),b
  9851  0134CE  0EFF               	movlw	high (STR_27+1)
  9852  0134D0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9853  0134D2  ECC8  F0BC         	call	_strcat	;wreg free
  9854                           
  9855                           ;ring_buffer_interface.c: 139: break;
  9856  0134D6  D02D               	goto	l1066
  9857  0134D8                     
  9858                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  9859  0134D8  0EAD               	movlw	low terminal_textAttributes@output_buff
  9860  0134DA  0101               	movlb	1	; () banked
  9861  0134DC  6F17               	movwf	strcat@to& (0+255),b
  9862  0134DE  0E01               	movlw	high terminal_textAttributes@output_buff
  9863  0134E0  6F18               	movwf	(strcat@to+1)& (0+255),b
  9864  0134E2  0EF9               	movlw	low STR_17
  9865  0134E4  6F19               	movwf	strcat@from& (0+255),b
  9866  0134E6  0EFF               	movlw	high STR_17
  9867  0134E8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9868  0134EA  ECC8  F0BC         	call	_strcat	;wreg free
  9869                           
  9870                           ;ring_buffer_interface.c: 142: break;
  9871  0134EE  D021               	goto	l1066
  9872  0134F0                     
  9873                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  9874  0134F0  0EAD               	movlw	low terminal_textAttributes@output_buff
  9875  0134F2  0101               	movlb	1	; () banked
  9876  0134F4  6F17               	movwf	strcat@to& (0+255),b
  9877  0134F6  0E01               	movlw	high terminal_textAttributes@output_buff
  9878  0134F8  6F18               	movwf	(strcat@to+1)& (0+255),b
  9879  0134FA  0ECA               	movlw	low (STR_20+1)
  9880  0134FC  6F19               	movwf	strcat@from& (0+255),b
  9881  0134FE  0EFF               	movlw	high (STR_20+1)
  9882  013500  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9883  013502  ECC8  F0BC         	call	_strcat	;wreg free
  9884                           
  9885                           ;ring_buffer_interface.c: 147: }
  9886                           
  9887                           ;ring_buffer_interface.c: 146: break;
  9888  013506  D015               	goto	l1066
  9889  013508                     l1064:
  9890  013508  0101               	movlb	1	; () banked
  9891  01350A  51AB               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  9892                           
  9893                           ; Switch size 1, requested type "space"
  9894                           ; Number of cases is 6, Range of values is 0 to 5
  9895                           ; switch strategies available:
  9896                           ; Name         Instructions Cycles
  9897                           ; simple_byte           19    10 (average)
  9898                           ;	Chosen strategy is simple_byte
  9899  01350C  0A00               	xorlw	0	; case 0
  9900  01350E  B4D8               	btfsc	status,2,c
  9901  013510  D7A7               	goto	l1065
  9902  013512  0A01               	xorlw	1	; case 1
  9903  013514  B4D8               	btfsc	status,2,c
  9904  013516  D7B0               	goto	l1067
  9905  013518  0A03               	xorlw	3	; case 2
  9906  01351A  B4D8               	btfsc	status,2,c
  9907  01351C  D7B9               	goto	l1068
  9908  01351E  0A01               	xorlw	1	; case 3
  9909  013520  B4D8               	btfsc	status,2,c
  9910  013522  D7C2               	goto	l1069
  9911  013524  0A07               	xorlw	7	; case 4
  9912  013526  B4D8               	btfsc	status,2,c
  9913  013528  D7CB               	goto	l1070
  9914  01352A  0A01               	xorlw	1	; case 5
  9915  01352C  B4D8               	btfsc	status,2,c
  9916  01352E  D7D4               	goto	l1071
  9917  013530  D7DF               	goto	l1072
  9918  013532                     l1066:
  9919                           
  9920                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  9921                           
  9922                           ; BSR set to: 1
  9923  013532  0EAD               	movlw	low terminal_textAttributes@output_buff
  9924  013534  0101               	movlb	1	; () banked
  9925  013536  6F17               	movwf	strcat@to& (0+255),b
  9926  013538  0E01               	movlw	high terminal_textAttributes@output_buff
  9927  01353A  6F18               	movwf	(strcat@to+1)& (0+255),b
  9928  01353C  0EFB               	movlw	low STR_19
  9929  01353E  6F19               	movwf	strcat@from& (0+255),b
  9930  013540  0EFF               	movlw	high STR_19
  9931  013542  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9932  013544  ECC8  F0BC         	call	_strcat	;wreg free
  9933                           
  9934                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  9935  013548  D06C               	goto	l1073
  9936  01354A                     
  9937                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  9938  01354A  0EAD               	movlw	low terminal_textAttributes@output_buff
  9939  01354C  0101               	movlb	1	; () banked
  9940  01354E  6F17               	movwf	strcat@to& (0+255),b
  9941  013550  0E01               	movlw	high terminal_textAttributes@output_buff
  9942  013552  6F18               	movwf	(strcat@to+1)& (0+255),b
  9943  013554  0EC9               	movlw	low STR_20
  9944  013556  6F19               	movwf	strcat@from& (0+255),b
  9945  013558  0EFF               	movlw	high STR_20
  9946  01355A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9947  01355C  ECC8  F0BC         	call	_strcat	;wreg free
  9948                           
  9949                           ;ring_buffer_interface.c: 155: break;
  9950  013560  D07B               	goto	l1075
  9951  013562                     
  9952                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  9953  013562  0EAD               	movlw	low terminal_textAttributes@output_buff
  9954  013564  0101               	movlb	1	; () banked
  9955  013566  6F17               	movwf	strcat@to& (0+255),b
  9956  013568  0E01               	movlw	high terminal_textAttributes@output_buff
  9957  01356A  6F18               	movwf	(strcat@to+1)& (0+255),b
  9958  01356C  0ECC               	movlw	low STR_21
  9959  01356E  6F19               	movwf	strcat@from& (0+255),b
  9960  013570  0EFF               	movlw	high STR_21
  9961  013572  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9962  013574  ECC8  F0BC         	call	_strcat	;wreg free
  9963                           
  9964                           ;ring_buffer_interface.c: 158: break;
  9965  013578  D06F               	goto	l1075
  9966  01357A                     
  9967                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  9968  01357A  0EAD               	movlw	low terminal_textAttributes@output_buff
  9969  01357C  0101               	movlb	1	; () banked
  9970  01357E  6F17               	movwf	strcat@to& (0+255),b
  9971  013580  0E01               	movlw	high terminal_textAttributes@output_buff
  9972  013582  6F18               	movwf	(strcat@to+1)& (0+255),b
  9973  013584  0ED2               	movlw	low STR_22
  9974  013586  6F19               	movwf	strcat@from& (0+255),b
  9975  013588  0EFF               	movlw	high STR_22
  9976  01358A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9977  01358C  ECC8  F0BC         	call	_strcat	;wreg free
  9978                           
  9979                           ;ring_buffer_interface.c: 161: break;
  9980  013590  D063               	goto	l1075
  9981  013592                     
  9982                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  9983  013592  0EAD               	movlw	low terminal_textAttributes@output_buff
  9984  013594  0101               	movlb	1	; () banked
  9985  013596  6F17               	movwf	strcat@to& (0+255),b
  9986  013598  0E01               	movlw	high terminal_textAttributes@output_buff
  9987  01359A  6F18               	movwf	(strcat@to+1)& (0+255),b
  9988  01359C  0ED8               	movlw	low STR_23
  9989  01359E  6F19               	movwf	strcat@from& (0+255),b
  9990  0135A0  0EFF               	movlw	high STR_23
  9991  0135A2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9992  0135A4  ECC8  F0BC         	call	_strcat	;wreg free
  9993                           
  9994                           ;ring_buffer_interface.c: 164: break;
  9995  0135A8  D057               	goto	l1075
  9996  0135AA                     
  9997                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  9998  0135AA  0EAD               	movlw	low terminal_textAttributes@output_buff
  9999  0135AC  0101               	movlb	1	; () banked
 10000  0135AE  6F17               	movwf	strcat@to& (0+255),b
 10001  0135B0  0E01               	movlw	high terminal_textAttributes@output_buff
 10002  0135B2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10003  0135B4  0EDE               	movlw	low STR_24
 10004  0135B6  6F19               	movwf	strcat@from& (0+255),b
 10005  0135B8  0EFF               	movlw	high STR_24
 10006  0135BA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10007  0135BC  ECC8  F0BC         	call	_strcat	;wreg free
 10008                           
 10009                           ;ring_buffer_interface.c: 167: break;
 10010  0135C0  D04B               	goto	l1075
 10011  0135C2                     
 10012                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10013  0135C2  0EAD               	movlw	low terminal_textAttributes@output_buff
 10014  0135C4  0101               	movlb	1	; () banked
 10015  0135C6  6F17               	movwf	strcat@to& (0+255),b
 10016  0135C8  0E01               	movlw	high terminal_textAttributes@output_buff
 10017  0135CA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10018  0135CC  0EE4               	movlw	low STR_25
 10019  0135CE  6F19               	movwf	strcat@from& (0+255),b
 10020  0135D0  0EFF               	movlw	high STR_25
 10021  0135D2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10022  0135D4  ECC8  F0BC         	call	_strcat	;wreg free
 10023                           
 10024                           ;ring_buffer_interface.c: 170: break;
 10025  0135D8  D03F               	goto	l1075
 10026  0135DA                     
 10027                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10028  0135DA  0EAD               	movlw	low terminal_textAttributes@output_buff
 10029  0135DC  0101               	movlb	1	; () banked
 10030  0135DE  6F17               	movwf	strcat@to& (0+255),b
 10031  0135E0  0E01               	movlw	high terminal_textAttributes@output_buff
 10032  0135E2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10033  0135E4  0EEA               	movlw	low STR_26
 10034  0135E6  6F19               	movwf	strcat@from& (0+255),b
 10035  0135E8  0EFF               	movlw	high STR_26
 10036  0135EA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10037  0135EC  ECC8  F0BC         	call	_strcat	;wreg free
 10038                           
 10039                           ;ring_buffer_interface.c: 173: break;
 10040  0135F0  D033               	goto	l1075
 10041  0135F2                     
 10042                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10043  0135F2  0EAD               	movlw	low terminal_textAttributes@output_buff
 10044  0135F4  0101               	movlb	1	; () banked
 10045  0135F6  6F17               	movwf	strcat@to& (0+255),b
 10046  0135F8  0E01               	movlw	high terminal_textAttributes@output_buff
 10047  0135FA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10048  0135FC  0EF0               	movlw	low STR_27
 10049  0135FE  6F19               	movwf	strcat@from& (0+255),b
 10050  013600  0EFF               	movlw	high STR_27
 10051  013602  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10052  013604  ECC8  F0BC         	call	_strcat	;wreg free
 10053                           
 10054                           ;ring_buffer_interface.c: 176: break;
 10055  013608  D027               	goto	l1075
 10056  01360A                     
 10057                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10058  01360A  0EAD               	movlw	low terminal_textAttributes@output_buff
 10059  01360C  0101               	movlb	1	; () banked
 10060  01360E  6F17               	movwf	strcat@to& (0+255),b
 10061  013610  0E01               	movlw	high terminal_textAttributes@output_buff
 10062  013612  6F18               	movwf	(strcat@to+1)& (0+255),b
 10063  013614  0EF0               	movlw	low STR_27
 10064  013616  6F19               	movwf	strcat@from& (0+255),b
 10065  013618  0EFF               	movlw	high STR_27
 10066  01361A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10067  01361C  ECC8  F0BC         	call	_strcat	;wreg free
 10068                           
 10069                           ;ring_buffer_interface.c: 181: }
 10070                           
 10071                           ;ring_buffer_interface.c: 180: break;
 10072  013620  D01B               	goto	l1075
 10073  013622                     l1073:
 10074  013622  0101               	movlb	1	; () banked
 10075  013624  51AC               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10076                           
 10077                           ; Switch size 1, requested type "space"
 10078                           ; Number of cases is 8, Range of values is 0 to 7
 10079                           ; switch strategies available:
 10080                           ; Name         Instructions Cycles
 10081                           ; simple_byte           25    13 (average)
 10082                           ;	Chosen strategy is simple_byte
 10083  013626  0A00               	xorlw	0	; case 0
 10084  013628  B4D8               	btfsc	status,2,c
 10085  01362A  D78F               	goto	l1074
 10086  01362C  0A01               	xorlw	1	; case 1
 10087  01362E  B4D8               	btfsc	status,2,c
 10088  013630  D798               	goto	l1076
 10089  013632  0A03               	xorlw	3	; case 2
 10090  013634  B4D8               	btfsc	status,2,c
 10091  013636  D7A1               	goto	l1077
 10092  013638  0A01               	xorlw	1	; case 3
 10093  01363A  B4D8               	btfsc	status,2,c
 10094  01363C  D7AA               	goto	l1078
 10095  01363E  0A07               	xorlw	7	; case 4
 10096  013640  B4D8               	btfsc	status,2,c
 10097  013642  D7B3               	goto	l1079
 10098  013644  0A01               	xorlw	1	; case 5
 10099  013646  B4D8               	btfsc	status,2,c
 10100  013648  D7BC               	goto	l1080
 10101  01364A  0A03               	xorlw	3	; case 6
 10102  01364C  B4D8               	btfsc	status,2,c
 10103  01364E  D7C5               	goto	l1081
 10104  013650  0A01               	xorlw	1	; case 7
 10105  013652  B4D8               	btfsc	status,2,c
 10106  013654  D7CE               	goto	l1082
 10107  013656  D7D9               	goto	l1083
 10108  013658                     l1075:
 10109                           
 10110                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10111                           
 10112                           ; BSR set to: 1
 10113  013658  0EAD               	movlw	low terminal_textAttributes@output_buff
 10114  01365A  0101               	movlb	1	; () banked
 10115  01365C  6F17               	movwf	strcat@to& (0+255),b
 10116  01365E  0E01               	movlw	high terminal_textAttributes@output_buff
 10117  013660  6F18               	movwf	(strcat@to+1)& (0+255),b
 10118  013662  0EFB               	movlw	low STR_19
 10119  013664  6F19               	movwf	strcat@from& (0+255),b
 10120  013666  0EFF               	movlw	high STR_19
 10121  013668  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10122  01366A  ECC8  F0BC         	call	_strcat	;wreg free
 10123                           
 10124                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10125  01366E  D06C               	goto	l1084
 10126  013670                     
 10127                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10128  013670  0EAD               	movlw	low terminal_textAttributes@output_buff
 10129  013672  0101               	movlb	1	; () banked
 10130  013674  6F17               	movwf	strcat@to& (0+255),b
 10131  013676  0E01               	movlw	high terminal_textAttributes@output_buff
 10132  013678  6F18               	movwf	(strcat@to+1)& (0+255),b
 10133  01367A  0E4D               	movlw	low (STR_120+9)
 10134  01367C  6F19               	movwf	strcat@from& (0+255),b
 10135  01367E  0EFF               	movlw	high (STR_120+9)
 10136  013680  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10137  013682  ECC8  F0BC         	call	_strcat	;wreg free
 10138                           
 10139                           ;ring_buffer_interface.c: 189: break;
 10140  013686  D07B               	goto	l1086
 10141  013688                     
 10142                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10143  013688  0EAD               	movlw	low terminal_textAttributes@output_buff
 10144  01368A  0101               	movlb	1	; () banked
 10145  01368C  6F17               	movwf	strcat@to& (0+255),b
 10146  01368E  0E01               	movlw	high terminal_textAttributes@output_buff
 10147  013690  6F18               	movwf	(strcat@to+1)& (0+255),b
 10148  013692  0ECF               	movlw	low STR_31
 10149  013694  6F19               	movwf	strcat@from& (0+255),b
 10150  013696  0EFF               	movlw	high STR_31
 10151  013698  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10152  01369A  ECC8  F0BC         	call	_strcat	;wreg free
 10153                           
 10154                           ;ring_buffer_interface.c: 192: break;
 10155  01369E  D06F               	goto	l1086
 10156  0136A0                     
 10157                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10158  0136A0  0EAD               	movlw	low terminal_textAttributes@output_buff
 10159  0136A2  0101               	movlb	1	; () banked
 10160  0136A4  6F17               	movwf	strcat@to& (0+255),b
 10161  0136A6  0E01               	movlw	high terminal_textAttributes@output_buff
 10162  0136A8  6F18               	movwf	(strcat@to+1)& (0+255),b
 10163  0136AA  0ED5               	movlw	low STR_32
 10164  0136AC  6F19               	movwf	strcat@from& (0+255),b
 10165  0136AE  0EFF               	movlw	high STR_32
 10166  0136B0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10167  0136B2  ECC8  F0BC         	call	_strcat	;wreg free
 10168                           
 10169                           ;ring_buffer_interface.c: 195: break;
 10170  0136B6  D063               	goto	l1086
 10171  0136B8                     
 10172                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10173  0136B8  0EAD               	movlw	low terminal_textAttributes@output_buff
 10174  0136BA  0101               	movlb	1	; () banked
 10175  0136BC  6F17               	movwf	strcat@to& (0+255),b
 10176  0136BE  0E01               	movlw	high terminal_textAttributes@output_buff
 10177  0136C0  6F18               	movwf	(strcat@to+1)& (0+255),b
 10178  0136C2  0EDB               	movlw	low STR_33
 10179  0136C4  6F19               	movwf	strcat@from& (0+255),b
 10180  0136C6  0EFF               	movlw	high STR_33
 10181  0136C8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10182  0136CA  ECC8  F0BC         	call	_strcat	;wreg free
 10183                           
 10184                           ;ring_buffer_interface.c: 198: break;
 10185  0136CE  D057               	goto	l1086
 10186  0136D0                     
 10187                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10188  0136D0  0EAD               	movlw	low terminal_textAttributes@output_buff
 10189  0136D2  0101               	movlb	1	; () banked
 10190  0136D4  6F17               	movwf	strcat@to& (0+255),b
 10191  0136D6  0E01               	movlw	high terminal_textAttributes@output_buff
 10192  0136D8  6F18               	movwf	(strcat@to+1)& (0+255),b
 10193  0136DA  0EE1               	movlw	low STR_34
 10194  0136DC  6F19               	movwf	strcat@from& (0+255),b
 10195  0136DE  0EFF               	movlw	high STR_34
 10196  0136E0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10197  0136E2  ECC8  F0BC         	call	_strcat	;wreg free
 10198                           
 10199                           ;ring_buffer_interface.c: 201: break;
 10200  0136E6  D04B               	goto	l1086
 10201  0136E8                     
 10202                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10203  0136E8  0EAD               	movlw	low terminal_textAttributes@output_buff
 10204  0136EA  0101               	movlb	1	; () banked
 10205  0136EC  6F17               	movwf	strcat@to& (0+255),b
 10206  0136EE  0E01               	movlw	high terminal_textAttributes@output_buff
 10207  0136F0  6F18               	movwf	(strcat@to+1)& (0+255),b
 10208  0136F2  0EE7               	movlw	low STR_35
 10209  0136F4  6F19               	movwf	strcat@from& (0+255),b
 10210  0136F6  0EFF               	movlw	high STR_35
 10211  0136F8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10212  0136FA  ECC8  F0BC         	call	_strcat	;wreg free
 10213                           
 10214                           ;ring_buffer_interface.c: 204: break;
 10215  0136FE  D03F               	goto	l1086
 10216  013700                     
 10217                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10218  013700  0EAD               	movlw	low terminal_textAttributes@output_buff
 10219  013702  0101               	movlb	1	; () banked
 10220  013704  6F17               	movwf	strcat@to& (0+255),b
 10221  013706  0E01               	movlw	high terminal_textAttributes@output_buff
 10222  013708  6F18               	movwf	(strcat@to+1)& (0+255),b
 10223  01370A  0EED               	movlw	low STR_36
 10224  01370C  6F19               	movwf	strcat@from& (0+255),b
 10225  01370E  0EFF               	movlw	high STR_36
 10226  013710  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10227  013712  ECC8  F0BC         	call	_strcat	;wreg free
 10228                           
 10229                           ;ring_buffer_interface.c: 207: break;
 10230  013716  D033               	goto	l1086
 10231  013718                     
 10232                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10233  013718  0EAD               	movlw	low terminal_textAttributes@output_buff
 10234  01371A  0101               	movlb	1	; () banked
 10235  01371C  6F17               	movwf	strcat@to& (0+255),b
 10236  01371E  0E01               	movlw	high terminal_textAttributes@output_buff
 10237  013720  6F18               	movwf	(strcat@to+1)& (0+255),b
 10238  013722  0EF3               	movlw	low STR_37
 10239  013724  6F19               	movwf	strcat@from& (0+255),b
 10240  013726  0EFF               	movlw	high STR_37
 10241  013728  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10242  01372A  ECC8  F0BC         	call	_strcat	;wreg free
 10243                           
 10244                           ;ring_buffer_interface.c: 210: break;
 10245  01372E  D027               	goto	l1086
 10246  013730                     
 10247                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10248  013730  0EAD               	movlw	low terminal_textAttributes@output_buff
 10249  013732  0101               	movlb	1	; () banked
 10250  013734  6F17               	movwf	strcat@to& (0+255),b
 10251  013736  0E01               	movlw	high terminal_textAttributes@output_buff
 10252  013738  6F18               	movwf	(strcat@to+1)& (0+255),b
 10253  01373A  0EF3               	movlw	low STR_37
 10254  01373C  6F19               	movwf	strcat@from& (0+255),b
 10255  01373E  0EFF               	movlw	high STR_37
 10256  013740  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10257  013742  ECC8  F0BC         	call	_strcat	;wreg free
 10258                           
 10259                           ;ring_buffer_interface.c: 215: }
 10260                           
 10261                           ;ring_buffer_interface.c: 214: break;
 10262  013746  D01B               	goto	l1086
 10263  013748                     l1084:
 10264  013748  0101               	movlb	1	; () banked
 10265  01374A  51AA               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10266                           
 10267                           ; Switch size 1, requested type "space"
 10268                           ; Number of cases is 8, Range of values is 0 to 7
 10269                           ; switch strategies available:
 10270                           ; Name         Instructions Cycles
 10271                           ; simple_byte           25    13 (average)
 10272                           ;	Chosen strategy is simple_byte
 10273  01374C  0A00               	xorlw	0	; case 0
 10274  01374E  B4D8               	btfsc	status,2,c
 10275  013750  D78F               	goto	l1085
 10276  013752  0A01               	xorlw	1	; case 1
 10277  013754  B4D8               	btfsc	status,2,c
 10278  013756  D798               	goto	l1087
 10279  013758  0A03               	xorlw	3	; case 2
 10280  01375A  B4D8               	btfsc	status,2,c
 10281  01375C  D7A1               	goto	l1088
 10282  01375E  0A01               	xorlw	1	; case 3
 10283  013760  B4D8               	btfsc	status,2,c
 10284  013762  D7AA               	goto	l1089
 10285  013764  0A07               	xorlw	7	; case 4
 10286  013766  B4D8               	btfsc	status,2,c
 10287  013768  D7B3               	goto	l1090
 10288  01376A  0A01               	xorlw	1	; case 5
 10289  01376C  B4D8               	btfsc	status,2,c
 10290  01376E  D7BC               	goto	l1091
 10291  013770  0A03               	xorlw	3	; case 6
 10292  013772  B4D8               	btfsc	status,2,c
 10293  013774  D7C5               	goto	l1092
 10294  013776  0A01               	xorlw	1	; case 7
 10295  013778  B4D8               	btfsc	status,2,c
 10296  01377A  D7CE               	goto	l1093
 10297  01377C  D7D9               	goto	l1094
 10298  01377E                     l1086:
 10299                           
 10300                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 10301                           
 10302                           ; BSR set to: 1
 10303  01377E  0EAD               	movlw	low terminal_textAttributes@output_buff
 10304  013780  0101               	movlb	1	; () banked
 10305  013782  6F17               	movwf	strcat@to& (0+255),b
 10306  013784  0E01               	movlw	high terminal_textAttributes@output_buff
 10307  013786  6F18               	movwf	(strcat@to+1)& (0+255),b
 10308  013788  0EFD               	movlw	low STR_39
 10309  01378A  6F19               	movwf	strcat@from& (0+255),b
 10310  01378C  0EFF               	movlw	high STR_39
 10311  01378E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10312  013790  ECC8  F0BC         	call	_strcat	;wreg free
 10313                           
 10314                           ;ring_buffer_interface.c: 219: printf(output_buff);
 10315  013794  0EAD               	movlw	low terminal_textAttributes@output_buff
 10316  013796  0101               	movlb	1	; () banked
 10317  013798  6F7C               	movwf	printf@f& (0+255),b
 10318  01379A  0E01               	movlw	high terminal_textAttributes@output_buff
 10319  01379C  6F7D               	movwf	(printf@f+1)& (0+255),b
 10320  01379E  EC52  F086         	call	_printf	;wreg free
 10321  0137A2  0012               	return		;funcret
 10322  0137A4                     __end_of_terminal_textAttributes:
 10323                           	opt stack 0
 10324                           tblptru	equ	0xFF8
 10325                           tblptrh	equ	0xFF7
 10326                           tblptrl	equ	0xFF6
 10327                           tablat	equ	0xFF5
 10328                           intcon	equ	0xFF2
 10329                           postinc0	equ	0xFEE
 10330                           wreg	equ	0xFE8
 10331                           indf1	equ	0xFE7
 10332                           postdec1	equ	0xFE5
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           indf2	equ	0xFDF
 10336                           postinc2	equ	0xFDE
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8
 10340                           
 10341 ;; *************** function _strncpy *****************
 10342 ;; Defined at:
 10343 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10346 ;;		 -> terminal_textAttributes@output_buff(15), 
 10347 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10348 ;;		 -> STR_11(3), 
 10349 ;;  size            2   27[BANK1 ] unsigned int 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 10352 ;;		 -> terminal_textAttributes@output_buff(15), 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  2   23[BANK1 ] PTR unsigned char 
 10355 ;; Registers used:
 10356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10362 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10365 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10366 ;;Total ram usage:        8 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:   13
 10369 ;; This function calls:
 10370 ;;		Nothing
 10371 ;; This function is called by:
 10372 ;;		_terminal_textAttributes
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text6
 10377  0175FE                     __ptext6:
 10378                           	opt stack 0
 10379  0175FE                     _strncpy:
 10380                           	opt stack 15
 10381                           
 10382                           ;incstack = 0
 10383  0175FE  C117  F11D         	movff	strncpy@to,strncpy@cp
 10384  017602  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 10385  017606  D018               	goto	l2167
 10386  017608  0101               	movlb	1	; () banked
 10387  01760A  071B               	decf	strncpy@size& (0+255),f,b
 10388  01760C  A0D8               	btfss	status,0,c
 10389  01760E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10390                           
 10391                           ; BSR set to: 1
 10392  017610  C119  FFF6         	movff	strncpy@from,tblptrl
 10393  017614  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 10394  017618  4B19               	infsnz	strncpy@from& (0+255),f,b
 10395  01761A  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 10396  01761C                     	if	0	;tblptru may be non-zero
 10397  01761C                     	endif
 10398  01761C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10399  01761C  0E00               	movlw	low (__mediumconst shr (0+16))
 10400  01761E  6EF8               	movwf	tblptru,c
 10401  017620                     	endif
 10402  017620  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10403  017624  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10404  017628  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10405  01762A  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10406  01762C  0008               	tblrd		*
 10407  01762E  CFF5 FFDF          	movff	tablat,indf2
 10408  017632  50DF               	movf	indf2,w,c
 10409  017634  B4D8               	btfsc	status,2,c
 10410  017636  D00E               	goto	l2169
 10411  017638                     l2167:
 10412                           
 10413                           ; BSR set to: 1
 10414                           
 10415                           ; BSR set to: 1
 10416  017638  0101               	movlb	1	; () banked
 10417  01763A  511B               	movf	strncpy@size& (0+255),w,b
 10418  01763C  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 10419  01763E  B4D8               	btfsc	status,2,c
 10420  017640  D009               	goto	l2169
 10421  017642  D7E2               	goto	l2166
 10422  017644                     l12028:
 10423                           
 10424                           ; BSR set to: 1
 10425  017644  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10426  017648  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10427  01764C  0E00               	movlw	0
 10428  01764E  6EDF               	movwf	indf2,c
 10429                           
 10430                           ; BSR set to: 1
 10431  017650  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10432  017652  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10433  017654                     l2169:
 10434                           
 10435                           ; BSR set to: 1
 10436                           
 10437                           ; BSR set to: 1
 10438  017654  071B               	decf	strncpy@size& (0+255),f,b
 10439  017656  A0D8               	btfss	status,0,c
 10440  017658  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10441  01765A  291B               	incf	strncpy@size& (0+255),w,b
 10442  01765C  E1F3               	bnz	l12028
 10443  01765E  291C               	incf	(strncpy@size+1)& (0+255),w,b
 10444  017660  B4D8               	btfsc	status,2,c
 10445  017662  0012               	return	
 10446  017664  D7EF               	goto	l2170
 10447  017666                     __end_of_strncpy:
 10448                           	opt stack 0
 10449                           tblptru	equ	0xFF8
 10450                           tblptrh	equ	0xFF7
 10451                           tblptrl	equ	0xFF6
 10452                           tablat	equ	0xFF5
 10453                           intcon	equ	0xFF2
 10454                           postinc0	equ	0xFEE
 10455                           wreg	equ	0xFE8
 10456                           indf1	equ	0xFE7
 10457                           postdec1	equ	0xFE5
 10458                           fsr1h	equ	0xFE2
 10459                           fsr1l	equ	0xFE1
 10460                           indf2	equ	0xFDF
 10461                           postinc2	equ	0xFDE
 10462                           fsr2h	equ	0xFDA
 10463                           fsr2l	equ	0xFD9
 10464                           status	equ	0xFD8
 10465                           
 10466 ;; *************** function _strcat *****************
 10467 ;; Defined at:
 10468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10471 ;;		 -> terminal_textAttributes@output_buff(15), 
 10472 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10473 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 10474 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 10475 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 10476 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 10477 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 10478 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 10479 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 10482 ;;		 -> terminal_textAttributes@output_buff(15), 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  2   23[BANK1 ] PTR unsigned char 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10492 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10493 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10495 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;Total ram usage:        6 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:   13
 10499 ;; This function calls:
 10500 ;;		Nothing
 10501 ;; This function is called by:
 10502 ;;		_terminal_textAttributes
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text7
 10507  017990                     __ptext7:
 10508                           	opt stack 0
 10509  017990                     _strcat:
 10510                           	opt stack 15
 10511                           
 10512                           ; BSR set to: 1
 10513                           ;incstack = 0
 10514  017990  C117  F11B         	movff	strcat@to,strcat@cp
 10515  017994  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 10516  017998  D003               	goto	l2136
 10517  01799A  0101               	movlb	1	; () banked
 10518  01799C  4B1B               	infsnz	strcat@cp& (0+255),f,b
 10519  01799E  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 10520  0179A0                     l2136:
 10521                           
 10522                           ; BSR set to: 1
 10523  0179A0  C11B  FFD9         	movff	strcat@cp,fsr2l
 10524  0179A4  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 10525  0179A8  50DF               	movf	indf2,w,c
 10526  0179AA  B4D8               	btfsc	status,2,c
 10527  0179AC  D006               	goto	l2139
 10528  0179AE  D7F5               	goto	l2137
 10529  0179B0  0101               	movlb	1	; () banked
 10530  0179B2  4B1B               	infsnz	strcat@cp& (0+255),f,b
 10531  0179B4  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 10532  0179B6  4B19               	infsnz	strcat@from& (0+255),f,b
 10533  0179B8  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 10534  0179BA                     l2139:
 10535                           
 10536                           ; BSR set to: 1
 10537  0179BA  C119  FFF6         	movff	strcat@from,tblptrl
 10538  0179BE  C11A  FFF7         	movff	strcat@from+1,tblptrh
 10539  0179C2                     	if	0	;tblptru may be non-zero
 10540  0179C2                     	endif
 10541  0179C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10542  0179C2  0E00               	movlw	low (__mediumconst shr (0+16))
 10543  0179C4  6EF8               	movwf	tblptru,c
 10544  0179C6                     	endif
 10545  0179C6  C11B  FFD9         	movff	strcat@cp,fsr2l
 10546  0179CA  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 10547  0179CE  0008               	tblrd		*
 10548  0179D0  CFF5 FFDF          	movff	tablat,indf2
 10549  0179D4  50DF               	movf	indf2,w,c
 10550  0179D6  B4D8               	btfsc	status,2,c
 10551  0179D8  0012               	return	
 10552  0179DA  D7EA               	goto	l2140
 10553  0179DC                     __end_of_strcat:
 10554                           	opt stack 0
 10555                           tblptru	equ	0xFF8
 10556                           tblptrh	equ	0xFF7
 10557                           tblptrl	equ	0xFF6
 10558                           tablat	equ	0xFF5
 10559                           intcon	equ	0xFF2
 10560                           postinc0	equ	0xFEE
 10561                           wreg	equ	0xFE8
 10562                           indf1	equ	0xFE7
 10563                           postdec1	equ	0xFE5
 10564                           fsr1h	equ	0xFE2
 10565                           fsr1l	equ	0xFE1
 10566                           indf2	equ	0xFDF
 10567                           postinc2	equ	0xFDE
 10568                           fsr2h	equ	0xFDA
 10569                           fsr2l	equ	0xFD9
 10570                           status	equ	0xFD8
 10571                           
 10572 ;; *************** function _terminal_printNewline *****************
 10573 ;; Defined at:
 10574 ;;		line 230 in file "ring_buffer_interface.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;		None
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;		None
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10592 ;;Total ram usage:        0 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:   16
 10595 ;; This function calls:
 10596 ;;		_printf
 10597 ;; This function is called by:
 10598 ;;		_ringBufferLUT
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text8
 10603  0180A8                     __ptext8:
 10604                           	opt stack 0
 10605  0180A8                     _terminal_printNewline:
 10606                           	opt stack 12
 10607                           
 10608                           ;ring_buffer_interface.c: 232: printf("\n\r");
 10609                           
 10610                           ;incstack = 0
 10611  0180A8  0E69               	movlw	low (STR_108+68)
 10612  0180AA  0101               	movlb	1	; () banked
 10613  0180AC  6F7C               	movwf	printf@f& (0+255),b
 10614  0180AE  0EF7               	movlw	high (STR_108+68)
 10615  0180B0  6F7D               	movwf	(printf@f+1)& (0+255),b
 10616  0180B2  EC52  F086         	call	_printf	;wreg free
 10617  0180B6  0012               	return		;funcret
 10618  0180B8                     __end_of_terminal_printNewline:
 10619                           	opt stack 0
 10620                           tblptru	equ	0xFF8
 10621                           tblptrh	equ	0xFF7
 10622                           tblptrl	equ	0xFF6
 10623                           tablat	equ	0xFF5
 10624                           intcon	equ	0xFF2
 10625                           postinc0	equ	0xFEE
 10626                           wreg	equ	0xFE8
 10627                           indf1	equ	0xFE7
 10628                           postdec1	equ	0xFE5
 10629                           fsr1h	equ	0xFE2
 10630                           fsr1l	equ	0xFE1
 10631                           indf2	equ	0xFDF
 10632                           postinc2	equ	0xFDE
 10633                           fsr2h	equ	0xFDA
 10634                           fsr2l	equ	0xFD9
 10635                           status	equ	0xFD8
 10636                           
 10637 ;; *************** function _strstr *****************
 10638 ;; Defined at:
 10639 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 10642 ;;		 -> NULL(0), line(64), 
 10643 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 10644 ;;		 -> STR_102(25), 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  2   38[BANK1 ] PTR unsigned char 
 10649 ;; Registers used:
 10650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10656 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;Total ram usage:        4 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:   14
 10663 ;; This function calls:
 10664 ;;		_strchr
 10665 ;;		_strlen
 10666 ;;		_strncmp
 10667 ;; This function is called by:
 10668 ;;		_ringBufferLUT
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text9
 10673  016FB2                     __ptext9:
 10674                           	opt stack 0
 10675  016FB2                     _strstr:
 10676                           	opt stack 14
 10677                           
 10678                           ;incstack = 0
 10679  016FB2  D034               	goto	l2181
 10680  016FB4  C126  F11D         	movff	strstr@s1,strncmp@s1
 10681  016FB8  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 10682  016FBC  C128  F11F         	movff	strstr@s2,strncmp@s2
 10683  016FC0  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 10684  016FC4  C128  F117         	movff	strstr@s2,strlen@s
 10685  016FC8  C129  F118         	movff	strstr@s2+1,strlen@s+1
 10686  016FCC  ECFC  F0BB         	call	_strlen	;wreg free
 10687  016FD0  C117  F121         	movff	?_strlen,strncmp@len
 10688  016FD4  C118  F122         	movff	?_strlen+1,strncmp@len+1
 10689  016FD8  EC91  F0B7         	call	_strncmp	;wreg free
 10690  016FDC  0101               	movlb	1	; () banked
 10691  016FDE  511D               	movf	?_strncmp& (0+255),w,b
 10692  016FE0  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 10693  016FE2  A4D8               	btfss	status,2,c
 10694  016FE4  D005               	goto	l2183
 10695                           
 10696                           ; BSR set to: 1
 10697  016FE6  C126  F126         	movff	strstr@s1,?_strstr
 10698  016FEA  C127  F127         	movff	strstr@s1+1,?_strstr+1
 10699                           
 10700                           ; BSR set to: 1
 10701  016FEE  0012               	return	
 10702  016FF0                     l2183:
 10703                           
 10704                           ; BSR set to: 1
 10705                           
 10706                           ; BSR set to: 1
 10707  016FF0  0E01               	movlw	1
 10708  016FF2  2526               	addwf	strstr@s1& (0+255),w,b
 10709  016FF4  6F17               	movwf	strchr@ptr& (0+255),b
 10710  016FF6  0E00               	movlw	0
 10711  016FF8  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 10712  016FFA  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 10713  016FFC  C128  FFF6         	movff	strstr@s2,tblptrl
 10714  017000  C129  FFF7         	movff	strstr@s2+1,tblptrh
 10715  017004                     	if	0	;tblptru may be non-zero
 10716  017004                     	endif
 10717  017004                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10718  017004  0E00               	movlw	low (__mediumconst shr (0+16))
 10719  017006  6EF8               	movwf	tblptru,c
 10720  017008                     	endif
 10721  017008  0008               	tblrd		*
 10722  01700A  50F5               	movf	tablat,w,c
 10723  01700C  6F19               	movwf	strchr@chr& (0+255),b
 10724  01700E  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 10725  017010  EC44  F0BE         	call	_strchr	;wreg free
 10726  017014  C117  F126         	movff	?_strchr,strstr@s1
 10727  017018  C118  F127         	movff	?_strchr+1,strstr@s1+1
 10728  01701C                     l2181:
 10729  01701C  0101               	movlb	1	; () banked
 10730  01701E  5126               	movf	strstr@s1& (0+255),w,b
 10731  017020  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 10732  017022  B4D8               	btfsc	status,2,c
 10733  017024  D007               	goto	u14930
 10734                           
 10735                           ; BSR set to: 1
 10736  017026  C126  FFD9         	movff	strstr@s1,fsr2l
 10737  01702A  C127  FFDA         	movff	strstr@s1+1,fsr2h
 10738  01702E  50DF               	movf	indf2,w,c
 10739  017030  A4D8               	btfss	status,2,c
 10740  017032  D7C0               	goto	l2182
 10741  017034                     u14930:
 10742                           
 10743                           ; BSR set to: 1
 10744                           
 10745                           ; BSR set to: 1
 10746                           
 10747                           ; BSR set to: 1
 10748  017034  0E00               	movlw	0
 10749  017036  6F26               	movwf	?_strstr& (0+255),b
 10750  017038  0E00               	movlw	0
 10751  01703A  6F27               	movwf	(?_strstr+1)& (0+255),b
 10752  01703C  0012               	return	
 10753  01703E                     __end_of_strstr:
 10754                           	opt stack 0
 10755                           tblptru	equ	0xFF8
 10756                           tblptrh	equ	0xFF7
 10757                           tblptrl	equ	0xFF6
 10758                           tablat	equ	0xFF5
 10759                           intcon	equ	0xFF2
 10760                           postinc0	equ	0xFEE
 10761                           wreg	equ	0xFE8
 10762                           indf1	equ	0xFE7
 10763                           postdec1	equ	0xFE5
 10764                           fsr1h	equ	0xFE2
 10765                           fsr1l	equ	0xFE1
 10766                           indf2	equ	0xFDF
 10767                           postinc2	equ	0xFDE
 10768                           fsr2h	equ	0xFDA
 10769                           fsr2l	equ	0xFD9
 10770                           status	equ	0xFD8
 10771                           
 10772 ;; *************** function _strncmp *****************
 10773 ;; Defined at:
 10774 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 10777 ;;		 -> NULL(0), line(64), 
 10778 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 10779 ;;		 -> STR_102(25), 
 10780 ;;  len             2   33[BANK1 ] unsigned int 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  2   29[BANK1 ] int 
 10785 ;; Registers used:
 10786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10792 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10794 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10795 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;Total ram usage:        9 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:   13
 10799 ;; This function calls:
 10800 ;;		Nothing
 10801 ;; This function is called by:
 10802 ;;		_strstr
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text10
 10807  016F22                     __ptext10:
 10808                           	opt stack 0
 10809  016F22                     _strncmp:
 10810                           	opt stack 14
 10811                           
 10812                           ; BSR set to: 1
 10813                           ;incstack = 0
 10814  016F22  D039               	goto	l2240
 10815  016F24                     l12244:
 10816  016F24  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10817  016F28  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10818  016F2C  50DF               	movf	indf2,w,c
 10819  016F2E  B4D8               	btfsc	status,2,c
 10820  016F30  D012               	goto	u14660
 10821  016F32  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10822  016F36  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10823  016F3A  50DF               	movf	indf2,w,c
 10824  016F3C  0101               	movlb	1	; () banked
 10825  016F3E  6F23               	movwf	??_strncmp& (0+255),b
 10826  016F40  C11F  FFF6         	movff	strncmp@s2,tblptrl
 10827  016F44  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 10828  016F48                     	if	0	;tblptru may be non-zero
 10829  016F48                     	endif
 10830  016F48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10831  016F48  0E00               	movlw	low (__mediumconst shr (0+16))
 10832  016F4A  6EF8               	movwf	tblptru,c
 10833  016F4C                     	endif
 10834  016F4C  0008               	tblrd		*
 10835  016F4E  50F5               	movf	tablat,w,c
 10836  016F50  1923               	xorwf	??_strncmp& (0+255),w,b
 10837  016F52  B4D8               	btfsc	status,2,c
 10838  016F54  D01C               	goto	l2242
 10839  016F56                     u14660:
 10840                           
 10841                           ; BSR set to: 1
 10842  016F56  C11F  FFF6         	movff	strncmp@s2,tblptrl
 10843  016F5A  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 10844  016F5E                     	if	0	;tblptru may be non-zero
 10845  016F5E                     	endif
 10846  016F5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10847  016F5E  0E00               	movlw	low (__mediumconst shr (0+16))
 10848  016F60  6EF8               	movwf	tblptru,c
 10849  016F62                     	endif
 10850  016F62  0008               	tblrd		*
 10851  016F64  50F5               	movf	tablat,w,c
 10852  016F66  0101               	movlb	1	; () banked
 10853  016F68  6F23               	movwf	??_strncmp& (0+255),b
 10854  016F6A  6B24               	clrf	(??_strncmp+1)& (0+255),b
 10855  016F6C  1F23               	comf	??_strncmp& (0+255),f,b
 10856  016F6E  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 10857  016F70  4B23               	infsnz	??_strncmp& (0+255),f,b
 10858  016F72  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 10859  016F74  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10860  016F78  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10861  016F7C  50DF               	movf	indf2,w,c
 10862  016F7E  6F25               	movwf	(??_strncmp+2)& (0+255),b
 10863  016F80  5125               	movf	(??_strncmp+2)& (0+255),w,b
 10864  016F82  2523               	addwf	??_strncmp& (0+255),w,b
 10865  016F84  6F1D               	movwf	?_strncmp& (0+255),b
 10866  016F86  0E00               	movlw	0
 10867  016F88  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 10868  016F8A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 10869                           
 10870                           ; BSR set to: 1
 10871  016F8C  0012               	return	
 10872  016F8E                     l2242:
 10873                           
 10874                           ; BSR set to: 1
 10875                           
 10876                           ; BSR set to: 1
 10877  016F8E  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 10878  016F90  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 10879  016F92  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 10880  016F94  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 10881  016F96                     l2240:
 10882                           
 10883                           ; BSR set to: 1
 10884  016F96  0101               	movlb	1	; () banked
 10885  016F98  0721               	decf	strncmp@len& (0+255),f,b
 10886  016F9A  A0D8               	btfss	status,0,c
 10887  016F9C  0722               	decf	(strncmp@len+1)& (0+255),f,b
 10888  016F9E  2921               	incf	strncmp@len& (0+255),w,b
 10889  016FA0  E1C1               	bnz	l12244
 10890  016FA2  2922               	incf	(strncmp@len+1)& (0+255),w,b
 10891  016FA4  A4D8               	btfss	status,2,c
 10892  016FA6  D7BE               	goto	l2241
 10893                           
 10894                           ; BSR set to: 1
 10895                           
 10896                           ; BSR set to: 1
 10897  016FA8  0E00               	movlw	0
 10898  016FAA  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 10899  016FAC  0E00               	movlw	0
 10900  016FAE  6F1D               	movwf	?_strncmp& (0+255),b
 10901  016FB0  0012               	return	
 10902  016FB2                     __end_of_strncmp:
 10903                           	opt stack 0
 10904                           tblptru	equ	0xFF8
 10905                           tblptrh	equ	0xFF7
 10906                           tblptrl	equ	0xFF6
 10907                           tablat	equ	0xFF5
 10908                           intcon	equ	0xFF2
 10909                           postinc0	equ	0xFEE
 10910                           wreg	equ	0xFE8
 10911                           indf1	equ	0xFE7
 10912                           postdec1	equ	0xFE5
 10913                           fsr1h	equ	0xFE2
 10914                           fsr1l	equ	0xFE1
 10915                           indf2	equ	0xFDF
 10916                           postinc2	equ	0xFDE
 10917                           fsr2h	equ	0xFDA
 10918                           fsr2l	equ	0xFD9
 10919                           status	equ	0xFD8
 10920                           
 10921 ;; *************** function _strlen *****************
 10922 ;; Defined at:
 10923 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 10926 ;;		 -> STR_102(25), line(64), 
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 10929 ;;		 -> STR_102(25), line(64), 
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  2   23[BANK1 ] unsigned int 
 10932 ;; Registers used:
 10933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10940 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10941 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10942 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10943 ;;Total ram usage:        6 bytes
 10944 ;; Hardware stack levels used:    1
 10945 ;; Hardware stack levels required when called:   13
 10946 ;; This function calls:
 10947 ;;		Nothing
 10948 ;; This function is called by:
 10949 ;;		_terminal_ringBufferPull
 10950 ;;		_strstr
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           	psect	text11
 10955  0177F8                     __ptext11:
 10956                           	opt stack 0
 10957  0177F8                     _strlen:
 10958                           	opt stack 16
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;incstack = 0
 10962  0177F8  C117  F11B         	movff	strlen@s,strlen@cp
 10963  0177FC  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 10964  017800  D003               	goto	l2159
 10965  017802  0101               	movlb	1	; () banked
 10966  017804  4B1B               	infsnz	strlen@cp& (0+255),f,b
 10967  017806  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 10968  017808                     l2159:
 10969                           
 10970                           ; BSR set to: 1
 10971  017808  C11B  FFF6         	movff	strlen@cp,tblptrl
 10972  01780C  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 10973  017810  0E00               	movlw	low (__mediumconst shr (0+16))
 10974  017812  6EF8               	movwf	tblptru,c
 10975  017814  0E0D               	movlw	(high __ramtop+-1)
 10976  017816  64F7               	cpfsgt	tblptrh,c
 10977  017818  D003               	bra	u14637
 10978  01781A  0008               	tblrd		*
 10979  01781C  50F5               	movf	tablat,w,c
 10980  01781E  D005               	bra	u14630
 10981  017820                     u14637:
 10982  017820  CFF6 FFE9          	movff	tblptrl,fsr0l
 10983  017824  CFF7 FFEA          	movff	tblptrh,fsr0h
 10984  017828  50EF               	movf	indf0,w,c
 10985  01782A                     u14630:
 10986  01782A  0900               	iorlw	0
 10987  01782C  A4D8               	btfss	status,2,c
 10988  01782E  D7E9               	goto	l2160
 10989  017830  C117  F119         	movff	strlen@s,??_strlen
 10990  017834  C118  F11A         	movff	strlen@s+1,??_strlen+1
 10991  017838  0101               	movlb	1	; () banked
 10992  01783A  1F19               	comf	??_strlen& (0+255),f,b
 10993  01783C  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 10994  01783E  4B19               	infsnz	??_strlen& (0+255),f,b
 10995  017840  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 10996  017842  511B               	movf	strlen@cp& (0+255),w,b
 10997  017844  2519               	addwf	??_strlen& (0+255),w,b
 10998  017846  6F17               	movwf	?_strlen& (0+255),b
 10999  017848  511C               	movf	(strlen@cp+1)& (0+255),w,b
 11000  01784A  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 11001  01784C  6F18               	movwf	(?_strlen+1)& (0+255),b
 11002  01784E  0012               	return	
 11003  017850                     __end_of_strlen:
 11004                           	opt stack 0
 11005                           tblptru	equ	0xFF8
 11006                           tblptrh	equ	0xFF7
 11007                           tblptrl	equ	0xFF6
 11008                           tablat	equ	0xFF5
 11009                           intcon	equ	0xFF2
 11010                           indf0	equ	0xFEF
 11011                           postinc0	equ	0xFEE
 11012                           fsr0h	equ	0xFEA
 11013                           fsr0l	equ	0xFE9
 11014                           wreg	equ	0xFE8
 11015                           indf1	equ	0xFE7
 11016                           postdec1	equ	0xFE5
 11017                           fsr1h	equ	0xFE2
 11018                           fsr1l	equ	0xFE1
 11019                           indf2	equ	0xFDF
 11020                           postinc2	equ	0xFDE
 11021                           fsr2h	equ	0xFDA
 11022                           fsr2l	equ	0xFD9
 11023                           status	equ	0xFD8
 11024                           
 11025 ;; *************** function _strchr *****************
 11026 ;; Defined at:
 11027 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 11028 ;; Parameters:    Size  Location     Type
 11029 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 11030 ;;		 -> NULL(0), line(64), 
 11031 ;;  chr             2   25[BANK1 ] int 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;		None
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  2   23[BANK1 ] PTR unsigned char 
 11036 ;; Registers used:
 11037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11043 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11045 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11046 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11047 ;;Total ram usage:        5 bytes
 11048 ;; Hardware stack levels used:    1
 11049 ;; Hardware stack levels required when called:   13
 11050 ;; This function calls:
 11051 ;;		Nothing
 11052 ;; This function is called by:
 11053 ;;		_strstr
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057                           	psect	text12
 11058  017C88                     __ptext12:
 11059                           	opt stack 0
 11060  017C88                     _strchr:
 11061                           	opt stack 14
 11062                           
 11063                           ; BSR set to: 1
 11064                           ;incstack = 0
 11065  017C88  C117  FFD9         	movff	strchr@ptr,fsr2l
 11066  017C8C  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11067  017C90  0101               	movlb	1	; () banked
 11068  017C92  5119               	movf	strchr@chr& (0+255),w,b
 11069  017C94  18DE               	xorwf	postinc2,w,c
 11070  017C96  A4D8               	btfss	status,2,c
 11071  017C98  D005               	goto	l2235
 11072                           
 11073                           ; BSR set to: 1
 11074  017C9A  C117  F117         	movff	strchr@ptr,?_strchr
 11075  017C9E  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11076                           
 11077                           ; BSR set to: 1
 11078  017CA2  0012               	return	
 11079  017CA4                     l2235:
 11080                           
 11081                           ; BSR set to: 1
 11082                           
 11083                           ; BSR set to: 1
 11084  017CA4  C117  FFD9         	movff	strchr@ptr,fsr2l
 11085  017CA8  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11086  017CAC  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11087  017CAE  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11088  017CB0  50DF               	movf	indf2,w,c
 11089  017CB2  A4D8               	btfss	status,2,c
 11090  017CB4  D7E9               	goto	_strchr
 11091                           
 11092                           ; BSR set to: 1
 11093                           
 11094                           ; BSR set to: 1
 11095  017CB6  0E00               	movlw	0
 11096  017CB8  6F17               	movwf	?_strchr& (0+255),b
 11097  017CBA  0E00               	movlw	0
 11098  017CBC  6F18               	movwf	(?_strchr+1)& (0+255),b
 11099  017CBE  0012               	return	
 11100  017CC0                     __end_of_strchr:
 11101                           	opt stack 0
 11102                           tblptru	equ	0xFF8
 11103                           tblptrh	equ	0xFF7
 11104                           tblptrl	equ	0xFF6
 11105                           tablat	equ	0xFF5
 11106                           intcon	equ	0xFF2
 11107                           indf0	equ	0xFEF
 11108                           postinc0	equ	0xFEE
 11109                           fsr0h	equ	0xFEA
 11110                           fsr0l	equ	0xFE9
 11111                           wreg	equ	0xFE8
 11112                           indf1	equ	0xFE7
 11113                           postdec1	equ	0xFE5
 11114                           fsr1h	equ	0xFE2
 11115                           fsr1l	equ	0xFE1
 11116                           indf2	equ	0xFDF
 11117                           postinc2	equ	0xFDE
 11118                           fsr2h	equ	0xFDA
 11119                           fsr2l	equ	0xFD9
 11120                           status	equ	0xFD8
 11121                           
 11122 ;; *************** function _strcpy *****************
 11123 ;; Defined at:
 11124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11127 ;;		 -> ringBufferLUT@channel_name(22), 
 11128 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11129 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 11130 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11133 ;;		 -> ringBufferLUT@channel_name(22), 
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  2   23[BANK1 ] PTR unsigned char 
 11136 ;; Registers used:
 11137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11143 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11144 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;Total ram usage:        6 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:   13
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_ringBufferLUT
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text13
 11158  017CC0                     __ptext13:
 11159                           	opt stack 0
 11160  017CC0                     _strcpy:
 11161                           	opt stack 15
 11162                           
 11163                           ; BSR set to: 1
 11164                           ;incstack = 0
 11165  017CC0  C117  F11B         	movff	strcpy@to,strcpy@cp
 11166  017CC4  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 11167  017CC8  D005               	goto	l2153
 11168  017CCA  0101               	movlb	1	; () banked
 11169  017CCC  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 11170  017CCE  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 11171  017CD0  4B19               	infsnz	strcpy@from& (0+255),f,b
 11172  017CD2  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 11173  017CD4                     l2153:
 11174                           
 11175                           ; BSR set to: 1
 11176  017CD4  C119  FFF6         	movff	strcpy@from,tblptrl
 11177  017CD8  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 11178  017CDC                     	if	0	;tblptru may be non-zero
 11179  017CDC                     	endif
 11180  017CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11181  017CDC  0E00               	movlw	low (__mediumconst shr (0+16))
 11182  017CDE  6EF8               	movwf	tblptru,c
 11183  017CE0                     	endif
 11184  017CE0  C11B  FFD9         	movff	strcpy@cp,fsr2l
 11185  017CE4  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 11186  017CE8  0008               	tblrd		*
 11187  017CEA  CFF5 FFDF          	movff	tablat,indf2
 11188  017CEE  50DF               	movf	indf2,w,c
 11189  017CF0  B4D8               	btfsc	status,2,c
 11190  017CF2  0012               	return	
 11191  017CF4  D7EA               	goto	l2154
 11192  017CF6                     __end_of_strcpy:
 11193                           	opt stack 0
 11194                           tblptru	equ	0xFF8
 11195                           tblptrh	equ	0xFF7
 11196                           tblptrl	equ	0xFF6
 11197                           tablat	equ	0xFF5
 11198                           intcon	equ	0xFF2
 11199                           indf0	equ	0xFEF
 11200                           postinc0	equ	0xFEE
 11201                           fsr0h	equ	0xFEA
 11202                           fsr0l	equ	0xFE9
 11203                           wreg	equ	0xFE8
 11204                           indf1	equ	0xFE7
 11205                           postdec1	equ	0xFE5
 11206                           fsr1h	equ	0xFE2
 11207                           fsr1l	equ	0xFE1
 11208                           indf2	equ	0xFDF
 11209                           postinc2	equ	0xFDE
 11210                           fsr2h	equ	0xFDA
 11211                           fsr2l	equ	0xFD9
 11212                           status	equ	0xFD8
 11213                           
 11214 ;; *************** function _strcmp *****************
 11215 ;; Defined at:
 11216 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11217 ;; Parameters:    Size  Location     Type
 11218 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11219 ;;		 -> line(64), 
 11220 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11221 ;;		 -> STR_113(5), STR_111(14), STR_109(16), STR_100(13), 
 11222 ;;		 -> STR_98(12), STR_96(16), STR_94(15), STR_92(15), 
 11223 ;;		 -> STR_90(21), STR_88(21), STR_86(26), STR_84(14), 
 11224 ;;		 -> STR_82(13), STR_80(18), STR_78(15), STR_76(16), 
 11225 ;;		 -> STR_73(17), STR_71(16), STR_60(11), STR_57(10), 
 11226 ;;		 -> STR_55(13), STR_53(11), STR_50(4), STR_49(6), 
 11227 ;;		 -> STR_47(16), STR_44(6), STR_41(6), 
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;  r               1   28[BANK1 ] char 
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  2   23[BANK1 ] int 
 11232 ;; Registers used:
 11233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11239 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11240 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11241 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11242 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11243 ;;Total ram usage:        6 bytes
 11244 ;; Hardware stack levels used:    1
 11245 ;; Hardware stack levels required when called:   13
 11246 ;; This function calls:
 11247 ;;		Nothing
 11248 ;; This function is called by:
 11249 ;;		_ringBufferLUT
 11250 ;; This function uses a non-reentrant model
 11251 ;;
 11252                           
 11253                           	psect	text14
 11254  0178A2                     __ptext14:
 11255                           	opt stack 0
 11256  0178A2                     _strcmp:
 11257                           	opt stack 15
 11258                           
 11259                           ;incstack = 0
 11260  0178A2  D005               	goto	l2145
 11261  0178A4  0101               	movlb	1	; () banked
 11262  0178A6  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11263  0178A8  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11264  0178AA  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11265  0178AC  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11266  0178AE                     l2145:
 11267                           
 11268                           ; BSR set to: 1
 11269  0178AE  C117  FFD9         	movff	strcmp@s1,fsr2l
 11270  0178B2  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11271  0178B6  50DF               	movf	indf2,w,c
 11272  0178B8  0101               	movlb	1	; () banked
 11273  0178BA  6F1B               	movwf	??_strcmp& (0+255),b
 11274  0178BC  C119  FFF6         	movff	strcmp@s2,tblptrl
 11275  0178C0  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11276  0178C4                     	if	0	;tblptru may be non-zero
 11277  0178C4                     	endif
 11278  0178C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11279  0178C4  0E00               	movlw	low (__mediumconst shr (0+16))
 11280  0178C6  6EF8               	movwf	tblptru,c
 11281  0178C8                     	endif
 11282  0178C8  0008               	tblrd		*
 11283  0178CA  50F5               	movf	tablat,w,c
 11284  0178CC  0800               	sublw	0
 11285  0178CE  251B               	addwf	??_strcmp& (0+255),w,b
 11286  0178D0  6F1C               	movwf	strcmp@r& (0+255),b
 11287  0178D2  511C               	movf	strcmp@r& (0+255),w,b
 11288  0178D4  A4D8               	btfss	status,2,c
 11289  0178D6  D007               	goto	u14860
 11290                           
 11291                           ; BSR set to: 1
 11292  0178D8  C117  FFD9         	movff	strcmp@s1,fsr2l
 11293  0178DC  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11294  0178E0  50DF               	movf	indf2,w,c
 11295  0178E2  A4D8               	btfss	status,2,c
 11296  0178E4  D7DF               	goto	l2146
 11297  0178E6                     u14860:
 11298                           
 11299                           ; BSR set to: 1
 11300                           
 11301                           ; BSR set to: 1
 11302                           
 11303                           ; BSR set to: 1
 11304  0178E6  511C               	movf	strcmp@r& (0+255),w,b
 11305  0178E8  6F17               	movwf	?_strcmp& (0+255),b
 11306  0178EA  6B18               	clrf	(?_strcmp+1)& (0+255),b
 11307  0178EC  BF17               	btfsc	?_strcmp& (0+255),7,b
 11308  0178EE  0718               	decf	(?_strcmp+1)& (0+255),f,b
 11309  0178F0  0012               	return	
 11310  0178F2                     __end_of_strcmp:
 11311                           	opt stack 0
 11312                           tblptru	equ	0xFF8
 11313                           tblptrh	equ	0xFF7
 11314                           tblptrl	equ	0xFF6
 11315                           tablat	equ	0xFF5
 11316                           intcon	equ	0xFF2
 11317                           indf0	equ	0xFEF
 11318                           postinc0	equ	0xFEE
 11319                           fsr0h	equ	0xFEA
 11320                           fsr0l	equ	0xFE9
 11321                           wreg	equ	0xFE8
 11322                           indf1	equ	0xFE7
 11323                           postdec1	equ	0xFE5
 11324                           fsr1h	equ	0xFE2
 11325                           fsr1l	equ	0xFE1
 11326                           indf2	equ	0xFDF
 11327                           postinc2	equ	0xFDE
 11328                           fsr2h	equ	0xFDA
 11329                           fsr2l	equ	0xFD9
 11330                           status	equ	0xFD8
 11331                           
 11332 ;; *************** function _getUserID *****************
 11333 ;; Defined at:
 11334 ;;		line 65 in file "device_IDs.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  inputUserID     1    wreg     unsigned char 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 11339 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 11340 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  2   34[BANK1 ] unsigned int 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11350 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11351 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11353 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11354 ;;Total ram usage:        8 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:   15
 11357 ;; This function calls:
 11358 ;;		_FLASH_ReadWord
 11359 ;; This function is called by:
 11360 ;;		_ringBufferLUT
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text15
 11365  017B4A                     __ptext15:
 11366                           	opt stack 0
 11367  017B4A                     _getUserID:
 11368                           	opt stack 13
 11369                           
 11370                           ; BSR set to: 1
 11371                           ;incstack = 0
 11372                           ;getUserID@inputUserID stored from wreg
 11373  017B4A  0101               	movlb	1	; () banked
 11374  017B4C  6F28               	movwf	getUserID@inputUserID& (0+255),b
 11375                           
 11376                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 11377  017B4E  0E00               	movlw	0
 11378  017B50  0101               	movlb	1	; () banked
 11379  017B52  6F24               	movwf	getUserID@initialOffset& (0+255),b
 11380  017B54  0E00               	movlw	0
 11381  017B56  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 11382  017B58  0E20               	movlw	32
 11383  017B5A  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 11384  017B5C  0E00               	movlw	0
 11385  017B5E  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 11386                           
 11387                           ; BSR set to: 1
 11388                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 11389  017B60  5128               	movf	getUserID@inputUserID& (0+255),w,b
 11390  017B62  0D02               	mullw	2
 11391  017B64  CFF3 F129          	movff	prodl,getUserID@IDOffset
 11392                           
 11393                           ; BSR set to: 1
 11394                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 11395  017B68  5129               	movf	getUserID@IDOffset& (0+255),w,b
 11396  017B6A  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 11397  017B6C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11398  017B6E  0E00               	movlw	0
 11399  017B70  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 11400  017B72  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11401  017B74  0E00               	movlw	0
 11402  017B76  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 11403  017B78  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11404  017B7A  0E00               	movlw	0
 11405  017B7C  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 11406  017B7E  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11407  017B80  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11408  017B84  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 11409  017B88  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 11410  017B8C  0012               	return	
 11411  017B8E                     __end_of_getUserID:
 11412                           	opt stack 0
 11413                           tblptru	equ	0xFF8
 11414                           tblptrh	equ	0xFF7
 11415                           tblptrl	equ	0xFF6
 11416                           tablat	equ	0xFF5
 11417                           prodl	equ	0xFF3
 11418                           intcon	equ	0xFF2
 11419                           indf0	equ	0xFEF
 11420                           postinc0	equ	0xFEE
 11421                           fsr0h	equ	0xFEA
 11422                           fsr0l	equ	0xFE9
 11423                           wreg	equ	0xFE8
 11424                           indf1	equ	0xFE7
 11425                           postdec1	equ	0xFE5
 11426                           fsr1h	equ	0xFE2
 11427                           fsr1l	equ	0xFE1
 11428                           indf2	equ	0xFDF
 11429                           postinc2	equ	0xFDE
 11430                           fsr2h	equ	0xFDA
 11431                           fsr2l	equ	0xFD9
 11432                           status	equ	0xFD8
 11433                           
 11434 ;; *************** function _getMinorRevisionID *****************
 11435 ;; Defined at:
 11436 ;;		line 23 in file "device_IDs.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;		None
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 11441 ;; Return value:  Size  Location     Type
 11442 ;;                  1    wreg      unsigned char 
 11443 ;; Registers used:
 11444 ;;		wreg, status,2, status,0, cstack
 11445 ;; Tracked objects:
 11446 ;;		On entry : 0/0
 11447 ;;		On exit  : 0/0
 11448 ;;		Unchanged: 0/0
 11449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11451 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11453 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11454 ;;Total ram usage:        2 bytes
 11455 ;; Hardware stack levels used:    1
 11456 ;; Hardware stack levels required when called:   15
 11457 ;; This function calls:
 11458 ;;		_FLASH_ReadWord
 11459 ;; This function is called by:
 11460 ;;		_ringBufferLUT
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text16
 11465  017EFA                     __ptext16:
 11466                           	opt stack 0
 11467  017EFA                     _getMinorRevisionID:
 11468                           	opt stack 13
 11469                           
 11470                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 11471                           
 11472                           ;incstack = 0
 11473  017EFA  0EFC               	movlw	252
 11474  017EFC  0101               	movlb	1	; () banked
 11475  017EFE  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11476  017F00  0EFF               	movlw	255
 11477  017F02  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11478  017F04  0E3F               	movlw	63
 11479  017F06  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11480  017F08  0E00               	movlw	0
 11481  017F0A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11482  017F0C  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11483  017F10  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 11484  017F14  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 11485                           
 11486                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 11487  017F18  0101               	movlb	1	; () banked
 11488  017F1A  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 11489  017F1C  0B1F               	andlw	31
 11490  017F1E  0012               	return	
 11491  017F20                     __end_of_getMinorRevisionID:
 11492                           	opt stack 0
 11493                           tblptru	equ	0xFF8
 11494                           tblptrh	equ	0xFF7
 11495                           tblptrl	equ	0xFF6
 11496                           tablat	equ	0xFF5
 11497                           prodl	equ	0xFF3
 11498                           intcon	equ	0xFF2
 11499                           indf0	equ	0xFEF
 11500                           postinc0	equ	0xFEE
 11501                           fsr0h	equ	0xFEA
 11502                           fsr0l	equ	0xFE9
 11503                           wreg	equ	0xFE8
 11504                           indf1	equ	0xFE7
 11505                           postdec1	equ	0xFE5
 11506                           fsr1h	equ	0xFE2
 11507                           fsr1l	equ	0xFE1
 11508                           indf2	equ	0xFDF
 11509                           postinc2	equ	0xFDE
 11510                           fsr2h	equ	0xFDA
 11511                           fsr2l	equ	0xFD9
 11512                           status	equ	0xFD8
 11513                           
 11514 ;; *************** function _getMajorRevisionID *****************
 11515 ;; Defined at:
 11516 ;;		line 12 in file "device_IDs.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      unsigned char 
 11523 ;; Registers used:
 11524 ;;		wreg, status,2, status,0, cstack
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11531 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11532 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11533 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;Total ram usage:        5 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:   15
 11537 ;; This function calls:
 11538 ;;		_FLASH_ReadWord
 11539 ;; This function is called by:
 11540 ;;		_ringBufferLUT
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text17
 11545  017C10                     __ptext17:
 11546                           	opt stack 0
 11547  017C10                     _getMajorRevisionID:
 11548                           	opt stack 13
 11549                           
 11550                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 11551                           
 11552                           ; BSR set to: 1
 11553                           ;incstack = 0
 11554  017C10  0EFC               	movlw	252
 11555  017C12  0101               	movlb	1	; () banked
 11556  017C14  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11557  017C16  0EFF               	movlw	255
 11558  017C18  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11559  017C1A  0E3F               	movlw	63
 11560  017C1C  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11561  017C1E  0E00               	movlw	0
 11562  017C20  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11563  017C22  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11564  017C26  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 11565  017C2A  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 11566                           
 11567                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 11568  017C2E  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 11569  017C32  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 11570  017C36  0E06               	movlw	6
 11571  017C38  0101               	movlb	1	; () banked
 11572  017C3A  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 11573  017C3C                     u14895:
 11574  017C3C  90D8               	bcf	status,0,c
 11575  017C3E  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 11576  017C40  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 11577  017C42  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 11578  017C44  D7FB               	goto	u14895
 11579  017C46  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 11580  017C48  0B1F               	andlw	31
 11581  017C4A  0012               	return	
 11582  017C4C                     __end_of_getMajorRevisionID:
 11583                           	opt stack 0
 11584                           tblptru	equ	0xFF8
 11585                           tblptrh	equ	0xFF7
 11586                           tblptrl	equ	0xFF6
 11587                           tablat	equ	0xFF5
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           indf0	equ	0xFEF
 11591                           postinc0	equ	0xFEE
 11592                           fsr0h	equ	0xFEA
 11593                           fsr0l	equ	0xFE9
 11594                           wreg	equ	0xFE8
 11595                           indf1	equ	0xFE7
 11596                           postdec1	equ	0xFE5
 11597                           fsr1h	equ	0xFE2
 11598                           fsr1l	equ	0xFE1
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           fsr2h	equ	0xFDA
 11602                           fsr2l	equ	0xFD9
 11603                           status	equ	0xFD8
 11604                           
 11605 ;; *************** function _getDeviceIDString *****************
 11606 ;; Defined at:
 11607 ;;		line 34 in file "device_IDs.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 11610 ;; Auto vars:     Size  Location     Type
 11611 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 11612 ;;		 -> STR_122(10), STR_121(13), STR_120(12), 
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  2   36[BANK1 ] PTR inline unsigned char
 11615 ;; Registers used:
 11616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11622 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11623 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11625 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;Total ram usage:       10 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:   13
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_ringBufferLUT
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text18
 11637  017798                     __ptext18:
 11638                           	opt stack 0
 11639  017798                     _getDeviceIDString:
 11640                           	opt stack 15
 11641                           
 11642                           ;device_IDs.c: 37: const char *strings[] = {
 11643                           ;device_IDs.c: 39: "PIC18F67K40",
 11644                           ;device_IDs.c: 40: "PIC18LF67K40",
 11645                           ;device_IDs.c: 41: "Undefined"
 11646                           ;device_IDs.c: 43: };
 11647                           
 11648                           ; BSR set to: 1
 11649                           ;incstack = 0
 11650  017798  EE22  F0CB         	lfsr	2,getDeviceIDString@F17550
 11651  01779C  EE11  F028         	lfsr	1,getDeviceIDString@strings
 11652  0177A0  0E05               	movlw	5
 11653  0177A2                     u14881:
 11654  0177A2  CFDB FFE3          	movff	plusw2,plusw1
 11655  0177A6  06E8               	decf	wreg,f,c
 11656  0177A8  E2FC               	bc	u14881
 11657                           
 11658                           ;device_IDs.c: 47: switch (inputDevID) {
 11659  0177AA  D00F               	goto	l1277
 11660  0177AC                     
 11661                           ;device_IDs.c: 50: return strings[0];
 11662  0177AC  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 11663  0177B0  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 11664                           
 11665                           ;device_IDs.c: 51: break;
 11666  0177B4  0012               	return	
 11667  0177B6                     
 11668                           ;device_IDs.c: 54: return strings[1];
 11669  0177B6  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 11670  0177BA  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 11671                           
 11672                           ;device_IDs.c: 55: break;
 11673  0177BE  0012               	return	
 11674  0177C0                     
 11675                           ;device_IDs.c: 58: return strings[2];
 11676  0177C0  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 11677  0177C4  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 11678                           
 11679                           ;device_IDs.c: 61: }
 11680                           
 11681                           ;device_IDs.c: 59: break;
 11682  0177C8  0012               	return	
 11683  0177CA                     l1277:
 11684  0177CA  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 11685  0177CE  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 11686                           
 11687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11688                           ; Switch size 1, requested type "space"
 11689                           ; Number of cases is 2, Range of values is 106 to 107
 11690                           ; switch strategies available:
 11691                           ; Name         Instructions Cycles
 11692                           ; simple_byte            7     4 (average)
 11693                           ;	Chosen strategy is simple_byte
 11694  0177D2  0101               	movlb	1	; () banked
 11695  0177D4  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 11696  0177D6  0A6A               	xorlw	106	; case 106
 11697  0177D8  B4D8               	btfsc	status,2,c
 11698  0177DA  D004               	goto	l14276
 11699  0177DC  0A01               	xorlw	1	; case 107
 11700  0177DE  B4D8               	btfsc	status,2,c
 11701  0177E0  D006               	goto	l14278
 11702  0177E2  D7EE               	goto	l1282
 11703  0177E4                     l14276:
 11704                           
 11705                           ; BSR set to: 1
 11706                           ; Switch size 1, requested type "space"
 11707                           ; Number of cases is 1, Range of values is 192 to 192
 11708                           ; switch strategies available:
 11709                           ; Name         Instructions Cycles
 11710                           ; simple_byte            4     3 (average)
 11711                           ;	Chosen strategy is simple_byte
 11712  0177E4  5126               	movf	??_getDeviceIDString& (0+255),w,b
 11713  0177E6  0AC0               	xorlw	192	; case 192
 11714  0177E8  B4D8               	btfsc	status,2,c
 11715  0177EA  D7E0               	goto	l1278
 11716  0177EC  D7E9               	goto	l1282
 11717  0177EE                     l14278:
 11718                           
 11719                           ; BSR set to: 1
 11720                           ; Switch size 1, requested type "space"
 11721                           ; Number of cases is 1, Range of values is 32 to 32
 11722                           ; switch strategies available:
 11723                           ; Name         Instructions Cycles
 11724                           ; simple_byte            4     3 (average)
 11725                           ;	Chosen strategy is simple_byte
 11726  0177EE  5126               	movf	??_getDeviceIDString& (0+255),w,b
 11727  0177F0  0A20               	xorlw	32	; case 32
 11728  0177F2  B4D8               	btfsc	status,2,c
 11729  0177F4  D7E0               	goto	l1281
 11730  0177F6  D7E4               	goto	l1282
 11731  0177F8                     __end_of_getDeviceIDString:
 11732                           	opt stack 0
 11733                           tblptru	equ	0xFF8
 11734                           tblptrh	equ	0xFF7
 11735                           tblptrl	equ	0xFF6
 11736                           tablat	equ	0xFF5
 11737                           prodl	equ	0xFF3
 11738                           intcon	equ	0xFF2
 11739                           indf0	equ	0xFEF
 11740                           postinc0	equ	0xFEE
 11741                           fsr0h	equ	0xFEA
 11742                           fsr0l	equ	0xFE9
 11743                           wreg	equ	0xFE8
 11744                           indf1	equ	0xFE7
 11745                           postdec1	equ	0xFE5
 11746                           plusw1	equ	0xFE3
 11747                           fsr1h	equ	0xFE2
 11748                           fsr1l	equ	0xFE1
 11749                           indf2	equ	0xFDF
 11750                           postinc2	equ	0xFDE
 11751                           plusw2	equ	0xFDB
 11752                           fsr2h	equ	0xFDA
 11753                           fsr2l	equ	0xFD9
 11754                           status	equ	0xFD8
 11755                           
 11756 ;; *************** function _getDeviceID *****************
 11757 ;; Defined at:
 11758 ;;		line 4 in file "device_IDs.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;		None
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  2   34[BANK1 ] unsigned int 
 11765 ;; Registers used:
 11766 ;;		wreg, status,2, status,0, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11772 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11775 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11776 ;;Total ram usage:        2 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:   15
 11779 ;; This function calls:
 11780 ;;		_FLASH_ReadWord
 11781 ;; This function is called by:
 11782 ;;		_ringBufferLUT
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text19
 11787  017FB2                     __ptext19:
 11788                           	opt stack 0
 11789  017FB2                     _getDeviceID:
 11790                           	opt stack 13
 11791                           
 11792                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 11793                           
 11794                           ;incstack = 0
 11795  017FB2  0EFE               	movlw	254
 11796  017FB4  0101               	movlb	1	; () banked
 11797  017FB6  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11798  017FB8  0EFF               	movlw	255
 11799  017FBA  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11800  017FBC  0E3F               	movlw	63
 11801  017FBE  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11802  017FC0  0E00               	movlw	0
 11803  017FC2  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11804  017FC4  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11805  017FC8  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 11806  017FCC  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 11807  017FD0  0012               	return	
 11808  017FD2                     __end_of_getDeviceID:
 11809                           	opt stack 0
 11810                           tblptru	equ	0xFF8
 11811                           tblptrh	equ	0xFF7
 11812                           tblptrl	equ	0xFF6
 11813                           tablat	equ	0xFF5
 11814                           prodl	equ	0xFF3
 11815                           intcon	equ	0xFF2
 11816                           indf0	equ	0xFEF
 11817                           postinc0	equ	0xFEE
 11818                           fsr0h	equ	0xFEA
 11819                           fsr0l	equ	0xFE9
 11820                           wreg	equ	0xFE8
 11821                           indf1	equ	0xFE7
 11822                           postdec1	equ	0xFE5
 11823                           plusw1	equ	0xFE3
 11824                           fsr1h	equ	0xFE2
 11825                           fsr1l	equ	0xFE1
 11826                           indf2	equ	0xFDF
 11827                           postinc2	equ	0xFDE
 11828                           plusw2	equ	0xFDB
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833 ;; *************** function _FLASH_ReadWord *****************
 11834 ;; Defined at:
 11835 ;;		line 71 in file "mcc_generated_files/memory.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  2   27[BANK1 ] unsigned int 
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0, cstack
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11849 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11851 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11852 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;Total ram usage:        7 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; Hardware stack levels required when called:   14
 11856 ;; This function calls:
 11857 ;;		_FLASH_ReadByte
 11858 ;; This function is called by:
 11859 ;;		_getDeviceID
 11860 ;;		_getMajorRevisionID
 11861 ;;		_getMinorRevisionID
 11862 ;;		_getUserID
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text20
 11867  017B8E                     __ptext20:
 11868                           	opt stack 0
 11869  017B8E                     _FLASH_ReadWord:
 11870                           	opt stack 13
 11871                           
 11872                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 11873                           
 11874                           ;incstack = 0
 11875  017B8E  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 11876  017B92  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 11877  017B96  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 11878  017B9A  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 11879  017B9E  EC22  F0C0         	call	_FLASH_ReadByte	;wreg free
 11880  017BA2  0101               	movlb	1	; () banked
 11881  017BA4  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 11882  017BA6  0E01               	movlw	1
 11883  017BA8  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 11884  017BAA  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 11885  017BAC  0E00               	movlw	0
 11886  017BAE  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 11887  017BB0  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 11888  017BB2  0E00               	movlw	0
 11889  017BB4  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 11890  017BB6  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 11891  017BB8  0E00               	movlw	0
 11892  017BBA  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 11893  017BBC  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 11894  017BBE  EC22  F0C0         	call	_FLASH_ReadByte	;wreg free
 11895  017BC2  0101               	movlb	1	; () banked
 11896  017BC4  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 11897  017BC6  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 11898  017BC8  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 11899  017BCA  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 11900  017BCE  0012               	return	
 11901  017BD0                     __end_of_FLASH_ReadWord:
 11902                           	opt stack 0
 11903                           tblptru	equ	0xFF8
 11904                           tblptrh	equ	0xFF7
 11905                           tblptrl	equ	0xFF6
 11906                           tablat	equ	0xFF5
 11907                           prodl	equ	0xFF3
 11908                           intcon	equ	0xFF2
 11909                           indf0	equ	0xFEF
 11910                           postinc0	equ	0xFEE
 11911                           fsr0h	equ	0xFEA
 11912                           fsr0l	equ	0xFE9
 11913                           wreg	equ	0xFE8
 11914                           indf1	equ	0xFE7
 11915                           postdec1	equ	0xFE5
 11916                           plusw1	equ	0xFE3
 11917                           fsr1h	equ	0xFE2
 11918                           fsr1l	equ	0xFE1
 11919                           indf2	equ	0xFDF
 11920                           postinc2	equ	0xFDE
 11921                           plusw2	equ	0xFDB
 11922                           fsr2h	equ	0xFDA
 11923                           fsr2l	equ	0xFD9
 11924                           status	equ	0xFD8
 11925                           
 11926 ;; *************** function _FLASH_ReadByte *****************
 11927 ;; Defined at:
 11928 ;;		line 59 in file "mcc_generated_files/memory.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;		None
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      unsigned char 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11942 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11945 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;Total ram usage:        4 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:   13
 11949 ;; This function calls:
 11950 ;;		Nothing
 11951 ;; This function is called by:
 11952 ;;		_FLASH_ReadWord
 11953 ;;		_FLASH_WriteByte
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text21
 11958  018044                     __ptext21:
 11959                           	opt stack 0
 11960  018044                     _FLASH_ReadByte:
 11961                           	opt stack 13
 11962                           
 11963                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 11964                           
 11965                           ; BSR set to: 1
 11966                           ;incstack = 0
 11967  018044  5077               	movf	3959,w,c	;volsfr
 11968  018046  0B3F               	andlw	-193
 11969  018048  0980               	iorlw	128
 11970  01804A  6E77               	movwf	3959,c	;volsfr
 11971                           
 11972                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 11973  01804C  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 11974                           
 11975                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 11976  018050  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 11977                           
 11978                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11979  018054  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 11980  018058  0008               	tblrd		*	;# 
 11981                           
 11982                           ;memory.c: 68: return (TABLAT);
 11983  01805A  50F5               	movf	tablat,w,c	;volatile
 11984  01805C  0012               	return	
 11985  01805E                     __end_of_FLASH_ReadByte:
 11986                           	opt stack 0
 11987                           tblptru	equ	0xFF8
 11988                           tblptrh	equ	0xFF7
 11989                           tblptrl	equ	0xFF6
 11990                           tablat	equ	0xFF5
 11991                           prodl	equ	0xFF3
 11992                           intcon	equ	0xFF2
 11993                           indf0	equ	0xFEF
 11994                           postinc0	equ	0xFEE
 11995                           fsr0h	equ	0xFEA
 11996                           fsr0l	equ	0xFE9
 11997                           wreg	equ	0xFE8
 11998                           indf1	equ	0xFE7
 11999                           postdec1	equ	0xFE5
 12000                           plusw1	equ	0xFE3
 12001                           fsr1h	equ	0xFE2
 12002                           fsr1l	equ	0xFE1
 12003                           indf2	equ	0xFDF
 12004                           postinc2	equ	0xFDE
 12005                           plusw2	equ	0xFDB
 12006                           fsr2h	equ	0xFDA
 12007                           fsr2l	equ	0xFD9
 12008                           status	equ	0xFD8
 12009                           
 12010 ;; *************** function _getCauseOfResetString *****************
 12011 ;; Defined at:
 12012 ;;		line 81 in file "cause_of_reset.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;  r               1    wreg     enum E17455
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;  r               1   25[BANK1 ] enum E17455
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  2   23[BANK1 ] PTR inline unsigned char
 12019 ;; Registers used:
 12020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12026 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12027 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12029 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12030 ;;Total ram usage:        3 bytes
 12031 ;; Hardware stack levels used:    1
 12032 ;; Hardware stack levels required when called:   13
 12033 ;; This function calls:
 12034 ;;		Nothing
 12035 ;; This function is called by:
 12036 ;;		_ringBufferLUT
 12037 ;; This function uses a non-reentrant model
 12038 ;;
 12039                           
 12040                           	psect	text22
 12041  017DC6                     __ptext22:
 12042                           	opt stack 0
 12043  017DC6                     _getCauseOfResetString:
 12044                           	opt stack 15
 12045                           
 12046                           ;incstack = 0
 12047                           ;getCauseOfResetString@r stored from wreg
 12048  017DC6  0101               	movlb	1	; () banked
 12049  017DC8  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 12050                           
 12051                           ;cause_of_reset.c: 84: static char *strings[] = {
 12052                           ;cause_of_reset.c: 85: "Undefined Reset",
 12053                           ;cause_of_reset.c: 86: "Power On Reset",
 12054                           ;cause_of_reset.c: 87: "Brown Out Reset",
 12055                           ;cause_of_reset.c: 88: "Master Clear Reset",
 12056                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 12057                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 12058                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 12059                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 12060                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 12061                           ;cause_of_reset.c: 94: };
 12062  017DCA  0E09               	movlw	9
 12063  017DCC  0101               	movlb	1	; () banked
 12064  017DCE  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 12065  017DD0  D00D               	goto	l1309
 12066                           
 12067                           ; BSR set to: 1
 12068                           ;cause_of_reset.c: 99: return strings[r];
 12069  017DD2  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 12070  017DD4  0D02               	mullw	2
 12071  017DD6  0EB9               	movlw	low getCauseOfResetString@strings
 12072  017DD8  24F3               	addwf	prodl,w,c
 12073  017DDA  6ED9               	movwf	fsr2l,c
 12074  017DDC  0E02               	movlw	high getCauseOfResetString@strings
 12075  017DDE  20F4               	addwfc	prodh,w,c
 12076  017DE0  6EDA               	movwf	fsr2h,c
 12077  017DE2  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 12078  017DE6  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 12079                           
 12080                           ; BSR set to: 1
 12081                           ;cause_of_reset.c: 101: }
 12082                           
 12083                           ; BSR set to: 1
 12084  017DEA  0012               	return	
 12085  017DEC                     l1309:
 12086                           
 12087                           ; BSR set to: 1
 12088                           ;cause_of_reset.c: 103: else {
 12089                           ;cause_of_reset.c: 105: return "Undefined Reset";
 12090                           
 12091                           ; BSR set to: 1
 12092  017DEC  0E1E               	movlw	low STR_123
 12093  017DEE  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 12094  017DF0  0EFE               	movlw	high STR_123
 12095  017DF2  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 12096                           
 12097                           ; BSR set to: 1
 12098  017DF4  0012               	return	
 12099  017DF6                     __end_of_getCauseOfResetString:
 12100                           	opt stack 0
 12101                           tblptru	equ	0xFF8
 12102                           tblptrh	equ	0xFF7
 12103                           tblptrl	equ	0xFF6
 12104                           tablat	equ	0xFF5
 12105                           prodh	equ	0xFF4
 12106                           prodl	equ	0xFF3
 12107                           intcon	equ	0xFF2
 12108                           indf0	equ	0xFEF
 12109                           postinc0	equ	0xFEE
 12110                           fsr0h	equ	0xFEA
 12111                           fsr0l	equ	0xFE9
 12112                           wreg	equ	0xFE8
 12113                           indf1	equ	0xFE7
 12114                           postdec1	equ	0xFE5
 12115                           plusw1	equ	0xFE3
 12116                           fsr1h	equ	0xFE2
 12117                           fsr1l	equ	0xFE1
 12118                           indf2	equ	0xFDF
 12119                           postinc2	equ	0xFDE
 12120                           postdec2	equ	0xFDD
 12121                           plusw2	equ	0xFDB
 12122                           fsr2h	equ	0xFDA
 12123                           fsr2l	equ	0xFD9
 12124                           status	equ	0xFD8
 12125                           
 12126 ;; *************** function _atoi *****************
 12127 ;; Defined at:
 12128 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 12131 ;;		 -> ringBufferLUT@arg_buff(3), 
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;  a               2   34[BANK1 ] int 
 12134 ;;  sign            1   33[BANK1 ] unsigned char 
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  2   29[BANK1 ] int 
 12137 ;; Registers used:
 12138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/0
 12141 ;;		On exit  : 0/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12144 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12145 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12146 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12147 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12148 ;;Total ram usage:        7 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:   14
 12151 ;; This function calls:
 12152 ;;		___wmul
 12153 ;;		_isdigit
 12154 ;; This function is called by:
 12155 ;;		_ringBufferLUT
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text23
 12160  016B6C                     __ptext23:
 12161                           	opt stack 0
 12162  016B6C                     _atoi:
 12163                           	opt stack 14
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;incstack = 0
 12167  016B6C  D003               	goto	l1647
 12168  016B6E  0101               	movlb	1	; () banked
 12169  016B70  4B1D               	infsnz	atoi@s& (0+255),f,b
 12170  016B72  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12171  016B74                     l1647:
 12172                           
 12173                           ; BSR set to: 1
 12174  016B74  C11D  FFD9         	movff	atoi@s,fsr2l
 12175  016B78  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12176  016B7C  0E20               	movlw	32
 12177  016B7E  18DE               	xorwf	postinc2,w,c
 12178  016B80  B4D8               	btfsc	status,2,c
 12179  016B82  D7F5               	goto	l1648
 12180  016B84  C11D  FFD9         	movff	atoi@s,fsr2l
 12181  016B88  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12182  016B8C  0E09               	movlw	9
 12183  016B8E  18DE               	xorwf	postinc2,w,c
 12184  016B90  B4D8               	btfsc	status,2,c
 12185  016B92  D7ED               	goto	l1648
 12186  016B94  0E00               	movlw	0
 12187  016B96  0101               	movlb	1	; () banked
 12188  016B98  6F23               	movwf	(atoi@a+1)& (0+255),b
 12189  016B9A  0E00               	movlw	0
 12190  016B9C  6F22               	movwf	atoi@a& (0+255),b
 12191  016B9E  0E00               	movlw	0
 12192  016BA0  6F21               	movwf	atoi@sign& (0+255),b
 12193                           
 12194                           ; BSR set to: 1
 12195  016BA2  C11D  FFD9         	movff	atoi@s,fsr2l
 12196  016BA6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12197  016BAA  0E2D               	movlw	45
 12198  016BAC  18DE               	xorwf	postinc2,w,c
 12199  016BAE  A4D8               	btfss	status,2,c
 12200  016BB0  D002               	goto	l1650
 12201                           
 12202                           ; BSR set to: 1
 12203  016BB2  2B21               	incf	atoi@sign& (0+255),f,b
 12204  016BB4  D026               	goto	l12548
 12205  016BB6                     l1650:
 12206                           
 12207                           ; BSR set to: 1
 12208                           
 12209                           ; BSR set to: 1
 12210  016BB6  C11D  FFD9         	movff	atoi@s,fsr2l
 12211  016BBA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12212  016BBE  0E2B               	movlw	43
 12213  016BC0  18DE               	xorwf	postinc2,w,c
 12214  016BC2  A4D8               	btfss	status,2,c
 12215  016BC4  D020               	goto	l1653
 12216  016BC6  D01D               	goto	l12548
 12217  016BC8                     
 12218                           ; BSR set to: 1
 12219  016BC8  C122  F117         	movff	atoi@a,___wmul@multiplier
 12220  016BCC  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 12221  016BD0  0E00               	movlw	0
 12222  016BD2  0101               	movlb	1	; () banked
 12223  016BD4  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12224  016BD6  0E0A               	movlw	10
 12225  016BD8  6F19               	movwf	___wmul@multiplicand& (0+255),b
 12226  016BDA  EC41  F0BF         	call	___wmul	;wreg free
 12227  016BDE  C11D  FFD9         	movff	atoi@s,fsr2l
 12228  016BE2  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12229  016BE6  50DF               	movf	indf2,w,c
 12230  016BE8  0101               	movlb	1	; () banked
 12231  016BEA  6F1F               	movwf	??_atoi& (0+255),b
 12232  016BEC  6B20               	clrf	(??_atoi+1)& (0+255),b
 12233  016BEE  5117               	movf	?___wmul& (0+255),w,b
 12234  016BF0  271F               	addwf	??_atoi& (0+255),f,b
 12235  016BF2  5118               	movf	(?___wmul+1)& (0+255),w,b
 12236  016BF4  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 12237  016BF6  0ED0               	movlw	208
 12238  016BF8  251F               	addwf	??_atoi& (0+255),w,b
 12239  016BFA  6F22               	movwf	atoi@a& (0+255),b
 12240  016BFC  0EFF               	movlw	255
 12241  016BFE  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 12242  016C00  6F23               	movwf	(atoi@a+1)& (0+255),b
 12243  016C02                     l12548:
 12244                           
 12245                           ; BSR set to: 1
 12246  016C02  4B1D               	infsnz	atoi@s& (0+255),f,b
 12247  016C04  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12248  016C06                     l1653:
 12249                           
 12250                           ; BSR set to: 1
 12251                           
 12252                           ; BSR set to: 1
 12253  016C06  C11D  FFD9         	movff	atoi@s,fsr2l
 12254  016C0A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12255  016C0E  50DF               	movf	indf2,w,c
 12256  016C10  ECC8  F0BF         	call	_isdigit
 12257  016C14  B0D8               	btfsc	status,0,c
 12258  016C16  D7D8               	goto	l1654
 12259  016C18  0101               	movlb	1	; () banked
 12260  016C1A  5121               	movf	atoi@sign& (0+255),w,b
 12261  016C1C  B4D8               	btfsc	status,2,c
 12262  016C1E  D00D               	goto	l1656
 12263                           
 12264                           ; BSR set to: 1
 12265  016C20  C122  F11F         	movff	atoi@a,??_atoi
 12266  016C24  C123  F120         	movff	atoi@a+1,??_atoi+1
 12267  016C28  1F1F               	comf	??_atoi& (0+255),f,b
 12268  016C2A  1F20               	comf	(??_atoi+1)& (0+255),f,b
 12269  016C2C  4B1F               	infsnz	??_atoi& (0+255),f,b
 12270  016C2E  2B20               	incf	(??_atoi+1)& (0+255),f,b
 12271  016C30  C11F  F11D         	movff	??_atoi,?_atoi
 12272  016C34  C120  F11E         	movff	??_atoi+1,?_atoi+1
 12273  016C38  0012               	return	
 12274  016C3A                     l1656:
 12275                           
 12276                           ; BSR set to: 1
 12277  016C3A  C122  F11D         	movff	atoi@a,?_atoi
 12278  016C3E  C123  F11E         	movff	atoi@a+1,?_atoi+1
 12279                           
 12280                           ; BSR set to: 1
 12281  016C42  0012               	return		;funcret
 12282  016C44                     __end_of_atoi:
 12283                           	opt stack 0
 12284                           tblptru	equ	0xFF8
 12285                           tblptrh	equ	0xFF7
 12286                           tblptrl	equ	0xFF6
 12287                           tablat	equ	0xFF5
 12288                           prodh	equ	0xFF4
 12289                           prodl	equ	0xFF3
 12290                           intcon	equ	0xFF2
 12291                           indf0	equ	0xFEF
 12292                           postinc0	equ	0xFEE
 12293                           fsr0h	equ	0xFEA
 12294                           fsr0l	equ	0xFE9
 12295                           wreg	equ	0xFE8
 12296                           indf1	equ	0xFE7
 12297                           postdec1	equ	0xFE5
 12298                           plusw1	equ	0xFE3
 12299                           fsr1h	equ	0xFE2
 12300                           fsr1l	equ	0xFE1
 12301                           indf2	equ	0xFDF
 12302                           postinc2	equ	0xFDE
 12303                           postdec2	equ	0xFDD
 12304                           plusw2	equ	0xFDB
 12305                           fsr2h	equ	0xFDA
 12306                           fsr2l	equ	0xFD9
 12307                           status	equ	0xFD8
 12308                           
 12309 ;; *************** function ___fldiv *****************
 12310 ;; Defined at:
 12311 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  b               4   61[BANK1 ] int 
 12314 ;;  a               4   65[BANK1 ] int 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  grs             4   80[BANK1 ] unsigned long 
 12317 ;;  rem             4   74[BANK1 ] unsigned long 
 12318 ;;  new_exp         2   78[BANK1 ] int 
 12319 ;;  aexp            1   85[BANK1 ] unsigned char 
 12320 ;;  bexp            1   84[BANK1 ] unsigned char 
 12321 ;;  sign            1   73[BANK1 ] unsigned char 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  4   61[BANK1 ] unsigned char 
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12331 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12332 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12333 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12334 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;Total ram usage:       25 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:   13
 12338 ;; This function calls:
 12339 ;;		Nothing
 12340 ;; This function is called by:
 12341 ;;		_ringBufferLUT
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           	psect	text24
 12346  01504E                     __ptext24:
 12347                           	opt stack 0
 12348  01504E                     ___fldiv:
 12349                           	opt stack 15
 12350                           
 12351                           ; BSR set to: 1
 12352                           ;incstack = 0
 12353  01504E  0101               	movlb	1	; () banked
 12354  015050  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 12355  015052  0B80               	andlw	128
 12356  015054  6F49               	movwf	___fldiv@sign& (0+255),b
 12357  015056  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 12358  015058  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 12359  01505A  6F54               	movwf	___fldiv@bexp& (0+255),b
 12360                           
 12361                           ; BSR set to: 1
 12362  01505C  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 12363                           
 12364                           ; BSR set to: 1
 12365  01505E  8154               	bsf	___fldiv@bexp& (0+255),0,b
 12366                           
 12367                           ; BSR set to: 1
 12368                           
 12369                           ; BSR set to: 1
 12370  015060  5154               	movf	___fldiv@bexp& (0+255),w,b
 12371  015062  B4D8               	btfsc	status,2,c
 12372  015064  D00D               	goto	l2054
 12373                           
 12374                           ; BSR set to: 1
 12375  015066  2954               	incf	___fldiv@bexp& (0+255),w,b
 12376  015068  A4D8               	btfss	status,2,c
 12377  01506A  D008               	goto	l2055
 12378                           
 12379                           ; BSR set to: 1
 12380  01506C  0E00               	movlw	0
 12381  01506E  6F3D               	movwf	___fldiv@b& (0+255),b
 12382  015070  0E00               	movlw	0
 12383  015072  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12384  015074  0E00               	movlw	0
 12385  015076  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12386  015078  0E00               	movlw	0
 12387  01507A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12388  01507C                     l2055:
 12389                           
 12390                           ; BSR set to: 1
 12391                           
 12392                           ; BSR set to: 1
 12393  01507C  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12394  01507E  D006               	goto	L1
 12395  015080                     l2054:
 12396                           
 12397                           ; BSR set to: 1
 12398                           
 12399                           ; BSR set to: 1
 12400  015080  0E00               	movlw	0
 12401  015082  6F3D               	movwf	___fldiv@b& (0+255),b
 12402  015084  0E00               	movlw	0
 12403  015086  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12404  015088  0E00               	movlw	0
 12405  01508A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12406  01508C                     L1:
 12407  01508C  0E00               	movlw	0
 12408  01508E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12409                           
 12410                           ; BSR set to: 1
 12411                           
 12412                           ; BSR set to: 1
 12413  015090  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12414  015092  0B80               	andlw	128
 12415  015094  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 12416                           
 12417                           ; BSR set to: 1
 12418  015096  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12419  015098  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 12420  01509A  6F55               	movwf	___fldiv@aexp& (0+255),b
 12421                           
 12422                           ; BSR set to: 1
 12423  01509C  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 12424                           
 12425                           ; BSR set to: 1
 12426  01509E  8155               	bsf	___fldiv@aexp& (0+255),0,b
 12427                           
 12428                           ; BSR set to: 1
 12429                           
 12430                           ; BSR set to: 1
 12431  0150A0  5155               	movf	___fldiv@aexp& (0+255),w,b
 12432  0150A2  B4D8               	btfsc	status,2,c
 12433  0150A4  D00D               	goto	l2058
 12434                           
 12435                           ; BSR set to: 1
 12436  0150A6  2955               	incf	___fldiv@aexp& (0+255),w,b
 12437  0150A8  A4D8               	btfss	status,2,c
 12438  0150AA  D008               	goto	l2059
 12439                           
 12440                           ; BSR set to: 1
 12441  0150AC  0E00               	movlw	0
 12442  0150AE  6F41               	movwf	___fldiv@a& (0+255),b
 12443  0150B0  0E00               	movlw	0
 12444  0150B2  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 12445  0150B4  0E00               	movlw	0
 12446  0150B6  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 12447  0150B8  0E00               	movlw	0
 12448  0150BA  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 12449  0150BC                     l2059:
 12450                           
 12451                           ; BSR set to: 1
 12452                           
 12453                           ; BSR set to: 1
 12454  0150BC  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 12455  0150BE  D006               	goto	L2
 12456  0150C0                     l2058:
 12457                           
 12458                           ; BSR set to: 1
 12459                           
 12460                           ; BSR set to: 1
 12461  0150C0  0E00               	movlw	0
 12462  0150C2  6F41               	movwf	___fldiv@a& (0+255),b
 12463  0150C4  0E00               	movlw	0
 12464  0150C6  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 12465  0150C8  0E00               	movlw	0
 12466  0150CA  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 12467  0150CC                     L2:
 12468  0150CC  0E00               	movlw	0
 12469  0150CE  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 12470                           
 12471                           ; BSR set to: 1
 12472                           
 12473                           ; BSR set to: 1
 12474  0150D0  5141               	movf	___fldiv@a& (0+255),w,b
 12475  0150D2  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12476  0150D4  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12477  0150D6  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12478  0150D8  A4D8               	btfss	status,2,c
 12479  0150DA  D015               	goto	l2061
 12480                           
 12481                           ; BSR set to: 1
 12482  0150DC  0E00               	movlw	0
 12483  0150DE  6F3D               	movwf	___fldiv@b& (0+255),b
 12484  0150E0  0E00               	movlw	0
 12485  0150E2  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12486  0150E4  0E00               	movlw	0
 12487  0150E6  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12488  0150E8  0E00               	movlw	0
 12489  0150EA  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12490                           
 12491                           ; BSR set to: 1
 12492  0150EC  0E80               	movlw	128
 12493  0150EE  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12494  0150F0  0E7F               	movlw	127
 12495  0150F2  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12496                           
 12497                           ; BSR set to: 1
 12498  0150F4  C13D  F13D         	movff	___fldiv@b,?___fldiv
 12499  0150F8  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 12500  0150FC  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 12501  015100  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 12502                           
 12503                           ; BSR set to: 1
 12504  015104  0012               	return	
 12505  015106                     l2061:
 12506                           
 12507                           ; BSR set to: 1
 12508                           
 12509                           ; BSR set to: 1
 12510  015106  5154               	movf	___fldiv@bexp& (0+255),w,b
 12511  015108  A4D8               	btfss	status,2,c
 12512  01510A  D011               	goto	l2063
 12513                           
 12514                           ; BSR set to: 1
 12515  01510C  0E00               	movlw	0
 12516  01510E  6F3D               	movwf	___fldiv@b& (0+255),b
 12517  015110  0E00               	movlw	0
 12518  015112  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12519  015114  0E00               	movlw	0
 12520  015116  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12521  015118  0E00               	movlw	0
 12522  01511A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12523                           
 12524                           ; BSR set to: 1
 12525  01511C  C13D  F13D         	movff	___fldiv@b,?___fldiv
 12526  015120  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 12527  015124  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 12528  015128  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 12529                           
 12530                           ; BSR set to: 1
 12531  01512C  0012               	return	
 12532  01512E                     l2063:
 12533                           
 12534                           ; BSR set to: 1
 12535                           
 12536                           ; BSR set to: 1
 12537  01512E  5155               	movf	___fldiv@aexp& (0+255),w,b
 12538  015130  6F45               	movwf	??___fldiv& (0+255),b
 12539  015132  6B46               	clrf	(??___fldiv+1)& (0+255),b
 12540  015134  1F45               	comf	??___fldiv& (0+255),f,b
 12541  015136  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 12542  015138  4B45               	infsnz	??___fldiv& (0+255),f,b
 12543  01513A  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 12544  01513C  5154               	movf	___fldiv@bexp& (0+255),w,b
 12545  01513E  6F47               	movwf	(??___fldiv+2)& (0+255),b
 12546  015140  6B48               	clrf	(??___fldiv+3)& (0+255),b
 12547  015142  5145               	movf	??___fldiv& (0+255),w,b
 12548  015144  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 12549  015146  5146               	movf	(??___fldiv+1)& (0+255),w,b
 12550  015148  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 12551  01514A  0E7F               	movlw	127
 12552  01514C  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 12553  01514E  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 12554  015150  0E00               	movlw	0
 12555  015152  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 12556  015154  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12557                           
 12558                           ; BSR set to: 1
 12559  015156  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 12560  01515A  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 12561  01515E  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 12562  015162  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 12563                           
 12564                           ; BSR set to: 1
 12565  015166  0E00               	movlw	0
 12566  015168  6F3D               	movwf	___fldiv@b& (0+255),b
 12567  01516A  0E00               	movlw	0
 12568  01516C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12569  01516E  0E00               	movlw	0
 12570  015170  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12571  015172  0E00               	movlw	0
 12572  015174  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12573                           
 12574                           ; BSR set to: 1
 12575  015176  0E00               	movlw	0
 12576  015178  6F50               	movwf	___fldiv@grs& (0+255),b
 12577  01517A  0E00               	movlw	0
 12578  01517C  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 12579  01517E  0E00               	movlw	0
 12580  015180  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 12581  015182  0E00               	movlw	0
 12582  015184  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 12583                           
 12584                           ; BSR set to: 1
 12585  015186  0E00               	movlw	0
 12586  015188  6F55               	movwf	___fldiv@aexp& (0+255),b
 12587  01518A  D028               	goto	l2064
 12588  01518C                     
 12589                           ; BSR set to: 1
 12590                           
 12591                           ; BSR set to: 1
 12592  01518C  5155               	movf	___fldiv@aexp& (0+255),w,b
 12593  01518E  B4D8               	btfsc	status,2,c
 12594  015190  D011               	goto	l2066
 12595                           
 12596                           ; BSR set to: 1
 12597  015192  90D8               	bcf	status,0,c
 12598  015194  374A               	rlcf	___fldiv@rem& (0+255),f,b
 12599  015196  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12600  015198  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12601  01519A  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12602  01519C  90D8               	bcf	status,0,c
 12603  01519E  373D               	rlcf	___fldiv@b& (0+255),f,b
 12604  0151A0  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12605  0151A2  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12606  0151A4  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12607                           
 12608                           ; BSR set to: 1
 12609  0151A6  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12610                           
 12611                           ; BSR set to: 1
 12612  0151A8  813D               	bsf	___fldiv@b& (0+255),0,b
 12613                           
 12614                           ; BSR set to: 1
 12615  0151AA  90D8               	bcf	status,0,c
 12616  0151AC  3750               	rlcf	___fldiv@grs& (0+255),f,b
 12617  0151AE  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12618  0151B0  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12619  0151B2  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12620  0151B4                     l2066:
 12621                           
 12622                           ; BSR set to: 1
 12623                           
 12624                           ; BSR set to: 1
 12625  0151B4  5141               	movf	___fldiv@a& (0+255),w,b
 12626  0151B6  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 12627  0151B8  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 12628  0151BA  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12629  0151BC  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 12630  0151BE  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12631  0151C0  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12632  0151C2  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12633  0151C4  A0D8               	btfss	status,0,c
 12634  0151C6  D009               	goto	l2068
 12635                           
 12636                           ; BSR set to: 1
 12637  0151C8  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12638                           
 12639                           ; BSR set to: 1
 12640  0151CA  5141               	movf	___fldiv@a& (0+255),w,b
 12641  0151CC  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 12642  0151CE  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 12643  0151D0  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12644  0151D2  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 12645  0151D4  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12646  0151D6  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12647  0151D8  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12648  0151DA                     l2068:
 12649                           
 12650                           ; BSR set to: 1
 12651                           
 12652                           ; BSR set to: 1
 12653  0151DA  2B55               	incf	___fldiv@aexp& (0+255),f,b
 12654  0151DC                     l2064:
 12655                           
 12656                           ; BSR set to: 1
 12657  0151DC  0E19               	movlw	25
 12658  0151DE  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 12659  0151E0  D7D5               	goto	l2065
 12660                           
 12661                           ; BSR set to: 1
 12662                           
 12663                           ; BSR set to: 1
 12664  0151E2  514A               	movf	___fldiv@rem& (0+255),w,b
 12665  0151E4  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12666  0151E6  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12667  0151E8  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12668  0151EA  B4D8               	btfsc	status,2,c
 12669  0151EC  D011               	goto	l2071
 12670                           
 12671                           ; BSR set to: 1
 12672  0151EE  8150               	bsf	___fldiv@grs& (0+255),0,b
 12673                           
 12674                           ; BSR set to: 1
 12675  0151F0  D00F               	goto	l2071
 12676  0151F2                     
 12677                           ; BSR set to: 1
 12678                           
 12679                           ; BSR set to: 1
 12680  0151F2  90D8               	bcf	status,0,c
 12681  0151F4  373D               	rlcf	___fldiv@b& (0+255),f,b
 12682  0151F6  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12683  0151F8  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12684  0151FA  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12685                           
 12686                           ; BSR set to: 1
 12687  0151FC  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12688                           
 12689                           ; BSR set to: 1
 12690  0151FE  813D               	bsf	___fldiv@b& (0+255),0,b
 12691                           
 12692                           ; BSR set to: 1
 12693  015200  90D8               	bcf	status,0,c
 12694  015202  3750               	rlcf	___fldiv@grs& (0+255),f,b
 12695  015204  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12696  015206  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12697  015208  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12698  01520A  074E               	decf	___fldiv@new_exp& (0+255),f,b
 12699  01520C  A0D8               	btfss	status,0,c
 12700  01520E  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12701  015210                     l2071:
 12702                           
 12703                           ; BSR set to: 1
 12704                           
 12705                           ; BSR set to: 1
 12706  015210  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 12707  015212  D7EF               	goto	l2072
 12708                           
 12709                           ; BSR set to: 1
 12710                           
 12711                           ; BSR set to: 1
 12712  015214  0E00               	movlw	0
 12713  015216  6F55               	movwf	___fldiv@aexp& (0+255),b
 12714                           
 12715                           ; BSR set to: 1
 12716  015218  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12717  01521A  D016               	goto	l2078
 12718                           
 12719                           ; BSR set to: 1
 12720  01521C  0EFF               	movlw	255
 12721  01521E  1550               	andwf	___fldiv@grs& (0+255),w,b
 12722  015220  6F45               	movwf	??___fldiv& (0+255),b
 12723  015222  0EFF               	movlw	255
 12724  015224  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12725  015226  6F46               	movwf	(??___fldiv+1)& (0+255),b
 12726  015228  0EFF               	movlw	255
 12727  01522A  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12728  01522C  6F47               	movwf	(??___fldiv+2)& (0+255),b
 12729  01522E  0E7F               	movlw	127
 12730  015230  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12731  015232  6F48               	movwf	(??___fldiv+3)& (0+255),b
 12732  015234  5145               	movf	??___fldiv& (0+255),w,b
 12733  015236  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 12734  015238  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 12735  01523A  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 12736  01523C  A4D8               	btfss	status,2,c
 12737  01523E  D002               	goto	u15170
 12738                           
 12739                           ; BSR set to: 1
 12740                           
 12741                           ; BSR set to: 1
 12742  015240  A13D               	btfss	___fldiv@b& (0+255),0,b
 12743  015242  D002               	goto	l2078
 12744  015244                     u15170:
 12745                           
 12746                           ; BSR set to: 1
 12747  015244  0E01               	movlw	1
 12748  015246  6F55               	movwf	___fldiv@aexp& (0+255),b
 12749  015248                     l2078:
 12750                           
 12751                           ; BSR set to: 1
 12752                           
 12753                           ; BSR set to: 1
 12754                           
 12755                           ; BSR set to: 1
 12756  015248  5155               	movf	___fldiv@aexp& (0+255),w,b
 12757  01524A  B4D8               	btfsc	status,2,c
 12758  01524C  D01F               	goto	l2080
 12759                           
 12760                           ; BSR set to: 1
 12761  01524E  0E01               	movlw	1
 12762  015250  273D               	addwf	___fldiv@b& (0+255),f,b
 12763  015252  0E00               	movlw	0
 12764  015254  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12765  015256  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12766  015258  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12767                           
 12768                           ; BSR set to: 1
 12769  01525A  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 12770  01525C  D017               	goto	l2080
 12771                           
 12772                           ; BSR set to: 1
 12773  01525E  C13D  F145         	movff	___fldiv@b,??___fldiv
 12774  015262  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 12775  015266  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 12776  01526A  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 12777  01526E  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 12778  015270  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 12779  015272  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 12780  015274  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 12781  015276  3345               	rrcf	??___fldiv& (0+255),f,b
 12782  015278  C145  F13D         	movff	??___fldiv,___fldiv@b
 12783  01527C  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 12784  015280  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 12785  015284  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 12786                           
 12787                           ; BSR set to: 1
 12788  015288  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 12789  01528A  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12790  01528C                     l2080:
 12791                           
 12792                           ; BSR set to: 1
 12793                           
 12794                           ; BSR set to: 1
 12795                           
 12796                           ; BSR set to: 1
 12797  01528C  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12798  01528E  D010               	goto	l2081
 12799  015290  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12800  015292  E103               	bnz	u15200
 12801  015294  294E               	incf	___fldiv@new_exp& (0+255),w,b
 12802  015296  A0D8               	btfss	status,0,c
 12803  015298  D00B               	goto	l2081
 12804  01529A                     u15200:
 12805                           
 12806                           ; BSR set to: 1
 12807  01529A  0E00               	movlw	0
 12808  01529C  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12809  01529E  694E               	setf	___fldiv@new_exp& (0+255),b
 12810  0152A0  0E00               	movlw	0
 12811  0152A2  6F3D               	movwf	___fldiv@b& (0+255),b
 12812  0152A4  0E00               	movlw	0
 12813  0152A6  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12814  0152A8  0E00               	movlw	0
 12815  0152AA  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12816  0152AC  0E00               	movlw	0
 12817  0152AE  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12818  0152B0                     l2081:
 12819                           
 12820                           ; BSR set to: 1
 12821                           
 12822                           ; BSR set to: 1
 12823  0152B0  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12824  0152B2  D005               	goto	u15210
 12825  0152B4  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12826  0152B6  E111               	bnz	l12676
 12827  0152B8  054E               	decf	___fldiv@new_exp& (0+255),w,b
 12828  0152BA  B0D8               	btfsc	status,0,c
 12829  0152BC  D00E               	goto	l2082
 12830  0152BE                     u15210:
 12831                           
 12832                           ; BSR set to: 1
 12833  0152BE  0E00               	movlw	0
 12834  0152C0  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12835  0152C2  0E00               	movlw	0
 12836  0152C4  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 12837  0152C6  0E00               	movlw	0
 12838  0152C8  6F3D               	movwf	___fldiv@b& (0+255),b
 12839  0152CA  0E00               	movlw	0
 12840  0152CC  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12841  0152CE  0E00               	movlw	0
 12842  0152D0  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12843  0152D2  0E00               	movlw	0
 12844  0152D4  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12845  0152D6  0E00               	movlw	0
 12846  0152D8  6F49               	movwf	___fldiv@sign& (0+255),b
 12847  0152DA                     l2082:
 12848  0152DA                     l12676:
 12849                           
 12850                           ; BSR set to: 1
 12851  0152DA  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 12852                           
 12853                           ; BSR set to: 1
 12854  0152DE  A154               	btfss	___fldiv@bexp& (0+255),0,b
 12855  0152E0  D002               	goto	l2083
 12856                           
 12857                           ; BSR set to: 1
 12858  0152E2  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12859  0152E4  D001               	goto	l2084
 12860  0152E6                     l2083:
 12861                           
 12862                           ; BSR set to: 1
 12863                           
 12864                           ; BSR set to: 1
 12865  0152E6  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 12866  0152E8                     l2084:
 12867                           
 12868                           ; BSR set to: 1
 12869                           
 12870                           ; BSR set to: 1
 12871  0152E8  90D8               	bcf	status,0,c
 12872  0152EA  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 12873  0152EC  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12874                           
 12875                           ; BSR set to: 1
 12876  0152EE  5149               	movf	___fldiv@sign& (0+255),w,b
 12877  0152F0  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12878                           
 12879                           ; BSR set to: 1
 12880  0152F2  C13D  F13D         	movff	___fldiv@b,?___fldiv
 12881  0152F6  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 12882  0152FA  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 12883  0152FE  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 12884  015302  0012               	return	
 12885  015304                     __end_of___fldiv:
 12886                           	opt stack 0
 12887                           tblptru	equ	0xFF8
 12888                           tblptrh	equ	0xFF7
 12889                           tblptrl	equ	0xFF6
 12890                           tablat	equ	0xFF5
 12891                           prodh	equ	0xFF4
 12892                           prodl	equ	0xFF3
 12893                           intcon	equ	0xFF2
 12894                           indf0	equ	0xFEF
 12895                           postinc0	equ	0xFEE
 12896                           fsr0h	equ	0xFEA
 12897                           fsr0l	equ	0xFE9
 12898                           wreg	equ	0xFE8
 12899                           indf1	equ	0xFE7
 12900                           postdec1	equ	0xFE5
 12901                           plusw1	equ	0xFE3
 12902                           fsr1h	equ	0xFE2
 12903                           fsr1l	equ	0xFE1
 12904                           indf2	equ	0xFDF
 12905                           postinc2	equ	0xFDE
 12906                           postdec2	equ	0xFDD
 12907                           plusw2	equ	0xFDB
 12908                           fsr2h	equ	0xFDA
 12909                           fsr2l	equ	0xFD9
 12910                           status	equ	0xFD8
 12911                           
 12912 ;; *************** function _TMR7_StartTimer *****************
 12913 ;; Defined at:
 12914 ;;		line 99 in file "mcc_generated_files/tmr7.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;		None
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		None
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12932 ;;Total ram usage:        0 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; Hardware stack levels required when called:   13
 12935 ;; This function calls:
 12936 ;;		Nothing
 12937 ;; This function is called by:
 12938 ;;		_ringBufferLUT
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text25
 12943  018174                     __ptext25:
 12944                           	opt stack 0
 12945  018174                     _TMR7_StartTimer:
 12946                           	opt stack 15
 12947                           
 12948                           ;tmr7.c: 102: T7CONbits.TMR7ON = 1;
 12949                           
 12950                           ; BSR set to: 1
 12951                           ;incstack = 0
 12952  018174  010F               	movlb	15	; () banked
 12953  018176  8130               	bsf	48,0,b	;volatile
 12954                           
 12955                           ; BSR set to: 15
 12956  018178  0012               	return		;funcret
 12957  01817A                     __end_of_TMR7_StartTimer:
 12958                           	opt stack 0
 12959                           tblptru	equ	0xFF8
 12960                           tblptrh	equ	0xFF7
 12961                           tblptrl	equ	0xFF6
 12962                           tablat	equ	0xFF5
 12963                           prodh	equ	0xFF4
 12964                           prodl	equ	0xFF3
 12965                           intcon	equ	0xFF2
 12966                           indf0	equ	0xFEF
 12967                           postinc0	equ	0xFEE
 12968                           fsr0h	equ	0xFEA
 12969                           fsr0l	equ	0xFE9
 12970                           wreg	equ	0xFE8
 12971                           indf1	equ	0xFE7
 12972                           postdec1	equ	0xFE5
 12973                           plusw1	equ	0xFE3
 12974                           fsr1h	equ	0xFE2
 12975                           fsr1l	equ	0xFE1
 12976                           indf2	equ	0xFDF
 12977                           postinc2	equ	0xFDE
 12978                           postdec2	equ	0xFDD
 12979                           plusw2	equ	0xFDB
 12980                           fsr2h	equ	0xFDA
 12981                           fsr2l	equ	0xFD9
 12982                           status	equ	0xFD8
 12983                           
 12984 ;; *************** function _EUSART2_Read *****************
 12985 ;; Defined at:
 12986 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;		None
 12989 ;; Auto vars:     Size  Location     Type
 12990 ;;  readValue       1   23[BANK1 ] unsigned char 
 12991 ;; Return value:  Size  Location     Type
 12992 ;;                  1    wreg      unsigned char 
 12993 ;; Registers used:
 12994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13001 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13003 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13004 ;;Total ram usage:        1 bytes
 13005 ;; Hardware stack levels used:    1
 13006 ;; Hardware stack levels required when called:   13
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		_terminal_ringBufferPull
 13011 ;;		_getch
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           	psect	text26
 13016  017A72                     __ptext26:
 13017                           	opt stack 0
 13018  017A72                     _EUSART2_Read:
 13019                           	opt stack 16
 13020                           
 13021                           ;eusart2.c: 139: uint8_t readValue = 0;
 13022                           
 13023                           ; BSR set to: 15
 13024                           ;incstack = 0
 13025  017A72  0E00               	movlw	0
 13026  017A74  0101               	movlb	1	; () banked
 13027  017A76  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13028                           
 13029                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 13030  017A78  D002               	goto	l381
 13031  017A7A                     l382:
 13032                           
 13033                           ; BSR set to: 1
 13034  017A7A  0004               	clrwdt		;# 
 13035                           
 13036                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 13037  017A7C  827E               	bsf	3966,1,c	;volatile
 13038  017A7E                     l381:
 13039  017A7E  0101               	movlb	1	; () banked
 13040  017A80  51DE               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 13041  017A82  B4D8               	btfsc	status,2,c
 13042  017A84  D7FA               	goto	l382
 13043                           
 13044                           ; BSR set to: 1
 13045                           ;eusart2.c: 145: }
 13046                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 13047  017A86  927E               	bcf	3966,1,c	;volatile
 13048                           
 13049                           ; BSR set to: 1
 13050                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 13051  017A88  51DF               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13052  017A8A  0D01               	mullw	1
 13053  017A8C  0E00               	movlw	low _eusart2RxBuffer
 13054  017A8E  24F3               	addwf	prodl,w,c
 13055  017A90  6ED9               	movwf	fsr2l,c
 13056  017A92  0E02               	movlw	high _eusart2RxBuffer
 13057  017A94  20F4               	addwfc	prodh,w,c
 13058  017A96  6EDA               	movwf	fsr2h,c
 13059  017A98  50DF               	movf	indf2,w,c
 13060  017A9A  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13061                           
 13062                           ; BSR set to: 1
 13063  017A9C  2BDF               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 13064                           
 13065                           ; BSR set to: 1
 13066                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 13067  017A9E  0E3F               	movlw	63
 13068  017AA0  65DF               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 13069  017AA2  D002               	goto	l384
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;eusart2.c: 151: {
 13073                           ;eusart2.c: 152: eusart2RxTail = 0;
 13074  017AA4  0E00               	movlw	0
 13075  017AA6  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
 13076  017AA8                     l384:
 13077                           
 13078                           ; BSR set to: 1
 13079                           ;eusart2.c: 153: }
 13080                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 13081                           
 13082                           ; BSR set to: 1
 13083  017AA8  010E               	movlb	14	; () banked
 13084  017AAA  9F2C               	bcf	44,7,b	;volatile
 13085                           
 13086                           ; BSR set to: 14
 13087                           ;eusart2.c: 155: eusart2RxCount--;
 13088  017AAC  0101               	movlb	1	; () banked
 13089  017AAE  07DE               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 13090                           
 13091                           ; BSR set to: 1
 13092                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 13093  017AB0  010E               	movlb	14	; () banked
 13094  017AB2  8F2C               	bsf	44,7,b	;volatile
 13095                           
 13096                           ; BSR set to: 14
 13097                           ;eusart2.c: 158: return readValue;
 13098  017AB4  0101               	movlb	1	; () banked
 13099  017AB6  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 13100  017AB8  0012               	return	
 13101  017ABA                     __end_of_EUSART2_Read:
 13102                           	opt stack 0
 13103                           tblptru	equ	0xFF8
 13104                           tblptrh	equ	0xFF7
 13105                           tblptrl	equ	0xFF6
 13106                           tablat	equ	0xFF5
 13107                           prodh	equ	0xFF4
 13108                           prodl	equ	0xFF3
 13109                           intcon	equ	0xFF2
 13110                           indf0	equ	0xFEF
 13111                           postinc0	equ	0xFEE
 13112                           fsr0h	equ	0xFEA
 13113                           fsr0l	equ	0xFE9
 13114                           wreg	equ	0xFE8
 13115                           indf1	equ	0xFE7
 13116                           postdec1	equ	0xFE5
 13117                           plusw1	equ	0xFE3
 13118                           fsr1h	equ	0xFE2
 13119                           fsr1l	equ	0xFE1
 13120                           indf2	equ	0xFDF
 13121                           postinc2	equ	0xFDE
 13122                           postdec2	equ	0xFDD
 13123                           plusw2	equ	0xFDB
 13124                           fsr2h	equ	0xFDA
 13125                           fsr2l	equ	0xFD9
 13126                           status	equ	0xFD8
 13127                           
 13128 ;; *************** function _terminal_clearTerminal *****************
 13129 ;; Defined at:
 13130 ;;		line 80 in file "ring_buffer_interface.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;		None
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;		None
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13139 ;; Tracked objects:
 13140 ;;		On entry : 0/0
 13141 ;;		On exit  : 0/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13148 ;;Total ram usage:        0 bytes
 13149 ;; Hardware stack levels used:    1
 13150 ;; Hardware stack levels required when called:   16
 13151 ;; This function calls:
 13152 ;;		_printf
 13153 ;; This function is called by:
 13154 ;;		_main
 13155 ;; This function uses a non-reentrant model
 13156 ;;
 13157                           
 13158                           	psect	text27
 13159  0180B8                     __ptext27:
 13160                           	opt stack 0
 13161  0180B8                     _terminal_clearTerminal:
 13162                           	opt stack 14
 13163                           
 13164                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 13165                           
 13166                           ; BSR set to: 1
 13167                           ;incstack = 0
 13168  0180B8  0EB0               	movlw	low STR_2
 13169  0180BA  0101               	movlb	1	; () banked
 13170  0180BC  6F7C               	movwf	printf@f& (0+255),b
 13171  0180BE  0EFF               	movlw	high STR_2
 13172  0180C0  6F7D               	movwf	(printf@f+1)& (0+255),b
 13173  0180C2  EC52  F086         	call	_printf	;wreg free
 13174  0180C6  0012               	return		;funcret
 13175  0180C8                     __end_of_terminal_clearTerminal:
 13176                           	opt stack 0
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           intcon	equ	0xFF2
 13184                           indf0	equ	0xFEF
 13185                           postinc0	equ	0xFEE
 13186                           fsr0h	equ	0xFEA
 13187                           fsr0l	equ	0xFE9
 13188                           wreg	equ	0xFE8
 13189                           indf1	equ	0xFE7
 13190                           postdec1	equ	0xFE5
 13191                           plusw1	equ	0xFE3
 13192                           fsr1h	equ	0xFE2
 13193                           fsr1l	equ	0xFE1
 13194                           indf2	equ	0xFDF
 13195                           postinc2	equ	0xFDE
 13196                           postdec2	equ	0xFDD
 13197                           plusw2	equ	0xFDB
 13198                           fsr2h	equ	0xFDA
 13199                           fsr2l	equ	0xFD9
 13200                           status	equ	0xFD8
 13201                           
 13202 ;; *************** function _printf *****************
 13203 ;; Defined at:
 13204 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13205 ;; Parameters:    Size  Location     Type
 13206 ;;  f               2  124[BANK1 ] PTR const unsigned char 
 13207 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(36), 
 13208 ;;		 -> STR_115(33), STR_114(2023), STR_112(53), STR_110(58), 
 13209 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 13210 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 13211 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 13212 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 13213 ;;		 -> STR_81(34), STR_79(36), STR_77(37), STR_75(45), 
 13214 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 13215 ;;		 -> STR_59(54), STR_58(64), STR_56(57), STR_54(85), 
 13216 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 13217 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 13218 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 13219 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 13220 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;  idx             1  144[BANK1 ] unsigned char 
 13223 ;;  fval            4  163[BANK1 ] unsigned char 
 13224 ;;  val             4  159[BANK1 ] unsigned long 
 13225 ;;  tmpval          4  155[BANK1 ] struct .
 13226 ;;  prec            2  167[BANK1 ] int 
 13227 ;;  exp             2  153[BANK1 ] int 
 13228 ;;  flag            2  151[BANK1 ] unsigned short 
 13229 ;;  ap              2  149[BANK1 ] PTR void [1]
 13230 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13231 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 13232 ;;		 -> STR_133(7), printf@c(1), STR_132(16), STR_131(22), 
 13233 ;;		 -> STR_130(21), STR_129(27), STR_128(41), STR_127(32), 
 13234 ;;		 -> STR_126(19), STR_125(16), STR_124(15), STR_123(16), 
 13235 ;;		 -> STR_122(10), STR_121(13), STR_120(12), ringBufferLUT@channel_name(22), 
 13236 ;;		 -> TRIAC_Firing_Angle(4), 
 13237 ;;  len             2  145[BANK1 ] unsigned int 
 13238 ;;  width           2    0        int 
 13239 ;;  c               1  169[BANK1 ] char 
 13240 ;;  d               1    0        unsigned char 
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  2  124[BANK1 ] int 
 13243 ;; Registers used:
 13244 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13250 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13251 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13252 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13253 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13254 ;;Total ram usage:       46 bytes
 13255 ;; Hardware stack levels used:    1
 13256 ;; Hardware stack levels required when called:   15
 13257 ;; This function calls:
 13258 ;;		___awdiv
 13259 ;;		___fladd
 13260 ;;		___flge
 13261 ;;		___flmul
 13262 ;;		___flneg
 13263 ;;		___flsub
 13264 ;;		___fltol
 13265 ;;		___lldiv
 13266 ;;		___llmod
 13267 ;;		___wmul
 13268 ;;		___xxtofl
 13269 ;;		__div_to_l_
 13270 ;;		__tdiv_to_l_
 13271 ;;		_fround
 13272 ;;		_isdigit
 13273 ;;		_putch
 13274 ;;		_scale
 13275 ;; This function is called by:
 13276 ;;		_terminal_clearTerminal
 13277 ;;		_terminal_setCursorHome
 13278 ;;		_terminal_textAttributes
 13279 ;;		_terminal_printNewline
 13280 ;;		_ringBufferLUT
 13281 ;;		_terminal_printResetMessage
 13282 ;;		_terminal_clearLine
 13283 ;;		_terminal_saveCursor
 13284 ;;		_terminal_returnCursor
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text28
 13289  010CA4                     __ptext28:
 13290                           	opt stack 0
 13291  010CA4                     _printf:
 13292                           	opt stack 13
 13293                           
 13294                           ;doprnt.c: 466: va_list ap;
 13295                           ;doprnt.c: 499: signed char c;
 13296                           ;doprnt.c: 501: int width;
 13297                           ;doprnt.c: 504: int prec;
 13298                           ;doprnt.c: 508: unsigned short flag;
 13299                           ;doprnt.c: 515: char d;
 13300                           ;doprnt.c: 516: double fval;
 13301                           ;doprnt.c: 517: int exp;
 13302                           ;doprnt.c: 523: union {
 13303                           ;doprnt.c: 524: unsigned long vd;
 13304                           ;doprnt.c: 525: double integ;
 13305                           ;doprnt.c: 526: } tmpval;
 13306                           ;doprnt.c: 528: unsigned long val;
 13307                           ;doprnt.c: 529: unsigned len;
 13308                           ;doprnt.c: 530: const char * cp;
 13309                           ;doprnt.c: 533: *ap = __va_start();
 13310                           
 13311                           ;incstack = 0
 13312  010CA4  0E7E               	movlw	low (?_printf+2)
 13313  010CA6  0101               	movlb	1	; () banked
 13314  010CA8  6F95               	movwf	printf@ap& (0+255),b
 13315  010CAA  0E01               	movlw	high (?_printf+2)
 13316  010CAC  6F96               	movwf	(printf@ap+1)& (0+255),b
 13317                           
 13318                           ;doprnt.c: 536: while(c = *f++) {
 13319  010CAE  EFC6  F08B         	goto	u14420
 13320  010CB2                     
 13321                           ; BSR set to: 1
 13322                           ;doprnt.c: 538: if(c != '%')
 13323                           
 13324                           ; BSR set to: 1
 13325  010CB2  0E25               	movlw	37
 13326  010CB4  19A9               	xorwf	printf@c& (0+255),w,b
 13327  010CB6  B4D8               	btfsc	status,2,c
 13328  010CB8  D005               	goto	l1352
 13329                           
 13330                           ; BSR set to: 1
 13331                           ;doprnt.c: 540: {
 13332                           ;doprnt.c: 541: (putch(c) );
 13333  010CBA  51A9               	movf	printf@c& (0+255),w,b
 13334  010CBC  EC6C  F0C0         	call	_putch
 13335                           
 13336                           ;doprnt.c: 542: continue;
 13337  010CC0  EFC6  F08B         	goto	u14420
 13338  010CC4                     l1352:
 13339                           
 13340                           ;doprnt.c: 543: }
 13341                           ;doprnt.c: 548: flag = 0;
 13342  010CC4  0E00               	movlw	0
 13343  010CC6  0101               	movlb	1	; () banked
 13344  010CC8  6F98               	movwf	(printf@flag+1)& (0+255),b
 13345  010CCA  0E00               	movlw	0
 13346  010CCC  6F97               	movwf	printf@flag& (0+255),b
 13347                           
 13348                           ; BSR set to: 1
 13349                           ;doprnt.c: 611: if(*f == '.') {
 13350  010CCE  C17C  FFF6         	movff	printf@f,tblptrl
 13351  010CD2  C17D  FFF7         	movff	printf@f+1,tblptrh
 13352  010CD6  0E00               	movlw	low (__mediumconst shr (0+16))
 13353  010CD8  6EF8               	movwf	tblptru,c
 13354  010CDA  0E0D               	movlw	(high __ramtop+-1)
 13355  010CDC  64F7               	cpfsgt	tblptrh,c
 13356  010CDE  D003               	bra	u13937
 13357  010CE0  0008               	tblrd		*
 13358  010CE2  50F5               	movf	tablat,w,c
 13359  010CE4  D005               	bra	u13930
 13360  010CE6                     u13937:
 13361  010CE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 13362  010CEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 13363  010CEE  50EF               	movf	indf0,w,c
 13364  010CF0                     u13930:
 13365  010CF0  0A2E               	xorlw	46
 13366  010CF2  A4D8               	btfss	status,2,c
 13367  010CF4  D049               	goto	l1353
 13368                           
 13369                           ;doprnt.c: 612: flag |= 0x4000;
 13370  010CF6  0101               	movlb	1	; () banked
 13371  010CF8  8D98               	bsf	(printf@flag+1)& (0+255),6,b
 13372                           
 13373                           ;doprnt.c: 613: f++;
 13374  010CFA  4B7C               	infsnz	printf@f& (0+255),f,b
 13375  010CFC  2B7D               	incf	(printf@f+1)& (0+255),f,b
 13376                           
 13377                           ; BSR set to: 1
 13378                           ;doprnt.c: 620: {
 13379                           ;doprnt.c: 621: prec = 0;
 13380  010CFE  0E00               	movlw	0
 13381  010D00  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13382  010D02  0E00               	movlw	0
 13383  010D04  6FA7               	movwf	printf@prec& (0+255),b
 13384                           
 13385                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 13386  010D06  D02A               	goto	l1354
 13387  010D08                     
 13388                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 13389                           
 13390                           ; BSR set to: 1
 13391  010D08  C1A7  F117         	movff	printf@prec,___wmul@multiplier
 13392  010D0C  C1A8  F118         	movff	printf@prec+1,___wmul@multiplier+1
 13393  010D10  0E00               	movlw	0
 13394  010D12  0101               	movlb	1	; () banked
 13395  010D14  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13396  010D16  0E0A               	movlw	10
 13397  010D18  6F19               	movwf	___wmul@multiplicand& (0+255),b
 13398  010D1A  EC41  F0BF         	call	___wmul	;wreg free
 13399  010D1E  C17C  FFF6         	movff	printf@f,tblptrl
 13400  010D22  C17D  FFF7         	movff	printf@f+1,tblptrh
 13401  010D26  0E00               	movlw	low (__mediumconst shr (0+16))
 13402  010D28  6EF8               	movwf	tblptru,c
 13403  010D2A  0E0D               	movlw	(high __ramtop+-1)
 13404  010D2C  64F7               	cpfsgt	tblptrh,c
 13405  010D2E  D003               	bra	u13957
 13406  010D30  0008               	tblrd		*
 13407  010D32  50F5               	movf	tablat,w,c
 13408  010D34  D005               	bra	u13950
 13409  010D36                     u13957:
 13410  010D36  CFF6 FFE9          	movff	tblptrl,fsr0l
 13411  010D3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13412  010D3E  50EF               	movf	indf0,w,c
 13413  010D40                     u13950:
 13414  010D40  0101               	movlb	1	; () banked
 13415  010D42  6F86               	movwf	??_printf& (0+255),b
 13416  010D44  5186               	movf	??_printf& (0+255),w,b
 13417  010D46  2717               	addwf	?___wmul& (0+255),f,b
 13418  010D48  0E00               	movlw	0
 13419  010D4A  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 13420  010D4C  0ED0               	movlw	208
 13421  010D4E  2517               	addwf	?___wmul& (0+255),w,b
 13422  010D50  6FA7               	movwf	printf@prec& (0+255),b
 13423  010D52  0EFF               	movlw	255
 13424  010D54  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 13425  010D56  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13426                           
 13427                           ; BSR set to: 1
 13428  010D58  4B7C               	infsnz	printf@f& (0+255),f,b
 13429  010D5A  2B7D               	incf	(printf@f+1)& (0+255),f,b
 13430  010D5C                     l1354:
 13431                           
 13432                           ; BSR set to: 1
 13433                           
 13434                           ; BSR set to: 1
 13435  010D5C  C17C  FFF6         	movff	printf@f,tblptrl
 13436  010D60  C17D  FFF7         	movff	printf@f+1,tblptrh
 13437  010D64  0E00               	movlw	low (__mediumconst shr (0+16))
 13438  010D66  6EF8               	movwf	tblptru,c
 13439  010D68  0E0D               	movlw	(high __ramtop+-1)
 13440  010D6A  64F7               	cpfsgt	tblptrh,c
 13441  010D6C  D003               	bra	u13967
 13442  010D6E  0008               	tblrd		*
 13443  010D70  50F5               	movf	tablat,w,c
 13444  010D72  D005               	bra	u13960
 13445  010D74                     u13967:
 13446  010D74  CFF6 FFE9          	movff	tblptrl,fsr0l
 13447  010D78  CFF7 FFEA          	movff	tblptrh,fsr0h
 13448  010D7C  50EF               	movf	indf0,w,c
 13449  010D7E                     u13960:
 13450  010D7E  ECC8  F0BF         	call	_isdigit
 13451  010D82  A0D8               	btfss	status,0,c
 13452  010D84  D088               	goto	l1358
 13453  010D86  D7C0               	goto	l1355
 13454  010D88                     l1353:
 13455                           
 13456                           ;doprnt.c: 626: prec = 0;
 13457  010D88  0E00               	movlw	0
 13458  010D8A  0101               	movlb	1	; () banked
 13459  010D8C  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13460  010D8E  0E00               	movlw	0
 13461  010D90  6FA7               	movwf	printf@prec& (0+255),b
 13462                           
 13463                           ; BSR set to: 1
 13464                           ;doprnt.c: 628: flag |= 0x1000;
 13465  010D92  8998               	bsf	(printf@flag+1)& (0+255),4,b
 13466                           
 13467                           ; BSR set to: 1
 13468                           ;doprnt.c: 630: }
 13469                           ;doprnt.c: 635: switch(c = *f++) {
 13470  010D94  D080               	goto	l1358
 13471  010D96                     
 13472                           ; BSR set to: 1
 13473                           ;doprnt.c: 663: flag |= 0x400;
 13474                           
 13475                           ; BSR set to: 1
 13476  010D96  8598               	bsf	(printf@flag+1)& (0+255),2,b
 13477                           
 13478                           ; BSR set to: 1
 13479                           ;doprnt.c: 698: case 'i':
 13480                           ;doprnt.c: 699: break;
 13481                           
 13482                           ; BSR set to: 1
 13483                           
 13484                           ;doprnt.c: 697: case 'd':
 13485                           
 13486                           ;doprnt.c: 664: break;
 13487  010D98  D0B5               	goto	l1362
 13488  010D9A                     
 13489                           ; BSR set to: 1
 13490                           ;doprnt.c: 718: case 'x':
 13491                           ;doprnt.c: 721: flag |= 0x80;
 13492                           
 13493                           ; BSR set to: 1
 13494                           
 13495                           ; BSR set to: 1
 13496  010D9A  8F97               	bsf	printf@flag& (0+255),7,b
 13497                           
 13498                           ;doprnt.c: 723: break;
 13499  010D9C  D0B3               	goto	l1362
 13500  010D9E                     
 13501                           ; BSR set to: 1
 13502                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13503                           
 13504                           ; BSR set to: 1
 13505  010D9E  C195  FFD9         	movff	printf@ap,fsr2l
 13506  010DA2  C196  FFDA         	movff	printf@ap+1,fsr2h
 13507  010DA6  CFDE F193          	movff	postinc2,printf@cp
 13508  010DAA  CFDD F194          	movff	postdec2,printf@cp+1
 13509                           
 13510                           ; BSR set to: 1
 13511  010DAE  0E02               	movlw	2
 13512  010DB0  2795               	addwf	printf@ap& (0+255),f,b
 13513  010DB2  0E00               	movlw	0
 13514  010DB4  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 13515                           
 13516                           ; BSR set to: 1
 13517                           ;doprnt.c: 740: if(!cp)
 13518  010DB6  5193               	movf	printf@cp& (0+255),w,b
 13519  010DB8  1194               	iorwf	(printf@cp+1)& (0+255),w,b
 13520  010DBA  A4D8               	btfss	status,2,c
 13521  010DBC  D004               	goto	l1368
 13522                           
 13523                           ; BSR set to: 1
 13524                           ;doprnt.c: 741: cp = "(null)";
 13525  010DBE  0E86               	movlw	low STR_133
 13526  010DC0  6F93               	movwf	printf@cp& (0+255),b
 13527  010DC2  0EFF               	movlw	high STR_133
 13528  010DC4  6F94               	movwf	(printf@cp+1)& (0+255),b
 13529  010DC6                     l1368:
 13530                           
 13531                           ; BSR set to: 1
 13532                           ;doprnt.c: 745: len = 0;
 13533                           
 13534                           ; BSR set to: 1
 13535  010DC6  0E00               	movlw	0
 13536  010DC8  6F92               	movwf	(printf@len+1)& (0+255),b
 13537  010DCA  0E00               	movlw	0
 13538  010DCC  6F91               	movwf	printf@len& (0+255),b
 13539                           
 13540                           ;doprnt.c: 746: while(cp[len])
 13541  010DCE  D003               	goto	l1369
 13542  010DD0                     
 13543                           ;doprnt.c: 747: len++;
 13544                           
 13545                           ; BSR set to: 1
 13546  010DD0  0101               	movlb	1	; () banked
 13547  010DD2  4B91               	infsnz	printf@len& (0+255),f,b
 13548  010DD4  2B92               	incf	(printf@len+1)& (0+255),f,b
 13549  010DD6                     l1369:
 13550                           
 13551                           ; BSR set to: 1
 13552                           
 13553                           ; BSR set to: 1
 13554  010DD6  5191               	movf	printf@len& (0+255),w,b
 13555  010DD8  2593               	addwf	printf@cp& (0+255),w,b
 13556  010DDA  6F86               	movwf	??_printf& (0+255),b
 13557  010DDC  5192               	movf	(printf@len+1)& (0+255),w,b
 13558  010DDE  2194               	addwfc	(printf@cp+1)& (0+255),w,b
 13559  010DE0  6F87               	movwf	(??_printf+1)& (0+255),b
 13560  010DE2  C186  FFF6         	movff	??_printf,tblptrl
 13561  010DE6  C187  FFF7         	movff	??_printf+1,tblptrh
 13562  010DEA  0E00               	movlw	low (__mediumconst shr (0+16))
 13563  010DEC  6EF8               	movwf	tblptru,c
 13564  010DEE  0E0D               	movlw	(high __ramtop+-1)
 13565  010DF0  64F7               	cpfsgt	tblptrh,c
 13566  010DF2  D003               	bra	u13997
 13567  010DF4  0008               	tblrd		*
 13568  010DF6  50F5               	movf	tablat,w,c
 13569  010DF8  D005               	bra	u13990
 13570  010DFA                     u13997:
 13571  010DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13572  010DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13573  010E02  50EF               	movf	indf0,w,c
 13574  010E04                     u13990:
 13575  010E04  0900               	iorlw	0
 13576  010E06  A4D8               	btfss	status,2,c
 13577  010E08  D7E3               	goto	l1370
 13578  010E0A                     u14000:
 13579                           
 13580                           ;doprnt.c: 753: if(prec && prec < len)
 13581                           
 13582                           ;doprnt.c: 750: dostring:
 13583  010E0A  0101               	movlb	1	; () banked
 13584  010E0C  51A7               	movf	printf@prec& (0+255),w,b
 13585  010E0E  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 13586  010E10  B4D8               	btfsc	status,2,c
 13587  010E12  D021               	goto	l1374
 13588                           
 13589                           ; BSR set to: 1
 13590  010E14  5191               	movf	printf@len& (0+255),w,b
 13591  010E16  5DA7               	subwf	printf@prec& (0+255),w,b
 13592  010E18  5192               	movf	(printf@len+1)& (0+255),w,b
 13593  010E1A  59A8               	subwfb	(printf@prec+1)& (0+255),w,b
 13594  010E1C  B0D8               	btfsc	status,0,c
 13595  010E1E  D01B               	goto	l1374
 13596                           
 13597                           ; BSR set to: 1
 13598                           ;doprnt.c: 754: len = prec;
 13599  010E20  C1A7  F191         	movff	printf@prec,printf@len
 13600  010E24  C1A8  F192         	movff	printf@prec+1,printf@len+1
 13601                           
 13602                           ; BSR set to: 1
 13603                           ;doprnt.c: 767: while(len--)
 13604  010E28  D016               	goto	l1374
 13605  010E2A                     l11770:
 13606                           
 13607                           ; BSR set to: 1
 13608                           ;doprnt.c: 768: (putch(*cp++) );
 13609  010E2A  C193  FFF6         	movff	printf@cp,tblptrl
 13610  010E2E  C194  FFF7         	movff	printf@cp+1,tblptrh
 13611  010E32  0E00               	movlw	low (__mediumconst shr (0+16))
 13612  010E34  6EF8               	movwf	tblptru,c
 13613  010E36  0E0D               	movlw	(high __ramtop+-1)
 13614  010E38  64F7               	cpfsgt	tblptrh,c
 13615  010E3A  D003               	bra	u14037
 13616  010E3C  0008               	tblrd		*
 13617  010E3E  50F5               	movf	tablat,w,c
 13618  010E40  D005               	bra	u14030
 13619  010E42                     u14037:
 13620  010E42  CFF6 FFE9          	movff	tblptrl,fsr0l
 13621  010E46  CFF7 FFEA          	movff	tblptrh,fsr0h
 13622  010E4A  50EF               	movf	indf0,w,c
 13623  010E4C                     u14030:
 13624  010E4C  EC6C  F0C0         	call	_putch
 13625  010E50  0101               	movlb	1	; () banked
 13626  010E52  4B93               	infsnz	printf@cp& (0+255),f,b
 13627  010E54  2B94               	incf	(printf@cp+1)& (0+255),f,b
 13628  010E56                     l1374:
 13629                           
 13630                           ; BSR set to: 1
 13631                           
 13632                           ; BSR set to: 1
 13633  010E56  0791               	decf	printf@len& (0+255),f,b
 13634  010E58  A0D8               	btfss	status,0,c
 13635  010E5A  0792               	decf	(printf@len+1)& (0+255),f,b
 13636  010E5C  2991               	incf	printf@len& (0+255),w,b
 13637  010E5E  E1E5               	bnz	l11770
 13638  010E60  2992               	incf	(printf@len+1)& (0+255),w,b
 13639  010E62  B4D8               	btfsc	status,2,c
 13640  010E64  EFC6  F08B         	goto	u14420
 13641  010E68  D7E0               	goto	l1375
 13642  010E6A                     
 13643                           ; BSR set to: 1
 13644                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 13645                           
 13646                           ; BSR set to: 1
 13647  010E6A  C195  FFD9         	movff	printf@ap,fsr2l
 13648  010E6E  C196  FFDA         	movff	printf@ap+1,fsr2h
 13649  010E72  50DF               	movf	indf2,w,c
 13650  010E74  6FA9               	movwf	printf@c& (0+255),b
 13651                           
 13652                           ; BSR set to: 1
 13653  010E76  0E02               	movlw	2
 13654  010E78  2795               	addwf	printf@ap& (0+255),f,b
 13655  010E7A  0E00               	movlw	0
 13656  010E7C  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 13657  010E7E                     
 13658                           ; BSR set to: 1
 13659                           ;doprnt.c: 805: cp = (char *)&c;
 13660                           
 13661                           ; BSR set to: 1
 13662  010E7E  0EA9               	movlw	low printf@c
 13663  010E80  6F93               	movwf	printf@cp& (0+255),b
 13664  010E82  0E01               	movlw	high printf@c
 13665  010E84  6F94               	movwf	(printf@cp+1)& (0+255),b
 13666                           
 13667                           ; BSR set to: 1
 13668                           ;doprnt.c: 806: len = 1;
 13669  010E86  0E00               	movlw	0
 13670  010E88  6F92               	movwf	(printf@len+1)& (0+255),b
 13671  010E8A  0E01               	movlw	1
 13672  010E8C  6F91               	movwf	printf@len& (0+255),b
 13673                           
 13674                           ;doprnt.c: 807: goto dostring;
 13675  010E8E  D7BD               	goto	u14000
 13676  010E90                     
 13677                           ; BSR set to: 1
 13678                           ;doprnt.c: 818: flag |= 0xC0;
 13679                           
 13680                           ; BSR set to: 1
 13681  010E90  0EC0               	movlw	192
 13682  010E92  1397               	iorwf	printf@flag& (0+255),f,b
 13683                           
 13684                           ; BSR set to: 1
 13685                           ;doprnt.c: 822: }
 13686                           
 13687                           ;doprnt.c: 819: break;
 13688  010E94  D037               	goto	l1362
 13689  010E96                     l1358:
 13690                           
 13691                           ; BSR set to: 1
 13692  010E96  0101               	movlb	1	; () banked
 13693  010E98  517C               	movf	printf@f& (0+255),w,b
 13694  010E9A  6F86               	movwf	??_printf& (0+255),b
 13695  010E9C  517D               	movf	(printf@f+1)& (0+255),w,b
 13696  010E9E  6F87               	movwf	(??_printf+1)& (0+255),b
 13697  010EA0  4B7C               	infsnz	printf@f& (0+255),f,b
 13698  010EA2  2B7D               	incf	(printf@f+1)& (0+255),f,b
 13699  010EA4  C186  FFF6         	movff	??_printf,tblptrl
 13700  010EA8  C187  FFF7         	movff	??_printf+1,tblptrh
 13701  010EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 13702  010EAE  6EF8               	movwf	tblptru,c
 13703  010EB0  0E0D               	movlw	(high __ramtop+-1)
 13704  010EB2  64F7               	cpfsgt	tblptrh,c
 13705  010EB4  D003               	bra	u14057
 13706  010EB6  0008               	tblrd		*
 13707  010EB8  50F5               	movf	tablat,w,c
 13708  010EBA  D005               	bra	u14050
 13709  010EBC                     u14057:
 13710  010EBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13711  010EC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 13712  010EC4  50EF               	movf	indf0,w,c
 13713  010EC6                     u14050:
 13714  010EC6  0101               	movlb	1	; () banked
 13715  010EC8  6FA9               	movwf	printf@c& (0+255),b
 13716  010ECA  51A9               	movf	printf@c& (0+255),w,b
 13717                           
 13718                           ; Switch size 1, requested type "space"
 13719                           ; Number of cases is 9, Range of values is 0 to 120
 13720                           ; switch strategies available:
 13721                           ; Name         Instructions Cycles
 13722                           ; simple_byte           28    15 (average)
 13723                           ;	Chosen strategy is simple_byte
 13724  010ECC  0A00               	xorlw	0	; case 0
 13725  010ECE  B4D8               	btfsc	status,2,c
 13726  010ED0  0012               	return	
 13727  010ED2  0A58               	xorlw	88	; case 88
 13728  010ED4  B4D8               	btfsc	status,2,c
 13729  010ED6  D761               	goto	l1365
 13730  010ED8  0A3B               	xorlw	59	; case 99
 13731  010EDA  B4D8               	btfsc	status,2,c
 13732  010EDC  D7C6               	goto	l1377
 13733  010EDE  0A07               	xorlw	7	; case 100
 13734  010EE0  B4D8               	btfsc	status,2,c
 13735  010EE2  D010               	goto	l1362
 13736  010EE4  0A02               	xorlw	2	; case 102
 13737  010EE6  B4D8               	btfsc	status,2,c
 13738  010EE8  D756               	goto	l1361
 13739  010EEA  0A0F               	xorlw	15	; case 105
 13740  010EEC  B4D8               	btfsc	status,2,c
 13741  010EEE  D00A               	goto	l1362
 13742  010EF0  0A1A               	xorlw	26	; case 115
 13743  010EF2  B4D8               	btfsc	status,2,c
 13744  010EF4  D754               	goto	l1367
 13745  010EF6  0A06               	xorlw	6	; case 117
 13746  010EF8  B4D8               	btfsc	status,2,c
 13747  010EFA  D7CA               	goto	l1379
 13748  010EFC  0A0D               	xorlw	13	; case 120
 13749  010EFE  B4D8               	btfsc	status,2,c
 13750  010F00  D74C               	goto	l1365
 13751  010F02  D7BD               	goto	l1378
 13752  010F04                     l1362:
 13753                           
 13754                           ; BSR set to: 1
 13755                           ;doprnt.c: 825: if(flag & (0x700)) {
 13756                           
 13757                           ; BSR set to: 1
 13758  010F04  0E07               	movlw	7
 13759  010F06  1598               	andwf	(printf@flag+1)& (0+255),w,b
 13760  010F08  B4D8               	btfsc	status,2,c
 13761  010F0A  D2EA               	goto	l1380
 13762                           
 13763                           ; BSR set to: 1
 13764                           ;doprnt.c: 827: if(flag & 0x1000)
 13765  010F0C  A998               	btfss	(printf@flag+1)& (0+255),4,b
 13766  010F0E  D004               	goto	l1381
 13767                           
 13768                           ; BSR set to: 1
 13769                           ;doprnt.c: 829: prec = 6;
 13770  010F10  0E00               	movlw	0
 13771  010F12  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13772  010F14  0E06               	movlw	6
 13773  010F16  6FA7               	movwf	printf@prec& (0+255),b
 13774  010F18                     l1381:
 13775                           
 13776                           ; BSR set to: 1
 13777                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13778                           
 13779                           ; BSR set to: 1
 13780  010F18  C195  FFD9         	movff	printf@ap,fsr2l
 13781  010F1C  C196  FFDA         	movff	printf@ap+1,fsr2h
 13782  010F20  CFDE F1A3          	movff	postinc2,printf@fval
 13783  010F24  CFDE F1A4          	movff	postinc2,printf@fval+1
 13784  010F28  CFDE F1A5          	movff	postinc2,printf@fval+2
 13785  010F2C  CFDE F1A6          	movff	postinc2,printf@fval+3
 13786                           
 13787                           ; BSR set to: 1
 13788  010F30  0E04               	movlw	4
 13789  010F32  2795               	addwf	printf@ap& (0+255),f,b
 13790  010F34  0E00               	movlw	0
 13791  010F36  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 13792                           
 13793                           ; BSR set to: 1
 13794                           ;doprnt.c: 831: if(fval < 0.0) {
 13795  010F38  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 13796  010F3A  D015               	goto	l1382
 13797                           
 13798                           ; BSR set to: 1
 13799                           ;doprnt.c: 832: fval = -fval;
 13800  010F3C  C1A3  F125         	movff	printf@fval,___flneg@f1
 13801  010F40  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 13802  010F44  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 13803  010F48  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 13804  010F4C  ECFB  F0BE         	call	___flneg	;wreg free
 13805  010F50  C125  F1A3         	movff	?___flneg,printf@fval
 13806  010F54  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 13807  010F58  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 13808  010F5C  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 13809                           
 13810                           ;doprnt.c: 833: flag |= 0x03;
 13811  010F60  0E03               	movlw	3
 13812  010F62  0101               	movlb	1	; () banked
 13813  010F64  1397               	iorwf	printf@flag& (0+255),f,b
 13814  010F66                     l1382:
 13815                           
 13816                           ; BSR set to: 1
 13817                           ;doprnt.c: 834: }
 13818                           ;doprnt.c: 835: exp = 0;
 13819                           
 13820                           ; BSR set to: 1
 13821  010F66  0E00               	movlw	0
 13822  010F68  6F9A               	movwf	(printf@exp+1)& (0+255),b
 13823  010F6A  0E00               	movlw	0
 13824  010F6C  6F99               	movwf	printf@exp& (0+255),b
 13825                           
 13826                           ; BSR set to: 1
 13827                           ;doprnt.c: 836: if( fval!=0) {
 13828  010F6E  51A3               	movf	printf@fval& (0+255),w,b
 13829  010F70  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 13830  010F72  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 13831  010F74  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 13832  010F76  B4D8               	btfsc	status,2,c
 13833  010F78  D084               	goto	l1387
 13834                           
 13835                           ; BSR set to: 1
 13836                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 13837  010F7A  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 13838  010F7C  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 13839  010F7E  0F82               	addlw	130
 13840  010F80  6F99               	movwf	printf@exp& (0+255),b
 13841  010F82  6B9A               	clrf	(printf@exp+1)& (0+255),b
 13842  010F84  0EFF               	movlw	255
 13843  010F86  239A               	addwfc	(printf@exp+1)& (0+255),f,b
 13844                           
 13845                           ; BSR set to: 1
 13846                           ;doprnt.c: 838: exp--;
 13847  010F88  0799               	decf	printf@exp& (0+255),f,b
 13848  010F8A  A0D8               	btfss	status,0,c
 13849  010F8C  079A               	decf	(printf@exp+1)& (0+255),f,b
 13850                           
 13851                           ; BSR set to: 1
 13852                           ;doprnt.c: 839: exp *= 3;
 13853  010F8E  C199  F117         	movff	printf@exp,___wmul@multiplier
 13854  010F92  C19A  F118         	movff	printf@exp+1,___wmul@multiplier+1
 13855  010F96  0E00               	movlw	0
 13856  010F98  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13857  010F9A  0E03               	movlw	3
 13858  010F9C  6F19               	movwf	___wmul@multiplicand& (0+255),b
 13859  010F9E  EC41  F0BF         	call	___wmul	;wreg free
 13860  010FA2  C117  F199         	movff	?___wmul,printf@exp
 13861  010FA6  C118  F19A         	movff	?___wmul+1,printf@exp+1
 13862                           
 13863                           ;doprnt.c: 840: exp /= 10;
 13864  010FAA  C199  F11D         	movff	printf@exp,___awdiv@dividend
 13865  010FAE  C19A  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 13866  010FB2  0E00               	movlw	0
 13867  010FB4  0101               	movlb	1	; () banked
 13868  010FB6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 13869  010FB8  0E0A               	movlw	10
 13870  010FBA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 13871  010FBC  EC1F  F0B8         	call	___awdiv	;wreg free
 13872  010FC0  C11D  F199         	movff	?___awdiv,printf@exp
 13873  010FC4  C11E  F19A         	movff	?___awdiv+1,printf@exp+1
 13874                           
 13875                           ;doprnt.c: 841: if(exp < 0)
 13876  010FC8  0101               	movlb	1	; () banked
 13877  010FCA  AF9A               	btfss	(printf@exp+1)& (0+255),7,b
 13878  010FCC  D003               	goto	l1384
 13879                           
 13880                           ; BSR set to: 1
 13881                           ;doprnt.c: 842: exp--;
 13882  010FCE  0799               	decf	printf@exp& (0+255),f,b
 13883  010FD0  A0D8               	btfss	status,0,c
 13884  010FD2  079A               	decf	(printf@exp+1)& (0+255),f,b
 13885  010FD4                     l1384:
 13886                           
 13887                           ; BSR set to: 1
 13888                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 13889                           
 13890                           ; BSR set to: 1
 13891  010FD4  5199               	movf	printf@exp& (0+255),w,b
 13892  010FD6  0800               	sublw	0
 13893  010FD8  EC8C  F095         	call	_scale
 13894  010FDC  C16F  F19B         	movff	?_scale,printf@tmpval
 13895  010FE0  C170  F19C         	movff	?_scale+1,printf@tmpval+1
 13896  010FE4  C171  F19D         	movff	?_scale+2,printf@tmpval+2
 13897  010FE8  C172  F19E         	movff	?_scale+3,printf@tmpval+3
 13898                           
 13899                           ;doprnt.c: 847: tmpval.integ *= fval;
 13900  010FEC  C19B  F156         	movff	printf@tmpval,___flmul@b
 13901  010FF0  C19C  F157         	movff	printf@tmpval+1,___flmul@b+1
 13902  010FF4  C19D  F158         	movff	printf@tmpval+2,___flmul@b+2
 13903  010FF8  C19E  F159         	movff	printf@tmpval+3,___flmul@b+3
 13904  010FFC  C1A3  F15A         	movff	printf@fval,___flmul@a
 13905  011000  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 13906  011004  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 13907  011008  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 13908  01100C  ECD2  F09B         	call	___flmul	;wreg free
 13909  011010  C156  F19B         	movff	?___flmul,printf@tmpval
 13910  011014  C157  F19C         	movff	?___flmul+1,printf@tmpval+1
 13911  011018  C158  F19D         	movff	?___flmul+2,printf@tmpval+2
 13912  01101C  C159  F19E         	movff	?___flmul+3,printf@tmpval+3
 13913                           
 13914                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 13915  011020  C19B  F117         	movff	printf@tmpval,___flge@ff1
 13916  011024  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 13917  011028  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 13918  01102C  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 13919  011030  0E00               	movlw	0
 13920  011032  0101               	movlb	1	; () banked
 13921  011034  6F1B               	movwf	___flge@ff2& (0+255),b
 13922  011036  0E00               	movlw	0
 13923  011038  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 13924  01103A  0E80               	movlw	128
 13925  01103C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 13926  01103E  0E3F               	movlw	63
 13927  011040  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 13928  011042  EC21  F0B2         	call	___flge	;wreg free
 13929  011046  0101               	movlb	1	; () banked
 13930  011048  B0D8               	btfsc	status,0,c
 13931  01104A  D004               	goto	l1385
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;doprnt.c: 849: exp--;
 13935  01104C  0799               	decf	printf@exp& (0+255),f,b
 13936  01104E  A0D8               	btfss	status,0,c
 13937  011050  079A               	decf	(printf@exp+1)& (0+255),f,b
 13938  011052  D017               	goto	l1387
 13939  011054                     l1385:
 13940                           
 13941                           ; BSR set to: 1
 13942                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 13943                           
 13944                           ; BSR set to: 1
 13945  011054  C19B  F117         	movff	printf@tmpval,___flge@ff1
 13946  011058  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 13947  01105C  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 13948  011060  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 13949  011064  0E00               	movlw	0
 13950  011066  6F1B               	movwf	___flge@ff2& (0+255),b
 13951  011068  0E00               	movlw	0
 13952  01106A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 13953  01106C  0E20               	movlw	32
 13954  01106E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 13955  011070  0E41               	movlw	65
 13956  011072  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 13957  011074  EC21  F0B2         	call	___flge	;wreg free
 13958  011078  0101               	movlb	1	; () banked
 13959  01107A  A0D8               	btfss	status,0,c
 13960  01107C  D002               	goto	l1387
 13961                           
 13962                           ; BSR set to: 1
 13963                           ;doprnt.c: 851: exp++;
 13964  01107E  4B99               	infsnz	printf@exp& (0+255),f,b
 13965  011080  2B9A               	incf	(printf@exp+1)& (0+255),f,b
 13966  011082                     l1387:
 13967                           
 13968                           ; BSR set to: 1
 13969                           ;doprnt.c: 852: }
 13970                           ;doprnt.c: 1112: if(prec <= 12)
 13971                           
 13972                           ; BSR set to: 1
 13973                           
 13974                           ; BSR set to: 1
 13975                           
 13976                           ; BSR set to: 1
 13977  011082  BFA8               	btfsc	(printf@prec+1)& (0+255),7,b
 13978  011084  D006               	goto	u14130
 13979  011086  51A8               	movf	(printf@prec+1)& (0+255),w,b
 13980  011088  E121               	bnz	l11838
 13981  01108A  0E0D               	movlw	13
 13982  01108C  5DA7               	subwf	printf@prec& (0+255),w,b
 13983  01108E  B0D8               	btfsc	status,0,c
 13984  011090  D01D               	goto	l1388
 13985  011092                     u14130:
 13986                           
 13987                           ; BSR set to: 1
 13988                           ;doprnt.c: 1113: fval += fround(prec);
 13989  011092  C1A3  F129         	movff	printf@fval,___fladd@b
 13990  011096  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 13991  01109A  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 13992  01109E  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 13993  0110A2  51A7               	movf	printf@prec& (0+255),w,b
 13994  0110A4  ECC4  F0A6         	call	_fround
 13995  0110A8  C16F  F12D         	movff	?_fround,___fladd@a
 13996  0110AC  C170  F12E         	movff	?_fround+1,___fladd@a+1
 13997  0110B0  C171  F12F         	movff	?_fround+2,___fladd@a+2
 13998  0110B4  C172  F130         	movff	?_fround+3,___fladd@a+3
 13999  0110B8  EC23  F09F         	call	___fladd	;wreg free
 14000  0110BC  C129  F1A3         	movff	?___fladd,printf@fval
 14001  0110C0  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 14002  0110C4  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 14003  0110C8  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 14004  0110CC                     l1388:
 14005  0110CC                     l11838:
 14006                           
 14007                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14008  0110CC  0101               	movlb	1	; () banked
 14009  0110CE  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14010  0110D0  D006               	goto	u14140
 14011  0110D2  519A               	movf	(printf@exp+1)& (0+255),w,b
 14012  0110D4  E122               	bnz	l11846
 14013  0110D6  0E0A               	movlw	10
 14014  0110D8  5D99               	subwf	printf@exp& (0+255),w,b
 14015  0110DA  B0D8               	btfsc	status,0,c
 14016  0110DC  D01E               	goto	u14170
 14017  0110DE                     u14140:
 14018                           
 14019                           ; BSR set to: 1
 14020  0110DE  51A3               	movf	printf@fval& (0+255),w,b
 14021  0110E0  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 14022  0110E2  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 14023  0110E4  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 14024  0110E6  B4D8               	btfsc	status,2,c
 14025  0110E8  D062               	goto	l1389
 14026                           
 14027                           ; BSR set to: 1
 14028  0110EA  C1A3  F16F         	movff	printf@fval,___fltol@f1
 14029  0110EE  C1A4  F170         	movff	printf@fval+1,___fltol@f1+1
 14030  0110F2  C1A5  F171         	movff	printf@fval+2,___fltol@f1+2
 14031  0110F6  C1A6  F172         	movff	printf@fval+3,___fltol@f1+3
 14032  0110FA  ECD9  F0B4         	call	___fltol	;wreg free
 14033  0110FE  0101               	movlb	1	; () banked
 14034  011100  516F               	movf	?___fltol& (0+255),w,b
 14035  011102  1170               	iorwf	(?___fltol+1)& (0+255),w,b
 14036  011104  1171               	iorwf	(?___fltol+2)& (0+255),w,b
 14037  011106  1172               	iorwf	(?___fltol+3)& (0+255),w,b
 14038  011108  B4D8               	btfsc	status,2,c
 14039                           
 14040                           ; BSR set to: 1
 14041  01110A  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14042  01110C  D050               	goto	l1389
 14043  01110E  519A               	movf	(printf@exp+1)& (0+255),w,b
 14044  011110  E104               	bnz	l11846
 14045  011112  0E02               	movlw	2
 14046  011114  5D99               	subwf	printf@exp& (0+255),w,b
 14047  011116  A0D8               	btfss	status,0,c
 14048  011118  D04A               	goto	l1389
 14049  01111A                     u14170:
 14050  01111A                     l11846:
 14051                           
 14052                           ; BSR set to: 1
 14053                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14054  01111A  C19B  F117         	movff	printf@tmpval,___flge@ff1
 14055  01111E  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14056  011122  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14057  011126  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14058  01112A  0E5F               	movlw	95
 14059  01112C  6F1B               	movwf	___flge@ff2& (0+255),b
 14060  01112E  0E70               	movlw	112
 14061  011130  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14062  011132  0E89               	movlw	137
 14063  011134  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14064  011136  0E40               	movlw	64
 14065  011138  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14066  01113A  EC21  F0B2         	call	___flge	;wreg free
 14067  01113E  0101               	movlb	1	; () banked
 14068  011140  B0D8               	btfsc	status,0,c
 14069  011142  D002               	goto	l1392
 14070                           
 14071                           ; BSR set to: 1
 14072                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14073  011144  0EF7               	movlw	247
 14074  011146  D001               	goto	L3
 14075  011148                     l1392:
 14076                           
 14077                           ; BSR set to: 1
 14078                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14079                           
 14080                           ; BSR set to: 1
 14081  011148  0EF8               	movlw	248
 14082  01114A                     L3:
 14083  01114A  2799               	addwf	printf@exp& (0+255),f,b
 14084  01114C  0EFF               	movlw	255
 14085  01114E  239A               	addwfc	(printf@exp+1)& (0+255),f,b
 14086                           
 14087                           ; BSR set to: 1
 14088                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14089                           
 14090                           ; BSR set to: 1
 14091  011150  5199               	movf	printf@exp& (0+255),w,b
 14092  011152  EC8C  F095         	call	_scale
 14093  011156  C16F  F19B         	movff	?_scale,printf@tmpval
 14094  01115A  C170  F19C         	movff	?_scale+1,printf@tmpval+1
 14095  01115E  C171  F19D         	movff	?_scale+2,printf@tmpval+2
 14096  011162  C172  F19E         	movff	?_scale+3,printf@tmpval+3
 14097  011166  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 14098  01116A  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 14099  01116E  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 14100  011172  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 14101  011176  C19B  F11B         	movff	printf@tmpval,__div_to_l_@f2
 14102  01117A  C19C  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 14103  01117E  C19D  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 14104  011182  C19E  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 14105  011186  ECF8  F0B0         	call	__div_to_l_	;wreg free
 14106  01118A  C117  F19F         	movff	?__div_to_l_,printf@val
 14107  01118E  C118  F1A0         	movff	?__div_to_l_+1,printf@val+1
 14108  011192  C119  F1A1         	movff	?__div_to_l_+2,printf@val+2
 14109  011196  C11A  F1A2         	movff	?__div_to_l_+3,printf@val+3
 14110                           
 14111                           ;doprnt.c: 1129: fval = 0.0;
 14112  01119A  0E00               	movlw	0
 14113  01119C  0101               	movlb	1	; () banked
 14114  01119E  6FA3               	movwf	printf@fval& (0+255),b
 14115  0111A0  0E00               	movlw	0
 14116  0111A2  6FA4               	movwf	(printf@fval+1)& (0+255),b
 14117  0111A4  0E00               	movlw	0
 14118  0111A6  6FA5               	movwf	(printf@fval+2)& (0+255),b
 14119  0111A8  0E00               	movlw	0
 14120  0111AA  6FA6               	movwf	(printf@fval+3)& (0+255),b
 14121                           
 14122                           ;doprnt.c: 1130: } else {
 14123  0111AC  D03C               	goto	l1398
 14124  0111AE                     l1389:
 14125                           
 14126                           ; BSR set to: 1
 14127                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14128                           
 14129                           ; BSR set to: 1
 14130  0111AE  C1A3  F16F         	movff	printf@fval,___fltol@f1
 14131  0111B2  C1A4  F170         	movff	printf@fval+1,___fltol@f1+1
 14132  0111B6  C1A5  F171         	movff	printf@fval+2,___fltol@f1+2
 14133  0111BA  C1A6  F172         	movff	printf@fval+3,___fltol@f1+3
 14134  0111BE  ECD9  F0B4         	call	___fltol	;wreg free
 14135  0111C2  C16F  F19F         	movff	?___fltol,printf@val
 14136  0111C6  C170  F1A0         	movff	?___fltol+1,printf@val+1
 14137  0111CA  C171  F1A1         	movff	?___fltol+2,printf@val+2
 14138  0111CE  C172  F1A2         	movff	?___fltol+3,printf@val+3
 14139                           
 14140                           ;doprnt.c: 1132: fval -= (double)val;
 14141  0111D2  C1A3  F13D         	movff	printf@fval,___flsub@b
 14142  0111D6  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 14143  0111DA  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 14144  0111DE  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 14145  0111E2  C19F  F117         	movff	printf@val,___xxtofl@val
 14146  0111E6  C1A0  F118         	movff	printf@val+1,___xxtofl@val+1
 14147  0111EA  C1A1  F119         	movff	printf@val+2,___xxtofl@val+2
 14148  0111EE  C1A2  F11A         	movff	printf@val+3,___xxtofl@val+3
 14149  0111F2  0E00               	movlw	0
 14150  0111F4  EC73  F0AE         	call	___xxtofl
 14151  0111F8  C117  F141         	movff	?___xxtofl,___flsub@a
 14152  0111FC  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 14153  011200  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 14154  011204  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 14155  011208  EC5D  F0BD         	call	___flsub	;wreg free
 14156  01120C  C13D  F1A3         	movff	?___flsub,printf@fval
 14157  011210  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 14158  011214  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 14159  011218  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 14160                           
 14161                           ;doprnt.c: 1133: exp = 0;
 14162  01121C  0E00               	movlw	0
 14163  01121E  0101               	movlb	1	; () banked
 14164  011220  6F9A               	movwf	(printf@exp+1)& (0+255),b
 14165  011222  0E00               	movlw	0
 14166  011224  6F99               	movwf	printf@exp& (0+255),b
 14167  011226                     l1398:
 14168                           
 14169                           ; BSR set to: 1
 14170                           ;doprnt.c: 1134: }
 14171                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14172                           
 14173                           ; BSR set to: 1
 14174  011226  0E01               	movlw	1
 14175  011228  6FA9               	movwf	printf@c& (0+255),b
 14176  01122A                     l11866:
 14177                           
 14178                           ; BSR set to: 1
 14179  01122A  0E0A               	movlw	10
 14180  01122C  19A9               	xorwf	printf@c& (0+255),w,b
 14181  01122E  B4D8               	btfsc	status,2,c
 14182  011230  D01B               	goto	u14210
 14183                           
 14184                           ; BSR set to: 1
 14185                           ;doprnt.c: 1137: if(val < dpowers[c])
 14186                           
 14187                           ; BSR set to: 1
 14188                           
 14189                           ; BSR set to: 1
 14190  011232  51A9               	movf	printf@c& (0+255),w,b
 14191  011234  0D04               	mullw	4
 14192  011236  0E21               	movlw	low _dpowers
 14193  011238  24F3               	addwf	prodl,w,c
 14194  01123A  6EF6               	movwf	tblptrl,c
 14195  01123C  0EEC               	movlw	high _dpowers
 14196  01123E  20F4               	addwfc	prodh,w,c
 14197  011240  6EF7               	movwf	tblptrh,c
 14198  011242                     	if	1	;There are 3 active tblptr bytes
 14199  011242  6AF8               	clrf	tblptru,c
 14200  011244  0E00               	movlw	low (__mediumconst shr (0+16))
 14201  011246  22F8               	addwfc	tblptru,f,c
 14202  011248                     	endif
 14203  011248  0009               	tblrd		*+
 14204  01124A  50F5               	movf	tablat,w,c
 14205  01124C  5D9F               	subwf	printf@val& (0+255),w,b
 14206  01124E  0009               	tblrd		*+
 14207  011250  50F5               	movf	tablat,w,c
 14208  011252  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14209  011254  0009               	tblrd		*+
 14210  011256  50F5               	movf	tablat,w,c
 14211  011258  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14212  01125A  0009               	tblrd		*+
 14213  01125C  50F5               	movf	tablat,w,c
 14214  01125E  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14215  011260  A0D8               	btfss	status,0,c
 14216  011262  D002               	goto	u14210
 14217                           
 14218                           ; BSR set to: 1
 14219                           
 14220                           ; BSR set to: 1
 14221                           
 14222                           ; BSR set to: 1
 14223                           ;doprnt.c: 1138: break;
 14224  011264  2BA9               	incf	printf@c& (0+255),f,b
 14225  011266  D7E1               	goto	l11866
 14226  011268                     u14210:
 14227                           
 14228                           ; BSR set to: 1
 14229                           ;doprnt.c: 1175: {
 14230                           ;doprnt.c: 1188: if(flag & 0x03)
 14231                           
 14232                           ; BSR set to: 1
 14233  011268  0E03               	movlw	3
 14234  01126A  1597               	andwf	printf@flag& (0+255),w,b
 14235  01126C  6F86               	movwf	??_printf& (0+255),b
 14236  01126E  0E00               	movlw	0
 14237  011270  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14238  011272  6F87               	movwf	(??_printf+1)& (0+255),b
 14239  011274  5186               	movf	??_printf& (0+255),w,b
 14240  011276  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14241  011278  B4D8               	btfsc	status,2,c
 14242  01127A  D04E               	goto	l1403
 14243                           
 14244                           ; BSR set to: 1
 14245                           ;doprnt.c: 1190: (putch('-') );
 14246  01127C  0E2D               	movlw	45
 14247  01127E  EC6C  F0C0         	call	_putch
 14248                           
 14249                           ;doprnt.c: 1195: }
 14250                           ;doprnt.c: 1196: while(c--) {
 14251  011282  D04A               	goto	l1403
 14252  011284                     
 14253                           ;doprnt.c: 1200: {
 14254                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14255  011284  C19F  F117         	movff	printf@val,___lldiv@dividend
 14256  011288  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14257  01128C  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14258  011290  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14259  011294  0101               	movlb	1	; () banked
 14260  011296  51A9               	movf	printf@c& (0+255),w,b
 14261  011298  0D04               	mullw	4
 14262  01129A  0E21               	movlw	low _dpowers
 14263  01129C  24F3               	addwf	prodl,w,c
 14264  01129E  6EF6               	movwf	tblptrl,c
 14265  0112A0  0EEC               	movlw	high _dpowers
 14266  0112A2  20F4               	addwfc	prodh,w,c
 14267  0112A4  6EF7               	movwf	tblptrh,c
 14268  0112A6                     	if	1	;There are 3 active tblptr bytes
 14269  0112A6  6AF8               	clrf	tblptru,c
 14270  0112A8  0E00               	movlw	low (__mediumconst shr (0+16))
 14271  0112AA  22F8               	addwfc	tblptru,f,c
 14272  0112AC                     	endif
 14273  0112AC  0009               	tblrd		*+
 14274  0112AE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14275  0112B2  0009               	tblrd		*+
 14276  0112B4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14277  0112B8  0009               	tblrd		*+
 14278  0112BA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14279  0112BE  000A               	tblrd		*-
 14280  0112C0  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14281  0112C4  EC62  F0B8         	call	___lldiv	;wreg free
 14282  0112C8  C117  F19B         	movff	?___lldiv,printf@tmpval
 14283  0112CC  C118  F19C         	movff	?___lldiv+1,printf@tmpval+1
 14284  0112D0  C119  F19D         	movff	?___lldiv+2,printf@tmpval+2
 14285  0112D4  C11A  F19E         	movff	?___lldiv+3,printf@tmpval+3
 14286                           
 14287                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14288  0112D8  C19B  F124         	movff	printf@tmpval,___llmod@dividend
 14289  0112DC  C19C  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14290  0112E0  C19D  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14291  0112E4  C19E  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14292  0112E8  0E0A               	movlw	10
 14293  0112EA  0101               	movlb	1	; () banked
 14294  0112EC  6F28               	movwf	___llmod@divisor& (0+255),b
 14295  0112EE  0E00               	movlw	0
 14296  0112F0  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14297  0112F2  0E00               	movlw	0
 14298  0112F4  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14299  0112F6  0E00               	movlw	0
 14300  0112F8  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14301  0112FA  EC33  F0BB         	call	___llmod	;wreg free
 14302  0112FE  C124  F19B         	movff	?___llmod,printf@tmpval
 14303  011302  C125  F19C         	movff	?___llmod+1,printf@tmpval+1
 14304  011306  C126  F19D         	movff	?___llmod+2,printf@tmpval+2
 14305  01130A  C127  F19E         	movff	?___llmod+3,printf@tmpval+3
 14306                           
 14307                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14308  01130E  0101               	movlb	1	; () banked
 14309  011310  519B               	movf	printf@tmpval& (0+255),w,b
 14310  011312  0F30               	addlw	48
 14311  011314  EC6C  F0C0         	call	_putch
 14312  011318                     l1403:
 14313  011318  0101               	movlb	1	; () banked
 14314  01131A  07A9               	decf	printf@c& (0+255),f,b
 14315  01131C  29A9               	incf	printf@c& (0+255),w,b
 14316  01131E  B4D8               	btfsc	status,2,c
 14317  011320  D008               	goto	l1406
 14318  011322  D7B0               	goto	l1404
 14319  011324                     l11890:
 14320                           
 14321                           ; BSR set to: 1
 14322                           ;doprnt.c: 1208: (putch('0') );
 14323  011324  0E30               	movlw	48
 14324  011326  EC6C  F0C0         	call	_putch
 14325                           
 14326                           ;doprnt.c: 1209: exp--;
 14327  01132A  0101               	movlb	1	; () banked
 14328  01132C  0799               	decf	printf@exp& (0+255),f,b
 14329  01132E  A0D8               	btfss	status,0,c
 14330  011330  079A               	decf	(printf@exp+1)& (0+255),f,b
 14331  011332                     l1406:
 14332                           
 14333                           ; BSR set to: 1
 14334                           
 14335                           ; BSR set to: 1
 14336  011332  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14337  011334  D005               	goto	u14240
 14338  011336  519A               	movf	(printf@exp+1)& (0+255),w,b
 14339  011338  E1F5               	bnz	l11890
 14340  01133A  0599               	decf	printf@exp& (0+255),w,b
 14341  01133C  B0D8               	btfsc	status,0,c
 14342  01133E  D7F2               	goto	l1407
 14343  011340                     u14240:
 14344                           
 14345                           ; BSR set to: 1
 14346                           ;doprnt.c: 1210: }
 14347                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14348                           
 14349                           ; BSR set to: 1
 14350  011340  BFA8               	btfsc	(printf@prec+1)& (0+255),7,b
 14351  011342  D009               	goto	l1409
 14352  011344  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14353  011346  E104               	bnz	u14250
 14354  011348  0E09               	movlw	9
 14355  01134A  5DA7               	subwf	printf@prec& (0+255),w,b
 14356  01134C  A0D8               	btfss	status,0,c
 14357  01134E  D003               	goto	l1409
 14358  011350                     u14250:
 14359                           
 14360                           ; BSR set to: 1
 14361                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14362  011350  0E08               	movlw	8
 14363  011352  6FA9               	movwf	printf@c& (0+255),b
 14364  011354  D002               	goto	l1410
 14365  011356                     l1409:
 14366                           
 14367                           ; BSR set to: 1
 14368                           ;doprnt.c: 1213: else
 14369                           ;doprnt.c: 1214: c = prec;
 14370  011356  C1A7  F1A9         	movff	printf@prec,printf@c
 14371  01135A                     l1410:
 14372                           
 14373                           ; BSR set to: 1
 14374                           ;doprnt.c: 1215: prec -= c;
 14375                           
 14376                           ; BSR set to: 1
 14377  01135A  51A9               	movf	printf@c& (0+255),w,b
 14378  01135C  5FA7               	subwf	printf@prec& (0+255),f,b
 14379  01135E  0E00               	movlw	0
 14380  011360  BFA9               	btfsc	printf@c& (0+255),7,b
 14381  011362  0EFF               	movlw	255
 14382  011364  5BA8               	subwfb	(printf@prec+1)& (0+255),f,b
 14383                           
 14384                           ; BSR set to: 1
 14385                           ;doprnt.c: 1219: if(c)
 14386  011366  51A9               	movf	printf@c& (0+255),w,b
 14387  011368  B4D8               	btfsc	status,2,c
 14388  01136A  D003               	goto	l1411
 14389                           
 14390                           ; BSR set to: 1
 14391                           ;doprnt.c: 1221: (putch('.') );
 14392  01136C  0E2E               	movlw	46
 14393  01136E  EC6C  F0C0         	call	_putch
 14394  011372                     l1411:
 14395                           
 14396                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14397  011372  0101               	movlb	1	; () banked
 14398  011374  51A9               	movf	printf@c& (0+255),w,b
 14399  011376  EC8C  F095         	call	_scale
 14400  01137A  C16F  F18C         	movff	?_scale,_printf$3861
 14401  01137E  C170  F18D         	movff	?_scale+1,_printf$3861+1
 14402  011382  C171  F18E         	movff	?_scale+2,_printf$3861+2
 14403  011386  C172  F18F         	movff	?_scale+3,_printf$3861+3
 14404                           
 14405                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14406  01138A  C1A3  F15A         	movff	printf@fval,___flmul@a
 14407  01138E  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 14408  011392  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 14409  011396  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 14410  01139A  C18C  F156         	movff	_printf$3861,___flmul@b
 14411  01139E  C18D  F157         	movff	_printf$3861+1,___flmul@b+1
 14412  0113A2  C18E  F158         	movff	_printf$3861+2,___flmul@b+2
 14413  0113A6  C18F  F159         	movff	_printf$3861+3,___flmul@b+3
 14414  0113AA  ECD2  F09B         	call	___flmul	;wreg free
 14415  0113AE  C156  F16F         	movff	?___flmul,___fltol@f1
 14416  0113B2  C157  F170         	movff	?___flmul+1,___fltol@f1+1
 14417  0113B6  C158  F171         	movff	?___flmul+2,___fltol@f1+2
 14418  0113BA  C159  F172         	movff	?___flmul+3,___fltol@f1+3
 14419  0113BE  ECD9  F0B4         	call	___fltol	;wreg free
 14420  0113C2  C16F  F19F         	movff	?___fltol,printf@val
 14421  0113C6  C170  F1A0         	movff	?___fltol+1,printf@val+1
 14422  0113CA  C171  F1A1         	movff	?___fltol+2,printf@val+2
 14423  0113CE  C172  F1A2         	movff	?___fltol+3,printf@val+3
 14424                           
 14425                           ;doprnt.c: 1228: while(c--) {
 14426  0113D2  D074               	goto	l1412
 14427  0113D4                     
 14428                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14429  0113D4  C19F  F117         	movff	printf@val,___lldiv@dividend
 14430  0113D8  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14431  0113DC  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14432  0113E0  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14433  0113E4  0101               	movlb	1	; () banked
 14434  0113E6  51A9               	movf	printf@c& (0+255),w,b
 14435  0113E8  0D04               	mullw	4
 14436  0113EA  0E21               	movlw	low _dpowers
 14437  0113EC  24F3               	addwf	prodl,w,c
 14438  0113EE  6EF6               	movwf	tblptrl,c
 14439  0113F0  0EEC               	movlw	high _dpowers
 14440  0113F2  20F4               	addwfc	prodh,w,c
 14441  0113F4  6EF7               	movwf	tblptrh,c
 14442  0113F6                     	if	1	;There are 3 active tblptr bytes
 14443  0113F6  6AF8               	clrf	tblptru,c
 14444  0113F8  0E00               	movlw	low (__mediumconst shr (0+16))
 14445  0113FA  22F8               	addwfc	tblptru,f,c
 14446  0113FC                     	endif
 14447  0113FC  0009               	tblrd		*+
 14448  0113FE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14449  011402  0009               	tblrd		*+
 14450  011404  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14451  011408  0009               	tblrd		*+
 14452  01140A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14453  01140E  000A               	tblrd		*-
 14454  011410  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14455  011414  EC62  F0B8         	call	___lldiv	;wreg free
 14456  011418  C117  F19B         	movff	?___lldiv,printf@tmpval
 14457  01141C  C118  F19C         	movff	?___lldiv+1,printf@tmpval+1
 14458  011420  C119  F19D         	movff	?___lldiv+2,printf@tmpval+2
 14459  011424  C11A  F19E         	movff	?___lldiv+3,printf@tmpval+3
 14460                           
 14461                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14462  011428  C19B  F124         	movff	printf@tmpval,___llmod@dividend
 14463  01142C  C19C  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14464  011430  C19D  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14465  011434  C19E  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14466  011438  0E0A               	movlw	10
 14467  01143A  0101               	movlb	1	; () banked
 14468  01143C  6F28               	movwf	___llmod@divisor& (0+255),b
 14469  01143E  0E00               	movlw	0
 14470  011440  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14471  011442  0E00               	movlw	0
 14472  011444  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14473  011446  0E00               	movlw	0
 14474  011448  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14475  01144A  EC33  F0BB         	call	___llmod	;wreg free
 14476  01144E  C124  F19B         	movff	?___llmod,printf@tmpval
 14477  011452  C125  F19C         	movff	?___llmod+1,printf@tmpval+1
 14478  011456  C126  F19D         	movff	?___llmod+2,printf@tmpval+2
 14479  01145A  C127  F19E         	movff	?___llmod+3,printf@tmpval+3
 14480                           
 14481                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 14482  01145E  0101               	movlb	1	; () banked
 14483  011460  519B               	movf	printf@tmpval& (0+255),w,b
 14484  011462  0F30               	addlw	48
 14485  011464  EC6C  F0C0         	call	_putch
 14486                           
 14487                           ;doprnt.c: 1232: val %= dpowers[c];
 14488  011468  C19F  F124         	movff	printf@val,___llmod@dividend
 14489  01146C  C1A0  F125         	movff	printf@val+1,___llmod@dividend+1
 14490  011470  C1A1  F126         	movff	printf@val+2,___llmod@dividend+2
 14491  011474  C1A2  F127         	movff	printf@val+3,___llmod@dividend+3
 14492  011478  0101               	movlb	1	; () banked
 14493  01147A  51A9               	movf	printf@c& (0+255),w,b
 14494  01147C  0D04               	mullw	4
 14495  01147E  0E21               	movlw	low _dpowers
 14496  011480  24F3               	addwf	prodl,w,c
 14497  011482  6EF6               	movwf	tblptrl,c
 14498  011484  0EEC               	movlw	high _dpowers
 14499  011486  20F4               	addwfc	prodh,w,c
 14500  011488  6EF7               	movwf	tblptrh,c
 14501  01148A                     	if	1	;There are 3 active tblptr bytes
 14502  01148A  6AF8               	clrf	tblptru,c
 14503  01148C  0E00               	movlw	low (__mediumconst shr (0+16))
 14504  01148E  22F8               	addwfc	tblptru,f,c
 14505  011490                     	endif
 14506  011490  0009               	tblrd		*+
 14507  011492  CFF5 F128          	movff	tablat,___llmod@divisor
 14508  011496  0009               	tblrd		*+
 14509  011498  CFF5 F129          	movff	tablat,___llmod@divisor+1
 14510  01149C  0009               	tblrd		*+
 14511  01149E  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 14512  0114A2  000A               	tblrd		*-
 14513  0114A4  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 14514  0114A8  EC33  F0BB         	call	___llmod	;wreg free
 14515  0114AC  C124  F19F         	movff	?___llmod,printf@val
 14516  0114B0  C125  F1A0         	movff	?___llmod+1,printf@val+1
 14517  0114B4  C126  F1A1         	movff	?___llmod+2,printf@val+2
 14518  0114B8  C127  F1A2         	movff	?___llmod+3,printf@val+3
 14519  0114BC                     l1412:
 14520  0114BC  0101               	movlb	1	; () banked
 14521  0114BE  07A9               	decf	printf@c& (0+255),f,b
 14522  0114C0  29A9               	incf	printf@c& (0+255),w,b
 14523  0114C2  B4D8               	btfsc	status,2,c
 14524  0114C4  D008               	goto	l1415
 14525  0114C6  D786               	goto	l1413
 14526  0114C8                     
 14527                           ; BSR set to: 1
 14528                           ;doprnt.c: 1236: (putch('0') );
 14529                           
 14530                           ; BSR set to: 1
 14531  0114C8  0E30               	movlw	48
 14532  0114CA  EC6C  F0C0         	call	_putch
 14533                           
 14534                           ;doprnt.c: 1237: prec--;
 14535  0114CE  0101               	movlb	1	; () banked
 14536  0114D0  07A7               	decf	printf@prec& (0+255),f,b
 14537  0114D2  A0D8               	btfss	status,0,c
 14538  0114D4  07A8               	decf	(printf@prec+1)& (0+255),f,b
 14539  0114D6                     l1415:
 14540                           
 14541                           ; BSR set to: 1
 14542                           
 14543                           ; BSR set to: 1
 14544  0114D6  51A7               	movf	printf@prec& (0+255),w,b
 14545  0114D8  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 14546  0114DA  B4D8               	btfsc	status,2,c
 14547  0114DC  D157               	goto	u14420
 14548  0114DE  D7F4               	goto	l1416
 14549  0114E0                     l1380:
 14550                           
 14551                           ; BSR set to: 1
 14552                           ;doprnt.c: 1246: }
 14553                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 14554                           
 14555                           ; BSR set to: 1
 14556  0114E0  0EC0               	movlw	192
 14557  0114E2  1597               	andwf	printf@flag& (0+255),w,b
 14558  0114E4  6F86               	movwf	??_printf& (0+255),b
 14559  0114E6  0E00               	movlw	0
 14560  0114E8  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14561  0114EA  6F87               	movwf	(??_printf+1)& (0+255),b
 14562  0114EC  5186               	movf	??_printf& (0+255),w,b
 14563  0114EE  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14564  0114F0  A4D8               	btfss	status,2,c
 14565  0114F2  D01E               	goto	l1418
 14566                           
 14567                           ; BSR set to: 1
 14568                           ;doprnt.c: 1253: {
 14569                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14570  0114F4  C195  FFD9         	movff	printf@ap,fsr2l
 14571  0114F8  C196  FFDA         	movff	printf@ap+1,fsr2h
 14572  0114FC  CFDE F19F          	movff	postinc2,printf@val
 14573  011500  CFDD F1A0          	movff	postdec2,printf@val+1
 14574  011504  0E00               	movlw	0
 14575  011506  BFA0               	btfsc	(printf@val+1)& (0+255),7,b
 14576  011508  0EFF               	movlw	-1
 14577  01150A  6FA1               	movwf	(printf@val+2)& (0+255),b
 14578  01150C  6FA2               	movwf	(printf@val+3)& (0+255),b
 14579                           
 14580                           ; BSR set to: 1
 14581  01150E  0E02               	movlw	2
 14582  011510  2795               	addwf	printf@ap& (0+255),f,b
 14583  011512  0E00               	movlw	0
 14584  011514  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14585                           
 14586                           ; BSR set to: 1
 14587                           ;doprnt.c: 1261: if((long)val < 0) {
 14588  011516  AFA2               	btfss	(printf@val+3)& (0+255),7,b
 14589  011518  D01D               	goto	l1420
 14590                           
 14591                           ; BSR set to: 1
 14592                           ;doprnt.c: 1262: flag |= 0x03;
 14593  01151A  0E03               	movlw	3
 14594  01151C  1397               	iorwf	printf@flag& (0+255),f,b
 14595                           
 14596                           ; BSR set to: 1
 14597                           ;doprnt.c: 1263: val = -val;
 14598  01151E  1FA2               	comf	(printf@val+3)& (0+255),f,b
 14599  011520  1FA1               	comf	(printf@val+2)& (0+255),f,b
 14600  011522  1FA0               	comf	(printf@val+1)& (0+255),f,b
 14601  011524  6D9F               	negf	printf@val& (0+255),b
 14602  011526  0E00               	movlw	0
 14603  011528  23A0               	addwfc	(printf@val+1)& (0+255),f,b
 14604  01152A  23A1               	addwfc	(printf@val+2)& (0+255),f,b
 14605  01152C  23A2               	addwfc	(printf@val+3)& (0+255),f,b
 14606                           
 14607                           ; BSR set to: 1
 14608                           ;doprnt.c: 1264: }
 14609                           ;doprnt.c: 1266: }
 14610  01152E  D012               	goto	l1420
 14611  011530                     l1418:
 14612                           
 14613                           ; BSR set to: 1
 14614                           ;doprnt.c: 1268: else
 14615                           ;doprnt.c: 1273: {
 14616                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 14617                           
 14618                           ; BSR set to: 1
 14619  011530  C195  FFD9         	movff	printf@ap,fsr2l
 14620  011534  C196  FFDA         	movff	printf@ap+1,fsr2h
 14621  011538  CFDE F186          	movff	postinc2,??_printf
 14622  01153C  CFDD F187          	movff	postdec2,??_printf+1
 14623  011540  C186  F19F         	movff	??_printf,printf@val
 14624  011544  C187  F1A0         	movff	??_printf+1,printf@val+1
 14625  011548  6BA1               	clrf	(printf@val+2)& (0+255),b
 14626  01154A  6BA2               	clrf	(printf@val+3)& (0+255),b
 14627                           
 14628                           ; BSR set to: 1
 14629  01154C  0E02               	movlw	2
 14630  01154E  2795               	addwf	printf@ap& (0+255),f,b
 14631  011550  0E00               	movlw	0
 14632  011552  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14633  011554                     l1420:
 14634                           
 14635                           ; BSR set to: 1
 14636                           ;doprnt.c: 1287: }
 14637                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14638                           
 14639                           ; BSR set to: 1
 14640  011554  51A7               	movf	printf@prec& (0+255),w,b
 14641  011556  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 14642  011558  A4D8               	btfss	status,2,c
 14643  01155A  D04B               	goto	l1422
 14644                           
 14645                           ; BSR set to: 1
 14646  01155C  519F               	movf	printf@val& (0+255),w,b
 14647  01155E  11A0               	iorwf	(printf@val+1)& (0+255),w,b
 14648  011560  11A1               	iorwf	(printf@val+2)& (0+255),w,b
 14649  011562  11A2               	iorwf	(printf@val+3)& (0+255),w,b
 14650  011564  A4D8               	btfss	status,2,c
 14651  011566  D045               	goto	l1422
 14652                           
 14653                           ; BSR set to: 1
 14654                           ;doprnt.c: 1291: prec++;
 14655  011568  4BA7               	infsnz	printf@prec& (0+255),f,b
 14656  01156A  2BA8               	incf	(printf@prec+1)& (0+255),f,b
 14657                           
 14658                           ; BSR set to: 1
 14659                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 14660  01156C  D042               	goto	l1422
 14661  01156E                     
 14662                           ; BSR set to: 1
 14663                           ;doprnt.c: 1302: case 0xC0:
 14664                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14665                           
 14666                           ; BSR set to: 1
 14667                           
 14668                           ; BSR set to: 1
 14669  01156E  0E01               	movlw	1
 14670  011570  6FA9               	movwf	printf@c& (0+255),b
 14671  011572                     l11950:
 14672                           
 14673                           ; BSR set to: 1
 14674  011572  0E0A               	movlw	10
 14675  011574  19A9               	xorwf	printf@c& (0+255),w,b
 14676  011576  B4D8               	btfsc	status,2,c
 14677  011578  D047               	goto	l1428
 14678                           
 14679                           ; BSR set to: 1
 14680                           ;doprnt.c: 1306: if(val < dpowers[c])
 14681                           
 14682                           ; BSR set to: 1
 14683                           
 14684                           ; BSR set to: 1
 14685  01157A  51A9               	movf	printf@c& (0+255),w,b
 14686  01157C  0D04               	mullw	4
 14687  01157E  0E21               	movlw	low _dpowers
 14688  011580  24F3               	addwf	prodl,w,c
 14689  011582  6EF6               	movwf	tblptrl,c
 14690  011584  0EEC               	movlw	high _dpowers
 14691  011586  20F4               	addwfc	prodh,w,c
 14692  011588  6EF7               	movwf	tblptrh,c
 14693  01158A                     	if	1	;There are 3 active tblptr bytes
 14694  01158A  6AF8               	clrf	tblptru,c
 14695  01158C  0E00               	movlw	low (__mediumconst shr (0+16))
 14696  01158E  22F8               	addwfc	tblptru,f,c
 14697  011590                     	endif
 14698  011590  0009               	tblrd		*+
 14699  011592  50F5               	movf	tablat,w,c
 14700  011594  5D9F               	subwf	printf@val& (0+255),w,b
 14701  011596  0009               	tblrd		*+
 14702  011598  50F5               	movf	tablat,w,c
 14703  01159A  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14704  01159C  0009               	tblrd		*+
 14705  01159E  50F5               	movf	tablat,w,c
 14706  0115A0  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14707  0115A2  0009               	tblrd		*+
 14708  0115A4  50F5               	movf	tablat,w,c
 14709  0115A6  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14710  0115A8  A0D8               	btfss	status,0,c
 14711  0115AA  D02E               	goto	l1428
 14712                           
 14713                           ; BSR set to: 1
 14714                           
 14715                           ; BSR set to: 1
 14716                           
 14717                           ; BSR set to: 1
 14718                           ;doprnt.c: 1307: break;
 14719  0115AC  2BA9               	incf	printf@c& (0+255),f,b
 14720  0115AE  D7E1               	goto	l11950
 14721  0115B0                     
 14722                           ; BSR set to: 1
 14723                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14724                           
 14725                           ; BSR set to: 1
 14726  0115B0  0E01               	movlw	1
 14727  0115B2  6FA9               	movwf	printf@c& (0+255),b
 14728  0115B4                     l11964:
 14729                           
 14730                           ; BSR set to: 1
 14731  0115B4  0E08               	movlw	8
 14732  0115B6  19A9               	xorwf	printf@c& (0+255),w,b
 14733  0115B8  B4D8               	btfsc	status,2,c
 14734  0115BA  D026               	goto	l1428
 14735                           
 14736                           ; BSR set to: 1
 14737                           ;doprnt.c: 1317: if(val < hexpowers[c])
 14738                           
 14739                           ; BSR set to: 1
 14740                           
 14741                           ; BSR set to: 1
 14742  0115BC  51A9               	movf	printf@c& (0+255),w,b
 14743  0115BE  0D04               	mullw	4
 14744  0115C0  0E49               	movlw	low _hexpowers
 14745  0115C2  24F3               	addwf	prodl,w,c
 14746  0115C4  6EF6               	movwf	tblptrl,c
 14747  0115C6  0EEC               	movlw	high _hexpowers
 14748  0115C8  20F4               	addwfc	prodh,w,c
 14749  0115CA  6EF7               	movwf	tblptrh,c
 14750  0115CC                     	if	1	;There are 3 active tblptr bytes
 14751  0115CC  6AF8               	clrf	tblptru,c
 14752  0115CE  0E00               	movlw	low (__mediumconst shr (0+16))
 14753  0115D0  22F8               	addwfc	tblptru,f,c
 14754  0115D2                     	endif
 14755  0115D2  0009               	tblrd		*+
 14756  0115D4  50F5               	movf	tablat,w,c
 14757  0115D6  5D9F               	subwf	printf@val& (0+255),w,b
 14758  0115D8  0009               	tblrd		*+
 14759  0115DA  50F5               	movf	tablat,w,c
 14760  0115DC  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14761  0115DE  0009               	tblrd		*+
 14762  0115E0  50F5               	movf	tablat,w,c
 14763  0115E2  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14764  0115E4  0009               	tblrd		*+
 14765  0115E6  50F5               	movf	tablat,w,c
 14766  0115E8  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14767  0115EA  A0D8               	btfss	status,0,c
 14768  0115EC  D00D               	goto	l1428
 14769                           
 14770                           ; BSR set to: 1
 14771                           
 14772                           ; BSR set to: 1
 14773                           
 14774                           ; BSR set to: 1
 14775                           ;doprnt.c: 1318: break;
 14776  0115EE  2BA9               	incf	printf@c& (0+255),f,b
 14777  0115F0  D7E1               	goto	l11964
 14778  0115F2                     l1422:
 14779                           
 14780                           ; BSR set to: 1
 14781                           
 14782                           ; BSR set to: 1
 14783  0115F2  5197               	movf	printf@flag& (0+255),w,b
 14784  0115F4  0BC0               	andlw	192
 14785                           
 14786                           ; Switch size 1, requested type "space"
 14787                           ; Number of cases is 3, Range of values is 0 to 192
 14788                           ; switch strategies available:
 14789                           ; Name         Instructions Cycles
 14790                           ; simple_byte           10     6 (average)
 14791                           ;	Chosen strategy is simple_byte
 14792  0115F6  0A00               	xorlw	0	; case 0
 14793  0115F8  B4D8               	btfsc	status,2,c
 14794  0115FA  D7B9               	goto	l1423
 14795  0115FC  0A80               	xorlw	128	; case 128
 14796  0115FE  B4D8               	btfsc	status,2,c
 14797  011600  D7D7               	goto	l1429
 14798  011602  0A40               	xorlw	64	; case 192
 14799  011604  B4D8               	btfsc	status,2,c
 14800  011606  D7B3               	goto	l1423
 14801  011608                     l1428:
 14802                           
 14803                           ; BSR set to: 1
 14804                           ;doprnt.c: 1339: if(c < prec)
 14805                           
 14806                           ; BSR set to: 1
 14807  011608  0E80               	movlw	128
 14808  01160A  BFA9               	btfsc	printf@c& (0+255),7,b
 14809  01160C  0E7F               	movlw	127
 14810  01160E  6F86               	movwf	??_printf& (0+255),b
 14811  011610  51A7               	movf	printf@prec& (0+255),w,b
 14812  011612  5DA9               	subwf	printf@c& (0+255),w,b
 14813  011614  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14814  011616  0A80               	xorlw	128
 14815  011618  5986               	subwfb	??_printf& (0+255),w,b
 14816  01161A  B0D8               	btfsc	status,0,c
 14817  01161C  D003               	goto	l1433
 14818                           
 14819                           ; BSR set to: 1
 14820                           ;doprnt.c: 1340: c = prec;
 14821  01161E  C1A7  F1A9         	movff	printf@prec,printf@c
 14822  011622  D010               	goto	l1435
 14823  011624                     l1433:
 14824                           
 14825                           ; BSR set to: 1
 14826                           ;doprnt.c: 1341: else if(prec < c)
 14827                           
 14828                           ; BSR set to: 1
 14829  011624  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14830  011626  0A80               	xorlw	128
 14831  011628  6F86               	movwf	??_printf& (0+255),b
 14832  01162A  51A9               	movf	printf@c& (0+255),w,b
 14833  01162C  5DA7               	subwf	printf@prec& (0+255),w,b
 14834  01162E  0E80               	movlw	128
 14835  011630  BFA9               	btfsc	printf@c& (0+255),7,b
 14836  011632  0E7F               	movlw	127
 14837  011634  5986               	subwfb	??_printf& (0+255),w,b
 14838  011636  B0D8               	btfsc	status,0,c
 14839  011638  D005               	goto	l1435
 14840                           
 14841                           ; BSR set to: 1
 14842                           ;doprnt.c: 1342: prec = c;
 14843  01163A  51A9               	movf	printf@c& (0+255),w,b
 14844  01163C  6FA7               	movwf	printf@prec& (0+255),b
 14845  01163E  6BA8               	clrf	(printf@prec+1)& (0+255),b
 14846  011640  BFA7               	btfsc	printf@prec& (0+255),7,b
 14847  011642  07A8               	decf	(printf@prec+1)& (0+255),f,b
 14848  011644                     l1435:
 14849                           
 14850                           ; BSR set to: 1
 14851                           ;doprnt.c: 1422: {
 14852                           ;doprnt.c: 1438: if(flag & 0x03)
 14853                           
 14854                           ; BSR set to: 1
 14855                           
 14856                           ; BSR set to: 1
 14857  011644  0E03               	movlw	3
 14858  011646  1597               	andwf	printf@flag& (0+255),w,b
 14859  011648  6F86               	movwf	??_printf& (0+255),b
 14860  01164A  0E00               	movlw	0
 14861  01164C  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14862  01164E  6F87               	movwf	(??_printf+1)& (0+255),b
 14863  011650  5186               	movf	??_printf& (0+255),w,b
 14864  011652  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14865  011654  B4D8               	btfsc	status,2,c
 14866  011656  D091               	goto	l1437
 14867                           
 14868                           ; BSR set to: 1
 14869                           ;doprnt.c: 1439: (putch('-') );
 14870  011658  0E2D               	movlw	45
 14871  01165A  EC6C  F0C0         	call	_putch
 14872                           
 14873                           ;doprnt.c: 1469: }
 14874                           ;doprnt.c: 1474: while(prec--) {
 14875  01165E  D08D               	goto	l1437
 14876  011660                     
 14877                           ;doprnt.c: 1486: case 0xC0:
 14878                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14879  011660  C1A7  F186         	movff	printf@prec,??_printf
 14880  011664  C1A8  F187         	movff	printf@prec+1,??_printf+1
 14881  011668  0101               	movlb	1	; () banked
 14882  01166A  90D8               	bcf	status,0,c
 14883  01166C  3786               	rlcf	??_printf& (0+255),f,b
 14884  01166E  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14885  011670  90D8               	bcf	status,0,c
 14886  011672  3786               	rlcf	??_printf& (0+255),f,b
 14887  011674  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14888  011676  0E21               	movlw	low _dpowers
 14889  011678  2586               	addwf	??_printf& (0+255),w,b
 14890  01167A  6EF6               	movwf	tblptrl,c
 14891  01167C  0EEC               	movlw	high _dpowers
 14892  01167E  2187               	addwfc	(??_printf+1)& (0+255),w,b
 14893  011680  6EF7               	movwf	tblptrh,c
 14894  011682                     	if	1	;There are 3 active tblptr bytes
 14895  011682  6AF8               	clrf	tblptru,c
 14896  011684  0E00               	movlw	low (__mediumconst shr (0+16))
 14897  011686  22F8               	addwfc	tblptru,f,c
 14898  011688                     	endif
 14899  011688  0009               	tblrd		*+
 14900  01168A  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14901  01168E  0009               	tblrd		*+
 14902  011690  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14903  011694  0009               	tblrd		*+
 14904  011696  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14905  01169A  000A               	tblrd		*-
 14906  01169C  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14907  0116A0  C19F  F117         	movff	printf@val,___lldiv@dividend
 14908  0116A4  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14909  0116A8  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14910  0116AC  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14911  0116B0  EC62  F0B8         	call	___lldiv	;wreg free
 14912  0116B4  C117  F124         	movff	?___lldiv,___llmod@dividend
 14913  0116B8  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 14914  0116BC  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 14915  0116C0  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 14916  0116C4  0E0A               	movlw	10
 14917  0116C6  0101               	movlb	1	; () banked
 14918  0116C8  6F28               	movwf	___llmod@divisor& (0+255),b
 14919  0116CA  0E00               	movlw	0
 14920  0116CC  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14921  0116CE  0E00               	movlw	0
 14922  0116D0  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14923  0116D2  0E00               	movlw	0
 14924  0116D4  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14925  0116D6  EC33  F0BB         	call	___llmod	;wreg free
 14926  0116DA  0101               	movlb	1	; () banked
 14927  0116DC  5124               	movf	?___llmod& (0+255),w,b
 14928  0116DE  0F30               	addlw	48
 14929  0116E0  6FA9               	movwf	printf@c& (0+255),b
 14930                           
 14931                           ;doprnt.c: 1491: break;
 14932  0116E2  D048               	goto	l1442
 14933  0116E4                     
 14934                           ; BSR set to: 1
 14935                           ;doprnt.c: 1499: {
 14936                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 14937                           
 14938                           ; BSR set to: 1
 14939  0116E4  C19F  F117         	movff	printf@val,___lldiv@dividend
 14940  0116E8  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14941  0116EC  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14942  0116F0  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14943  0116F4  C1A7  F186         	movff	printf@prec,??_printf
 14944  0116F8  C1A8  F187         	movff	printf@prec+1,??_printf+1
 14945  0116FC  90D8               	bcf	status,0,c
 14946  0116FE  3786               	rlcf	??_printf& (0+255),f,b
 14947  011700  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14948  011702  90D8               	bcf	status,0,c
 14949  011704  3786               	rlcf	??_printf& (0+255),f,b
 14950  011706  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14951  011708  0E49               	movlw	low _hexpowers
 14952  01170A  2586               	addwf	??_printf& (0+255),w,b
 14953  01170C  6EF6               	movwf	tblptrl,c
 14954  01170E  0EEC               	movlw	high _hexpowers
 14955  011710  2187               	addwfc	(??_printf+1)& (0+255),w,b
 14956  011712  6EF7               	movwf	tblptrh,c
 14957  011714                     	if	1	;There are 3 active tblptr bytes
 14958  011714  6AF8               	clrf	tblptru,c
 14959  011716  0E00               	movlw	low (__mediumconst shr (0+16))
 14960  011718  22F8               	addwfc	tblptru,f,c
 14961  01171A                     	endif
 14962  01171A  0009               	tblrd		*+
 14963  01171C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14964  011720  0009               	tblrd		*+
 14965  011722  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14966  011726  0009               	tblrd		*+
 14967  011728  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14968  01172C  000A               	tblrd		*-
 14969  01172E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14970  011732  EC62  F0B8         	call	___lldiv	;wreg free
 14971  011736  0101               	movlb	1	; () banked
 14972  011738  5117               	movf	?___lldiv& (0+255),w,b
 14973  01173A  0B0F               	andlw	15
 14974  01173C  6F90               	movwf	printf@idx& (0+255),b
 14975                           
 14976                           ; BSR set to: 1
 14977                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 14978  01173E  5190               	movf	printf@idx& (0+255),w,b
 14979  011740  0D01               	mullw	1
 14980  011742  0EEB               	movlw	low STR_134
 14981  011744  24F3               	addwf	prodl,w,c
 14982  011746  6EF6               	movwf	tblptrl,c
 14983  011748  0EFD               	movlw	high STR_134
 14984  01174A  20F4               	addwfc	prodh,w,c
 14985  01174C  6EF7               	movwf	tblptrh,c
 14986  01174E                     	if	1	;There are 3 active tblptr bytes
 14987  01174E  6AF8               	clrf	tblptru,c
 14988  011750  0E00               	movlw	low (__mediumconst shr (0+16))
 14989  011752  22F8               	addwfc	tblptru,f,c
 14990  011754                     	endif
 14991  011754  0008               	tblrd		*
 14992  011756  CFF5 F1A9          	movff	tablat,printf@c
 14993                           
 14994                           ; BSR set to: 1
 14995                           ;doprnt.c: 1523: }
 14996                           
 14997                           ;doprnt.c: 1508: }
 14998                           ;doprnt.c: 1510: break;
 14999  01175A  D00C               	goto	l1442
 15000  01175C                     l12000:
 15001  01175C  0101               	movlb	1	; () banked
 15002  01175E  5197               	movf	printf@flag& (0+255),w,b
 15003  011760  0BC0               	andlw	192
 15004                           
 15005                           ; Switch size 1, requested type "space"
 15006                           ; Number of cases is 3, Range of values is 0 to 192
 15007                           ; switch strategies available:
 15008                           ; Name         Instructions Cycles
 15009                           ; simple_byte           10     6 (average)
 15010                           ;	Chosen strategy is simple_byte
 15011  011762  0A00               	xorlw	0	; case 0
 15012  011764  B4D8               	btfsc	status,2,c
 15013  011766  D77C               	goto	l1440
 15014  011768  0A80               	xorlw	128	; case 128
 15015  01176A  B4D8               	btfsc	status,2,c
 15016  01176C  D7BB               	goto	l1443
 15017  01176E  0A40               	xorlw	64	; case 192
 15018  011770  B4D8               	btfsc	status,2,c
 15019  011772  D776               	goto	l1440
 15020  011774                     l1442:
 15021                           
 15022                           ; BSR set to: 1
 15023                           ;doprnt.c: 1524: (putch(c) );
 15024                           
 15025                           ; BSR set to: 1
 15026  011774  51A9               	movf	printf@c& (0+255),w,b
 15027  011776  EC6C  F0C0         	call	_putch
 15028  01177A                     l1437:
 15029  01177A  0101               	movlb	1	; () banked
 15030  01177C  07A7               	decf	printf@prec& (0+255),f,b
 15031  01177E  A0D8               	btfss	status,0,c
 15032  011780  07A8               	decf	(printf@prec+1)& (0+255),f,b
 15033  011782  29A7               	incf	printf@prec& (0+255),w,b
 15034  011784  E1EB               	bnz	l12000
 15035  011786  29A8               	incf	(printf@prec+1)& (0+255),w,b
 15036  011788  A4D8               	btfss	status,2,c
 15037  01178A  D7E8               	goto	l1439
 15038  01178C                     u14420:
 15039                           
 15040                           ; BSR set to: 1
 15041                           
 15042                           ; BSR set to: 1
 15043  01178C  0101               	movlb	1	; () banked
 15044  01178E  517C               	movf	printf@f& (0+255),w,b
 15045  011790  6F86               	movwf	??_printf& (0+255),b
 15046  011792  517D               	movf	(printf@f+1)& (0+255),w,b
 15047  011794  6F87               	movwf	(??_printf+1)& (0+255),b
 15048  011796  4B7C               	infsnz	printf@f& (0+255),f,b
 15049  011798  2B7D               	incf	(printf@f+1)& (0+255),f,b
 15050  01179A  C186  FFF6         	movff	??_printf,tblptrl
 15051  01179E  C187  FFF7         	movff	??_printf+1,tblptrh
 15052  0117A2  0E00               	movlw	low (__mediumconst shr (0+16))
 15053  0117A4  6EF8               	movwf	tblptru,c
 15054  0117A6  0E0D               	movlw	(high __ramtop+-1)
 15055  0117A8  64F7               	cpfsgt	tblptrh,c
 15056  0117AA  D003               	bra	u14437
 15057  0117AC  0008               	tblrd		*
 15058  0117AE  50F5               	movf	tablat,w,c
 15059  0117B0  D005               	bra	u14430
 15060  0117B2                     u14437:
 15061  0117B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 15062  0117B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 15063  0117BA  50EF               	movf	indf0,w,c
 15064  0117BC                     u14430:
 15065  0117BC  0101               	movlb	1	; () banked
 15066  0117BE  6FA9               	movwf	printf@c& (0+255),b
 15067  0117C0  51A9               	movf	printf@c& (0+255),w,b
 15068  0117C2  B4D8               	btfsc	status,2,c
 15069  0117C4  0012               	return	
 15070  0117C6  EF59  F086         	goto	l1351
 15071  0117CA                     __end_of_printf:
 15072                           	opt stack 0
 15073                           tblptru	equ	0xFF8
 15074                           tblptrh	equ	0xFF7
 15075                           tblptrl	equ	0xFF6
 15076                           tablat	equ	0xFF5
 15077                           prodh	equ	0xFF4
 15078                           prodl	equ	0xFF3
 15079                           intcon	equ	0xFF2
 15080                           indf0	equ	0xFEF
 15081                           postinc0	equ	0xFEE
 15082                           fsr0h	equ	0xFEA
 15083                           fsr0l	equ	0xFE9
 15084                           wreg	equ	0xFE8
 15085                           indf1	equ	0xFE7
 15086                           postdec1	equ	0xFE5
 15087                           plusw1	equ	0xFE3
 15088                           fsr1h	equ	0xFE2
 15089                           fsr1l	equ	0xFE1
 15090                           indf2	equ	0xFDF
 15091                           postinc2	equ	0xFDE
 15092                           postdec2	equ	0xFDD
 15093                           plusw2	equ	0xFDB
 15094                           fsr2h	equ	0xFDA
 15095                           fsr2l	equ	0xFD9
 15096                           status	equ	0xFD8
 15097                           
 15098 ;; *************** function _scale *****************
 15099 ;; Defined at:
 15100 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  scl             1    wreg     char 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  scl             1  119[BANK1 ] char 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  4  111[BANK1 ] char 
 15107 ;; Registers used:
 15108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15114 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15117 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15118 ;;Total ram usage:        9 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:   14
 15121 ;; This function calls:
 15122 ;;		___awdiv
 15123 ;;		___awmod
 15124 ;;		___flmul
 15125 ;; This function is called by:
 15126 ;;		_printf
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           	psect	text29
 15131  012B18                     __ptext29:
 15132                           	opt stack 0
 15133  012B18                     _scale:
 15134                           	opt stack 13
 15135                           
 15136                           ; BSR set to: 1
 15137                           ;incstack = 0
 15138                           ;scale@scl stored from wreg
 15139  012B18  0101               	movlb	1	; () banked
 15140  012B1A  6F77               	movwf	scale@scl& (0+255),b
 15141                           
 15142                           ;doprnt.c: 428: if(scl < 0) {
 15143  012B1C  0101               	movlb	1	; () banked
 15144  012B1E  AF77               	btfss	scale@scl& (0+255),7,b
 15145  012B20  D127               	goto	l1340
 15146                           
 15147                           ; BSR set to: 1
 15148                           ;doprnt.c: 429: scl = -scl;
 15149  012B22  6D77               	negf	scale@scl& (0+255),b
 15150                           
 15151                           ;doprnt.c: 430: if(scl>=110)
 15152  012B24  5177               	movf	scale@scl& (0+255),w,b
 15153  012B26  0A80               	xorlw	128
 15154  012B28  0F12               	addlw	-238
 15155  012B2A  A0D8               	btfss	status,0,c
 15156  012B2C  D0A5               	goto	l1341
 15157                           
 15158                           ; BSR set to: 1
 15159                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15160  012B2E  0E00               	movlw	0
 15161  012B30  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15162  012B32  0E0A               	movlw	10
 15163  012B34  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15164  012B36  0E00               	movlw	0
 15165  012B38  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15166  012B3A  0E64               	movlw	100
 15167  012B3C  6F19               	movwf	___awmod@divisor& (0+255),b
 15168  012B3E  5177               	movf	scale@scl& (0+255),w,b
 15169  012B40  6F17               	movwf	___awmod@dividend& (0+255),b
 15170  012B42  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15171  012B44  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15172  012B46  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15173  012B48  EC22  F0BA         	call	___awmod	;wreg free
 15174  012B4C  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15175  012B50  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15176  012B54  EC1F  F0B8         	call	___awdiv	;wreg free
 15177  012B58  0101               	movlb	1	; () banked
 15178  012B5A  90D8               	bcf	status,0,c
 15179  012B5C  371D               	rlcf	?___awdiv& (0+255),f,b
 15180  012B5E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15181  012B60  90D8               	bcf	status,0,c
 15182  012B62  371D               	rlcf	?___awdiv& (0+255),f,b
 15183  012B64  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15184  012B66  0E24               	movlw	36
 15185  012B68  271D               	addwf	?___awdiv& (0+255),f,b
 15186  012B6A  0E00               	movlw	0
 15187  012B6C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15188  012B6E  0EED               	movlw	low __npowers_
 15189  012B70  251D               	addwf	?___awdiv& (0+255),w,b
 15190  012B72  6EF6               	movwf	tblptrl,c
 15191  012B74  0EEB               	movlw	high __npowers_
 15192  012B76  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15193  012B78  6EF7               	movwf	tblptrh,c
 15194  012B7A                     	if	1	;There are 3 active tblptr bytes
 15195  012B7A  6AF8               	clrf	tblptru,c
 15196  012B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 15197  012B7E  22F8               	addwfc	tblptru,f,c
 15198  012B80                     	endif
 15199  012B80  0009               	tblrd		*+
 15200  012B82  CFF5 F15A          	movff	tablat,___flmul@a
 15201  012B86  0009               	tblrd		*+
 15202  012B88  CFF5 F15B          	movff	tablat,___flmul@a+1
 15203  012B8C  0009               	tblrd		*+
 15204  012B8E  CFF5 F15C          	movff	tablat,___flmul@a+2
 15205  012B92  000A               	tblrd		*-
 15206  012B94  CFF5 F15D          	movff	tablat,___flmul@a+3
 15207  012B98  0E00               	movlw	0
 15208  012B9A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15209  012B9C  0E64               	movlw	100
 15210  012B9E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15211  012BA0  5177               	movf	scale@scl& (0+255),w,b
 15212  012BA2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15213  012BA4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15214  012BA6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15215  012BA8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15216  012BAA  EC1F  F0B8         	call	___awdiv	;wreg free
 15217  012BAE  0101               	movlb	1	; () banked
 15218  012BB0  90D8               	bcf	status,0,c
 15219  012BB2  371D               	rlcf	?___awdiv& (0+255),f,b
 15220  012BB4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15221  012BB6  90D8               	bcf	status,0,c
 15222  012BB8  371D               	rlcf	?___awdiv& (0+255),f,b
 15223  012BBA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15224  012BBC  0E48               	movlw	72
 15225  012BBE  271D               	addwf	?___awdiv& (0+255),f,b
 15226  012BC0  0E00               	movlw	0
 15227  012BC2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15228  012BC4  0EED               	movlw	low __npowers_
 15229  012BC6  251D               	addwf	?___awdiv& (0+255),w,b
 15230  012BC8  6EF6               	movwf	tblptrl,c
 15231  012BCA  0EEB               	movlw	high __npowers_
 15232  012BCC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15233  012BCE  6EF7               	movwf	tblptrh,c
 15234  012BD0                     	if	1	;There are 3 active tblptr bytes
 15235  012BD0  6AF8               	clrf	tblptru,c
 15236  012BD2  0E00               	movlw	low (__mediumconst shr (0+16))
 15237  012BD4  22F8               	addwfc	tblptru,f,c
 15238  012BD6                     	endif
 15239  012BD6  0009               	tblrd		*+
 15240  012BD8  CFF5 F156          	movff	tablat,___flmul@b
 15241  012BDC  0009               	tblrd		*+
 15242  012BDE  CFF5 F157          	movff	tablat,___flmul@b+1
 15243  012BE2  0009               	tblrd		*+
 15244  012BE4  CFF5 F158          	movff	tablat,___flmul@b+2
 15245  012BE8  000A               	tblrd		*-
 15246  012BEA  CFF5 F159          	movff	tablat,___flmul@b+3
 15247  012BEE  ECD2  F09B         	call	___flmul	;wreg free
 15248  012BF2  C156  F173         	movff	?___flmul,_scale$3860
 15249  012BF6  C157  F174         	movff	?___flmul+1,_scale$3860+1
 15250  012BFA  C158  F175         	movff	?___flmul+2,_scale$3860+2
 15251  012BFE  C159  F176         	movff	?___flmul+3,_scale$3860+3
 15252                           
 15253                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15254  012C02  C173  F156         	movff	_scale$3860,___flmul@b
 15255  012C06  C174  F157         	movff	_scale$3860+1,___flmul@b+1
 15256  012C0A  C175  F158         	movff	_scale$3860+2,___flmul@b+2
 15257  012C0E  C176  F159         	movff	_scale$3860+3,___flmul@b+3
 15258  012C12  0E00               	movlw	0
 15259  012C14  0101               	movlb	1	; () banked
 15260  012C16  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15261  012C18  0E0A               	movlw	10
 15262  012C1A  6F19               	movwf	___awmod@divisor& (0+255),b
 15263  012C1C  5177               	movf	scale@scl& (0+255),w,b
 15264  012C1E  6F17               	movwf	___awmod@dividend& (0+255),b
 15265  012C20  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15266  012C22  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15267  012C24  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15268  012C26  EC22  F0BA         	call	___awmod	;wreg free
 15269  012C2A  0101               	movlb	1	; () banked
 15270  012C2C  90D8               	bcf	status,0,c
 15271  012C2E  3717               	rlcf	?___awmod& (0+255),f,b
 15272  012C30  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15273  012C32  90D8               	bcf	status,0,c
 15274  012C34  3717               	rlcf	?___awmod& (0+255),f,b
 15275  012C36  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15276  012C38  0EED               	movlw	low __npowers_
 15277  012C3A  2517               	addwf	?___awmod& (0+255),w,b
 15278  012C3C  6EF6               	movwf	tblptrl,c
 15279  012C3E  0EEB               	movlw	high __npowers_
 15280  012C40  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15281  012C42  6EF7               	movwf	tblptrh,c
 15282  012C44                     	if	1	;There are 3 active tblptr bytes
 15283  012C44  6AF8               	clrf	tblptru,c
 15284  012C46  0E00               	movlw	low (__mediumconst shr (0+16))
 15285  012C48  22F8               	addwfc	tblptru,f,c
 15286  012C4A                     	endif
 15287  012C4A  0009               	tblrd		*+
 15288  012C4C  CFF5 F15A          	movff	tablat,___flmul@a
 15289  012C50  0009               	tblrd		*+
 15290  012C52  CFF5 F15B          	movff	tablat,___flmul@a+1
 15291  012C56  0009               	tblrd		*+
 15292  012C58  CFF5 F15C          	movff	tablat,___flmul@a+2
 15293  012C5C  000A               	tblrd		*-
 15294  012C5E  CFF5 F15D          	movff	tablat,___flmul@a+3
 15295  012C62  ECD2  F09B         	call	___flmul	;wreg free
 15296  012C66  C156  F16F         	movff	?___flmul,?_scale
 15297  012C6A  C157  F170         	movff	?___flmul+1,?_scale+1
 15298  012C6E  C158  F171         	movff	?___flmul+2,?_scale+2
 15299  012C72  C159  F172         	movff	?___flmul+3,?_scale+3
 15300  012C76  0012               	return	
 15301  012C78                     l1341:
 15302                           
 15303                           ;doprnt.c: 432: else if(scl > 10)
 15304  012C78  0101               	movlb	1	; () banked
 15305  012C7A  5177               	movf	scale@scl& (0+255),w,b
 15306  012C7C  0A80               	xorlw	128
 15307  012C7E  0F75               	addlw	-139
 15308  012C80  A0D8               	btfss	status,0,c
 15309  012C82  D05D               	goto	l1344
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15313  012C84  0E00               	movlw	0
 15314  012C86  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15315  012C88  0E0A               	movlw	10
 15316  012C8A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15317  012C8C  5177               	movf	scale@scl& (0+255),w,b
 15318  012C8E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15319  012C90  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15320  012C92  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15321  012C94  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15322  012C96  EC1F  F0B8         	call	___awdiv	;wreg free
 15323  012C9A  0101               	movlb	1	; () banked
 15324  012C9C  90D8               	bcf	status,0,c
 15325  012C9E  371D               	rlcf	?___awdiv& (0+255),f,b
 15326  012CA0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15327  012CA2  90D8               	bcf	status,0,c
 15328  012CA4  371D               	rlcf	?___awdiv& (0+255),f,b
 15329  012CA6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15330  012CA8  0E24               	movlw	36
 15331  012CAA  271D               	addwf	?___awdiv& (0+255),f,b
 15332  012CAC  0E00               	movlw	0
 15333  012CAE  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15334  012CB0  0EED               	movlw	low __npowers_
 15335  012CB2  251D               	addwf	?___awdiv& (0+255),w,b
 15336  012CB4  6EF6               	movwf	tblptrl,c
 15337  012CB6  0EEB               	movlw	high __npowers_
 15338  012CB8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15339  012CBA  6EF7               	movwf	tblptrh,c
 15340  012CBC                     	if	1	;There are 3 active tblptr bytes
 15341  012CBC  6AF8               	clrf	tblptru,c
 15342  012CBE  0E00               	movlw	low (__mediumconst shr (0+16))
 15343  012CC0  22F8               	addwfc	tblptru,f,c
 15344  012CC2                     	endif
 15345  012CC2  0009               	tblrd		*+
 15346  012CC4  CFF5 F156          	movff	tablat,___flmul@b
 15347  012CC8  0009               	tblrd		*+
 15348  012CCA  CFF5 F157          	movff	tablat,___flmul@b+1
 15349  012CCE  0009               	tblrd		*+
 15350  012CD0  CFF5 F158          	movff	tablat,___flmul@b+2
 15351  012CD4  000A               	tblrd		*-
 15352  012CD6  CFF5 F159          	movff	tablat,___flmul@b+3
 15353  012CDA  0E00               	movlw	0
 15354  012CDC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15355  012CDE  0E0A               	movlw	10
 15356  012CE0  6F19               	movwf	___awmod@divisor& (0+255),b
 15357  012CE2  5177               	movf	scale@scl& (0+255),w,b
 15358  012CE4  6F17               	movwf	___awmod@dividend& (0+255),b
 15359  012CE6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15360  012CE8  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15361  012CEA  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15362  012CEC  EC22  F0BA         	call	___awmod	;wreg free
 15363  012CF0  0101               	movlb	1	; () banked
 15364  012CF2  90D8               	bcf	status,0,c
 15365  012CF4  3717               	rlcf	?___awmod& (0+255),f,b
 15366  012CF6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15367  012CF8  90D8               	bcf	status,0,c
 15368  012CFA  3717               	rlcf	?___awmod& (0+255),f,b
 15369  012CFC  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15370  012CFE  0EED               	movlw	low __npowers_
 15371  012D00  2517               	addwf	?___awmod& (0+255),w,b
 15372  012D02  6EF6               	movwf	tblptrl,c
 15373  012D04  0EEB               	movlw	high __npowers_
 15374  012D06  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15375  012D08  6EF7               	movwf	tblptrh,c
 15376  012D0A                     	if	1	;There are 3 active tblptr bytes
 15377  012D0A  6AF8               	clrf	tblptru,c
 15378  012D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 15379  012D0E  22F8               	addwfc	tblptru,f,c
 15380  012D10                     	endif
 15381  012D10  0009               	tblrd		*+
 15382  012D12  CFF5 F15A          	movff	tablat,___flmul@a
 15383  012D16  0009               	tblrd		*+
 15384  012D18  CFF5 F15B          	movff	tablat,___flmul@a+1
 15385  012D1C  0009               	tblrd		*+
 15386  012D1E  CFF5 F15C          	movff	tablat,___flmul@a+2
 15387  012D22  000A               	tblrd		*-
 15388  012D24  CFF5 F15D          	movff	tablat,___flmul@a+3
 15389  012D28  ECD2  F09B         	call	___flmul	;wreg free
 15390  012D2C  C156  F16F         	movff	?___flmul,?_scale
 15391  012D30  C157  F170         	movff	?___flmul+1,?_scale+1
 15392  012D34  C158  F171         	movff	?___flmul+2,?_scale+2
 15393  012D38  C159  F172         	movff	?___flmul+3,?_scale+3
 15394  012D3C  0012               	return	
 15395  012D3E                     l1344:
 15396                           
 15397                           ;doprnt.c: 434: return _npowers_[scl];
 15398  012D3E  0101               	movlb	1	; () banked
 15399  012D40  5177               	movf	scale@scl& (0+255),w,b
 15400  012D42  0D04               	mullw	4
 15401  012D44  0EED               	movlw	low __npowers_
 15402  012D46  24F3               	addwf	prodl,w,c
 15403  012D48  6EF6               	movwf	tblptrl,c
 15404  012D4A  0EEB               	movlw	high __npowers_
 15405  012D4C  20F4               	addwfc	prodh,w,c
 15406  012D4E  6EF7               	movwf	tblptrh,c
 15407  012D50                     	if	1	;There are 3 active tblptr bytes
 15408  012D50  6AF8               	clrf	tblptru,c
 15409  012D52  0E00               	movlw	low (__mediumconst shr (0+16))
 15410  012D54  22F8               	addwfc	tblptru,f,c
 15411  012D56                     	endif
 15412  012D56  0009               	tblrd		*+
 15413  012D58  CFF5 F16F          	movff	tablat,?_scale
 15414  012D5C  0009               	tblrd		*+
 15415  012D5E  CFF5 F170          	movff	tablat,?_scale+1
 15416  012D62  0009               	tblrd		*+
 15417  012D64  CFF5 F171          	movff	tablat,?_scale+2
 15418  012D68  000A               	tblrd		*-
 15419  012D6A  CFF5 F172          	movff	tablat,?_scale+3
 15420                           
 15421                           ; BSR set to: 1
 15422  012D6E  0012               	return	
 15423  012D70                     l1340:
 15424                           
 15425                           ; BSR set to: 1
 15426                           ;doprnt.c: 435: }
 15427                           ;doprnt.c: 436: if(scl>=110)
 15428                           
 15429                           ; BSR set to: 1
 15430  012D70  5177               	movf	scale@scl& (0+255),w,b
 15431  012D72  0A80               	xorlw	128
 15432  012D74  0F12               	addlw	-238
 15433  012D76  A0D8               	btfss	status,0,c
 15434  012D78  D0A5               	goto	l1345
 15435                           
 15436                           ; BSR set to: 1
 15437                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15438  012D7A  0E00               	movlw	0
 15439  012D7C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15440  012D7E  0E0A               	movlw	10
 15441  012D80  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15442  012D82  0E00               	movlw	0
 15443  012D84  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15444  012D86  0E64               	movlw	100
 15445  012D88  6F19               	movwf	___awmod@divisor& (0+255),b
 15446  012D8A  5177               	movf	scale@scl& (0+255),w,b
 15447  012D8C  6F17               	movwf	___awmod@dividend& (0+255),b
 15448  012D8E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15449  012D90  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15450  012D92  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15451  012D94  EC22  F0BA         	call	___awmod	;wreg free
 15452  012D98  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15453  012D9C  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15454  012DA0  EC1F  F0B8         	call	___awdiv	;wreg free
 15455  012DA4  0101               	movlb	1	; () banked
 15456  012DA6  90D8               	bcf	status,0,c
 15457  012DA8  371D               	rlcf	?___awdiv& (0+255),f,b
 15458  012DAA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15459  012DAC  90D8               	bcf	status,0,c
 15460  012DAE  371D               	rlcf	?___awdiv& (0+255),f,b
 15461  012DB0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15462  012DB2  0E24               	movlw	36
 15463  012DB4  271D               	addwf	?___awdiv& (0+255),f,b
 15464  012DB6  0E00               	movlw	0
 15465  012DB8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15466  012DBA  0EB9               	movlw	low __powers_
 15467  012DBC  251D               	addwf	?___awdiv& (0+255),w,b
 15468  012DBE  6EF6               	movwf	tblptrl,c
 15469  012DC0  0EEB               	movlw	high __powers_
 15470  012DC2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15471  012DC4  6EF7               	movwf	tblptrh,c
 15472  012DC6                     	if	1	;There are 3 active tblptr bytes
 15473  012DC6  6AF8               	clrf	tblptru,c
 15474  012DC8  0E00               	movlw	low (__mediumconst shr (0+16))
 15475  012DCA  22F8               	addwfc	tblptru,f,c
 15476  012DCC                     	endif
 15477  012DCC  0009               	tblrd		*+
 15478  012DCE  CFF5 F15A          	movff	tablat,___flmul@a
 15479  012DD2  0009               	tblrd		*+
 15480  012DD4  CFF5 F15B          	movff	tablat,___flmul@a+1
 15481  012DD8  0009               	tblrd		*+
 15482  012DDA  CFF5 F15C          	movff	tablat,___flmul@a+2
 15483  012DDE  000A               	tblrd		*-
 15484  012DE0  CFF5 F15D          	movff	tablat,___flmul@a+3
 15485  012DE4  0E00               	movlw	0
 15486  012DE6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15487  012DE8  0E64               	movlw	100
 15488  012DEA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15489  012DEC  5177               	movf	scale@scl& (0+255),w,b
 15490  012DEE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15491  012DF0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15492  012DF2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15493  012DF4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15494  012DF6  EC1F  F0B8         	call	___awdiv	;wreg free
 15495  012DFA  0101               	movlb	1	; () banked
 15496  012DFC  90D8               	bcf	status,0,c
 15497  012DFE  371D               	rlcf	?___awdiv& (0+255),f,b
 15498  012E00  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15499  012E02  90D8               	bcf	status,0,c
 15500  012E04  371D               	rlcf	?___awdiv& (0+255),f,b
 15501  012E06  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15502  012E08  0E48               	movlw	72
 15503  012E0A  271D               	addwf	?___awdiv& (0+255),f,b
 15504  012E0C  0E00               	movlw	0
 15505  012E0E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15506  012E10  0EB9               	movlw	low __powers_
 15507  012E12  251D               	addwf	?___awdiv& (0+255),w,b
 15508  012E14  6EF6               	movwf	tblptrl,c
 15509  012E16  0EEB               	movlw	high __powers_
 15510  012E18  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15511  012E1A  6EF7               	movwf	tblptrh,c
 15512  012E1C                     	if	1	;There are 3 active tblptr bytes
 15513  012E1C  6AF8               	clrf	tblptru,c
 15514  012E1E  0E00               	movlw	low (__mediumconst shr (0+16))
 15515  012E20  22F8               	addwfc	tblptru,f,c
 15516  012E22                     	endif
 15517  012E22  0009               	tblrd		*+
 15518  012E24  CFF5 F156          	movff	tablat,___flmul@b
 15519  012E28  0009               	tblrd		*+
 15520  012E2A  CFF5 F157          	movff	tablat,___flmul@b+1
 15521  012E2E  0009               	tblrd		*+
 15522  012E30  CFF5 F158          	movff	tablat,___flmul@b+2
 15523  012E34  000A               	tblrd		*-
 15524  012E36  CFF5 F159          	movff	tablat,___flmul@b+3
 15525  012E3A  ECD2  F09B         	call	___flmul	;wreg free
 15526  012E3E  C156  F173         	movff	?___flmul,_scale$3860
 15527  012E42  C157  F174         	movff	?___flmul+1,_scale$3860+1
 15528  012E46  C158  F175         	movff	?___flmul+2,_scale$3860+2
 15529  012E4A  C159  F176         	movff	?___flmul+3,_scale$3860+3
 15530                           
 15531                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15532  012E4E  C173  F156         	movff	_scale$3860,___flmul@b
 15533  012E52  C174  F157         	movff	_scale$3860+1,___flmul@b+1
 15534  012E56  C175  F158         	movff	_scale$3860+2,___flmul@b+2
 15535  012E5A  C176  F159         	movff	_scale$3860+3,___flmul@b+3
 15536  012E5E  0E00               	movlw	0
 15537  012E60  0101               	movlb	1	; () banked
 15538  012E62  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15539  012E64  0E0A               	movlw	10
 15540  012E66  6F19               	movwf	___awmod@divisor& (0+255),b
 15541  012E68  5177               	movf	scale@scl& (0+255),w,b
 15542  012E6A  6F17               	movwf	___awmod@dividend& (0+255),b
 15543  012E6C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15544  012E6E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15545  012E70  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15546  012E72  EC22  F0BA         	call	___awmod	;wreg free
 15547  012E76  0101               	movlb	1	; () banked
 15548  012E78  90D8               	bcf	status,0,c
 15549  012E7A  3717               	rlcf	?___awmod& (0+255),f,b
 15550  012E7C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15551  012E7E  90D8               	bcf	status,0,c
 15552  012E80  3717               	rlcf	?___awmod& (0+255),f,b
 15553  012E82  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15554  012E84  0EB9               	movlw	low __powers_
 15555  012E86  2517               	addwf	?___awmod& (0+255),w,b
 15556  012E88  6EF6               	movwf	tblptrl,c
 15557  012E8A  0EEB               	movlw	high __powers_
 15558  012E8C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15559  012E8E  6EF7               	movwf	tblptrh,c
 15560  012E90                     	if	1	;There are 3 active tblptr bytes
 15561  012E90  6AF8               	clrf	tblptru,c
 15562  012E92  0E00               	movlw	low (__mediumconst shr (0+16))
 15563  012E94  22F8               	addwfc	tblptru,f,c
 15564  012E96                     	endif
 15565  012E96  0009               	tblrd		*+
 15566  012E98  CFF5 F15A          	movff	tablat,___flmul@a
 15567  012E9C  0009               	tblrd		*+
 15568  012E9E  CFF5 F15B          	movff	tablat,___flmul@a+1
 15569  012EA2  0009               	tblrd		*+
 15570  012EA4  CFF5 F15C          	movff	tablat,___flmul@a+2
 15571  012EA8  000A               	tblrd		*-
 15572  012EAA  CFF5 F15D          	movff	tablat,___flmul@a+3
 15573  012EAE  ECD2  F09B         	call	___flmul	;wreg free
 15574  012EB2  C156  F16F         	movff	?___flmul,?_scale
 15575  012EB6  C157  F170         	movff	?___flmul+1,?_scale+1
 15576  012EBA  C158  F171         	movff	?___flmul+2,?_scale+2
 15577  012EBE  C159  F172         	movff	?___flmul+3,?_scale+3
 15578  012EC2  0012               	return	
 15579  012EC4                     l1345:
 15580                           
 15581                           ;doprnt.c: 438: else if(scl > 10)
 15582  012EC4  0101               	movlb	1	; () banked
 15583  012EC6  5177               	movf	scale@scl& (0+255),w,b
 15584  012EC8  0A80               	xorlw	128
 15585  012ECA  0F75               	addlw	-139
 15586  012ECC  A0D8               	btfss	status,0,c
 15587  012ECE  D05D               	goto	l1347
 15588                           
 15589                           ; BSR set to: 1
 15590                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15591  012ED0  0E00               	movlw	0
 15592  012ED2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15593  012ED4  0E0A               	movlw	10
 15594  012ED6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15595  012ED8  5177               	movf	scale@scl& (0+255),w,b
 15596  012EDA  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15597  012EDC  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15598  012EDE  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15599  012EE0  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15600  012EE2  EC1F  F0B8         	call	___awdiv	;wreg free
 15601  012EE6  0101               	movlb	1	; () banked
 15602  012EE8  90D8               	bcf	status,0,c
 15603  012EEA  371D               	rlcf	?___awdiv& (0+255),f,b
 15604  012EEC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15605  012EEE  90D8               	bcf	status,0,c
 15606  012EF0  371D               	rlcf	?___awdiv& (0+255),f,b
 15607  012EF2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15608  012EF4  0E24               	movlw	36
 15609  012EF6  271D               	addwf	?___awdiv& (0+255),f,b
 15610  012EF8  0E00               	movlw	0
 15611  012EFA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15612  012EFC  0EB9               	movlw	low __powers_
 15613  012EFE  251D               	addwf	?___awdiv& (0+255),w,b
 15614  012F00  6EF6               	movwf	tblptrl,c
 15615  012F02  0EEB               	movlw	high __powers_
 15616  012F04  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15617  012F06  6EF7               	movwf	tblptrh,c
 15618  012F08                     	if	1	;There are 3 active tblptr bytes
 15619  012F08  6AF8               	clrf	tblptru,c
 15620  012F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 15621  012F0C  22F8               	addwfc	tblptru,f,c
 15622  012F0E                     	endif
 15623  012F0E  0009               	tblrd		*+
 15624  012F10  CFF5 F156          	movff	tablat,___flmul@b
 15625  012F14  0009               	tblrd		*+
 15626  012F16  CFF5 F157          	movff	tablat,___flmul@b+1
 15627  012F1A  0009               	tblrd		*+
 15628  012F1C  CFF5 F158          	movff	tablat,___flmul@b+2
 15629  012F20  000A               	tblrd		*-
 15630  012F22  CFF5 F159          	movff	tablat,___flmul@b+3
 15631  012F26  0E00               	movlw	0
 15632  012F28  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15633  012F2A  0E0A               	movlw	10
 15634  012F2C  6F19               	movwf	___awmod@divisor& (0+255),b
 15635  012F2E  5177               	movf	scale@scl& (0+255),w,b
 15636  012F30  6F17               	movwf	___awmod@dividend& (0+255),b
 15637  012F32  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15638  012F34  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15639  012F36  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15640  012F38  EC22  F0BA         	call	___awmod	;wreg free
 15641  012F3C  0101               	movlb	1	; () banked
 15642  012F3E  90D8               	bcf	status,0,c
 15643  012F40  3717               	rlcf	?___awmod& (0+255),f,b
 15644  012F42  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15645  012F44  90D8               	bcf	status,0,c
 15646  012F46  3717               	rlcf	?___awmod& (0+255),f,b
 15647  012F48  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15648  012F4A  0EB9               	movlw	low __powers_
 15649  012F4C  2517               	addwf	?___awmod& (0+255),w,b
 15650  012F4E  6EF6               	movwf	tblptrl,c
 15651  012F50  0EEB               	movlw	high __powers_
 15652  012F52  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15653  012F54  6EF7               	movwf	tblptrh,c
 15654  012F56                     	if	1	;There are 3 active tblptr bytes
 15655  012F56  6AF8               	clrf	tblptru,c
 15656  012F58  0E00               	movlw	low (__mediumconst shr (0+16))
 15657  012F5A  22F8               	addwfc	tblptru,f,c
 15658  012F5C                     	endif
 15659  012F5C  0009               	tblrd		*+
 15660  012F5E  CFF5 F15A          	movff	tablat,___flmul@a
 15661  012F62  0009               	tblrd		*+
 15662  012F64  CFF5 F15B          	movff	tablat,___flmul@a+1
 15663  012F68  0009               	tblrd		*+
 15664  012F6A  CFF5 F15C          	movff	tablat,___flmul@a+2
 15665  012F6E  000A               	tblrd		*-
 15666  012F70  CFF5 F15D          	movff	tablat,___flmul@a+3
 15667  012F74  ECD2  F09B         	call	___flmul	;wreg free
 15668  012F78  C156  F16F         	movff	?___flmul,?_scale
 15669  012F7C  C157  F170         	movff	?___flmul+1,?_scale+1
 15670  012F80  C158  F171         	movff	?___flmul+2,?_scale+2
 15671  012F84  C159  F172         	movff	?___flmul+3,?_scale+3
 15672  012F88  0012               	return	
 15673  012F8A                     l1347:
 15674                           
 15675                           ;doprnt.c: 440: return _powers_[scl];
 15676  012F8A  0101               	movlb	1	; () banked
 15677  012F8C  5177               	movf	scale@scl& (0+255),w,b
 15678  012F8E  0D04               	mullw	4
 15679  012F90  0EB9               	movlw	low __powers_
 15680  012F92  24F3               	addwf	prodl,w,c
 15681  012F94  6EF6               	movwf	tblptrl,c
 15682  012F96  0EEB               	movlw	high __powers_
 15683  012F98  20F4               	addwfc	prodh,w,c
 15684  012F9A  6EF7               	movwf	tblptrh,c
 15685  012F9C                     	if	1	;There are 3 active tblptr bytes
 15686  012F9C  6AF8               	clrf	tblptru,c
 15687  012F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 15688  012FA0  22F8               	addwfc	tblptru,f,c
 15689  012FA2                     	endif
 15690  012FA2  0009               	tblrd		*+
 15691  012FA4  CFF5 F16F          	movff	tablat,?_scale
 15692  012FA8  0009               	tblrd		*+
 15693  012FAA  CFF5 F170          	movff	tablat,?_scale+1
 15694  012FAE  0009               	tblrd		*+
 15695  012FB0  CFF5 F171          	movff	tablat,?_scale+2
 15696  012FB4  000A               	tblrd		*-
 15697  012FB6  CFF5 F172          	movff	tablat,?_scale+3
 15698  012FBA  0012               	return	
 15699  012FBC                     __end_of_scale:
 15700                           	opt stack 0
 15701                           tblptru	equ	0xFF8
 15702                           tblptrh	equ	0xFF7
 15703                           tblptrl	equ	0xFF6
 15704                           tablat	equ	0xFF5
 15705                           prodh	equ	0xFF4
 15706                           prodl	equ	0xFF3
 15707                           intcon	equ	0xFF2
 15708                           indf0	equ	0xFEF
 15709                           postinc0	equ	0xFEE
 15710                           fsr0h	equ	0xFEA
 15711                           fsr0l	equ	0xFE9
 15712                           wreg	equ	0xFE8
 15713                           indf1	equ	0xFE7
 15714                           postdec1	equ	0xFE5
 15715                           plusw1	equ	0xFE3
 15716                           fsr1h	equ	0xFE2
 15717                           fsr1l	equ	0xFE1
 15718                           indf2	equ	0xFDF
 15719                           postinc2	equ	0xFDE
 15720                           postdec2	equ	0xFDD
 15721                           plusw2	equ	0xFDB
 15722                           fsr2h	equ	0xFDA
 15723                           fsr2l	equ	0xFD9
 15724                           status	equ	0xFD8
 15725                           
 15726 ;; *************** function _putch *****************
 15727 ;; Defined at:
 15728 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 15729 ;; Parameters:    Size  Location     Type
 15730 ;;  txData          1    wreg     unsigned char 
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;  txData          1   24[BANK1 ] unsigned char 
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  1    wreg      void 
 15735 ;; Registers used:
 15736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15743 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15745 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15746 ;;Total ram usage:        1 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:   14
 15749 ;; This function calls:
 15750 ;;		_EUSART2_Write
 15751 ;; This function is called by:
 15752 ;;		_printf
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text30
 15757  0180D8                     __ptext30:
 15758                           	opt stack 0
 15759  0180D8                     _putch:
 15760                           	opt stack 13
 15761                           
 15762                           ;incstack = 0
 15763                           ;putch@txData stored from wreg
 15764  0180D8  0101               	movlb	1	; () banked
 15765  0180DA  6F18               	movwf	putch@txData& (0+255),b
 15766                           
 15767                           ;eusart2.c: 195: EUSART2_Write(txData);
 15768  0180DC  0101               	movlb	1	; () banked
 15769  0180DE  5118               	movf	putch@txData& (0+255),w,b
 15770  0180E0  ECEE  F0BC         	call	_EUSART2_Write
 15771  0180E4  0012               	return		;funcret
 15772  0180E6                     __end_of_putch:
 15773                           	opt stack 0
 15774                           tblptru	equ	0xFF8
 15775                           tblptrh	equ	0xFF7
 15776                           tblptrl	equ	0xFF6
 15777                           tablat	equ	0xFF5
 15778                           prodh	equ	0xFF4
 15779                           prodl	equ	0xFF3
 15780                           intcon	equ	0xFF2
 15781                           indf0	equ	0xFEF
 15782                           postinc0	equ	0xFEE
 15783                           fsr0h	equ	0xFEA
 15784                           fsr0l	equ	0xFE9
 15785                           wreg	equ	0xFE8
 15786                           indf1	equ	0xFE7
 15787                           postdec1	equ	0xFE5
 15788                           plusw1	equ	0xFE3
 15789                           fsr1h	equ	0xFE2
 15790                           fsr1l	equ	0xFE1
 15791                           indf2	equ	0xFDF
 15792                           postinc2	equ	0xFDE
 15793                           postdec2	equ	0xFDD
 15794                           plusw2	equ	0xFDB
 15795                           fsr2h	equ	0xFDA
 15796                           fsr2l	equ	0xFD9
 15797                           status	equ	0xFD8
 15798                           
 15799 ;; *************** function _EUSART2_Write *****************
 15800 ;; Defined at:
 15801 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 15802 ;; Parameters:    Size  Location     Type
 15803 ;;  txData          1    wreg     unsigned char 
 15804 ;; Auto vars:     Size  Location     Type
 15805 ;;  txData          1   23[BANK1 ] unsigned char 
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  1    wreg      void 
 15808 ;; Registers used:
 15809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15816 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15818 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15819 ;;Total ram usage:        1 bytes
 15820 ;; Hardware stack levels used:    1
 15821 ;; Hardware stack levels required when called:   13
 15822 ;; This function calls:
 15823 ;;		Nothing
 15824 ;; This function is called by:
 15825 ;;		_putch
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text31
 15830  0179DC                     __ptext31:
 15831                           	opt stack 0
 15832  0179DC                     _EUSART2_Write:
 15833                           	opt stack 13
 15834                           
 15835                           ;incstack = 0
 15836                           ;EUSART2_Write@txData stored from wreg
 15837  0179DC  0101               	movlb	1	; () banked
 15838  0179DE  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 15839                           
 15840                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 15841  0179E0  D002               	goto	l388
 15842  0179E2                     l389:
 15843                           
 15844                           ; BSR set to: 1
 15845  0179E2  0004               	clrwdt		;# 
 15846                           
 15847                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 15848  0179E4  827E               	bsf	3966,1,c	;volatile
 15849  0179E6                     l388:
 15850  0179E6  0101               	movlb	1	; () banked
 15851  0179E8  51E0               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15852  0179EA  B4D8               	btfsc	status,2,c
 15853  0179EC  D7FA               	goto	l389
 15854                           
 15855                           ; BSR set to: 1
 15856                           ;eusart2.c: 167: }
 15857                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 15858  0179EE  927E               	bcf	3966,1,c	;volatile
 15859                           
 15860                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 15861  0179F0  010E               	movlb	14	; () banked
 15862  0179F2  BD2C               	btfsc	44,6,b	;volatile
 15863  0179F4  D003               	goto	l391
 15864                           
 15865                           ; BSR set to: 14
 15866                           ;eusart2.c: 172: {
 15867                           ;eusart2.c: 173: TX2REG = txData;
 15868  0179F6  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 15869                           
 15870                           ;eusart2.c: 174: }
 15871  0179FA  D013               	goto	l392
 15872  0179FC                     l391:
 15873                           
 15874                           ; BSR set to: 14
 15875                           ;eusart2.c: 175: else
 15876                           ;eusart2.c: 176: {
 15877                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 15878  0179FC  9D2C               	bcf	44,6,b	;volatile
 15879                           
 15880                           ; BSR set to: 14
 15881                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 15882  0179FE  0101               	movlb	1	; () banked
 15883  017A00  51E2               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 15884  017A02  0D01               	mullw	1
 15885  017A04  0E00               	movlw	low _eusart2TxBuffer
 15886  017A06  24F3               	addwf	prodl,w,c
 15887  017A08  6ED9               	movwf	fsr2l,c
 15888  017A0A  0E03               	movlw	high _eusart2TxBuffer
 15889  017A0C  20F4               	addwfc	prodh,w,c
 15890  017A0E  6EDA               	movwf	fsr2h,c
 15891  017A10  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 15892                           
 15893                           ; BSR set to: 1
 15894  017A14  2BE2               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 15895                           
 15896                           ; BSR set to: 1
 15897                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 15898  017A16  0E7F               	movlw	127
 15899  017A18  65E2               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 15900  017A1A  D002               	goto	l393
 15901                           
 15902                           ; BSR set to: 1
 15903                           ;eusart2.c: 180: {
 15904                           ;eusart2.c: 181: eusart2TxHead = 0;
 15905  017A1C  0E00               	movlw	0
 15906  017A1E  6FE2               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15907  017A20                     l393:
 15908                           
 15909                           ; BSR set to: 1
 15910                           ;eusart2.c: 182: }
 15911                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 15912                           
 15913                           ; BSR set to: 1
 15914  017A20  07E0               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15915  017A22                     l392:
 15916                           
 15917                           ;eusart2.c: 184: }
 15918                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 15919                           
 15920                           ; BSR set to: 1
 15921  017A22  010E               	movlb	14	; () banked
 15922  017A24  8D2C               	bsf	44,6,b	;volatile
 15923                           
 15924                           ; BSR set to: 14
 15925  017A26  0012               	return		;funcret
 15926  017A28                     __end_of_EUSART2_Write:
 15927                           	opt stack 0
 15928                           tblptru	equ	0xFF8
 15929                           tblptrh	equ	0xFF7
 15930                           tblptrl	equ	0xFF6
 15931                           tablat	equ	0xFF5
 15932                           prodh	equ	0xFF4
 15933                           prodl	equ	0xFF3
 15934                           intcon	equ	0xFF2
 15935                           indf0	equ	0xFEF
 15936                           postinc0	equ	0xFEE
 15937                           fsr0h	equ	0xFEA
 15938                           fsr0l	equ	0xFE9
 15939                           wreg	equ	0xFE8
 15940                           indf1	equ	0xFE7
 15941                           postdec1	equ	0xFE5
 15942                           plusw1	equ	0xFE3
 15943                           fsr1h	equ	0xFE2
 15944                           fsr1l	equ	0xFE1
 15945                           indf2	equ	0xFDF
 15946                           postinc2	equ	0xFDE
 15947                           postdec2	equ	0xFDD
 15948                           plusw2	equ	0xFDB
 15949                           fsr2h	equ	0xFDA
 15950                           fsr2l	equ	0xFD9
 15951                           status	equ	0xFD8
 15952                           
 15953 ;; *************** function _isdigit *****************
 15954 ;; Defined at:
 15955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;  c               1    wreg     unsigned char 
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;  c               1   25[BANK1 ] unsigned char 
 15960 ;; Return value:  Size  Location     Type
 15961 ;;		None               void
 15962 ;; Registers used:
 15963 ;;		wreg, status,2, status,0
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15970 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15971 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15972 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15973 ;;Total ram usage:        3 bytes
 15974 ;; Hardware stack levels used:    1
 15975 ;; Hardware stack levels required when called:   13
 15976 ;; This function calls:
 15977 ;;		Nothing
 15978 ;; This function is called by:
 15979 ;;		_printf
 15980 ;;		_atoi
 15981 ;; This function uses a non-reentrant model
 15982 ;;
 15983                           
 15984                           	psect	text32
 15985  017F90                     __ptext32:
 15986                           	opt stack 0
 15987  017F90                     _isdigit:
 15988                           	opt stack 14
 15989                           
 15990                           ; BSR set to: 14
 15991                           ;incstack = 0
 15992                           ;isdigit@c stored from wreg
 15993  017F90  0101               	movlb	1	; () banked
 15994  017F92  6F19               	movwf	isdigit@c& (0+255),b
 15995  017F94  0E00               	movlw	0
 15996  017F96  0101               	movlb	1	; () banked
 15997  017F98  6F18               	movwf	_isdigit$3141& (0+255),b
 15998                           
 15999                           ; BSR set to: 1
 16000  017F9A  0E3A               	movlw	58
 16001  017F9C  6119               	cpfslt	isdigit@c& (0+255),b
 16002  017F9E  D005               	goto	l1874
 16003                           
 16004                           ; BSR set to: 1
 16005  017FA0  0E2F               	movlw	47
 16006  017FA2  6519               	cpfsgt	isdigit@c& (0+255),b
 16007  017FA4  D002               	goto	l1874
 16008                           
 16009                           ; BSR set to: 1
 16010  017FA6  0E01               	movlw	1
 16011  017FA8  6F18               	movwf	_isdigit$3141& (0+255),b
 16012  017FAA                     l1874:
 16013                           
 16014                           ; BSR set to: 1
 16015                           
 16016                           ; BSR set to: 1
 16017  017FAA  C118  F117         	movff	_isdigit$3141,??_isdigit
 16018  017FAE  3117               	rrcf	??_isdigit& (0+255),w,b
 16019  017FB0  0012               	return	
 16020  017FB2                     __end_of_isdigit:
 16021                           	opt stack 0
 16022                           tblptru	equ	0xFF8
 16023                           tblptrh	equ	0xFF7
 16024                           tblptrl	equ	0xFF6
 16025                           tablat	equ	0xFF5
 16026                           prodh	equ	0xFF4
 16027                           prodl	equ	0xFF3
 16028                           intcon	equ	0xFF2
 16029                           indf0	equ	0xFEF
 16030                           postinc0	equ	0xFEE
 16031                           fsr0h	equ	0xFEA
 16032                           fsr0l	equ	0xFE9
 16033                           wreg	equ	0xFE8
 16034                           indf1	equ	0xFE7
 16035                           postdec1	equ	0xFE5
 16036                           plusw1	equ	0xFE3
 16037                           fsr1h	equ	0xFE2
 16038                           fsr1l	equ	0xFE1
 16039                           indf2	equ	0xFDF
 16040                           postinc2	equ	0xFDE
 16041                           postdec2	equ	0xFDD
 16042                           plusw2	equ	0xFDB
 16043                           fsr2h	equ	0xFDA
 16044                           fsr2l	equ	0xFD9
 16045                           status	equ	0xFD8
 16046                           
 16047 ;; *************** function _fround *****************
 16048 ;; Defined at:
 16049 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;  prec            1    wreg     unsigned char 
 16052 ;; Auto vars:     Size  Location     Type
 16053 ;;  prec            1  123[BANK1 ] unsigned char 
 16054 ;; Return value:  Size  Location     Type
 16055 ;;                  4  111[BANK1 ] unsigned char 
 16056 ;; Registers used:
 16057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16058 ;; Tracked objects:
 16059 ;;		On entry : 0/0
 16060 ;;		On exit  : 0/0
 16061 ;;		Unchanged: 0/0
 16062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16063 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16064 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16066 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16067 ;;Total ram usage:       13 bytes
 16068 ;; Hardware stack levels used:    1
 16069 ;; Hardware stack levels required when called:   14
 16070 ;; This function calls:
 16071 ;;		___awdiv
 16072 ;;		___awmod
 16073 ;;		___flmul
 16074 ;; This function is called by:
 16075 ;;		_printf
 16076 ;; This function uses a non-reentrant model
 16077 ;;
 16078                           
 16079                           	psect	text33
 16080  014D88                     __ptext33:
 16081                           	opt stack 0
 16082  014D88                     _fround:
 16083                           	opt stack 13
 16084                           
 16085                           ; BSR set to: 1
 16086                           ;incstack = 0
 16087                           ;fround@prec stored from wreg
 16088  014D88  0101               	movlb	1	; () banked
 16089  014D8A  6F7B               	movwf	fround@prec& (0+255),b
 16090                           
 16091                           ;doprnt.c: 413: if(prec>=110)
 16092  014D8C  0E6D               	movlw	109
 16093  014D8E  0101               	movlb	1	; () banked
 16094  014D90  657B               	cpfsgt	fround@prec& (0+255),b
 16095  014D92  D0BA               	goto	l1334
 16096                           
 16097                           ; BSR set to: 1
 16098                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16099  014D94  0E00               	movlw	0
 16100  014D96  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16101  014D98  0E0A               	movlw	10
 16102  014D9A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16103  014D9C  0E00               	movlw	0
 16104  014D9E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16105  014DA0  0E64               	movlw	100
 16106  014DA2  6F19               	movwf	___awmod@divisor& (0+255),b
 16107  014DA4  C17B  F117         	movff	fround@prec,___awmod@dividend
 16108  014DA8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16109  014DAA  EC22  F0BA         	call	___awmod	;wreg free
 16110  014DAE  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16111  014DB2  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16112  014DB6  EC1F  F0B8         	call	___awdiv	;wreg free
 16113  014DBA  0101               	movlb	1	; () banked
 16114  014DBC  90D8               	bcf	status,0,c
 16115  014DBE  371D               	rlcf	?___awdiv& (0+255),f,b
 16116  014DC0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16117  014DC2  90D8               	bcf	status,0,c
 16118  014DC4  371D               	rlcf	?___awdiv& (0+255),f,b
 16119  014DC6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16120  014DC8  0E24               	movlw	36
 16121  014DCA  271D               	addwf	?___awdiv& (0+255),f,b
 16122  014DCC  0E00               	movlw	0
 16123  014DCE  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16124  014DD0  0EED               	movlw	low __npowers_
 16125  014DD2  251D               	addwf	?___awdiv& (0+255),w,b
 16126  014DD4  6EF6               	movwf	tblptrl,c
 16127  014DD6  0EEB               	movlw	high __npowers_
 16128  014DD8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16129  014DDA  6EF7               	movwf	tblptrh,c
 16130  014DDC                     	if	1	;There are 3 active tblptr bytes
 16131  014DDC  6AF8               	clrf	tblptru,c
 16132  014DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 16133  014DE0  22F8               	addwfc	tblptru,f,c
 16134  014DE2                     	endif
 16135  014DE2  0009               	tblrd		*+
 16136  014DE4  CFF5 F15A          	movff	tablat,___flmul@a
 16137  014DE8  0009               	tblrd		*+
 16138  014DEA  CFF5 F15B          	movff	tablat,___flmul@a+1
 16139  014DEE  0009               	tblrd		*+
 16140  014DF0  CFF5 F15C          	movff	tablat,___flmul@a+2
 16141  014DF4  000A               	tblrd		*-
 16142  014DF6  CFF5 F15D          	movff	tablat,___flmul@a+3
 16143  014DFA  0E00               	movlw	0
 16144  014DFC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16145  014DFE  0E64               	movlw	100
 16146  014E00  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16147  014E02  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 16148  014E06  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16149  014E08  EC1F  F0B8         	call	___awdiv	;wreg free
 16150  014E0C  0101               	movlb	1	; () banked
 16151  014E0E  90D8               	bcf	status,0,c
 16152  014E10  371D               	rlcf	?___awdiv& (0+255),f,b
 16153  014E12  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16154  014E14  90D8               	bcf	status,0,c
 16155  014E16  371D               	rlcf	?___awdiv& (0+255),f,b
 16156  014E18  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16157  014E1A  0E48               	movlw	72
 16158  014E1C  271D               	addwf	?___awdiv& (0+255),f,b
 16159  014E1E  0E00               	movlw	0
 16160  014E20  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16161  014E22  0EED               	movlw	low __npowers_
 16162  014E24  251D               	addwf	?___awdiv& (0+255),w,b
 16163  014E26  6EF6               	movwf	tblptrl,c
 16164  014E28  0EEB               	movlw	high __npowers_
 16165  014E2A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16166  014E2C  6EF7               	movwf	tblptrh,c
 16167  014E2E                     	if	1	;There are 3 active tblptr bytes
 16168  014E2E  6AF8               	clrf	tblptru,c
 16169  014E30  0E00               	movlw	low (__mediumconst shr (0+16))
 16170  014E32  22F8               	addwfc	tblptru,f,c
 16171  014E34                     	endif
 16172  014E34  0009               	tblrd		*+
 16173  014E36  CFF5 F156          	movff	tablat,___flmul@b
 16174  014E3A  0009               	tblrd		*+
 16175  014E3C  CFF5 F157          	movff	tablat,___flmul@b+1
 16176  014E40  0009               	tblrd		*+
 16177  014E42  CFF5 F158          	movff	tablat,___flmul@b+2
 16178  014E46  000A               	tblrd		*-
 16179  014E48  CFF5 F159          	movff	tablat,___flmul@b+3
 16180  014E4C  ECD2  F09B         	call	___flmul	;wreg free
 16181  014E50  C156  F177         	movff	?___flmul,_fround$3858
 16182  014E54  C157  F178         	movff	?___flmul+1,_fround$3858+1
 16183  014E58  C158  F179         	movff	?___flmul+2,_fround$3858+2
 16184  014E5C  C159  F17A         	movff	?___flmul+3,_fround$3858+3
 16185                           
 16186                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16187  014E60  0E00               	movlw	0
 16188  014E62  0101               	movlb	1	; () banked
 16189  014E64  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16190  014E66  0E0A               	movlw	10
 16191  014E68  6F19               	movwf	___awmod@divisor& (0+255),b
 16192  014E6A  C17B  F117         	movff	fround@prec,___awmod@dividend
 16193  014E6E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16194  014E70  EC22  F0BA         	call	___awmod	;wreg free
 16195  014E74  0101               	movlb	1	; () banked
 16196  014E76  90D8               	bcf	status,0,c
 16197  014E78  3717               	rlcf	?___awmod& (0+255),f,b
 16198  014E7A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16199  014E7C  90D8               	bcf	status,0,c
 16200  014E7E  3717               	rlcf	?___awmod& (0+255),f,b
 16201  014E80  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16202  014E82  0EED               	movlw	low __npowers_
 16203  014E84  2517               	addwf	?___awmod& (0+255),w,b
 16204  014E86  6EF6               	movwf	tblptrl,c
 16205  014E88  0EEB               	movlw	high __npowers_
 16206  014E8A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16207  014E8C  6EF7               	movwf	tblptrh,c
 16208  014E8E                     	if	1	;There are 3 active tblptr bytes
 16209  014E8E  6AF8               	clrf	tblptru,c
 16210  014E90  0E00               	movlw	low (__mediumconst shr (0+16))
 16211  014E92  22F8               	addwfc	tblptru,f,c
 16212  014E94                     	endif
 16213  014E94  0009               	tblrd		*+
 16214  014E96  CFF5 F15A          	movff	tablat,___flmul@a
 16215  014E9A  0009               	tblrd		*+
 16216  014E9C  CFF5 F15B          	movff	tablat,___flmul@a+1
 16217  014EA0  0009               	tblrd		*+
 16218  014EA2  CFF5 F15C          	movff	tablat,___flmul@a+2
 16219  014EA6  000A               	tblrd		*-
 16220  014EA8  CFF5 F15D          	movff	tablat,___flmul@a+3
 16221  014EAC  C177  F156         	movff	_fround$3858,___flmul@b
 16222  014EB0  C178  F157         	movff	_fround$3858+1,___flmul@b+1
 16223  014EB4  C179  F158         	movff	_fround$3858+2,___flmul@b+2
 16224  014EB8  C17A  F159         	movff	_fround$3858+3,___flmul@b+3
 16225  014EBC  ECD2  F09B         	call	___flmul	;wreg free
 16226  014EC0  C156  F173         	movff	?___flmul,_fround$3859
 16227  014EC4  C157  F174         	movff	?___flmul+1,_fround$3859+1
 16228  014EC8  C158  F175         	movff	?___flmul+2,_fround$3859+2
 16229  014ECC  C159  F176         	movff	?___flmul+3,_fround$3859+3
 16230                           
 16231                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16232  014ED0  C173  F156         	movff	_fround$3859,___flmul@b
 16233  014ED4  C174  F157         	movff	_fround$3859+1,___flmul@b+1
 16234  014ED8  C175  F158         	movff	_fround$3859+2,___flmul@b+2
 16235  014EDC  C176  F159         	movff	_fround$3859+3,___flmul@b+3
 16236  014EE0  0E00               	movlw	0
 16237  014EE2  0101               	movlb	1	; () banked
 16238  014EE4  6F5A               	movwf	___flmul@a& (0+255),b
 16239  014EE6  0E00               	movlw	0
 16240  014EE8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16241  014EEA  0E00               	movlw	0
 16242  014EEC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16243  014EEE  0E3F               	movlw	63
 16244  014EF0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16245  014EF2  ECD2  F09B         	call	___flmul	;wreg free
 16246  014EF6  C156  F16F         	movff	?___flmul,?_fround
 16247  014EFA  C157  F170         	movff	?___flmul+1,?_fround+1
 16248  014EFE  C158  F171         	movff	?___flmul+2,?_fround+2
 16249  014F02  C159  F172         	movff	?___flmul+3,?_fround+3
 16250  014F06  0012               	return	
 16251  014F08                     l1334:
 16252                           
 16253                           ;doprnt.c: 415: else if(prec > 10)
 16254  014F08  0E0A               	movlw	10
 16255  014F0A  0101               	movlb	1	; () banked
 16256  014F0C  657B               	cpfsgt	fround@prec& (0+255),b
 16257  014F0E  D074               	goto	l1337
 16258                           
 16259                           ; BSR set to: 1
 16260                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16261  014F10  0E00               	movlw	0
 16262  014F12  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16263  014F14  0E0A               	movlw	10
 16264  014F16  6F19               	movwf	___awmod@divisor& (0+255),b
 16265  014F18  C17B  F117         	movff	fround@prec,___awmod@dividend
 16266  014F1C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16267  014F1E  EC22  F0BA         	call	___awmod	;wreg free
 16268  014F22  0101               	movlb	1	; () banked
 16269  014F24  90D8               	bcf	status,0,c
 16270  014F26  3717               	rlcf	?___awmod& (0+255),f,b
 16271  014F28  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16272  014F2A  90D8               	bcf	status,0,c
 16273  014F2C  3717               	rlcf	?___awmod& (0+255),f,b
 16274  014F2E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16275  014F30  0EED               	movlw	low __npowers_
 16276  014F32  2517               	addwf	?___awmod& (0+255),w,b
 16277  014F34  6EF6               	movwf	tblptrl,c
 16278  014F36  0EEB               	movlw	high __npowers_
 16279  014F38  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16280  014F3A  6EF7               	movwf	tblptrh,c
 16281  014F3C                     	if	1	;There are 3 active tblptr bytes
 16282  014F3C  6AF8               	clrf	tblptru,c
 16283  014F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 16284  014F40  22F8               	addwfc	tblptru,f,c
 16285  014F42                     	endif
 16286  014F42  0009               	tblrd		*+
 16287  014F44  CFF5 F15A          	movff	tablat,___flmul@a
 16288  014F48  0009               	tblrd		*+
 16289  014F4A  CFF5 F15B          	movff	tablat,___flmul@a+1
 16290  014F4E  0009               	tblrd		*+
 16291  014F50  CFF5 F15C          	movff	tablat,___flmul@a+2
 16292  014F54  000A               	tblrd		*-
 16293  014F56  CFF5 F15D          	movff	tablat,___flmul@a+3
 16294  014F5A  0E00               	movlw	0
 16295  014F5C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16296  014F5E  0E0A               	movlw	10
 16297  014F60  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16298  014F62  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 16299  014F66  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16300  014F68  EC1F  F0B8         	call	___awdiv	;wreg free
 16301  014F6C  0101               	movlb	1	; () banked
 16302  014F6E  90D8               	bcf	status,0,c
 16303  014F70  371D               	rlcf	?___awdiv& (0+255),f,b
 16304  014F72  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16305  014F74  90D8               	bcf	status,0,c
 16306  014F76  371D               	rlcf	?___awdiv& (0+255),f,b
 16307  014F78  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16308  014F7A  0E24               	movlw	36
 16309  014F7C  271D               	addwf	?___awdiv& (0+255),f,b
 16310  014F7E  0E00               	movlw	0
 16311  014F80  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16312  014F82  0EED               	movlw	low __npowers_
 16313  014F84  251D               	addwf	?___awdiv& (0+255),w,b
 16314  014F86  6EF6               	movwf	tblptrl,c
 16315  014F88  0EEB               	movlw	high __npowers_
 16316  014F8A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16317  014F8C  6EF7               	movwf	tblptrh,c
 16318  014F8E                     	if	1	;There are 3 active tblptr bytes
 16319  014F8E  6AF8               	clrf	tblptru,c
 16320  014F90  0E00               	movlw	low (__mediumconst shr (0+16))
 16321  014F92  22F8               	addwfc	tblptru,f,c
 16322  014F94                     	endif
 16323  014F94  0009               	tblrd		*+
 16324  014F96  CFF5 F156          	movff	tablat,___flmul@b
 16325  014F9A  0009               	tblrd		*+
 16326  014F9C  CFF5 F157          	movff	tablat,___flmul@b+1
 16327  014FA0  0009               	tblrd		*+
 16328  014FA2  CFF5 F158          	movff	tablat,___flmul@b+2
 16329  014FA6  000A               	tblrd		*-
 16330  014FA8  CFF5 F159          	movff	tablat,___flmul@b+3
 16331  014FAC  ECD2  F09B         	call	___flmul	;wreg free
 16332  014FB0  C156  F177         	movff	?___flmul,_fround$3858
 16333  014FB4  C157  F178         	movff	?___flmul+1,_fround$3858+1
 16334  014FB8  C158  F179         	movff	?___flmul+2,_fround$3858+2
 16335  014FBC  C159  F17A         	movff	?___flmul+3,_fround$3858+3
 16336                           
 16337                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16338  014FC0  C177  F156         	movff	_fround$3858,___flmul@b
 16339  014FC4  C178  F157         	movff	_fround$3858+1,___flmul@b+1
 16340  014FC8  C179  F158         	movff	_fround$3858+2,___flmul@b+2
 16341  014FCC  C17A  F159         	movff	_fround$3858+3,___flmul@b+3
 16342  014FD0  0E00               	movlw	0
 16343  014FD2  0101               	movlb	1	; () banked
 16344  014FD4  6F5A               	movwf	___flmul@a& (0+255),b
 16345  014FD6  0E00               	movlw	0
 16346  014FD8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16347  014FDA  0E00               	movlw	0
 16348  014FDC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16349  014FDE  0E3F               	movlw	63
 16350  014FE0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16351  014FE2  ECD2  F09B         	call	___flmul	;wreg free
 16352  014FE6  C156  F16F         	movff	?___flmul,?_fround
 16353  014FEA  C157  F170         	movff	?___flmul+1,?_fround+1
 16354  014FEE  C158  F171         	movff	?___flmul+2,?_fround+2
 16355  014FF2  C159  F172         	movff	?___flmul+3,?_fround+3
 16356  014FF6  0012               	return	
 16357  014FF8                     l1337:
 16358                           
 16359                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 16360  014FF8  0101               	movlb	1	; () banked
 16361  014FFA  517B               	movf	fround@prec& (0+255),w,b
 16362  014FFC  0D04               	mullw	4
 16363  014FFE  0EED               	movlw	low __npowers_
 16364  015000  24F3               	addwf	prodl,w,c
 16365  015002  6EF6               	movwf	tblptrl,c
 16366  015004  0EEB               	movlw	high __npowers_
 16367  015006  20F4               	addwfc	prodh,w,c
 16368  015008  6EF7               	movwf	tblptrh,c
 16369  01500A                     	if	1	;There are 3 active tblptr bytes
 16370  01500A  6AF8               	clrf	tblptru,c
 16371  01500C  0E00               	movlw	low (__mediumconst shr (0+16))
 16372  01500E  22F8               	addwfc	tblptru,f,c
 16373  015010                     	endif
 16374  015010  0009               	tblrd		*+
 16375  015012  CFF5 F156          	movff	tablat,___flmul@b
 16376  015016  0009               	tblrd		*+
 16377  015018  CFF5 F157          	movff	tablat,___flmul@b+1
 16378  01501C  0009               	tblrd		*+
 16379  01501E  CFF5 F158          	movff	tablat,___flmul@b+2
 16380  015022  000A               	tblrd		*-
 16381  015024  CFF5 F159          	movff	tablat,___flmul@b+3
 16382  015028  0E00               	movlw	0
 16383  01502A  6F5A               	movwf	___flmul@a& (0+255),b
 16384  01502C  0E00               	movlw	0
 16385  01502E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16386  015030  0E00               	movlw	0
 16387  015032  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16388  015034  0E3F               	movlw	63
 16389  015036  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16390  015038  ECD2  F09B         	call	___flmul	;wreg free
 16391  01503C  C156  F16F         	movff	?___flmul,?_fround
 16392  015040  C157  F170         	movff	?___flmul+1,?_fround+1
 16393  015044  C158  F171         	movff	?___flmul+2,?_fround+2
 16394  015048  C159  F172         	movff	?___flmul+3,?_fround+3
 16395  01504C  0012               	return	
 16396  01504E                     __end_of_fround:
 16397                           	opt stack 0
 16398                           tblptru	equ	0xFF8
 16399                           tblptrh	equ	0xFF7
 16400                           tblptrl	equ	0xFF6
 16401                           tablat	equ	0xFF5
 16402                           prodh	equ	0xFF4
 16403                           prodl	equ	0xFF3
 16404                           intcon	equ	0xFF2
 16405                           indf0	equ	0xFEF
 16406                           postinc0	equ	0xFEE
 16407                           fsr0h	equ	0xFEA
 16408                           fsr0l	equ	0xFE9
 16409                           wreg	equ	0xFE8
 16410                           indf1	equ	0xFE7
 16411                           postdec1	equ	0xFE5
 16412                           plusw1	equ	0xFE3
 16413                           fsr1h	equ	0xFE2
 16414                           fsr1l	equ	0xFE1
 16415                           indf2	equ	0xFDF
 16416                           postinc2	equ	0xFDE
 16417                           postdec2	equ	0xFDD
 16418                           plusw2	equ	0xFDB
 16419                           fsr2h	equ	0xFDA
 16420                           fsr2l	equ	0xFD9
 16421                           status	equ	0xFD8
 16422                           
 16423 ;; *************** function ___flmul *****************
 16424 ;; Defined at:
 16425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16426 ;; Parameters:    Size  Location     Type
 16427 ;;  b               4   86[BANK1 ] unsigned char 
 16428 ;;  a               4   90[BANK1 ] unsigned char 
 16429 ;; Auto vars:     Size  Location     Type
 16430 ;;  prod            4  105[BANK1 ] struct .
 16431 ;;  grs             4  100[BANK1 ] unsigned long 
 16432 ;;  temp            2  109[BANK1 ] struct .
 16433 ;;  bexp            1  104[BANK1 ] unsigned char 
 16434 ;;  aexp            1   99[BANK1 ] unsigned char 
 16435 ;;  sign            1   98[BANK1 ] unsigned char 
 16436 ;; Return value:  Size  Location     Type
 16437 ;;                  4   86[BANK1 ] unsigned char 
 16438 ;; Registers used:
 16439 ;;		wreg, status,2, status,0, prodl, prodh
 16440 ;; Tracked objects:
 16441 ;;		On entry : 0/0
 16442 ;;		On exit  : 0/0
 16443 ;;		Unchanged: 0/0
 16444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16445 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16446 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16447 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16448 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16449 ;;Total ram usage:       25 bytes
 16450 ;; Hardware stack levels used:    1
 16451 ;; Hardware stack levels required when called:   13
 16452 ;; This function calls:
 16453 ;;		Nothing
 16454 ;; This function is called by:
 16455 ;;		_ringBufferLUT
 16456 ;;		_fround
 16457 ;;		_scale
 16458 ;;		_printf
 16459 ;; This function uses a non-reentrant model
 16460 ;;
 16461                           
 16462                           	psect	text34
 16463  0137A4                     __ptext34:
 16464                           	opt stack 0
 16465  0137A4                     ___flmul:
 16466                           	opt stack 13
 16467                           
 16468                           ;incstack = 0
 16469  0137A4  0101               	movlb	1	; () banked
 16470  0137A6  5159               	movf	(___flmul@b+3)& (0+255),w,b
 16471  0137A8  0B80               	andlw	128
 16472  0137AA  6F62               	movwf	___flmul@sign& (0+255),b
 16473  0137AC  5159               	movf	(___flmul@b+3)& (0+255),w,b
 16474  0137AE  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 16475  0137B0  6F68               	movwf	___flmul@bexp& (0+255),b
 16476                           
 16477                           ; BSR set to: 1
 16478  0137B2  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 16479                           
 16480                           ; BSR set to: 1
 16481  0137B4  8168               	bsf	___flmul@bexp& (0+255),0,b
 16482                           
 16483                           ; BSR set to: 1
 16484                           
 16485                           ; BSR set to: 1
 16486  0137B6  5168               	movf	___flmul@bexp& (0+255),w,b
 16487  0137B8  B4D8               	btfsc	status,2,c
 16488  0137BA  D00D               	goto	l2088
 16489                           
 16490                           ; BSR set to: 1
 16491  0137BC  2968               	incf	___flmul@bexp& (0+255),w,b
 16492  0137BE  A4D8               	btfss	status,2,c
 16493  0137C0  D008               	goto	l2089
 16494                           
 16495                           ; BSR set to: 1
 16496  0137C2  0E00               	movlw	0
 16497  0137C4  6F56               	movwf	___flmul@b& (0+255),b
 16498  0137C6  0E00               	movlw	0
 16499  0137C8  6F57               	movwf	(___flmul@b+1)& (0+255),b
 16500  0137CA  0E00               	movlw	0
 16501  0137CC  6F58               	movwf	(___flmul@b+2)& (0+255),b
 16502  0137CE  0E00               	movlw	0
 16503  0137D0  6F59               	movwf	(___flmul@b+3)& (0+255),b
 16504  0137D2                     l2089:
 16505                           
 16506                           ; BSR set to: 1
 16507                           
 16508                           ; BSR set to: 1
 16509  0137D2  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 16510  0137D4  D008               	goto	l2090
 16511  0137D6                     l2088:
 16512                           
 16513                           ; BSR set to: 1
 16514                           
 16515                           ; BSR set to: 1
 16516  0137D6  0E00               	movlw	0
 16517  0137D8  6F56               	movwf	___flmul@b& (0+255),b
 16518  0137DA  0E00               	movlw	0
 16519  0137DC  6F57               	movwf	(___flmul@b+1)& (0+255),b
 16520  0137DE  0E00               	movlw	0
 16521  0137E0  6F58               	movwf	(___flmul@b+2)& (0+255),b
 16522  0137E2  0E00               	movlw	0
 16523  0137E4  6F59               	movwf	(___flmul@b+3)& (0+255),b
 16524  0137E6                     l2090:
 16525                           
 16526                           ; BSR set to: 1
 16527                           
 16528                           ; BSR set to: 1
 16529  0137E6  515D               	movf	(___flmul@a+3)& (0+255),w,b
 16530  0137E8  0B80               	andlw	128
 16531  0137EA  1B62               	xorwf	___flmul@sign& (0+255),f,b
 16532                           
 16533                           ; BSR set to: 1
 16534  0137EC  515D               	movf	(___flmul@a+3)& (0+255),w,b
 16535  0137EE  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 16536  0137F0  6F63               	movwf	___flmul@aexp& (0+255),b
 16537                           
 16538                           ; BSR set to: 1
 16539  0137F2  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 16540                           
 16541                           ; BSR set to: 1
 16542  0137F4  8163               	bsf	___flmul@aexp& (0+255),0,b
 16543                           
 16544                           ; BSR set to: 1
 16545                           
 16546                           ; BSR set to: 1
 16547  0137F6  5163               	movf	___flmul@aexp& (0+255),w,b
 16548  0137F8  B4D8               	btfsc	status,2,c
 16549  0137FA  D00D               	goto	l2092
 16550                           
 16551                           ; BSR set to: 1
 16552  0137FC  2963               	incf	___flmul@aexp& (0+255),w,b
 16553  0137FE  A4D8               	btfss	status,2,c
 16554  013800  D008               	goto	l2093
 16555                           
 16556                           ; BSR set to: 1
 16557  013802  0E00               	movlw	0
 16558  013804  6F5A               	movwf	___flmul@a& (0+255),b
 16559  013806  0E00               	movlw	0
 16560  013808  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16561  01380A  0E00               	movlw	0
 16562  01380C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16563  01380E  0E00               	movlw	0
 16564  013810  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16565  013812                     l2093:
 16566                           
 16567                           ; BSR set to: 1
 16568                           
 16569                           ; BSR set to: 1
 16570  013812  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 16571  013814  D008               	goto	l2094
 16572  013816                     l2092:
 16573                           
 16574                           ; BSR set to: 1
 16575                           
 16576                           ; BSR set to: 1
 16577  013816  0E00               	movlw	0
 16578  013818  6F5A               	movwf	___flmul@a& (0+255),b
 16579  01381A  0E00               	movlw	0
 16580  01381C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16581  01381E  0E00               	movlw	0
 16582  013820  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16583  013822  0E00               	movlw	0
 16584  013824  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16585  013826                     l2094:
 16586                           
 16587                           ; BSR set to: 1
 16588  013826  5163               	movf	___flmul@aexp& (0+255),w,b
 16589  013828  B4D8               	btfsc	status,2,c
 16590  01382A  D003               	goto	u12840
 16591                           
 16592                           ; BSR set to: 1
 16593  01382C  5168               	movf	___flmul@bexp& (0+255),w,b
 16594  01382E  A4D8               	btfss	status,2,c
 16595  013830  D009               	goto	l2095
 16596  013832                     u12840:
 16597                           
 16598                           ; BSR set to: 1
 16599                           
 16600                           ; BSR set to: 1
 16601  013832  0E00               	movlw	0
 16602  013834  6F56               	movwf	?___flmul& (0+255),b
 16603  013836  0E00               	movlw	0
 16604  013838  6F57               	movwf	(?___flmul+1)& (0+255),b
 16605  01383A  0E00               	movlw	0
 16606  01383C  6F58               	movwf	(?___flmul+2)& (0+255),b
 16607  01383E  0E00               	movlw	0
 16608  013840  6F59               	movwf	(?___flmul+3)& (0+255),b
 16609                           
 16610                           ; BSR set to: 1
 16611  013842  0012               	return	
 16612  013844                     l2095:
 16613                           
 16614                           ; BSR set to: 1
 16615                           
 16616                           ; BSR set to: 1
 16617  013844  515C               	movf	(___flmul@a+2)& (0+255),w,b
 16618  013846  0356               	mulwf	___flmul@b& (0+255),b
 16619  013848  CFF3 F16D          	movff	prodl,___flmul@temp
 16620  01384C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16621                           
 16622                           ; BSR set to: 1
 16623  013850  516D               	movf	___flmul@temp& (0+255),w,b
 16624  013852  6F64               	movwf	___flmul@grs& (0+255),b
 16625  013854  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 16626  013856  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 16627  013858  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 16628                           
 16629                           ; BSR set to: 1
 16630  01385A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16631  01385C  6F69               	movwf	___flmul@prod& (0+255),b
 16632  01385E  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 16633  013860  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 16634  013862  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 16635  013864  515B               	movf	(___flmul@a+1)& (0+255),w,b
 16636  013866  0357               	mulwf	(___flmul@b+1)& (0+255),b
 16637  013868  CFF3 F16D          	movff	prodl,___flmul@temp
 16638  01386C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16639                           
 16640                           ; BSR set to: 1
 16641  013870  516D               	movf	___flmul@temp& (0+255),w,b
 16642  013872  2764               	addwf	___flmul@grs& (0+255),f,b
 16643  013874  0E00               	movlw	0
 16644  013876  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16645  013878  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16646  01387A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16647                           
 16648                           ; BSR set to: 1
 16649  01387C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16650  01387E  2769               	addwf	___flmul@prod& (0+255),f,b
 16651  013880  0E00               	movlw	0
 16652  013882  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16653  013884  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16654  013886  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16655  013888  515A               	movf	___flmul@a& (0+255),w,b
 16656  01388A  0358               	mulwf	(___flmul@b+2)& (0+255),b
 16657  01388C  CFF3 F16D          	movff	prodl,___flmul@temp
 16658  013890  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16659                           
 16660                           ; BSR set to: 1
 16661  013894  516D               	movf	___flmul@temp& (0+255),w,b
 16662  013896  2764               	addwf	___flmul@grs& (0+255),f,b
 16663  013898  0E00               	movlw	0
 16664  01389A  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16665  01389C  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16666  01389E  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16667                           
 16668                           ; BSR set to: 1
 16669  0138A0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16670  0138A2  2769               	addwf	___flmul@prod& (0+255),f,b
 16671  0138A4  0E00               	movlw	0
 16672  0138A6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16673  0138A8  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16674  0138AA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16675                           
 16676                           ; BSR set to: 1
 16677  0138AC  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 16678  0138B0  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 16679  0138B4  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 16680  0138B8  6B64               	clrf	___flmul@grs& (0+255),b
 16681                           
 16682                           ; BSR set to: 1
 16683  0138BA  515A               	movf	___flmul@a& (0+255),w,b
 16684  0138BC  0357               	mulwf	(___flmul@b+1)& (0+255),b
 16685  0138BE  CFF3 F16D          	movff	prodl,___flmul@temp
 16686  0138C2  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16687                           
 16688                           ; BSR set to: 1
 16689  0138C6  516D               	movf	___flmul@temp& (0+255),w,b
 16690  0138C8  2764               	addwf	___flmul@grs& (0+255),f,b
 16691  0138CA  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16692  0138CC  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16693  0138CE  0E00               	movlw	0
 16694  0138D0  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16695  0138D2  0E00               	movlw	0
 16696  0138D4  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16697                           
 16698                           ; BSR set to: 1
 16699  0138D6  515B               	movf	(___flmul@a+1)& (0+255),w,b
 16700  0138D8  0356               	mulwf	___flmul@b& (0+255),b
 16701  0138DA  CFF3 F16D          	movff	prodl,___flmul@temp
 16702  0138DE  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16703                           
 16704                           ; BSR set to: 1
 16705  0138E2  516D               	movf	___flmul@temp& (0+255),w,b
 16706  0138E4  2764               	addwf	___flmul@grs& (0+255),f,b
 16707  0138E6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16708  0138E8  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16709  0138EA  0E00               	movlw	0
 16710  0138EC  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16711  0138EE  0E00               	movlw	0
 16712  0138F0  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16713                           
 16714                           ; BSR set to: 1
 16715  0138F2  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 16716  0138F6  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 16717  0138FA  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 16718  0138FE  6B64               	clrf	___flmul@grs& (0+255),b
 16719  013900  515A               	movf	___flmul@a& (0+255),w,b
 16720  013902  0356               	mulwf	___flmul@b& (0+255),b
 16721  013904  CFF3 F16D          	movff	prodl,___flmul@temp
 16722  013908  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16723                           
 16724                           ; BSR set to: 1
 16725  01390C  516D               	movf	___flmul@temp& (0+255),w,b
 16726  01390E  2764               	addwf	___flmul@grs& (0+255),f,b
 16727  013910  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16728  013912  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16729  013914  0E00               	movlw	0
 16730  013916  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16731  013918  0E00               	movlw	0
 16732  01391A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16733                           
 16734                           ; BSR set to: 1
 16735  01391C  515C               	movf	(___flmul@a+2)& (0+255),w,b
 16736  01391E  0357               	mulwf	(___flmul@b+1)& (0+255),b
 16737  013920  CFF3 F16D          	movff	prodl,___flmul@temp
 16738  013924  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16739  013928  516D               	movf	___flmul@temp& (0+255),w,b
 16740  01392A  2769               	addwf	___flmul@prod& (0+255),f,b
 16741  01392C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16742  01392E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16743  013930  0E00               	movlw	0
 16744  013932  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16745  013934  0E00               	movlw	0
 16746  013936  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16747                           
 16748                           ; BSR set to: 1
 16749  013938  515B               	movf	(___flmul@a+1)& (0+255),w,b
 16750  01393A  0358               	mulwf	(___flmul@b+2)& (0+255),b
 16751  01393C  CFF3 F16D          	movff	prodl,___flmul@temp
 16752  013940  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16753                           
 16754                           ; BSR set to: 1
 16755  013944  516D               	movf	___flmul@temp& (0+255),w,b
 16756  013946  2769               	addwf	___flmul@prod& (0+255),f,b
 16757  013948  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16758  01394A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16759  01394C  0E00               	movlw	0
 16760  01394E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16761  013950  0E00               	movlw	0
 16762  013952  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16763  013954  515C               	movf	(___flmul@a+2)& (0+255),w,b
 16764  013956  0358               	mulwf	(___flmul@b+2)& (0+255),b
 16765  013958  CFF3 F16D          	movff	prodl,___flmul@temp
 16766  01395C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16767                           
 16768                           ; BSR set to: 1
 16769  013960  516D               	movf	___flmul@temp& (0+255),w,b
 16770  013962  6F5E               	movwf	??___flmul& (0+255),b
 16771  013964  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16772  013966  6F5F               	movwf	(??___flmul+1)& (0+255),b
 16773  013968  6B60               	clrf	(??___flmul+2)& (0+255),b
 16774  01396A  6B61               	clrf	(??___flmul+3)& (0+255),b
 16775  01396C  C160  F161         	movff	??___flmul+2,??___flmul+3
 16776  013970  C15F  F160         	movff	??___flmul+1,??___flmul+2
 16777  013974  C15E  F15F         	movff	??___flmul,??___flmul+1
 16778  013978  6B5E               	clrf	??___flmul& (0+255),b
 16779  01397A  515E               	movf	??___flmul& (0+255),w,b
 16780  01397C  2769               	addwf	___flmul@prod& (0+255),f,b
 16781  01397E  515F               	movf	(??___flmul+1)& (0+255),w,b
 16782  013980  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16783  013982  5160               	movf	(??___flmul+2)& (0+255),w,b
 16784  013984  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16785  013986  5161               	movf	(??___flmul+3)& (0+255),w,b
 16786  013988  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16787                           
 16788                           ; BSR set to: 1
 16789  01398A  C164  F15E         	movff	___flmul@grs,??___flmul
 16790  01398E  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 16791  013992  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 16792  013996  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 16793  01399A  0E19               	movlw	25
 16794  01399C  D005               	goto	u12850
 16795  01399E                     u12855:
 16796  01399E  90D8               	bcf	status,0,c
 16797  0139A0  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 16798  0139A2  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 16799  0139A4  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 16800  0139A6  335E               	rrcf	??___flmul& (0+255),f,b
 16801  0139A8                     u12850:
 16802  0139A8  2EE8               	decfsz	wreg,f,c
 16803  0139AA  D7F9               	goto	u12855
 16804  0139AC  515E               	movf	??___flmul& (0+255),w,b
 16805  0139AE  2769               	addwf	___flmul@prod& (0+255),f,b
 16806  0139B0  515F               	movf	(??___flmul+1)& (0+255),w,b
 16807  0139B2  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16808  0139B4  5160               	movf	(??___flmul+2)& (0+255),w,b
 16809  0139B6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16810  0139B8  5161               	movf	(??___flmul+3)& (0+255),w,b
 16811  0139BA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16812                           
 16813                           ; BSR set to: 1
 16814  0139BC  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 16815  0139C0  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 16816  0139C4  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 16817  0139C8  6B64               	clrf	___flmul@grs& (0+255),b
 16818                           
 16819                           ; BSR set to: 1
 16820  0139CA  5163               	movf	___flmul@aexp& (0+255),w,b
 16821  0139CC  C168  F15E         	movff	___flmul@bexp,??___flmul
 16822  0139D0  6B5F               	clrf	(??___flmul+1)& (0+255),b
 16823  0139D2  275E               	addwf	??___flmul& (0+255),f,b
 16824  0139D4  0E00               	movlw	0
 16825  0139D6  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 16826  0139D8  0E82               	movlw	130
 16827  0139DA  255E               	addwf	??___flmul& (0+255),w,b
 16828  0139DC  6F6D               	movwf	___flmul@temp& (0+255),b
 16829  0139DE  0EFF               	movlw	255
 16830  0139E0  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 16831  0139E2  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 16832  0139E4  D00F               	goto	l2099
 16833  0139E6                     
 16834                           ; BSR set to: 1
 16835                           
 16836                           ; BSR set to: 1
 16837  0139E6  90D8               	bcf	status,0,c
 16838  0139E8  3769               	rlcf	___flmul@prod& (0+255),f,b
 16839  0139EA  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16840  0139EC  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16841  0139EE  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16842                           
 16843                           ; BSR set to: 1
 16844  0139F0  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 16845                           
 16846                           ; BSR set to: 1
 16847  0139F2  8169               	bsf	___flmul@prod& (0+255),0,b
 16848                           
 16849                           ; BSR set to: 1
 16850  0139F4  90D8               	bcf	status,0,c
 16851  0139F6  3764               	rlcf	___flmul@grs& (0+255),f,b
 16852  0139F8  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16853  0139FA  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16854  0139FC  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16855  0139FE  076D               	decf	___flmul@temp& (0+255),f,b
 16856  013A00  A0D8               	btfss	status,0,c
 16857  013A02  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 16858  013A04                     l2099:
 16859                           
 16860                           ; BSR set to: 1
 16861                           
 16862                           ; BSR set to: 1
 16863  013A04  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 16864  013A06  D7EF               	goto	l2100
 16865                           
 16866                           ; BSR set to: 1
 16867                           
 16868                           ; BSR set to: 1
 16869  013A08  0E00               	movlw	0
 16870  013A0A  6F63               	movwf	___flmul@aexp& (0+255),b
 16871                           
 16872                           ; BSR set to: 1
 16873  013A0C  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 16874  013A0E  D016               	goto	l2106
 16875                           
 16876                           ; BSR set to: 1
 16877  013A10  0EFF               	movlw	255
 16878  013A12  1564               	andwf	___flmul@grs& (0+255),w,b
 16879  013A14  6F5E               	movwf	??___flmul& (0+255),b
 16880  013A16  0EFF               	movlw	255
 16881  013A18  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 16882  013A1A  6F5F               	movwf	(??___flmul+1)& (0+255),b
 16883  013A1C  0EFF               	movlw	255
 16884  013A1E  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 16885  013A20  6F60               	movwf	(??___flmul+2)& (0+255),b
 16886  013A22  0E7F               	movlw	127
 16887  013A24  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 16888  013A26  6F61               	movwf	(??___flmul+3)& (0+255),b
 16889  013A28  515E               	movf	??___flmul& (0+255),w,b
 16890  013A2A  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 16891  013A2C  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 16892  013A2E  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 16893  013A30  A4D8               	btfss	status,2,c
 16894  013A32  D002               	goto	u12900
 16895                           
 16896                           ; BSR set to: 1
 16897                           
 16898                           ; BSR set to: 1
 16899  013A34  A169               	btfss	___flmul@prod& (0+255),0,b
 16900  013A36  D002               	goto	l2106
 16901  013A38                     u12900:
 16902                           
 16903                           ; BSR set to: 1
 16904  013A38  0E01               	movlw	1
 16905  013A3A  6F63               	movwf	___flmul@aexp& (0+255),b
 16906  013A3C                     l2106:
 16907                           
 16908                           ; BSR set to: 1
 16909                           
 16910                           ; BSR set to: 1
 16911                           
 16912                           ; BSR set to: 1
 16913  013A3C  5163               	movf	___flmul@aexp& (0+255),w,b
 16914  013A3E  B4D8               	btfsc	status,2,c
 16915  013A40  D01F               	goto	l2108
 16916                           
 16917                           ; BSR set to: 1
 16918  013A42  0E01               	movlw	1
 16919  013A44  2769               	addwf	___flmul@prod& (0+255),f,b
 16920  013A46  0E00               	movlw	0
 16921  013A48  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16922  013A4A  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16923  013A4C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16924                           
 16925                           ; BSR set to: 1
 16926  013A4E  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 16927  013A50  D017               	goto	l2108
 16928                           
 16929                           ; BSR set to: 1
 16930  013A52  C169  F15E         	movff	___flmul@prod,??___flmul
 16931  013A56  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 16932  013A5A  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 16933  013A5E  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 16934  013A62  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 16935  013A64  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 16936  013A66  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 16937  013A68  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 16938  013A6A  335E               	rrcf	??___flmul& (0+255),f,b
 16939  013A6C  C15E  F169         	movff	??___flmul,___flmul@prod
 16940  013A70  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 16941  013A74  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 16942  013A78  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 16943                           
 16944                           ; BSR set to: 1
 16945  013A7C  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 16946  013A7E  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 16947  013A80                     l2108:
 16948                           
 16949                           ; BSR set to: 1
 16950                           
 16951                           ; BSR set to: 1
 16952                           
 16953                           ; BSR set to: 1
 16954  013A80  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16955  013A82  D00D               	goto	l2109
 16956  013A84  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16957  013A86  E103               	bnz	u12930
 16958  013A88  296D               	incf	___flmul@temp& (0+255),w,b
 16959  013A8A  A0D8               	btfss	status,0,c
 16960  013A8C  D008               	goto	l2109
 16961  013A8E                     u12930:
 16962                           
 16963                           ; BSR set to: 1
 16964  013A8E  0E00               	movlw	0
 16965  013A90  6F69               	movwf	___flmul@prod& (0+255),b
 16966  013A92  0E00               	movlw	0
 16967  013A94  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 16968  013A96  0E80               	movlw	128
 16969  013A98  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 16970  013A9A  0E7F               	movlw	127
 16971  013A9C  D020               	goto	L4
 16972  013A9E                     l2109:
 16973                           
 16974                           ; BSR set to: 1
 16975                           
 16976                           ; BSR set to: 1
 16977  013A9E  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16978  013AA0  D005               	goto	u12940
 16979  013AA2  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16980  013AA4  E10E               	bnz	l2111
 16981  013AA6  056D               	decf	___flmul@temp& (0+255),w,b
 16982  013AA8  B0D8               	btfsc	status,0,c
 16983  013AAA  D00B               	goto	l2111
 16984  013AAC                     u12940:
 16985                           
 16986                           ; BSR set to: 1
 16987  013AAC  0E00               	movlw	0
 16988  013AAE  6F69               	movwf	___flmul@prod& (0+255),b
 16989  013AB0  0E00               	movlw	0
 16990  013AB2  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 16991  013AB4  0E00               	movlw	0
 16992  013AB6  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 16993  013AB8  0E00               	movlw	0
 16994  013ABA  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 16995  013ABC  0E00               	movlw	0
 16996  013ABE  6F62               	movwf	___flmul@sign& (0+255),b
 16997  013AC0  D00F               	goto	l2112
 16998  013AC2                     l2111:
 16999                           
 17000                           ; BSR set to: 1
 17001  013AC2  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 17002                           
 17003                           ; BSR set to: 1
 17004  013AC6  0EFF               	movlw	255
 17005  013AC8  1769               	andwf	___flmul@prod& (0+255),f,b
 17006  013ACA  0EFF               	movlw	255
 17007  013ACC  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 17008  013ACE  0E7F               	movlw	127
 17009  013AD0  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 17010  013AD2  0E00               	movlw	0
 17011  013AD4  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 17012                           
 17013                           ; BSR set to: 1
 17014  013AD6  B168               	btfsc	___flmul@bexp& (0+255),0,b
 17015                           
 17016                           ; BSR set to: 1
 17017  013AD8  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 17018                           
 17019                           ; BSR set to: 1
 17020                           
 17021                           ; BSR set to: 1
 17022  013ADA  90D8               	bcf	status,0,c
 17023  013ADC  3168               	rrcf	___flmul@bexp& (0+255),w,b
 17024  013ADE                     L4:
 17025  013ADE  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 17026  013AE0                     l2112:
 17027                           
 17028                           ; BSR set to: 1
 17029                           
 17030                           ; BSR set to: 1
 17031                           
 17032                           ; BSR set to: 1
 17033  013AE0  5162               	movf	___flmul@sign& (0+255),w,b
 17034  013AE2  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 17035                           
 17036                           ; BSR set to: 1
 17037  013AE4  C169  F156         	movff	___flmul@prod,?___flmul
 17038  013AE8  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 17039  013AEC  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 17040  013AF0  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 17041  013AF4  0012               	return	
 17042  013AF6                     __end_of___flmul:
 17043                           	opt stack 0
 17044                           tblptru	equ	0xFF8
 17045                           tblptrh	equ	0xFF7
 17046                           tblptrl	equ	0xFF6
 17047                           tablat	equ	0xFF5
 17048                           prodh	equ	0xFF4
 17049                           prodl	equ	0xFF3
 17050                           intcon	equ	0xFF2
 17051                           indf0	equ	0xFEF
 17052                           postinc0	equ	0xFEE
 17053                           fsr0h	equ	0xFEA
 17054                           fsr0l	equ	0xFE9
 17055                           wreg	equ	0xFE8
 17056                           indf1	equ	0xFE7
 17057                           postdec1	equ	0xFE5
 17058                           plusw1	equ	0xFE3
 17059                           fsr1h	equ	0xFE2
 17060                           fsr1l	equ	0xFE1
 17061                           indf2	equ	0xFDF
 17062                           postinc2	equ	0xFDE
 17063                           postdec2	equ	0xFDD
 17064                           plusw2	equ	0xFDB
 17065                           fsr2h	equ	0xFDA
 17066                           fsr2l	equ	0xFD9
 17067                           status	equ	0xFD8
 17068                           
 17069 ;; *************** function ___awmod *****************
 17070 ;; Defined at:
 17071 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17072 ;; Parameters:    Size  Location     Type
 17073 ;;  dividend        2   23[BANK1 ] int 
 17074 ;;  divisor         2   25[BANK1 ] int 
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;  sign            1   28[BANK1 ] unsigned char 
 17077 ;;  counter         1   27[BANK1 ] unsigned char 
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  2   23[BANK1 ] int 
 17080 ;; Registers used:
 17081 ;;		wreg, status,2, status,0
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17087 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17088 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17090 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17091 ;;Total ram usage:        6 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:   13
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_fround
 17098 ;;		_scale
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text35
 17103  017444                     __ptext35:
 17104                           	opt stack 0
 17105  017444                     ___awmod:
 17106                           	opt stack 13
 17107                           
 17108                           ; BSR set to: 1
 17109                           ;incstack = 0
 17110  017444  0E00               	movlw	0
 17111  017446  0101               	movlb	1	; () banked
 17112  017448  6F1C               	movwf	___awmod@sign& (0+255),b
 17113                           
 17114                           ; BSR set to: 1
 17115  01744A  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17116  01744C  D006               	goto	l1679
 17117                           
 17118                           ; BSR set to: 1
 17119  01744E  6D17               	negf	___awmod@dividend& (0+255),b
 17120  017450  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17121  017452  B0D8               	btfsc	status,0,c
 17122  017454  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17123                           
 17124                           ; BSR set to: 1
 17125  017456  0E01               	movlw	1
 17126  017458  6F1C               	movwf	___awmod@sign& (0+255),b
 17127  01745A                     l1679:
 17128                           
 17129                           ; BSR set to: 1
 17130                           
 17131                           ; BSR set to: 1
 17132  01745A  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17133  01745C  D004               	goto	l1680
 17134                           
 17135                           ; BSR set to: 1
 17136  01745E  6D19               	negf	___awmod@divisor& (0+255),b
 17137  017460  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 17138  017462  B0D8               	btfsc	status,0,c
 17139  017464  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 17140  017466                     l1680:
 17141                           
 17142                           ; BSR set to: 1
 17143                           
 17144                           ; BSR set to: 1
 17145  017466  5119               	movf	___awmod@divisor& (0+255),w,b
 17146  017468  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17147  01746A  B4D8               	btfsc	status,2,c
 17148  01746C  D018               	goto	l1687
 17149                           
 17150                           ; BSR set to: 1
 17151  01746E  0E01               	movlw	1
 17152  017470  6F1B               	movwf	___awmod@counter& (0+255),b
 17153  017472  D004               	goto	l1682
 17154  017474                     
 17155                           ; BSR set to: 1
 17156                           
 17157                           ; BSR set to: 1
 17158  017474  90D8               	bcf	status,0,c
 17159  017476  3719               	rlcf	___awmod@divisor& (0+255),f,b
 17160  017478  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17161  01747A  2B1B               	incf	___awmod@counter& (0+255),f,b
 17162  01747C                     l1682:
 17163                           
 17164                           ; BSR set to: 1
 17165                           
 17166                           ; BSR set to: 1
 17167  01747C  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17168  01747E  D7FA               	goto	l1683
 17169  017480                     u13070:
 17170                           
 17171                           ; BSR set to: 1
 17172                           
 17173                           ; BSR set to: 1
 17174                           
 17175                           ; BSR set to: 1
 17176  017480  5119               	movf	___awmod@divisor& (0+255),w,b
 17177  017482  5D17               	subwf	___awmod@dividend& (0+255),w,b
 17178  017484  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17179  017486  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17180  017488  A0D8               	btfss	status,0,c
 17181  01748A  D004               	goto	l1686
 17182                           
 17183                           ; BSR set to: 1
 17184  01748C  5119               	movf	___awmod@divisor& (0+255),w,b
 17185  01748E  5F17               	subwf	___awmod@dividend& (0+255),f,b
 17186  017490  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17187  017492  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17188  017494                     l1686:
 17189                           
 17190                           ; BSR set to: 1
 17191                           
 17192                           ; BSR set to: 1
 17193  017494  90D8               	bcf	status,0,c
 17194  017496  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17195  017498  3319               	rrcf	___awmod@divisor& (0+255),f,b
 17196                           
 17197                           ; BSR set to: 1
 17198  01749A  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 17199  01749C  D7F1               	goto	u13070
 17200  01749E                     l1687:
 17201                           
 17202                           ; BSR set to: 1
 17203                           
 17204                           ; BSR set to: 1
 17205                           
 17206                           ; BSR set to: 1
 17207  01749E  511C               	movf	___awmod@sign& (0+255),w,b
 17208  0174A0  B4D8               	btfsc	status,2,c
 17209  0174A2  D004               	goto	l1688
 17210                           
 17211                           ; BSR set to: 1
 17212  0174A4  6D17               	negf	___awmod@dividend& (0+255),b
 17213  0174A6  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17214  0174A8  B0D8               	btfsc	status,0,c
 17215  0174AA  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17216  0174AC                     l1688:
 17217                           
 17218                           ; BSR set to: 1
 17219                           
 17220                           ; BSR set to: 1
 17221  0174AC  C117  F117         	movff	___awmod@dividend,?___awmod
 17222  0174B0  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 17223  0174B4  0012               	return	
 17224  0174B6                     __end_of___awmod:
 17225                           	opt stack 0
 17226                           tblptru	equ	0xFF8
 17227                           tblptrh	equ	0xFF7
 17228                           tblptrl	equ	0xFF6
 17229                           tablat	equ	0xFF5
 17230                           prodh	equ	0xFF4
 17231                           prodl	equ	0xFF3
 17232                           intcon	equ	0xFF2
 17233                           indf0	equ	0xFEF
 17234                           postinc0	equ	0xFEE
 17235                           fsr0h	equ	0xFEA
 17236                           fsr0l	equ	0xFE9
 17237                           wreg	equ	0xFE8
 17238                           indf1	equ	0xFE7
 17239                           postdec1	equ	0xFE5
 17240                           plusw1	equ	0xFE3
 17241                           fsr1h	equ	0xFE2
 17242                           fsr1l	equ	0xFE1
 17243                           indf2	equ	0xFDF
 17244                           postinc2	equ	0xFDE
 17245                           postdec2	equ	0xFDD
 17246                           plusw2	equ	0xFDB
 17247                           fsr2h	equ	0xFDA
 17248                           fsr2l	equ	0xFD9
 17249                           status	equ	0xFD8
 17250                           
 17251 ;; *************** function ___awdiv *****************
 17252 ;; Defined at:
 17253 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 17254 ;; Parameters:    Size  Location     Type
 17255 ;;  dividend        2   29[BANK1 ] int 
 17256 ;;  divisor         2   31[BANK1 ] int 
 17257 ;; Auto vars:     Size  Location     Type
 17258 ;;  quotient        2   35[BANK1 ] int 
 17259 ;;  sign            1   34[BANK1 ] unsigned char 
 17260 ;;  counter         1   33[BANK1 ] unsigned char 
 17261 ;; Return value:  Size  Location     Type
 17262 ;;                  2   29[BANK1 ] int 
 17263 ;; Registers used:
 17264 ;;		wreg, status,2, status,0
 17265 ;; Tracked objects:
 17266 ;;		On entry : 0/0
 17267 ;;		On exit  : 0/0
 17268 ;;		Unchanged: 0/0
 17269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17270 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17271 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17273 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17274 ;;Total ram usage:        8 bytes
 17275 ;; Hardware stack levels used:    1
 17276 ;; Hardware stack levels required when called:   13
 17277 ;; This function calls:
 17278 ;;		Nothing
 17279 ;; This function is called by:
 17280 ;;		_fround
 17281 ;;		_scale
 17282 ;;		_printf
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286                           	psect	text36
 17287  01703E                     __ptext36:
 17288                           	opt stack 0
 17289  01703E                     ___awdiv:
 17290                           	opt stack 13
 17291                           
 17292                           ; BSR set to: 1
 17293                           ;incstack = 0
 17294  01703E  0E00               	movlw	0
 17295  017040  0101               	movlb	1	; () banked
 17296  017042  6F22               	movwf	___awdiv@sign& (0+255),b
 17297                           
 17298                           ; BSR set to: 1
 17299  017044  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17300  017046  D006               	goto	l1666
 17301                           
 17302                           ; BSR set to: 1
 17303  017048  6D1F               	negf	___awdiv@divisor& (0+255),b
 17304  01704A  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17305  01704C  B0D8               	btfsc	status,0,c
 17306  01704E  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17307                           
 17308                           ; BSR set to: 1
 17309  017050  0E01               	movlw	1
 17310  017052  6F22               	movwf	___awdiv@sign& (0+255),b
 17311  017054                     l1666:
 17312                           
 17313                           ; BSR set to: 1
 17314                           
 17315                           ; BSR set to: 1
 17316  017054  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17317  017056  D006               	goto	l1667
 17318                           
 17319                           ; BSR set to: 1
 17320  017058  6D1D               	negf	___awdiv@dividend& (0+255),b
 17321  01705A  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17322  01705C  B0D8               	btfsc	status,0,c
 17323  01705E  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17324                           
 17325                           ; BSR set to: 1
 17326  017060  0E01               	movlw	1
 17327  017062  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 17328  017064                     l1667:
 17329                           
 17330                           ; BSR set to: 1
 17331                           
 17332                           ; BSR set to: 1
 17333  017064  0E00               	movlw	0
 17334  017066  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 17335  017068  0E00               	movlw	0
 17336  01706A  6F23               	movwf	___awdiv@quotient& (0+255),b
 17337                           
 17338                           ; BSR set to: 1
 17339  01706C  511F               	movf	___awdiv@divisor& (0+255),w,b
 17340  01706E  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17341  017070  B4D8               	btfsc	status,2,c
 17342  017072  D01C               	goto	l1674
 17343                           
 17344                           ; BSR set to: 1
 17345  017074  0E01               	movlw	1
 17346  017076  6F21               	movwf	___awdiv@counter& (0+255),b
 17347  017078  D004               	goto	l1669
 17348  01707A                     
 17349                           ; BSR set to: 1
 17350                           
 17351                           ; BSR set to: 1
 17352  01707A  90D8               	bcf	status,0,c
 17353  01707C  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 17354  01707E  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17355  017080  2B21               	incf	___awdiv@counter& (0+255),f,b
 17356  017082                     l1669:
 17357                           
 17358                           ; BSR set to: 1
 17359                           
 17360                           ; BSR set to: 1
 17361  017082  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17362  017084  D7FA               	goto	l1670
 17363  017086                     u13010:
 17364                           
 17365                           ; BSR set to: 1
 17366                           
 17367                           ; BSR set to: 1
 17368                           
 17369                           ; BSR set to: 1
 17370  017086  90D8               	bcf	status,0,c
 17371  017088  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 17372  01708A  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17373                           
 17374                           ; BSR set to: 1
 17375  01708C  511F               	movf	___awdiv@divisor& (0+255),w,b
 17376  01708E  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 17377  017090  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17378  017092  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17379  017094  A0D8               	btfss	status,0,c
 17380  017096  D005               	goto	l1673
 17381                           
 17382                           ; BSR set to: 1
 17383  017098  511F               	movf	___awdiv@divisor& (0+255),w,b
 17384  01709A  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 17385  01709C  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17386  01709E  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17387                           
 17388                           ; BSR set to: 1
 17389  0170A0  8123               	bsf	___awdiv@quotient& (0+255),0,b
 17390  0170A2                     l1673:
 17391                           
 17392                           ; BSR set to: 1
 17393                           
 17394                           ; BSR set to: 1
 17395  0170A2  90D8               	bcf	status,0,c
 17396  0170A4  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17397  0170A6  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 17398                           
 17399                           ; BSR set to: 1
 17400  0170A8  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 17401  0170AA  D7ED               	goto	u13010
 17402  0170AC                     l1674:
 17403                           
 17404                           ; BSR set to: 1
 17405                           
 17406                           ; BSR set to: 1
 17407                           
 17408                           ; BSR set to: 1
 17409  0170AC  5122               	movf	___awdiv@sign& (0+255),w,b
 17410  0170AE  B4D8               	btfsc	status,2,c
 17411  0170B0  D004               	goto	l1675
 17412                           
 17413                           ; BSR set to: 1
 17414  0170B2  6D23               	negf	___awdiv@quotient& (0+255),b
 17415  0170B4  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17416  0170B6  B0D8               	btfsc	status,0,c
 17417  0170B8  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17418  0170BA                     l1675:
 17419                           
 17420                           ; BSR set to: 1
 17421                           
 17422                           ; BSR set to: 1
 17423  0170BA  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 17424  0170BE  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 17425  0170C2  0012               	return	
 17426  0170C4                     __end_of___awdiv:
 17427                           	opt stack 0
 17428                           tblptru	equ	0xFF8
 17429                           tblptrh	equ	0xFF7
 17430                           tblptrl	equ	0xFF6
 17431                           tablat	equ	0xFF5
 17432                           prodh	equ	0xFF4
 17433                           prodl	equ	0xFF3
 17434                           intcon	equ	0xFF2
 17435                           indf0	equ	0xFEF
 17436                           postinc0	equ	0xFEE
 17437                           fsr0h	equ	0xFEA
 17438                           fsr0l	equ	0xFE9
 17439                           wreg	equ	0xFE8
 17440                           indf1	equ	0xFE7
 17441                           postdec1	equ	0xFE5
 17442                           plusw1	equ	0xFE3
 17443                           fsr1h	equ	0xFE2
 17444                           fsr1l	equ	0xFE1
 17445                           indf2	equ	0xFDF
 17446                           postinc2	equ	0xFDE
 17447                           postdec2	equ	0xFDD
 17448                           plusw2	equ	0xFDB
 17449                           fsr2h	equ	0xFDA
 17450                           fsr2l	equ	0xFD9
 17451                           status	equ	0xFD8
 17452                           
 17453 ;; *************** function __tdiv_to_l_ *****************
 17454 ;; Defined at:
 17455 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 17456 ;; Parameters:    Size  Location     Type
 17457 ;;  f1              3   23[BANK1 ] float 
 17458 ;;  f2              3   26[BANK1 ] float 
 17459 ;; Auto vars:     Size  Location     Type
 17460 ;;  quot            4   32[BANK1 ] unsigned long 
 17461 ;;  exp1            1   37[BANK1 ] unsigned char 
 17462 ;;  cntr            1   36[BANK1 ] unsigned char 
 17463 ;; Return value:  Size  Location     Type
 17464 ;;                  4   23[BANK1 ] unsigned long 
 17465 ;; Registers used:
 17466 ;;		wreg, status,2, status,0
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17472 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17473 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17474 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17475 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17476 ;;Total ram usage:       15 bytes
 17477 ;; Hardware stack levels used:    1
 17478 ;; Hardware stack levels required when called:   13
 17479 ;; This function calls:
 17480 ;;		Nothing
 17481 ;; This function is called by:
 17482 ;;		_printf
 17483 ;; This function uses a non-reentrant model
 17484 ;;
 17485                           
 17486                           	psect	text37
 17487  015F8A                     __ptext37:
 17488                           	opt stack 0
 17489  015F8A                     __tdiv_to_l_:
 17490                           	opt stack 14
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;incstack = 0
 17494  015F8A  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 17495  015F8E  0101               	movlb	1	; () banked
 17496  015F90  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17497  015F92  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17498  015F94  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17499  015F96  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17500  015F98  E301               	bnc	u13241
 17501  015F9A  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17502  015F9C                     u13241:
 17503  015F9C  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17504  015F9E  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 17505  015FA0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17506  015FA2  A4D8               	btfss	status,2,c
 17507  015FA4  D009               	goto	l1814
 17508                           
 17509                           ; BSR set to: 1
 17510  015FA6  0E00               	movlw	0
 17511  015FA8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17512  015FAA  0E00               	movlw	0
 17513  015FAC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17514  015FAE  0E00               	movlw	0
 17515  015FB0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17516  015FB2  0E00               	movlw	0
 17517  015FB4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17518                           
 17519                           ; BSR set to: 1
 17520  015FB6  0012               	return	
 17521  015FB8                     l1814:
 17522                           
 17523                           ; BSR set to: 1
 17524                           
 17525                           ; BSR set to: 1
 17526  015FB8  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 17527  015FBC  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17528  015FBE  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17529  015FC0  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17530  015FC2  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17531  015FC4  E301               	bnc	u13261
 17532  015FC6  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17533  015FC8                     u13261:
 17534  015FC8  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17535  015FCA  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17536  015FCC  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17537  015FCE  A4D8               	btfss	status,2,c
 17538  015FD0  D009               	goto	l1816
 17539                           
 17540                           ; BSR set to: 1
 17541  015FD2  0E00               	movlw	0
 17542  015FD4  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17543  015FD6  0E00               	movlw	0
 17544  015FD8  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17545  015FDA  0E00               	movlw	0
 17546  015FDC  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17547  015FDE  0E00               	movlw	0
 17548  015FE0  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17549                           
 17550                           ; BSR set to: 1
 17551  015FE2  0012               	return	
 17552  015FE4                     l1816:
 17553                           
 17554                           ; BSR set to: 1
 17555                           
 17556                           ; BSR set to: 1
 17557  015FE4  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 17558                           
 17559                           ; BSR set to: 1
 17560  015FE6  0EFF               	movlw	255
 17561  015FE8  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 17562  015FEA  0EFF               	movlw	255
 17563  015FEC  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17564  015FEE  0E00               	movlw	0
 17565  015FF0  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17566  015FF2  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 17567                           
 17568                           ; BSR set to: 1
 17569  015FF4  0EFF               	movlw	255
 17570  015FF6  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 17571  015FF8  0EFF               	movlw	255
 17572  015FFA  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 17573  015FFC  0E00               	movlw	0
 17574  015FFE  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 17575                           
 17576                           ; BSR set to: 1
 17577  016000  0E00               	movlw	0
 17578  016002  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 17579  016004  0E00               	movlw	0
 17580  016006  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 17581  016008  0E00               	movlw	0
 17582  01600A  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 17583  01600C  0E00               	movlw	0
 17584  01600E  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 17585                           
 17586                           ; BSR set to: 1
 17587  016010  0E7F               	movlw	127
 17588  016012  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17589                           
 17590                           ; BSR set to: 1
 17591  016014  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17592  016016  0F98               	addlw	152
 17593  016018  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17594                           
 17595                           ; BSR set to: 1
 17596  01601A  0E18               	movlw	24
 17597  01601C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17598  01601E                     l1817:
 17599                           
 17600                           ; BSR set to: 1
 17601  01601E  90D8               	bcf	status,0,c
 17602  016020  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17603  016022  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17604  016024  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17605  016026  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17606                           
 17607                           ; BSR set to: 1
 17608  016028  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17609  01602A  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 17610  01602C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17611  01602E  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17612  016030  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17613  016032  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 17614  016034  A0D8               	btfss	status,0,c
 17615  016036  D007               	goto	l1818
 17616                           
 17617                           ; BSR set to: 1
 17618  016038  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17619  01603A  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 17620  01603C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17621  01603E  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17622  016040  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17623  016042  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17624                           
 17625                           ; BSR set to: 1
 17626  016044  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 17627  016046                     l1818:
 17628                           
 17629                           ; BSR set to: 1
 17630  016046  90D8               	bcf	status,0,c
 17631  016048  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 17632  01604A  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17633  01604C  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17634                           
 17635                           ; BSR set to: 1
 17636  01604E  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 17637  016050  D7E6               	goto	l1817
 17638                           
 17639                           ; BSR set to: 1
 17640                           
 17641                           ; BSR set to: 1
 17642  016052  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 17643  016054  D016               	goto	l1820
 17644                           
 17645                           ; BSR set to: 1
 17646  016056  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17647  016058  0A80               	xorlw	128
 17648  01605A  0F97               	addlw	151
 17649  01605C  B0D8               	btfsc	status,0,c
 17650  01605E  D009               	goto	l1821
 17651                           
 17652                           ; BSR set to: 1
 17653  016060  0E00               	movlw	0
 17654  016062  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17655  016064  0E00               	movlw	0
 17656  016066  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17657  016068  0E00               	movlw	0
 17658  01606A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17659  01606C  0E00               	movlw	0
 17660  01606E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17661                           
 17662                           ; BSR set to: 1
 17663  016070  0012               	return	
 17664  016072                     l1821:
 17665                           
 17666                           ; BSR set to: 1
 17667                           
 17668                           ; BSR set to: 1
 17669                           
 17670                           ; BSR set to: 1
 17671  016072  90D8               	bcf	status,0,c
 17672  016074  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17673  016076  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17674  016078  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17675  01607A  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 17676                           
 17677                           ; BSR set to: 1
 17678  01607C  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 17679  01607E  D7F9               	goto	l1821
 17680                           
 17681                           ; BSR set to: 1
 17682  016080  D015               	goto	u13320
 17683  016082                     l1820:
 17684                           
 17685                           ; BSR set to: 1
 17686                           
 17687                           ; BSR set to: 1
 17688  016082  0E17               	movlw	23
 17689  016084  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 17690  016086  D00F               	goto	l1826
 17691                           
 17692                           ; BSR set to: 1
 17693  016088  0E00               	movlw	0
 17694  01608A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17695  01608C  0E00               	movlw	0
 17696  01608E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17697  016090  0E00               	movlw	0
 17698  016092  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17699  016094  0E00               	movlw	0
 17700  016096  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17701                           
 17702                           ; BSR set to: 1
 17703  016098  0012               	return	
 17704  01609A                     
 17705                           ; BSR set to: 1
 17706                           
 17707                           ; BSR set to: 1
 17708  01609A  90D8               	bcf	status,0,c
 17709  01609C  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17710  01609E  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17711  0160A0  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17712  0160A2  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17713  0160A4  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 17714  0160A6                     l1826:
 17715                           
 17716                           ; BSR set to: 1
 17717                           
 17718                           ; BSR set to: 1
 17719  0160A6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17720  0160A8  A4D8               	btfss	status,2,c
 17721  0160AA  D7F7               	goto	l1827
 17722  0160AC                     u13320:
 17723                           
 17724                           ; BSR set to: 1
 17725                           
 17726                           ; BSR set to: 1
 17727  0160AC  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 17728  0160B0  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 17729  0160B4  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 17730  0160B8  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 17731                           
 17732                           ; BSR set to: 1
 17733  0160BC  0012               	return		;funcret
 17734  0160BE                     __end_of__tdiv_to_l_:
 17735                           	opt stack 0
 17736                           tblptru	equ	0xFF8
 17737                           tblptrh	equ	0xFF7
 17738                           tblptrl	equ	0xFF6
 17739                           tablat	equ	0xFF5
 17740                           prodh	equ	0xFF4
 17741                           prodl	equ	0xFF3
 17742                           intcon	equ	0xFF2
 17743                           indf0	equ	0xFEF
 17744                           postinc0	equ	0xFEE
 17745                           fsr0h	equ	0xFEA
 17746                           fsr0l	equ	0xFE9
 17747                           wreg	equ	0xFE8
 17748                           indf1	equ	0xFE7
 17749                           postdec1	equ	0xFE5
 17750                           plusw1	equ	0xFE3
 17751                           fsr1h	equ	0xFE2
 17752                           fsr1l	equ	0xFE1
 17753                           indf2	equ	0xFDF
 17754                           postinc2	equ	0xFDE
 17755                           postdec2	equ	0xFDD
 17756                           plusw2	equ	0xFDB
 17757                           fsr2h	equ	0xFDA
 17758                           fsr2l	equ	0xFD9
 17759                           status	equ	0xFD8
 17760                           
 17761 ;; *************** function __div_to_l_ *****************
 17762 ;; Defined at:
 17763 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 17764 ;; Parameters:    Size  Location     Type
 17765 ;;  f1              4   23[BANK1 ] unsigned long 
 17766 ;;  f2              4   27[BANK1 ] unsigned long 
 17767 ;; Auto vars:     Size  Location     Type
 17768 ;;  quot            4   31[BANK1 ] unsigned long 
 17769 ;;  exp1            1   36[BANK1 ] unsigned char 
 17770 ;;  cntr            1   35[BANK1 ] unsigned char 
 17771 ;; Return value:  Size  Location     Type
 17772 ;;                  4   23[BANK1 ] unsigned long 
 17773 ;; Registers used:
 17774 ;;		wreg, status,2, status,0
 17775 ;; Tracked objects:
 17776 ;;		On entry : 0/0
 17777 ;;		On exit  : 0/0
 17778 ;;		Unchanged: 0/0
 17779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17780 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17781 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17783 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17784 ;;Total ram usage:       14 bytes
 17785 ;; Hardware stack levels used:    1
 17786 ;; Hardware stack levels required when called:   13
 17787 ;; This function calls:
 17788 ;;		Nothing
 17789 ;; This function is called by:
 17790 ;;		_printf
 17791 ;; This function uses a non-reentrant model
 17792 ;;
 17793                           
 17794                           	psect	text38
 17795  0161F0                     __ptext38:
 17796                           	opt stack 0
 17797  0161F0                     __div_to_l_:
 17798                           	opt stack 14
 17799                           
 17800                           ; BSR set to: 1
 17801                           ;incstack = 0
 17802  0161F0  0101               	movlb	1	; () banked
 17803  0161F2  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 17804  0161F4  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 17805  0161F6  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 17806  0161F8  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 17807  0161FA  A4D8               	btfss	status,2,c
 17808  0161FC  D009               	goto	l1710
 17809                           
 17810                           ; BSR set to: 1
 17811  0161FE  0E00               	movlw	0
 17812  016200  6F17               	movwf	?__div_to_l_& (0+255),b
 17813  016202  0E00               	movlw	0
 17814  016204  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17815  016206  0E00               	movlw	0
 17816  016208  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17817  01620A  0E00               	movlw	0
 17818  01620C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17819                           
 17820                           ; BSR set to: 1
 17821  01620E  0012               	return	
 17822  016210                     l1710:
 17823                           
 17824                           ; BSR set to: 1
 17825                           
 17826                           ; BSR set to: 1
 17827  016210  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 17828  016212  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 17829  016214  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 17830  016216  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 17831  016218  A4D8               	btfss	status,2,c
 17832  01621A  D009               	goto	l1712
 17833                           
 17834                           ; BSR set to: 1
 17835  01621C  0E00               	movlw	0
 17836  01621E  6F17               	movwf	?__div_to_l_& (0+255),b
 17837  016220  0E00               	movlw	0
 17838  016222  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17839  016224  0E00               	movlw	0
 17840  016226  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17841  016228  0E00               	movlw	0
 17842  01622A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17843                           
 17844                           ; BSR set to: 1
 17845  01622C  0012               	return	
 17846  01622E                     l1712:
 17847                           
 17848                           ; BSR set to: 1
 17849                           
 17850                           ; BSR set to: 1
 17851  01622E  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 17852                           
 17853                           ; BSR set to: 1
 17854  016230  0EFF               	movlw	255
 17855  016232  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 17856  016234  0EFF               	movlw	255
 17857  016236  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 17858  016238  0EFF               	movlw	255
 17859  01623A  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 17860  01623C  0E00               	movlw	0
 17861  01623E  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 17862                           
 17863                           ; BSR set to: 1
 17864  016240  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 17865  016242  0EFF               	movlw	255
 17866  016244  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 17867  016246  0EFF               	movlw	255
 17868  016248  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 17869  01624A  0EFF               	movlw	255
 17870  01624C  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 17871  01624E  0E00               	movlw	0
 17872  016250  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 17873                           
 17874                           ; BSR set to: 1
 17875  016252  0E00               	movlw	0
 17876  016254  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 17877  016256  0E00               	movlw	0
 17878  016258  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 17879  01625A  0E00               	movlw	0
 17880  01625C  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 17881  01625E  0E00               	movlw	0
 17882  016260  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 17883                           
 17884                           ; BSR set to: 1
 17885  016262  0E7F               	movlw	127
 17886  016264  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 17887                           
 17888                           ; BSR set to: 1
 17889  016266  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 17890  016268  0FA0               	addlw	160
 17891  01626A  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 17892                           
 17893                           ; BSR set to: 1
 17894  01626C  0E20               	movlw	32
 17895  01626E  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 17896  016270                     
 17897                           ; BSR set to: 1
 17898                           
 17899                           ; BSR set to: 1
 17900  016270  90D8               	bcf	status,0,c
 17901  016272  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 17902  016274  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 17903  016276  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 17904  016278  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 17905                           
 17906                           ; BSR set to: 1
 17907  01627A  511B               	movf	__div_to_l_@f2& (0+255),w,b
 17908  01627C  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 17909  01627E  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17910  016280  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 17911  016282  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17912  016284  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 17913  016286  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17914  016288  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 17915  01628A  A0D8               	btfss	status,0,c
 17916  01628C  D009               	goto	l1714
 17917                           
 17918                           ; BSR set to: 1
 17919  01628E  511B               	movf	__div_to_l_@f2& (0+255),w,b
 17920  016290  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 17921  016292  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17922  016294  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 17923  016296  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17924  016298  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 17925  01629A  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17926  01629C  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 17927                           
 17928                           ; BSR set to: 1
 17929  01629E  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 17930  0162A0                     l1714:
 17931                           
 17932                           ; BSR set to: 1
 17933                           
 17934                           ; BSR set to: 1
 17935  0162A0  90D8               	bcf	status,0,c
 17936  0162A2  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 17937  0162A4  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 17938  0162A6  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 17939  0162A8  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 17940                           
 17941                           ; BSR set to: 1
 17942  0162AA  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 17943  0162AC  D7E1               	goto	l1713
 17944                           
 17945                           ; BSR set to: 1
 17946                           
 17947                           ; BSR set to: 1
 17948  0162AE  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 17949  0162B0  D016               	goto	l1716
 17950                           
 17951                           ; BSR set to: 1
 17952  0162B2  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 17953  0162B4  0A80               	xorlw	128
 17954  0162B6  0F9F               	addlw	159
 17955  0162B8  B0D8               	btfsc	status,0,c
 17956  0162BA  D009               	goto	l1717
 17957                           
 17958                           ; BSR set to: 1
 17959  0162BC  0E00               	movlw	0
 17960  0162BE  6F17               	movwf	?__div_to_l_& (0+255),b
 17961  0162C0  0E00               	movlw	0
 17962  0162C2  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17963  0162C4  0E00               	movlw	0
 17964  0162C6  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17965  0162C8  0E00               	movlw	0
 17966  0162CA  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17967                           
 17968                           ; BSR set to: 1
 17969  0162CC  0012               	return	
 17970  0162CE                     l1717:
 17971                           
 17972                           ; BSR set to: 1
 17973                           
 17974                           ; BSR set to: 1
 17975                           
 17976                           ; BSR set to: 1
 17977  0162CE  90D8               	bcf	status,0,c
 17978  0162D0  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 17979  0162D2  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 17980  0162D4  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 17981  0162D6  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 17982                           
 17983                           ; BSR set to: 1
 17984  0162D8  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 17985  0162DA  D7F9               	goto	l1717
 17986                           
 17987                           ; BSR set to: 1
 17988  0162DC  D015               	goto	u13390
 17989  0162DE                     l1716:
 17990                           
 17991                           ; BSR set to: 1
 17992                           
 17993                           ; BSR set to: 1
 17994  0162DE  0E1F               	movlw	31
 17995  0162E0  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 17996  0162E2  D00F               	goto	l1722
 17997                           
 17998                           ; BSR set to: 1
 17999  0162E4  0E00               	movlw	0
 18000  0162E6  6F17               	movwf	?__div_to_l_& (0+255),b
 18001  0162E8  0E00               	movlw	0
 18002  0162EA  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18003  0162EC  0E00               	movlw	0
 18004  0162EE  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18005  0162F0  0E00               	movlw	0
 18006  0162F2  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18007                           
 18008                           ; BSR set to: 1
 18009  0162F4  0012               	return	
 18010  0162F6                     
 18011                           ; BSR set to: 1
 18012                           
 18013                           ; BSR set to: 1
 18014  0162F6  90D8               	bcf	status,0,c
 18015  0162F8  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 18016  0162FA  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18017  0162FC  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18018  0162FE  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18019  016300  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 18020  016302                     l1722:
 18021                           
 18022                           ; BSR set to: 1
 18023                           
 18024                           ; BSR set to: 1
 18025  016302  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 18026  016304  A4D8               	btfss	status,2,c
 18027  016306  D7F7               	goto	l1723
 18028  016308                     u13390:
 18029                           
 18030                           ; BSR set to: 1
 18031                           
 18032                           ; BSR set to: 1
 18033  016308  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 18034  01630C  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 18035  016310  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 18036  016314  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 18037                           
 18038                           ; BSR set to: 1
 18039  016318  0012               	return		;funcret
 18040  01631A                     __end_of__div_to_l_:
 18041                           	opt stack 0
 18042                           tblptru	equ	0xFF8
 18043                           tblptrh	equ	0xFF7
 18044                           tblptrl	equ	0xFF6
 18045                           tablat	equ	0xFF5
 18046                           prodh	equ	0xFF4
 18047                           prodl	equ	0xFF3
 18048                           intcon	equ	0xFF2
 18049                           indf0	equ	0xFEF
 18050                           postinc0	equ	0xFEE
 18051                           fsr0h	equ	0xFEA
 18052                           fsr0l	equ	0xFE9
 18053                           wreg	equ	0xFE8
 18054                           indf1	equ	0xFE7
 18055                           postdec1	equ	0xFE5
 18056                           plusw1	equ	0xFE3
 18057                           fsr1h	equ	0xFE2
 18058                           fsr1l	equ	0xFE1
 18059                           indf2	equ	0xFDF
 18060                           postinc2	equ	0xFDE
 18061                           postdec2	equ	0xFDD
 18062                           plusw2	equ	0xFDB
 18063                           fsr2h	equ	0xFDA
 18064                           fsr2l	equ	0xFD9
 18065                           status	equ	0xFD8
 18066                           
 18067 ;; *************** function ___xxtofl *****************
 18068 ;; Defined at:
 18069 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;  sign            1    wreg     unsigned char 
 18072 ;;  val             4   23[BANK1 ] long 
 18073 ;; Auto vars:     Size  Location     Type
 18074 ;;  sign            1   31[BANK1 ] unsigned char 
 18075 ;;  arg             4   33[BANK1 ] unsigned long 
 18076 ;;  exp             1   32[BANK1 ] unsigned char 
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  4   23[BANK1 ] unsigned char 
 18079 ;; Registers used:
 18080 ;;		wreg, status,2, status,0
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 0/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18086 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18087 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18088 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18089 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18090 ;;Total ram usage:       14 bytes
 18091 ;; Hardware stack levels used:    1
 18092 ;; Hardware stack levels required when called:   13
 18093 ;; This function calls:
 18094 ;;		Nothing
 18095 ;; This function is called by:
 18096 ;;		_ringBufferLUT
 18097 ;;		_printf
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101                           	psect	text39
 18102  015CE6                     __ptext39:
 18103                           	opt stack 0
 18104  015CE6                     ___xxtofl:
 18105                           	opt stack 14
 18106                           
 18107                           ; BSR set to: 1
 18108                           ;incstack = 0
 18109                           ;___xxtofl@sign stored from wreg
 18110  015CE6  0101               	movlb	1	; () banked
 18111  015CE8  6F1F               	movwf	___xxtofl@sign& (0+255),b
 18112  015CEA  0101               	movlb	1	; () banked
 18113  015CEC  511F               	movf	___xxtofl@sign& (0+255),w,b
 18114  015CEE  A4D8               	btfss	status,2,c
 18115                           
 18116                           ; BSR set to: 1
 18117  015CF0  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18118  015CF2  D01A               	goto	l2190
 18119                           
 18120                           ; BSR set to: 1
 18121  015CF4  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 18122  015CF8  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 18123  015CFC  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 18124  015D00  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 18125  015D04  1F1B               	comf	??___xxtofl& (0+255),f,b
 18126  015D06  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 18127  015D08  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 18128  015D0A  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 18129  015D0C  2B1B               	incf	??___xxtofl& (0+255),f,b
 18130  015D0E  0E00               	movlw	0
 18131  015D10  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 18132  015D12  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 18133  015D14  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 18134  015D16  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 18135  015D1A  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 18136  015D1E  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 18137  015D22  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 18138  015D26  D008               	goto	l2191
 18139  015D28                     l2190:
 18140                           
 18141                           ; BSR set to: 1
 18142  015D28  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 18143  015D2C  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 18144  015D30  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 18145  015D34  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 18146  015D38                     l2191:
 18147                           
 18148                           ; BSR set to: 1
 18149                           
 18150                           ; BSR set to: 1
 18151  015D38  5117               	movf	___xxtofl@val& (0+255),w,b
 18152  015D3A  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 18153  015D3C  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 18154  015D3E  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 18155  015D40  A4D8               	btfss	status,2,c
 18156  015D42  D009               	goto	l2192
 18157                           
 18158                           ; BSR set to: 1
 18159  015D44  0E00               	movlw	0
 18160  015D46  6F17               	movwf	?___xxtofl& (0+255),b
 18161  015D48  0E00               	movlw	0
 18162  015D4A  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 18163  015D4C  0E00               	movlw	0
 18164  015D4E  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 18165  015D50  0E00               	movlw	0
 18166  015D52  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 18167                           
 18168                           ; BSR set to: 1
 18169  015D54  0012               	return	
 18170  015D56                     l2192:
 18171                           
 18172                           ; BSR set to: 1
 18173                           
 18174                           ; BSR set to: 1
 18175  015D56  0E96               	movlw	150
 18176  015D58  6F20               	movwf	___xxtofl@exp& (0+255),b
 18177  015D5A  D006               	goto	l2194
 18178  015D5C                     
 18179                           ; BSR set to: 1
 18180                           
 18181                           ; BSR set to: 1
 18182  015D5C  2B20               	incf	___xxtofl@exp& (0+255),f,b
 18183  015D5E  90D8               	bcf	status,0,c
 18184  015D60  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18185  015D62  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18186  015D64  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18187  015D66  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 18188  015D68                     l2194:
 18189                           
 18190                           ; BSR set to: 1
 18191                           
 18192                           ; BSR set to: 1
 18193  015D68  0E00               	movlw	0
 18194  015D6A  1521               	andwf	___xxtofl@arg& (0+255),w,b
 18195  015D6C  6F1B               	movwf	??___xxtofl& (0+255),b
 18196  015D6E  0E00               	movlw	0
 18197  015D70  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18198  015D72  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 18199  015D74  0E00               	movlw	0
 18200  015D76  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18201  015D78  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 18202  015D7A  0EFE               	movlw	254
 18203  015D7C  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18204  015D7E  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 18205  015D80  511B               	movf	??___xxtofl& (0+255),w,b
 18206  015D82  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18207  015D84  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18208  015D86  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18209  015D88  B4D8               	btfsc	status,2,c
 18210  015D8A  D00D               	goto	l2197
 18211  015D8C  D7E7               	goto	l2195
 18212  015D8E                     
 18213                           ; BSR set to: 1
 18214                           
 18215                           ; BSR set to: 1
 18216  015D8E  2B20               	incf	___xxtofl@exp& (0+255),f,b
 18217                           
 18218                           ; BSR set to: 1
 18219  015D90  0E01               	movlw	1
 18220  015D92  2721               	addwf	___xxtofl@arg& (0+255),f,b
 18221  015D94  0E00               	movlw	0
 18222  015D96  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 18223  015D98  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 18224  015D9A  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 18225                           
 18226                           ; BSR set to: 1
 18227  015D9C  90D8               	bcf	status,0,c
 18228  015D9E  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18229  015DA0  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18230  015DA2  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18231  015DA4  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 18232  015DA6                     l2197:
 18233                           
 18234                           ; BSR set to: 1
 18235  015DA6  0E00               	movlw	0
 18236  015DA8  1521               	andwf	___xxtofl@arg& (0+255),w,b
 18237  015DAA  6F1B               	movwf	??___xxtofl& (0+255),b
 18238  015DAC  0E00               	movlw	0
 18239  015DAE  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18240  015DB0  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 18241  015DB2  0E00               	movlw	0
 18242  015DB4  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18243  015DB6  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 18244  015DB8  0EFF               	movlw	255
 18245  015DBA  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18246  015DBC  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 18247  015DBE  511B               	movf	??___xxtofl& (0+255),w,b
 18248  015DC0  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18249  015DC2  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18250  015DC4  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18251  015DC6  B4D8               	btfsc	status,2,c
 18252  015DC8  D007               	goto	l2200
 18253  015DCA  D7E1               	goto	l2198
 18254  015DCC                     
 18255                           ; BSR set to: 1
 18256                           
 18257                           ; BSR set to: 1
 18258  015DCC  0720               	decf	___xxtofl@exp& (0+255),f,b
 18259  015DCE  90D8               	bcf	status,0,c
 18260  015DD0  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 18261  015DD2  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 18262  015DD4  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 18263  015DD6  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 18264  015DD8                     l2200:
 18265                           
 18266                           ; BSR set to: 1
 18267                           
 18268                           ; BSR set to: 1
 18269  015DD8  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 18270  015DDA  D003               	goto	u13710
 18271                           
 18272                           ; BSR set to: 1
 18273  015DDC  0E02               	movlw	2
 18274  015DDE  6120               	cpfslt	___xxtofl@exp& (0+255),b
 18275  015DE0  D7F5               	goto	l2201
 18276  015DE2                     u13710:
 18277                           
 18278                           ; BSR set to: 1
 18279                           
 18280                           ; BSR set to: 1
 18281  015DE2  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 18282  015DE4  D008               	goto	l2205
 18283                           
 18284                           ; BSR set to: 1
 18285  015DE6  0EFF               	movlw	255
 18286  015DE8  1721               	andwf	___xxtofl@arg& (0+255),f,b
 18287  015DEA  0EFF               	movlw	255
 18288  015DEC  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 18289  015DEE  0E7F               	movlw	127
 18290  015DF0  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 18291  015DF2  0EFF               	movlw	255
 18292  015DF4  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 18293  015DF6                     l2205:
 18294                           
 18295                           ; BSR set to: 1
 18296  015DF6  90D8               	bcf	status,0,c
 18297  015DF8  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 18298  015DFA  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 18299  015DFE  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 18300  015E00  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 18301  015E02  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 18302  015E04  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 18303  015E08  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 18304  015E0A  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 18305  015E0C  6B1B               	clrf	??___xxtofl& (0+255),b
 18306  015E0E  511B               	movf	??___xxtofl& (0+255),w,b
 18307  015E10  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 18308  015E12  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 18309  015E14  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 18310  015E16  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 18311  015E18  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 18312  015E1A  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 18313  015E1C  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 18314                           
 18315                           ; BSR set to: 1
 18316  015E1E  511F               	movf	___xxtofl@sign& (0+255),w,b
 18317  015E20  A4D8               	btfss	status,2,c
 18318                           
 18319                           ; BSR set to: 1
 18320  015E22  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18321  015E24  D001               	goto	l2206
 18322                           
 18323                           ; BSR set to: 1
 18324  015E26  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 18325  015E28                     l2206:
 18326                           
 18327                           ; BSR set to: 1
 18328                           
 18329                           ; BSR set to: 1
 18330  015E28  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 18331  015E2C  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 18332  015E30  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 18333  015E34  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 18334  015E38  0012               	return	
 18335  015E3A                     __end_of___xxtofl:
 18336                           	opt stack 0
 18337                           tblptru	equ	0xFF8
 18338                           tblptrh	equ	0xFF7
 18339                           tblptrl	equ	0xFF6
 18340                           tablat	equ	0xFF5
 18341                           prodh	equ	0xFF4
 18342                           prodl	equ	0xFF3
 18343                           intcon	equ	0xFF2
 18344                           indf0	equ	0xFEF
 18345                           postinc0	equ	0xFEE
 18346                           fsr0h	equ	0xFEA
 18347                           fsr0l	equ	0xFE9
 18348                           wreg	equ	0xFE8
 18349                           indf1	equ	0xFE7
 18350                           postdec1	equ	0xFE5
 18351                           plusw1	equ	0xFE3
 18352                           fsr1h	equ	0xFE2
 18353                           fsr1l	equ	0xFE1
 18354                           indf2	equ	0xFDF
 18355                           postinc2	equ	0xFDE
 18356                           postdec2	equ	0xFDD
 18357                           plusw2	equ	0xFDB
 18358                           fsr2h	equ	0xFDA
 18359                           fsr2l	equ	0xFD9
 18360                           status	equ	0xFD8
 18361                           
 18362 ;; *************** function ___wmul *****************
 18363 ;; Defined at:
 18364 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;  multiplier      2   23[BANK1 ] unsigned int 
 18367 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 18368 ;; Auto vars:     Size  Location     Type
 18369 ;;  product         2   27[BANK1 ] unsigned int 
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  2   23[BANK1 ] unsigned int 
 18372 ;; Registers used:
 18373 ;;		wreg, status,2, status,0, prodl, prodh
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18379 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18380 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18382 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18383 ;;Total ram usage:        6 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; Hardware stack levels required when called:   13
 18386 ;; This function calls:
 18387 ;;		Nothing
 18388 ;; This function is called by:
 18389 ;;		_ringBufferLUT
 18390 ;;		_printf
 18391 ;;		_atoi
 18392 ;; This function uses a non-reentrant model
 18393 ;;
 18394                           
 18395                           	psect	text40
 18396  017E82                     __ptext40:
 18397                           	opt stack 0
 18398  017E82                     ___wmul:
 18399                           	opt stack 14
 18400                           
 18401                           ; BSR set to: 1
 18402                           ;incstack = 0
 18403  017E82  0101               	movlb	1	; () banked
 18404  017E84  5117               	movf	___wmul@multiplier& (0+255),w,b
 18405  017E86  0319               	mulwf	___wmul@multiplicand& (0+255),b
 18406  017E88  CFF3 F11B          	movff	prodl,___wmul@product
 18407  017E8C  CFF4 F11C          	movff	prodh,___wmul@product+1
 18408  017E90  5117               	movf	___wmul@multiplier& (0+255),w,b
 18409  017E92  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 18410  017E94  50F3               	movf	prodl,w,c
 18411  017E96  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 18412  017E98  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 18413  017E9A  0319               	mulwf	___wmul@multiplicand& (0+255),b
 18414  017E9C  50F3               	movf	prodl,w,c
 18415  017E9E  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 18416                           
 18417                           ; BSR set to: 1
 18418  017EA0  C11B  F117         	movff	___wmul@product,?___wmul
 18419  017EA4  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 18420  017EA8  0012               	return	
 18421  017EAA                     __end_of___wmul:
 18422                           	opt stack 0
 18423                           tblptru	equ	0xFF8
 18424                           tblptrh	equ	0xFF7
 18425                           tblptrl	equ	0xFF6
 18426                           tablat	equ	0xFF5
 18427                           prodh	equ	0xFF4
 18428                           prodl	equ	0xFF3
 18429                           intcon	equ	0xFF2
 18430                           indf0	equ	0xFEF
 18431                           postinc0	equ	0xFEE
 18432                           fsr0h	equ	0xFEA
 18433                           fsr0l	equ	0xFE9
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           postdec1	equ	0xFE5
 18437                           plusw1	equ	0xFE3
 18438                           fsr1h	equ	0xFE2
 18439                           fsr1l	equ	0xFE1
 18440                           indf2	equ	0xFDF
 18441                           postinc2	equ	0xFDE
 18442                           postdec2	equ	0xFDD
 18443                           plusw2	equ	0xFDB
 18444                           fsr2h	equ	0xFDA
 18445                           fsr2l	equ	0xFD9
 18446                           status	equ	0xFD8
 18447                           
 18448 ;; *************** function ___llmod *****************
 18449 ;; Defined at:
 18450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18451 ;; Parameters:    Size  Location     Type
 18452 ;;  dividend        4   36[BANK1 ] unsigned long 
 18453 ;;  divisor         4   40[BANK1 ] unsigned long 
 18454 ;; Auto vars:     Size  Location     Type
 18455 ;;  counter         1   44[BANK1 ] unsigned char 
 18456 ;; Return value:  Size  Location     Type
 18457 ;;                  4   36[BANK1 ] unsigned long 
 18458 ;; Registers used:
 18459 ;;		wreg, status,2, status,0
 18460 ;; Tracked objects:
 18461 ;;		On entry : 0/0
 18462 ;;		On exit  : 0/0
 18463 ;;		Unchanged: 0/0
 18464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18465 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18466 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18468 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18469 ;;Total ram usage:        9 bytes
 18470 ;; Hardware stack levels used:    1
 18471 ;; Hardware stack levels required when called:   13
 18472 ;; This function calls:
 18473 ;;		Nothing
 18474 ;; This function is called by:
 18475 ;;		_printf
 18476 ;; This function uses a non-reentrant model
 18477 ;;
 18478                           
 18479                           	psect	text41
 18480  017666                     __ptext41:
 18481                           	opt stack 0
 18482  017666                     ___llmod:
 18483                           	opt stack 14
 18484                           
 18485                           ; BSR set to: 1
 18486                           ;incstack = 0
 18487  017666  0101               	movlb	1	; () banked
 18488  017668  5128               	movf	___llmod@divisor& (0+255),w,b
 18489  01766A  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 18490  01766C  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 18491  01766E  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 18492  017670  B4D8               	btfsc	status,2,c
 18493  017672  D024               	goto	l1915
 18494                           
 18495                           ; BSR set to: 1
 18496  017674  0E01               	movlw	1
 18497  017676  6F2C               	movwf	___llmod@counter& (0+255),b
 18498  017678  D006               	goto	l1910
 18499  01767A                     
 18500                           ; BSR set to: 1
 18501                           
 18502                           ; BSR set to: 1
 18503  01767A  90D8               	bcf	status,0,c
 18504  01767C  3728               	rlcf	___llmod@divisor& (0+255),f,b
 18505  01767E  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 18506  017680  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 18507  017682  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 18508  017684  2B2C               	incf	___llmod@counter& (0+255),f,b
 18509  017686                     l1910:
 18510                           
 18511                           ; BSR set to: 1
 18512                           
 18513                           ; BSR set to: 1
 18514  017686  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 18515  017688  D7F8               	goto	l1911
 18516  01768A                     u13630:
 18517                           
 18518                           ; BSR set to: 1
 18519                           
 18520                           ; BSR set to: 1
 18521                           
 18522                           ; BSR set to: 1
 18523  01768A  5128               	movf	___llmod@divisor& (0+255),w,b
 18524  01768C  5D24               	subwf	___llmod@dividend& (0+255),w,b
 18525  01768E  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18526  017690  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 18527  017692  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18528  017694  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 18529  017696  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18530  017698  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 18531  01769A  A0D8               	btfss	status,0,c
 18532  01769C  D008               	goto	l1914
 18533                           
 18534                           ; BSR set to: 1
 18535  01769E  5128               	movf	___llmod@divisor& (0+255),w,b
 18536  0176A0  5F24               	subwf	___llmod@dividend& (0+255),f,b
 18537  0176A2  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18538  0176A4  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 18539  0176A6  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18540  0176A8  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 18541  0176AA  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18542  0176AC  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 18543  0176AE                     l1914:
 18544                           
 18545                           ; BSR set to: 1
 18546                           
 18547                           ; BSR set to: 1
 18548  0176AE  90D8               	bcf	status,0,c
 18549  0176B0  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 18550  0176B2  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 18551  0176B4  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 18552  0176B6  3328               	rrcf	___llmod@divisor& (0+255),f,b
 18553                           
 18554                           ; BSR set to: 1
 18555  0176B8  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 18556  0176BA  D7E7               	goto	u13630
 18557  0176BC                     l1915:
 18558                           
 18559                           ; BSR set to: 1
 18560                           
 18561                           ; BSR set to: 1
 18562  0176BC  C124  F124         	movff	___llmod@dividend,?___llmod
 18563  0176C0  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 18564  0176C4  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 18565  0176C8  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 18566                           
 18567                           ; BSR set to: 1
 18568  0176CC  0012               	return		;funcret
 18569  0176CE                     __end_of___llmod:
 18570                           	opt stack 0
 18571                           tblptru	equ	0xFF8
 18572                           tblptrh	equ	0xFF7
 18573                           tblptrl	equ	0xFF6
 18574                           tablat	equ	0xFF5
 18575                           prodh	equ	0xFF4
 18576                           prodl	equ	0xFF3
 18577                           intcon	equ	0xFF2
 18578                           indf0	equ	0xFEF
 18579                           postinc0	equ	0xFEE
 18580                           fsr0h	equ	0xFEA
 18581                           fsr0l	equ	0xFE9
 18582                           wreg	equ	0xFE8
 18583                           indf1	equ	0xFE7
 18584                           postdec1	equ	0xFE5
 18585                           plusw1	equ	0xFE3
 18586                           fsr1h	equ	0xFE2
 18587                           fsr1l	equ	0xFE1
 18588                           indf2	equ	0xFDF
 18589                           postinc2	equ	0xFDE
 18590                           postdec2	equ	0xFDD
 18591                           plusw2	equ	0xFDB
 18592                           fsr2h	equ	0xFDA
 18593                           fsr2l	equ	0xFD9
 18594                           status	equ	0xFD8
 18595                           
 18596 ;; *************** function ___lldiv *****************
 18597 ;; Defined at:
 18598 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18599 ;; Parameters:    Size  Location     Type
 18600 ;;  dividend        4   23[BANK1 ] unsigned long 
 18601 ;;  divisor         4   27[BANK1 ] unsigned long 
 18602 ;; Auto vars:     Size  Location     Type
 18603 ;;  quotient        4   31[BANK1 ] unsigned long 
 18604 ;;  counter         1   35[BANK1 ] unsigned char 
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  4   23[BANK1 ] unsigned long 
 18607 ;; Registers used:
 18608 ;;		wreg, status,2, status,0
 18609 ;; Tracked objects:
 18610 ;;		On entry : 0/0
 18611 ;;		On exit  : 0/0
 18612 ;;		Unchanged: 0/0
 18613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18614 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18615 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18617 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18618 ;;Total ram usage:       13 bytes
 18619 ;; Hardware stack levels used:    1
 18620 ;; Hardware stack levels required when called:   13
 18621 ;; This function calls:
 18622 ;;		Nothing
 18623 ;; This function is called by:
 18624 ;;		_printf
 18625 ;; This function uses a non-reentrant model
 18626 ;;
 18627                           
 18628                           	psect	text42
 18629  0170C4                     __ptext42:
 18630                           	opt stack 0
 18631  0170C4                     ___lldiv:
 18632                           	opt stack 14
 18633                           
 18634                           ; BSR set to: 1
 18635                           ;incstack = 0
 18636  0170C4  0E00               	movlw	0
 18637  0170C6  0101               	movlb	1	; () banked
 18638  0170C8  6F1F               	movwf	___lldiv@quotient& (0+255),b
 18639  0170CA  0E00               	movlw	0
 18640  0170CC  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 18641  0170CE  0E00               	movlw	0
 18642  0170D0  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 18643  0170D2  0E00               	movlw	0
 18644  0170D4  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 18645                           
 18646                           ; BSR set to: 1
 18647  0170D6  511B               	movf	___lldiv@divisor& (0+255),w,b
 18648  0170D8  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 18649  0170DA  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 18650  0170DC  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 18651  0170DE  B4D8               	btfsc	status,2,c
 18652  0170E0  D02A               	goto	l1905
 18653                           
 18654                           ; BSR set to: 1
 18655  0170E2  0E01               	movlw	1
 18656  0170E4  6F23               	movwf	___lldiv@counter& (0+255),b
 18657  0170E6  D006               	goto	l1900
 18658  0170E8                     
 18659                           ; BSR set to: 1
 18660                           
 18661                           ; BSR set to: 1
 18662  0170E8  90D8               	bcf	status,0,c
 18663  0170EA  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 18664  0170EC  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 18665  0170EE  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 18666  0170F0  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 18667  0170F2  2B23               	incf	___lldiv@counter& (0+255),f,b
 18668  0170F4                     l1900:
 18669                           
 18670                           ; BSR set to: 1
 18671                           
 18672                           ; BSR set to: 1
 18673  0170F4  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 18674  0170F6  D7F8               	goto	l1901
 18675  0170F8                     u13600:
 18676                           
 18677                           ; BSR set to: 1
 18678                           
 18679                           ; BSR set to: 1
 18680                           
 18681                           ; BSR set to: 1
 18682  0170F8  90D8               	bcf	status,0,c
 18683  0170FA  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 18684  0170FC  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 18685  0170FE  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 18686  017100  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 18687                           
 18688                           ; BSR set to: 1
 18689  017102  511B               	movf	___lldiv@divisor& (0+255),w,b
 18690  017104  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 18691  017106  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18692  017108  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 18693  01710A  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18694  01710C  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 18695  01710E  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18696  017110  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 18697  017112  A0D8               	btfss	status,0,c
 18698  017114  D009               	goto	l1904
 18699                           
 18700                           ; BSR set to: 1
 18701  017116  511B               	movf	___lldiv@divisor& (0+255),w,b
 18702  017118  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 18703  01711A  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18704  01711C  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 18705  01711E  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18706  017120  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 18707  017122  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18708  017124  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 18709                           
 18710                           ; BSR set to: 1
 18711  017126  811F               	bsf	___lldiv@quotient& (0+255),0,b
 18712  017128                     l1904:
 18713                           
 18714                           ; BSR set to: 1
 18715                           
 18716                           ; BSR set to: 1
 18717  017128  90D8               	bcf	status,0,c
 18718  01712A  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 18719  01712C  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 18720  01712E  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 18721  017130  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 18722                           
 18723                           ; BSR set to: 1
 18724  017132  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 18725  017134  D7E1               	goto	u13600
 18726  017136                     l1905:
 18727                           
 18728                           ; BSR set to: 1
 18729                           
 18730                           ; BSR set to: 1
 18731  017136  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 18732  01713A  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 18733  01713E  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 18734  017142  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 18735                           
 18736                           ; BSR set to: 1
 18737  017146  0012               	return		;funcret
 18738  017148                     __end_of___lldiv:
 18739                           	opt stack 0
 18740                           tblptru	equ	0xFF8
 18741                           tblptrh	equ	0xFF7
 18742                           tblptrl	equ	0xFF6
 18743                           tablat	equ	0xFF5
 18744                           prodh	equ	0xFF4
 18745                           prodl	equ	0xFF3
 18746                           intcon	equ	0xFF2
 18747                           indf0	equ	0xFEF
 18748                           postinc0	equ	0xFEE
 18749                           fsr0h	equ	0xFEA
 18750                           fsr0l	equ	0xFE9
 18751                           wreg	equ	0xFE8
 18752                           indf1	equ	0xFE7
 18753                           postdec1	equ	0xFE5
 18754                           plusw1	equ	0xFE3
 18755                           fsr1h	equ	0xFE2
 18756                           fsr1l	equ	0xFE1
 18757                           indf2	equ	0xFDF
 18758                           postinc2	equ	0xFDE
 18759                           postdec2	equ	0xFDD
 18760                           plusw2	equ	0xFDB
 18761                           fsr2h	equ	0xFDA
 18762                           fsr2l	equ	0xFD9
 18763                           status	equ	0xFD8
 18764                           
 18765 ;; *************** function ___fltol *****************
 18766 ;; Defined at:
 18767 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 18768 ;; Parameters:    Size  Location     Type
 18769 ;;  f1              4  111[BANK1 ] unsigned long 
 18770 ;; Auto vars:     Size  Location     Type
 18771 ;;  exp1            1  120[BANK1 ] unsigned char 
 18772 ;;  sign1           1  119[BANK1 ] unsigned char 
 18773 ;; Return value:  Size  Location     Type
 18774 ;;                  4  111[BANK1 ] long 
 18775 ;; Registers used:
 18776 ;;		wreg, status,2, status,0
 18777 ;; Tracked objects:
 18778 ;;		On entry : 0/0
 18779 ;;		On exit  : 0/0
 18780 ;;		Unchanged: 0/0
 18781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18782 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18783 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18784 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18785 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18786 ;;Total ram usage:       10 bytes
 18787 ;; Hardware stack levels used:    1
 18788 ;; Hardware stack levels required when called:   13
 18789 ;; This function calls:
 18790 ;;		Nothing
 18791 ;; This function is called by:
 18792 ;;		_printf
 18793 ;; This function uses a non-reentrant model
 18794 ;;
 18795                           
 18796                           	psect	text43
 18797  0169B2                     __ptext43:
 18798                           	opt stack 0
 18799  0169B2                     ___fltol:
 18800                           	opt stack 14
 18801                           
 18802                           ; BSR set to: 1
 18803                           ;incstack = 0
 18804  0169B2  0101               	movlb	1	; () banked
 18805  0169B4  3571               	rlcf	(___fltol@f1+2)& (0+255),w,b
 18806  0169B6  3572               	rlcf	(___fltol@f1+3)& (0+255),w,b
 18807  0169B8  6F78               	movwf	___fltol@exp1& (0+255),b
 18808  0169BA  5178               	movf	___fltol@exp1& (0+255),w,b
 18809  0169BC  A4D8               	btfss	status,2,c
 18810  0169BE  D009               	goto	l1757
 18811                           
 18812                           ; BSR set to: 1
 18813  0169C0  0E00               	movlw	0
 18814  0169C2  6F6F               	movwf	?___fltol& (0+255),b
 18815  0169C4  0E00               	movlw	0
 18816  0169C6  6F70               	movwf	(?___fltol+1)& (0+255),b
 18817  0169C8  0E00               	movlw	0
 18818  0169CA  6F71               	movwf	(?___fltol+2)& (0+255),b
 18819  0169CC  0E00               	movlw	0
 18820  0169CE  6F72               	movwf	(?___fltol+3)& (0+255),b
 18821                           
 18822                           ; BSR set to: 1
 18823  0169D0  0012               	return	
 18824  0169D2                     l1757:
 18825                           
 18826                           ; BSR set to: 1
 18827                           
 18828                           ; BSR set to: 1
 18829  0169D2  C16F  F173         	movff	___fltol@f1,??___fltol
 18830  0169D6  C170  F174         	movff	___fltol@f1+1,??___fltol+1
 18831  0169DA  C171  F175         	movff	___fltol@f1+2,??___fltol+2
 18832  0169DE  C172  F176         	movff	___fltol@f1+3,??___fltol+3
 18833  0169E2  0E20               	movlw	32
 18834  0169E4  D005               	goto	u13530
 18835  0169E6                     u13535:
 18836  0169E6  90D8               	bcf	status,0,c
 18837  0169E8  3376               	rrcf	(??___fltol+3)& (0+255),f,b
 18838  0169EA  3375               	rrcf	(??___fltol+2)& (0+255),f,b
 18839  0169EC  3374               	rrcf	(??___fltol+1)& (0+255),f,b
 18840  0169EE  3373               	rrcf	??___fltol& (0+255),f,b
 18841  0169F0                     u13530:
 18842  0169F0  2EE8               	decfsz	wreg,f,c
 18843  0169F2  D7F9               	goto	u13535
 18844  0169F4  5173               	movf	??___fltol& (0+255),w,b
 18845  0169F6  6F77               	movwf	___fltol@sign1& (0+255),b
 18846                           
 18847                           ; BSR set to: 1
 18848  0169F8  8F71               	bsf	(___fltol@f1+2)& (0+255),7,b
 18849                           
 18850                           ; BSR set to: 1
 18851  0169FA  0EFF               	movlw	255
 18852  0169FC  176F               	andwf	___fltol@f1& (0+255),f,b
 18853  0169FE  0EFF               	movlw	255
 18854  016A00  1770               	andwf	(___fltol@f1+1)& (0+255),f,b
 18855  016A02  0EFF               	movlw	255
 18856  016A04  1771               	andwf	(___fltol@f1+2)& (0+255),f,b
 18857  016A06  0E00               	movlw	0
 18858  016A08  1772               	andwf	(___fltol@f1+3)& (0+255),f,b
 18859                           
 18860                           ; BSR set to: 1
 18861  016A0A  0E96               	movlw	150
 18862  016A0C  5F78               	subwf	___fltol@exp1& (0+255),f,b
 18863                           
 18864                           ; BSR set to: 1
 18865  016A0E  AF78               	btfss	___fltol@exp1& (0+255),7,b
 18866  016A10  D016               	goto	l1759
 18867                           
 18868                           ; BSR set to: 1
 18869  016A12  5178               	movf	___fltol@exp1& (0+255),w,b
 18870  016A14  0A80               	xorlw	128
 18871  016A16  0F97               	addlw	151
 18872  016A18  B0D8               	btfsc	status,0,c
 18873  016A1A  D009               	goto	l1760
 18874                           
 18875                           ; BSR set to: 1
 18876  016A1C  0E00               	movlw	0
 18877  016A1E  6F6F               	movwf	?___fltol& (0+255),b
 18878  016A20  0E00               	movlw	0
 18879  016A22  6F70               	movwf	(?___fltol+1)& (0+255),b
 18880  016A24  0E00               	movlw	0
 18881  016A26  6F71               	movwf	(?___fltol+2)& (0+255),b
 18882  016A28  0E00               	movlw	0
 18883  016A2A  6F72               	movwf	(?___fltol+3)& (0+255),b
 18884                           
 18885                           ; BSR set to: 1
 18886  016A2C  0012               	return	
 18887  016A2E                     l1760:
 18888                           
 18889                           ; BSR set to: 1
 18890                           
 18891                           ; BSR set to: 1
 18892                           
 18893                           ; BSR set to: 1
 18894  016A2E  90D8               	bcf	status,0,c
 18895  016A30  3372               	rrcf	(___fltol@f1+3)& (0+255),f,b
 18896  016A32  3371               	rrcf	(___fltol@f1+2)& (0+255),f,b
 18897  016A34  3370               	rrcf	(___fltol@f1+1)& (0+255),f,b
 18898  016A36  336F               	rrcf	___fltol@f1& (0+255),f,b
 18899                           
 18900                           ; BSR set to: 1
 18901  016A38  3F78               	incfsz	___fltol@exp1& (0+255),f,b
 18902  016A3A  D7F9               	goto	l1760
 18903                           
 18904                           ; BSR set to: 1
 18905  016A3C  D015               	goto	u13570
 18906  016A3E                     l1759:
 18907                           
 18908                           ; BSR set to: 1
 18909                           
 18910                           ; BSR set to: 1
 18911  016A3E  0E1F               	movlw	31
 18912  016A40  6578               	cpfsgt	___fltol@exp1& (0+255),b
 18913  016A42  D00F               	goto	l1765
 18914                           
 18915                           ; BSR set to: 1
 18916  016A44  0E00               	movlw	0
 18917  016A46  6F6F               	movwf	?___fltol& (0+255),b
 18918  016A48  0E00               	movlw	0
 18919  016A4A  6F70               	movwf	(?___fltol+1)& (0+255),b
 18920  016A4C  0E00               	movlw	0
 18921  016A4E  6F71               	movwf	(?___fltol+2)& (0+255),b
 18922  016A50  0E00               	movlw	0
 18923  016A52  6F72               	movwf	(?___fltol+3)& (0+255),b
 18924                           
 18925                           ; BSR set to: 1
 18926  016A54  0012               	return	
 18927  016A56                     
 18928                           ; BSR set to: 1
 18929                           
 18930                           ; BSR set to: 1
 18931  016A56  90D8               	bcf	status,0,c
 18932  016A58  376F               	rlcf	___fltol@f1& (0+255),f,b
 18933  016A5A  3770               	rlcf	(___fltol@f1+1)& (0+255),f,b
 18934  016A5C  3771               	rlcf	(___fltol@f1+2)& (0+255),f,b
 18935  016A5E  3772               	rlcf	(___fltol@f1+3)& (0+255),f,b
 18936  016A60  0778               	decf	___fltol@exp1& (0+255),f,b
 18937  016A62                     l1765:
 18938                           
 18939                           ; BSR set to: 1
 18940                           
 18941                           ; BSR set to: 1
 18942  016A62  5178               	movf	___fltol@exp1& (0+255),w,b
 18943  016A64  A4D8               	btfss	status,2,c
 18944  016A66  D7F7               	goto	l1766
 18945  016A68                     u13570:
 18946                           
 18947                           ; BSR set to: 1
 18948                           
 18949                           ; BSR set to: 1
 18950                           
 18951                           ; BSR set to: 1
 18952  016A68  5177               	movf	___fltol@sign1& (0+255),w,b
 18953  016A6A  B4D8               	btfsc	status,2,c
 18954  016A6C  D008               	goto	l1768
 18955                           
 18956                           ; BSR set to: 1
 18957  016A6E  1F72               	comf	(___fltol@f1+3)& (0+255),f,b
 18958  016A70  1F71               	comf	(___fltol@f1+2)& (0+255),f,b
 18959  016A72  1F70               	comf	(___fltol@f1+1)& (0+255),f,b
 18960  016A74  6D6F               	negf	___fltol@f1& (0+255),b
 18961  016A76  0E00               	movlw	0
 18962  016A78  2370               	addwfc	(___fltol@f1+1)& (0+255),f,b
 18963  016A7A  2371               	addwfc	(___fltol@f1+2)& (0+255),f,b
 18964  016A7C  2372               	addwfc	(___fltol@f1+3)& (0+255),f,b
 18965  016A7E                     l1768:
 18966                           
 18967                           ; BSR set to: 1
 18968                           
 18969                           ; BSR set to: 1
 18970  016A7E  C16F  F16F         	movff	___fltol@f1,?___fltol
 18971  016A82  C170  F170         	movff	___fltol@f1+1,?___fltol+1
 18972  016A86  C171  F171         	movff	___fltol@f1+2,?___fltol+2
 18973  016A8A  C172  F172         	movff	___fltol@f1+3,?___fltol+3
 18974  016A8E  0012               	return	
 18975  016A90                     __end_of___fltol:
 18976                           	opt stack 0
 18977                           tblptru	equ	0xFF8
 18978                           tblptrh	equ	0xFF7
 18979                           tblptrl	equ	0xFF6
 18980                           tablat	equ	0xFF5
 18981                           prodh	equ	0xFF4
 18982                           prodl	equ	0xFF3
 18983                           intcon	equ	0xFF2
 18984                           indf0	equ	0xFEF
 18985                           postinc0	equ	0xFEE
 18986                           fsr0h	equ	0xFEA
 18987                           fsr0l	equ	0xFE9
 18988                           wreg	equ	0xFE8
 18989                           indf1	equ	0xFE7
 18990                           postdec1	equ	0xFE5
 18991                           plusw1	equ	0xFE3
 18992                           fsr1h	equ	0xFE2
 18993                           fsr1l	equ	0xFE1
 18994                           indf2	equ	0xFDF
 18995                           postinc2	equ	0xFDE
 18996                           postdec2	equ	0xFDD
 18997                           plusw2	equ	0xFDB
 18998                           fsr2h	equ	0xFDA
 18999                           fsr2l	equ	0xFD9
 19000                           status	equ	0xFD8
 19001                           
 19002 ;; *************** function ___flsub *****************
 19003 ;; Defined at:
 19004 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19005 ;; Parameters:    Size  Location     Type
 19006 ;;  b               4   61[BANK1 ] long 
 19007 ;;  a               4   65[BANK1 ] long 
 19008 ;; Auto vars:     Size  Location     Type
 19009 ;;		None
 19010 ;; Return value:  Size  Location     Type
 19011 ;;                  4   61[BANK1 ] long 
 19012 ;; Registers used:
 19013 ;;		wreg, status,2, status,0, cstack
 19014 ;; Tracked objects:
 19015 ;;		On entry : 0/0
 19016 ;;		On exit  : 0/0
 19017 ;;		Unchanged: 0/0
 19018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19019 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19022 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19023 ;;Total ram usage:        8 bytes
 19024 ;; Hardware stack levels used:    1
 19025 ;; Hardware stack levels required when called:   14
 19026 ;; This function calls:
 19027 ;;		___fladd
 19028 ;; This function is called by:
 19029 ;;		_printf
 19030 ;; This function uses a non-reentrant model
 19031 ;;
 19032                           
 19033                           	psect	text44
 19034  017ABA                     __ptext44:
 19035                           	opt stack 0
 19036  017ABA                     ___flsub:
 19037                           	opt stack 13
 19038                           
 19039                           ; BSR set to: 1
 19040                           ;incstack = 0
 19041  017ABA  0E00               	movlw	0
 19042  017ABC  0101               	movlb	1	; () banked
 19043  017ABE  1B41               	xorwf	___flsub@a& (0+255),f,b
 19044  017AC0  0E00               	movlw	0
 19045  017AC2  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 19046  017AC4  0E00               	movlw	0
 19047  017AC6  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 19048  017AC8  0E80               	movlw	128
 19049  017ACA  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 19050                           
 19051                           ; BSR set to: 1
 19052  017ACC  C13D  F129         	movff	___flsub@b,___fladd@b
 19053  017AD0  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 19054  017AD4  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 19055  017AD8  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 19056  017ADC  C141  F12D         	movff	___flsub@a,___fladd@a
 19057  017AE0  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 19058  017AE4  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 19059  017AE8  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 19060  017AEC  EC23  F09F         	call	___fladd	;wreg free
 19061  017AF0  C129  F13D         	movff	?___fladd,?___flsub
 19062  017AF4  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 19063  017AF8  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 19064  017AFC  C12C  F140         	movff	?___fladd+3,?___flsub+3
 19065  017B00  0012               	return	
 19066  017B02                     __end_of___flsub:
 19067                           	opt stack 0
 19068                           tblptru	equ	0xFF8
 19069                           tblptrh	equ	0xFF7
 19070                           tblptrl	equ	0xFF6
 19071                           tablat	equ	0xFF5
 19072                           prodh	equ	0xFF4
 19073                           prodl	equ	0xFF3
 19074                           intcon	equ	0xFF2
 19075                           indf0	equ	0xFEF
 19076                           postinc0	equ	0xFEE
 19077                           fsr0h	equ	0xFEA
 19078                           fsr0l	equ	0xFE9
 19079                           wreg	equ	0xFE8
 19080                           indf1	equ	0xFE7
 19081                           postdec1	equ	0xFE5
 19082                           plusw1	equ	0xFE3
 19083                           fsr1h	equ	0xFE2
 19084                           fsr1l	equ	0xFE1
 19085                           indf2	equ	0xFDF
 19086                           postinc2	equ	0xFDE
 19087                           postdec2	equ	0xFDD
 19088                           plusw2	equ	0xFDB
 19089                           fsr2h	equ	0xFDA
 19090                           fsr2l	equ	0xFD9
 19091                           status	equ	0xFD8
 19092                           
 19093 ;; *************** function ___fladd *****************
 19094 ;; Defined at:
 19095 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19096 ;; Parameters:    Size  Location     Type
 19097 ;;  b               4   41[BANK1 ] long 
 19098 ;;  a               4   45[BANK1 ] long 
 19099 ;; Auto vars:     Size  Location     Type
 19100 ;;  grs             1   60[BANK1 ] unsigned char 
 19101 ;;  bexp            1   59[BANK1 ] unsigned char 
 19102 ;;  aexp            1   58[BANK1 ] unsigned char 
 19103 ;;  signs           1   57[BANK1 ] unsigned char 
 19104 ;; Return value:  Size  Location     Type
 19105 ;;                  4   41[BANK1 ] unsigned char 
 19106 ;; Registers used:
 19107 ;;		wreg, status,2, status,0
 19108 ;; Tracked objects:
 19109 ;;		On entry : 0/0
 19110 ;;		On exit  : 0/0
 19111 ;;		Unchanged: 0/0
 19112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19113 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19114 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19115 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19116 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19117 ;;Total ram usage:       20 bytes
 19118 ;; Hardware stack levels used:    1
 19119 ;; Hardware stack levels required when called:   13
 19120 ;; This function calls:
 19121 ;;		Nothing
 19122 ;; This function is called by:
 19123 ;;		_ringBufferLUT
 19124 ;;		_printf
 19125 ;;		___flsub
 19126 ;; This function uses a non-reentrant model
 19127 ;;
 19128                           
 19129                           	psect	text45
 19130  013E46                     __ptext45:
 19131                           	opt stack 0
 19132  013E46                     ___fladd:
 19133                           	opt stack 13
 19134                           
 19135                           ;incstack = 0
 19136  013E46  0101               	movlb	1	; () banked
 19137  013E48  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19138  013E4A  0B80               	andlw	128
 19139  013E4C  6F39               	movwf	___fladd@signs& (0+255),b
 19140  013E4E  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19141  013E50  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 19142  013E52  6F3B               	movwf	___fladd@bexp& (0+255),b
 19143                           
 19144                           ; BSR set to: 1
 19145  013E54  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 19146                           
 19147                           ; BSR set to: 1
 19148  013E56  813B               	bsf	___fladd@bexp& (0+255),0,b
 19149                           
 19150                           ; BSR set to: 1
 19151                           
 19152                           ; BSR set to: 1
 19153  013E58  513B               	movf	___fladd@bexp& (0+255),w,b
 19154  013E5A  B4D8               	btfsc	status,2,c
 19155  013E5C  D00D               	goto	l1997
 19156                           
 19157                           ; BSR set to: 1
 19158  013E5E  293B               	incf	___fladd@bexp& (0+255),w,b
 19159  013E60  A4D8               	btfss	status,2,c
 19160  013E62  D008               	goto	l1998
 19161                           
 19162                           ; BSR set to: 1
 19163  013E64  0E00               	movlw	0
 19164  013E66  6F29               	movwf	___fladd@b& (0+255),b
 19165  013E68  0E00               	movlw	0
 19166  013E6A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19167  013E6C  0E00               	movlw	0
 19168  013E6E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19169  013E70  0E00               	movlw	0
 19170  013E72  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19171  013E74                     l1998:
 19172                           
 19173                           ; BSR set to: 1
 19174                           
 19175                           ; BSR set to: 1
 19176  013E74  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 19177  013E76  D006               	goto	L5
 19178  013E78                     l1997:
 19179                           
 19180                           ; BSR set to: 1
 19181                           
 19182                           ; BSR set to: 1
 19183  013E78  0E00               	movlw	0
 19184  013E7A  6F29               	movwf	___fladd@b& (0+255),b
 19185  013E7C  0E00               	movlw	0
 19186  013E7E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19187  013E80  0E00               	movlw	0
 19188  013E82  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19189  013E84                     L5:
 19190  013E84  0E00               	movlw	0
 19191  013E86  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19192                           
 19193                           ; BSR set to: 1
 19194                           
 19195                           ; BSR set to: 1
 19196  013E88  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19197  013E8A  0B80               	andlw	128
 19198  013E8C  6F3A               	movwf	___fladd@aexp& (0+255),b
 19199                           
 19200                           ; BSR set to: 1
 19201  013E8E  5139               	movf	___fladd@signs& (0+255),w,b
 19202  013E90  193A               	xorwf	___fladd@aexp& (0+255),w,b
 19203  013E92  A4D8               	btfss	status,2,c
 19204                           
 19205                           ; BSR set to: 1
 19206  013E94  8D39               	bsf	___fladd@signs& (0+255),6,b
 19207                           
 19208                           ; BSR set to: 1
 19209                           
 19210                           ; BSR set to: 1
 19211  013E96  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19212  013E98  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 19213  013E9A  6F3A               	movwf	___fladd@aexp& (0+255),b
 19214                           
 19215                           ; BSR set to: 1
 19216  013E9C  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 19217                           
 19218                           ; BSR set to: 1
 19219  013E9E  813A               	bsf	___fladd@aexp& (0+255),0,b
 19220                           
 19221                           ; BSR set to: 1
 19222                           
 19223                           ; BSR set to: 1
 19224  013EA0  513A               	movf	___fladd@aexp& (0+255),w,b
 19225  013EA2  B4D8               	btfsc	status,2,c
 19226  013EA4  D00D               	goto	l2002
 19227                           
 19228                           ; BSR set to: 1
 19229  013EA6  293A               	incf	___fladd@aexp& (0+255),w,b
 19230  013EA8  A4D8               	btfss	status,2,c
 19231  013EAA  D008               	goto	l2003
 19232                           
 19233                           ; BSR set to: 1
 19234  013EAC  0E00               	movlw	0
 19235  013EAE  6F2D               	movwf	___fladd@a& (0+255),b
 19236  013EB0  0E00               	movlw	0
 19237  013EB2  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 19238  013EB4  0E00               	movlw	0
 19239  013EB6  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 19240  013EB8  0E00               	movlw	0
 19241  013EBA  6F30               	movwf	(___fladd@a+3)& (0+255),b
 19242  013EBC                     l2003:
 19243                           
 19244                           ; BSR set to: 1
 19245                           
 19246                           ; BSR set to: 1
 19247  013EBC  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 19248  013EBE  D006               	goto	L6
 19249  013EC0                     l2002:
 19250                           
 19251                           ; BSR set to: 1
 19252                           
 19253                           ; BSR set to: 1
 19254  013EC0  0E00               	movlw	0
 19255  013EC2  6F2D               	movwf	___fladd@a& (0+255),b
 19256  013EC4  0E00               	movlw	0
 19257  013EC6  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 19258  013EC8  0E00               	movlw	0
 19259  013ECA  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 19260  013ECC                     L6:
 19261  013ECC  0E00               	movlw	0
 19262  013ECE  6F30               	movwf	(___fladd@a+3)& (0+255),b
 19263                           
 19264                           ; BSR set to: 1
 19265                           
 19266                           ; BSR set to: 1
 19267  013ED0  513B               	movf	___fladd@bexp& (0+255),w,b
 19268  013ED2  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 19269  013ED4  B0D8               	btfsc	status,0,c
 19270  013ED6  D022               	goto	l2005
 19271                           
 19272                           ; BSR set to: 1
 19273  013ED8  AD39               	btfss	___fladd@signs& (0+255),6,b
 19274  013EDA  D002               	goto	l2006
 19275                           
 19276                           ; BSR set to: 1
 19277  013EDC  0E80               	movlw	128
 19278  013EDE  1B39               	xorwf	___fladd@signs& (0+255),f,b
 19279  013EE0                     l2006:
 19280                           
 19281                           ; BSR set to: 1
 19282                           
 19283                           ; BSR set to: 1
 19284  013EE0  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 19285                           
 19286                           ; BSR set to: 1
 19287  013EE4  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 19288                           
 19289                           ; BSR set to: 1
 19290  013EE8  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 19291                           
 19292                           ; BSR set to: 1
 19293  013EEC  C129  F13C         	movff	___fladd@b,___fladd@grs
 19294                           
 19295                           ; BSR set to: 1
 19296  013EF0  C12D  F129         	movff	___fladd@a,___fladd@b
 19297                           
 19298                           ; BSR set to: 1
 19299  013EF4  C13C  F12D         	movff	___fladd@grs,___fladd@a
 19300                           
 19301                           ; BSR set to: 1
 19302  013EF8  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 19303                           
 19304                           ; BSR set to: 1
 19305  013EFC  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 19306                           
 19307                           ; BSR set to: 1
 19308  013F00  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 19309                           
 19310                           ; BSR set to: 1
 19311  013F04  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 19312                           
 19313                           ; BSR set to: 1
 19314  013F08  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 19315                           
 19316                           ; BSR set to: 1
 19317  013F0C  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 19318                           
 19319                           ; BSR set to: 1
 19320  013F10  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 19321                           
 19322                           ; BSR set to: 1
 19323  013F14  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 19324                           
 19325                           ; BSR set to: 1
 19326  013F18  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 19327  013F1C                     l2005:
 19328                           
 19329                           ; BSR set to: 1
 19330                           
 19331                           ; BSR set to: 1
 19332  013F1C  0E00               	movlw	0
 19333  013F1E  6F3C               	movwf	___fladd@grs& (0+255),b
 19334                           
 19335                           ; BSR set to: 1
 19336  013F20  513B               	movf	___fladd@bexp& (0+255),w,b
 19337  013F22  6F31               	movwf	??___fladd& (0+255),b
 19338  013F24  6B32               	clrf	(??___fladd+1)& (0+255),b
 19339  013F26  1F31               	comf	??___fladd& (0+255),f,b
 19340  013F28  1F32               	comf	(??___fladd+1)& (0+255),f,b
 19341  013F2A  4B31               	infsnz	??___fladd& (0+255),f,b
 19342  013F2C  2B32               	incf	(??___fladd+1)& (0+255),f,b
 19343  013F2E  513A               	movf	___fladd@aexp& (0+255),w,b
 19344  013F30  6F33               	movwf	(??___fladd+2)& (0+255),b
 19345  013F32  6B34               	clrf	(??___fladd+3)& (0+255),b
 19346  013F34  5131               	movf	??___fladd& (0+255),w,b
 19347  013F36  2733               	addwf	(??___fladd+2)& (0+255),f,b
 19348  013F38  5132               	movf	(??___fladd+1)& (0+255),w,b
 19349  013F3A  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 19350  013F3C  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 19351  013F3E  D02C               	goto	l2009
 19352  013F40  5134               	movf	(??___fladd+3)& (0+255),w,b
 19353  013F42  E104               	bnz	u12470
 19354  013F44  0E1A               	movlw	26
 19355  013F46  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 19356  013F48  A0D8               	btfss	status,0,c
 19357  013F4A  D026               	goto	l2009
 19358  013F4C                     u12470:
 19359                           
 19360                           ; BSR set to: 1
 19361  013F4C  5129               	movf	___fladd@b& (0+255),w,b
 19362  013F4E  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 19363  013F50  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 19364  013F52  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 19365  013F54  B4D8               	btfsc	status,2,c
 19366  013F56  D002               	goto	u12480
 19367  013F58  0E01               	movlw	1
 19368  013F5A  D001               	goto	u12490
 19369  013F5C                     u12480:
 19370  013F5C  0E00               	movlw	0
 19371  013F5E                     u12490:
 19372  013F5E  6F3C               	movwf	___fladd@grs& (0+255),b
 19373                           
 19374                           ; BSR set to: 1
 19375  013F60  0E00               	movlw	0
 19376  013F62  6F29               	movwf	___fladd@b& (0+255),b
 19377  013F64  0E00               	movlw	0
 19378  013F66  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19379  013F68  0E00               	movlw	0
 19380  013F6A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19381  013F6C  0E00               	movlw	0
 19382  013F6E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19383                           
 19384                           ; BSR set to: 1
 19385  013F70  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 19386  013F74  D015               	goto	u12520
 19387  013F76                     l2010:
 19388                           
 19389                           ; BSR set to: 1
 19390  013F76  A13C               	btfss	___fladd@grs& (0+255),0,b
 19391  013F78  D005               	goto	l2011
 19392                           
 19393                           ; BSR set to: 1
 19394  013F7A  90D8               	bcf	status,0,c
 19395  013F7C  313C               	rrcf	___fladd@grs& (0+255),w,b
 19396  013F7E  0901               	iorlw	1
 19397  013F80  6F3C               	movwf	___fladd@grs& (0+255),b
 19398  013F82  D002               	goto	l2012
 19399  013F84                     l2011:
 19400                           
 19401                           ; BSR set to: 1
 19402                           
 19403                           ; BSR set to: 1
 19404  013F84  90D8               	bcf	status,0,c
 19405  013F86  333C               	rrcf	___fladd@grs& (0+255),f,b
 19406  013F88                     l2012:
 19407                           
 19408                           ; BSR set to: 1
 19409                           
 19410                           ; BSR set to: 1
 19411  013F88  B129               	btfsc	___fladd@b& (0+255),0,b
 19412                           
 19413                           ; BSR set to: 1
 19414  013F8A  8F3C               	bsf	___fladd@grs& (0+255),7,b
 19415                           
 19416                           ; BSR set to: 1
 19417                           
 19418                           ; BSR set to: 1
 19419  013F8C  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 19420  013F8E  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 19421  013F90  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 19422  013F92  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 19423  013F94  3329               	rrcf	___fladd@b& (0+255),f,b
 19424                           
 19425                           ; BSR set to: 1
 19426  013F96  2B3B               	incf	___fladd@bexp& (0+255),f,b
 19427  013F98                     l2009:
 19428                           
 19429                           ; BSR set to: 1
 19430  013F98  513A               	movf	___fladd@aexp& (0+255),w,b
 19431  013F9A  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 19432  013F9C  A0D8               	btfss	status,0,c
 19433  013F9E  D7EB               	goto	l2010
 19434  013FA0                     u12520:
 19435                           
 19436                           ; BSR set to: 1
 19437                           
 19438                           ; BSR set to: 1
 19439  013FA0  BD39               	btfsc	___fladd@signs& (0+255),6,b
 19440  013FA2  D029               	goto	l2015
 19441                           
 19442                           ; BSR set to: 1
 19443  013FA4  513B               	movf	___fladd@bexp& (0+255),w,b
 19444  013FA6  A4D8               	btfss	status,2,c
 19445  013FA8  D009               	goto	l2016
 19446                           
 19447                           ; BSR set to: 1
 19448  013FAA  0E00               	movlw	0
 19449  013FAC  6F29               	movwf	?___fladd& (0+255),b
 19450  013FAE  0E00               	movlw	0
 19451  013FB0  6F2A               	movwf	(?___fladd+1)& (0+255),b
 19452  013FB2  0E00               	movlw	0
 19453  013FB4  6F2B               	movwf	(?___fladd+2)& (0+255),b
 19454  013FB6  0E00               	movlw	0
 19455  013FB8  6F2C               	movwf	(?___fladd+3)& (0+255),b
 19456                           
 19457                           ; BSR set to: 1
 19458  013FBA  0012               	return	
 19459  013FBC                     l2016:
 19460                           
 19461                           ; BSR set to: 1
 19462                           
 19463                           ; BSR set to: 1
 19464  013FBC  512D               	movf	___fladd@a& (0+255),w,b
 19465  013FBE  2729               	addwf	___fladd@b& (0+255),f,b
 19466  013FC0  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19467  013FC2  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 19468  013FC4  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19469  013FC6  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 19470  013FC8  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19471  013FCA  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 19472                           
 19473                           ; BSR set to: 1
 19474  013FCC  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 19475  013FCE  D083               	goto	u12650
 19476                           
 19477                           ; BSR set to: 1
 19478  013FD0  A13C               	btfss	___fladd@grs& (0+255),0,b
 19479  013FD2  D006               	goto	l2019
 19480                           
 19481                           ; BSR set to: 1
 19482  013FD4  90D8               	bcf	status,0,c
 19483  013FD6  333C               	rrcf	___fladd@grs& (0+255),f,b
 19484  013FD8  513C               	movf	___fladd@grs& (0+255),w,b
 19485  013FDA  0901               	iorlw	1
 19486  013FDC  6F3C               	movwf	___fladd@grs& (0+255),b
 19487  013FDE  D002               	goto	l2020
 19488  013FE0                     l2019:
 19489                           
 19490                           ; BSR set to: 1
 19491                           
 19492                           ; BSR set to: 1
 19493  013FE0  90D8               	bcf	status,0,c
 19494  013FE2  333C               	rrcf	___fladd@grs& (0+255),f,b
 19495  013FE4                     l2020:
 19496                           
 19497                           ; BSR set to: 1
 19498                           
 19499                           ; BSR set to: 1
 19500  013FE4  B129               	btfsc	___fladd@b& (0+255),0,b
 19501                           
 19502                           ; BSR set to: 1
 19503  013FE6  8F3C               	bsf	___fladd@grs& (0+255),7,b
 19504                           
 19505                           ; BSR set to: 1
 19506                           
 19507                           ; BSR set to: 1
 19508  013FE8  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 19509  013FEA  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 19510  013FEC  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 19511  013FEE  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 19512  013FF0  3329               	rrcf	___fladd@b& (0+255),f,b
 19513                           
 19514                           ; BSR set to: 1
 19515  013FF2  2B3B               	incf	___fladd@bexp& (0+255),f,b
 19516                           
 19517                           ; BSR set to: 1
 19518  013FF4  D070               	goto	u12650
 19519  013FF6                     l2015:
 19520                           
 19521                           ; BSR set to: 1
 19522                           
 19523                           ; BSR set to: 1
 19524  013FF6  512D               	movf	___fladd@a& (0+255),w,b
 19525  013FF8  5D29               	subwf	___fladd@b& (0+255),w,b
 19526  013FFA  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19527  013FFC  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 19528  013FFE  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19529  014000  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 19530  014002  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19531  014004  0A80               	xorlw	128
 19532  014006  6F31               	movwf	??___fladd& (0+255),b
 19533  014008  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19534  01400A  0A80               	xorlw	128
 19535  01400C  5931               	subwfb	??___fladd& (0+255),w,b
 19536  01400E  B0D8               	btfsc	status,0,c
 19537  014010  D036               	goto	l2023
 19538                           
 19539                           ; BSR set to: 1
 19540  014012  C129  F131         	movff	___fladd@b,??___fladd
 19541  014016  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 19542  01401A  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 19543  01401E  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 19544  014022  1F31               	comf	??___fladd& (0+255),f,b
 19545  014024  1F32               	comf	(??___fladd+1)& (0+255),f,b
 19546  014026  1F33               	comf	(??___fladd+2)& (0+255),f,b
 19547  014028  1F34               	comf	(??___fladd+3)& (0+255),f,b
 19548  01402A  2B31               	incf	??___fladd& (0+255),f,b
 19549  01402C  0E00               	movlw	0
 19550  01402E  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 19551  014030  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 19552  014032  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 19553  014034  512D               	movf	___fladd@a& (0+255),w,b
 19554  014036  2531               	addwf	??___fladd& (0+255),w,b
 19555  014038  6F35               	movwf	(??___fladd+4)& (0+255),b
 19556  01403A  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19557  01403C  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 19558  01403E  6F36               	movwf	(??___fladd+5)& (0+255),b
 19559  014040  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19560  014042  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 19561  014044  6F37               	movwf	(??___fladd+6)& (0+255),b
 19562  014046  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19563  014048  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 19564  01404A  6F38               	movwf	(??___fladd+7)& (0+255),b
 19565  01404C  0EFF               	movlw	255
 19566  01404E  2535               	addwf	(??___fladd+4)& (0+255),w,b
 19567  014050  6F29               	movwf	___fladd@b& (0+255),b
 19568  014052  0EFF               	movlw	255
 19569  014054  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 19570  014056  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19571  014058  0EFF               	movlw	255
 19572  01405A  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 19573  01405C  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19574  01405E  0EFF               	movlw	255
 19575  014060  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 19576  014062  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19577  014064  0E80               	movlw	128
 19578  014066  1B39               	xorwf	___fladd@signs& (0+255),f,b
 19579                           
 19580                           ; BSR set to: 1
 19581  014068  6D3C               	negf	___fladd@grs& (0+255),b
 19582                           
 19583                           ; BSR set to: 1
 19584  01406A  513C               	movf	___fladd@grs& (0+255),w,b
 19585  01406C  A4D8               	btfss	status,2,c
 19586  01406E  D00F               	goto	l2025
 19587                           
 19588                           ; BSR set to: 1
 19589  014070  0E01               	movlw	1
 19590  014072  2729               	addwf	___fladd@b& (0+255),f,b
 19591  014074  0E00               	movlw	0
 19592  014076  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 19593  014078  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 19594  01407A  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 19595                           
 19596                           ; BSR set to: 1
 19597  01407C  D008               	goto	l2025
 19598  01407E                     l2023:
 19599                           
 19600                           ; BSR set to: 1
 19601                           
 19602                           ; BSR set to: 1
 19603  01407E  512D               	movf	___fladd@a& (0+255),w,b
 19604  014080  5F29               	subwf	___fladd@b& (0+255),f,b
 19605  014082  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19606  014084  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 19607  014086  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19608  014088  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 19609  01408A  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19610  01408C  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 19611  01408E                     l2025:
 19612                           
 19613                           ; BSR set to: 1
 19614  01408E  5129               	movf	___fladd@b& (0+255),w,b
 19615  014090  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 19616  014092  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 19617  014094  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 19618  014096  A4D8               	btfss	status,2,c
 19619  014098  D01C               	goto	l2032
 19620                           
 19621                           ; BSR set to: 1
 19622  01409A  513C               	movf	___fladd@grs& (0+255),w,b
 19623  01409C  A4D8               	btfss	status,2,c
 19624  01409E  D019               	goto	l2032
 19625                           
 19626                           ; BSR set to: 1
 19627  0140A0  0E00               	movlw	0
 19628  0140A2  6F29               	movwf	?___fladd& (0+255),b
 19629  0140A4  0E00               	movlw	0
 19630  0140A6  6F2A               	movwf	(?___fladd+1)& (0+255),b
 19631  0140A8  0E00               	movlw	0
 19632  0140AA  6F2B               	movwf	(?___fladd+2)& (0+255),b
 19633  0140AC  0E00               	movlw	0
 19634  0140AE  6F2C               	movwf	(?___fladd+3)& (0+255),b
 19635                           
 19636                           ; BSR set to: 1
 19637  0140B0  0012               	return	
 19638  0140B2                     
 19639                           ; BSR set to: 1
 19640                           
 19641                           ; BSR set to: 1
 19642  0140B2  90D8               	bcf	status,0,c
 19643  0140B4  3729               	rlcf	___fladd@b& (0+255),f,b
 19644  0140B6  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 19645  0140B8  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 19646  0140BA  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 19647                           
 19648                           ; BSR set to: 1
 19649  0140BC  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 19650                           
 19651                           ; BSR set to: 1
 19652  0140BE  8129               	bsf	___fladd@b& (0+255),0,b
 19653                           
 19654                           ; BSR set to: 1
 19655                           
 19656                           ; BSR set to: 1
 19657  0140C0  A13C               	btfss	___fladd@grs& (0+255),0,b
 19658  0140C2  D002               	goto	l2030
 19659                           
 19660                           ; BSR set to: 1
 19661  0140C4  80D8               	bsf	status,0,c
 19662  0140C6  D001               	goto	L7
 19663  0140C8                     l2030:
 19664                           
 19665                           ; BSR set to: 1
 19666                           
 19667                           ; BSR set to: 1
 19668  0140C8  90D8               	bcf	status,0,c
 19669  0140CA                     L7:
 19670  0140CA  373C               	rlcf	___fladd@grs& (0+255),f,b
 19671                           
 19672                           ; BSR set to: 1
 19673                           
 19674                           ; BSR set to: 1
 19675  0140CC  513B               	movf	___fladd@bexp& (0+255),w,b
 19676  0140CE  A4D8               	btfss	status,2,c
 19677                           
 19678                           ; BSR set to: 1
 19679  0140D0  073B               	decf	___fladd@bexp& (0+255),f,b
 19680  0140D2                     l2032:
 19681                           
 19682                           ; BSR set to: 1
 19683                           
 19684                           ; BSR set to: 1
 19685                           
 19686                           ; BSR set to: 1
 19687  0140D2  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 19688  0140D4  D7EE               	goto	l2028
 19689  0140D6                     u12650:
 19690                           
 19691                           ; BSR set to: 1
 19692                           
 19693                           ; BSR set to: 1
 19694                           
 19695                           ; BSR set to: 1
 19696  0140D6  0E00               	movlw	0
 19697  0140D8  6F3A               	movwf	___fladd@aexp& (0+255),b
 19698                           
 19699                           ; BSR set to: 1
 19700  0140DA  AF3C               	btfss	___fladd@grs& (0+255),7,b
 19701  0140DC  D00A               	goto	l2037
 19702                           
 19703                           ; BSR set to: 1
 19704  0140DE  C13C  F131         	movff	___fladd@grs,??___fladd
 19705  0140E2  0E7F               	movlw	127
 19706  0140E4  1731               	andwf	??___fladd& (0+255),f,b
 19707  0140E6  A4D8               	btfss	status,2,c
 19708  0140E8  D002               	goto	u12680
 19709                           
 19710                           ; BSR set to: 1
 19711                           
 19712                           ; BSR set to: 1
 19713  0140EA  A129               	btfss	___fladd@b& (0+255),0,b
 19714  0140EC  D002               	goto	l2037
 19715  0140EE                     u12680:
 19716                           
 19717                           ; BSR set to: 1
 19718  0140EE  0E01               	movlw	1
 19719  0140F0  6F3A               	movwf	___fladd@aexp& (0+255),b
 19720  0140F2                     l2037:
 19721                           
 19722                           ; BSR set to: 1
 19723                           
 19724                           ; BSR set to: 1
 19725                           
 19726                           ; BSR set to: 1
 19727  0140F2  513A               	movf	___fladd@aexp& (0+255),w,b
 19728  0140F4  B4D8               	btfsc	status,2,c
 19729  0140F6  D020               	goto	l2040
 19730                           
 19731                           ; BSR set to: 1
 19732  0140F8  0E01               	movlw	1
 19733  0140FA  2729               	addwf	___fladd@b& (0+255),f,b
 19734  0140FC  0E00               	movlw	0
 19735  0140FE  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 19736  014100  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 19737  014102  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 19738                           
 19739                           ; BSR set to: 1
 19740  014104  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 19741  014106  D018               	goto	l2040
 19742                           
 19743                           ; BSR set to: 1
 19744  014108  C129  F131         	movff	___fladd@b,??___fladd
 19745  01410C  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 19746  014110  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 19747  014114  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 19748  014118  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 19749  01411A  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 19750  01411C  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 19751  01411E  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 19752  014120  3331               	rrcf	??___fladd& (0+255),f,b
 19753  014122  C131  F129         	movff	??___fladd,___fladd@b
 19754  014126  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 19755  01412A  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 19756  01412E  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 19757  014132  293B               	incf	___fladd@bexp& (0+255),w,b
 19758  014134  A4D8               	btfss	status,2,c
 19759                           
 19760                           ; BSR set to: 1
 19761  014136  2B3B               	incf	___fladd@bexp& (0+255),f,b
 19762  014138                     l2040:
 19763                           
 19764                           ; BSR set to: 1
 19765                           
 19766                           ; BSR set to: 1
 19767                           
 19768                           ; BSR set to: 1
 19769                           
 19770                           ; BSR set to: 1
 19771  014138  293B               	incf	___fladd@bexp& (0+255),w,b
 19772  01413A  B4D8               	btfsc	status,2,c
 19773  01413C  D003               	goto	u12730
 19774                           
 19775                           ; BSR set to: 1
 19776  01413E  513B               	movf	___fladd@bexp& (0+255),w,b
 19777  014140  A4D8               	btfss	status,2,c
 19778  014142  D00D               	goto	l2044
 19779  014144                     u12730:
 19780                           
 19781                           ; BSR set to: 1
 19782                           
 19783                           ; BSR set to: 1
 19784  014144  0E00               	movlw	0
 19785  014146  6F29               	movwf	___fladd@b& (0+255),b
 19786  014148  0E00               	movlw	0
 19787  01414A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19788  01414C  0E00               	movlw	0
 19789  01414E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19790  014150  0E00               	movlw	0
 19791  014152  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19792  014154  513B               	movf	___fladd@bexp& (0+255),w,b
 19793  014156  A4D8               	btfss	status,2,c
 19794  014158  D002               	goto	l2044
 19795                           
 19796                           ; BSR set to: 1
 19797  01415A  0E00               	movlw	0
 19798  01415C  6F39               	movwf	___fladd@signs& (0+255),b
 19799  01415E                     l2044:
 19800                           
 19801                           ; BSR set to: 1
 19802                           
 19803                           ; BSR set to: 1
 19804                           
 19805                           ; BSR set to: 1
 19806  01415E  A13B               	btfss	___fladd@bexp& (0+255),0,b
 19807  014160  D002               	goto	l2045
 19808                           
 19809                           ; BSR set to: 1
 19810  014162  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 19811  014164  D001               	goto	l2046
 19812  014166                     l2045:
 19813                           
 19814                           ; BSR set to: 1
 19815                           
 19816                           ; BSR set to: 1
 19817  014166  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 19818  014168                     l2046:
 19819                           
 19820                           ; BSR set to: 1
 19821                           
 19822                           ; BSR set to: 1
 19823  014168  90D8               	bcf	status,0,c
 19824  01416A  313B               	rrcf	___fladd@bexp& (0+255),w,b
 19825  01416C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19826                           
 19827                           ; BSR set to: 1
 19828  01416E  BF39               	btfsc	___fladd@signs& (0+255),7,b
 19829                           
 19830                           ; BSR set to: 1
 19831  014170  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 19832                           
 19833                           ; BSR set to: 1
 19834                           
 19835                           ; BSR set to: 1
 19836  014172  C129  F129         	movff	___fladd@b,?___fladd
 19837  014176  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 19838  01417A  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 19839  01417E  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 19840  014182  0012               	return	
 19841  014184                     __end_of___fladd:
 19842                           	opt stack 0
 19843                           tblptru	equ	0xFF8
 19844                           tblptrh	equ	0xFF7
 19845                           tblptrl	equ	0xFF6
 19846                           tablat	equ	0xFF5
 19847                           prodh	equ	0xFF4
 19848                           prodl	equ	0xFF3
 19849                           intcon	equ	0xFF2
 19850                           indf0	equ	0xFEF
 19851                           postinc0	equ	0xFEE
 19852                           fsr0h	equ	0xFEA
 19853                           fsr0l	equ	0xFE9
 19854                           wreg	equ	0xFE8
 19855                           indf1	equ	0xFE7
 19856                           postdec1	equ	0xFE5
 19857                           plusw1	equ	0xFE3
 19858                           fsr1h	equ	0xFE2
 19859                           fsr1l	equ	0xFE1
 19860                           indf2	equ	0xFDF
 19861                           postinc2	equ	0xFDE
 19862                           postdec2	equ	0xFDD
 19863                           plusw2	equ	0xFDB
 19864                           fsr2h	equ	0xFDA
 19865                           fsr2l	equ	0xFD9
 19866                           status	equ	0xFD8
 19867                           
 19868 ;; *************** function ___flneg *****************
 19869 ;; Defined at:
 19870 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 19871 ;; Parameters:    Size  Location     Type
 19872 ;;  f1              4   37[BANK1 ] unsigned char 
 19873 ;; Auto vars:     Size  Location     Type
 19874 ;;		None
 19875 ;; Return value:  Size  Location     Type
 19876 ;;                  4   37[BANK1 ] unsigned char 
 19877 ;; Registers used:
 19878 ;;		wreg, status,2, status,0
 19879 ;; Tracked objects:
 19880 ;;		On entry : 0/0
 19881 ;;		On exit  : 0/0
 19882 ;;		Unchanged: 0/0
 19883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19884 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19887 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19888 ;;Total ram usage:        4 bytes
 19889 ;; Hardware stack levels used:    1
 19890 ;; Hardware stack levels required when called:   13
 19891 ;; This function calls:
 19892 ;;		Nothing
 19893 ;; This function is called by:
 19894 ;;		_ringBufferLUT
 19895 ;;		_printf
 19896 ;; This function uses a non-reentrant model
 19897 ;;
 19898                           
 19899                           	psect	text46
 19900  017DF6                     __ptext46:
 19901                           	opt stack 0
 19902  017DF6                     ___flneg:
 19903                           	opt stack 14
 19904                           
 19905                           ; BSR set to: 1
 19906                           ;incstack = 0
 19907  017DF6  0101               	movlb	1	; () banked
 19908  017DF8  5125               	movf	___flneg@f1& (0+255),w,b
 19909  017DFA  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 19910  017DFC  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 19911  017DFE  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 19912  017E00  B4D8               	btfsc	status,2,c
 19913  017E02  D008               	goto	l1734
 19914                           
 19915                           ; BSR set to: 1
 19916  017E04  0E00               	movlw	0
 19917  017E06  1B25               	xorwf	___flneg@f1& (0+255),f,b
 19918  017E08  0E00               	movlw	0
 19919  017E0A  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 19920  017E0C  0E00               	movlw	0
 19921  017E0E  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 19922  017E10  0E80               	movlw	128
 19923  017E12  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 19924  017E14                     l1734:
 19925                           
 19926                           ; BSR set to: 1
 19927                           
 19928                           ; BSR set to: 1
 19929  017E14  C125  F125         	movff	___flneg@f1,?___flneg
 19930  017E18  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 19931  017E1C  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 19932  017E20  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 19933  017E24  0012               	return	
 19934  017E26                     __end_of___flneg:
 19935                           	opt stack 0
 19936                           tblptru	equ	0xFF8
 19937                           tblptrh	equ	0xFF7
 19938                           tblptrl	equ	0xFF6
 19939                           tablat	equ	0xFF5
 19940                           prodh	equ	0xFF4
 19941                           prodl	equ	0xFF3
 19942                           intcon	equ	0xFF2
 19943                           indf0	equ	0xFEF
 19944                           postinc0	equ	0xFEE
 19945                           fsr0h	equ	0xFEA
 19946                           fsr0l	equ	0xFE9
 19947                           wreg	equ	0xFE8
 19948                           indf1	equ	0xFE7
 19949                           postdec1	equ	0xFE5
 19950                           plusw1	equ	0xFE3
 19951                           fsr1h	equ	0xFE2
 19952                           fsr1l	equ	0xFE1
 19953                           indf2	equ	0xFDF
 19954                           postinc2	equ	0xFDE
 19955                           postdec2	equ	0xFDD
 19956                           plusw2	equ	0xFDB
 19957                           fsr2h	equ	0xFDA
 19958                           fsr2l	equ	0xFD9
 19959                           status	equ	0xFD8
 19960                           
 19961 ;; *************** function ___flge *****************
 19962 ;; Defined at:
 19963 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 19964 ;; Parameters:    Size  Location     Type
 19965 ;;  ff1             4   23[BANK1 ] unsigned char 
 19966 ;;  ff2             4   27[BANK1 ] unsigned char 
 19967 ;; Auto vars:     Size  Location     Type
 19968 ;;		None
 19969 ;; Return value:  Size  Location     Type
 19970 ;;		None               void
 19971 ;; Registers used:
 19972 ;;		wreg, status,2, status,0
 19973 ;; Tracked objects:
 19974 ;;		On entry : 0/0
 19975 ;;		On exit  : 0/0
 19976 ;;		Unchanged: 0/0
 19977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19978 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19980 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19981 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19982 ;;Total ram usage:       12 bytes
 19983 ;; Hardware stack levels used:    1
 19984 ;; Hardware stack levels required when called:   13
 19985 ;; This function calls:
 19986 ;;		Nothing
 19987 ;; This function is called by:
 19988 ;;		_printf
 19989 ;; This function uses a non-reentrant model
 19990 ;;
 19991                           
 19992                           	psect	text47
 19993  016442                     __ptext47:
 19994                           	opt stack 0
 19995  016442                     ___flge:
 19996                           	opt stack 14
 19997                           
 19998                           ; BSR set to: 1
 19999                           ;incstack = 0
 20000  016442  0E00               	movlw	0
 20001  016444  0101               	movlb	1	; () banked
 20002  016446  1517               	andwf	___flge@ff1& (0+255),w,b
 20003  016448  6F1F               	movwf	??___flge& (0+255),b
 20004  01644A  0E00               	movlw	0
 20005  01644C  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 20006  01644E  6F20               	movwf	(??___flge+1)& (0+255),b
 20007  016450  0E80               	movlw	128
 20008  016452  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 20009  016454  6F21               	movwf	(??___flge+2)& (0+255),b
 20010  016456  0E7F               	movlw	127
 20011  016458  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 20012  01645A  6F22               	movwf	(??___flge+3)& (0+255),b
 20013  01645C  511F               	movf	??___flge& (0+255),w,b
 20014  01645E  1120               	iorwf	(??___flge+1)& (0+255),w,b
 20015  016460  1121               	iorwf	(??___flge+2)& (0+255),w,b
 20016  016462  1122               	iorwf	(??___flge+3)& (0+255),w,b
 20017  016464  A4D8               	btfss	status,2,c
 20018  016466  D008               	goto	l1727
 20019                           
 20020                           ; BSR set to: 1
 20021  016468  0E00               	movlw	0
 20022  01646A  6F17               	movwf	___flge@ff1& (0+255),b
 20023  01646C  0E00               	movlw	0
 20024  01646E  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 20025  016470  0E00               	movlw	0
 20026  016472  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 20027  016474  0E00               	movlw	0
 20028  016476  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 20029  016478                     l1727:
 20030                           
 20031                           ; BSR set to: 1
 20032                           
 20033                           ; BSR set to: 1
 20034  016478  0E00               	movlw	0
 20035  01647A  151B               	andwf	___flge@ff2& (0+255),w,b
 20036  01647C  6F1F               	movwf	??___flge& (0+255),b
 20037  01647E  0E00               	movlw	0
 20038  016480  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 20039  016482  6F20               	movwf	(??___flge+1)& (0+255),b
 20040  016484  0E80               	movlw	128
 20041  016486  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 20042  016488  6F21               	movwf	(??___flge+2)& (0+255),b
 20043  01648A  0E7F               	movlw	127
 20044  01648C  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 20045  01648E  6F22               	movwf	(??___flge+3)& (0+255),b
 20046  016490  511F               	movf	??___flge& (0+255),w,b
 20047  016492  1120               	iorwf	(??___flge+1)& (0+255),w,b
 20048  016494  1121               	iorwf	(??___flge+2)& (0+255),w,b
 20049  016496  1122               	iorwf	(??___flge+3)& (0+255),w,b
 20050  016498  A4D8               	btfss	status,2,c
 20051  01649A  D008               	goto	l1728
 20052                           
 20053                           ; BSR set to: 1
 20054  01649C  0E00               	movlw	0
 20055  01649E  6F1B               	movwf	___flge@ff2& (0+255),b
 20056  0164A0  0E00               	movlw	0
 20057  0164A2  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20058  0164A4  0E00               	movlw	0
 20059  0164A6  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20060  0164A8  0E00               	movlw	0
 20061  0164AA  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20062  0164AC                     l1728:
 20063                           
 20064                           ; BSR set to: 1
 20065                           
 20066                           ; BSR set to: 1
 20067  0164AC  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 20068  0164AE  D01D               	goto	l1729
 20069                           
 20070                           ; BSR set to: 1
 20071  0164B0  C117  F11F         	movff	___flge@ff1,??___flge
 20072  0164B4  C118  F120         	movff	___flge@ff1+1,??___flge+1
 20073  0164B8  C119  F121         	movff	___flge@ff1+2,??___flge+2
 20074  0164BC  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 20075  0164C0  1F1F               	comf	??___flge& (0+255),f,b
 20076  0164C2  1F20               	comf	(??___flge+1)& (0+255),f,b
 20077  0164C4  1F21               	comf	(??___flge+2)& (0+255),f,b
 20078  0164C6  1F22               	comf	(??___flge+3)& (0+255),f,b
 20079  0164C8  2B1F               	incf	??___flge& (0+255),f,b
 20080  0164CA  0E00               	movlw	0
 20081  0164CC  2320               	addwfc	(??___flge+1)& (0+255),f,b
 20082  0164CE  2321               	addwfc	(??___flge+2)& (0+255),f,b
 20083  0164D0  2322               	addwfc	(??___flge+3)& (0+255),f,b
 20084  0164D2  0E00               	movlw	0
 20085  0164D4  251F               	addwf	??___flge& (0+255),w,b
 20086  0164D6  6F17               	movwf	___flge@ff1& (0+255),b
 20087  0164D8  0E00               	movlw	0
 20088  0164DA  2120               	addwfc	(??___flge+1)& (0+255),w,b
 20089  0164DC  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 20090  0164DE  0E00               	movlw	0
 20091  0164E0  2121               	addwfc	(??___flge+2)& (0+255),w,b
 20092  0164E2  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 20093  0164E4  0E80               	movlw	128
 20094  0164E6  2122               	addwfc	(??___flge+3)& (0+255),w,b
 20095  0164E8  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 20096  0164EA                     l1729:
 20097                           
 20098                           ; BSR set to: 1
 20099                           
 20100                           ; BSR set to: 1
 20101  0164EA  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 20102  0164EC  D01D               	goto	l1730
 20103                           
 20104                           ; BSR set to: 1
 20105  0164EE  C11B  F11F         	movff	___flge@ff2,??___flge
 20106  0164F2  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 20107  0164F6  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 20108  0164FA  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 20109  0164FE  1F1F               	comf	??___flge& (0+255),f,b
 20110  016500  1F20               	comf	(??___flge+1)& (0+255),f,b
 20111  016502  1F21               	comf	(??___flge+2)& (0+255),f,b
 20112  016504  1F22               	comf	(??___flge+3)& (0+255),f,b
 20113  016506  2B1F               	incf	??___flge& (0+255),f,b
 20114  016508  0E00               	movlw	0
 20115  01650A  2320               	addwfc	(??___flge+1)& (0+255),f,b
 20116  01650C  2321               	addwfc	(??___flge+2)& (0+255),f,b
 20117  01650E  2322               	addwfc	(??___flge+3)& (0+255),f,b
 20118  016510  0E00               	movlw	0
 20119  016512  251F               	addwf	??___flge& (0+255),w,b
 20120  016514  6F1B               	movwf	___flge@ff2& (0+255),b
 20121  016516  0E00               	movlw	0
 20122  016518  2120               	addwfc	(??___flge+1)& (0+255),w,b
 20123  01651A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20124  01651C  0E00               	movlw	0
 20125  01651E  2121               	addwfc	(??___flge+2)& (0+255),w,b
 20126  016520  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20127  016522  0E80               	movlw	128
 20128  016524  2122               	addwfc	(??___flge+3)& (0+255),w,b
 20129  016526  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20130  016528                     l1730:
 20131                           
 20132                           ; BSR set to: 1
 20133  016528  0E00               	movlw	0
 20134  01652A  1B17               	xorwf	___flge@ff1& (0+255),f,b
 20135  01652C  0E00               	movlw	0
 20136  01652E  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20137  016530  0E00               	movlw	0
 20138  016532  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20139  016534  0E80               	movlw	128
 20140  016536  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20141  016538  0E00               	movlw	0
 20142  01653A  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 20143  01653C  0E00               	movlw	0
 20144  01653E  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20145  016540  0E00               	movlw	0
 20146  016542  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20147  016544  0E80               	movlw	128
 20148  016546  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20149  016548  511B               	movf	___flge@ff2& (0+255),w,b
 20150  01654A  5D17               	subwf	___flge@ff1& (0+255),w,b
 20151  01654C  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 20152  01654E  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20153  016550  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 20154  016552  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20155  016554  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 20156  016556  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20157  016558  B0D8               	btfsc	status,0,c
 20158  01655A  D002               	goto	l10438
 20159                           
 20160                           ; BSR set to: 1
 20161  01655C  90D8               	bcf	status,0,c
 20162  01655E  0012               	return	
 20163  016560                     l10438:
 20164                           
 20165                           ; BSR set to: 1
 20166                           
 20167                           ; BSR set to: 1
 20168  016560  80D8               	bsf	status,0,c
 20169                           
 20170                           ; BSR set to: 1
 20171  016562  0012               	return	
 20172  016564                     __end_of___flge:
 20173                           	opt stack 0
 20174                           tblptru	equ	0xFF8
 20175                           tblptrh	equ	0xFF7
 20176                           tblptrl	equ	0xFF6
 20177                           tablat	equ	0xFF5
 20178                           prodh	equ	0xFF4
 20179                           prodl	equ	0xFF3
 20180                           intcon	equ	0xFF2
 20181                           indf0	equ	0xFEF
 20182                           postinc0	equ	0xFEE
 20183                           fsr0h	equ	0xFEA
 20184                           fsr0l	equ	0xFE9
 20185                           wreg	equ	0xFE8
 20186                           indf1	equ	0xFE7
 20187                           postdec1	equ	0xFE5
 20188                           plusw1	equ	0xFE3
 20189                           fsr1h	equ	0xFE2
 20190                           fsr1l	equ	0xFE1
 20191                           indf2	equ	0xFDF
 20192                           postinc2	equ	0xFDE
 20193                           postdec2	equ	0xFDD
 20194                           plusw2	equ	0xFDB
 20195                           fsr2h	equ	0xFDA
 20196                           fsr2l	equ	0xFD9
 20197                           status	equ	0xFD8
 20198                           
 20199 ;; *************** function _getCauseOfReset *****************
 20200 ;; Defined at:
 20201 ;;		line 11 in file "cause_of_reset.c"
 20202 ;; Parameters:    Size  Location     Type
 20203 ;;		None
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;  return_reset    1   23[BANK1 ] enum E17455
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  1    wreg      enum E17948
 20208 ;; Registers used:
 20209 ;;		wreg, status,2
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20216 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20218 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20219 ;;Total ram usage:        1 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:   13
 20222 ;; This function calls:
 20223 ;;		Nothing
 20224 ;; This function is called by:
 20225 ;;		_main
 20226 ;; This function uses a non-reentrant model
 20227 ;;
 20228                           
 20229                           	psect	text48
 20230  017850                     __ptext48:
 20231                           	opt stack 0
 20232  017850                     _getCauseOfReset:
 20233                           	opt stack 17
 20234                           
 20235                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 20236                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 20237                           
 20238                           ; BSR set to: 1
 20239                           ;incstack = 0
 20240  017850  AED7               	btfss	4055,7,c	;volatile
 20241  017852  D002               	goto	l1290
 20242                           
 20243                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 20244  017854  0E07               	movlw	7
 20245  017856  D019               	goto	L14
 20246  017858                     l1290:
 20247                           
 20248                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 20249  017858  ACD7               	btfss	4055,6,c	;volatile
 20250  01785A  D002               	goto	l1292
 20251                           
 20252                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 20253  01785C  0E08               	movlw	8
 20254  01785E  D015               	goto	L14
 20255  017860                     l1292:
 20256                           
 20257                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 20258  017860  BAD7               	btfsc	4055,5,c	;volatile
 20259  017862  D002               	goto	l1294
 20260                           
 20261                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 20262  017864  0E05               	movlw	5
 20263  017866  D011               	goto	L14
 20264  017868                     l1294:
 20265                           
 20266                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 20267  017868  B6D7               	btfsc	4055,3,c	;volatile
 20268  01786A  D002               	goto	l1296
 20269                           
 20270                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 20271  01786C  0E03               	movlw	3
 20272  01786E  D00D               	goto	L14
 20273  017870                     l1296:
 20274                           
 20275                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 20276  017870  B4D7               	btfsc	4055,2,c	;volatile
 20277  017872  D002               	goto	l1298
 20278                           
 20279                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 20280  017874  0E06               	movlw	6
 20281  017876  D009               	goto	L14
 20282  017878                     l1298:
 20283                           
 20284                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 20285  017878  B2D7               	btfsc	4055,1,c	;volatile
 20286  01787A  D002               	goto	l1300
 20287                           
 20288                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 20289  01787C  0E01               	movlw	1
 20290  01787E  D005               	goto	L14
 20291  017880                     l1300:
 20292                           
 20293                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 20294  017880  B0D7               	btfsc	4055,0,c	;volatile
 20295  017882  D002               	goto	l1302
 20296                           
 20297                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 20298  017884  0E02               	movlw	2
 20299  017886  D001               	goto	L14
 20300  017888                     l1302:
 20301                           
 20302                           ;cause_of_reset.c: 60: else {
 20303                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 20304                           
 20305                           ; BSR set to: 1
 20306  017888  0E00               	movlw	0
 20307  01788A                     L14:
 20308  01788A  0101               	movlb	1	; () banked
 20309  01788C  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 20310                           
 20311                           ; BSR set to: 1
 20312                           ;cause_of_reset.c: 64: }
 20313                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 20314                           
 20315                           ; BSR set to: 1
 20316                           
 20317                           ; BSR set to: 1
 20318                           
 20319                           ; BSR set to: 1
 20320                           
 20321                           ; BSR set to: 1
 20322                           
 20323                           ; BSR set to: 1
 20324                           
 20325                           ; BSR set to: 1
 20326                           
 20327                           ; BSR set to: 1
 20328  01788E  9ED7               	bcf	4055,7,c	;volatile
 20329                           
 20330                           ; BSR set to: 1
 20331                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 20332  017890  9CD7               	bcf	4055,6,c	;volatile
 20333                           
 20334                           ; BSR set to: 1
 20335                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 20336  017892  8AD7               	bsf	4055,5,c	;volatile
 20337                           
 20338                           ; BSR set to: 1
 20339                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 20340  017894  88D7               	bsf	4055,4,c	;volatile
 20341                           
 20342                           ; BSR set to: 1
 20343                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 20344  017896  86D7               	bsf	4055,3,c	;volatile
 20345                           
 20346                           ; BSR set to: 1
 20347                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 20348  017898  84D7               	bsf	4055,2,c	;volatile
 20349                           
 20350                           ; BSR set to: 1
 20351                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 20352  01789A  82D7               	bsf	4055,1,c	;volatile
 20353                           
 20354                           ; BSR set to: 1
 20355                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 20356  01789C  80D7               	bsf	4055,0,c	;volatile
 20357                           
 20358                           ;cause_of_reset.c: 76: return return_reset_cause;
 20359  01789E  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 20360  0178A0  0012               	return	
 20361  0178A2                     __end_of_getCauseOfReset:
 20362                           	opt stack 0
 20363                           tblptru	equ	0xFF8
 20364                           tblptrh	equ	0xFF7
 20365                           tblptrl	equ	0xFF6
 20366                           tablat	equ	0xFF5
 20367                           prodh	equ	0xFF4
 20368                           prodl	equ	0xFF3
 20369                           intcon	equ	0xFF2
 20370                           indf0	equ	0xFEF
 20371                           postinc0	equ	0xFEE
 20372                           fsr0h	equ	0xFEA
 20373                           fsr0l	equ	0xFE9
 20374                           wreg	equ	0xFE8
 20375                           indf1	equ	0xFE7
 20376                           postdec1	equ	0xFE5
 20377                           plusw1	equ	0xFE3
 20378                           fsr1h	equ	0xFE2
 20379                           fsr1l	equ	0xFE1
 20380                           indf2	equ	0xFDF
 20381                           postinc2	equ	0xFDE
 20382                           postdec2	equ	0xFDD
 20383                           plusw2	equ	0xFDB
 20384                           fsr2h	equ	0xFDA
 20385                           fsr2l	equ	0xFD9
 20386                           status	equ	0xFD8
 20387                           
 20388 ;; *************** function _SYSTEM_Initialize *****************
 20389 ;; Defined at:
 20390 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20391 ;; Parameters:    Size  Location     Type
 20392 ;;		None
 20393 ;; Auto vars:     Size  Location     Type
 20394 ;;		None
 20395 ;; Return value:  Size  Location     Type
 20396 ;;                  1    wreg      void 
 20397 ;; Registers used:
 20398 ;;		wreg, status,2, status,0, cstack
 20399 ;; Tracked objects:
 20400 ;;		On entry : 0/0
 20401 ;;		On exit  : 0/0
 20402 ;;		Unchanged: 0/0
 20403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20408 ;;Total ram usage:        0 bytes
 20409 ;; Hardware stack levels used:    1
 20410 ;; Hardware stack levels required when called:   15
 20411 ;; This function calls:
 20412 ;;		_ADCC_Initialize
 20413 ;;		_EUSART2_Initialize
 20414 ;;		_FVR_Initialize
 20415 ;;		_HLVD_Initialize
 20416 ;;		_INTERRUPT_Initialize
 20417 ;;		_OSCILLATOR_Initialize
 20418 ;;		_PIN_MANAGER_Initialize
 20419 ;;		_PMD_Initialize
 20420 ;;		_TMR5_Initialize
 20421 ;;		_TMR6_Initialize
 20422 ;;		_TMR7_Initialize
 20423 ;; This function is called by:
 20424 ;;		_main
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           	psect	text49
 20429  017E26                     __ptext49:
 20430                           	opt stack 0
 20431  017E26                     _SYSTEM_Initialize:
 20432                           	opt stack 15
 20433                           
 20434                           ;mcc.c: 52: INTERRUPT_Initialize();
 20435                           
 20436                           ; BSR set to: 1
 20437                           ;incstack = 0
 20438  017E26  EC2F  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 20439                           
 20440                           ;mcc.c: 53: PMD_Initialize();
 20441  017E2A  ECF8  F0BF         	call	_PMD_Initialize	;wreg free
 20442                           
 20443                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 20444  017E2E  EC40  F0B7         	call	_PIN_MANAGER_Initialize	;wreg free
 20445                           
 20446                           ;mcc.c: 55: OSCILLATOR_Initialize();
 20447  017E32  EC06  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 20448                           
 20449                           ;mcc.c: 56: HLVD_Initialize();
 20450  017E36  EC64  F0C0         	call	_HLVD_Initialize	;wreg free
 20451                           
 20452                           ;mcc.c: 57: FVR_Initialize();
 20453  017E3A  ECAF  F0C0         	call	_FVR_Initialize	;wreg free
 20454                           
 20455                           ;mcc.c: 58: TMR7_Initialize();
 20456  017E3E  ECA1  F0BC         	call	_TMR7_Initialize	;wreg free
 20457                           
 20458                           ;mcc.c: 59: TMR6_Initialize();
 20459  017E42  ECCA  F0BE         	call	_TMR6_Initialize	;wreg free
 20460                           
 20461                           ;mcc.c: 60: ADCC_Initialize();
 20462  017E46  EC9A  F0BB         	call	_ADCC_Initialize	;wreg free
 20463                           
 20464                           ;mcc.c: 61: TMR5_Initialize();
 20465  017E4A  EC79  F0BC         	call	_TMR5_Initialize	;wreg free
 20466                           
 20467                           ;mcc.c: 62: EUSART2_Initialize();
 20468  017E4E  ECCA  F0BA         	call	_EUSART2_Initialize	;wreg free
 20469  017E52  0012               	return		;funcret
 20470  017E54                     __end_of_SYSTEM_Initialize:
 20471                           	opt stack 0
 20472                           tblptru	equ	0xFF8
 20473                           tblptrh	equ	0xFF7
 20474                           tblptrl	equ	0xFF6
 20475                           tablat	equ	0xFF5
 20476                           prodh	equ	0xFF4
 20477                           prodl	equ	0xFF3
 20478                           intcon	equ	0xFF2
 20479                           indf0	equ	0xFEF
 20480                           postinc0	equ	0xFEE
 20481                           fsr0h	equ	0xFEA
 20482                           fsr0l	equ	0xFE9
 20483                           wreg	equ	0xFE8
 20484                           indf1	equ	0xFE7
 20485                           postdec1	equ	0xFE5
 20486                           plusw1	equ	0xFE3
 20487                           fsr1h	equ	0xFE2
 20488                           fsr1l	equ	0xFE1
 20489                           indf2	equ	0xFDF
 20490                           postinc2	equ	0xFDE
 20491                           postdec2	equ	0xFDD
 20492                           plusw2	equ	0xFDB
 20493                           fsr2h	equ	0xFDA
 20494                           fsr2l	equ	0xFD9
 20495                           status	equ	0xFD8
 20496                           
 20497 ;; *************** function _TMR7_Initialize *****************
 20498 ;; Defined at:
 20499 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;		None
 20502 ;; Auto vars:     Size  Location     Type
 20503 ;;		None
 20504 ;; Return value:  Size  Location     Type
 20505 ;;                  1    wreg      void 
 20506 ;; Registers used:
 20507 ;;		wreg, status,2, status,0, cstack
 20508 ;; Tracked objects:
 20509 ;;		On entry : 0/0
 20510 ;;		On exit  : 0/0
 20511 ;;		Unchanged: 0/0
 20512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20515 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20516 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20517 ;;Total ram usage:        2 bytes
 20518 ;; Hardware stack levels used:    1
 20519 ;; Hardware stack levels required when called:   14
 20520 ;; This function calls:
 20521 ;;		_TMR7_SetInterruptHandler
 20522 ;; This function is called by:
 20523 ;;		_SYSTEM_Initialize
 20524 ;; This function uses a non-reentrant model
 20525 ;;
 20526                           
 20527                           	psect	text50
 20528  017942                     __ptext50:
 20529                           	opt stack 0
 20530  017942                     _TMR7_Initialize:
 20531                           	opt stack 15
 20532                           
 20533                           ;tmr7.c: 69: T7GCON = 0x00;
 20534                           
 20535                           ;incstack = 0
 20536  017942  0E00               	movlw	0
 20537  017944  010F               	movlb	15	; () banked
 20538  017946  6F31               	movwf	49,b	;volatile
 20539                           
 20540                           ;tmr7.c: 72: T7GATE = 0x00;
 20541  017948  0E00               	movlw	0
 20542  01794A  6F32               	movwf	50,b	;volatile
 20543                           
 20544                           ;tmr7.c: 75: T7CLK = 0x03;
 20545  01794C  0E03               	movlw	3
 20546  01794E  6F33               	movwf	51,b	;volatile
 20547                           
 20548                           ;tmr7.c: 78: TMR7H = 0x3C;
 20549  017950  0E3C               	movlw	60
 20550  017952  6F2F               	movwf	47,b	;volatile
 20551                           
 20552                           ;tmr7.c: 81: TMR7L = 0xB0;
 20553  017954  0EB0               	movlw	176
 20554  017956  6F2E               	movwf	46,b	;volatile
 20555                           
 20556                           ; BSR set to: 15
 20557                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 20558  017958  512E               	movf	46,w,b	;volatile
 20559  01795A  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 20560  01795E  0101               	movlb	1	; () banked
 20561  017960  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 20562  017962  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 20563  017966  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 20564  017968  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 20565  01796A  6FDB               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 20566  01796C  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 20567  01796E  6FDC               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 20568                           
 20569                           ; BSR set to: 1
 20570                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 20571  017970  010E               	movlb	14	; () banked
 20572  017972  9D38               	bcf	56,6,b	;volatile
 20573                           
 20574                           ; BSR set to: 14
 20575                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 20576  017974  8D2E               	bsf	46,6,b	;volatile
 20577                           
 20578                           ; BSR set to: 14
 20579                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 20580  017976  0E86               	movlw	low _TMR7_DefaultInterruptHandler
 20581  017978  0101               	movlb	1	; () banked
 20582  01797A  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 20583  01797C  0E81               	movlw	high _TMR7_DefaultInterruptHandler
 20584  01797E  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20585  017980  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 20586  017982  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20587  017984  EC73  F0C0         	call	_TMR7_SetInterruptHandler	;wreg free
 20588                           
 20589                           ;tmr7.c: 96: T7CON = 0x31;
 20590  017988  0E31               	movlw	49
 20591  01798A  010F               	movlb	15	; () banked
 20592  01798C  6F30               	movwf	48,b	;volatile
 20593                           
 20594                           ; BSR set to: 15
 20595  01798E  0012               	return		;funcret
 20596  017990                     __end_of_TMR7_Initialize:
 20597                           	opt stack 0
 20598                           tblptru	equ	0xFF8
 20599                           tblptrh	equ	0xFF7
 20600                           tblptrl	equ	0xFF6
 20601                           tablat	equ	0xFF5
 20602                           prodh	equ	0xFF4
 20603                           prodl	equ	0xFF3
 20604                           intcon	equ	0xFF2
 20605                           indf0	equ	0xFEF
 20606                           postinc0	equ	0xFEE
 20607                           fsr0h	equ	0xFEA
 20608                           fsr0l	equ	0xFE9
 20609                           wreg	equ	0xFE8
 20610                           indf1	equ	0xFE7
 20611                           postdec1	equ	0xFE5
 20612                           plusw1	equ	0xFE3
 20613                           fsr1h	equ	0xFE2
 20614                           fsr1l	equ	0xFE1
 20615                           indf2	equ	0xFDF
 20616                           postinc2	equ	0xFDE
 20617                           postdec2	equ	0xFDD
 20618                           plusw2	equ	0xFDB
 20619                           fsr2h	equ	0xFDA
 20620                           fsr2l	equ	0xFD9
 20621                           status	equ	0xFD8
 20622                           
 20623 ;; *************** function _TMR7_SetInterruptHandler *****************
 20624 ;; Defined at:
 20625 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20628 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 20629 ;; Auto vars:     Size  Location     Type
 20630 ;;		None
 20631 ;; Return value:  Size  Location     Type
 20632 ;;                  1    wreg      void 
 20633 ;; Registers used:
 20634 ;;		wreg, status,2, status,0
 20635 ;; Tracked objects:
 20636 ;;		On entry : 0/0
 20637 ;;		On exit  : 0/0
 20638 ;;		Unchanged: 0/0
 20639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20640 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20643 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20644 ;;Total ram usage:        3 bytes
 20645 ;; Hardware stack levels used:    1
 20646 ;; Hardware stack levels required when called:   13
 20647 ;; This function calls:
 20648 ;;		Nothing
 20649 ;; This function is called by:
 20650 ;;		_TMR7_Initialize
 20651 ;;		_main
 20652 ;; This function uses a non-reentrant model
 20653 ;;
 20654                           
 20655                           	psect	text51
 20656  0180E6                     __ptext51:
 20657                           	opt stack 0
 20658  0180E6                     _TMR7_SetInterruptHandler:
 20659                           	opt stack 17
 20660                           
 20661                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 20662                           
 20663                           ; BSR set to: 15
 20664                           ;incstack = 0
 20665  0180E6  C117  F263         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 20666  0180EA  C118  F264         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 20667  0180EE  C119  F265         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 20668  0180F2  0012               	return		;funcret
 20669  0180F4                     __end_of_TMR7_SetInterruptHandler:
 20670                           	opt stack 0
 20671                           tblptru	equ	0xFF8
 20672                           tblptrh	equ	0xFF7
 20673                           tblptrl	equ	0xFF6
 20674                           tablat	equ	0xFF5
 20675                           prodh	equ	0xFF4
 20676                           prodl	equ	0xFF3
 20677                           intcon	equ	0xFF2
 20678                           indf0	equ	0xFEF
 20679                           postinc0	equ	0xFEE
 20680                           fsr0h	equ	0xFEA
 20681                           fsr0l	equ	0xFE9
 20682                           wreg	equ	0xFE8
 20683                           indf1	equ	0xFE7
 20684                           postdec1	equ	0xFE5
 20685                           plusw1	equ	0xFE3
 20686                           fsr1h	equ	0xFE2
 20687                           fsr1l	equ	0xFE1
 20688                           indf2	equ	0xFDF
 20689                           postinc2	equ	0xFDE
 20690                           postdec2	equ	0xFDD
 20691                           plusw2	equ	0xFDB
 20692                           fsr2h	equ	0xFDA
 20693                           fsr2l	equ	0xFD9
 20694                           status	equ	0xFD8
 20695                           
 20696 ;; *************** function _TMR6_Initialize *****************
 20697 ;; Defined at:
 20698 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 20699 ;; Parameters:    Size  Location     Type
 20700 ;;		None
 20701 ;; Auto vars:     Size  Location     Type
 20702 ;;		None
 20703 ;; Return value:  Size  Location     Type
 20704 ;;                  1    wreg      void 
 20705 ;; Registers used:
 20706 ;;		wreg, status,2, status,0, cstack
 20707 ;; Tracked objects:
 20708 ;;		On entry : 0/0
 20709 ;;		On exit  : 0/0
 20710 ;;		Unchanged: 0/0
 20711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20716 ;;Total ram usage:        0 bytes
 20717 ;; Hardware stack levels used:    1
 20718 ;; Hardware stack levels required when called:   14
 20719 ;; This function calls:
 20720 ;;		_TMR6_SetInterruptHandler
 20721 ;; This function is called by:
 20722 ;;		_SYSTEM_Initialize
 20723 ;; This function uses a non-reentrant model
 20724 ;;
 20725                           
 20726                           	psect	text52
 20727  017D94                     __ptext52:
 20728                           	opt stack 0
 20729  017D94                     _TMR6_Initialize:
 20730                           	opt stack 15
 20731                           
 20732                           ;tmr6.c: 69: T6CLKCON = 0x04;
 20733                           
 20734                           ;incstack = 0
 20735  017D94  0E04               	movlw	4
 20736  017D96  6EB3               	movwf	4019,c	;volatile
 20737                           
 20738                           ;tmr6.c: 72: T6HLT = 0x20;
 20739  017D98  0E20               	movlw	32
 20740  017D9A  6EB2               	movwf	4018,c	;volatile
 20741                           
 20742                           ;tmr6.c: 75: T6RST = 0x00;
 20743  017D9C  0E00               	movlw	0
 20744  017D9E  6EB4               	movwf	4020,c	;volatile
 20745                           
 20746                           ;tmr6.c: 78: T6PR = 0xF1;
 20747  017DA0  0EF1               	movlw	241
 20748  017DA2  6EB0               	movwf	4016,c	;volatile
 20749                           
 20750                           ;tmr6.c: 81: T6TMR = 0x00;
 20751  017DA4  0E00               	movlw	0
 20752  017DA6  6EAF               	movwf	4015,c	;volatile
 20753                           
 20754                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 20755  017DA8  010E               	movlb	14	; () banked
 20756  017DAA  9B38               	bcf	56,5,b	;volatile
 20757                           
 20758                           ; BSR set to: 14
 20759                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 20760  017DAC  8B2E               	bsf	46,5,b	;volatile
 20761                           
 20762                           ; BSR set to: 14
 20763                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 20764  017DAE  0E88               	movlw	low _TMR6_DefaultInterruptHandler
 20765  017DB0  0101               	movlb	1	; () banked
 20766  017DB2  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 20767  017DB4  0E81               	movlw	high _TMR6_DefaultInterruptHandler
 20768  017DB6  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20769  017DB8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 20770  017DBA  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20771  017DBC  EC7A  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 20772                           
 20773                           ;tmr6.c: 93: T6CON = 0xBF;
 20774  017DC0  0EBF               	movlw	191
 20775  017DC2  6EB1               	movwf	4017,c	;volatile
 20776  017DC4  0012               	return		;funcret
 20777  017DC6                     __end_of_TMR6_Initialize:
 20778                           	opt stack 0
 20779                           tblptru	equ	0xFF8
 20780                           tblptrh	equ	0xFF7
 20781                           tblptrl	equ	0xFF6
 20782                           tablat	equ	0xFF5
 20783                           prodh	equ	0xFF4
 20784                           prodl	equ	0xFF3
 20785                           intcon	equ	0xFF2
 20786                           indf0	equ	0xFEF
 20787                           postinc0	equ	0xFEE
 20788                           fsr0h	equ	0xFEA
 20789                           fsr0l	equ	0xFE9
 20790                           wreg	equ	0xFE8
 20791                           indf1	equ	0xFE7
 20792                           postdec1	equ	0xFE5
 20793                           plusw1	equ	0xFE3
 20794                           fsr1h	equ	0xFE2
 20795                           fsr1l	equ	0xFE1
 20796                           indf2	equ	0xFDF
 20797                           postinc2	equ	0xFDE
 20798                           postdec2	equ	0xFDD
 20799                           plusw2	equ	0xFDB
 20800                           fsr2h	equ	0xFDA
 20801                           fsr2l	equ	0xFD9
 20802                           status	equ	0xFD8
 20803                           
 20804 ;; *************** function _TMR6_SetInterruptHandler *****************
 20805 ;; Defined at:
 20806 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 20807 ;; Parameters:    Size  Location     Type
 20808 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20809 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 20810 ;; Auto vars:     Size  Location     Type
 20811 ;;		None
 20812 ;; Return value:  Size  Location     Type
 20813 ;;                  1    wreg      void 
 20814 ;; Registers used:
 20815 ;;		wreg, status,2, status,0
 20816 ;; Tracked objects:
 20817 ;;		On entry : 0/0
 20818 ;;		On exit  : 0/0
 20819 ;;		Unchanged: 0/0
 20820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20821 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20824 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20825 ;;Total ram usage:        3 bytes
 20826 ;; Hardware stack levels used:    1
 20827 ;; Hardware stack levels required when called:   13
 20828 ;; This function calls:
 20829 ;;		Nothing
 20830 ;; This function is called by:
 20831 ;;		_TMR6_Initialize
 20832 ;;		_main
 20833 ;; This function uses a non-reentrant model
 20834 ;;
 20835                           
 20836                           	psect	text53
 20837  0180F4                     __ptext53:
 20838                           	opt stack 0
 20839  0180F4                     _TMR6_SetInterruptHandler:
 20840                           	opt stack 17
 20841                           
 20842                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 20843                           
 20844                           ;incstack = 0
 20845  0180F4  C117  F269         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 20846  0180F8  C118  F26A         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 20847  0180FC  C119  F26B         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 20848  018100  0012               	return		;funcret
 20849  018102                     __end_of_TMR6_SetInterruptHandler:
 20850                           	opt stack 0
 20851                           tblptru	equ	0xFF8
 20852                           tblptrh	equ	0xFF7
 20853                           tblptrl	equ	0xFF6
 20854                           tablat	equ	0xFF5
 20855                           prodh	equ	0xFF4
 20856                           prodl	equ	0xFF3
 20857                           intcon	equ	0xFF2
 20858                           indf0	equ	0xFEF
 20859                           postinc0	equ	0xFEE
 20860                           fsr0h	equ	0xFEA
 20861                           fsr0l	equ	0xFE9
 20862                           wreg	equ	0xFE8
 20863                           indf1	equ	0xFE7
 20864                           postdec1	equ	0xFE5
 20865                           plusw1	equ	0xFE3
 20866                           fsr1h	equ	0xFE2
 20867                           fsr1l	equ	0xFE1
 20868                           indf2	equ	0xFDF
 20869                           postinc2	equ	0xFDE
 20870                           postdec2	equ	0xFDD
 20871                           plusw2	equ	0xFDB
 20872                           fsr2h	equ	0xFDA
 20873                           fsr2l	equ	0xFD9
 20874                           status	equ	0xFD8
 20875                           
 20876 ;; *************** function _TMR5_Initialize *****************
 20877 ;; Defined at:
 20878 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 20879 ;; Parameters:    Size  Location     Type
 20880 ;;		None
 20881 ;; Auto vars:     Size  Location     Type
 20882 ;;		None
 20883 ;; Return value:  Size  Location     Type
 20884 ;;                  1    wreg      void 
 20885 ;; Registers used:
 20886 ;;		wreg, status,2, status,0, cstack
 20887 ;; Tracked objects:
 20888 ;;		On entry : 0/0
 20889 ;;		On exit  : 0/0
 20890 ;;		Unchanged: 0/0
 20891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20894 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20895 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20896 ;;Total ram usage:        2 bytes
 20897 ;; Hardware stack levels used:    1
 20898 ;; Hardware stack levels required when called:   14
 20899 ;; This function calls:
 20900 ;;		_TMR5_SetInterruptHandler
 20901 ;; This function is called by:
 20902 ;;		_SYSTEM_Initialize
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text54
 20907  0178F2                     __ptext54:
 20908                           	opt stack 0
 20909  0178F2                     _TMR5_Initialize:
 20910                           	opt stack 15
 20911                           
 20912                           ;tmr5.c: 69: T5GCON = 0x00;
 20913                           
 20914                           ;incstack = 0
 20915  0178F2  0E00               	movlw	0
 20916  0178F4  6EC4               	movwf	4036,c	;volatile
 20917                           
 20918                           ;tmr5.c: 72: T5GATE = 0x00;
 20919  0178F6  0E00               	movlw	0
 20920  0178F8  6EC5               	movwf	4037,c	;volatile
 20921                           
 20922                           ;tmr5.c: 75: T5CLK = 0x01;
 20923  0178FA  0E01               	movlw	1
 20924  0178FC  6EC6               	movwf	4038,c	;volatile
 20925                           
 20926                           ;tmr5.c: 78: TMR5H = 0x00;
 20927  0178FE  0E00               	movlw	0
 20928  017900  6EC2               	movwf	4034,c	;volatile
 20929                           
 20930                           ;tmr5.c: 81: TMR5L = 0x00;
 20931  017902  0E00               	movlw	0
 20932  017904  6EC1               	movwf	4033,c	;volatile
 20933                           
 20934                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 20935  017906  50C1               	movf	4033,w,c	;volatile
 20936  017908  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 20937  01790C  0101               	movlb	1	; () banked
 20938  01790E  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 20939  017910  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 20940  017914  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 20941  017916  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 20942  017918  0102               	movlb	2	; () banked
 20943  01791A  6F74               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 20944  01791C  0101               	movlb	1	; () banked
 20945  01791E  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 20946  017920  0102               	movlb	2	; () banked
 20947  017922  6F75               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 20948                           
 20949                           ; BSR set to: 2
 20950                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 20951  017924  010E               	movlb	14	; () banked
 20952  017926  9938               	bcf	56,4,b	;volatile
 20953                           
 20954                           ; BSR set to: 14
 20955                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 20956  017928  892E               	bsf	46,4,b	;volatile
 20957                           
 20958                           ; BSR set to: 14
 20959                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 20960  01792A  0E8A               	movlw	low _TMR5_DefaultInterruptHandler
 20961  01792C  0101               	movlb	1	; () banked
 20962  01792E  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 20963  017930  0E81               	movlw	high _TMR5_DefaultInterruptHandler
 20964  017932  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20965  017934  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 20966  017936  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20967  017938  EC81  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 20968                           
 20969                           ;tmr5.c: 96: T5CON = 0x13;
 20970  01793C  0E13               	movlw	19
 20971  01793E  6EC3               	movwf	4035,c	;volatile
 20972  017940  0012               	return		;funcret
 20973  017942                     __end_of_TMR5_Initialize:
 20974                           	opt stack 0
 20975                           tblptru	equ	0xFF8
 20976                           tblptrh	equ	0xFF7
 20977                           tblptrl	equ	0xFF6
 20978                           tablat	equ	0xFF5
 20979                           prodh	equ	0xFF4
 20980                           prodl	equ	0xFF3
 20981                           intcon	equ	0xFF2
 20982                           indf0	equ	0xFEF
 20983                           postinc0	equ	0xFEE
 20984                           fsr0h	equ	0xFEA
 20985                           fsr0l	equ	0xFE9
 20986                           wreg	equ	0xFE8
 20987                           indf1	equ	0xFE7
 20988                           postdec1	equ	0xFE5
 20989                           plusw1	equ	0xFE3
 20990                           fsr1h	equ	0xFE2
 20991                           fsr1l	equ	0xFE1
 20992                           indf2	equ	0xFDF
 20993                           postinc2	equ	0xFDE
 20994                           postdec2	equ	0xFDD
 20995                           plusw2	equ	0xFDB
 20996                           fsr2h	equ	0xFDA
 20997                           fsr2l	equ	0xFD9
 20998                           status	equ	0xFD8
 20999                           
 21000 ;; *************** function _TMR5_SetInterruptHandler *****************
 21001 ;; Defined at:
 21002 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 21003 ;; Parameters:    Size  Location     Type
 21004 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21005 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;		None
 21008 ;; Return value:  Size  Location     Type
 21009 ;;                  1    wreg      void 
 21010 ;; Registers used:
 21011 ;;		wreg, status,2, status,0
 21012 ;; Tracked objects:
 21013 ;;		On entry : 0/0
 21014 ;;		On exit  : 0/0
 21015 ;;		Unchanged: 0/0
 21016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21017 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21020 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21021 ;;Total ram usage:        3 bytes
 21022 ;; Hardware stack levels used:    1
 21023 ;; Hardware stack levels required when called:   13
 21024 ;; This function calls:
 21025 ;;		Nothing
 21026 ;; This function is called by:
 21027 ;;		_TMR5_Initialize
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	text55
 21032  018102                     __ptext55:
 21033                           	opt stack 0
 21034  018102                     _TMR5_SetInterruptHandler:
 21035                           	opt stack 15
 21036                           
 21037                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 21038                           
 21039                           ;incstack = 0
 21040  018102  C117  F260         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 21041  018106  C118  F261         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 21042  01810A  C119  F262         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 21043  01810E  0012               	return		;funcret
 21044  018110                     __end_of_TMR5_SetInterruptHandler:
 21045                           	opt stack 0
 21046                           tblptru	equ	0xFF8
 21047                           tblptrh	equ	0xFF7
 21048                           tblptrl	equ	0xFF6
 21049                           tablat	equ	0xFF5
 21050                           prodh	equ	0xFF4
 21051                           prodl	equ	0xFF3
 21052                           intcon	equ	0xFF2
 21053                           indf0	equ	0xFEF
 21054                           postinc0	equ	0xFEE
 21055                           fsr0h	equ	0xFEA
 21056                           fsr0l	equ	0xFE9
 21057                           wreg	equ	0xFE8
 21058                           indf1	equ	0xFE7
 21059                           postdec1	equ	0xFE5
 21060                           plusw1	equ	0xFE3
 21061                           fsr1h	equ	0xFE2
 21062                           fsr1l	equ	0xFE1
 21063                           indf2	equ	0xFDF
 21064                           postinc2	equ	0xFDE
 21065                           postdec2	equ	0xFDD
 21066                           plusw2	equ	0xFDB
 21067                           fsr2h	equ	0xFDA
 21068                           fsr2l	equ	0xFD9
 21069                           status	equ	0xFD8
 21070                           
 21071 ;; *************** function _PMD_Initialize *****************
 21072 ;; Defined at:
 21073 ;;		line 83 in file "mcc_generated_files/mcc.c"
 21074 ;; Parameters:    Size  Location     Type
 21075 ;;		None
 21076 ;; Auto vars:     Size  Location     Type
 21077 ;;		None
 21078 ;; Return value:  Size  Location     Type
 21079 ;;                  1    wreg      void 
 21080 ;; Registers used:
 21081 ;;		wreg, status,2
 21082 ;; Tracked objects:
 21083 ;;		On entry : 0/0
 21084 ;;		On exit  : 0/0
 21085 ;;		Unchanged: 0/0
 21086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21091 ;;Total ram usage:        0 bytes
 21092 ;; Hardware stack levels used:    1
 21093 ;; Hardware stack levels required when called:   13
 21094 ;; This function calls:
 21095 ;;		Nothing
 21096 ;; This function is called by:
 21097 ;;		_SYSTEM_Initialize
 21098 ;; This function uses a non-reentrant model
 21099 ;;
 21100                           
 21101                           	psect	text56
 21102  017FF0                     __ptext56:
 21103                           	opt stack 0
 21104  017FF0                     _PMD_Initialize:
 21105                           	opt stack 16
 21106                           
 21107                           ;mcc.c: 86: PMD0 = 0x00;
 21108                           
 21109                           ;incstack = 0
 21110  017FF0  0E00               	movlw	0
 21111  017FF2  010E               	movlb	14	; () banked
 21112  017FF4  6F4C               	movwf	76,b	;volatile
 21113                           
 21114                           ;mcc.c: 88: PMD1 = 0x00;
 21115  017FF6  0E00               	movlw	0
 21116  017FF8  6F4D               	movwf	77,b	;volatile
 21117                           
 21118                           ;mcc.c: 90: PMD2 = 0x00;
 21119  017FFA  0E00               	movlw	0
 21120  017FFC  6F4E               	movwf	78,b	;volatile
 21121                           
 21122                           ;mcc.c: 92: PMD3 = 0x00;
 21123  017FFE  0E00               	movlw	0
 21124  018000  6F4F               	movwf	79,b	;volatile
 21125                           
 21126                           ;mcc.c: 94: PMD4 = 0x00;
 21127  018002  0E00               	movlw	0
 21128  018004  6F50               	movwf	80,b	;volatile
 21129                           
 21130                           ;mcc.c: 96: PMD5 = 0x00;
 21131  018006  0E00               	movlw	0
 21132  018008  6F51               	movwf	81,b	;volatile
 21133                           
 21134                           ; BSR set to: 14
 21135  01800A  0012               	return		;funcret
 21136  01800C                     __end_of_PMD_Initialize:
 21137                           	opt stack 0
 21138                           tblptru	equ	0xFF8
 21139                           tblptrh	equ	0xFF7
 21140                           tblptrl	equ	0xFF6
 21141                           tablat	equ	0xFF5
 21142                           prodh	equ	0xFF4
 21143                           prodl	equ	0xFF3
 21144                           intcon	equ	0xFF2
 21145                           indf0	equ	0xFEF
 21146                           postinc0	equ	0xFEE
 21147                           fsr0h	equ	0xFEA
 21148                           fsr0l	equ	0xFE9
 21149                           wreg	equ	0xFE8
 21150                           indf1	equ	0xFE7
 21151                           postdec1	equ	0xFE5
 21152                           plusw1	equ	0xFE3
 21153                           fsr1h	equ	0xFE2
 21154                           fsr1l	equ	0xFE1
 21155                           indf2	equ	0xFDF
 21156                           postinc2	equ	0xFDE
 21157                           postdec2	equ	0xFDD
 21158                           plusw2	equ	0xFDB
 21159                           fsr2h	equ	0xFDA
 21160                           fsr2l	equ	0xFD9
 21161                           status	equ	0xFD8
 21162                           
 21163 ;; *************** function _PIN_MANAGER_Initialize *****************
 21164 ;; Defined at:
 21165 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21166 ;; Parameters:    Size  Location     Type
 21167 ;;		None
 21168 ;; Auto vars:     Size  Location     Type
 21169 ;;		None
 21170 ;; Return value:  Size  Location     Type
 21171 ;;                  1    wreg      void 
 21172 ;; Registers used:
 21173 ;;		wreg, status,2
 21174 ;; Tracked objects:
 21175 ;;		On entry : 0/0
 21176 ;;		On exit  : 0/0
 21177 ;;		Unchanged: 0/0
 21178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21183 ;;Total ram usage:        0 bytes
 21184 ;; Hardware stack levels used:    1
 21185 ;; Hardware stack levels required when called:   13
 21186 ;; This function calls:
 21187 ;;		Nothing
 21188 ;; This function is called by:
 21189 ;;		_SYSTEM_Initialize
 21190 ;; This function uses a non-reentrant model
 21191 ;;
 21192                           
 21193                           	psect	text57
 21194  016E80                     __ptext57:
 21195                           	opt stack 0
 21196  016E80                     _PIN_MANAGER_Initialize:
 21197                           	opt stack 16
 21198                           
 21199                           ;pin_manager.c: 62: LATE = 0x00;
 21200                           
 21201                           ; BSR set to: 14
 21202                           ;incstack = 0
 21203  016E80  0E00               	movlw	0
 21204  016E82  6E7D               	movwf	3965,c	;volatile
 21205                           
 21206                           ;pin_manager.c: 63: LATD = 0x00;
 21207  016E84  0E00               	movlw	0
 21208  016E86  6E7C               	movwf	3964,c	;volatile
 21209                           
 21210                           ;pin_manager.c: 64: LATA = 0x00;
 21211  016E88  0E00               	movlw	0
 21212  016E8A  6E79               	movwf	3961,c	;volatile
 21213                           
 21214                           ;pin_manager.c: 65: LATF = 0x00;
 21215  016E8C  0E00               	movlw	0
 21216  016E8E  6E7E               	movwf	3966,c	;volatile
 21217                           
 21218                           ;pin_manager.c: 66: LATB = 0x00;
 21219  016E90  0E00               	movlw	0
 21220  016E92  6E7A               	movwf	3962,c	;volatile
 21221                           
 21222                           ;pin_manager.c: 67: LATG = 0x00;
 21223  016E94  0E00               	movlw	0
 21224  016E96  6E7F               	movwf	3967,c	;volatile
 21225                           
 21226                           ;pin_manager.c: 68: LATC = 0x00;
 21227  016E98  0E00               	movlw	0
 21228  016E9A  6E7B               	movwf	3963,c	;volatile
 21229                           
 21230                           ;pin_manager.c: 69: LATH = 0x00;
 21231  016E9C  0E00               	movlw	0
 21232  016E9E  6E80               	movwf	3968,c	;volatile
 21233                           
 21234                           ;pin_manager.c: 74: TRISE = 0xFF;
 21235  016EA0  6885               	setf	3973,c	;volatile
 21236                           
 21237                           ;pin_manager.c: 75: TRISF = 0xF0;
 21238  016EA2  0EF0               	movlw	240
 21239  016EA4  6E86               	movwf	3974,c	;volatile
 21240                           
 21241                           ;pin_manager.c: 76: TRISA = 0xFF;
 21242  016EA6  6881               	setf	3969,c	;volatile
 21243                           
 21244                           ;pin_manager.c: 77: TRISG = 0x5C;
 21245  016EA8  0E5C               	movlw	92
 21246  016EAA  6E87               	movwf	3975,c	;volatile
 21247                           
 21248                           ;pin_manager.c: 78: TRISB = 0xFF;
 21249  016EAC  6882               	setf	3970,c	;volatile
 21250                           
 21251                           ;pin_manager.c: 79: TRISH = 0x0F;
 21252  016EAE  0E0F               	movlw	15
 21253  016EB0  6E88               	movwf	3976,c	;volatile
 21254                           
 21255                           ;pin_manager.c: 80: TRISC = 0xFF;
 21256  016EB2  6883               	setf	3971,c	;volatile
 21257                           
 21258                           ;pin_manager.c: 81: TRISD = 0xFF;
 21259  016EB4  6884               	setf	3972,c	;volatile
 21260                           
 21261                           ;pin_manager.c: 86: ANSELD = 0xFF;
 21262  016EB6  010E               	movlb	14	; () banked
 21263  016EB8  69A7               	setf	167,b	;volatile
 21264                           
 21265                           ; BSR set to: 14
 21266                           ;pin_manager.c: 87: ANSELB = 0xFF;
 21267  016EBA  699A               	setf	154,b	;volatile
 21268                           
 21269                           ; BSR set to: 14
 21270                           ;pin_manager.c: 88: ANSELE = 0xFF;
 21271  016EBC  69AF               	setf	175,b	;volatile
 21272                           
 21273                           ;pin_manager.c: 89: ANSELG = 0x3C;
 21274  016EBE  0E3C               	movlw	60
 21275  016EC0  6FBC               	movwf	188,b	;volatile
 21276                           
 21277                           ;pin_manager.c: 90: ANSELF = 0xF0;
 21278  016EC2  0EF0               	movlw	240
 21279  016EC4  6FB4               	movwf	180,b	;volatile
 21280                           
 21281                           ; BSR set to: 14
 21282                           ;pin_manager.c: 91: ANSELA = 0xFF;
 21283  016EC6  6992               	setf	146,b	;volatile
 21284                           
 21285                           ;pin_manager.c: 96: WPUD = 0x00;
 21286  016EC8  0E00               	movlw	0
 21287  016ECA  6FA6               	movwf	166,b	;volatile
 21288                           
 21289                           ;pin_manager.c: 97: WPUF = 0x00;
 21290  016ECC  0E00               	movlw	0
 21291  016ECE  6FB3               	movwf	179,b	;volatile
 21292                           
 21293                           ;pin_manager.c: 98: WPUE = 0x00;
 21294  016ED0  0E00               	movlw	0
 21295  016ED2  6FAE               	movwf	174,b	;volatile
 21296                           
 21297                           ;pin_manager.c: 99: WPUB = 0x00;
 21298  016ED4  0E00               	movlw	0
 21299  016ED6  6F99               	movwf	153,b	;volatile
 21300                           
 21301                           ;pin_manager.c: 100: WPUG = 0x00;
 21302  016ED8  0E00               	movlw	0
 21303  016EDA  6FBB               	movwf	187,b	;volatile
 21304                           
 21305                           ;pin_manager.c: 101: WPUA = 0x00;
 21306  016EDC  0E00               	movlw	0
 21307  016EDE  6F91               	movwf	145,b	;volatile
 21308                           
 21309                           ;pin_manager.c: 102: WPUC = 0x00;
 21310  016EE0  0E00               	movlw	0
 21311  016EE2  6FA1               	movwf	161,b	;volatile
 21312                           
 21313                           ;pin_manager.c: 103: WPUH = 0x00;
 21314  016EE4  0E00               	movlw	0
 21315  016EE6  6FC0               	movwf	192,b	;volatile
 21316                           
 21317                           ;pin_manager.c: 108: ODCONE = 0x00;
 21318  016EE8  0E00               	movlw	0
 21319  016EEA  6FAD               	movwf	173,b	;volatile
 21320                           
 21321                           ;pin_manager.c: 109: ODCONF = 0x01;
 21322  016EEC  0E01               	movlw	1
 21323  016EEE  6FB2               	movwf	178,b	;volatile
 21324                           
 21325                           ;pin_manager.c: 110: ODCONA = 0x00;
 21326  016EF0  0E00               	movlw	0
 21327  016EF2  6F90               	movwf	144,b	;volatile
 21328                           
 21329                           ;pin_manager.c: 111: ODCONG = 0x00;
 21330  016EF4  0E00               	movlw	0
 21331  016EF6  6FBA               	movwf	186,b	;volatile
 21332                           
 21333                           ;pin_manager.c: 112: ODCONB = 0x00;
 21334  016EF8  0E00               	movlw	0
 21335  016EFA  6F98               	movwf	152,b	;volatile
 21336                           
 21337                           ;pin_manager.c: 113: ODCONH = 0x00;
 21338  016EFC  0E00               	movlw	0
 21339  016EFE  6FBF               	movwf	191,b	;volatile
 21340                           
 21341                           ;pin_manager.c: 114: ODCONC = 0x00;
 21342  016F00  0E00               	movlw	0
 21343  016F02  6FA0               	movwf	160,b	;volatile
 21344                           
 21345                           ;pin_manager.c: 115: ODCOND = 0x00;
 21346  016F04  0E00               	movlw	0
 21347  016F06  6FA5               	movwf	165,b	;volatile
 21348                           
 21349                           ; BSR set to: 14
 21350                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 21351  016F08  698F               	setf	143,b	;volatile
 21352                           
 21353                           ; BSR set to: 14
 21354                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 21355  016F0A  6997               	setf	151,b	;volatile
 21356                           
 21357                           ; BSR set to: 14
 21358                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 21359  016F0C  699F               	setf	159,b	;volatile
 21360                           
 21361                           ; BSR set to: 14
 21362                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 21363  016F0E  69A4               	setf	164,b	;volatile
 21364                           
 21365                           ; BSR set to: 14
 21366                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 21367  016F10  69AC               	setf	172,b	;volatile
 21368                           
 21369                           ; BSR set to: 14
 21370                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 21371  016F12  69B1               	setf	177,b	;volatile
 21372                           
 21373                           ; BSR set to: 14
 21374                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 21375  016F14  69B9               	setf	185,b	;volatile
 21376                           
 21377                           ; BSR set to: 14
 21378                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 21379  016F16  69BE               	setf	190,b	;volatile
 21380                           
 21381                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 21382  016F18  0E0E               	movlw	14
 21383  016F1A  6F89               	movwf	137,b	;volatile
 21384                           
 21385                           ;pin_manager.c: 137: RX2PPS = 0x36;
 21386  016F1C  0E36               	movlw	54
 21387  016F1E  6F11               	movwf	17,b	;volatile
 21388                           
 21389                           ; BSR set to: 14
 21390  016F20  0012               	return		;funcret
 21391  016F22                     __end_of_PIN_MANAGER_Initialize:
 21392                           	opt stack 0
 21393                           tblptru	equ	0xFF8
 21394                           tblptrh	equ	0xFF7
 21395                           tblptrl	equ	0xFF6
 21396                           tablat	equ	0xFF5
 21397                           prodh	equ	0xFF4
 21398                           prodl	equ	0xFF3
 21399                           intcon	equ	0xFF2
 21400                           indf0	equ	0xFEF
 21401                           postinc0	equ	0xFEE
 21402                           fsr0h	equ	0xFEA
 21403                           fsr0l	equ	0xFE9
 21404                           wreg	equ	0xFE8
 21405                           indf1	equ	0xFE7
 21406                           postdec1	equ	0xFE5
 21407                           plusw1	equ	0xFE3
 21408                           fsr1h	equ	0xFE2
 21409                           fsr1l	equ	0xFE1
 21410                           indf2	equ	0xFDF
 21411                           postinc2	equ	0xFDE
 21412                           postdec2	equ	0xFDD
 21413                           plusw2	equ	0xFDB
 21414                           fsr2h	equ	0xFDA
 21415                           fsr2l	equ	0xFD9
 21416                           status	equ	0xFD8
 21417                           
 21418 ;; *************** function _OSCILLATOR_Initialize *****************
 21419 ;; Defined at:
 21420 ;;		line 65 in file "mcc_generated_files/mcc.c"
 21421 ;; Parameters:    Size  Location     Type
 21422 ;;		None
 21423 ;; Auto vars:     Size  Location     Type
 21424 ;;		None
 21425 ;; Return value:  Size  Location     Type
 21426 ;;                  1    wreg      void 
 21427 ;; Registers used:
 21428 ;;		wreg, status,2
 21429 ;; Tracked objects:
 21430 ;;		On entry : 0/0
 21431 ;;		On exit  : 0/0
 21432 ;;		Unchanged: 0/0
 21433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21438 ;;Total ram usage:        0 bytes
 21439 ;; Hardware stack levels used:    1
 21440 ;; Hardware stack levels required when called:   13
 21441 ;; This function calls:
 21442 ;;		Nothing
 21443 ;; This function is called by:
 21444 ;;		_SYSTEM_Initialize
 21445 ;; This function uses a non-reentrant model
 21446 ;;
 21447                           
 21448                           	psect	text58
 21449  01800C                     __ptext58:
 21450                           	opt stack 0
 21451  01800C                     _OSCILLATOR_Initialize:
 21452                           	opt stack 16
 21453                           
 21454                           ;mcc.c: 68: OSCCON1 = 0x20;
 21455                           
 21456                           ; BSR set to: 14
 21457                           ;incstack = 0
 21458  01800C  0E20               	movlw	32
 21459  01800E  010E               	movlb	14	; () banked
 21460  018010  6F43               	movwf	67,b	;volatile
 21461                           
 21462                           ;mcc.c: 70: OSCCON3 = 0x00;
 21463  018012  0E00               	movlw	0
 21464  018014  6F45               	movwf	69,b	;volatile
 21465                           
 21466                           ;mcc.c: 72: OSCEN = 0x00;
 21467  018016  0E00               	movlw	0
 21468  018018  6F47               	movwf	71,b	;volatile
 21469                           
 21470                           ;mcc.c: 74: OSCFRQ = 0x02;
 21471  01801A  0E02               	movlw	2
 21472  01801C  6F49               	movwf	73,b	;volatile
 21473                           
 21474                           ;mcc.c: 76: OSCTUNE = 0x00;
 21475  01801E  0E00               	movlw	0
 21476  018020  6F48               	movwf	72,b	;volatile
 21477  018022                     
 21478                           ; BSR set to: 14
 21479                           
 21480                           ; BSR set to: 14
 21481                           ;mcc.c: 79: {
 21482  018022  B146               	btfsc	70,0,b	;volatile
 21483  018024  0012               	return	
 21484  018026  D7FD               	goto	l57
 21485  018028                     __end_of_OSCILLATOR_Initialize:
 21486                           	opt stack 0
 21487                           tblptru	equ	0xFF8
 21488                           tblptrh	equ	0xFF7
 21489                           tblptrl	equ	0xFF6
 21490                           tablat	equ	0xFF5
 21491                           prodh	equ	0xFF4
 21492                           prodl	equ	0xFF3
 21493                           intcon	equ	0xFF2
 21494                           indf0	equ	0xFEF
 21495                           postinc0	equ	0xFEE
 21496                           fsr0h	equ	0xFEA
 21497                           fsr0l	equ	0xFE9
 21498                           wreg	equ	0xFE8
 21499                           indf1	equ	0xFE7
 21500                           postdec1	equ	0xFE5
 21501                           plusw1	equ	0xFE3
 21502                           fsr1h	equ	0xFE2
 21503                           fsr1l	equ	0xFE1
 21504                           indf2	equ	0xFDF
 21505                           postinc2	equ	0xFDE
 21506                           postdec2	equ	0xFDD
 21507                           plusw2	equ	0xFDB
 21508                           fsr2h	equ	0xFDA
 21509                           fsr2l	equ	0xFD9
 21510                           status	equ	0xFD8
 21511                           
 21512 ;; *************** function _INTERRUPT_Initialize *****************
 21513 ;; Defined at:
 21514 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21515 ;; Parameters:    Size  Location     Type
 21516 ;;		None
 21517 ;; Auto vars:     Size  Location     Type
 21518 ;;		None
 21519 ;; Return value:  Size  Location     Type
 21520 ;;                  1    wreg      void 
 21521 ;; Registers used:
 21522 ;;		None
 21523 ;; Tracked objects:
 21524 ;;		On entry : 0/0
 21525 ;;		On exit  : 0/0
 21526 ;;		Unchanged: 0/0
 21527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21532 ;;Total ram usage:        0 bytes
 21533 ;; Hardware stack levels used:    1
 21534 ;; Hardware stack levels required when called:   13
 21535 ;; This function calls:
 21536 ;;		Nothing
 21537 ;; This function is called by:
 21538 ;;		_SYSTEM_Initialize
 21539 ;; This function uses a non-reentrant model
 21540 ;;
 21541                           
 21542                           	psect	text59
 21543  01805E                     __ptext59:
 21544                           	opt stack 0
 21545  01805E                     _INTERRUPT_Initialize:
 21546                           	opt stack 16
 21547                           
 21548                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 21549                           
 21550                           ; BSR set to: 14
 21551                           ;incstack = 0
 21552  01805E  8AF2               	bsf	intcon,5,c	;volatile
 21553                           
 21554                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 21555  018060  010E               	movlb	14	; () banked
 21556  018062  8F22               	bsf	34,7,b	;volatile
 21557                           
 21558                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 21559  018064  8924               	bsf	36,4,b	;volatile
 21560                           
 21561                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 21562  018066  8120               	bsf	32,0,b	;volatile
 21563                           
 21564                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 21565  018068  9B24               	bcf	36,5,b	;volatile
 21566                           
 21567                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 21568  01806A  9D22               	bcf	34,6,b	;volatile
 21569                           
 21570                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 21571  01806C  9D24               	bcf	36,6,b	;volatile
 21572                           
 21573                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 21574  01806E  9F21               	bcf	33,7,b	;volatile
 21575                           
 21576                           ; BSR set to: 14
 21577  018070  0012               	return		;funcret
 21578  018072                     __end_of_INTERRUPT_Initialize:
 21579                           	opt stack 0
 21580                           tblptru	equ	0xFF8
 21581                           tblptrh	equ	0xFF7
 21582                           tblptrl	equ	0xFF6
 21583                           tablat	equ	0xFF5
 21584                           prodh	equ	0xFF4
 21585                           prodl	equ	0xFF3
 21586                           intcon	equ	0xFF2
 21587                           indf0	equ	0xFEF
 21588                           postinc0	equ	0xFEE
 21589                           fsr0h	equ	0xFEA
 21590                           fsr0l	equ	0xFE9
 21591                           wreg	equ	0xFE8
 21592                           indf1	equ	0xFE7
 21593                           postdec1	equ	0xFE5
 21594                           plusw1	equ	0xFE3
 21595                           fsr1h	equ	0xFE2
 21596                           fsr1l	equ	0xFE1
 21597                           indf2	equ	0xFDF
 21598                           postinc2	equ	0xFDE
 21599                           postdec2	equ	0xFDD
 21600                           plusw2	equ	0xFDB
 21601                           fsr2h	equ	0xFDA
 21602                           fsr2l	equ	0xFD9
 21603                           status	equ	0xFD8
 21604                           
 21605 ;; *************** function _HLVD_Initialize *****************
 21606 ;; Defined at:
 21607 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 21608 ;; Parameters:    Size  Location     Type
 21609 ;;		None
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;		None
 21612 ;; Return value:  Size  Location     Type
 21613 ;;                  1    wreg      void 
 21614 ;; Registers used:
 21615 ;;		wreg, status,2
 21616 ;; Tracked objects:
 21617 ;;		On entry : 0/0
 21618 ;;		On exit  : 0/0
 21619 ;;		Unchanged: 0/0
 21620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21625 ;;Total ram usage:        0 bytes
 21626 ;; Hardware stack levels used:    1
 21627 ;; Hardware stack levels required when called:   13
 21628 ;; This function calls:
 21629 ;;		Nothing
 21630 ;; This function is called by:
 21631 ;;		_SYSTEM_Initialize
 21632 ;; This function uses a non-reentrant model
 21633 ;;
 21634                           
 21635                           	psect	text60
 21636  0180C8                     __ptext60:
 21637                           	opt stack 0
 21638  0180C8                     _HLVD_Initialize:
 21639                           	opt stack 16
 21640                           
 21641                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 21642                           
 21643                           ; BSR set to: 14
 21644                           ;incstack = 0
 21645  0180C8  0E09               	movlw	9
 21646  0180CA  010E               	movlb	14	; () banked
 21647  0180CC  6FC3               	movwf	195,b	;volatile
 21648                           
 21649                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 21650  0180CE  0E82               	movlw	130
 21651  0180D0  6FC2               	movwf	194,b	;volatile
 21652                           
 21653                           ; BSR set to: 14
 21654                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 21655  0180D2  9F35               	bcf	53,7,b	;volatile
 21656                           
 21657                           ; BSR set to: 14
 21658                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 21659  0180D4  8F2B               	bsf	43,7,b	;volatile
 21660                           
 21661                           ; BSR set to: 14
 21662  0180D6  0012               	return		;funcret
 21663  0180D8                     __end_of_HLVD_Initialize:
 21664                           	opt stack 0
 21665                           tblptru	equ	0xFF8
 21666                           tblptrh	equ	0xFF7
 21667                           tblptrl	equ	0xFF6
 21668                           tablat	equ	0xFF5
 21669                           prodh	equ	0xFF4
 21670                           prodl	equ	0xFF3
 21671                           intcon	equ	0xFF2
 21672                           indf0	equ	0xFEF
 21673                           postinc0	equ	0xFEE
 21674                           fsr0h	equ	0xFEA
 21675                           fsr0l	equ	0xFE9
 21676                           wreg	equ	0xFE8
 21677                           indf1	equ	0xFE7
 21678                           postdec1	equ	0xFE5
 21679                           plusw1	equ	0xFE3
 21680                           fsr1h	equ	0xFE2
 21681                           fsr1l	equ	0xFE1
 21682                           indf2	equ	0xFDF
 21683                           postinc2	equ	0xFDE
 21684                           postdec2	equ	0xFDD
 21685                           plusw2	equ	0xFDB
 21686                           fsr2h	equ	0xFDA
 21687                           fsr2l	equ	0xFD9
 21688                           status	equ	0xFD8
 21689                           
 21690 ;; *************** function _FVR_Initialize *****************
 21691 ;; Defined at:
 21692 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21693 ;; Parameters:    Size  Location     Type
 21694 ;;		None
 21695 ;; Auto vars:     Size  Location     Type
 21696 ;;		None
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  1    wreg      void 
 21699 ;; Registers used:
 21700 ;;		wreg, status,2
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 0/0
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21710 ;;Total ram usage:        0 bytes
 21711 ;; Hardware stack levels used:    1
 21712 ;; Hardware stack levels required when called:   13
 21713 ;; This function calls:
 21714 ;;		Nothing
 21715 ;; This function is called by:
 21716 ;;		_SYSTEM_Initialize
 21717 ;; This function uses a non-reentrant model
 21718 ;;
 21719                           
 21720                           	psect	text61
 21721  01815E                     __ptext61:
 21722                           	opt stack 0
 21723  01815E                     _FVR_Initialize:
 21724                           	opt stack 16
 21725                           
 21726                           ;fvr.c: 61: FVRCON = 0xA6;
 21727                           
 21728                           ; BSR set to: 14
 21729                           ;incstack = 0
 21730  01815E  0EA6               	movlw	166
 21731  018160  010E               	movlb	14	; () banked
 21732  018162  6FC4               	movwf	196,b	;volatile
 21733                           
 21734                           ; BSR set to: 14
 21735  018164  0012               	return		;funcret
 21736  018166                     __end_of_FVR_Initialize:
 21737                           	opt stack 0
 21738                           tblptru	equ	0xFF8
 21739                           tblptrh	equ	0xFF7
 21740                           tblptrl	equ	0xFF6
 21741                           tablat	equ	0xFF5
 21742                           prodh	equ	0xFF4
 21743                           prodl	equ	0xFF3
 21744                           intcon	equ	0xFF2
 21745                           indf0	equ	0xFEF
 21746                           postinc0	equ	0xFEE
 21747                           fsr0h	equ	0xFEA
 21748                           fsr0l	equ	0xFE9
 21749                           wreg	equ	0xFE8
 21750                           indf1	equ	0xFE7
 21751                           postdec1	equ	0xFE5
 21752                           plusw1	equ	0xFE3
 21753                           fsr1h	equ	0xFE2
 21754                           fsr1l	equ	0xFE1
 21755                           indf2	equ	0xFDF
 21756                           postinc2	equ	0xFDE
 21757                           postdec2	equ	0xFDD
 21758                           plusw2	equ	0xFDB
 21759                           fsr2h	equ	0xFDA
 21760                           fsr2l	equ	0xFD9
 21761                           status	equ	0xFD8
 21762                           
 21763 ;; *************** function _EUSART2_Initialize *****************
 21764 ;; Defined at:
 21765 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 21766 ;; Parameters:    Size  Location     Type
 21767 ;;		None
 21768 ;; Auto vars:     Size  Location     Type
 21769 ;;		None
 21770 ;; Return value:  Size  Location     Type
 21771 ;;                  1    wreg      void 
 21772 ;; Registers used:
 21773 ;;		wreg, status,2, status,0, cstack
 21774 ;; Tracked objects:
 21775 ;;		On entry : 0/0
 21776 ;;		On exit  : 0/0
 21777 ;;		Unchanged: 0/0
 21778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21783 ;;Total ram usage:        0 bytes
 21784 ;; Hardware stack levels used:    1
 21785 ;; Hardware stack levels required when called:   14
 21786 ;; This function calls:
 21787 ;;		_EUSART2_SetRxInterruptHandler
 21788 ;;		_EUSART2_SetTxInterruptHandler
 21789 ;; This function is called by:
 21790 ;;		_SYSTEM_Initialize
 21791 ;; This function uses a non-reentrant model
 21792 ;;
 21793                           
 21794                           	psect	text62
 21795  017594                     __ptext62:
 21796                           	opt stack 0
 21797  017594                     _EUSART2_Initialize:
 21798                           	opt stack 15
 21799                           
 21800                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 21801                           
 21802                           ; BSR set to: 14
 21803                           ;incstack = 0
 21804  017594  827E               	bsf	3966,1,c	;volatile
 21805                           
 21806                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 21807  017596  010E               	movlb	14	; () banked
 21808  017598  9F2C               	bcf	44,7,b	;volatile
 21809                           
 21810                           ; BSR set to: 14
 21811                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 21812  01759A  0ED2               	movlw	low _EUSART2_Receive_ISR
 21813  01759C  0101               	movlb	1	; () banked
 21814  01759E  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 21815  0175A0  0E6D               	movlw	high _EUSART2_Receive_ISR
 21816  0175A2  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 21817  0175A4  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 21818  0175A6  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 21819  0175A8  EC8F  F0C0         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 21820                           
 21821                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 21822  0175AC  010E               	movlb	14	; () banked
 21823  0175AE  9D2C               	bcf	44,6,b	;volatile
 21824                           
 21825                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 21826  0175B0  0EF6               	movlw	low _EUSART2_Transmit_ISR
 21827  0175B2  0101               	movlb	1	; () banked
 21828  0175B4  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 21829  0175B6  0E7C               	movlw	high _EUSART2_Transmit_ISR
 21830  0175B8  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 21831  0175BA  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 21832  0175BC  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 21833  0175BE  EC88  F0C0         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 21834                           
 21835                           ;eusart2.c: 91: BAUD2CON = 0x08;
 21836  0175C2  0E08               	movlw	8
 21837  0175C4  010E               	movlb	14	; () banked
 21838  0175C6  6FF7               	movwf	247,b	;volatile
 21839                           
 21840                           ; BSR set to: 14
 21841                           ;eusart2.c: 94: RC2STA = 0x90;
 21842  0175C8  0E90               	movlw	144
 21843  0175CA  6FF5               	movwf	245,b	;volatile
 21844                           
 21845                           ; BSR set to: 14
 21846                           ;eusart2.c: 97: TX2STA = 0x24;
 21847  0175CC  0E24               	movlw	36
 21848  0175CE  6FF6               	movwf	246,b	;volatile
 21849                           
 21850                           ; BSR set to: 14
 21851                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 21852  0175D0  0E8A               	movlw	138
 21853  0175D2  6FF3               	movwf	243,b	;volatile
 21854                           
 21855                           ; BSR set to: 14
 21856                           ;eusart2.c: 103: SP2BRGH = 0x00;
 21857  0175D4  0E00               	movlw	0
 21858  0175D6  6FF4               	movwf	244,b	;volatile
 21859                           
 21860                           ; BSR set to: 14
 21861                           ;eusart2.c: 107: eusart2TxHead = 0;
 21862  0175D8  0E00               	movlw	0
 21863  0175DA  0101               	movlb	1	; () banked
 21864  0175DC  6FE2               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21865                           
 21866                           ; BSR set to: 1
 21867                           ;eusart2.c: 108: eusart2TxTail = 0;
 21868  0175DE  0E00               	movlw	0
 21869  0175E0  6FE1               	movwf	_eusart2TxTail& (0+255),b	;volatile
 21870                           
 21871                           ; BSR set to: 1
 21872                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 21873  0175E2  0E80               	movlw	128
 21874  0175E4  6FE0               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;eusart2.c: 111: eusart2RxHead = 0;
 21878  0175E6  0E00               	movlw	0
 21879  0175E8  0100               	movlb	0	; () banked
 21880  0175EA  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;eusart2.c: 112: eusart2RxTail = 0;
 21884  0175EC  0E00               	movlw	0
 21885  0175EE  0101               	movlb	1	; () banked
 21886  0175F0  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
 21887                           
 21888                           ; BSR set to: 1
 21889                           ;eusart2.c: 113: eusart2RxCount = 0;
 21890  0175F2  0E00               	movlw	0
 21891  0175F4  6FDE               	movwf	_eusart2RxCount& (0+255),b	;volatile
 21892                           
 21893                           ; BSR set to: 1
 21894                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 21895  0175F6  010E               	movlb	14	; () banked
 21896  0175F8  8F2C               	bsf	44,7,b	;volatile
 21897                           
 21898                           ; BSR set to: 14
 21899                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 21900  0175FA  927E               	bcf	3966,1,c	;volatile
 21901                           
 21902                           ; BSR set to: 14
 21903  0175FC  0012               	return		;funcret
 21904  0175FE                     __end_of_EUSART2_Initialize:
 21905                           	opt stack 0
 21906                           tblptru	equ	0xFF8
 21907                           tblptrh	equ	0xFF7
 21908                           tblptrl	equ	0xFF6
 21909                           tablat	equ	0xFF5
 21910                           prodh	equ	0xFF4
 21911                           prodl	equ	0xFF3
 21912                           intcon	equ	0xFF2
 21913                           indf0	equ	0xFEF
 21914                           postinc0	equ	0xFEE
 21915                           fsr0h	equ	0xFEA
 21916                           fsr0l	equ	0xFE9
 21917                           wreg	equ	0xFE8
 21918                           indf1	equ	0xFE7
 21919                           postdec1	equ	0xFE5
 21920                           plusw1	equ	0xFE3
 21921                           fsr1h	equ	0xFE2
 21922                           fsr1l	equ	0xFE1
 21923                           indf2	equ	0xFDF
 21924                           postinc2	equ	0xFDE
 21925                           postdec2	equ	0xFDD
 21926                           plusw2	equ	0xFDB
 21927                           fsr2h	equ	0xFDA
 21928                           fsr2l	equ	0xFD9
 21929                           status	equ	0xFD8
 21930                           
 21931 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 21932 ;; Defined at:
 21933 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 21934 ;; Parameters:    Size  Location     Type
 21935 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21936 ;;		 -> EUSART2_Transmit_ISR(1), 
 21937 ;; Auto vars:     Size  Location     Type
 21938 ;;		None
 21939 ;; Return value:  Size  Location     Type
 21940 ;;                  1    wreg      void 
 21941 ;; Registers used:
 21942 ;;		wreg, status,2, status,0
 21943 ;; Tracked objects:
 21944 ;;		On entry : 0/0
 21945 ;;		On exit  : 0/0
 21946 ;;		Unchanged: 0/0
 21947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21948 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21951 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21952 ;;Total ram usage:        3 bytes
 21953 ;; Hardware stack levels used:    1
 21954 ;; Hardware stack levels required when called:   13
 21955 ;; This function calls:
 21956 ;;		Nothing
 21957 ;; This function is called by:
 21958 ;;		_EUSART2_Initialize
 21959 ;; This function uses a non-reentrant model
 21960 ;;
 21961                           
 21962                           	psect	text63
 21963  018110                     __ptext63:
 21964                           	opt stack 0
 21965  018110                     _EUSART2_SetTxInterruptHandler:
 21966                           	opt stack 15
 21967                           
 21968                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 21969                           
 21970                           ; BSR set to: 14
 21971                           ;incstack = 0
 21972  018110  C117  F26F         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 21973  018114  C118  F270         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 21974  018118  C119  F271         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 21975  01811C  0012               	return		;funcret
 21976  01811E                     __end_of_EUSART2_SetTxInterruptHandler:
 21977                           	opt stack 0
 21978                           tblptru	equ	0xFF8
 21979                           tblptrh	equ	0xFF7
 21980                           tblptrl	equ	0xFF6
 21981                           tablat	equ	0xFF5
 21982                           prodh	equ	0xFF4
 21983                           prodl	equ	0xFF3
 21984                           intcon	equ	0xFF2
 21985                           indf0	equ	0xFEF
 21986                           postinc0	equ	0xFEE
 21987                           fsr0h	equ	0xFEA
 21988                           fsr0l	equ	0xFE9
 21989                           wreg	equ	0xFE8
 21990                           indf1	equ	0xFE7
 21991                           postdec1	equ	0xFE5
 21992                           plusw1	equ	0xFE3
 21993                           fsr1h	equ	0xFE2
 21994                           fsr1l	equ	0xFE1
 21995                           indf2	equ	0xFDF
 21996                           postinc2	equ	0xFDE
 21997                           postdec2	equ	0xFDD
 21998                           plusw2	equ	0xFDB
 21999                           fsr2h	equ	0xFDA
 22000                           fsr2l	equ	0xFD9
 22001                           status	equ	0xFD8
 22002                           
 22003 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 22004 ;; Defined at:
 22005 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 22006 ;; Parameters:    Size  Location     Type
 22007 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 22008 ;;		 -> EUSART2_Receive_ISR(1), 
 22009 ;; Auto vars:     Size  Location     Type
 22010 ;;		None
 22011 ;; Return value:  Size  Location     Type
 22012 ;;                  1    wreg      void 
 22013 ;; Registers used:
 22014 ;;		wreg, status,2, status,0
 22015 ;; Tracked objects:
 22016 ;;		On entry : 0/0
 22017 ;;		On exit  : 0/0
 22018 ;;		Unchanged: 0/0
 22019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22020 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22023 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22024 ;;Total ram usage:        3 bytes
 22025 ;; Hardware stack levels used:    1
 22026 ;; Hardware stack levels required when called:   13
 22027 ;; This function calls:
 22028 ;;		Nothing
 22029 ;; This function is called by:
 22030 ;;		_EUSART2_Initialize
 22031 ;; This function uses a non-reentrant model
 22032 ;;
 22033                           
 22034                           	psect	text64
 22035  01811E                     __ptext64:
 22036                           	opt stack 0
 22037  01811E                     _EUSART2_SetRxInterruptHandler:
 22038                           	opt stack 15
 22039                           
 22040                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 22041                           
 22042                           ;incstack = 0
 22043  01811E  C117  F26C         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 22044  018122  C118  F26D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 22045  018126  C119  F26E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 22046  01812A  0012               	return		;funcret
 22047  01812C                     __end_of_EUSART2_SetRxInterruptHandler:
 22048                           	opt stack 0
 22049                           tblptru	equ	0xFF8
 22050                           tblptrh	equ	0xFF7
 22051                           tblptrl	equ	0xFF6
 22052                           tablat	equ	0xFF5
 22053                           prodh	equ	0xFF4
 22054                           prodl	equ	0xFF3
 22055                           intcon	equ	0xFF2
 22056                           indf0	equ	0xFEF
 22057                           postinc0	equ	0xFEE
 22058                           fsr0h	equ	0xFEA
 22059                           fsr0l	equ	0xFE9
 22060                           wreg	equ	0xFE8
 22061                           indf1	equ	0xFE7
 22062                           postdec1	equ	0xFE5
 22063                           plusw1	equ	0xFE3
 22064                           fsr1h	equ	0xFE2
 22065                           fsr1l	equ	0xFE1
 22066                           indf2	equ	0xFDF
 22067                           postinc2	equ	0xFDE
 22068                           postdec2	equ	0xFDD
 22069                           plusw2	equ	0xFDB
 22070                           fsr2h	equ	0xFDA
 22071                           fsr2l	equ	0xFD9
 22072                           status	equ	0xFD8
 22073                           
 22074 ;; *************** function _ADCC_Initialize *****************
 22075 ;; Defined at:
 22076 ;;		line 63 in file "mcc_generated_files/adcc.c"
 22077 ;; Parameters:    Size  Location     Type
 22078 ;;		None
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;		None
 22081 ;; Return value:  Size  Location     Type
 22082 ;;                  1    wreg      void 
 22083 ;; Registers used:
 22084 ;;		wreg, status,2, status,0, cstack
 22085 ;; Tracked objects:
 22086 ;;		On entry : 0/0
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22094 ;;Total ram usage:        0 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:   14
 22097 ;; This function calls:
 22098 ;;		_ADCC_SetADIInterruptHandler
 22099 ;; This function is called by:
 22100 ;;		_SYSTEM_Initialize
 22101 ;; This function uses a non-reentrant model
 22102 ;;
 22103                           
 22104                           	psect	text65
 22105  017734                     __ptext65:
 22106                           	opt stack 0
 22107  017734                     _ADCC_Initialize:
 22108                           	opt stack 15
 22109                           
 22110                           ;adcc.c: 67: ADLTHL = 0x00;
 22111                           
 22112                           ;incstack = 0
 22113  017734  0E00               	movlw	0
 22114  017736  6E6A               	movwf	3946,c	;volatile
 22115                           
 22116                           ;adcc.c: 69: ADLTHH = 0x00;
 22117  017738  0E00               	movlw	0
 22118  01773A  6E6B               	movwf	3947,c	;volatile
 22119                           
 22120                           ;adcc.c: 71: ADUTHL = 0x00;
 22121  01773C  0E00               	movlw	0
 22122  01773E  6E6C               	movwf	3948,c	;volatile
 22123                           
 22124                           ;adcc.c: 73: ADUTHH = 0x00;
 22125  017740  0E00               	movlw	0
 22126  017742  6E6D               	movwf	3949,c	;volatile
 22127                           
 22128                           ;adcc.c: 75: ADSTPTL = 0x00;
 22129  017744  0E00               	movlw	0
 22130  017746  6E68               	movwf	3944,c	;volatile
 22131                           
 22132                           ;adcc.c: 77: ADSTPTH = 0x00;
 22133  017748  0E00               	movlw	0
 22134  01774A  6E69               	movwf	3945,c	;volatile
 22135                           
 22136                           ;adcc.c: 79: ADRPT = 0x00;
 22137  01774C  0E00               	movlw	0
 22138  01774E  6E66               	movwf	3942,c	;volatile
 22139                           
 22140                           ;adcc.c: 81: ADPCH = 0x00;
 22141  017750  0E00               	movlw	0
 22142  017752  010F               	movlb	15	; () banked
 22143  017754  6F5F               	movwf	95,b	;volatile
 22144                           
 22145                           ;adcc.c: 83: ADCAP = 0x00;
 22146  017756  0E00               	movlw	0
 22147  017758  6F5D               	movwf	93,b	;volatile
 22148                           
 22149                           ;adcc.c: 85: ADCON1 = 0x00;
 22150  01775A  0E00               	movlw	0
 22151  01775C  6F59               	movwf	89,b	;volatile
 22152                           
 22153                           ;adcc.c: 87: ADCON2 = 0x04;
 22154  01775E  0E04               	movlw	4
 22155  017760  6F5A               	movwf	90,b	;volatile
 22156                           
 22157                           ;adcc.c: 89: ADCON3 = 0x00;
 22158  017762  0E00               	movlw	0
 22159  017764  6F5B               	movwf	91,b	;volatile
 22160                           
 22161                           ;adcc.c: 91: ADSTAT = 0x00;
 22162  017766  0E00               	movlw	0
 22163  017768  6E65               	movwf	3941,c	;volatile
 22164                           
 22165                           ;adcc.c: 93: ADREF = 0x12;
 22166  01776A  0E12               	movlw	18
 22167  01776C  6F58               	movwf	88,b	;volatile
 22168                           
 22169                           ;adcc.c: 95: ADACT = 0x00;
 22170  01776E  0E00               	movlw	0
 22171  017770  6F56               	movwf	86,b	;volatile
 22172                           
 22173                           ;adcc.c: 97: ADCLK = 0x00;
 22174  017772  0E00               	movlw	0
 22175  017774  6F57               	movwf	87,b	;volatile
 22176                           
 22177                           ;adcc.c: 99: ADCON0 = 0x94;
 22178  017776  0E94               	movlw	148
 22179  017778  6E60               	movwf	3936,c	;volatile
 22180                           
 22181                           ;adcc.c: 101: ADACQ = 0x00;
 22182  01777A  0E00               	movlw	0
 22183  01777C  6F5C               	movwf	92,b	;volatile
 22184                           
 22185                           ; BSR set to: 15
 22186                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 22187  01777E  010E               	movlb	14	; () banked
 22188  017780  9134               	bcf	52,0,b	;volatile
 22189                           
 22190                           ; BSR set to: 14
 22191                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 22192  017782  812A               	bsf	42,0,b	;volatile
 22193                           
 22194                           ; BSR set to: 14
 22195                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 22196  017784  0E8C               	movlw	low _ADCC_DefaultInterruptHandler
 22197  017786  0101               	movlb	1	; () banked
 22198  017788  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 22199  01778A  0E81               	movlw	high _ADCC_DefaultInterruptHandler
 22200  01778C  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 22201  01778E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22202  017790  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 22203  017792  EC96  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22204  017796  0012               	return		;funcret
 22205  017798                     __end_of_ADCC_Initialize:
 22206                           	opt stack 0
 22207                           tblptru	equ	0xFF8
 22208                           tblptrh	equ	0xFF7
 22209                           tblptrl	equ	0xFF6
 22210                           tablat	equ	0xFF5
 22211                           prodh	equ	0xFF4
 22212                           prodl	equ	0xFF3
 22213                           intcon	equ	0xFF2
 22214                           indf0	equ	0xFEF
 22215                           postinc0	equ	0xFEE
 22216                           fsr0h	equ	0xFEA
 22217                           fsr0l	equ	0xFE9
 22218                           wreg	equ	0xFE8
 22219                           indf1	equ	0xFE7
 22220                           postdec1	equ	0xFE5
 22221                           plusw1	equ	0xFE3
 22222                           fsr1h	equ	0xFE2
 22223                           fsr1l	equ	0xFE1
 22224                           indf2	equ	0xFDF
 22225                           postinc2	equ	0xFDE
 22226                           postdec2	equ	0xFDD
 22227                           plusw2	equ	0xFDB
 22228                           fsr2h	equ	0xFDA
 22229                           fsr2l	equ	0xFD9
 22230                           status	equ	0xFD8
 22231                           
 22232 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 22233 ;; Defined at:
 22234 ;;		line 306 in file "mcc_generated_files/adcc.c"
 22235 ;; Parameters:    Size  Location     Type
 22236 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22237 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 22238 ;; Auto vars:     Size  Location     Type
 22239 ;;		None
 22240 ;; Return value:  Size  Location     Type
 22241 ;;                  1    wreg      void 
 22242 ;; Registers used:
 22243 ;;		wreg, status,2, status,0
 22244 ;; Tracked objects:
 22245 ;;		On entry : 0/0
 22246 ;;		On exit  : 0/0
 22247 ;;		Unchanged: 0/0
 22248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22249 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22252 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22253 ;;Total ram usage:        3 bytes
 22254 ;; Hardware stack levels used:    1
 22255 ;; Hardware stack levels required when called:   13
 22256 ;; This function calls:
 22257 ;;		Nothing
 22258 ;; This function is called by:
 22259 ;;		_ADCC_Initialize
 22260 ;;		_main
 22261 ;; This function uses a non-reentrant model
 22262 ;;
 22263                           
 22264                           	psect	text66
 22265  01812C                     __ptext66:
 22266                           	opt stack 0
 22267  01812C                     _ADCC_SetADIInterruptHandler:
 22268                           	opt stack 15
 22269                           
 22270                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 22271                           
 22272                           ;incstack = 0
 22273  01812C  C117  F266         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 22274  018130  C118  F267         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 22275  018134  C119  F268         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 22276  018138  0012               	return		;funcret
 22277  01813A                     __end_of_ADCC_SetADIInterruptHandler:
 22278                           	opt stack 0
 22279                           tblptru	equ	0xFF8
 22280                           tblptrh	equ	0xFF7
 22281                           tblptrl	equ	0xFF6
 22282                           tablat	equ	0xFF5
 22283                           prodh	equ	0xFF4
 22284                           prodl	equ	0xFF3
 22285                           intcon	equ	0xFF2
 22286                           indf0	equ	0xFEF
 22287                           postinc0	equ	0xFEE
 22288                           fsr0h	equ	0xFEA
 22289                           fsr0l	equ	0xFE9
 22290                           wreg	equ	0xFE8
 22291                           indf1	equ	0xFE7
 22292                           postdec1	equ	0xFE5
 22293                           plusw1	equ	0xFE3
 22294                           fsr1h	equ	0xFE2
 22295                           fsr1l	equ	0xFE1
 22296                           indf2	equ	0xFDF
 22297                           postinc2	equ	0xFDE
 22298                           postdec2	equ	0xFDD
 22299                           plusw2	equ	0xFDB
 22300                           fsr2h	equ	0xFDA
 22301                           fsr2l	equ	0xFD9
 22302                           status	equ	0xFD8
 22303                           
 22304 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 22305 ;; Defined at:
 22306 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 22307 ;; Parameters:    Size  Location     Type
 22308 ;;		None
 22309 ;; Auto vars:     Size  Location     Type
 22310 ;;		None
 22311 ;; Return value:  Size  Location     Type
 22312 ;;                  1    wreg      void 
 22313 ;; Registers used:
 22314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22315 ;; Tracked objects:
 22316 ;;		On entry : 0/0
 22317 ;;		On exit  : 0/0
 22318 ;;		Unchanged: 0/0
 22319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22322 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22323 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22324 ;;Total ram usage:       21 bytes
 22325 ;; Hardware stack levels used:    1
 22326 ;; Hardware stack levels required when called:   12
 22327 ;; This function calls:
 22328 ;;		Absolute function
 22329 ;;		_EUSART2_Transmit_ISR
 22330 ;;		_HLVD_ISR
 22331 ;;		_TMR6_ISR
 22332 ;;		_TMR7_ISR
 22333 ;; This function is called by:
 22334 ;;		Interrupt level 1
 22335 ;; This function uses a non-reentrant model
 22336 ;;
 22337                           
 22338                           	psect	intcodelo
 22339  000018                     __pintcodelo:
 22340                           	opt stack 0
 22341  000018                     _INTERRUPT_InterruptManagerLow:
 22342                           	opt stack 11
 22343                           
 22344                           ;incstack = 0
 22345  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 22346  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 22347  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 22348  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 22349  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 22350  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 22351  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 22352  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 22353  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 22354  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 22355  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 22356  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 22357  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 22358  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 22359  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 22360  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 22361  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 22362  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 22363  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 22364  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 22365  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 22366  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 22367                           
 22368                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 22369  00006E  010E               	movlb	14	; () banked
 22370  000070  BB2E               	btfsc	46,5,b	;volatile
 22371                           
 22372                           ; BSR set to: 14
 22373  000072  AB38               	btfss	56,5,b	;volatile
 22374  000074  D003               	goto	i1l223
 22375                           
 22376                           ; BSR set to: 14
 22377                           ;interrupt_manager.c: 108: {
 22378                           ;interrupt_manager.c: 109: TMR6_ISR();
 22379  000076  EC55  F0BF         	call	_TMR6_ISR	;wreg free
 22380                           
 22381                           ;interrupt_manager.c: 110: }
 22382  00007A  D01B               	goto	i1l229
 22383  00007C                     i1l223:
 22384                           
 22385                           ; BSR set to: 14
 22386                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 22387  00007C  BD2C               	btfsc	44,6,b	;volatile
 22388                           
 22389                           ; BSR set to: 14
 22390  00007E  AD36               	btfss	54,6,b	;volatile
 22391  000080  D00D               	goto	i1l225
 22392                           
 22393                           ; BSR set to: 14
 22394                           ;interrupt_manager.c: 112: {
 22395                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 22396  000082  D801               	call	i1u1768_28
 22397  000084  D016               	goto	i1l229
 22398  000086                     i1u1768_28:
 22399  000086  0005               	push	
 22400  000088  6EFA               	movwf	pclath,c
 22401  00008A  0102               	movlb	2	; () banked
 22402  00008C  516F               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 22403  00008E  6EFD               	movwf	tosl,c
 22404  000090  5170               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 22405  000092  6EFE               	movwf	tosh,c
 22406  000094  5171               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 22407  000096  6EFF               	movwf	tosu,c
 22408  000098  50FA               	movf	pclath,w,c
 22409  00009A  0012               	return		;indir
 22410  00009C                     i1l225:
 22411                           
 22412                           ; BSR set to: 14
 22413                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 22414  00009C  BD2E               	btfsc	46,6,b	;volatile
 22415                           
 22416                           ; BSR set to: 14
 22417  00009E  AD38               	btfss	56,6,b	;volatile
 22418  0000A0  D003               	goto	i1l227
 22419                           
 22420                           ; BSR set to: 14
 22421                           ;interrupt_manager.c: 116: {
 22422                           ;interrupt_manager.c: 117: TMR7_ISR();
 22423  0000A2  EC96  F0BE         	call	_TMR7_ISR	;wreg free
 22424                           
 22425                           ;interrupt_manager.c: 118: }
 22426  0000A6  D005               	goto	i1l229
 22427  0000A8                     i1l227:
 22428                           
 22429                           ; BSR set to: 14
 22430                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 22431  0000A8  BF2B               	btfsc	43,7,b	;volatile
 22432                           
 22433                           ; BSR set to: 14
 22434  0000AA  AF35               	btfss	53,7,b	;volatile
 22435  0000AC  D002               	goto	i1l229
 22436                           
 22437                           ; BSR set to: 14
 22438                           ;interrupt_manager.c: 120: {
 22439                           ;interrupt_manager.c: 121: HLVD_ISR();
 22440  0000AE  ECB3  F0C0         	call	_HLVD_ISR	;wreg free
 22441  0000B2                     i1l229:
 22442                           
 22443                           ;interrupt_manager.c: 123: else
 22444                           ;interrupt_manager.c: 124: {
 22445  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 22446  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 22447  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 22448  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 22449  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 22450  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 22451  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 22452  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 22453  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 22454  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 22455  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 22456  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 22457  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 22458  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 22459  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 22460  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 22461  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 22462  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 22463  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 22464  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 22465  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 22466  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 22467  000108  0010               	retfie	
 22468  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 22469                           	opt stack 0
 22470                           tosu	equ	0xFFF
 22471                           tosh	equ	0xFFE
 22472                           tosl	equ	0xFFD
 22473                           pclatu	equ	0xFFB
 22474                           pclath	equ	0xFFA
 22475                           tblptru	equ	0xFF8
 22476                           tblptrh	equ	0xFF7
 22477                           tblptrl	equ	0xFF6
 22478                           tablat	equ	0xFF5
 22479                           prodh	equ	0xFF4
 22480                           prodl	equ	0xFF3
 22481                           intcon	equ	0xFF2
 22482                           indf0	equ	0xFEF
 22483                           postinc0	equ	0xFEE
 22484                           fsr0h	equ	0xFEA
 22485                           fsr0l	equ	0xFE9
 22486                           wreg	equ	0xFE8
 22487                           indf1	equ	0xFE7
 22488                           postdec1	equ	0xFE5
 22489                           plusw1	equ	0xFE3
 22490                           fsr1h	equ	0xFE2
 22491                           fsr1l	equ	0xFE1
 22492                           bsr	equ	0xFE0
 22493                           indf2	equ	0xFDF
 22494                           postinc2	equ	0xFDE
 22495                           postdec2	equ	0xFDD
 22496                           plusw2	equ	0xFDB
 22497                           fsr2h	equ	0xFDA
 22498                           fsr2l	equ	0xFD9
 22499                           status	equ	0xFD8
 22500                           
 22501 ;; *************** function _TMR7_ISR *****************
 22502 ;; Defined at:
 22503 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 22504 ;; Parameters:    Size  Location     Type
 22505 ;;		None
 22506 ;; Auto vars:     Size  Location     Type
 22507 ;;		None
 22508 ;; Return value:  Size  Location     Type
 22509 ;;                  1    wreg      void 
 22510 ;; Registers used:
 22511 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 22512 ;; Tracked objects:
 22513 ;;		On entry : 0/0
 22514 ;;		On exit  : 0/0
 22515 ;;		Unchanged: 0/0
 22516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22521 ;;Total ram usage:        0 bytes
 22522 ;; Hardware stack levels used:    1
 22523 ;; Hardware stack levels required when called:   11
 22524 ;; This function calls:
 22525 ;;		Absolute function
 22526 ;;		_TMR7_DefaultInterruptHandler
 22527 ;;		_TMR7_WriteTimer
 22528 ;;		_acquisitionTimerCallback
 22529 ;; This function is called by:
 22530 ;;		_INTERRUPT_InterruptManagerLow
 22531 ;; This function uses a non-reentrant model
 22532 ;;
 22533                           
 22534                           	psect	text68
 22535  017D2C                     __ptext68:
 22536                           	opt stack 0
 22537  017D2C                     _TMR7_ISR:
 22538                           	opt stack 11
 22539                           
 22540                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 22541                           
 22542                           ;incstack = 0
 22543  017D2C  010E               	movlb	14	; () banked
 22544  017D2E  9D38               	bcf	56,6,b	;volatile
 22545                           
 22546                           ; BSR set to: 14
 22547                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 22548  017D30  C1DB  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 22549  017D34  C1DC  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 22550  017D38  EC90  F0BF         	call	_TMR7_WriteTimer	;wreg free
 22551                           
 22552                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 22553  017D3C  0102               	movlb	2	; () banked
 22554  017D3E  5163               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22555  017D40  1164               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22556  017D42  1165               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22557  017D44  B4D8               	btfsc	status,2,c
 22558  017D46  0012               	return	
 22559                           
 22560                           ; BSR set to: 2
 22561                           ;tmr7.c: 172: {
 22562                           ;tmr7.c: 173: TMR7_InterruptHandler();
 22563  017D48  D801               	call	i1u1756_28
 22564  017D4A  0012               	return	
 22565  017D4C                     i1u1756_28:
 22566  017D4C  0005               	push	
 22567  017D4E  6EFA               	movwf	pclath,c
 22568  017D50  5163               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22569  017D52  6EFD               	movwf	tosl,c
 22570  017D54  5164               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22571  017D56  6EFE               	movwf	tosh,c
 22572  017D58  5165               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22573  017D5A  6EFF               	movwf	tosu,c
 22574  017D5C  50FA               	movf	pclath,w,c
 22575  017D5E  0012               	return		;indir
 22576  017D60                     __end_of_TMR7_ISR:
 22577                           	opt stack 0
 22578                           tosu	equ	0xFFF
 22579                           tosh	equ	0xFFE
 22580                           tosl	equ	0xFFD
 22581                           pclatu	equ	0xFFB
 22582                           pclath	equ	0xFFA
 22583                           tblptru	equ	0xFF8
 22584                           tblptrh	equ	0xFF7
 22585                           tblptrl	equ	0xFF6
 22586                           tablat	equ	0xFF5
 22587                           prodh	equ	0xFF4
 22588                           prodl	equ	0xFF3
 22589                           intcon	equ	0xFF2
 22590                           indf0	equ	0xFEF
 22591                           postinc0	equ	0xFEE
 22592                           fsr0h	equ	0xFEA
 22593                           fsr0l	equ	0xFE9
 22594                           wreg	equ	0xFE8
 22595                           indf1	equ	0xFE7
 22596                           postdec1	equ	0xFE5
 22597                           plusw1	equ	0xFE3
 22598                           fsr1h	equ	0xFE2
 22599                           fsr1l	equ	0xFE1
 22600                           bsr	equ	0xFE0
 22601                           indf2	equ	0xFDF
 22602                           postinc2	equ	0xFDE
 22603                           postdec2	equ	0xFDD
 22604                           plusw2	equ	0xFDB
 22605                           fsr2h	equ	0xFDA
 22606                           fsr2l	equ	0xFD9
 22607                           status	equ	0xFD8
 22608                           
 22609 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 22610 ;; Defined at:
 22611 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 22612 ;; Parameters:    Size  Location     Type
 22613 ;;		None
 22614 ;; Auto vars:     Size  Location     Type
 22615 ;;		None
 22616 ;; Return value:  Size  Location     Type
 22617 ;;                  1    wreg      void 
 22618 ;; Registers used:
 22619 ;;		None
 22620 ;; Tracked objects:
 22621 ;;		On entry : 0/0
 22622 ;;		On exit  : 0/0
 22623 ;;		Unchanged: 0/0
 22624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22629 ;;Total ram usage:        0 bytes
 22630 ;; Hardware stack levels used:    1
 22631 ;; Hardware stack levels required when called:    9
 22632 ;; This function calls:
 22633 ;;		Nothing
 22634 ;; This function is called by:
 22635 ;;		_TMR7_Initialize
 22636 ;;		_TMR7_ISR
 22637 ;; This function uses a non-reentrant model
 22638 ;;
 22639                           
 22640                           	psect	text69
 22641  018186                     __ptext69:
 22642                           	opt stack 0
 22643  018186                     _TMR7_DefaultInterruptHandler:
 22644                           	opt stack 12
 22645                           
 22646                           ;incstack = 0
 22647  018186  0012               	return		;funcret
 22648  018188                     __end_of_TMR7_DefaultInterruptHandler:
 22649                           	opt stack 0
 22650                           tosu	equ	0xFFF
 22651                           tosh	equ	0xFFE
 22652                           tosl	equ	0xFFD
 22653                           pclatu	equ	0xFFB
 22654                           pclath	equ	0xFFA
 22655                           tblptru	equ	0xFF8
 22656                           tblptrh	equ	0xFF7
 22657                           tblptrl	equ	0xFF6
 22658                           tablat	equ	0xFF5
 22659                           prodh	equ	0xFF4
 22660                           prodl	equ	0xFF3
 22661                           intcon	equ	0xFF2
 22662                           indf0	equ	0xFEF
 22663                           postinc0	equ	0xFEE
 22664                           fsr0h	equ	0xFEA
 22665                           fsr0l	equ	0xFE9
 22666                           wreg	equ	0xFE8
 22667                           indf1	equ	0xFE7
 22668                           postdec1	equ	0xFE5
 22669                           plusw1	equ	0xFE3
 22670                           fsr1h	equ	0xFE2
 22671                           fsr1l	equ	0xFE1
 22672                           bsr	equ	0xFE0
 22673                           indf2	equ	0xFDF
 22674                           postinc2	equ	0xFDE
 22675                           postdec2	equ	0xFDD
 22676                           plusw2	equ	0xFDB
 22677                           fsr2h	equ	0xFDA
 22678                           fsr2l	equ	0xFD9
 22679                           status	equ	0xFD8
 22680                           
 22681 ;; *************** function _acquisitionTimerCallback *****************
 22682 ;; Defined at:
 22683 ;;		line 342 in file "main.c"
 22684 ;; Parameters:    Size  Location     Type
 22685 ;;		None
 22686 ;; Auto vars:     Size  Location     Type
 22687 ;;		None
 22688 ;; Return value:  Size  Location     Type
 22689 ;;                  1    wreg      void 
 22690 ;; Registers used:
 22691 ;;		wreg, status,2, cstack
 22692 ;; Tracked objects:
 22693 ;;		On entry : 0/0
 22694 ;;		On exit  : 0/0
 22695 ;;		Unchanged: 0/0
 22696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22701 ;;Total ram usage:        0 bytes
 22702 ;; Hardware stack levels used:    1
 22703 ;; Hardware stack levels required when called:   10
 22704 ;; This function calls:
 22705 ;;		_ADCC_IsConversionDone
 22706 ;;		_ADCC_StartConversion
 22707 ;;		_TMR7_StopTimer
 22708 ;; This function is called by:
 22709 ;;		_main
 22710 ;;		_TMR7_ISR
 22711 ;; This function uses a non-reentrant model
 22712 ;;
 22713                           
 22714                           	psect	text70
 22715  016D10                     __ptext70:
 22716                           	opt stack 0
 22717  016D10                     _acquisitionTimerCallback:
 22718                           	opt stack 11
 22719                           
 22720                           ;main.c: 345: ADCC_StartConversion(channel_VSS);
 22721                           
 22722                           ;incstack = 0
 22723  016D10  0E3C               	movlw	60
 22724  016D12  EC9D  F0C0         	call	_ADCC_StartConversion
 22725                           
 22726                           ;main.c: 348: while(!ADCC_IsConversionDone()) {
 22727  016D16  D007               	goto	i1l969
 22728  016D18                     i1l968:
 22729                           
 22730                           ;main.c: 350: if (adc_error_flag) {
 22731  016D18  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22732  016D1A  D005               	goto	i1l969
 22733                           
 22734                           ;main.c: 353: PIE5bits.TMR7IE = 0;
 22735  016D1C  010E               	movlb	14	; () banked
 22736  016D1E  9D2E               	bcf	46,6,b	;volatile
 22737                           
 22738                           ; BSR set to: 14
 22739                           ;main.c: 354: TMR7_StopTimer();
 22740  016D20  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22741                           
 22742                           ;main.c: 355: return;
 22743  016D24  0012               	return	
 22744  016D26                     i1l969:
 22745  016D26  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22746  016D2A  0900               	iorlw	0
 22747  016D2C  B4D8               	btfsc	status,2,c
 22748  016D2E  D7F4               	goto	i1l968
 22749                           
 22750                           ;main.c: 357: }
 22751                           ;main.c: 359: }
 22752                           ;main.c: 362: ADCC_StartConversion(channel_FVR_buf1);
 22753  016D30  0E3F               	movlw	63
 22754  016D32  EC9D  F0C0         	call	_ADCC_StartConversion
 22755                           
 22756                           ;main.c: 365: while(!ADCC_IsConversionDone()) {
 22757  016D36  D007               	goto	i1l974
 22758  016D38                     i1l973:
 22759                           
 22760                           ;main.c: 367: if (adc_error_flag) {
 22761  016D38  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22762  016D3A  D005               	goto	i1l974
 22763                           
 22764                           ;main.c: 370: PIE5bits.TMR7IE = 0;
 22765  016D3C  010E               	movlb	14	; () banked
 22766  016D3E  9D2E               	bcf	46,6,b	;volatile
 22767                           
 22768                           ; BSR set to: 14
 22769                           ;main.c: 371: TMR7_StopTimer();
 22770  016D40  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22771                           
 22772                           ;main.c: 372: return;
 22773  016D44  0012               	return	
 22774  016D46                     i1l974:
 22775  016D46  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22776  016D4A  0900               	iorlw	0
 22777  016D4C  B4D8               	btfsc	status,2,c
 22778  016D4E  D7F4               	goto	i1l973
 22779                           
 22780                           ;main.c: 374: }
 22781                           ;main.c: 376: }
 22782                           ;main.c: 379: ADCC_StartConversion(POS3P3_ADC);
 22783  016D50  0E22               	movlw	34
 22784  016D52  EC9D  F0C0         	call	_ADCC_StartConversion
 22785                           
 22786                           ;main.c: 382: while(!ADCC_IsConversionDone()) {
 22787  016D56  D007               	goto	i1l978
 22788  016D58                     i1l977:
 22789                           
 22790                           ;main.c: 384: if (adc_error_flag) {
 22791  016D58  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22792  016D5A  D005               	goto	i1l978
 22793                           
 22794                           ;main.c: 387: PIE5bits.TMR7IE = 0;
 22795  016D5C  010E               	movlb	14	; () banked
 22796  016D5E  9D2E               	bcf	46,6,b	;volatile
 22797                           
 22798                           ; BSR set to: 14
 22799                           ;main.c: 388: TMR7_StopTimer();
 22800  016D60  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22801                           
 22802                           ;main.c: 389: return;
 22803  016D64  0012               	return	
 22804  016D66                     i1l978:
 22805  016D66  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22806  016D6A  0900               	iorlw	0
 22807  016D6C  B4D8               	btfsc	status,2,c
 22808  016D6E  D7F4               	goto	i1l977
 22809                           
 22810                           ;main.c: 391: }
 22811                           ;main.c: 393: }
 22812                           ;main.c: 396: ADCC_StartConversion(ISNS_ADC);
 22813  016D70  0E00               	movlw	0
 22814  016D72  EC9D  F0C0         	call	_ADCC_StartConversion
 22815                           
 22816                           ;main.c: 399: while(!ADCC_IsConversionDone()) {
 22817  016D76  D007               	goto	i1l982
 22818  016D78                     i1l981:
 22819                           
 22820                           ;main.c: 401: if (adc_error_flag) {
 22821  016D78  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22822  016D7A  D005               	goto	i1l982
 22823                           
 22824                           ;main.c: 404: PIE5bits.TMR7IE = 0;
 22825  016D7C  010E               	movlb	14	; () banked
 22826  016D7E  9D2E               	bcf	46,6,b	;volatile
 22827                           
 22828                           ; BSR set to: 14
 22829                           ;main.c: 405: TMR7_StopTimer();
 22830  016D80  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22831                           
 22832                           ;main.c: 406: return;
 22833  016D84  0012               	return	
 22834  016D86                     i1l982:
 22835  016D86  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22836  016D8A  0900               	iorlw	0
 22837  016D8C  B4D8               	btfsc	status,2,c
 22838  016D8E  D7F4               	goto	i1l981
 22839                           
 22840                           ;main.c: 408: }
 22841                           ;main.c: 410: }
 22842                           ;main.c: 413: ADCC_StartConversion(POS12_ADC);
 22843  016D90  0E04               	movlw	4
 22844  016D92  EC9D  F0C0         	call	_ADCC_StartConversion
 22845                           
 22846                           ;main.c: 416: while(!ADCC_IsConversionDone()) {
 22847  016D96  D007               	goto	i1l986
 22848  016D98                     i1l985:
 22849                           
 22850                           ;main.c: 418: if (adc_error_flag) {
 22851  016D98  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22852  016D9A  D005               	goto	i1l986
 22853                           
 22854                           ;main.c: 421: PIE5bits.TMR7IE = 0;
 22855  016D9C  010E               	movlb	14	; () banked
 22856  016D9E  9D2E               	bcf	46,6,b	;volatile
 22857                           
 22858                           ; BSR set to: 14
 22859                           ;main.c: 422: TMR7_StopTimer();
 22860  016DA0  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22861                           
 22862                           ;main.c: 423: return;
 22863  016DA4  0012               	return	
 22864  016DA6                     i1l986:
 22865  016DA6  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22866  016DAA  0900               	iorlw	0
 22867  016DAC  B4D8               	btfsc	status,2,c
 22868  016DAE  D7F4               	goto	i1l985
 22869                           
 22870                           ;main.c: 425: }
 22871                           ;main.c: 427: }
 22872                           ;main.c: 430: ADCC_StartConversion(channel_Temp);
 22873  016DB0  0E3D               	movlw	61
 22874  016DB2  EC9D  F0C0         	call	_ADCC_StartConversion
 22875                           
 22876                           ;main.c: 433: while(!ADCC_IsConversionDone()) {
 22877  016DB6  D007               	goto	i1l990
 22878  016DB8                     i1l989:
 22879                           
 22880                           ;main.c: 435: if (adc_error_flag) {
 22881  016DB8  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22882  016DBA  D005               	goto	i1l990
 22883                           
 22884                           ;main.c: 438: PIE5bits.TMR7IE == 0;
 22885  016DBC  010E               	movlb	14	; () banked
 22886  016DBE  512E               	movf	46,w,b	;volatile
 22887                           
 22888                           ; BSR set to: 14
 22889                           ;main.c: 439: TMR7_StopTimer();
 22890  016DC0  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22891                           
 22892                           ;main.c: 440: return;
 22893  016DC4  0012               	return	
 22894  016DC6                     i1l990:
 22895  016DC6  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22896  016DCA  0900               	iorlw	0
 22897  016DCC  A4D8               	btfss	status,2,c
 22898  016DCE  0012               	return	
 22899  016DD0  D7F3               	goto	i1l989
 22900  016DD2                     __end_of_acquisitionTimerCallback:
 22901                           	opt stack 0
 22902                           tosu	equ	0xFFF
 22903                           tosh	equ	0xFFE
 22904                           tosl	equ	0xFFD
 22905                           pclatu	equ	0xFFB
 22906                           pclath	equ	0xFFA
 22907                           tblptru	equ	0xFF8
 22908                           tblptrh	equ	0xFF7
 22909                           tblptrl	equ	0xFF6
 22910                           tablat	equ	0xFF5
 22911                           prodh	equ	0xFF4
 22912                           prodl	equ	0xFF3
 22913                           intcon	equ	0xFF2
 22914                           indf0	equ	0xFEF
 22915                           postinc0	equ	0xFEE
 22916                           fsr0h	equ	0xFEA
 22917                           fsr0l	equ	0xFE9
 22918                           wreg	equ	0xFE8
 22919                           indf1	equ	0xFE7
 22920                           postdec1	equ	0xFE5
 22921                           plusw1	equ	0xFE3
 22922                           fsr1h	equ	0xFE2
 22923                           fsr1l	equ	0xFE1
 22924                           bsr	equ	0xFE0
 22925                           indf2	equ	0xFDF
 22926                           postinc2	equ	0xFDE
 22927                           postdec2	equ	0xFDD
 22928                           plusw2	equ	0xFDB
 22929                           fsr2h	equ	0xFDA
 22930                           fsr2l	equ	0xFD9
 22931                           status	equ	0xFD8
 22932                           
 22933 ;; *************** function _TMR7_StopTimer *****************
 22934 ;; Defined at:
 22935 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 22936 ;; Parameters:    Size  Location     Type
 22937 ;;		None
 22938 ;; Auto vars:     Size  Location     Type
 22939 ;;		None
 22940 ;; Return value:  Size  Location     Type
 22941 ;;                  1    wreg      void 
 22942 ;; Registers used:
 22943 ;;		None
 22944 ;; Tracked objects:
 22945 ;;		On entry : 0/0
 22946 ;;		On exit  : 0/0
 22947 ;;		Unchanged: 0/0
 22948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22953 ;;Total ram usage:        0 bytes
 22954 ;; Hardware stack levels used:    1
 22955 ;; Hardware stack levels required when called:    9
 22956 ;; This function calls:
 22957 ;;		Nothing
 22958 ;; This function is called by:
 22959 ;;		_acquisitionTimerCallback
 22960 ;; This function uses a non-reentrant model
 22961 ;;
 22962                           
 22963                           	psect	text71
 22964  01817A                     __ptext71:
 22965                           	opt stack 0
 22966  01817A                     _TMR7_StopTimer:
 22967                           	opt stack 11
 22968                           
 22969                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 22970                           
 22971                           ;incstack = 0
 22972  01817A  010F               	movlb	15	; () banked
 22973  01817C  9130               	bcf	48,0,b	;volatile
 22974                           
 22975                           ; BSR set to: 15
 22976  01817E  0012               	return		;funcret
 22977  018180                     __end_of_TMR7_StopTimer:
 22978                           	opt stack 0
 22979                           tosu	equ	0xFFF
 22980                           tosh	equ	0xFFE
 22981                           tosl	equ	0xFFD
 22982                           pclatu	equ	0xFFB
 22983                           pclath	equ	0xFFA
 22984                           tblptru	equ	0xFF8
 22985                           tblptrh	equ	0xFF7
 22986                           tblptrl	equ	0xFF6
 22987                           tablat	equ	0xFF5
 22988                           prodh	equ	0xFF4
 22989                           prodl	equ	0xFF3
 22990                           intcon	equ	0xFF2
 22991                           indf0	equ	0xFEF
 22992                           postinc0	equ	0xFEE
 22993                           fsr0h	equ	0xFEA
 22994                           fsr0l	equ	0xFE9
 22995                           wreg	equ	0xFE8
 22996                           indf1	equ	0xFE7
 22997                           postdec1	equ	0xFE5
 22998                           plusw1	equ	0xFE3
 22999                           fsr1h	equ	0xFE2
 23000                           fsr1l	equ	0xFE1
 23001                           bsr	equ	0xFE0
 23002                           indf2	equ	0xFDF
 23003                           postinc2	equ	0xFDE
 23004                           postdec2	equ	0xFDD
 23005                           plusw2	equ	0xFDB
 23006                           fsr2h	equ	0xFDA
 23007                           fsr2l	equ	0xFD9
 23008                           status	equ	0xFD8
 23009                           
 23010 ;; *************** function _ADCC_StartConversion *****************
 23011 ;; Defined at:
 23012 ;;		line 112 in file "mcc_generated_files/adcc.c"
 23013 ;; Parameters:    Size  Location     Type
 23014 ;;  channel         1    wreg     enum E17310
 23015 ;; Auto vars:     Size  Location     Type
 23016 ;;  channel         1    0[BANK1 ] enum E17310
 23017 ;; Return value:  Size  Location     Type
 23018 ;;                  1    wreg      void 
 23019 ;; Registers used:
 23020 ;;		wreg
 23021 ;; Tracked objects:
 23022 ;;		On entry : 0/0
 23023 ;;		On exit  : 0/0
 23024 ;;		Unchanged: 0/0
 23025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23027 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23029 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23030 ;;Total ram usage:        1 bytes
 23031 ;; Hardware stack levels used:    1
 23032 ;; Hardware stack levels required when called:    9
 23033 ;; This function calls:
 23034 ;;		Nothing
 23035 ;; This function is called by:
 23036 ;;		_acquisitionTimerCallback
 23037 ;; This function uses a non-reentrant model
 23038 ;;
 23039                           
 23040                           	psect	text72
 23041  01813A                     __ptext72:
 23042                           	opt stack 0
 23043  01813A                     _ADCC_StartConversion:
 23044                           	opt stack 11
 23045                           
 23046                           ; BSR set to: 15
 23047                           ;incstack = 0
 23048                           ;ADCC_StartConversion@channel stored from wreg
 23049  01813A  0101               	movlb	1	; () banked
 23050  01813C  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 23051                           
 23052                           ;adcc.c: 115: ADPCH = channel;
 23053  01813E  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 23054                           
 23055                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 23056  018142  8E60               	bsf	3936,7,c	;volatile
 23057                           
 23058                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 23059  018144  8060               	bsf	3936,0,c	;volatile
 23060  018146  0012               	return		;funcret
 23061  018148                     __end_of_ADCC_StartConversion:
 23062                           	opt stack 0
 23063                           tosu	equ	0xFFF
 23064                           tosh	equ	0xFFE
 23065                           tosl	equ	0xFFD
 23066                           pclatu	equ	0xFFB
 23067                           pclath	equ	0xFFA
 23068                           tblptru	equ	0xFF8
 23069                           tblptrh	equ	0xFF7
 23070                           tblptrl	equ	0xFF6
 23071                           tablat	equ	0xFF5
 23072                           prodh	equ	0xFF4
 23073                           prodl	equ	0xFF3
 23074                           intcon	equ	0xFF2
 23075                           indf0	equ	0xFEF
 23076                           postinc0	equ	0xFEE
 23077                           fsr0h	equ	0xFEA
 23078                           fsr0l	equ	0xFE9
 23079                           wreg	equ	0xFE8
 23080                           indf1	equ	0xFE7
 23081                           postdec1	equ	0xFE5
 23082                           plusw1	equ	0xFE3
 23083                           fsr1h	equ	0xFE2
 23084                           fsr1l	equ	0xFE1
 23085                           bsr	equ	0xFE0
 23086                           indf2	equ	0xFDF
 23087                           postinc2	equ	0xFDE
 23088                           postdec2	equ	0xFDD
 23089                           plusw2	equ	0xFDB
 23090                           fsr2h	equ	0xFDA
 23091                           fsr2l	equ	0xFD9
 23092                           status	equ	0xFD8
 23093                           
 23094 ;; *************** function _ADCC_IsConversionDone *****************
 23095 ;; Defined at:
 23096 ;;		line 124 in file "mcc_generated_files/adcc.c"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;		None
 23099 ;; Auto vars:     Size  Location     Type
 23100 ;;		None
 23101 ;; Return value:  Size  Location     Type
 23102 ;;                  1    wreg      unsigned char 
 23103 ;; Registers used:
 23104 ;;		wreg
 23105 ;; Tracked objects:
 23106 ;;		On entry : 0/0
 23107 ;;		On exit  : 0/0
 23108 ;;		Unchanged: 0/0
 23109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23114 ;;Total ram usage:        0 bytes
 23115 ;; Hardware stack levels used:    1
 23116 ;; Hardware stack levels required when called:    9
 23117 ;; This function calls:
 23118 ;;		Nothing
 23119 ;; This function is called by:
 23120 ;;		_acquisitionTimerCallback
 23121 ;; This function uses a non-reentrant model
 23122 ;;
 23123                           
 23124                           	psect	text73
 23125  018148                     __ptext73:
 23126                           	opt stack 0
 23127  018148                     _ADCC_IsConversionDone:
 23128                           	opt stack 11
 23129                           
 23130                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 23131                           
 23132                           ;incstack = 0
 23133  018148  B060               	btfsc	3936,0,c	;volatile
 23134  01814A  D002               	goto	i1u939_20
 23135  01814C  0E01               	movlw	1
 23136  01814E  0012               	return	
 23137  018150                     i1u939_20:
 23138  018150  0E00               	movlw	0
 23139  018152  0012               	return	
 23140  018154                     __end_of_ADCC_IsConversionDone:
 23141                           	opt stack 0
 23142                           tosu	equ	0xFFF
 23143                           tosh	equ	0xFFE
 23144                           tosl	equ	0xFFD
 23145                           pclatu	equ	0xFFB
 23146                           pclath	equ	0xFFA
 23147                           tblptru	equ	0xFF8
 23148                           tblptrh	equ	0xFF7
 23149                           tblptrl	equ	0xFF6
 23150                           tablat	equ	0xFF5
 23151                           prodh	equ	0xFF4
 23152                           prodl	equ	0xFF3
 23153                           intcon	equ	0xFF2
 23154                           indf0	equ	0xFEF
 23155                           postinc0	equ	0xFEE
 23156                           fsr0h	equ	0xFEA
 23157                           fsr0l	equ	0xFE9
 23158                           wreg	equ	0xFE8
 23159                           indf1	equ	0xFE7
 23160                           postdec1	equ	0xFE5
 23161                           plusw1	equ	0xFE3
 23162                           fsr1h	equ	0xFE2
 23163                           fsr1l	equ	0xFE1
 23164                           bsr	equ	0xFE0
 23165                           indf2	equ	0xFDF
 23166                           postinc2	equ	0xFDE
 23167                           postdec2	equ	0xFDD
 23168                           plusw2	equ	0xFDB
 23169                           fsr2h	equ	0xFDA
 23170                           fsr2l	equ	0xFD9
 23171                           status	equ	0xFD8
 23172                           
 23173 ;; *************** function _TMR7_WriteTimer *****************
 23174 ;; Defined at:
 23175 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 23176 ;; Parameters:    Size  Location     Type
 23177 ;;  timerVal        2    0[BANK1 ] unsigned int 
 23178 ;; Auto vars:     Size  Location     Type
 23179 ;;		None
 23180 ;; Return value:  Size  Location     Type
 23181 ;;                  1    wreg      void 
 23182 ;; Registers used:
 23183 ;;		wreg, status,2
 23184 ;; Tracked objects:
 23185 ;;		On entry : 0/0
 23186 ;;		On exit  : 0/0
 23187 ;;		Unchanged: 0/0
 23188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23189 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23192 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23193 ;;Total ram usage:        2 bytes
 23194 ;; Hardware stack levels used:    1
 23195 ;; Hardware stack levels required when called:    9
 23196 ;; This function calls:
 23197 ;;		Nothing
 23198 ;; This function is called by:
 23199 ;;		_TMR7_ISR
 23200 ;;		_TMR7_Reload
 23201 ;; This function uses a non-reentrant model
 23202 ;;
 23203                           
 23204                           	psect	text74
 23205  017F20                     __ptext74:
 23206                           	opt stack 0
 23207  017F20                     _TMR7_WriteTimer:
 23208                           	opt stack 12
 23209                           
 23210                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 23211                           
 23212                           ;incstack = 0
 23213  017F20  010F               	movlb	15	; () banked
 23214  017F22  A530               	btfss	48,2,b	;volatile
 23215  017F24  D009               	goto	i1l640
 23216                           
 23217                           ; BSR set to: 15
 23218                           ;tmr7.c: 130: {
 23219                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 23220  017F26  9130               	bcf	48,0,b	;volatile
 23221                           
 23222                           ; BSR set to: 15
 23223                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 23224  017F28  0101               	movlb	1	; () banked
 23225  017F2A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23226  017F2C  010F               	movlb	15	; () banked
 23227  017F2E  6F2F               	movwf	47,b	;volatile
 23228                           
 23229                           ; BSR set to: 15
 23230                           ;tmr7.c: 136: TMR7L = timerVal;
 23231  017F30  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23232                           
 23233                           ; BSR set to: 15
 23234                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 23235  017F34  8130               	bsf	48,0,b	;volatile
 23236                           
 23237                           ;tmr7.c: 140: }
 23238  017F36  0012               	return	
 23239  017F38                     i1l640:
 23240                           
 23241                           ; BSR set to: 15
 23242                           ;tmr7.c: 141: else
 23243                           ;tmr7.c: 142: {
 23244                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 23245                           
 23246                           ; BSR set to: 15
 23247  017F38  0101               	movlb	1	; () banked
 23248  017F3A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23249  017F3C  010F               	movlb	15	; () banked
 23250  017F3E  6F2F               	movwf	47,b	;volatile
 23251                           
 23252                           ; BSR set to: 15
 23253                           ;tmr7.c: 145: TMR7L = timerVal;
 23254  017F40  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23255  017F44  0012               	return	
 23256  017F46                     __end_of_TMR7_WriteTimer:
 23257                           	opt stack 0
 23258                           tosu	equ	0xFFF
 23259                           tosh	equ	0xFFE
 23260                           tosl	equ	0xFFD
 23261                           pclatu	equ	0xFFB
 23262                           pclath	equ	0xFFA
 23263                           tblptru	equ	0xFF8
 23264                           tblptrh	equ	0xFF7
 23265                           tblptrl	equ	0xFF6
 23266                           tablat	equ	0xFF5
 23267                           prodh	equ	0xFF4
 23268                           prodl	equ	0xFF3
 23269                           intcon	equ	0xFF2
 23270                           indf0	equ	0xFEF
 23271                           postinc0	equ	0xFEE
 23272                           fsr0h	equ	0xFEA
 23273                           fsr0l	equ	0xFE9
 23274                           wreg	equ	0xFE8
 23275                           indf1	equ	0xFE7
 23276                           postdec1	equ	0xFE5
 23277                           plusw1	equ	0xFE3
 23278                           fsr1h	equ	0xFE2
 23279                           fsr1l	equ	0xFE1
 23280                           bsr	equ	0xFE0
 23281                           indf2	equ	0xFDF
 23282                           postinc2	equ	0xFDE
 23283                           postdec2	equ	0xFDD
 23284                           plusw2	equ	0xFDB
 23285                           fsr2h	equ	0xFDA
 23286                           fsr2l	equ	0xFD9
 23287                           status	equ	0xFD8
 23288                           
 23289 ;; *************** function _TMR6_ISR *****************
 23290 ;; Defined at:
 23291 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 23292 ;; Parameters:    Size  Location     Type
 23293 ;;		None
 23294 ;; Auto vars:     Size  Location     Type
 23295 ;;		None
 23296 ;; Return value:  Size  Location     Type
 23297 ;;                  1    wreg      void 
 23298 ;; Registers used:
 23299 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23300 ;; Tracked objects:
 23301 ;;		On entry : 0/0
 23302 ;;		On exit  : 0/0
 23303 ;;		Unchanged: 0/0
 23304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23309 ;;Total ram usage:        0 bytes
 23310 ;; Hardware stack levels used:    1
 23311 ;; Hardware stack levels required when called:   10
 23312 ;; This function calls:
 23313 ;;		Absolute function
 23314 ;;		_TMR6_DefaultInterruptHandler
 23315 ;;		_heartbeatTimerCallback
 23316 ;; This function is called by:
 23317 ;;		_INTERRUPT_InterruptManagerLow
 23318 ;; This function uses a non-reentrant model
 23319 ;;
 23320                           
 23321                           	psect	text75
 23322  017EAA                     __ptext75:
 23323                           	opt stack 0
 23324  017EAA                     _TMR6_ISR:
 23325                           	opt stack 12
 23326                           
 23327                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 23328                           
 23329                           ; BSR set to: 15
 23330                           ;incstack = 0
 23331  017EAA  010E               	movlb	14	; () banked
 23332  017EAC  9B38               	bcf	56,5,b	;volatile
 23333                           
 23334                           ; BSR set to: 14
 23335                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 23336  017EAE  0102               	movlb	2	; () banked
 23337  017EB0  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23338  017EB2  116A               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23339  017EB4  116B               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23340  017EB6  B4D8               	btfsc	status,2,c
 23341  017EB8  0012               	return	
 23342                           
 23343                           ; BSR set to: 2
 23344                           ;tmr6.c: 172: {
 23345                           ;tmr6.c: 173: TMR6_InterruptHandler();
 23346  017EBA  D801               	call	i1u1754_28
 23347  017EBC  0012               	return	
 23348  017EBE                     i1u1754_28:
 23349  017EBE  0005               	push	
 23350  017EC0  6EFA               	movwf	pclath,c
 23351  017EC2  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23352  017EC4  6EFD               	movwf	tosl,c
 23353  017EC6  516A               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23354  017EC8  6EFE               	movwf	tosh,c
 23355  017ECA  516B               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23356  017ECC  6EFF               	movwf	tosu,c
 23357  017ECE  50FA               	movf	pclath,w,c
 23358  017ED0  0012               	return		;indir
 23359  017ED2                     __end_of_TMR6_ISR:
 23360                           	opt stack 0
 23361                           tosu	equ	0xFFF
 23362                           tosh	equ	0xFFE
 23363                           tosl	equ	0xFFD
 23364                           pclatu	equ	0xFFB
 23365                           pclath	equ	0xFFA
 23366                           tblptru	equ	0xFF8
 23367                           tblptrh	equ	0xFF7
 23368                           tblptrl	equ	0xFF6
 23369                           tablat	equ	0xFF5
 23370                           prodh	equ	0xFF4
 23371                           prodl	equ	0xFF3
 23372                           intcon	equ	0xFF2
 23373                           indf0	equ	0xFEF
 23374                           postinc0	equ	0xFEE
 23375                           fsr0h	equ	0xFEA
 23376                           fsr0l	equ	0xFE9
 23377                           wreg	equ	0xFE8
 23378                           indf1	equ	0xFE7
 23379                           postdec1	equ	0xFE5
 23380                           plusw1	equ	0xFE3
 23381                           fsr1h	equ	0xFE2
 23382                           fsr1l	equ	0xFE1
 23383                           bsr	equ	0xFE0
 23384                           indf2	equ	0xFDF
 23385                           postinc2	equ	0xFDE
 23386                           postdec2	equ	0xFDD
 23387                           plusw2	equ	0xFDB
 23388                           fsr2h	equ	0xFDA
 23389                           fsr2l	equ	0xFD9
 23390                           status	equ	0xFD8
 23391                           
 23392 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 23393 ;; Defined at:
 23394 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 23395 ;; Parameters:    Size  Location     Type
 23396 ;;		None
 23397 ;; Auto vars:     Size  Location     Type
 23398 ;;		None
 23399 ;; Return value:  Size  Location     Type
 23400 ;;                  1    wreg      void 
 23401 ;; Registers used:
 23402 ;;		None
 23403 ;; Tracked objects:
 23404 ;;		On entry : 0/0
 23405 ;;		On exit  : 0/0
 23406 ;;		Unchanged: 0/0
 23407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23412 ;;Total ram usage:        0 bytes
 23413 ;; Hardware stack levels used:    1
 23414 ;; Hardware stack levels required when called:    9
 23415 ;; This function calls:
 23416 ;;		Nothing
 23417 ;; This function is called by:
 23418 ;;		_TMR6_Initialize
 23419 ;;		_TMR6_ISR
 23420 ;; This function uses a non-reentrant model
 23421 ;;
 23422                           
 23423                           	psect	text76
 23424  018188                     __ptext76:
 23425                           	opt stack 0
 23426  018188                     _TMR6_DefaultInterruptHandler:
 23427                           	opt stack 12
 23428                           
 23429                           ;incstack = 0
 23430  018188  0012               	return		;funcret
 23431  01818A                     __end_of_TMR6_DefaultInterruptHandler:
 23432                           	opt stack 0
 23433                           tosu	equ	0xFFF
 23434                           tosh	equ	0xFFE
 23435                           tosl	equ	0xFFD
 23436                           pclatu	equ	0xFFB
 23437                           pclath	equ	0xFFA
 23438                           tblptru	equ	0xFF8
 23439                           tblptrh	equ	0xFF7
 23440                           tblptrl	equ	0xFF6
 23441                           tablat	equ	0xFF5
 23442                           prodh	equ	0xFF4
 23443                           prodl	equ	0xFF3
 23444                           intcon	equ	0xFF2
 23445                           indf0	equ	0xFEF
 23446                           postinc0	equ	0xFEE
 23447                           fsr0h	equ	0xFEA
 23448                           fsr0l	equ	0xFE9
 23449                           wreg	equ	0xFE8
 23450                           indf1	equ	0xFE7
 23451                           postdec1	equ	0xFE5
 23452                           plusw1	equ	0xFE3
 23453                           fsr1h	equ	0xFE2
 23454                           fsr1l	equ	0xFE1
 23455                           bsr	equ	0xFE0
 23456                           indf2	equ	0xFDF
 23457                           postinc2	equ	0xFDE
 23458                           postdec2	equ	0xFDD
 23459                           plusw2	equ	0xFDB
 23460                           fsr2h	equ	0xFDA
 23461                           fsr2l	equ	0xFD9
 23462                           status	equ	0xFD8
 23463                           
 23464 ;; *************** function _heartbeatTimerCallback *****************
 23465 ;; Defined at:
 23466 ;;		line 139 in file "main.c"
 23467 ;; Parameters:    Size  Location     Type
 23468 ;;		None
 23469 ;; Auto vars:     Size  Location     Type
 23470 ;;		None
 23471 ;; Return value:  Size  Location     Type
 23472 ;;                  1    wreg      void 
 23473 ;; Registers used:
 23474 ;;		wreg, status,2, status,0
 23475 ;; Tracked objects:
 23476 ;;		On entry : 0/0
 23477 ;;		On exit  : 0/0
 23478 ;;		Unchanged: 0/0
 23479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23482 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23483 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23484 ;;Total ram usage:        1 bytes
 23485 ;; Hardware stack levels used:    1
 23486 ;; Hardware stack levels required when called:    9
 23487 ;; This function calls:
 23488 ;;		Nothing
 23489 ;; This function is called by:
 23490 ;;		_main
 23491 ;;		_TMR6_ISR
 23492 ;; This function uses a non-reentrant model
 23493 ;;
 23494                           
 23495                           	psect	text77
 23496  017BD0                     __ptext77:
 23497                           	opt stack 0
 23498  017BD0                     _heartbeatTimerCallback:
 23499                           	opt stack 12
 23500                           
 23501                           ;main.c: 142: LATFbits.LATF2 = !LATFbits.LATF2;
 23502                           
 23503                           ;incstack = 0
 23504  017BD0  B47E               	btfsc	3966,2,c	;volatile
 23505  017BD2  D004               	goto	i1u1015_20
 23506  017BD4  0101               	movlb	1	; () banked
 23507  017BD6  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23508  017BD8  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 23509  017BDA  D002               	goto	i1u1016_28
 23510  017BDC                     i1u1015_20:
 23511  017BDC  0101               	movlb	1	; () banked
 23512  017BDE  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23513  017BE0                     i1u1016_28:
 23514  017BE0  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23515  017BE2  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23516  017BE4  507E               	movf	3966,w,c	;volatile
 23517  017BE6  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23518  017BE8  0BFB               	andlw	-5
 23519  017BEA  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23520  017BEC  6E7E               	movwf	3966,c	;volatile
 23521                           
 23522                           ;main.c: 145: dev_on_time++;
 23523  017BEE  0E01               	movlw	1
 23524  017BF0  0102               	movlb	2	; () banked
 23525  017BF2  2744               	addwf	_dev_on_time& (0+255),f,b	;volatile
 23526  017BF4  0E00               	movlw	0
 23527  017BF6  2345               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 23528  017BF8  2346               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 23529  017BFA  2347               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 23530                           
 23531                           ; BSR set to: 2
 23532                           ;main.c: 148: if (load_enable) {
 23533  017BFC  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23534  017BFE  D006               	goto	i1l937
 23535                           
 23536                           ; BSR set to: 2
 23537                           ;main.c: 150: load_on_time++;
 23538  017C00  0E01               	movlw	1
 23539  017C02  2740               	addwf	_load_on_time& (0+255),f,b	;volatile
 23540  017C04  0E00               	movlw	0
 23541  017C06  2341               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 23542  017C08  2342               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 23543  017C0A  2343               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 23544  017C0C                     i1l937:
 23545                           
 23546                           ; BSR set to: 2
 23547  017C0C  0004               	clrwdt		;# 
 23548  017C0E  0012               	return		;funcret
 23549  017C10                     __end_of_heartbeatTimerCallback:
 23550                           	opt stack 0
 23551                           tosu	equ	0xFFF
 23552                           tosh	equ	0xFFE
 23553                           tosl	equ	0xFFD
 23554                           pclatu	equ	0xFFB
 23555                           pclath	equ	0xFFA
 23556                           tblptru	equ	0xFF8
 23557                           tblptrh	equ	0xFF7
 23558                           tblptrl	equ	0xFF6
 23559                           tablat	equ	0xFF5
 23560                           prodh	equ	0xFF4
 23561                           prodl	equ	0xFF3
 23562                           intcon	equ	0xFF2
 23563                           indf0	equ	0xFEF
 23564                           postinc0	equ	0xFEE
 23565                           fsr0h	equ	0xFEA
 23566                           fsr0l	equ	0xFE9
 23567                           wreg	equ	0xFE8
 23568                           indf1	equ	0xFE7
 23569                           postdec1	equ	0xFE5
 23570                           plusw1	equ	0xFE3
 23571                           fsr1h	equ	0xFE2
 23572                           fsr1l	equ	0xFE1
 23573                           bsr	equ	0xFE0
 23574                           indf2	equ	0xFDF
 23575                           postinc2	equ	0xFDE
 23576                           postdec2	equ	0xFDD
 23577                           plusw2	equ	0xFDB
 23578                           fsr2h	equ	0xFDA
 23579                           fsr2l	equ	0xFD9
 23580                           status	equ	0xFD8
 23581                           
 23582 ;; *************** function _HLVD_ISR *****************
 23583 ;; Defined at:
 23584 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 23585 ;; Parameters:    Size  Location     Type
 23586 ;;		None
 23587 ;; Auto vars:     Size  Location     Type
 23588 ;;		None
 23589 ;; Return value:  Size  Location     Type
 23590 ;;                  1    wreg      void 
 23591 ;; Registers used:
 23592 ;;		None
 23593 ;; Tracked objects:
 23594 ;;		On entry : 0/0
 23595 ;;		On exit  : 0/0
 23596 ;;		Unchanged: 0/0
 23597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23602 ;;Total ram usage:        0 bytes
 23603 ;; Hardware stack levels used:    1
 23604 ;; Hardware stack levels required when called:    9
 23605 ;; This function calls:
 23606 ;;		Nothing
 23607 ;; This function is called by:
 23608 ;;		_INTERRUPT_InterruptManagerLow
 23609 ;; This function uses a non-reentrant model
 23610 ;;
 23611                           
 23612                           	psect	text78
 23613  018166                     __ptext78:
 23614                           	opt stack 0
 23615  018166                     _HLVD_ISR:
 23616                           	opt stack 13
 23617                           
 23618                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 23619                           
 23620                           ;incstack = 0
 23621  018166  010E               	movlb	14	; () banked
 23622  018168  9F35               	bcf	53,7,b	;volatile
 23623                           
 23624                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 23625  01816A  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 23626                           
 23627                           ; BSR set to: 14
 23628  01816C  0012               	return		;funcret
 23629  01816E                     __end_of_HLVD_ISR:
 23630                           	opt stack 0
 23631                           tosu	equ	0xFFF
 23632                           tosh	equ	0xFFE
 23633                           tosl	equ	0xFFD
 23634                           pclatu	equ	0xFFB
 23635                           pclath	equ	0xFFA
 23636                           tblptru	equ	0xFF8
 23637                           tblptrh	equ	0xFF7
 23638                           tblptrl	equ	0xFF6
 23639                           tablat	equ	0xFF5
 23640                           prodh	equ	0xFF4
 23641                           prodl	equ	0xFF3
 23642                           intcon	equ	0xFF2
 23643                           indf0	equ	0xFEF
 23644                           postinc0	equ	0xFEE
 23645                           fsr0h	equ	0xFEA
 23646                           fsr0l	equ	0xFE9
 23647                           wreg	equ	0xFE8
 23648                           indf1	equ	0xFE7
 23649                           postdec1	equ	0xFE5
 23650                           plusw1	equ	0xFE3
 23651                           fsr1h	equ	0xFE2
 23652                           fsr1l	equ	0xFE1
 23653                           bsr	equ	0xFE0
 23654                           indf2	equ	0xFDF
 23655                           postinc2	equ	0xFDE
 23656                           postdec2	equ	0xFDD
 23657                           plusw2	equ	0xFDB
 23658                           fsr2h	equ	0xFDA
 23659                           fsr2l	equ	0xFD9
 23660                           status	equ	0xFD8
 23661                           
 23662 ;; *************** function _EUSART2_Transmit_ISR *****************
 23663 ;; Defined at:
 23664 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 23665 ;; Parameters:    Size  Location     Type
 23666 ;;		None
 23667 ;; Auto vars:     Size  Location     Type
 23668 ;;		None
 23669 ;; Return value:  Size  Location     Type
 23670 ;;                  1    wreg      void 
 23671 ;; Registers used:
 23672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23673 ;; Tracked objects:
 23674 ;;		On entry : 0/0
 23675 ;;		On exit  : 0/0
 23676 ;;		Unchanged: 0/0
 23677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23682 ;;Total ram usage:        0 bytes
 23683 ;; Hardware stack levels used:    1
 23684 ;; Hardware stack levels required when called:    9
 23685 ;; This function calls:
 23686 ;;		Nothing
 23687 ;; This function is called by:
 23688 ;;		_EUSART2_Initialize
 23689 ;;		_INTERRUPT_InterruptManagerLow
 23690 ;; This function uses a non-reentrant model
 23691 ;;
 23692                           
 23693                           	psect	text79
 23694  017CF6                     __ptext79:
 23695                           	opt stack 0
 23696  017CF6                     _EUSART2_Transmit_ISR:
 23697                           	opt stack 13
 23698                           
 23699                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 23700                           
 23701                           ; BSR set to: 14
 23702                           ;incstack = 0
 23703  017CF6  0E80               	movlw	128
 23704  017CF8  0101               	movlb	1	; () banked
 23705  017CFA  61E0               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 23706  017CFC  D014               	goto	i1l403
 23707                           
 23708                           ; BSR set to: 1
 23709                           ;eusart2.c: 203: {
 23710                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 23711  017CFE  51E1               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 23712  017D00  0D01               	mullw	1
 23713  017D02  0E00               	movlw	low _eusart2TxBuffer
 23714  017D04  24F3               	addwf	prodl,w,c
 23715  017D06  6ED9               	movwf	fsr2l,c
 23716  017D08  0E03               	movlw	high _eusart2TxBuffer
 23717  017D0A  20F4               	addwfc	prodh,w,c
 23718  017D0C  6EDA               	movwf	fsr2h,c
 23719  017D0E  50DF               	movf	indf2,w,c
 23720  017D10  010E               	movlb	14	; () banked
 23721  017D12  6FF2               	movwf	242,b	;volatile
 23722                           
 23723                           ; BSR set to: 14
 23724  017D14  0101               	movlb	1	; () banked
 23725  017D16  2BE1               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 23726                           
 23727                           ; BSR set to: 1
 23728                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 23729  017D18  0E7F               	movlw	127
 23730  017D1A  65E1               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 23731  017D1C  D002               	goto	i1l404
 23732                           
 23733                           ; BSR set to: 1
 23734                           ;eusart2.c: 206: {
 23735                           ;eusart2.c: 207: eusart2TxTail = 0;
 23736  017D1E  0E00               	movlw	0
 23737  017D20  6FE1               	movwf	_eusart2TxTail& (0+255),b	;volatile
 23738  017D22                     i1l404:
 23739                           
 23740                           ; BSR set to: 1
 23741                           ;eusart2.c: 208: }
 23742                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 23743                           
 23744                           ; BSR set to: 1
 23745  017D22  2BE0               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 23746                           
 23747                           ;eusart2.c: 210: }
 23748  017D24  0012               	return	
 23749  017D26                     i1l403:
 23750                           
 23751                           ; BSR set to: 1
 23752                           ;eusart2.c: 211: else
 23753                           ;eusart2.c: 212: {
 23754                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 23755  017D26  010E               	movlb	14	; () banked
 23756  017D28  9D2C               	bcf	44,6,b	;volatile
 23757  017D2A  0012               	return	
 23758  017D2C                     __end_of_EUSART2_Transmit_ISR:
 23759                           	opt stack 0
 23760                           tosu	equ	0xFFF
 23761                           tosh	equ	0xFFE
 23762                           tosl	equ	0xFFD
 23763                           pclatu	equ	0xFFB
 23764                           pclath	equ	0xFFA
 23765                           tblptru	equ	0xFF8
 23766                           tblptrh	equ	0xFF7
 23767                           tblptrl	equ	0xFF6
 23768                           tablat	equ	0xFF5
 23769                           prodh	equ	0xFF4
 23770                           prodl	equ	0xFF3
 23771                           intcon	equ	0xFF2
 23772                           indf0	equ	0xFEF
 23773                           postinc0	equ	0xFEE
 23774                           fsr0h	equ	0xFEA
 23775                           fsr0l	equ	0xFE9
 23776                           wreg	equ	0xFE8
 23777                           indf1	equ	0xFE7
 23778                           postdec1	equ	0xFE5
 23779                           plusw1	equ	0xFE3
 23780                           fsr1h	equ	0xFE2
 23781                           fsr1l	equ	0xFE1
 23782                           bsr	equ	0xFE0
 23783                           indf2	equ	0xFDF
 23784                           postinc2	equ	0xFDE
 23785                           postdec2	equ	0xFDD
 23786                           plusw2	equ	0xFDB
 23787                           fsr2h	equ	0xFDA
 23788                           fsr2l	equ	0xFD9
 23789                           status	equ	0xFD8
 23790                           
 23791 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 23792 ;; Defined at:
 23793 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;		None
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;		None
 23798 ;; Return value:  Size  Location     Type
 23799 ;;                  1    wreg      void 
 23800 ;; Registers used:
 23801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23802 ;; Tracked objects:
 23803 ;;		On entry : 0/0
 23804 ;;		On exit  : 0/0
 23805 ;;		Unchanged: 0/0
 23806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23809 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23810 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23811 ;;Total ram usage:       18 bytes
 23812 ;; Hardware stack levels used:    1
 23813 ;; Hardware stack levels required when called:    8
 23814 ;; This function calls:
 23815 ;;		Absolute function
 23816 ;;		_ADCC_ISR
 23817 ;;		_EUSART2_Receive_ISR
 23818 ;;		_TMR5_ISR
 23819 ;; This function is called by:
 23820 ;;		Interrupt level 2
 23821 ;; This function uses a non-reentrant model
 23822 ;;
 23823                           
 23824                           	psect	intcode
 23825  000008                     __pintcode:
 23826                           	opt stack 0
 23827  000008                     _INTERRUPT_InterruptManagerHigh:
 23828                           	opt stack 11
 23829                           
 23830                           ;incstack = 0
 23831  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23832  00000A  EF22  F0B6         	goto	int_func
 23833                           tosu	equ	0xFFF
 23834                           tosh	equ	0xFFE
 23835                           tosl	equ	0xFFD
 23836                           pclatu	equ	0xFFB
 23837                           pclath	equ	0xFFA
 23838                           tblptru	equ	0xFF8
 23839                           tblptrh	equ	0xFF7
 23840                           tblptrl	equ	0xFF6
 23841                           tablat	equ	0xFF5
 23842                           prodh	equ	0xFF4
 23843                           prodl	equ	0xFF3
 23844                           intcon	equ	0xFF2
 23845                           indf0	equ	0xFEF
 23846                           postinc0	equ	0xFEE
 23847                           fsr0h	equ	0xFEA
 23848                           fsr0l	equ	0xFE9
 23849                           wreg	equ	0xFE8
 23850                           indf1	equ	0xFE7
 23851                           postdec1	equ	0xFE5
 23852                           plusw1	equ	0xFE3
 23853                           fsr1h	equ	0xFE2
 23854                           fsr1l	equ	0xFE1
 23855                           bsr	equ	0xFE0
 23856                           indf2	equ	0xFDF
 23857                           postinc2	equ	0xFDE
 23858                           postdec2	equ	0xFDD
 23859                           plusw2	equ	0xFDB
 23860                           fsr2h	equ	0xFDA
 23861                           fsr2l	equ	0xFD9
 23862                           status	equ	0xFD8
 23863                           
 23864                           	psect	intcode_body
 23865  016C44                     __pintcode_body:
 23866                           	opt stack 11
 23867  016C44                     int_func:
 23868                           	opt stack 11
 23869  016C44  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 23870  016C48  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 23871  016C4C  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 23872  016C50  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 23873  016C54  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 23874  016C58  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 23875  016C5C  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 23876  016C60  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 23877  016C64  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 23878  016C68  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 23879  016C6C  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 23880  016C70  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 23881  016C74  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 23882  016C78  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 23883  016C7C  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 23884  016C80  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 23885  016C84  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 23886  016C88  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 23887                           
 23888                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 23889  016C8C  010E               	movlb	14	; () banked
 23890  016C8E  BF2C               	btfsc	44,7,b	;volatile
 23891                           
 23892                           ; BSR set to: 14
 23893  016C90  AF36               	btfss	54,7,b	;volatile
 23894  016C92  D00D               	goto	i2l212
 23895                           
 23896                           ; BSR set to: 14
 23897                           ;interrupt_manager.c: 87: {
 23898                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 23899  016C94  D801               	call	i2u1759_48
 23900  016C96  D016               	goto	i2l216
 23901  016C98                     i2u1759_48:
 23902  016C98  0005               	push	
 23903  016C9A  6EFA               	movwf	pclath,c
 23904  016C9C  0102               	movlb	2	; () banked
 23905  016C9E  516C               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 23906  016CA0  6EFD               	movwf	tosl,c
 23907  016CA2  516D               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 23908  016CA4  6EFE               	movwf	tosh,c
 23909  016CA6  516E               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 23910  016CA8  6EFF               	movwf	tosu,c
 23911  016CAA  50FA               	movf	pclath,w,c
 23912  016CAC  0012               	return		;indir
 23913  016CAE                     i2l212:
 23914                           
 23915                           ; BSR set to: 14
 23916                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 23917  016CAE  B92E               	btfsc	46,4,b	;volatile
 23918                           
 23919                           ; BSR set to: 14
 23920  016CB0  A938               	btfss	56,4,b	;volatile
 23921  016CB2  D003               	goto	i2l214
 23922                           
 23923                           ; BSR set to: 14
 23924                           ;interrupt_manager.c: 91: {
 23925                           ;interrupt_manager.c: 92: TMR5_ISR();
 23926  016CB4  ECB0  F0BE         	call	_TMR5_ISR	;wreg free
 23927                           
 23928                           ;interrupt_manager.c: 93: }
 23929  016CB8  D005               	goto	i2l216
 23930  016CBA                     i2l214:
 23931                           
 23932                           ; BSR set to: 14
 23933                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 23934  016CBA  B12A               	btfsc	42,0,b	;volatile
 23935                           
 23936                           ; BSR set to: 14
 23937  016CBC  A134               	btfss	52,0,b	;volatile
 23938  016CBE  D002               	goto	i2l216
 23939                           
 23940                           ; BSR set to: 14
 23941                           ;interrupt_manager.c: 95: {
 23942                           ;interrupt_manager.c: 96: ADCC_ISR();
 23943  016CC0  EC69  F0BF         	call	_ADCC_ISR	;wreg free
 23944  016CC4                     i2l216:
 23945                           
 23946                           ;interrupt_manager.c: 98: else
 23947                           ;interrupt_manager.c: 99: {
 23948  016CC4  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 23949  016CC8  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 23950  016CCC  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 23951  016CD0  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 23952  016CD4  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 23953  016CD8  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 23954  016CDC  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 23955  016CE0  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 23956  016CE4  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 23957  016CE8  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 23958  016CEC  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 23959  016CF0  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 23960  016CF4  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 23961  016CF8  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 23962  016CFC  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 23963  016D00  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 23964  016D04  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 23965  016D08  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 23966  016D0C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23967  016D0E  0011               	retfie		f
 23968  016D10                     __end_of_INTERRUPT_InterruptManagerHigh:
 23969                           	opt stack 0
 23970                           tosu	equ	0xFFF
 23971                           tosh	equ	0xFFE
 23972                           tosl	equ	0xFFD
 23973                           pclatu	equ	0xFFB
 23974                           pclath	equ	0xFFA
 23975                           tblptru	equ	0xFF8
 23976                           tblptrh	equ	0xFF7
 23977                           tblptrl	equ	0xFF6
 23978                           tablat	equ	0xFF5
 23979                           prodh	equ	0xFF4
 23980                           prodl	equ	0xFF3
 23981                           intcon	equ	0xFF2
 23982                           indf0	equ	0xFEF
 23983                           postinc0	equ	0xFEE
 23984                           fsr0h	equ	0xFEA
 23985                           fsr0l	equ	0xFE9
 23986                           wreg	equ	0xFE8
 23987                           indf1	equ	0xFE7
 23988                           postdec1	equ	0xFE5
 23989                           plusw1	equ	0xFE3
 23990                           fsr1h	equ	0xFE2
 23991                           fsr1l	equ	0xFE1
 23992                           bsr	equ	0xFE0
 23993                           indf2	equ	0xFDF
 23994                           postinc2	equ	0xFDE
 23995                           postdec2	equ	0xFDD
 23996                           plusw2	equ	0xFDB
 23997                           fsr2h	equ	0xFDA
 23998                           fsr2l	equ	0xFD9
 23999                           status	equ	0xFD8
 24000                           
 24001 ;; *************** function _TMR5_ISR *****************
 24002 ;; Defined at:
 24003 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;		None
 24006 ;; Auto vars:     Size  Location     Type
 24007 ;;		None
 24008 ;; Return value:  Size  Location     Type
 24009 ;;                  1    wreg      void 
 24010 ;; Registers used:
 24011 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 24012 ;; Tracked objects:
 24013 ;;		On entry : 0/0
 24014 ;;		On exit  : 0/0
 24015 ;;		Unchanged: 0/0
 24016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24021 ;;Total ram usage:        0 bytes
 24022 ;; Hardware stack levels used:    1
 24023 ;; Hardware stack levels required when called:    1
 24024 ;; This function calls:
 24025 ;;		Absolute function
 24026 ;;		_TMR5_DefaultInterruptHandler
 24027 ;;		_TMR5_WriteTimer
 24028 ;; This function is called by:
 24029 ;;		_INTERRUPT_InterruptManagerHigh
 24030 ;; This function uses a non-reentrant model
 24031 ;;
 24032                           
 24033                           	psect	text81
 24034  017D60                     __ptext81:
 24035                           	opt stack 0
 24036  017D60                     _TMR5_ISR:
 24037                           	opt stack 17
 24038                           
 24039                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 24040                           
 24041                           ;incstack = 0
 24042  017D60  010E               	movlb	14	; () banked
 24043  017D62  9938               	bcf	56,4,b	;volatile
 24044                           
 24045                           ; BSR set to: 14
 24046                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 24047  017D64  C274  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 24048  017D68  C275  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 24049  017D6C  EC14  F0C0         	call	_TMR5_WriteTimer	;wreg free
 24050                           
 24051                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 24052  017D70  0102               	movlb	2	; () banked
 24053  017D72  5160               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24054  017D74  1161               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24055  017D76  1162               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24056  017D78  B4D8               	btfsc	status,2,c
 24057  017D7A  0012               	return	
 24058                           
 24059                           ; BSR set to: 2
 24060                           ;tmr5.c: 172: {
 24061                           ;tmr5.c: 173: TMR5_InterruptHandler();
 24062  017D7C  D801               	call	i2u1750_48
 24063  017D7E  0012               	return	
 24064  017D80                     i2u1750_48:
 24065  017D80  0005               	push	
 24066  017D82  6EFA               	movwf	pclath,c
 24067  017D84  5160               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24068  017D86  6EFD               	movwf	tosl,c
 24069  017D88  5161               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24070  017D8A  6EFE               	movwf	tosh,c
 24071  017D8C  5162               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24072  017D8E  6EFF               	movwf	tosu,c
 24073  017D90  50FA               	movf	pclath,w,c
 24074  017D92  0012               	return		;indir
 24075  017D94                     __end_of_TMR5_ISR:
 24076                           	opt stack 0
 24077                           tosu	equ	0xFFF
 24078                           tosh	equ	0xFFE
 24079                           tosl	equ	0xFFD
 24080                           pclatu	equ	0xFFB
 24081                           pclath	equ	0xFFA
 24082                           tblptru	equ	0xFF8
 24083                           tblptrh	equ	0xFF7
 24084                           tblptrl	equ	0xFF6
 24085                           tablat	equ	0xFF5
 24086                           prodh	equ	0xFF4
 24087                           prodl	equ	0xFF3
 24088                           intcon	equ	0xFF2
 24089                           indf0	equ	0xFEF
 24090                           postinc0	equ	0xFEE
 24091                           fsr0h	equ	0xFEA
 24092                           fsr0l	equ	0xFE9
 24093                           wreg	equ	0xFE8
 24094                           indf1	equ	0xFE7
 24095                           postdec1	equ	0xFE5
 24096                           plusw1	equ	0xFE3
 24097                           fsr1h	equ	0xFE2
 24098                           fsr1l	equ	0xFE1
 24099                           bsr	equ	0xFE0
 24100                           indf2	equ	0xFDF
 24101                           postinc2	equ	0xFDE
 24102                           postdec2	equ	0xFDD
 24103                           plusw2	equ	0xFDB
 24104                           fsr2h	equ	0xFDA
 24105                           fsr2l	equ	0xFD9
 24106                           status	equ	0xFD8
 24107                           
 24108 ;; *************** function _TMR5_WriteTimer *****************
 24109 ;; Defined at:
 24110 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 24111 ;; Parameters:    Size  Location     Type
 24112 ;;  timerVal        2    0[COMRAM] unsigned int 
 24113 ;; Auto vars:     Size  Location     Type
 24114 ;;		None
 24115 ;; Return value:  Size  Location     Type
 24116 ;;                  1    wreg      void 
 24117 ;; Registers used:
 24118 ;;		wreg, status,2
 24119 ;; Tracked objects:
 24120 ;;		On entry : 0/0
 24121 ;;		On exit  : 0/0
 24122 ;;		Unchanged: 0/0
 24123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24128 ;;Total ram usage:        2 bytes
 24129 ;; Hardware stack levels used:    1
 24130 ;; This function calls:
 24131 ;;		Nothing
 24132 ;; This function is called by:
 24133 ;;		_TMR5_ISR
 24134 ;;		_TMR5_Reload
 24135 ;; This function uses a non-reentrant model
 24136 ;;
 24137                           
 24138                           	psect	text82
 24139  018028                     __ptext82:
 24140                           	opt stack 0
 24141  018028                     _TMR5_WriteTimer:
 24142                           	opt stack 17
 24143                           
 24144                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 24145                           
 24146                           ;incstack = 0
 24147  018028  A4C3               	btfss	4035,2,c	;volatile
 24148  01802A  D007               	goto	i2l714
 24149                           
 24150                           ;tmr5.c: 130: {
 24151                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 24152  01802C  90C3               	bcf	4035,0,c	;volatile
 24153                           
 24154                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 24155  01802E  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24156  018030  6EC2               	movwf	4034,c	;volatile
 24157                           
 24158                           ;tmr5.c: 136: TMR5L = timerVal;
 24159  018032  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24160                           
 24161                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 24162  018036  80C3               	bsf	4035,0,c	;volatile
 24163                           
 24164                           ;tmr5.c: 140: }
 24165  018038  0012               	return	
 24166  01803A                     i2l714:
 24167                           
 24168                           ;tmr5.c: 141: else
 24169                           ;tmr5.c: 142: {
 24170                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 24171  01803A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24172  01803C  6EC2               	movwf	4034,c	;volatile
 24173                           
 24174                           ;tmr5.c: 145: TMR5L = timerVal;
 24175  01803E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24176  018042  0012               	return	
 24177  018044                     __end_of_TMR5_WriteTimer:
 24178                           	opt stack 0
 24179                           tosu	equ	0xFFF
 24180                           tosh	equ	0xFFE
 24181                           tosl	equ	0xFFD
 24182                           pclatu	equ	0xFFB
 24183                           pclath	equ	0xFFA
 24184                           tblptru	equ	0xFF8
 24185                           tblptrh	equ	0xFF7
 24186                           tblptrl	equ	0xFF6
 24187                           tablat	equ	0xFF5
 24188                           prodh	equ	0xFF4
 24189                           prodl	equ	0xFF3
 24190                           intcon	equ	0xFF2
 24191                           indf0	equ	0xFEF
 24192                           postinc0	equ	0xFEE
 24193                           fsr0h	equ	0xFEA
 24194                           fsr0l	equ	0xFE9
 24195                           wreg	equ	0xFE8
 24196                           indf1	equ	0xFE7
 24197                           postdec1	equ	0xFE5
 24198                           plusw1	equ	0xFE3
 24199                           fsr1h	equ	0xFE2
 24200                           fsr1l	equ	0xFE1
 24201                           bsr	equ	0xFE0
 24202                           indf2	equ	0xFDF
 24203                           postinc2	equ	0xFDE
 24204                           postdec2	equ	0xFDD
 24205                           plusw2	equ	0xFDB
 24206                           fsr2h	equ	0xFDA
 24207                           fsr2l	equ	0xFD9
 24208                           status	equ	0xFD8
 24209                           
 24210 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24211 ;; Defined at:
 24212 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24213 ;; Parameters:    Size  Location     Type
 24214 ;;		None
 24215 ;; Auto vars:     Size  Location     Type
 24216 ;;		None
 24217 ;; Return value:  Size  Location     Type
 24218 ;;                  1    wreg      void 
 24219 ;; Registers used:
 24220 ;;		None
 24221 ;; Tracked objects:
 24222 ;;		On entry : 0/0
 24223 ;;		On exit  : 0/0
 24224 ;;		Unchanged: 0/0
 24225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24230 ;;Total ram usage:        0 bytes
 24231 ;; Hardware stack levels used:    1
 24232 ;; This function calls:
 24233 ;;		Nothing
 24234 ;; This function is called by:
 24235 ;;		_TMR5_Initialize
 24236 ;;		_TMR5_ISR
 24237 ;; This function uses a non-reentrant model
 24238 ;;
 24239                           
 24240                           	psect	text83
 24241  01818A                     __ptext83:
 24242                           	opt stack 0
 24243  01818A                     _TMR5_DefaultInterruptHandler:
 24244                           	opt stack 17
 24245                           
 24246                           ;incstack = 0
 24247  01818A  0012               	return		;funcret
 24248  01818C                     __end_of_TMR5_DefaultInterruptHandler:
 24249                           	opt stack 0
 24250                           tosu	equ	0xFFF
 24251                           tosh	equ	0xFFE
 24252                           tosl	equ	0xFFD
 24253                           pclatu	equ	0xFFB
 24254                           pclath	equ	0xFFA
 24255                           tblptru	equ	0xFF8
 24256                           tblptrh	equ	0xFF7
 24257                           tblptrl	equ	0xFF6
 24258                           tablat	equ	0xFF5
 24259                           prodh	equ	0xFF4
 24260                           prodl	equ	0xFF3
 24261                           intcon	equ	0xFF2
 24262                           indf0	equ	0xFEF
 24263                           postinc0	equ	0xFEE
 24264                           fsr0h	equ	0xFEA
 24265                           fsr0l	equ	0xFE9
 24266                           wreg	equ	0xFE8
 24267                           indf1	equ	0xFE7
 24268                           postdec1	equ	0xFE5
 24269                           plusw1	equ	0xFE3
 24270                           fsr1h	equ	0xFE2
 24271                           fsr1l	equ	0xFE1
 24272                           bsr	equ	0xFE0
 24273                           indf2	equ	0xFDF
 24274                           postinc2	equ	0xFDE
 24275                           postdec2	equ	0xFDD
 24276                           plusw2	equ	0xFDB
 24277                           fsr2h	equ	0xFDA
 24278                           fsr2l	equ	0xFD9
 24279                           status	equ	0xFD8
 24280                           
 24281 ;; *************** function _EUSART2_Receive_ISR *****************
 24282 ;; Defined at:
 24283 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 24284 ;; Parameters:    Size  Location     Type
 24285 ;;		None
 24286 ;; Auto vars:     Size  Location     Type
 24287 ;;		None
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1    wreg      void 
 24290 ;; Registers used:
 24291 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24301 ;;Total ram usage:        0 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; Hardware stack levels required when called:    3
 24304 ;; This function calls:
 24305 ;;		i2_printf
 24306 ;; This function is called by:
 24307 ;;		_EUSART2_Initialize
 24308 ;;		_INTERRUPT_InterruptManagerHigh
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text84
 24313  016DD2                     __ptext84:
 24314                           	opt stack 0
 24315  016DD2                     _EUSART2_Receive_ISR:
 24316                           	opt stack 15
 24317                           
 24318                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 24319                           
 24320                           ;incstack = 0
 24321  016DD2  010E               	movlb	14	; () banked
 24322  016DD4  A3F5               	btfss	245,1,b	;volatile
 24323  016DD6  D003               	goto	i2l409
 24324                           
 24325                           ; BSR set to: 14
 24326                           ;eusart2.c: 221: {
 24327                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 24328  016DD8  99F5               	bcf	245,4,b	;volatile
 24329                           
 24330                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 24331  016DDA  89F5               	bsf	245,4,b	;volatile
 24332                           
 24333                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 24334  016DDC  827E               	bsf	3966,1,c	;volatile
 24335  016DDE                     i2l409:
 24336                           
 24337                           ; BSR set to: 14
 24338                           ;eusart2.c: 227: }
 24339                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 24340  016DDE  927E               	bcf	3966,1,c	;volatile
 24341                           
 24342                           ; BSR set to: 14
 24343                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 24344  016DE0  0100               	movlb	0	; () banked
 24345  016DE2  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24346  016DE4  0D01               	mullw	1
 24347  016DE6  0E00               	movlw	low _eusart2RxBuffer
 24348  016DE8  24F3               	addwf	prodl,w,c
 24349  016DEA  6ED9               	movwf	fsr2l,c
 24350  016DEC  0E02               	movlw	high _eusart2RxBuffer
 24351  016DEE  20F4               	addwfc	prodh,w,c
 24352  016DF0  6EDA               	movwf	fsr2h,c
 24353  016DF2  CEF1 FFDF          	movff	3825,indf2	;volatile
 24354                           
 24355                           ; BSR set to: 0
 24356  016DF6  2BF4               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 24357                           
 24358                           ; BSR set to: 0
 24359                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 24360  016DF8  0E3F               	movlw	63
 24361  016DFA  65F4               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 24362  016DFC  D002               	goto	i2l410
 24363                           
 24364                           ; BSR set to: 0
 24365                           ;eusart2.c: 234: {
 24366                           ;eusart2.c: 235: eusart2RxHead = 0;
 24367  016DFE  0E00               	movlw	0
 24368  016E00  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 24369  016E02                     i2l410:
 24370                           
 24371                           ; BSR set to: 0
 24372                           ;eusart2.c: 236: }
 24373                           ;eusart2.c: 237: eusart2RxCount++;
 24374                           
 24375                           ; BSR set to: 0
 24376  016E02  0101               	movlb	1	; () banked
 24377  016E04  2BDE               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 24378                           
 24379                           ; BSR set to: 1
 24380                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 24381  016E06  0E0A               	movlw	10
 24382  016E08  010E               	movlb	14	; () banked
 24383  016E0A  19F1               	xorwf	241,w,b	;volatile
 24384  016E0C  B4D8               	btfsc	status,2,c
 24385  016E0E  D004               	goto	i2u1667_40
 24386                           
 24387                           ; BSR set to: 14
 24388  016E10  0E0D               	movlw	13
 24389  016E12  19F1               	xorwf	241,w,b	;volatile
 24390  016E14  A4D8               	btfss	status,2,c
 24391  016E16  D006               	goto	i2l411
 24392  016E18                     i2u1667_40:
 24393                           
 24394                           ; BSR set to: 14
 24395                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 24396  016E18  0100               	movlb	0	; () banked
 24397  016E1A  81FF               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24398                           
 24399                           ; BSR set to: 0
 24400                           ;eusart2.c: 248: RC2REG = 0;
 24401  016E1C  0E00               	movlw	0
 24402  016E1E  010E               	movlb	14	; () banked
 24403  016E20  6FF1               	movwf	241,b	;volatile
 24404                           
 24405                           ;eusart2.c: 250: }
 24406  016E22  D002               	goto	i2l414
 24407  016E24                     i2l411:
 24408                           
 24409                           ; BSR set to: 14
 24410                           ;eusart2.c: 252: else {
 24411                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 24412  016E24  0100               	movlb	0	; () banked
 24413  016E26  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24414  016E28                     i2l414:
 24415                           
 24416                           ;eusart2.c: 256: }
 24417                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 24418                           
 24419                           ; BSR set to: 0
 24420  016E28  0E08               	movlw	8
 24421  016E2A  010E               	movlb	14	; () banked
 24422  016E2C  19F1               	xorwf	241,w,b	;volatile
 24423  016E2E  A4D8               	btfss	status,2,c
 24424  016E30  0012               	return	
 24425                           
 24426                           ; BSR set to: 14
 24427                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 24428  016E32  0100               	movlb	0	; () banked
 24429  016E34  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24430  016E36  0D01               	mullw	1
 24431  016E38  0E00               	movlw	low _eusart2RxBuffer
 24432  016E3A  24F3               	addwf	prodl,w,c
 24433  016E3C  6ED9               	movwf	fsr2l,c
 24434  016E3E  0E02               	movlw	high _eusart2RxBuffer
 24435  016E40  20F4               	addwfc	prodh,w,c
 24436  016E42  6EDA               	movwf	fsr2h,c
 24437  016E44  0E00               	movlw	0
 24438  016E46  6EDF               	movwf	indf2,c
 24439                           
 24440                           ; BSR set to: 0
 24441                           ;eusart2.c: 262: eusart2RxHead--;
 24442  016E48  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24443                           
 24444                           ; BSR set to: 0
 24445                           ;eusart2.c: 265: printf("\033[K");
 24446  016E4A  0EC5               	movlw	low STR_1
 24447  016E4C  6F7E               	movwf	i2printf@f& (0+255),b
 24448  016E4E  0EFF               	movlw	high STR_1
 24449  016E50  6F7F               	movwf	(i2printf@f+1)& (0+255),b
 24450  016E52  ECE5  F08B         	call	i2_printf	;wreg free
 24451                           
 24452                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 24453  016E56  0101               	movlb	1	; () banked
 24454  016E58  51DF               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 24455  016E5A  0100               	movlb	0	; () banked
 24456  016E5C  19F4               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 24457  016E5E  B4D8               	btfsc	status,2,c
 24458  016E60  D00B               	goto	i2l416
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 24462  016E62  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24463  016E64  0D01               	mullw	1
 24464  016E66  0E00               	movlw	low _eusart2RxBuffer
 24465  016E68  24F3               	addwf	prodl,w,c
 24466  016E6A  6ED9               	movwf	fsr2l,c
 24467  016E6C  0E02               	movlw	high _eusart2RxBuffer
 24468  016E6E  20F4               	addwfc	prodh,w,c
 24469  016E70  6EDA               	movwf	fsr2h,c
 24470  016E72  0E00               	movlw	0
 24471  016E74  6EDF               	movwf	indf2,c
 24472                           
 24473                           ; BSR set to: 0
 24474                           ;eusart2.c: 270: eusart2RxHead--;
 24475  016E76  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24476  016E78                     i2l416:
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;eusart2.c: 272: }
 24480                           ;eusart2.c: 274: RC2REG = 0;
 24481                           
 24482                           ; BSR set to: 0
 24483  016E78  0E00               	movlw	0
 24484  016E7A  010E               	movlb	14	; () banked
 24485  016E7C  6FF1               	movwf	241,b	;volatile
 24486  016E7E  0012               	return	
 24487  016E80                     __end_of_EUSART2_Receive_ISR:
 24488                           	opt stack 0
 24489                           tosu	equ	0xFFF
 24490                           tosh	equ	0xFFE
 24491                           tosl	equ	0xFFD
 24492                           pclatu	equ	0xFFB
 24493                           pclath	equ	0xFFA
 24494                           tblptru	equ	0xFF8
 24495                           tblptrh	equ	0xFF7
 24496                           tblptrl	equ	0xFF6
 24497                           tablat	equ	0xFF5
 24498                           prodh	equ	0xFF4
 24499                           prodl	equ	0xFF3
 24500                           intcon	equ	0xFF2
 24501                           indf0	equ	0xFEF
 24502                           postinc0	equ	0xFEE
 24503                           fsr0h	equ	0xFEA
 24504                           fsr0l	equ	0xFE9
 24505                           wreg	equ	0xFE8
 24506                           indf1	equ	0xFE7
 24507                           postdec1	equ	0xFE5
 24508                           plusw1	equ	0xFE3
 24509                           fsr1h	equ	0xFE2
 24510                           fsr1l	equ	0xFE1
 24511                           bsr	equ	0xFE0
 24512                           indf2	equ	0xFDF
 24513                           postinc2	equ	0xFDE
 24514                           postdec2	equ	0xFDD
 24515                           plusw2	equ	0xFDB
 24516                           fsr2h	equ	0xFDA
 24517                           fsr2l	equ	0xFD9
 24518                           status	equ	0xFD8
 24519                           
 24520 ;; *************** function i2_printf *****************
 24521 ;; Defined at:
 24522 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 24523 ;; Parameters:    Size  Location     Type
 24524 ;;  f               2   30[BANK0 ] PTR const unsigned char 
 24525 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(36), 
 24526 ;;		 -> STR_115(33), STR_114(2023), STR_112(53), STR_110(58), 
 24527 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 24528 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 24529 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 24530 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 24531 ;;		 -> STR_81(34), STR_79(36), STR_77(37), STR_75(45), 
 24532 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 24533 ;;		 -> STR_59(54), STR_58(64), STR_56(57), STR_54(85), 
 24534 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 24535 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 24536 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 24537 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 24538 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 24539 ;; Auto vars:     Size  Location     Type
 24540 ;;  printf          4   61[BANK0 ] PTR const unsigned char 
 24541 ;;  printf          4   57[BANK0 ] unsigned long 
 24542 ;;  printf          4   53[BANK0 ] struct .
 24543 ;;  printf          2   65[BANK0 ] int 
 24544 ;;  printf          2   51[BANK0 ] int 
 24545 ;;  printf          2   49[BANK0 ] unsigned short 
 24546 ;;  printf          2   47[BANK0 ] PTR void [1]
 24547 ;;		 -> ?i2_printf(2), ?_printf(2), 
 24548 ;;  printf          2   45[BANK0 ] PTR const unsigned char 
 24549 ;;		 -> STR_133(7), printf@c(1), STR_132(16), STR_131(22), 
 24550 ;;		 -> STR_130(21), STR_129(27), STR_128(41), STR_127(32), 
 24551 ;;		 -> STR_126(19), STR_125(16), STR_124(15), STR_123(16), 
 24552 ;;		 -> STR_122(10), STR_121(13), STR_120(12), ringBufferLUT@channel_name(22), 
 24553 ;;		 -> TRIAC_Firing_Angle(4), 
 24554 ;;  printf          2   43[BANK0 ] unsigned int 
 24555 ;;  printf          2    0        int 
 24556 ;;  printf          1   67[BANK0 ] char 
 24557 ;;  printf          1   42[BANK0 ] unsigned char 
 24558 ;;  printf          1    0        unsigned char 
 24559 ;; Return value:  Size  Location     Type
 24560 ;;                  2   30[BANK0 ] int 
 24561 ;; Registers used:
 24562 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24563 ;; Tracked objects:
 24564 ;;		On entry : 0/0
 24565 ;;		On exit  : 0/0
 24566 ;;		Unchanged: 0/0
 24567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24569 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24570 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24571 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24572 ;;Total ram usage:       38 bytes
 24573 ;; Hardware stack levels used:    1
 24574 ;; Hardware stack levels required when called:    2
 24575 ;; This function calls:
 24576 ;;		i2___awdiv
 24577 ;;		i2___fladd
 24578 ;;		i2___flge
 24579 ;;		i2___flmul
 24580 ;;		i2___flneg
 24581 ;;		i2___flsub
 24582 ;;		i2___fltol
 24583 ;;		i2___lldiv
 24584 ;;		i2___llmod
 24585 ;;		i2___wmul
 24586 ;;		i2___xxtofl
 24587 ;;		i2__div_to_l_
 24588 ;;		i2__tdiv_to_l_
 24589 ;;		i2_fround
 24590 ;;		i2_isdigit
 24591 ;;		i2_putch
 24592 ;;		i2_scale
 24593 ;; This function is called by:
 24594 ;;		_EUSART2_Receive_ISR
 24595 ;; This function uses a non-reentrant model
 24596 ;;
 24597                           
 24598                           	psect	text85
 24599  0117CA                     __ptext85:
 24600                           	opt stack 0
 24601  0117CA                     i2_printf:
 24602                           	opt stack 15
 24603                           
 24604                           ;doprnt.c: 466: va_list ap;
 24605                           ;doprnt.c: 499: signed char c;
 24606                           ;doprnt.c: 501: int width;
 24607                           ;doprnt.c: 504: int prec;
 24608                           ;doprnt.c: 508: unsigned short flag;
 24609                           ;doprnt.c: 515: char d;
 24610                           ;doprnt.c: 516: double fval;
 24611                           ;doprnt.c: 517: int exp;
 24612                           ;doprnt.c: 523: union {
 24613                           ;doprnt.c: 524: unsigned long vd;
 24614                           ;doprnt.c: 525: double integ;
 24615                           ;doprnt.c: 526: } tmpval;
 24616                           ;doprnt.c: 528: unsigned long val;
 24617                           ;doprnt.c: 529: unsigned len;
 24618                           ;doprnt.c: 530: const char * cp;
 24619                           ;doprnt.c: 533: *ap = __va_start();
 24620                           
 24621                           ; BSR set to: 14
 24622                           ;incstack = 0
 24623  0117CA  0E80               	movlw	low (?i2_printf+2)
 24624  0117CC  0100               	movlb	0	; () banked
 24625  0117CE  6F8F               	movwf	i2printf@ap& (0+255),b
 24626  0117D0  0E00               	movlw	high (?i2_printf+2)
 24627  0117D2  6F90               	movwf	(i2printf@ap+1)& (0+255),b
 24628                           
 24629                           ;doprnt.c: 536: while(c = *f++) {
 24630  0117D4  EF56  F091         	goto	i2u1653_40
 24631  0117D8                     
 24632                           ; BSR set to: 0
 24633                           ;doprnt.c: 538: if(c != '%')
 24634                           
 24635                           ; BSR set to: 0
 24636  0117D8  0E25               	movlw	37
 24637  0117DA  19A3               	xorwf	i2printf@c& (0+255),w,b
 24638  0117DC  B4D8               	btfsc	status,2,c
 24639  0117DE  D005               	goto	i2l1352
 24640                           
 24641                           ; BSR set to: 0
 24642                           ;doprnt.c: 540: {
 24643                           ;doprnt.c: 541: (putch(c) );
 24644  0117E0  51A3               	movf	i2printf@c& (0+255),w,b
 24645  0117E2  ECAA  F0C0         	call	i2_putch
 24646                           
 24647                           ;doprnt.c: 542: continue;
 24648  0117E6  EF56  F091         	goto	i2u1653_40
 24649  0117EA                     i2l1352:
 24650                           
 24651                           ;doprnt.c: 543: }
 24652                           ;doprnt.c: 548: flag = 0;
 24653  0117EA  0E00               	movlw	0
 24654  0117EC  0100               	movlb	0	; () banked
 24655  0117EE  6F92               	movwf	(i2printf@flag+1)& (0+255),b
 24656  0117F0  0E00               	movlw	0
 24657  0117F2  6F91               	movwf	i2printf@flag& (0+255),b
 24658                           
 24659                           ; BSR set to: 0
 24660                           ;doprnt.c: 611: if(*f == '.') {
 24661  0117F4  C07E  FFF6         	movff	i2printf@f,tblptrl
 24662  0117F8  C07F  FFF7         	movff	i2printf@f+1,tblptrh
 24663  0117FC  0E00               	movlw	low (__mediumconst shr (0+16))
 24664  0117FE  6EF8               	movwf	tblptru,c
 24665  011800  0E0D               	movlw	(high __ramtop+-1)
 24666  011802  64F7               	cpfsgt	tblptrh,c
 24667  011804  D003               	bra	i2u1604_47
 24668  011806  0008               	tblrd		*
 24669  011808  50F5               	movf	tablat,w,c
 24670  01180A  D005               	bra	i2u1604_40
 24671  01180C                     i2u1604_47:
 24672  01180C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24673  011810  CFF7 FFEA          	movff	tblptrh,fsr0h
 24674  011814  50EF               	movf	indf0,w,c
 24675  011816                     i2u1604_40:
 24676  011816  0A2E               	xorlw	46
 24677  011818  A4D8               	btfss	status,2,c
 24678  01181A  D048               	goto	i2l1353
 24679                           
 24680                           ;doprnt.c: 612: flag |= 0x4000;
 24681  01181C  0100               	movlb	0	; () banked
 24682  01181E  8D92               	bsf	(i2printf@flag+1)& (0+255),6,b
 24683                           
 24684                           ;doprnt.c: 613: f++;
 24685  011820  4B7E               	infsnz	i2printf@f& (0+255),f,b
 24686  011822  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 24687                           
 24688                           ; BSR set to: 0
 24689                           ;doprnt.c: 620: {
 24690                           ;doprnt.c: 621: prec = 0;
 24691  011824  0E00               	movlw	0
 24692  011826  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 24693  011828  0E00               	movlw	0
 24694  01182A  6FA1               	movwf	i2printf@prec& (0+255),b
 24695                           
 24696                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 24697  01182C  D029               	goto	i2l1354
 24698  01182E                     
 24699                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 24700                           
 24701                           ; BSR set to: 0
 24702  01182E  C0A1  F001         	movff	i2printf@prec,i2___wmul@multiplier
 24703  011832  C0A2  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 24704  011836  0E00               	movlw	0
 24705  011838  6E04               	movwf	i2___wmul@multiplicand+1,c
 24706  01183A  0E0A               	movlw	10
 24707  01183C  6E03               	movwf	i2___wmul@multiplicand,c
 24708  01183E  ECA3  F0BF         	call	i2___wmul	;wreg free
 24709  011842  C07E  FFF6         	movff	i2printf@f,tblptrl
 24710  011846  C07F  FFF7         	movff	i2printf@f+1,tblptrh
 24711  01184A  0E00               	movlw	low (__mediumconst shr (0+16))
 24712  01184C  6EF8               	movwf	tblptru,c
 24713  01184E  0E0D               	movlw	(high __ramtop+-1)
 24714  011850  64F7               	cpfsgt	tblptrh,c
 24715  011852  D003               	bra	i2u1606_47
 24716  011854  0008               	tblrd		*
 24717  011856  50F5               	movf	tablat,w,c
 24718  011858  D005               	bra	i2u1606_40
 24719  01185A                     i2u1606_47:
 24720  01185A  CFF6 FFE9          	movff	tblptrl,fsr0l
 24721  01185E  CFF7 FFEA          	movff	tblptrh,fsr0h
 24722  011862  50EF               	movf	indf0,w,c
 24723  011864                     i2u1606_40:
 24724  011864  0100               	movlb	0	; () banked
 24725  011866  6F80               	movwf	??i2_printf& (0+255),b
 24726  011868  5180               	movf	??i2_printf& (0+255),w,b
 24727  01186A  2601               	addwf	?i2___wmul,f,c
 24728  01186C  0E00               	movlw	0
 24729  01186E  2202               	addwfc	?i2___wmul+1,f,c
 24730  011870  0ED0               	movlw	208
 24731  011872  2401               	addwf	?i2___wmul,w,c
 24732  011874  6FA1               	movwf	i2printf@prec& (0+255),b
 24733  011876  0EFF               	movlw	255
 24734  011878  2002               	addwfc	?i2___wmul+1,w,c
 24735  01187A  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 24736                           
 24737                           ; BSR set to: 0
 24738  01187C  4B7E               	infsnz	i2printf@f& (0+255),f,b
 24739  01187E  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 24740  011880                     i2l1354:
 24741                           
 24742                           ; BSR set to: 0
 24743                           
 24744                           ; BSR set to: 0
 24745  011880  C07E  FFF6         	movff	i2printf@f,tblptrl
 24746  011884  C07F  FFF7         	movff	i2printf@f+1,tblptrh
 24747  011888  0E00               	movlw	low (__mediumconst shr (0+16))
 24748  01188A  6EF8               	movwf	tblptru,c
 24749  01188C  0E0D               	movlw	(high __ramtop+-1)
 24750  01188E  64F7               	cpfsgt	tblptrh,c
 24751  011890  D003               	bra	i2u1607_47
 24752  011892  0008               	tblrd		*
 24753  011894  50F5               	movf	tablat,w,c
 24754  011896  D005               	bra	i2u1607_40
 24755  011898                     i2u1607_47:
 24756  011898  CFF6 FFE9          	movff	tblptrl,fsr0l
 24757  01189C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24758  0118A0  50EF               	movf	indf0,w,c
 24759  0118A2                     i2u1607_40:
 24760  0118A2  ECE9  F0BF         	call	i2_isdigit
 24761  0118A6  A0D8               	btfss	status,0,c
 24762  0118A8  D088               	goto	i2l1358
 24763  0118AA  D7C1               	goto	i2l1355
 24764  0118AC                     i2l1353:
 24765                           
 24766                           ;doprnt.c: 626: prec = 0;
 24767  0118AC  0E00               	movlw	0
 24768  0118AE  0100               	movlb	0	; () banked
 24769  0118B0  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 24770  0118B2  0E00               	movlw	0
 24771  0118B4  6FA1               	movwf	i2printf@prec& (0+255),b
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;doprnt.c: 628: flag |= 0x1000;
 24775  0118B6  8992               	bsf	(i2printf@flag+1)& (0+255),4,b
 24776                           
 24777                           ; BSR set to: 0
 24778                           ;doprnt.c: 630: }
 24779                           ;doprnt.c: 635: switch(c = *f++) {
 24780  0118B8  D080               	goto	i2l1358
 24781  0118BA                     
 24782                           ; BSR set to: 0
 24783                           ;doprnt.c: 663: flag |= 0x400;
 24784                           
 24785                           ; BSR set to: 0
 24786  0118BA  8592               	bsf	(i2printf@flag+1)& (0+255),2,b
 24787                           
 24788                           ; BSR set to: 0
 24789                           ;doprnt.c: 698: case 'i':
 24790                           ;doprnt.c: 699: break;
 24791                           
 24792                           ; BSR set to: 0
 24793                           
 24794                           ;doprnt.c: 697: case 'd':
 24795                           
 24796                           ;doprnt.c: 664: break;
 24797  0118BC  D0B5               	goto	i2l1362
 24798  0118BE                     
 24799                           ; BSR set to: 0
 24800                           ;doprnt.c: 718: case 'x':
 24801                           ;doprnt.c: 721: flag |= 0x80;
 24802                           
 24803                           ; BSR set to: 0
 24804                           
 24805                           ; BSR set to: 0
 24806  0118BE  8F91               	bsf	i2printf@flag& (0+255),7,b
 24807                           
 24808                           ;doprnt.c: 723: break;
 24809  0118C0  D0B3               	goto	i2l1362
 24810  0118C2                     
 24811                           ; BSR set to: 0
 24812                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24813                           
 24814                           ; BSR set to: 0
 24815  0118C2  C08F  FFD9         	movff	i2printf@ap,fsr2l
 24816  0118C6  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 24817  0118CA  CFDE F08D          	movff	postinc2,i2printf@cp
 24818  0118CE  CFDD F08E          	movff	postdec2,i2printf@cp+1
 24819                           
 24820                           ; BSR set to: 0
 24821  0118D2  0E02               	movlw	2
 24822  0118D4  278F               	addwf	i2printf@ap& (0+255),f,b
 24823  0118D6  0E00               	movlw	0
 24824  0118D8  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24825                           
 24826                           ; BSR set to: 0
 24827                           ;doprnt.c: 740: if(!cp)
 24828  0118DA  518D               	movf	i2printf@cp& (0+255),w,b
 24829  0118DC  118E               	iorwf	(i2printf@cp+1)& (0+255),w,b
 24830  0118DE  A4D8               	btfss	status,2,c
 24831  0118E0  D004               	goto	i2l1368
 24832                           
 24833                           ; BSR set to: 0
 24834                           ;doprnt.c: 741: cp = "(null)";
 24835  0118E2  0E86               	movlw	low STR_133
 24836  0118E4  6F8D               	movwf	i2printf@cp& (0+255),b
 24837  0118E6  0EFF               	movlw	high STR_133
 24838  0118E8  6F8E               	movwf	(i2printf@cp+1)& (0+255),b
 24839  0118EA                     i2l1368:
 24840                           
 24841                           ; BSR set to: 0
 24842                           ;doprnt.c: 745: len = 0;
 24843                           
 24844                           ; BSR set to: 0
 24845  0118EA  0E00               	movlw	0
 24846  0118EC  6F8C               	movwf	(i2printf@len+1)& (0+255),b
 24847  0118EE  0E00               	movlw	0
 24848  0118F0  6F8B               	movwf	i2printf@len& (0+255),b
 24849                           
 24850                           ;doprnt.c: 746: while(cp[len])
 24851  0118F2  D003               	goto	i2l1369
 24852  0118F4                     
 24853                           ;doprnt.c: 747: len++;
 24854                           
 24855                           ; BSR set to: 0
 24856  0118F4  0100               	movlb	0	; () banked
 24857  0118F6  4B8B               	infsnz	i2printf@len& (0+255),f,b
 24858  0118F8  2B8C               	incf	(i2printf@len+1)& (0+255),f,b
 24859  0118FA                     i2l1369:
 24860                           
 24861                           ; BSR set to: 0
 24862                           
 24863                           ; BSR set to: 0
 24864  0118FA  518B               	movf	i2printf@len& (0+255),w,b
 24865  0118FC  258D               	addwf	i2printf@cp& (0+255),w,b
 24866  0118FE  6F80               	movwf	??i2_printf& (0+255),b
 24867  011900  518C               	movf	(i2printf@len+1)& (0+255),w,b
 24868  011902  218E               	addwfc	(i2printf@cp+1)& (0+255),w,b
 24869  011904  6F81               	movwf	(??i2_printf+1)& (0+255),b
 24870  011906  C080  FFF6         	movff	??i2_printf,tblptrl
 24871  01190A  C081  FFF7         	movff	??i2_printf+1,tblptrh
 24872  01190E  0E00               	movlw	low (__mediumconst shr (0+16))
 24873  011910  6EF8               	movwf	tblptru,c
 24874  011912  0E0D               	movlw	(high __ramtop+-1)
 24875  011914  64F7               	cpfsgt	tblptrh,c
 24876  011916  D003               	bra	i2u1610_47
 24877  011918  0008               	tblrd		*
 24878  01191A  50F5               	movf	tablat,w,c
 24879  01191C  D005               	bra	i2u1610_40
 24880  01191E                     i2u1610_47:
 24881  01191E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24882  011922  CFF7 FFEA          	movff	tblptrh,fsr0h
 24883  011926  50EF               	movf	indf0,w,c
 24884  011928                     i2u1610_40:
 24885  011928  0900               	iorlw	0
 24886  01192A  A4D8               	btfss	status,2,c
 24887  01192C  D7E3               	goto	i2l1370
 24888  01192E                     i2u1611_40:
 24889                           
 24890                           ;doprnt.c: 753: if(prec && prec < len)
 24891                           
 24892                           ;doprnt.c: 750: dostring:
 24893  01192E  0100               	movlb	0	; () banked
 24894  011930  51A1               	movf	i2printf@prec& (0+255),w,b
 24895  011932  11A2               	iorwf	(i2printf@prec+1)& (0+255),w,b
 24896  011934  B4D8               	btfsc	status,2,c
 24897  011936  D021               	goto	i2l1374
 24898                           
 24899                           ; BSR set to: 0
 24900  011938  518B               	movf	i2printf@len& (0+255),w,b
 24901  01193A  5DA1               	subwf	i2printf@prec& (0+255),w,b
 24902  01193C  518C               	movf	(i2printf@len+1)& (0+255),w,b
 24903  01193E  59A2               	subwfb	(i2printf@prec+1)& (0+255),w,b
 24904  011940  B0D8               	btfsc	status,0,c
 24905  011942  D01B               	goto	i2l1374
 24906                           
 24907                           ; BSR set to: 0
 24908                           ;doprnt.c: 754: len = prec;
 24909  011944  C0A1  F08B         	movff	i2printf@prec,i2printf@len
 24910  011948  C0A2  F08C         	movff	i2printf@prec+1,i2printf@len+1
 24911                           
 24912                           ; BSR set to: 0
 24913                           ;doprnt.c: 767: while(len--)
 24914  01194C  D016               	goto	i2l1374
 24915  01194E                     i2l13450:
 24916                           
 24917                           ; BSR set to: 0
 24918                           ;doprnt.c: 768: (putch(*cp++) );
 24919  01194E  C08D  FFF6         	movff	i2printf@cp,tblptrl
 24920  011952  C08E  FFF7         	movff	i2printf@cp+1,tblptrh
 24921  011956  0E00               	movlw	low (__mediumconst shr (0+16))
 24922  011958  6EF8               	movwf	tblptru,c
 24923  01195A  0E0D               	movlw	(high __ramtop+-1)
 24924  01195C  64F7               	cpfsgt	tblptrh,c
 24925  01195E  D003               	bra	i2u1614_47
 24926  011960  0008               	tblrd		*
 24927  011962  50F5               	movf	tablat,w,c
 24928  011964  D005               	bra	i2u1614_40
 24929  011966                     i2u1614_47:
 24930  011966  CFF6 FFE9          	movff	tblptrl,fsr0l
 24931  01196A  CFF7 FFEA          	movff	tblptrh,fsr0h
 24932  01196E  50EF               	movf	indf0,w,c
 24933  011970                     i2u1614_40:
 24934  011970  ECAA  F0C0         	call	i2_putch
 24935  011974  0100               	movlb	0	; () banked
 24936  011976  4B8D               	infsnz	i2printf@cp& (0+255),f,b
 24937  011978  2B8E               	incf	(i2printf@cp+1)& (0+255),f,b
 24938  01197A                     i2l1374:
 24939                           
 24940                           ; BSR set to: 0
 24941                           
 24942                           ; BSR set to: 0
 24943  01197A  078B               	decf	i2printf@len& (0+255),f,b
 24944  01197C  A0D8               	btfss	status,0,c
 24945  01197E  078C               	decf	(i2printf@len+1)& (0+255),f,b
 24946  011980  298B               	incf	i2printf@len& (0+255),w,b
 24947  011982  E1E5               	bnz	i2l13450
 24948  011984  298C               	incf	(i2printf@len+1)& (0+255),w,b
 24949  011986  B4D8               	btfsc	status,2,c
 24950  011988  EF56  F091         	goto	i2u1653_40
 24951  01198C  D7E0               	goto	i2l1375
 24952  01198E                     
 24953                           ; BSR set to: 0
 24954                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24955                           
 24956                           ; BSR set to: 0
 24957  01198E  C08F  FFD9         	movff	i2printf@ap,fsr2l
 24958  011992  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 24959  011996  50DF               	movf	indf2,w,c
 24960  011998  6FA3               	movwf	i2printf@c& (0+255),b
 24961                           
 24962                           ; BSR set to: 0
 24963  01199A  0E02               	movlw	2
 24964  01199C  278F               	addwf	i2printf@ap& (0+255),f,b
 24965  01199E  0E00               	movlw	0
 24966  0119A0  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24967  0119A2                     
 24968                           ; BSR set to: 0
 24969                           ;doprnt.c: 805: cp = (char *)&c;
 24970                           
 24971                           ; BSR set to: 0
 24972  0119A2  0EA3               	movlw	low i2printf@c
 24973  0119A4  6F8D               	movwf	i2printf@cp& (0+255),b
 24974  0119A6  0E00               	movlw	high i2printf@c
 24975  0119A8  6F8E               	movwf	(i2printf@cp+1)& (0+255),b
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;doprnt.c: 806: len = 1;
 24979  0119AA  0E00               	movlw	0
 24980  0119AC  6F8C               	movwf	(i2printf@len+1)& (0+255),b
 24981  0119AE  0E01               	movlw	1
 24982  0119B0  6F8B               	movwf	i2printf@len& (0+255),b
 24983                           
 24984                           ;doprnt.c: 807: goto dostring;
 24985  0119B2  D7BD               	goto	i2u1611_40
 24986  0119B4                     
 24987                           ; BSR set to: 0
 24988                           ;doprnt.c: 818: flag |= 0xC0;
 24989                           
 24990                           ; BSR set to: 0
 24991  0119B4  0EC0               	movlw	192
 24992  0119B6  1391               	iorwf	i2printf@flag& (0+255),f,b
 24993                           
 24994                           ; BSR set to: 0
 24995                           ;doprnt.c: 822: }
 24996                           
 24997                           ;doprnt.c: 819: break;
 24998  0119B8  D037               	goto	i2l1362
 24999  0119BA                     i2l1358:
 25000                           
 25001                           ; BSR set to: 0
 25002  0119BA  0100               	movlb	0	; () banked
 25003  0119BC  517E               	movf	i2printf@f& (0+255),w,b
 25004  0119BE  6F80               	movwf	??i2_printf& (0+255),b
 25005  0119C0  517F               	movf	(i2printf@f+1)& (0+255),w,b
 25006  0119C2  6F81               	movwf	(??i2_printf+1)& (0+255),b
 25007  0119C4  4B7E               	infsnz	i2printf@f& (0+255),f,b
 25008  0119C6  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 25009  0119C8  C080  FFF6         	movff	??i2_printf,tblptrl
 25010  0119CC  C081  FFF7         	movff	??i2_printf+1,tblptrh
 25011  0119D0  0E00               	movlw	low (__mediumconst shr (0+16))
 25012  0119D2  6EF8               	movwf	tblptru,c
 25013  0119D4  0E0D               	movlw	(high __ramtop+-1)
 25014  0119D6  64F7               	cpfsgt	tblptrh,c
 25015  0119D8  D003               	bra	i2u1616_47
 25016  0119DA  0008               	tblrd		*
 25017  0119DC  50F5               	movf	tablat,w,c
 25018  0119DE  D005               	bra	i2u1616_40
 25019  0119E0                     i2u1616_47:
 25020  0119E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 25021  0119E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 25022  0119E8  50EF               	movf	indf0,w,c
 25023  0119EA                     i2u1616_40:
 25024  0119EA  0100               	movlb	0	; () banked
 25025  0119EC  6FA3               	movwf	i2printf@c& (0+255),b
 25026  0119EE  51A3               	movf	i2printf@c& (0+255),w,b
 25027                           
 25028                           ; Switch size 1, requested type "space"
 25029                           ; Number of cases is 9, Range of values is 0 to 120
 25030                           ; switch strategies available:
 25031                           ; Name         Instructions Cycles
 25032                           ; simple_byte           28    15 (average)
 25033                           ;	Chosen strategy is simple_byte
 25034  0119F0  0A00               	xorlw	0	; case 0
 25035  0119F2  B4D8               	btfsc	status,2,c
 25036  0119F4  0012               	return	
 25037  0119F6  0A58               	xorlw	88	; case 88
 25038  0119F8  B4D8               	btfsc	status,2,c
 25039  0119FA  D761               	goto	i2l1365
 25040  0119FC  0A3B               	xorlw	59	; case 99
 25041  0119FE  B4D8               	btfsc	status,2,c
 25042  011A00  D7C6               	goto	i2l1377
 25043  011A02  0A07               	xorlw	7	; case 100
 25044  011A04  B4D8               	btfsc	status,2,c
 25045  011A06  D010               	goto	i2l1362
 25046  011A08  0A02               	xorlw	2	; case 102
 25047  011A0A  B4D8               	btfsc	status,2,c
 25048  011A0C  D756               	goto	i2l1361
 25049  011A0E  0A0F               	xorlw	15	; case 105
 25050  011A10  B4D8               	btfsc	status,2,c
 25051  011A12  D00A               	goto	i2l1362
 25052  011A14  0A1A               	xorlw	26	; case 115
 25053  011A16  B4D8               	btfsc	status,2,c
 25054  011A18  D754               	goto	i2l1367
 25055  011A1A  0A06               	xorlw	6	; case 117
 25056  011A1C  B4D8               	btfsc	status,2,c
 25057  011A1E  D7CA               	goto	i2l1379
 25058  011A20  0A0D               	xorlw	13	; case 120
 25059  011A22  B4D8               	btfsc	status,2,c
 25060  011A24  D74C               	goto	i2l1365
 25061  011A26  D7BD               	goto	i2l1378
 25062  011A28                     i2l1362:
 25063                           
 25064                           ; BSR set to: 0
 25065                           ;doprnt.c: 825: if(flag & (0x700)) {
 25066                           
 25067                           ; BSR set to: 0
 25068  011A28  0E07               	movlw	7
 25069  011A2A  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 25070  011A2C  B4D8               	btfsc	status,2,c
 25071  011A2E  D2E9               	goto	i2l1380
 25072                           
 25073                           ; BSR set to: 0
 25074                           ;doprnt.c: 827: if(flag & 0x1000)
 25075  011A30  A992               	btfss	(i2printf@flag+1)& (0+255),4,b
 25076  011A32  D004               	goto	i2l1381
 25077                           
 25078                           ; BSR set to: 0
 25079                           ;doprnt.c: 829: prec = 6;
 25080  011A34  0E00               	movlw	0
 25081  011A36  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 25082  011A38  0E06               	movlw	6
 25083  011A3A  6FA1               	movwf	i2printf@prec& (0+255),b
 25084  011A3C                     i2l1381:
 25085                           
 25086                           ; BSR set to: 0
 25087                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25088                           
 25089                           ; BSR set to: 0
 25090  011A3C  C08F  FFD9         	movff	i2printf@ap,fsr2l
 25091  011A40  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 25092  011A44  CFDE F09D          	movff	postinc2,i2printf@fval
 25093  011A48  CFDE F09E          	movff	postinc2,i2printf@fval+1
 25094  011A4C  CFDE F09F          	movff	postinc2,i2printf@fval+2
 25095  011A50  CFDE F0A0          	movff	postinc2,i2printf@fval+3
 25096                           
 25097                           ; BSR set to: 0
 25098  011A54  0E04               	movlw	4
 25099  011A56  278F               	addwf	i2printf@ap& (0+255),f,b
 25100  011A58  0E00               	movlw	0
 25101  011A5A  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25102                           
 25103                           ; BSR set to: 0
 25104                           ;doprnt.c: 831: if(fval < 0.0) {
 25105  011A5C  AFA0               	btfss	(i2printf@fval+3)& (0+255),7,b
 25106  011A5E  D015               	goto	i2l1382
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;doprnt.c: 832: fval = -fval;
 25110  011A60  C09D  F02C         	movff	i2printf@fval,i2___flneg@f1
 25111  011A64  C09E  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 25112  011A68  C09F  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 25113  011A6C  C0A0  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 25114  011A70  EC2A  F0BF         	call	i2___flneg	;wreg free
 25115  011A74  C02C  F09D         	movff	?i2___flneg,i2printf@fval
 25116  011A78  C02D  F09E         	movff	?i2___flneg+1,i2printf@fval+1
 25117  011A7C  C02E  F09F         	movff	?i2___flneg+2,i2printf@fval+2
 25118  011A80  C02F  F0A0         	movff	?i2___flneg+3,i2printf@fval+3
 25119                           
 25120                           ;doprnt.c: 833: flag |= 0x03;
 25121  011A84  0E03               	movlw	3
 25122  011A86  0100               	movlb	0	; () banked
 25123  011A88  1391               	iorwf	i2printf@flag& (0+255),f,b
 25124  011A8A                     i2l1382:
 25125                           
 25126                           ; BSR set to: 0
 25127                           ;doprnt.c: 834: }
 25128                           ;doprnt.c: 835: exp = 0;
 25129                           
 25130                           ; BSR set to: 0
 25131  011A8A  0E00               	movlw	0
 25132  011A8C  6F94               	movwf	(i2printf@exp+1)& (0+255),b
 25133  011A8E  0E00               	movlw	0
 25134  011A90  6F93               	movwf	i2printf@exp& (0+255),b
 25135                           
 25136                           ; BSR set to: 0
 25137                           ;doprnt.c: 836: if( fval!=0) {
 25138  011A92  519D               	movf	i2printf@fval& (0+255),w,b
 25139  011A94  119E               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25140  011A96  119F               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25141  011A98  11A0               	iorwf	(i2printf@fval+3)& (0+255),w,b
 25142  011A9A  B4D8               	btfsc	status,2,c
 25143  011A9C  D082               	goto	i2l1387
 25144                           
 25145                           ; BSR set to: 0
 25146                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 25147  011A9E  359F               	rlcf	(i2printf@fval+2)& (0+255),w,b
 25148  011AA0  35A0               	rlcf	(i2printf@fval+3)& (0+255),w,b
 25149  011AA2  0F82               	addlw	130
 25150  011AA4  6F93               	movwf	i2printf@exp& (0+255),b
 25151  011AA6  6B94               	clrf	(i2printf@exp+1)& (0+255),b
 25152  011AA8  0EFF               	movlw	255
 25153  011AAA  2394               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25154                           
 25155                           ; BSR set to: 0
 25156                           ;doprnt.c: 838: exp--;
 25157  011AAC  0793               	decf	i2printf@exp& (0+255),f,b
 25158  011AAE  A0D8               	btfss	status,0,c
 25159  011AB0  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25160                           
 25161                           ; BSR set to: 0
 25162                           ;doprnt.c: 839: exp *= 3;
 25163  011AB2  C093  F001         	movff	i2printf@exp,i2___wmul@multiplier
 25164  011AB6  C094  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 25165  011ABA  0E00               	movlw	0
 25166  011ABC  6E04               	movwf	i2___wmul@multiplicand+1,c
 25167  011ABE  0E03               	movlw	3
 25168  011AC0  6E03               	movwf	i2___wmul@multiplicand,c
 25169  011AC2  ECA3  F0BF         	call	i2___wmul	;wreg free
 25170  011AC6  C001  F093         	movff	?i2___wmul,i2printf@exp
 25171  011ACA  C002  F094         	movff	?i2___wmul+1,i2printf@exp+1
 25172                           
 25173                           ;doprnt.c: 840: exp /= 10;
 25174  011ACE  C093  F007         	movff	i2printf@exp,i2___awdiv@dividend
 25175  011AD2  C094  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 25176  011AD6  0E00               	movlw	0
 25177  011AD8  6E0A               	movwf	i2___awdiv@divisor+1,c
 25178  011ADA  0E0A               	movlw	10
 25179  011ADC  6E09               	movwf	i2___awdiv@divisor,c
 25180  011ADE  ECA4  F0B8         	call	i2___awdiv	;wreg free
 25181  011AE2  C007  F093         	movff	?i2___awdiv,i2printf@exp
 25182  011AE6  C008  F094         	movff	?i2___awdiv+1,i2printf@exp+1
 25183                           
 25184                           ;doprnt.c: 841: if(exp < 0)
 25185  011AEA  0100               	movlb	0	; () banked
 25186  011AEC  AF94               	btfss	(i2printf@exp+1)& (0+255),7,b
 25187  011AEE  D003               	goto	i2l1384
 25188                           
 25189                           ; BSR set to: 0
 25190                           ;doprnt.c: 842: exp--;
 25191  011AF0  0793               	decf	i2printf@exp& (0+255),f,b
 25192  011AF2  A0D8               	btfss	status,0,c
 25193  011AF4  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25194  011AF6                     i2l1384:
 25195                           
 25196                           ; BSR set to: 0
 25197                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25198                           
 25199                           ; BSR set to: 0
 25200  011AF6  5193               	movf	i2printf@exp& (0+255),w,b
 25201  011AF8  0800               	sublw	0
 25202  011AFA  ECDE  F097         	call	i2_scale
 25203  011AFE  C049  F095         	movff	?i2_scale,i2printf@tmpval
 25204  011B02  C04A  F096         	movff	?i2_scale+1,i2printf@tmpval+1
 25205  011B06  C04B  F097         	movff	?i2_scale+2,i2printf@tmpval+2
 25206  011B0A  C04C  F098         	movff	?i2_scale+3,i2printf@tmpval+3
 25207                           
 25208                           ;doprnt.c: 847: tmpval.integ *= fval;
 25209  011B0E  C095  F030         	movff	i2printf@tmpval,i2___flmul@b
 25210  011B12  C096  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 25211  011B16  C097  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 25212  011B1A  C098  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 25213  011B1E  C09D  F034         	movff	i2printf@fval,i2___flmul@a
 25214  011B22  C09E  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 25215  011B26  C09F  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 25216  011B2A  C0A0  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 25217  011B2E  EC7B  F09D         	call	i2___flmul	;wreg free
 25218  011B32  C030  F095         	movff	?i2___flmul,i2printf@tmpval
 25219  011B36  C031  F096         	movff	?i2___flmul+1,i2printf@tmpval+1
 25220  011B3A  C032  F097         	movff	?i2___flmul+2,i2printf@tmpval+2
 25221  011B3E  C033  F098         	movff	?i2___flmul+3,i2printf@tmpval+3
 25222                           
 25223                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25224  011B42  C095  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25225  011B46  C096  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25226  011B4A  C097  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25227  011B4E  C098  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25228  011B52  0E00               	movlw	0
 25229  011B54  6E38               	movwf	i2___flge@ff2,c
 25230  011B56  0E00               	movlw	0
 25231  011B58  6E39               	movwf	i2___flge@ff2+1,c
 25232  011B5A  0E80               	movlw	128
 25233  011B5C  6E3A               	movwf	i2___flge@ff2+2,c
 25234  011B5E  0E3F               	movlw	63
 25235  011B60  6E3B               	movwf	i2___flge@ff2+3,c
 25236  011B62  ECB2  F0B2         	call	i2___flge	;wreg free
 25237  011B66  B0D8               	btfsc	status,0,c
 25238  011B68  D005               	goto	i2l1385
 25239                           
 25240                           ;doprnt.c: 849: exp--;
 25241  011B6A  0100               	movlb	0	; () banked
 25242  011B6C  0793               	decf	i2printf@exp& (0+255),f,b
 25243  011B6E  A0D8               	btfss	status,0,c
 25244  011B70  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25245  011B72  D017               	goto	i2l1387
 25246  011B74                     i2l1385:
 25247                           
 25248                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25249                           
 25250                           ; BSR set to: 0
 25251  011B74  C095  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25252  011B78  C096  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25253  011B7C  C097  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25254  011B80  C098  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25255  011B84  0E00               	movlw	0
 25256  011B86  6E38               	movwf	i2___flge@ff2,c
 25257  011B88  0E00               	movlw	0
 25258  011B8A  6E39               	movwf	i2___flge@ff2+1,c
 25259  011B8C  0E20               	movlw	32
 25260  011B8E  6E3A               	movwf	i2___flge@ff2+2,c
 25261  011B90  0E41               	movlw	65
 25262  011B92  6E3B               	movwf	i2___flge@ff2+3,c
 25263  011B94  ECB2  F0B2         	call	i2___flge	;wreg free
 25264  011B98  A0D8               	btfss	status,0,c
 25265  011B9A  D003               	goto	i2l1387
 25266                           
 25267                           ;doprnt.c: 851: exp++;
 25268  011B9C  0100               	movlb	0	; () banked
 25269  011B9E  4B93               	infsnz	i2printf@exp& (0+255),f,b
 25270  011BA0  2B94               	incf	(i2printf@exp+1)& (0+255),f,b
 25271  011BA2                     i2l1387:
 25272                           
 25273                           ;doprnt.c: 852: }
 25274                           ;doprnt.c: 1112: if(prec <= 12)
 25275                           
 25276                           ; BSR set to: 0
 25277                           
 25278                           ; BSR set to: 0
 25279                           
 25280                           ; BSR set to: 0
 25281  011BA2  0100               	movlb	0	; () banked
 25282  011BA4  BFA2               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25283  011BA6  D006               	goto	i2u1624_40
 25284  011BA8  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 25285  011BAA  E121               	bnz	i2l13518
 25286  011BAC  0E0D               	movlw	13
 25287  011BAE  5DA1               	subwf	i2printf@prec& (0+255),w,b
 25288  011BB0  B0D8               	btfsc	status,0,c
 25289  011BB2  D01D               	goto	i2l1388
 25290  011BB4                     i2u1624_40:
 25291                           
 25292                           ; BSR set to: 0
 25293                           ;doprnt.c: 1113: fval += fround(prec);
 25294  011BB4  C09D  F056         	movff	i2printf@fval,i2___fladd@b
 25295  011BB8  C09E  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 25296  011BBC  C09F  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 25297  011BC0  C0A0  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 25298  011BC4  51A1               	movf	i2printf@prec& (0+255),w,b
 25299  011BC6  ECDC  F0AA         	call	i2_fround
 25300  011BCA  C049  F05A         	movff	?i2_fround,i2___fladd@a
 25301  011BCE  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 25302  011BD2  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 25303  011BD6  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 25304  011BDA  ECC2  F0A0         	call	i2___fladd	;wreg free
 25305  011BDE  C056  F09D         	movff	?i2___fladd,i2printf@fval
 25306  011BE2  C057  F09E         	movff	?i2___fladd+1,i2printf@fval+1
 25307  011BE6  C058  F09F         	movff	?i2___fladd+2,i2printf@fval+2
 25308  011BEA  C059  F0A0         	movff	?i2___fladd+3,i2printf@fval+3
 25309  011BEE                     i2l1388:
 25310  011BEE                     i2l13518:
 25311                           
 25312                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25313  011BEE  0100               	movlb	0	; () banked
 25314  011BF0  BF94               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25315  011BF2  D006               	goto	i2u1625_40
 25316  011BF4  5194               	movf	(i2printf@exp+1)& (0+255),w,b
 25317  011BF6  E123               	bnz	i2l13526
 25318  011BF8  0E0A               	movlw	10
 25319  011BFA  5D93               	subwf	i2printf@exp& (0+255),w,b
 25320  011BFC  B0D8               	btfsc	status,0,c
 25321  011BFE  D01F               	goto	i2u1628_40
 25322  011C00                     i2u1625_40:
 25323                           
 25324                           ; BSR set to: 0
 25325  011C00  519D               	movf	i2printf@fval& (0+255),w,b
 25326  011C02  119E               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25327  011C04  119F               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25328  011C06  11A0               	iorwf	(i2printf@fval+3)& (0+255),w,b
 25329  011C08  B4D8               	btfsc	status,2,c
 25330  011C0A  D064               	goto	i2l1389
 25331                           
 25332                           ; BSR set to: 0
 25333  011C0C  C09D  F049         	movff	i2printf@fval,i2___fltol@f1
 25334  011C10  C09E  F04A         	movff	i2printf@fval+1,i2___fltol@f1+1
 25335  011C14  C09F  F04B         	movff	i2printf@fval+2,i2___fltol@f1+2
 25336  011C18  C0A0  F04C         	movff	i2printf@fval+3,i2___fltol@f1+3
 25337  011C1C  EC48  F0B5         	call	i2___fltol	;wreg free
 25338  011C20  5049               	movf	?i2___fltol,w,c
 25339  011C22  104A               	iorwf	?i2___fltol+1,w,c
 25340  011C24  104B               	iorwf	?i2___fltol+2,w,c
 25341  011C26  104C               	iorwf	?i2___fltol+3,w,c
 25342  011C28  A4D8               	btfss	status,2,c
 25343  011C2A  D054               	goto	i2l1389
 25344  011C2C  0100               	movlb	0	; () banked
 25345  011C2E  BF94               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25346  011C30  D051               	goto	i2l1389
 25347  011C32  5194               	movf	(i2printf@exp+1)& (0+255),w,b
 25348  011C34  E104               	bnz	i2l13526
 25349  011C36  0E02               	movlw	2
 25350  011C38  5D93               	subwf	i2printf@exp& (0+255),w,b
 25351  011C3A  A0D8               	btfss	status,0,c
 25352  011C3C  D04B               	goto	i2l1389
 25353  011C3E                     i2u1628_40:
 25354  011C3E                     i2l13526:
 25355                           
 25356                           ; BSR set to: 0
 25357                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25358  011C3E  C095  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25359  011C42  C096  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25360  011C46  C097  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25361  011C4A  C098  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25362  011C4E  0E5F               	movlw	95
 25363  011C50  6E38               	movwf	i2___flge@ff2,c
 25364  011C52  0E70               	movlw	112
 25365  011C54  6E39               	movwf	i2___flge@ff2+1,c
 25366  011C56  0E89               	movlw	137
 25367  011C58  6E3A               	movwf	i2___flge@ff2+2,c
 25368  011C5A  0E40               	movlw	64
 25369  011C5C  6E3B               	movwf	i2___flge@ff2+3,c
 25370  011C5E  ECB2  F0B2         	call	i2___flge	;wreg free
 25371  011C62  B0D8               	btfsc	status,0,c
 25372  011C64  D003               	goto	i2l1392
 25373                           
 25374                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25375  011C66  0100               	movlb	0	; () banked
 25376  011C68  0EF7               	movlw	247
 25377  011C6A  D002               	goto	L15
 25378  011C6C                     i2l1392:
 25379                           
 25380                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25381                           
 25382                           ; BSR set to: 0
 25383  011C6C  0100               	movlb	0	; () banked
 25384  011C6E  0EF8               	movlw	248
 25385  011C70                     L15:
 25386  011C70  2793               	addwf	i2printf@exp& (0+255),f,b
 25387  011C72  0EFF               	movlw	255
 25388  011C74  2394               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25389                           
 25390                           ; BSR set to: 0
 25391                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25392                           
 25393                           ; BSR set to: 0
 25394  011C76  5193               	movf	i2printf@exp& (0+255),w,b
 25395  011C78  ECDE  F097         	call	i2_scale
 25396  011C7C  C049  F095         	movff	?i2_scale,i2printf@tmpval
 25397  011C80  C04A  F096         	movff	?i2_scale+1,i2printf@tmpval+1
 25398  011C84  C04B  F097         	movff	?i2_scale+2,i2printf@tmpval+2
 25399  011C88  C04C  F098         	movff	?i2_scale+3,i2printf@tmpval+3
 25400  011C8C  C09D  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 25401  011C90  C09E  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 25402  011C94  C09F  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 25403  011C98  C0A0  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 25404  011C9C  C095  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 25405  011CA0  C096  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 25406  011CA4  C097  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 25407  011CA8  C098  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 25408  011CAC  EC8D  F0B1         	call	i2__div_to_l_	;wreg free
 25409  011CB0  C001  F099         	movff	?i2__div_to_l_,i2printf@val
 25410  011CB4  C002  F09A         	movff	?i2__div_to_l_+1,i2printf@val+1
 25411  011CB8  C003  F09B         	movff	?i2__div_to_l_+2,i2printf@val+2
 25412  011CBC  C004  F09C         	movff	?i2__div_to_l_+3,i2printf@val+3
 25413                           
 25414                           ;doprnt.c: 1129: fval = 0.0;
 25415  011CC0  0E00               	movlw	0
 25416  011CC2  0100               	movlb	0	; () banked
 25417  011CC4  6F9D               	movwf	i2printf@fval& (0+255),b
 25418  011CC6  0E00               	movlw	0
 25419  011CC8  6F9E               	movwf	(i2printf@fval+1)& (0+255),b
 25420  011CCA  0E00               	movlw	0
 25421  011CCC  6F9F               	movwf	(i2printf@fval+2)& (0+255),b
 25422  011CCE  0E00               	movlw	0
 25423  011CD0  6FA0               	movwf	(i2printf@fval+3)& (0+255),b
 25424                           
 25425                           ;doprnt.c: 1130: } else {
 25426  011CD2  D03C               	goto	i2l1398
 25427  011CD4                     i2l1389:
 25428                           
 25429                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25430                           
 25431                           ; BSR set to: 0
 25432  011CD4  C09D  F049         	movff	i2printf@fval,i2___fltol@f1
 25433  011CD8  C09E  F04A         	movff	i2printf@fval+1,i2___fltol@f1+1
 25434  011CDC  C09F  F04B         	movff	i2printf@fval+2,i2___fltol@f1+2
 25435  011CE0  C0A0  F04C         	movff	i2printf@fval+3,i2___fltol@f1+3
 25436  011CE4  EC48  F0B5         	call	i2___fltol	;wreg free
 25437  011CE8  C049  F099         	movff	?i2___fltol,i2printf@val
 25438  011CEC  C04A  F09A         	movff	?i2___fltol+1,i2printf@val+1
 25439  011CF0  C04B  F09B         	movff	?i2___fltol+2,i2printf@val+2
 25440  011CF4  C04C  F09C         	movff	?i2___fltol+3,i2printf@val+3
 25441                           
 25442                           ;doprnt.c: 1132: fval -= (double)val;
 25443  011CF8  C09D  F076         	movff	i2printf@fval,i2___flsub@b
 25444  011CFC  C09E  F077         	movff	i2printf@fval+1,i2___flsub@b+1
 25445  011D00  C09F  F078         	movff	i2printf@fval+2,i2___flsub@b+2
 25446  011D04  C0A0  F079         	movff	i2printf@fval+3,i2___flsub@b+3
 25447  011D08  C099  F005         	movff	i2printf@val,i2___xxtofl@val
 25448  011D0C  C09A  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 25449  011D10  C09B  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 25450  011D14  C09C  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 25451  011D18  0E00               	movlw	0
 25452  011D1A  EC1D  F0AF         	call	i2___xxtofl
 25453  011D1E  C005  F07A         	movff	?i2___xxtofl,i2___flsub@a
 25454  011D22  C006  F07B         	movff	?i2___xxtofl+1,i2___flsub@a+1
 25455  011D26  C007  F07C         	movff	?i2___xxtofl+2,i2___flsub@a+2
 25456  011D2A  C008  F07D         	movff	?i2___xxtofl+3,i2___flsub@a+3
 25457  011D2E  EC81  F0BD         	call	i2___flsub	;wreg free
 25458  011D32  C076  F09D         	movff	?i2___flsub,i2printf@fval
 25459  011D36  C077  F09E         	movff	?i2___flsub+1,i2printf@fval+1
 25460  011D3A  C078  F09F         	movff	?i2___flsub+2,i2printf@fval+2
 25461  011D3E  C079  F0A0         	movff	?i2___flsub+3,i2printf@fval+3
 25462                           
 25463                           ;doprnt.c: 1133: exp = 0;
 25464  011D42  0E00               	movlw	0
 25465  011D44  0100               	movlb	0	; () banked
 25466  011D46  6F94               	movwf	(i2printf@exp+1)& (0+255),b
 25467  011D48  0E00               	movlw	0
 25468  011D4A  6F93               	movwf	i2printf@exp& (0+255),b
 25469  011D4C                     i2l1398:
 25470                           
 25471                           ; BSR set to: 0
 25472                           ;doprnt.c: 1134: }
 25473                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25474                           
 25475                           ; BSR set to: 0
 25476  011D4C  0E01               	movlw	1
 25477  011D4E  6FA3               	movwf	i2printf@c& (0+255),b
 25478  011D50                     i2l13546:
 25479                           
 25480                           ; BSR set to: 0
 25481  011D50  0E0A               	movlw	10
 25482  011D52  19A3               	xorwf	i2printf@c& (0+255),w,b
 25483  011D54  B4D8               	btfsc	status,2,c
 25484  011D56  D01B               	goto	i2u1632_40
 25485                           
 25486                           ; BSR set to: 0
 25487                           ;doprnt.c: 1137: if(val < dpowers[c])
 25488                           
 25489                           ; BSR set to: 0
 25490                           
 25491                           ; BSR set to: 0
 25492  011D58  51A3               	movf	i2printf@c& (0+255),w,b
 25493  011D5A  0D04               	mullw	4
 25494  011D5C  0E21               	movlw	low _dpowers
 25495  011D5E  24F3               	addwf	prodl,w,c
 25496  011D60  6EF6               	movwf	tblptrl,c
 25497  011D62  0EEC               	movlw	high _dpowers
 25498  011D64  20F4               	addwfc	prodh,w,c
 25499  011D66  6EF7               	movwf	tblptrh,c
 25500  011D68                     	if	1	;There are 3 active tblptr bytes
 25501  011D68  6AF8               	clrf	tblptru,c
 25502  011D6A  0E00               	movlw	low (__mediumconst shr (0+16))
 25503  011D6C  22F8               	addwfc	tblptru,f,c
 25504  011D6E                     	endif
 25505  011D6E  0009               	tblrd		*+
 25506  011D70  50F5               	movf	tablat,w,c
 25507  011D72  5D99               	subwf	i2printf@val& (0+255),w,b
 25508  011D74  0009               	tblrd		*+
 25509  011D76  50F5               	movf	tablat,w,c
 25510  011D78  599A               	subwfb	(i2printf@val+1)& (0+255),w,b
 25511  011D7A  0009               	tblrd		*+
 25512  011D7C  50F5               	movf	tablat,w,c
 25513  011D7E  599B               	subwfb	(i2printf@val+2)& (0+255),w,b
 25514  011D80  0009               	tblrd		*+
 25515  011D82  50F5               	movf	tablat,w,c
 25516  011D84  599C               	subwfb	(i2printf@val+3)& (0+255),w,b
 25517  011D86  A0D8               	btfss	status,0,c
 25518  011D88  D002               	goto	i2u1632_40
 25519                           
 25520                           ; BSR set to: 0
 25521                           
 25522                           ; BSR set to: 0
 25523                           
 25524                           ; BSR set to: 0
 25525                           ;doprnt.c: 1138: break;
 25526  011D8A  2BA3               	incf	i2printf@c& (0+255),f,b
 25527  011D8C  D7E1               	goto	i2l13546
 25528  011D8E                     i2u1632_40:
 25529                           
 25530                           ; BSR set to: 0
 25531                           ;doprnt.c: 1175: {
 25532                           ;doprnt.c: 1188: if(flag & 0x03)
 25533                           
 25534                           ; BSR set to: 0
 25535  011D8E  0E03               	movlw	3
 25536  011D90  1591               	andwf	i2printf@flag& (0+255),w,b
 25537  011D92  6F80               	movwf	??i2_printf& (0+255),b
 25538  011D94  0E00               	movlw	0
 25539  011D96  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 25540  011D98  6F81               	movwf	(??i2_printf+1)& (0+255),b
 25541  011D9A  5180               	movf	??i2_printf& (0+255),w,b
 25542  011D9C  1181               	iorwf	(??i2_printf+1)& (0+255),w,b
 25543  011D9E  B4D8               	btfsc	status,2,c
 25544  011DA0  D04D               	goto	i2l1403
 25545                           
 25546                           ; BSR set to: 0
 25547                           ;doprnt.c: 1190: (putch('-') );
 25548  011DA2  0E2D               	movlw	45
 25549  011DA4  ECAA  F0C0         	call	i2_putch
 25550                           
 25551                           ;doprnt.c: 1195: }
 25552                           ;doprnt.c: 1196: while(c--) {
 25553  011DA8  D049               	goto	i2l1403
 25554  011DAA                     
 25555                           ;doprnt.c: 1200: {
 25556                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25557  011DAA  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 25558  011DAE  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25559  011DB2  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25560  011DB6  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25561  011DBA  0100               	movlb	0	; () banked
 25562  011DBC  51A3               	movf	i2printf@c& (0+255),w,b
 25563  011DBE  0D04               	mullw	4
 25564  011DC0  0E21               	movlw	low _dpowers
 25565  011DC2  24F3               	addwf	prodl,w,c
 25566  011DC4  6EF6               	movwf	tblptrl,c
 25567  011DC6  0EEC               	movlw	high _dpowers
 25568  011DC8  20F4               	addwfc	prodh,w,c
 25569  011DCA  6EF7               	movwf	tblptrh,c
 25570  011DCC                     	if	1	;There are 3 active tblptr bytes
 25571  011DCC  6AF8               	clrf	tblptru,c
 25572  011DCE  0E00               	movlw	low (__mediumconst shr (0+16))
 25573  011DD0  22F8               	addwfc	tblptru,f,c
 25574  011DD2                     	endif
 25575  011DD2  0009               	tblrd		*+
 25576  011DD4  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25577  011DD8  0009               	tblrd		*+
 25578  011DDA  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25579  011DDE  0009               	tblrd		*+
 25580  011DE0  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25581  011DE4  000A               	tblrd		*-
 25582  011DE6  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25583  011DEA  ECE6  F0B8         	call	i2___lldiv	;wreg free
 25584  011DEE  C001  F095         	movff	?i2___lldiv,i2printf@tmpval
 25585  011DF2  C002  F096         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25586  011DF6  C003  F097         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25587  011DFA  C004  F098         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25588                           
 25589                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25590  011DFE  C095  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25591  011E02  C096  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25592  011E06  C097  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25593  011E0A  C098  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25594  011E0E  0E0A               	movlw	10
 25595  011E10  6E12               	movwf	i2___llmod@divisor,c
 25596  011E12  0E00               	movlw	0
 25597  011E14  6E13               	movwf	i2___llmod@divisor+1,c
 25598  011E16  0E00               	movlw	0
 25599  011E18  6E14               	movwf	i2___llmod@divisor+2,c
 25600  011E1A  0E00               	movlw	0
 25601  011E1C  6E15               	movwf	i2___llmod@divisor+3,c
 25602  011E1E  EC67  F0BB         	call	i2___llmod	;wreg free
 25603  011E22  C00E  F095         	movff	?i2___llmod,i2printf@tmpval
 25604  011E26  C00F  F096         	movff	?i2___llmod+1,i2printf@tmpval+1
 25605  011E2A  C010  F097         	movff	?i2___llmod+2,i2printf@tmpval+2
 25606  011E2E  C011  F098         	movff	?i2___llmod+3,i2printf@tmpval+3
 25607                           
 25608                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 25609  011E32  0100               	movlb	0	; () banked
 25610  011E34  5195               	movf	i2printf@tmpval& (0+255),w,b
 25611  011E36  0F30               	addlw	48
 25612  011E38  ECAA  F0C0         	call	i2_putch
 25613  011E3C                     i2l1403:
 25614  011E3C  0100               	movlb	0	; () banked
 25615  011E3E  07A3               	decf	i2printf@c& (0+255),f,b
 25616  011E40  29A3               	incf	i2printf@c& (0+255),w,b
 25617  011E42  B4D8               	btfsc	status,2,c
 25618  011E44  D008               	goto	i2l1406
 25619  011E46  D7B1               	goto	i2l1404
 25620  011E48                     i2l13570:
 25621                           
 25622                           ; BSR set to: 0
 25623                           ;doprnt.c: 1208: (putch('0') );
 25624  011E48  0E30               	movlw	48
 25625  011E4A  ECAA  F0C0         	call	i2_putch
 25626                           
 25627                           ;doprnt.c: 1209: exp--;
 25628  011E4E  0100               	movlb	0	; () banked
 25629  011E50  0793               	decf	i2printf@exp& (0+255),f,b
 25630  011E52  A0D8               	btfss	status,0,c
 25631  011E54  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25632  011E56                     i2l1406:
 25633                           
 25634                           ; BSR set to: 0
 25635                           
 25636                           ; BSR set to: 0
 25637  011E56  BF94               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25638  011E58  D005               	goto	i2u1635_40
 25639  011E5A  5194               	movf	(i2printf@exp+1)& (0+255),w,b
 25640  011E5C  E1F5               	bnz	i2l13570
 25641  011E5E  0593               	decf	i2printf@exp& (0+255),w,b
 25642  011E60  B0D8               	btfsc	status,0,c
 25643  011E62  D7F2               	goto	i2l1407
 25644  011E64                     i2u1635_40:
 25645                           
 25646                           ; BSR set to: 0
 25647                           ;doprnt.c: 1210: }
 25648                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25649                           
 25650                           ; BSR set to: 0
 25651  011E64  BFA2               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25652  011E66  D009               	goto	i2l1409
 25653  011E68  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 25654  011E6A  E104               	bnz	i2u1636_40
 25655  011E6C  0E09               	movlw	9
 25656  011E6E  5DA1               	subwf	i2printf@prec& (0+255),w,b
 25657  011E70  A0D8               	btfss	status,0,c
 25658  011E72  D003               	goto	i2l1409
 25659  011E74                     i2u1636_40:
 25660                           
 25661                           ; BSR set to: 0
 25662                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25663  011E74  0E08               	movlw	8
 25664  011E76  6FA3               	movwf	i2printf@c& (0+255),b
 25665  011E78  D002               	goto	i2l1410
 25666  011E7A                     i2l1409:
 25667                           
 25668                           ; BSR set to: 0
 25669                           ;doprnt.c: 1213: else
 25670                           ;doprnt.c: 1214: c = prec;
 25671  011E7A  C0A1  F0A3         	movff	i2printf@prec,i2printf@c
 25672  011E7E                     i2l1410:
 25673                           
 25674                           ; BSR set to: 0
 25675                           ;doprnt.c: 1215: prec -= c;
 25676                           
 25677                           ; BSR set to: 0
 25678  011E7E  51A3               	movf	i2printf@c& (0+255),w,b
 25679  011E80  5FA1               	subwf	i2printf@prec& (0+255),f,b
 25680  011E82  0E00               	movlw	0
 25681  011E84  BFA3               	btfsc	i2printf@c& (0+255),7,b
 25682  011E86  0EFF               	movlw	255
 25683  011E88  5BA2               	subwfb	(i2printf@prec+1)& (0+255),f,b
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;doprnt.c: 1219: if(c)
 25687  011E8A  51A3               	movf	i2printf@c& (0+255),w,b
 25688  011E8C  B4D8               	btfsc	status,2,c
 25689  011E8E  D003               	goto	i2l1411
 25690                           
 25691                           ; BSR set to: 0
 25692                           ;doprnt.c: 1221: (putch('.') );
 25693  011E90  0E2E               	movlw	46
 25694  011E92  ECAA  F0C0         	call	i2_putch
 25695  011E96                     i2l1411:
 25696                           
 25697                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25698  011E96  0100               	movlb	0	; () banked
 25699  011E98  51A3               	movf	i2printf@c& (0+255),w,b
 25700  011E9A  ECDE  F097         	call	i2_scale
 25701  011E9E  C049  F086         	movff	?i2_scale,i2_printf$4064
 25702  011EA2  C04A  F087         	movff	?i2_scale+1,i2_printf$4064+1
 25703  011EA6  C04B  F088         	movff	?i2_scale+2,i2_printf$4064+2
 25704  011EAA  C04C  F089         	movff	?i2_scale+3,i2_printf$4064+3
 25705                           
 25706                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25707  011EAE  C09D  F034         	movff	i2printf@fval,i2___flmul@a
 25708  011EB2  C09E  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 25709  011EB6  C09F  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 25710  011EBA  C0A0  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 25711  011EBE  C086  F030         	movff	i2_printf$4064,i2___flmul@b
 25712  011EC2  C087  F031         	movff	i2_printf$4064+1,i2___flmul@b+1
 25713  011EC6  C088  F032         	movff	i2_printf$4064+2,i2___flmul@b+2
 25714  011ECA  C089  F033         	movff	i2_printf$4064+3,i2___flmul@b+3
 25715  011ECE  EC7B  F09D         	call	i2___flmul	;wreg free
 25716  011ED2  C030  F049         	movff	?i2___flmul,i2___fltol@f1
 25717  011ED6  C031  F04A         	movff	?i2___flmul+1,i2___fltol@f1+1
 25718  011EDA  C032  F04B         	movff	?i2___flmul+2,i2___fltol@f1+2
 25719  011EDE  C033  F04C         	movff	?i2___flmul+3,i2___fltol@f1+3
 25720  011EE2  EC48  F0B5         	call	i2___fltol	;wreg free
 25721  011EE6  C049  F099         	movff	?i2___fltol,i2printf@val
 25722  011EEA  C04A  F09A         	movff	?i2___fltol+1,i2printf@val+1
 25723  011EEE  C04B  F09B         	movff	?i2___fltol+2,i2printf@val+2
 25724  011EF2  C04C  F09C         	movff	?i2___fltol+3,i2printf@val+3
 25725                           
 25726                           ;doprnt.c: 1228: while(c--) {
 25727  011EF6  D073               	goto	i2l1412
 25728  011EF8                     
 25729                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25730  011EF8  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 25731  011EFC  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25732  011F00  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25733  011F04  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25734  011F08  0100               	movlb	0	; () banked
 25735  011F0A  51A3               	movf	i2printf@c& (0+255),w,b
 25736  011F0C  0D04               	mullw	4
 25737  011F0E  0E21               	movlw	low _dpowers
 25738  011F10  24F3               	addwf	prodl,w,c
 25739  011F12  6EF6               	movwf	tblptrl,c
 25740  011F14  0EEC               	movlw	high _dpowers
 25741  011F16  20F4               	addwfc	prodh,w,c
 25742  011F18  6EF7               	movwf	tblptrh,c
 25743  011F1A                     	if	1	;There are 3 active tblptr bytes
 25744  011F1A  6AF8               	clrf	tblptru,c
 25745  011F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 25746  011F1E  22F8               	addwfc	tblptru,f,c
 25747  011F20                     	endif
 25748  011F20  0009               	tblrd		*+
 25749  011F22  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25750  011F26  0009               	tblrd		*+
 25751  011F28  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25752  011F2C  0009               	tblrd		*+
 25753  011F2E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25754  011F32  000A               	tblrd		*-
 25755  011F34  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25756  011F38  ECE6  F0B8         	call	i2___lldiv	;wreg free
 25757  011F3C  C001  F095         	movff	?i2___lldiv,i2printf@tmpval
 25758  011F40  C002  F096         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25759  011F44  C003  F097         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25760  011F48  C004  F098         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25761                           
 25762                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25763  011F4C  C095  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25764  011F50  C096  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25765  011F54  C097  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25766  011F58  C098  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25767  011F5C  0E0A               	movlw	10
 25768  011F5E  6E12               	movwf	i2___llmod@divisor,c
 25769  011F60  0E00               	movlw	0
 25770  011F62  6E13               	movwf	i2___llmod@divisor+1,c
 25771  011F64  0E00               	movlw	0
 25772  011F66  6E14               	movwf	i2___llmod@divisor+2,c
 25773  011F68  0E00               	movlw	0
 25774  011F6A  6E15               	movwf	i2___llmod@divisor+3,c
 25775  011F6C  EC67  F0BB         	call	i2___llmod	;wreg free
 25776  011F70  C00E  F095         	movff	?i2___llmod,i2printf@tmpval
 25777  011F74  C00F  F096         	movff	?i2___llmod+1,i2printf@tmpval+1
 25778  011F78  C010  F097         	movff	?i2___llmod+2,i2printf@tmpval+2
 25779  011F7C  C011  F098         	movff	?i2___llmod+3,i2printf@tmpval+3
 25780                           
 25781                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 25782  011F80  0100               	movlb	0	; () banked
 25783  011F82  5195               	movf	i2printf@tmpval& (0+255),w,b
 25784  011F84  0F30               	addlw	48
 25785  011F86  ECAA  F0C0         	call	i2_putch
 25786                           
 25787                           ;doprnt.c: 1232: val %= dpowers[c];
 25788  011F8A  C099  F00E         	movff	i2printf@val,i2___llmod@dividend
 25789  011F8E  C09A  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 25790  011F92  C09B  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 25791  011F96  C09C  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 25792  011F9A  0100               	movlb	0	; () banked
 25793  011F9C  51A3               	movf	i2printf@c& (0+255),w,b
 25794  011F9E  0D04               	mullw	4
 25795  011FA0  0E21               	movlw	low _dpowers
 25796  011FA2  24F3               	addwf	prodl,w,c
 25797  011FA4  6EF6               	movwf	tblptrl,c
 25798  011FA6  0EEC               	movlw	high _dpowers
 25799  011FA8  20F4               	addwfc	prodh,w,c
 25800  011FAA  6EF7               	movwf	tblptrh,c
 25801  011FAC                     	if	1	;There are 3 active tblptr bytes
 25802  011FAC  6AF8               	clrf	tblptru,c
 25803  011FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 25804  011FB0  22F8               	addwfc	tblptru,f,c
 25805  011FB2                     	endif
 25806  011FB2  0009               	tblrd		*+
 25807  011FB4  CFF5 F012          	movff	tablat,i2___llmod@divisor
 25808  011FB8  0009               	tblrd		*+
 25809  011FBA  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 25810  011FBE  0009               	tblrd		*+
 25811  011FC0  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 25812  011FC4  000A               	tblrd		*-
 25813  011FC6  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 25814  011FCA  EC67  F0BB         	call	i2___llmod	;wreg free
 25815  011FCE  C00E  F099         	movff	?i2___llmod,i2printf@val
 25816  011FD2  C00F  F09A         	movff	?i2___llmod+1,i2printf@val+1
 25817  011FD6  C010  F09B         	movff	?i2___llmod+2,i2printf@val+2
 25818  011FDA  C011  F09C         	movff	?i2___llmod+3,i2printf@val+3
 25819  011FDE                     i2l1412:
 25820  011FDE  0100               	movlb	0	; () banked
 25821  011FE0  07A3               	decf	i2printf@c& (0+255),f,b
 25822  011FE2  29A3               	incf	i2printf@c& (0+255),w,b
 25823  011FE4  B4D8               	btfsc	status,2,c
 25824  011FE6  D008               	goto	i2l1415
 25825  011FE8  D787               	goto	i2l1413
 25826  011FEA                     
 25827                           ; BSR set to: 0
 25828                           ;doprnt.c: 1236: (putch('0') );
 25829                           
 25830                           ; BSR set to: 0
 25831  011FEA  0E30               	movlw	48
 25832  011FEC  ECAA  F0C0         	call	i2_putch
 25833                           
 25834                           ;doprnt.c: 1237: prec--;
 25835  011FF0  0100               	movlb	0	; () banked
 25836  011FF2  07A1               	decf	i2printf@prec& (0+255),f,b
 25837  011FF4  A0D8               	btfss	status,0,c
 25838  011FF6  07A2               	decf	(i2printf@prec+1)& (0+255),f,b
 25839  011FF8                     i2l1415:
 25840                           
 25841                           ; BSR set to: 0
 25842                           
 25843                           ; BSR set to: 0
 25844  011FF8  51A1               	movf	i2printf@prec& (0+255),w,b
 25845  011FFA  11A2               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25846  011FFC  B4D8               	btfsc	status,2,c
 25847  011FFE  D156               	goto	i2u1653_40
 25848  012000  D7F4               	goto	i2l1416
 25849  012002                     i2l1380:
 25850                           
 25851                           ; BSR set to: 0
 25852                           ;doprnt.c: 1246: }
 25853                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25854                           
 25855                           ; BSR set to: 0
 25856  012002  0EC0               	movlw	192
 25857  012004  1591               	andwf	i2printf@flag& (0+255),w,b
 25858  012006  6F80               	movwf	??i2_printf& (0+255),b
 25859  012008  0E00               	movlw	0
 25860  01200A  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 25861  01200C  6F81               	movwf	(??i2_printf+1)& (0+255),b
 25862  01200E  5180               	movf	??i2_printf& (0+255),w,b
 25863  012010  1181               	iorwf	(??i2_printf+1)& (0+255),w,b
 25864  012012  A4D8               	btfss	status,2,c
 25865  012014  D01E               	goto	i2l1418
 25866                           
 25867                           ; BSR set to: 0
 25868                           ;doprnt.c: 1253: {
 25869                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25870  012016  C08F  FFD9         	movff	i2printf@ap,fsr2l
 25871  01201A  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 25872  01201E  CFDE F099          	movff	postinc2,i2printf@val
 25873  012022  CFDD F09A          	movff	postdec2,i2printf@val+1
 25874  012026  0E00               	movlw	0
 25875  012028  BF9A               	btfsc	(i2printf@val+1)& (0+255),7,b
 25876  01202A  0EFF               	movlw	-1
 25877  01202C  6F9B               	movwf	(i2printf@val+2)& (0+255),b
 25878  01202E  6F9C               	movwf	(i2printf@val+3)& (0+255),b
 25879                           
 25880                           ; BSR set to: 0
 25881  012030  0E02               	movlw	2
 25882  012032  278F               	addwf	i2printf@ap& (0+255),f,b
 25883  012034  0E00               	movlw	0
 25884  012036  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25885                           
 25886                           ; BSR set to: 0
 25887                           ;doprnt.c: 1261: if((long)val < 0) {
 25888  012038  AF9C               	btfss	(i2printf@val+3)& (0+255),7,b
 25889  01203A  D01D               	goto	i2l1420
 25890                           
 25891                           ; BSR set to: 0
 25892                           ;doprnt.c: 1262: flag |= 0x03;
 25893  01203C  0E03               	movlw	3
 25894  01203E  1391               	iorwf	i2printf@flag& (0+255),f,b
 25895                           
 25896                           ; BSR set to: 0
 25897                           ;doprnt.c: 1263: val = -val;
 25898  012040  1F9C               	comf	(i2printf@val+3)& (0+255),f,b
 25899  012042  1F9B               	comf	(i2printf@val+2)& (0+255),f,b
 25900  012044  1F9A               	comf	(i2printf@val+1)& (0+255),f,b
 25901  012046  6D99               	negf	i2printf@val& (0+255),b
 25902  012048  0E00               	movlw	0
 25903  01204A  239A               	addwfc	(i2printf@val+1)& (0+255),f,b
 25904  01204C  239B               	addwfc	(i2printf@val+2)& (0+255),f,b
 25905  01204E  239C               	addwfc	(i2printf@val+3)& (0+255),f,b
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;doprnt.c: 1264: }
 25909                           ;doprnt.c: 1266: }
 25910  012050  D012               	goto	i2l1420
 25911  012052                     i2l1418:
 25912                           
 25913                           ; BSR set to: 0
 25914                           ;doprnt.c: 1268: else
 25915                           ;doprnt.c: 1273: {
 25916                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25917                           
 25918                           ; BSR set to: 0
 25919  012052  C08F  FFD9         	movff	i2printf@ap,fsr2l
 25920  012056  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 25921  01205A  CFDE F080          	movff	postinc2,??i2_printf
 25922  01205E  CFDD F081          	movff	postdec2,??i2_printf+1
 25923  012062  C080  F099         	movff	??i2_printf,i2printf@val
 25924  012066  C081  F09A         	movff	??i2_printf+1,i2printf@val+1
 25925  01206A  6B9B               	clrf	(i2printf@val+2)& (0+255),b
 25926  01206C  6B9C               	clrf	(i2printf@val+3)& (0+255),b
 25927                           
 25928                           ; BSR set to: 0
 25929  01206E  0E02               	movlw	2
 25930  012070  278F               	addwf	i2printf@ap& (0+255),f,b
 25931  012072  0E00               	movlw	0
 25932  012074  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25933  012076                     i2l1420:
 25934                           
 25935                           ; BSR set to: 0
 25936                           ;doprnt.c: 1287: }
 25937                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25938                           
 25939                           ; BSR set to: 0
 25940  012076  51A1               	movf	i2printf@prec& (0+255),w,b
 25941  012078  11A2               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25942  01207A  A4D8               	btfss	status,2,c
 25943  01207C  D04B               	goto	i2l1422
 25944                           
 25945                           ; BSR set to: 0
 25946  01207E  5199               	movf	i2printf@val& (0+255),w,b
 25947  012080  119A               	iorwf	(i2printf@val+1)& (0+255),w,b
 25948  012082  119B               	iorwf	(i2printf@val+2)& (0+255),w,b
 25949  012084  119C               	iorwf	(i2printf@val+3)& (0+255),w,b
 25950  012086  A4D8               	btfss	status,2,c
 25951  012088  D045               	goto	i2l1422
 25952                           
 25953                           ; BSR set to: 0
 25954                           ;doprnt.c: 1291: prec++;
 25955  01208A  4BA1               	infsnz	i2printf@prec& (0+255),f,b
 25956  01208C  2BA2               	incf	(i2printf@prec+1)& (0+255),f,b
 25957                           
 25958                           ; BSR set to: 0
 25959                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25960  01208E  D042               	goto	i2l1422
 25961  012090                     
 25962                           ; BSR set to: 0
 25963                           ;doprnt.c: 1302: case 0xC0:
 25964                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25965                           
 25966                           ; BSR set to: 0
 25967                           
 25968                           ; BSR set to: 0
 25969  012090  0E01               	movlw	1
 25970  012092  6FA3               	movwf	i2printf@c& (0+255),b
 25971  012094                     i2l13630:
 25972                           
 25973                           ; BSR set to: 0
 25974  012094  0E0A               	movlw	10
 25975  012096  19A3               	xorwf	i2printf@c& (0+255),w,b
 25976  012098  B4D8               	btfsc	status,2,c
 25977  01209A  D047               	goto	i2l1428
 25978                           
 25979                           ; BSR set to: 0
 25980                           ;doprnt.c: 1306: if(val < dpowers[c])
 25981                           
 25982                           ; BSR set to: 0
 25983                           
 25984                           ; BSR set to: 0
 25985  01209C  51A3               	movf	i2printf@c& (0+255),w,b
 25986  01209E  0D04               	mullw	4
 25987  0120A0  0E21               	movlw	low _dpowers
 25988  0120A2  24F3               	addwf	prodl,w,c
 25989  0120A4  6EF6               	movwf	tblptrl,c
 25990  0120A6  0EEC               	movlw	high _dpowers
 25991  0120A8  20F4               	addwfc	prodh,w,c
 25992  0120AA  6EF7               	movwf	tblptrh,c
 25993  0120AC                     	if	1	;There are 3 active tblptr bytes
 25994  0120AC  6AF8               	clrf	tblptru,c
 25995  0120AE  0E00               	movlw	low (__mediumconst shr (0+16))
 25996  0120B0  22F8               	addwfc	tblptru,f,c
 25997  0120B2                     	endif
 25998  0120B2  0009               	tblrd		*+
 25999  0120B4  50F5               	movf	tablat,w,c
 26000  0120B6  5D99               	subwf	i2printf@val& (0+255),w,b
 26001  0120B8  0009               	tblrd		*+
 26002  0120BA  50F5               	movf	tablat,w,c
 26003  0120BC  599A               	subwfb	(i2printf@val+1)& (0+255),w,b
 26004  0120BE  0009               	tblrd		*+
 26005  0120C0  50F5               	movf	tablat,w,c
 26006  0120C2  599B               	subwfb	(i2printf@val+2)& (0+255),w,b
 26007  0120C4  0009               	tblrd		*+
 26008  0120C6  50F5               	movf	tablat,w,c
 26009  0120C8  599C               	subwfb	(i2printf@val+3)& (0+255),w,b
 26010  0120CA  A0D8               	btfss	status,0,c
 26011  0120CC  D02E               	goto	i2l1428
 26012                           
 26013                           ; BSR set to: 0
 26014                           
 26015                           ; BSR set to: 0
 26016                           
 26017                           ; BSR set to: 0
 26018                           ;doprnt.c: 1307: break;
 26019  0120CE  2BA3               	incf	i2printf@c& (0+255),f,b
 26020  0120D0  D7E1               	goto	i2l13630
 26021  0120D2                     
 26022                           ; BSR set to: 0
 26023                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26024                           
 26025                           ; BSR set to: 0
 26026  0120D2  0E01               	movlw	1
 26027  0120D4  6FA3               	movwf	i2printf@c& (0+255),b
 26028  0120D6                     i2l13644:
 26029                           
 26030                           ; BSR set to: 0
 26031  0120D6  0E08               	movlw	8
 26032  0120D8  19A3               	xorwf	i2printf@c& (0+255),w,b
 26033  0120DA  B4D8               	btfsc	status,2,c
 26034  0120DC  D026               	goto	i2l1428
 26035                           
 26036                           ; BSR set to: 0
 26037                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26038                           
 26039                           ; BSR set to: 0
 26040                           
 26041                           ; BSR set to: 0
 26042  0120DE  51A3               	movf	i2printf@c& (0+255),w,b
 26043  0120E0  0D04               	mullw	4
 26044  0120E2  0E49               	movlw	low _hexpowers
 26045  0120E4  24F3               	addwf	prodl,w,c
 26046  0120E6  6EF6               	movwf	tblptrl,c
 26047  0120E8  0EEC               	movlw	high _hexpowers
 26048  0120EA  20F4               	addwfc	prodh,w,c
 26049  0120EC  6EF7               	movwf	tblptrh,c
 26050  0120EE                     	if	1	;There are 3 active tblptr bytes
 26051  0120EE  6AF8               	clrf	tblptru,c
 26052  0120F0  0E00               	movlw	low (__mediumconst shr (0+16))
 26053  0120F2  22F8               	addwfc	tblptru,f,c
 26054  0120F4                     	endif
 26055  0120F4  0009               	tblrd		*+
 26056  0120F6  50F5               	movf	tablat,w,c
 26057  0120F8  5D99               	subwf	i2printf@val& (0+255),w,b
 26058  0120FA  0009               	tblrd		*+
 26059  0120FC  50F5               	movf	tablat,w,c
 26060  0120FE  599A               	subwfb	(i2printf@val+1)& (0+255),w,b
 26061  012100  0009               	tblrd		*+
 26062  012102  50F5               	movf	tablat,w,c
 26063  012104  599B               	subwfb	(i2printf@val+2)& (0+255),w,b
 26064  012106  0009               	tblrd		*+
 26065  012108  50F5               	movf	tablat,w,c
 26066  01210A  599C               	subwfb	(i2printf@val+3)& (0+255),w,b
 26067  01210C  A0D8               	btfss	status,0,c
 26068  01210E  D00D               	goto	i2l1428
 26069                           
 26070                           ; BSR set to: 0
 26071                           
 26072                           ; BSR set to: 0
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;doprnt.c: 1318: break;
 26076  012110  2BA3               	incf	i2printf@c& (0+255),f,b
 26077  012112  D7E1               	goto	i2l13644
 26078  012114                     i2l1422:
 26079                           
 26080                           ; BSR set to: 0
 26081                           
 26082                           ; BSR set to: 0
 26083  012114  5191               	movf	i2printf@flag& (0+255),w,b
 26084  012116  0BC0               	andlw	192
 26085                           
 26086                           ; Switch size 1, requested type "space"
 26087                           ; Number of cases is 3, Range of values is 0 to 192
 26088                           ; switch strategies available:
 26089                           ; Name         Instructions Cycles
 26090                           ; simple_byte           10     6 (average)
 26091                           ;	Chosen strategy is simple_byte
 26092  012118  0A00               	xorlw	0	; case 0
 26093  01211A  B4D8               	btfsc	status,2,c
 26094  01211C  D7B9               	goto	i2l1423
 26095  01211E  0A80               	xorlw	128	; case 128
 26096  012120  B4D8               	btfsc	status,2,c
 26097  012122  D7D7               	goto	i2l1429
 26098  012124  0A40               	xorlw	64	; case 192
 26099  012126  B4D8               	btfsc	status,2,c
 26100  012128  D7B3               	goto	i2l1423
 26101  01212A                     i2l1428:
 26102                           
 26103                           ; BSR set to: 0
 26104                           ;doprnt.c: 1339: if(c < prec)
 26105                           
 26106                           ; BSR set to: 0
 26107  01212A  0E80               	movlw	128
 26108  01212C  BFA3               	btfsc	i2printf@c& (0+255),7,b
 26109  01212E  0E7F               	movlw	127
 26110  012130  6F80               	movwf	??i2_printf& (0+255),b
 26111  012132  51A1               	movf	i2printf@prec& (0+255),w,b
 26112  012134  5DA3               	subwf	i2printf@c& (0+255),w,b
 26113  012136  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 26114  012138  0A80               	xorlw	128
 26115  01213A  5980               	subwfb	??i2_printf& (0+255),w,b
 26116  01213C  B0D8               	btfsc	status,0,c
 26117  01213E  D003               	goto	i2l1433
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;doprnt.c: 1340: c = prec;
 26121  012140  C0A1  F0A3         	movff	i2printf@prec,i2printf@c
 26122  012144  D010               	goto	i2l1435
 26123  012146                     i2l1433:
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;doprnt.c: 1341: else if(prec < c)
 26127                           
 26128                           ; BSR set to: 0
 26129  012146  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 26130  012148  0A80               	xorlw	128
 26131  01214A  6F80               	movwf	??i2_printf& (0+255),b
 26132  01214C  51A3               	movf	i2printf@c& (0+255),w,b
 26133  01214E  5DA1               	subwf	i2printf@prec& (0+255),w,b
 26134  012150  0E80               	movlw	128
 26135  012152  BFA3               	btfsc	i2printf@c& (0+255),7,b
 26136  012154  0E7F               	movlw	127
 26137  012156  5980               	subwfb	??i2_printf& (0+255),w,b
 26138  012158  B0D8               	btfsc	status,0,c
 26139  01215A  D005               	goto	i2l1435
 26140                           
 26141                           ; BSR set to: 0
 26142                           ;doprnt.c: 1342: prec = c;
 26143  01215C  51A3               	movf	i2printf@c& (0+255),w,b
 26144  01215E  6FA1               	movwf	i2printf@prec& (0+255),b
 26145  012160  6BA2               	clrf	(i2printf@prec+1)& (0+255),b
 26146  012162  BFA1               	btfsc	i2printf@prec& (0+255),7,b
 26147  012164  07A2               	decf	(i2printf@prec+1)& (0+255),f,b
 26148  012166                     i2l1435:
 26149                           
 26150                           ; BSR set to: 0
 26151                           ;doprnt.c: 1422: {
 26152                           ;doprnt.c: 1438: if(flag & 0x03)
 26153                           
 26154                           ; BSR set to: 0
 26155                           
 26156                           ; BSR set to: 0
 26157  012166  0E03               	movlw	3
 26158  012168  1591               	andwf	i2printf@flag& (0+255),w,b
 26159  01216A  6F80               	movwf	??i2_printf& (0+255),b
 26160  01216C  0E00               	movlw	0
 26161  01216E  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 26162  012170  6F81               	movwf	(??i2_printf+1)& (0+255),b
 26163  012172  5180               	movf	??i2_printf& (0+255),w,b
 26164  012174  1181               	iorwf	(??i2_printf+1)& (0+255),w,b
 26165  012176  B4D8               	btfsc	status,2,c
 26166  012178  D090               	goto	i2l1437
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;doprnt.c: 1439: (putch('-') );
 26170  01217A  0E2D               	movlw	45
 26171  01217C  ECAA  F0C0         	call	i2_putch
 26172                           
 26173                           ;doprnt.c: 1469: }
 26174                           ;doprnt.c: 1474: while(prec--) {
 26175  012180  D08C               	goto	i2l1437
 26176  012182                     
 26177                           ;doprnt.c: 1486: case 0xC0:
 26178                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26179  012182  C0A1  F080         	movff	i2printf@prec,??i2_printf
 26180  012186  C0A2  F081         	movff	i2printf@prec+1,??i2_printf+1
 26181  01218A  0100               	movlb	0	; () banked
 26182  01218C  90D8               	bcf	status,0,c
 26183  01218E  3780               	rlcf	??i2_printf& (0+255),f,b
 26184  012190  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26185  012192  90D8               	bcf	status,0,c
 26186  012194  3780               	rlcf	??i2_printf& (0+255),f,b
 26187  012196  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26188  012198  0E21               	movlw	low _dpowers
 26189  01219A  2580               	addwf	??i2_printf& (0+255),w,b
 26190  01219C  6EF6               	movwf	tblptrl,c
 26191  01219E  0EEC               	movlw	high _dpowers
 26192  0121A0  2181               	addwfc	(??i2_printf+1)& (0+255),w,b
 26193  0121A2  6EF7               	movwf	tblptrh,c
 26194  0121A4                     	if	1	;There are 3 active tblptr bytes
 26195  0121A4  6AF8               	clrf	tblptru,c
 26196  0121A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26197  0121A8  22F8               	addwfc	tblptru,f,c
 26198  0121AA                     	endif
 26199  0121AA  0009               	tblrd		*+
 26200  0121AC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26201  0121B0  0009               	tblrd		*+
 26202  0121B2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26203  0121B6  0009               	tblrd		*+
 26204  0121B8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26205  0121BC  000A               	tblrd		*-
 26206  0121BE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26207  0121C2  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 26208  0121C6  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26209  0121CA  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26210  0121CE  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26211  0121D2  ECE6  F0B8         	call	i2___lldiv	;wreg free
 26212  0121D6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 26213  0121DA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 26214  0121DE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 26215  0121E2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 26216  0121E6  0E0A               	movlw	10
 26217  0121E8  6E12               	movwf	i2___llmod@divisor,c
 26218  0121EA  0E00               	movlw	0
 26219  0121EC  6E13               	movwf	i2___llmod@divisor+1,c
 26220  0121EE  0E00               	movlw	0
 26221  0121F0  6E14               	movwf	i2___llmod@divisor+2,c
 26222  0121F2  0E00               	movlw	0
 26223  0121F4  6E15               	movwf	i2___llmod@divisor+3,c
 26224  0121F6  EC67  F0BB         	call	i2___llmod	;wreg free
 26225  0121FA  500E               	movf	?i2___llmod,w,c
 26226  0121FC  0F30               	addlw	48
 26227  0121FE  0100               	movlb	0	; () banked
 26228  012200  6FA3               	movwf	i2printf@c& (0+255),b
 26229                           
 26230                           ;doprnt.c: 1491: break;
 26231  012202  D048               	goto	i2l1442
 26232  012204                     
 26233                           ; BSR set to: 0
 26234                           ;doprnt.c: 1499: {
 26235                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26236                           
 26237                           ; BSR set to: 0
 26238  012204  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 26239  012208  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26240  01220C  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26241  012210  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26242  012214  C0A1  F080         	movff	i2printf@prec,??i2_printf
 26243  012218  C0A2  F081         	movff	i2printf@prec+1,??i2_printf+1
 26244  01221C  90D8               	bcf	status,0,c
 26245  01221E  3780               	rlcf	??i2_printf& (0+255),f,b
 26246  012220  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26247  012222  90D8               	bcf	status,0,c
 26248  012224  3780               	rlcf	??i2_printf& (0+255),f,b
 26249  012226  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26250  012228  0E49               	movlw	low _hexpowers
 26251  01222A  2580               	addwf	??i2_printf& (0+255),w,b
 26252  01222C  6EF6               	movwf	tblptrl,c
 26253  01222E  0EEC               	movlw	high _hexpowers
 26254  012230  2181               	addwfc	(??i2_printf+1)& (0+255),w,b
 26255  012232  6EF7               	movwf	tblptrh,c
 26256  012234                     	if	1	;There are 3 active tblptr bytes
 26257  012234  6AF8               	clrf	tblptru,c
 26258  012236  0E00               	movlw	low (__mediumconst shr (0+16))
 26259  012238  22F8               	addwfc	tblptru,f,c
 26260  01223A                     	endif
 26261  01223A  0009               	tblrd		*+
 26262  01223C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26263  012240  0009               	tblrd		*+
 26264  012242  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26265  012246  0009               	tblrd		*+
 26266  012248  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26267  01224C  000A               	tblrd		*-
 26268  01224E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26269  012252  ECE6  F0B8         	call	i2___lldiv	;wreg free
 26270  012256  5001               	movf	?i2___lldiv,w,c
 26271  012258  0B0F               	andlw	15
 26272  01225A  0100               	movlb	0	; () banked
 26273  01225C  6F8A               	movwf	i2printf@idx& (0+255),b
 26274                           
 26275                           ; BSR set to: 0
 26276                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26277  01225E  518A               	movf	i2printf@idx& (0+255),w,b
 26278  012260  0D01               	mullw	1
 26279  012262  0EEB               	movlw	low STR_134
 26280  012264  24F3               	addwf	prodl,w,c
 26281  012266  6EF6               	movwf	tblptrl,c
 26282  012268  0EFD               	movlw	high STR_134
 26283  01226A  20F4               	addwfc	prodh,w,c
 26284  01226C  6EF7               	movwf	tblptrh,c
 26285  01226E                     	if	1	;There are 3 active tblptr bytes
 26286  01226E  6AF8               	clrf	tblptru,c
 26287  012270  0E00               	movlw	low (__mediumconst shr (0+16))
 26288  012272  22F8               	addwfc	tblptru,f,c
 26289  012274                     	endif
 26290  012274  0008               	tblrd		*
 26291  012276  CFF5 F0A3          	movff	tablat,i2printf@c
 26292                           
 26293                           ; BSR set to: 0
 26294                           ;doprnt.c: 1523: }
 26295                           
 26296                           ;doprnt.c: 1508: }
 26297                           ;doprnt.c: 1510: break;
 26298  01227A  D00C               	goto	i2l1442
 26299  01227C                     i2l13680:
 26300  01227C  0100               	movlb	0	; () banked
 26301  01227E  5191               	movf	i2printf@flag& (0+255),w,b
 26302  012280  0BC0               	andlw	192
 26303                           
 26304                           ; Switch size 1, requested type "space"
 26305                           ; Number of cases is 3, Range of values is 0 to 192
 26306                           ; switch strategies available:
 26307                           ; Name         Instructions Cycles
 26308                           ; simple_byte           10     6 (average)
 26309                           ;	Chosen strategy is simple_byte
 26310  012282  0A00               	xorlw	0	; case 0
 26311  012284  B4D8               	btfsc	status,2,c
 26312  012286  D77D               	goto	i2l1440
 26313  012288  0A80               	xorlw	128	; case 128
 26314  01228A  B4D8               	btfsc	status,2,c
 26315  01228C  D7BB               	goto	i2l1443
 26316  01228E  0A40               	xorlw	64	; case 192
 26317  012290  B4D8               	btfsc	status,2,c
 26318  012292  D777               	goto	i2l1440
 26319  012294                     i2l1442:
 26320                           
 26321                           ; BSR set to: 0
 26322                           ;doprnt.c: 1524: (putch(c) );
 26323                           
 26324                           ; BSR set to: 0
 26325  012294  51A3               	movf	i2printf@c& (0+255),w,b
 26326  012296  ECAA  F0C0         	call	i2_putch
 26327  01229A                     i2l1437:
 26328  01229A  0100               	movlb	0	; () banked
 26329  01229C  07A1               	decf	i2printf@prec& (0+255),f,b
 26330  01229E  A0D8               	btfss	status,0,c
 26331  0122A0  07A2               	decf	(i2printf@prec+1)& (0+255),f,b
 26332  0122A2  29A1               	incf	i2printf@prec& (0+255),w,b
 26333  0122A4  E1EB               	bnz	i2l13680
 26334  0122A6  29A2               	incf	(i2printf@prec+1)& (0+255),w,b
 26335  0122A8  A4D8               	btfss	status,2,c
 26336  0122AA  D7E8               	goto	i2l1439
 26337  0122AC                     i2u1653_40:
 26338                           
 26339                           ; BSR set to: 0
 26340                           
 26341                           ; BSR set to: 0
 26342  0122AC  0100               	movlb	0	; () banked
 26343  0122AE  517E               	movf	i2printf@f& (0+255),w,b
 26344  0122B0  6F80               	movwf	??i2_printf& (0+255),b
 26345  0122B2  517F               	movf	(i2printf@f+1)& (0+255),w,b
 26346  0122B4  6F81               	movwf	(??i2_printf+1)& (0+255),b
 26347  0122B6  4B7E               	infsnz	i2printf@f& (0+255),f,b
 26348  0122B8  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 26349  0122BA  C080  FFF6         	movff	??i2_printf,tblptrl
 26350  0122BE  C081  FFF7         	movff	??i2_printf+1,tblptrh
 26351  0122C2  0E00               	movlw	low (__mediumconst shr (0+16))
 26352  0122C4  6EF8               	movwf	tblptru,c
 26353  0122C6  0E0D               	movlw	(high __ramtop+-1)
 26354  0122C8  64F7               	cpfsgt	tblptrh,c
 26355  0122CA  D003               	bra	i2u1654_47
 26356  0122CC  0008               	tblrd		*
 26357  0122CE  50F5               	movf	tablat,w,c
 26358  0122D0  D005               	bra	i2u1654_40
 26359  0122D2                     i2u1654_47:
 26360  0122D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 26361  0122D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 26362  0122DA  50EF               	movf	indf0,w,c
 26363  0122DC                     i2u1654_40:
 26364  0122DC  0100               	movlb	0	; () banked
 26365  0122DE  6FA3               	movwf	i2printf@c& (0+255),b
 26366  0122E0  51A3               	movf	i2printf@c& (0+255),w,b
 26367  0122E2  B4D8               	btfsc	status,2,c
 26368  0122E4  0012               	return	
 26369  0122E6  EFEC  F08B         	goto	i2l1351
 26370  0122EA                     __end_ofi2_printf:
 26371                           	opt stack 0
 26372                           tosu	equ	0xFFF
 26373                           tosh	equ	0xFFE
 26374                           tosl	equ	0xFFD
 26375                           pclatu	equ	0xFFB
 26376                           pclath	equ	0xFFA
 26377                           tblptru	equ	0xFF8
 26378                           tblptrh	equ	0xFF7
 26379                           tblptrl	equ	0xFF6
 26380                           tablat	equ	0xFF5
 26381                           prodh	equ	0xFF4
 26382                           prodl	equ	0xFF3
 26383                           intcon	equ	0xFF2
 26384                           indf0	equ	0xFEF
 26385                           postinc0	equ	0xFEE
 26386                           fsr0h	equ	0xFEA
 26387                           fsr0l	equ	0xFE9
 26388                           wreg	equ	0xFE8
 26389                           indf1	equ	0xFE7
 26390                           postdec1	equ	0xFE5
 26391                           plusw1	equ	0xFE3
 26392                           fsr1h	equ	0xFE2
 26393                           fsr1l	equ	0xFE1
 26394                           bsr	equ	0xFE0
 26395                           indf2	equ	0xFDF
 26396                           postinc2	equ	0xFDE
 26397                           postdec2	equ	0xFDD
 26398                           plusw2	equ	0xFDB
 26399                           fsr2h	equ	0xFDA
 26400                           fsr2l	equ	0xFD9
 26401                           status	equ	0xFD8
 26402                           
 26403 ;; *************** function i2_scale *****************
 26404 ;; Defined at:
 26405 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26406 ;; Parameters:    Size  Location     Type
 26407 ;;  scl             1    wreg     char 
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;  scl             1   80[COMRAM] char 
 26410 ;; Return value:  Size  Location     Type
 26411 ;;                  4   72[COMRAM] char 
 26412 ;; Registers used:
 26413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26414 ;; Tracked objects:
 26415 ;;		On entry : 0/0
 26416 ;;		On exit  : 0/0
 26417 ;;		Unchanged: 0/0
 26418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26420 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26422 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26423 ;;Total ram usage:        9 bytes
 26424 ;; Hardware stack levels used:    1
 26425 ;; Hardware stack levels required when called:    1
 26426 ;; This function calls:
 26427 ;;		i2___awdiv
 26428 ;;		i2___awmod
 26429 ;;		i2___flmul
 26430 ;; This function is called by:
 26431 ;;		i2_printf
 26432 ;; This function uses a non-reentrant model
 26433 ;;
 26434                           
 26435                           	psect	text86
 26436  012FBC                     __ptext86:
 26437                           	opt stack 0
 26438  012FBC                     i2_scale:
 26439                           	opt stack 15
 26440                           
 26441                           ; BSR set to: 0
 26442                           ;incstack = 0
 26443                           ;i2scale@scl stored from wreg
 26444  012FBC  6E51               	movwf	i2scale@scl,c
 26445                           
 26446                           ;doprnt.c: 428: if(scl < 0) {
 26447  012FBE  AE51               	btfss	i2scale@scl,7,c
 26448  012FC0  D11F               	goto	i2l1340
 26449                           
 26450                           ;doprnt.c: 429: scl = -scl;
 26451  012FC2  6C51               	negf	i2scale@scl,c
 26452                           
 26453                           ;doprnt.c: 430: if(scl>=110)
 26454  012FC4  5051               	movf	i2scale@scl,w,c
 26455  012FC6  0A80               	xorlw	128
 26456  012FC8  0F12               	addlw	-238
 26457  012FCA  A0D8               	btfss	status,0,c
 26458  012FCC  D0A1               	goto	i2l1341
 26459                           
 26460                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26461  012FCE  0E00               	movlw	0
 26462  012FD0  6E0A               	movwf	i2___awdiv@divisor+1,c
 26463  012FD2  0E0A               	movlw	10
 26464  012FD4  6E09               	movwf	i2___awdiv@divisor,c
 26465  012FD6  0E00               	movlw	0
 26466  012FD8  6E04               	movwf	i2___awmod@divisor+1,c
 26467  012FDA  0E64               	movlw	100
 26468  012FDC  6E03               	movwf	i2___awmod@divisor,c
 26469  012FDE  5051               	movf	i2scale@scl,w,c
 26470  012FE0  6E01               	movwf	i2___awmod@dividend,c
 26471  012FE2  6A02               	clrf	i2___awmod@dividend+1,c
 26472  012FE4  BE01               	btfsc	i2___awmod@dividend,7,c
 26473  012FE6  0602               	decf	i2___awmod@dividend+1,f,c
 26474  012FE8  EC5B  F0BA         	call	i2___awmod	;wreg free
 26475  012FEC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26476  012FF0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26477  012FF4  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26478  012FF8  90D8               	bcf	status,0,c
 26479  012FFA  3607               	rlcf	?i2___awdiv,f,c
 26480  012FFC  3608               	rlcf	?i2___awdiv+1,f,c
 26481  012FFE  90D8               	bcf	status,0,c
 26482  013000  3607               	rlcf	?i2___awdiv,f,c
 26483  013002  3608               	rlcf	?i2___awdiv+1,f,c
 26484  013004  0E24               	movlw	36
 26485  013006  2607               	addwf	?i2___awdiv,f,c
 26486  013008  0E00               	movlw	0
 26487  01300A  2208               	addwfc	?i2___awdiv+1,f,c
 26488  01300C  0EED               	movlw	low __npowers_
 26489  01300E  2407               	addwf	?i2___awdiv,w,c
 26490  013010  6EF6               	movwf	tblptrl,c
 26491  013012  0EEB               	movlw	high __npowers_
 26492  013014  2008               	addwfc	?i2___awdiv+1,w,c
 26493  013016  6EF7               	movwf	tblptrh,c
 26494  013018                     	if	1	;There are 3 active tblptr bytes
 26495  013018  6AF8               	clrf	tblptru,c
 26496  01301A  0E00               	movlw	low (__mediumconst shr (0+16))
 26497  01301C  22F8               	addwfc	tblptru,f,c
 26498  01301E                     	endif
 26499  01301E  0009               	tblrd		*+
 26500  013020  CFF5 F034          	movff	tablat,i2___flmul@a
 26501  013024  0009               	tblrd		*+
 26502  013026  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26503  01302A  0009               	tblrd		*+
 26504  01302C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26505  013030  000A               	tblrd		*-
 26506  013032  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26507  013036  0E00               	movlw	0
 26508  013038  6E0A               	movwf	i2___awdiv@divisor+1,c
 26509  01303A  0E64               	movlw	100
 26510  01303C  6E09               	movwf	i2___awdiv@divisor,c
 26511  01303E  5051               	movf	i2scale@scl,w,c
 26512  013040  6E07               	movwf	i2___awdiv@dividend,c
 26513  013042  6A08               	clrf	i2___awdiv@dividend+1,c
 26514  013044  BE07               	btfsc	i2___awdiv@dividend,7,c
 26515  013046  0608               	decf	i2___awdiv@dividend+1,f,c
 26516  013048  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26517  01304C  90D8               	bcf	status,0,c
 26518  01304E  3607               	rlcf	?i2___awdiv,f,c
 26519  013050  3608               	rlcf	?i2___awdiv+1,f,c
 26520  013052  90D8               	bcf	status,0,c
 26521  013054  3607               	rlcf	?i2___awdiv,f,c
 26522  013056  3608               	rlcf	?i2___awdiv+1,f,c
 26523  013058  0E48               	movlw	72
 26524  01305A  2607               	addwf	?i2___awdiv,f,c
 26525  01305C  0E00               	movlw	0
 26526  01305E  2208               	addwfc	?i2___awdiv+1,f,c
 26527  013060  0EED               	movlw	low __npowers_
 26528  013062  2407               	addwf	?i2___awdiv,w,c
 26529  013064  6EF6               	movwf	tblptrl,c
 26530  013066  0EEB               	movlw	high __npowers_
 26531  013068  2008               	addwfc	?i2___awdiv+1,w,c
 26532  01306A  6EF7               	movwf	tblptrh,c
 26533  01306C                     	if	1	;There are 3 active tblptr bytes
 26534  01306C  6AF8               	clrf	tblptru,c
 26535  01306E  0E00               	movlw	low (__mediumconst shr (0+16))
 26536  013070  22F8               	addwfc	tblptru,f,c
 26537  013072                     	endif
 26538  013072  0009               	tblrd		*+
 26539  013074  CFF5 F030          	movff	tablat,i2___flmul@b
 26540  013078  0009               	tblrd		*+
 26541  01307A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26542  01307E  0009               	tblrd		*+
 26543  013080  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26544  013084  000A               	tblrd		*-
 26545  013086  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26546  01308A  EC7B  F09D         	call	i2___flmul	;wreg free
 26547  01308E  C030  F04D         	movff	?i2___flmul,i2_scale$4063
 26548  013092  C031  F04E         	movff	?i2___flmul+1,i2_scale$4063+1
 26549  013096  C032  F04F         	movff	?i2___flmul+2,i2_scale$4063+2
 26550  01309A  C033  F050         	movff	?i2___flmul+3,i2_scale$4063+3
 26551                           
 26552                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26553  01309E  C04D  F030         	movff	i2_scale$4063,i2___flmul@b
 26554  0130A2  C04E  F031         	movff	i2_scale$4063+1,i2___flmul@b+1
 26555  0130A6  C04F  F032         	movff	i2_scale$4063+2,i2___flmul@b+2
 26556  0130AA  C050  F033         	movff	i2_scale$4063+3,i2___flmul@b+3
 26557  0130AE  0E00               	movlw	0
 26558  0130B0  6E04               	movwf	i2___awmod@divisor+1,c
 26559  0130B2  0E0A               	movlw	10
 26560  0130B4  6E03               	movwf	i2___awmod@divisor,c
 26561  0130B6  5051               	movf	i2scale@scl,w,c
 26562  0130B8  6E01               	movwf	i2___awmod@dividend,c
 26563  0130BA  6A02               	clrf	i2___awmod@dividend+1,c
 26564  0130BC  BE01               	btfsc	i2___awmod@dividend,7,c
 26565  0130BE  0602               	decf	i2___awmod@dividend+1,f,c
 26566  0130C0  EC5B  F0BA         	call	i2___awmod	;wreg free
 26567  0130C4  90D8               	bcf	status,0,c
 26568  0130C6  3601               	rlcf	?i2___awmod,f,c
 26569  0130C8  3602               	rlcf	?i2___awmod+1,f,c
 26570  0130CA  90D8               	bcf	status,0,c
 26571  0130CC  3601               	rlcf	?i2___awmod,f,c
 26572  0130CE  3602               	rlcf	?i2___awmod+1,f,c
 26573  0130D0  0EED               	movlw	low __npowers_
 26574  0130D2  2401               	addwf	?i2___awmod,w,c
 26575  0130D4  6EF6               	movwf	tblptrl,c
 26576  0130D6  0EEB               	movlw	high __npowers_
 26577  0130D8  2002               	addwfc	?i2___awmod+1,w,c
 26578  0130DA  6EF7               	movwf	tblptrh,c
 26579  0130DC                     	if	1	;There are 3 active tblptr bytes
 26580  0130DC  6AF8               	clrf	tblptru,c
 26581  0130DE  0E00               	movlw	low (__mediumconst shr (0+16))
 26582  0130E0  22F8               	addwfc	tblptru,f,c
 26583  0130E2                     	endif
 26584  0130E2  0009               	tblrd		*+
 26585  0130E4  CFF5 F034          	movff	tablat,i2___flmul@a
 26586  0130E8  0009               	tblrd		*+
 26587  0130EA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26588  0130EE  0009               	tblrd		*+
 26589  0130F0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26590  0130F4  000A               	tblrd		*-
 26591  0130F6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26592  0130FA  EC7B  F09D         	call	i2___flmul	;wreg free
 26593  0130FE  C030  F049         	movff	?i2___flmul,?i2_scale
 26594  013102  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26595  013106  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26596  01310A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26597  01310E  0012               	return	
 26598  013110                     i2l1341:
 26599                           
 26600                           ;doprnt.c: 432: else if(scl > 10)
 26601  013110  5051               	movf	i2scale@scl,w,c
 26602  013112  0A80               	xorlw	128
 26603  013114  0F75               	addlw	-139
 26604  013116  A0D8               	btfss	status,0,c
 26605  013118  D05B               	goto	i2l1344
 26606                           
 26607                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26608  01311A  0E00               	movlw	0
 26609  01311C  6E0A               	movwf	i2___awdiv@divisor+1,c
 26610  01311E  0E0A               	movlw	10
 26611  013120  6E09               	movwf	i2___awdiv@divisor,c
 26612  013122  5051               	movf	i2scale@scl,w,c
 26613  013124  6E07               	movwf	i2___awdiv@dividend,c
 26614  013126  6A08               	clrf	i2___awdiv@dividend+1,c
 26615  013128  BE07               	btfsc	i2___awdiv@dividend,7,c
 26616  01312A  0608               	decf	i2___awdiv@dividend+1,f,c
 26617  01312C  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26618  013130  90D8               	bcf	status,0,c
 26619  013132  3607               	rlcf	?i2___awdiv,f,c
 26620  013134  3608               	rlcf	?i2___awdiv+1,f,c
 26621  013136  90D8               	bcf	status,0,c
 26622  013138  3607               	rlcf	?i2___awdiv,f,c
 26623  01313A  3608               	rlcf	?i2___awdiv+1,f,c
 26624  01313C  0E24               	movlw	36
 26625  01313E  2607               	addwf	?i2___awdiv,f,c
 26626  013140  0E00               	movlw	0
 26627  013142  2208               	addwfc	?i2___awdiv+1,f,c
 26628  013144  0EED               	movlw	low __npowers_
 26629  013146  2407               	addwf	?i2___awdiv,w,c
 26630  013148  6EF6               	movwf	tblptrl,c
 26631  01314A  0EEB               	movlw	high __npowers_
 26632  01314C  2008               	addwfc	?i2___awdiv+1,w,c
 26633  01314E  6EF7               	movwf	tblptrh,c
 26634  013150                     	if	1	;There are 3 active tblptr bytes
 26635  013150  6AF8               	clrf	tblptru,c
 26636  013152  0E00               	movlw	low (__mediumconst shr (0+16))
 26637  013154  22F8               	addwfc	tblptru,f,c
 26638  013156                     	endif
 26639  013156  0009               	tblrd		*+
 26640  013158  CFF5 F030          	movff	tablat,i2___flmul@b
 26641  01315C  0009               	tblrd		*+
 26642  01315E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26643  013162  0009               	tblrd		*+
 26644  013164  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26645  013168  000A               	tblrd		*-
 26646  01316A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26647  01316E  0E00               	movlw	0
 26648  013170  6E04               	movwf	i2___awmod@divisor+1,c
 26649  013172  0E0A               	movlw	10
 26650  013174  6E03               	movwf	i2___awmod@divisor,c
 26651  013176  5051               	movf	i2scale@scl,w,c
 26652  013178  6E01               	movwf	i2___awmod@dividend,c
 26653  01317A  6A02               	clrf	i2___awmod@dividend+1,c
 26654  01317C  BE01               	btfsc	i2___awmod@dividend,7,c
 26655  01317E  0602               	decf	i2___awmod@dividend+1,f,c
 26656  013180  EC5B  F0BA         	call	i2___awmod	;wreg free
 26657  013184  90D8               	bcf	status,0,c
 26658  013186  3601               	rlcf	?i2___awmod,f,c
 26659  013188  3602               	rlcf	?i2___awmod+1,f,c
 26660  01318A  90D8               	bcf	status,0,c
 26661  01318C  3601               	rlcf	?i2___awmod,f,c
 26662  01318E  3602               	rlcf	?i2___awmod+1,f,c
 26663  013190  0EED               	movlw	low __npowers_
 26664  013192  2401               	addwf	?i2___awmod,w,c
 26665  013194  6EF6               	movwf	tblptrl,c
 26666  013196  0EEB               	movlw	high __npowers_
 26667  013198  2002               	addwfc	?i2___awmod+1,w,c
 26668  01319A  6EF7               	movwf	tblptrh,c
 26669  01319C                     	if	1	;There are 3 active tblptr bytes
 26670  01319C  6AF8               	clrf	tblptru,c
 26671  01319E  0E00               	movlw	low (__mediumconst shr (0+16))
 26672  0131A0  22F8               	addwfc	tblptru,f,c
 26673  0131A2                     	endif
 26674  0131A2  0009               	tblrd		*+
 26675  0131A4  CFF5 F034          	movff	tablat,i2___flmul@a
 26676  0131A8  0009               	tblrd		*+
 26677  0131AA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26678  0131AE  0009               	tblrd		*+
 26679  0131B0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26680  0131B4  000A               	tblrd		*-
 26681  0131B6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26682  0131BA  EC7B  F09D         	call	i2___flmul	;wreg free
 26683  0131BE  C030  F049         	movff	?i2___flmul,?i2_scale
 26684  0131C2  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26685  0131C6  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26686  0131CA  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26687  0131CE  0012               	return	
 26688  0131D0                     i2l1344:
 26689                           
 26690                           ;doprnt.c: 434: return _npowers_[scl];
 26691  0131D0  5051               	movf	i2scale@scl,w,c
 26692  0131D2  0D04               	mullw	4
 26693  0131D4  0EED               	movlw	low __npowers_
 26694  0131D6  24F3               	addwf	prodl,w,c
 26695  0131D8  6EF6               	movwf	tblptrl,c
 26696  0131DA  0EEB               	movlw	high __npowers_
 26697  0131DC  20F4               	addwfc	prodh,w,c
 26698  0131DE  6EF7               	movwf	tblptrh,c
 26699  0131E0                     	if	1	;There are 3 active tblptr bytes
 26700  0131E0  6AF8               	clrf	tblptru,c
 26701  0131E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26702  0131E4  22F8               	addwfc	tblptru,f,c
 26703  0131E6                     	endif
 26704  0131E6  0009               	tblrd		*+
 26705  0131E8  CFF5 F049          	movff	tablat,?i2_scale
 26706  0131EC  0009               	tblrd		*+
 26707  0131EE  CFF5 F04A          	movff	tablat,?i2_scale+1
 26708  0131F2  0009               	tblrd		*+
 26709  0131F4  CFF5 F04B          	movff	tablat,?i2_scale+2
 26710  0131F8  000A               	tblrd		*-
 26711  0131FA  CFF5 F04C          	movff	tablat,?i2_scale+3
 26712  0131FE  0012               	return	
 26713  013200                     i2l1340:
 26714                           
 26715                           ;doprnt.c: 435: }
 26716                           ;doprnt.c: 436: if(scl>=110)
 26717  013200  5051               	movf	i2scale@scl,w,c
 26718  013202  0A80               	xorlw	128
 26719  013204  0F12               	addlw	-238
 26720  013206  A0D8               	btfss	status,0,c
 26721  013208  D0A1               	goto	i2l1345
 26722                           
 26723                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26724  01320A  0E00               	movlw	0
 26725  01320C  6E0A               	movwf	i2___awdiv@divisor+1,c
 26726  01320E  0E0A               	movlw	10
 26727  013210  6E09               	movwf	i2___awdiv@divisor,c
 26728  013212  0E00               	movlw	0
 26729  013214  6E04               	movwf	i2___awmod@divisor+1,c
 26730  013216  0E64               	movlw	100
 26731  013218  6E03               	movwf	i2___awmod@divisor,c
 26732  01321A  5051               	movf	i2scale@scl,w,c
 26733  01321C  6E01               	movwf	i2___awmod@dividend,c
 26734  01321E  6A02               	clrf	i2___awmod@dividend+1,c
 26735  013220  BE01               	btfsc	i2___awmod@dividend,7,c
 26736  013222  0602               	decf	i2___awmod@dividend+1,f,c
 26737  013224  EC5B  F0BA         	call	i2___awmod	;wreg free
 26738  013228  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26739  01322C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26740  013230  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26741  013234  90D8               	bcf	status,0,c
 26742  013236  3607               	rlcf	?i2___awdiv,f,c
 26743  013238  3608               	rlcf	?i2___awdiv+1,f,c
 26744  01323A  90D8               	bcf	status,0,c
 26745  01323C  3607               	rlcf	?i2___awdiv,f,c
 26746  01323E  3608               	rlcf	?i2___awdiv+1,f,c
 26747  013240  0E24               	movlw	36
 26748  013242  2607               	addwf	?i2___awdiv,f,c
 26749  013244  0E00               	movlw	0
 26750  013246  2208               	addwfc	?i2___awdiv+1,f,c
 26751  013248  0EB9               	movlw	low __powers_
 26752  01324A  2407               	addwf	?i2___awdiv,w,c
 26753  01324C  6EF6               	movwf	tblptrl,c
 26754  01324E  0EEB               	movlw	high __powers_
 26755  013250  2008               	addwfc	?i2___awdiv+1,w,c
 26756  013252  6EF7               	movwf	tblptrh,c
 26757  013254                     	if	1	;There are 3 active tblptr bytes
 26758  013254  6AF8               	clrf	tblptru,c
 26759  013256  0E00               	movlw	low (__mediumconst shr (0+16))
 26760  013258  22F8               	addwfc	tblptru,f,c
 26761  01325A                     	endif
 26762  01325A  0009               	tblrd		*+
 26763  01325C  CFF5 F034          	movff	tablat,i2___flmul@a
 26764  013260  0009               	tblrd		*+
 26765  013262  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26766  013266  0009               	tblrd		*+
 26767  013268  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26768  01326C  000A               	tblrd		*-
 26769  01326E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26770  013272  0E00               	movlw	0
 26771  013274  6E0A               	movwf	i2___awdiv@divisor+1,c
 26772  013276  0E64               	movlw	100
 26773  013278  6E09               	movwf	i2___awdiv@divisor,c
 26774  01327A  5051               	movf	i2scale@scl,w,c
 26775  01327C  6E07               	movwf	i2___awdiv@dividend,c
 26776  01327E  6A08               	clrf	i2___awdiv@dividend+1,c
 26777  013280  BE07               	btfsc	i2___awdiv@dividend,7,c
 26778  013282  0608               	decf	i2___awdiv@dividend+1,f,c
 26779  013284  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26780  013288  90D8               	bcf	status,0,c
 26781  01328A  3607               	rlcf	?i2___awdiv,f,c
 26782  01328C  3608               	rlcf	?i2___awdiv+1,f,c
 26783  01328E  90D8               	bcf	status,0,c
 26784  013290  3607               	rlcf	?i2___awdiv,f,c
 26785  013292  3608               	rlcf	?i2___awdiv+1,f,c
 26786  013294  0E48               	movlw	72
 26787  013296  2607               	addwf	?i2___awdiv,f,c
 26788  013298  0E00               	movlw	0
 26789  01329A  2208               	addwfc	?i2___awdiv+1,f,c
 26790  01329C  0EB9               	movlw	low __powers_
 26791  01329E  2407               	addwf	?i2___awdiv,w,c
 26792  0132A0  6EF6               	movwf	tblptrl,c
 26793  0132A2  0EEB               	movlw	high __powers_
 26794  0132A4  2008               	addwfc	?i2___awdiv+1,w,c
 26795  0132A6  6EF7               	movwf	tblptrh,c
 26796  0132A8                     	if	1	;There are 3 active tblptr bytes
 26797  0132A8  6AF8               	clrf	tblptru,c
 26798  0132AA  0E00               	movlw	low (__mediumconst shr (0+16))
 26799  0132AC  22F8               	addwfc	tblptru,f,c
 26800  0132AE                     	endif
 26801  0132AE  0009               	tblrd		*+
 26802  0132B0  CFF5 F030          	movff	tablat,i2___flmul@b
 26803  0132B4  0009               	tblrd		*+
 26804  0132B6  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26805  0132BA  0009               	tblrd		*+
 26806  0132BC  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26807  0132C0  000A               	tblrd		*-
 26808  0132C2  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26809  0132C6  EC7B  F09D         	call	i2___flmul	;wreg free
 26810  0132CA  C030  F04D         	movff	?i2___flmul,i2_scale$4063
 26811  0132CE  C031  F04E         	movff	?i2___flmul+1,i2_scale$4063+1
 26812  0132D2  C032  F04F         	movff	?i2___flmul+2,i2_scale$4063+2
 26813  0132D6  C033  F050         	movff	?i2___flmul+3,i2_scale$4063+3
 26814                           
 26815                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26816  0132DA  C04D  F030         	movff	i2_scale$4063,i2___flmul@b
 26817  0132DE  C04E  F031         	movff	i2_scale$4063+1,i2___flmul@b+1
 26818  0132E2  C04F  F032         	movff	i2_scale$4063+2,i2___flmul@b+2
 26819  0132E6  C050  F033         	movff	i2_scale$4063+3,i2___flmul@b+3
 26820  0132EA  0E00               	movlw	0
 26821  0132EC  6E04               	movwf	i2___awmod@divisor+1,c
 26822  0132EE  0E0A               	movlw	10
 26823  0132F0  6E03               	movwf	i2___awmod@divisor,c
 26824  0132F2  5051               	movf	i2scale@scl,w,c
 26825  0132F4  6E01               	movwf	i2___awmod@dividend,c
 26826  0132F6  6A02               	clrf	i2___awmod@dividend+1,c
 26827  0132F8  BE01               	btfsc	i2___awmod@dividend,7,c
 26828  0132FA  0602               	decf	i2___awmod@dividend+1,f,c
 26829  0132FC  EC5B  F0BA         	call	i2___awmod	;wreg free
 26830  013300  90D8               	bcf	status,0,c
 26831  013302  3601               	rlcf	?i2___awmod,f,c
 26832  013304  3602               	rlcf	?i2___awmod+1,f,c
 26833  013306  90D8               	bcf	status,0,c
 26834  013308  3601               	rlcf	?i2___awmod,f,c
 26835  01330A  3602               	rlcf	?i2___awmod+1,f,c
 26836  01330C  0EB9               	movlw	low __powers_
 26837  01330E  2401               	addwf	?i2___awmod,w,c
 26838  013310  6EF6               	movwf	tblptrl,c
 26839  013312  0EEB               	movlw	high __powers_
 26840  013314  2002               	addwfc	?i2___awmod+1,w,c
 26841  013316  6EF7               	movwf	tblptrh,c
 26842  013318                     	if	1	;There are 3 active tblptr bytes
 26843  013318  6AF8               	clrf	tblptru,c
 26844  01331A  0E00               	movlw	low (__mediumconst shr (0+16))
 26845  01331C  22F8               	addwfc	tblptru,f,c
 26846  01331E                     	endif
 26847  01331E  0009               	tblrd		*+
 26848  013320  CFF5 F034          	movff	tablat,i2___flmul@a
 26849  013324  0009               	tblrd		*+
 26850  013326  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26851  01332A  0009               	tblrd		*+
 26852  01332C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26853  013330  000A               	tblrd		*-
 26854  013332  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26855  013336  EC7B  F09D         	call	i2___flmul	;wreg free
 26856  01333A  C030  F049         	movff	?i2___flmul,?i2_scale
 26857  01333E  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26858  013342  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26859  013346  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26860  01334A  0012               	return	
 26861  01334C                     i2l1345:
 26862                           
 26863                           ;doprnt.c: 438: else if(scl > 10)
 26864  01334C  5051               	movf	i2scale@scl,w,c
 26865  01334E  0A80               	xorlw	128
 26866  013350  0F75               	addlw	-139
 26867  013352  A0D8               	btfss	status,0,c
 26868  013354  D05B               	goto	i2l1347
 26869                           
 26870                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 26871  013356  0E00               	movlw	0
 26872  013358  6E0A               	movwf	i2___awdiv@divisor+1,c
 26873  01335A  0E0A               	movlw	10
 26874  01335C  6E09               	movwf	i2___awdiv@divisor,c
 26875  01335E  5051               	movf	i2scale@scl,w,c
 26876  013360  6E07               	movwf	i2___awdiv@dividend,c
 26877  013362  6A08               	clrf	i2___awdiv@dividend+1,c
 26878  013364  BE07               	btfsc	i2___awdiv@dividend,7,c
 26879  013366  0608               	decf	i2___awdiv@dividend+1,f,c
 26880  013368  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26881  01336C  90D8               	bcf	status,0,c
 26882  01336E  3607               	rlcf	?i2___awdiv,f,c
 26883  013370  3608               	rlcf	?i2___awdiv+1,f,c
 26884  013372  90D8               	bcf	status,0,c
 26885  013374  3607               	rlcf	?i2___awdiv,f,c
 26886  013376  3608               	rlcf	?i2___awdiv+1,f,c
 26887  013378  0E24               	movlw	36
 26888  01337A  2607               	addwf	?i2___awdiv,f,c
 26889  01337C  0E00               	movlw	0
 26890  01337E  2208               	addwfc	?i2___awdiv+1,f,c
 26891  013380  0EB9               	movlw	low __powers_
 26892  013382  2407               	addwf	?i2___awdiv,w,c
 26893  013384  6EF6               	movwf	tblptrl,c
 26894  013386  0EEB               	movlw	high __powers_
 26895  013388  2008               	addwfc	?i2___awdiv+1,w,c
 26896  01338A  6EF7               	movwf	tblptrh,c
 26897  01338C                     	if	1	;There are 3 active tblptr bytes
 26898  01338C  6AF8               	clrf	tblptru,c
 26899  01338E  0E00               	movlw	low (__mediumconst shr (0+16))
 26900  013390  22F8               	addwfc	tblptru,f,c
 26901  013392                     	endif
 26902  013392  0009               	tblrd		*+
 26903  013394  CFF5 F030          	movff	tablat,i2___flmul@b
 26904  013398  0009               	tblrd		*+
 26905  01339A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26906  01339E  0009               	tblrd		*+
 26907  0133A0  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26908  0133A4  000A               	tblrd		*-
 26909  0133A6  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26910  0133AA  0E00               	movlw	0
 26911  0133AC  6E04               	movwf	i2___awmod@divisor+1,c
 26912  0133AE  0E0A               	movlw	10
 26913  0133B0  6E03               	movwf	i2___awmod@divisor,c
 26914  0133B2  5051               	movf	i2scale@scl,w,c
 26915  0133B4  6E01               	movwf	i2___awmod@dividend,c
 26916  0133B6  6A02               	clrf	i2___awmod@dividend+1,c
 26917  0133B8  BE01               	btfsc	i2___awmod@dividend,7,c
 26918  0133BA  0602               	decf	i2___awmod@dividend+1,f,c
 26919  0133BC  EC5B  F0BA         	call	i2___awmod	;wreg free
 26920  0133C0  90D8               	bcf	status,0,c
 26921  0133C2  3601               	rlcf	?i2___awmod,f,c
 26922  0133C4  3602               	rlcf	?i2___awmod+1,f,c
 26923  0133C6  90D8               	bcf	status,0,c
 26924  0133C8  3601               	rlcf	?i2___awmod,f,c
 26925  0133CA  3602               	rlcf	?i2___awmod+1,f,c
 26926  0133CC  0EB9               	movlw	low __powers_
 26927  0133CE  2401               	addwf	?i2___awmod,w,c
 26928  0133D0  6EF6               	movwf	tblptrl,c
 26929  0133D2  0EEB               	movlw	high __powers_
 26930  0133D4  2002               	addwfc	?i2___awmod+1,w,c
 26931  0133D6  6EF7               	movwf	tblptrh,c
 26932  0133D8                     	if	1	;There are 3 active tblptr bytes
 26933  0133D8  6AF8               	clrf	tblptru,c
 26934  0133DA  0E00               	movlw	low (__mediumconst shr (0+16))
 26935  0133DC  22F8               	addwfc	tblptru,f,c
 26936  0133DE                     	endif
 26937  0133DE  0009               	tblrd		*+
 26938  0133E0  CFF5 F034          	movff	tablat,i2___flmul@a
 26939  0133E4  0009               	tblrd		*+
 26940  0133E6  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26941  0133EA  0009               	tblrd		*+
 26942  0133EC  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26943  0133F0  000A               	tblrd		*-
 26944  0133F2  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26945  0133F6  EC7B  F09D         	call	i2___flmul	;wreg free
 26946  0133FA  C030  F049         	movff	?i2___flmul,?i2_scale
 26947  0133FE  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26948  013402  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26949  013406  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26950  01340A  0012               	return	
 26951  01340C                     i2l1347:
 26952                           
 26953                           ;doprnt.c: 440: return _powers_[scl];
 26954  01340C  5051               	movf	i2scale@scl,w,c
 26955  01340E  0D04               	mullw	4
 26956  013410  0EB9               	movlw	low __powers_
 26957  013412  24F3               	addwf	prodl,w,c
 26958  013414  6EF6               	movwf	tblptrl,c
 26959  013416  0EEB               	movlw	high __powers_
 26960  013418  20F4               	addwfc	prodh,w,c
 26961  01341A  6EF7               	movwf	tblptrh,c
 26962  01341C                     	if	1	;There are 3 active tblptr bytes
 26963  01341C  6AF8               	clrf	tblptru,c
 26964  01341E  0E00               	movlw	low (__mediumconst shr (0+16))
 26965  013420  22F8               	addwfc	tblptru,f,c
 26966  013422                     	endif
 26967  013422  0009               	tblrd		*+
 26968  013424  CFF5 F049          	movff	tablat,?i2_scale
 26969  013428  0009               	tblrd		*+
 26970  01342A  CFF5 F04A          	movff	tablat,?i2_scale+1
 26971  01342E  0009               	tblrd		*+
 26972  013430  CFF5 F04B          	movff	tablat,?i2_scale+2
 26973  013434  000A               	tblrd		*-
 26974  013436  CFF5 F04C          	movff	tablat,?i2_scale+3
 26975  01343A  0012               	return	
 26976  01343C                     __end_ofi2_scale:
 26977                           	opt stack 0
 26978                           tosu	equ	0xFFF
 26979                           tosh	equ	0xFFE
 26980                           tosl	equ	0xFFD
 26981                           pclatu	equ	0xFFB
 26982                           pclath	equ	0xFFA
 26983                           tblptru	equ	0xFF8
 26984                           tblptrh	equ	0xFF7
 26985                           tblptrl	equ	0xFF6
 26986                           tablat	equ	0xFF5
 26987                           prodh	equ	0xFF4
 26988                           prodl	equ	0xFF3
 26989                           intcon	equ	0xFF2
 26990                           indf0	equ	0xFEF
 26991                           postinc0	equ	0xFEE
 26992                           fsr0h	equ	0xFEA
 26993                           fsr0l	equ	0xFE9
 26994                           wreg	equ	0xFE8
 26995                           indf1	equ	0xFE7
 26996                           postdec1	equ	0xFE5
 26997                           plusw1	equ	0xFE3
 26998                           fsr1h	equ	0xFE2
 26999                           fsr1l	equ	0xFE1
 27000                           bsr	equ	0xFE0
 27001                           indf2	equ	0xFDF
 27002                           postinc2	equ	0xFDE
 27003                           postdec2	equ	0xFDD
 27004                           plusw2	equ	0xFDB
 27005                           fsr2h	equ	0xFDA
 27006                           fsr2l	equ	0xFD9
 27007                           status	equ	0xFD8
 27008                           
 27009 ;; *************** function i2_putch *****************
 27010 ;; Defined at:
 27011 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 27012 ;; Parameters:    Size  Location     Type
 27013 ;;  txData          1    wreg     unsigned char 
 27014 ;; Auto vars:     Size  Location     Type
 27015 ;;  txData          1    1[COMRAM] unsigned char 
 27016 ;; Return value:  Size  Location     Type
 27017 ;;                  1    wreg      void 
 27018 ;; Registers used:
 27019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27020 ;; Tracked objects:
 27021 ;;		On entry : 0/0
 27022 ;;		On exit  : 0/0
 27023 ;;		Unchanged: 0/0
 27024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27029 ;;Total ram usage:        1 bytes
 27030 ;; Hardware stack levels used:    1
 27031 ;; Hardware stack levels required when called:    1
 27032 ;; This function calls:
 27033 ;;		i2_EUSART2_Write
 27034 ;; This function is called by:
 27035 ;;		i2_printf
 27036 ;; This function uses a non-reentrant model
 27037 ;;
 27038                           
 27039                           	psect	text87
 27040  018154                     __ptext87:
 27041                           	opt stack 0
 27042  018154                     i2_putch:
 27043                           	opt stack 15
 27044                           
 27045                           ;incstack = 0
 27046                           ;i2putch@txData stored from wreg
 27047  018154  6E02               	movwf	i2putch@txData,c
 27048                           
 27049                           ;eusart2.c: 195: EUSART2_Write(txData);
 27050  018156  5002               	movf	i2putch@txData,w,c
 27051  018158  EC14  F0BD         	call	i2_EUSART2_Write
 27052  01815C  0012               	return		;funcret
 27053  01815E                     __end_ofi2_putch:
 27054                           	opt stack 0
 27055                           tosu	equ	0xFFF
 27056                           tosh	equ	0xFFE
 27057                           tosl	equ	0xFFD
 27058                           pclatu	equ	0xFFB
 27059                           pclath	equ	0xFFA
 27060                           tblptru	equ	0xFF8
 27061                           tblptrh	equ	0xFF7
 27062                           tblptrl	equ	0xFF6
 27063                           tablat	equ	0xFF5
 27064                           prodh	equ	0xFF4
 27065                           prodl	equ	0xFF3
 27066                           intcon	equ	0xFF2
 27067                           indf0	equ	0xFEF
 27068                           postinc0	equ	0xFEE
 27069                           fsr0h	equ	0xFEA
 27070                           fsr0l	equ	0xFE9
 27071                           wreg	equ	0xFE8
 27072                           indf1	equ	0xFE7
 27073                           postdec1	equ	0xFE5
 27074                           plusw1	equ	0xFE3
 27075                           fsr1h	equ	0xFE2
 27076                           fsr1l	equ	0xFE1
 27077                           bsr	equ	0xFE0
 27078                           indf2	equ	0xFDF
 27079                           postinc2	equ	0xFDE
 27080                           postdec2	equ	0xFDD
 27081                           plusw2	equ	0xFDB
 27082                           fsr2h	equ	0xFDA
 27083                           fsr2l	equ	0xFD9
 27084                           status	equ	0xFD8
 27085                           
 27086 ;; *************** function i2_EUSART2_Write *****************
 27087 ;; Defined at:
 27088 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 27089 ;; Parameters:    Size  Location     Type
 27090 ;;  txData          1    wreg     unsigned char 
 27091 ;; Auto vars:     Size  Location     Type
 27092 ;;  txData          1    0[COMRAM] unsigned char 
 27093 ;; Return value:  Size  Location     Type
 27094 ;;                  1    wreg      void 
 27095 ;; Registers used:
 27096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27097 ;; Tracked objects:
 27098 ;;		On entry : 0/0
 27099 ;;		On exit  : 0/0
 27100 ;;		Unchanged: 0/0
 27101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27106 ;;Total ram usage:        1 bytes
 27107 ;; Hardware stack levels used:    1
 27108 ;; This function calls:
 27109 ;;		Nothing
 27110 ;; This function is called by:
 27111 ;;		i2_putch
 27112 ;; This function uses a non-reentrant model
 27113 ;;
 27114                           
 27115                           	psect	text88
 27116  017A28                     __ptext88:
 27117                           	opt stack 0
 27118  017A28                     i2_EUSART2_Write:
 27119                           	opt stack 15
 27120                           
 27121                           ;incstack = 0
 27122                           ;i2EUSART2_Write@txData stored from wreg
 27123  017A28  6E01               	movwf	i2EUSART2_Write@txData,c
 27124                           
 27125                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 27126  017A2A  D002               	goto	i2l388
 27127  017A2C                     i2l389:
 27128                           
 27129                           ; BSR set to: 1
 27130  017A2C  0004               	clrwdt		;# 
 27131                           
 27132                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 27133  017A2E  827E               	bsf	3966,1,c	;volatile
 27134  017A30                     i2l388:
 27135  017A30  0101               	movlb	1	; () banked
 27136  017A32  51E0               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27137  017A34  B4D8               	btfsc	status,2,c
 27138  017A36  D7FA               	goto	i2l389
 27139                           
 27140                           ; BSR set to: 1
 27141                           ;eusart2.c: 167: }
 27142                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 27143  017A38  927E               	bcf	3966,1,c	;volatile
 27144                           
 27145                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 27146  017A3A  010E               	movlb	14	; () banked
 27147  017A3C  BD2C               	btfsc	44,6,b	;volatile
 27148  017A3E  D003               	goto	i2l391
 27149                           
 27150                           ; BSR set to: 14
 27151                           ;eusart2.c: 172: {
 27152                           ;eusart2.c: 173: TX2REG = txData;
 27153  017A40  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 27154                           
 27155                           ;eusart2.c: 174: }
 27156  017A44  D013               	goto	i2l392
 27157  017A46                     i2l391:
 27158                           
 27159                           ; BSR set to: 14
 27160                           ;eusart2.c: 175: else
 27161                           ;eusart2.c: 176: {
 27162                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 27163  017A46  9D2C               	bcf	44,6,b	;volatile
 27164                           
 27165                           ; BSR set to: 14
 27166                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 27167  017A48  0101               	movlb	1	; () banked
 27168  017A4A  51E2               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27169  017A4C  0D01               	mullw	1
 27170  017A4E  0E00               	movlw	low _eusart2TxBuffer
 27171  017A50  24F3               	addwf	prodl,w,c
 27172  017A52  6ED9               	movwf	fsr2l,c
 27173  017A54  0E03               	movlw	high _eusart2TxBuffer
 27174  017A56  20F4               	addwfc	prodh,w,c
 27175  017A58  6EDA               	movwf	fsr2h,c
 27176  017A5A  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 27177                           
 27178                           ; BSR set to: 1
 27179  017A5E  2BE2               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27180                           
 27181                           ; BSR set to: 1
 27182                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27183  017A60  0E7F               	movlw	127
 27184  017A62  65E2               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27185  017A64  D002               	goto	i2l393
 27186                           
 27187                           ; BSR set to: 1
 27188                           ;eusart2.c: 180: {
 27189                           ;eusart2.c: 181: eusart2TxHead = 0;
 27190  017A66  0E00               	movlw	0
 27191  017A68  6FE2               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27192  017A6A                     i2l393:
 27193                           
 27194                           ; BSR set to: 1
 27195                           ;eusart2.c: 182: }
 27196                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 27197                           
 27198                           ; BSR set to: 1
 27199  017A6A  07E0               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27200  017A6C                     i2l392:
 27201                           
 27202                           ;eusart2.c: 184: }
 27203                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 27204                           
 27205                           ; BSR set to: 1
 27206  017A6C  010E               	movlb	14	; () banked
 27207  017A6E  8D2C               	bsf	44,6,b	;volatile
 27208                           
 27209                           ; BSR set to: 14
 27210  017A70  0012               	return		;funcret
 27211  017A72                     __end_ofi2_EUSART2_Write:
 27212                           	opt stack 0
 27213                           tosu	equ	0xFFF
 27214                           tosh	equ	0xFFE
 27215                           tosl	equ	0xFFD
 27216                           pclatu	equ	0xFFB
 27217                           pclath	equ	0xFFA
 27218                           tblptru	equ	0xFF8
 27219                           tblptrh	equ	0xFF7
 27220                           tblptrl	equ	0xFF6
 27221                           tablat	equ	0xFF5
 27222                           prodh	equ	0xFF4
 27223                           prodl	equ	0xFF3
 27224                           intcon	equ	0xFF2
 27225                           indf0	equ	0xFEF
 27226                           postinc0	equ	0xFEE
 27227                           fsr0h	equ	0xFEA
 27228                           fsr0l	equ	0xFE9
 27229                           wreg	equ	0xFE8
 27230                           indf1	equ	0xFE7
 27231                           postdec1	equ	0xFE5
 27232                           plusw1	equ	0xFE3
 27233                           fsr1h	equ	0xFE2
 27234                           fsr1l	equ	0xFE1
 27235                           bsr	equ	0xFE0
 27236                           indf2	equ	0xFDF
 27237                           postinc2	equ	0xFDE
 27238                           postdec2	equ	0xFDD
 27239                           plusw2	equ	0xFDB
 27240                           fsr2h	equ	0xFDA
 27241                           fsr2l	equ	0xFD9
 27242                           status	equ	0xFD8
 27243                           
 27244 ;; *************** function i2_isdigit *****************
 27245 ;; Defined at:
 27246 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27247 ;; Parameters:    Size  Location     Type
 27248 ;;  c               1    wreg     unsigned char 
 27249 ;; Auto vars:     Size  Location     Type
 27250 ;;  c               1    2[COMRAM] unsigned char 
 27251 ;; Return value:  Size  Location     Type
 27252 ;;		None               void
 27253 ;; Registers used:
 27254 ;;		wreg, status,2, status,0
 27255 ;; Tracked objects:
 27256 ;;		On entry : 0/0
 27257 ;;		On exit  : 0/0
 27258 ;;		Unchanged: 0/0
 27259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27264 ;;Total ram usage:        3 bytes
 27265 ;; Hardware stack levels used:    1
 27266 ;; This function calls:
 27267 ;;		Nothing
 27268 ;; This function is called by:
 27269 ;;		i2_printf
 27270 ;; This function uses a non-reentrant model
 27271 ;;
 27272                           
 27273                           	psect	text89
 27274  017FD2                     __ptext89:
 27275                           	opt stack 0
 27276  017FD2                     i2_isdigit:
 27277                           	opt stack 16
 27278                           
 27279                           ; BSR set to: 14
 27280                           ;incstack = 0
 27281                           ;i2isdigit@c stored from wreg
 27282  017FD2  6E03               	movwf	i2isdigit@c,c
 27283  017FD4  0E00               	movlw	0
 27284  017FD6  6E02               	movwf	i2_isdigit$3141,c
 27285  017FD8  0E3A               	movlw	58
 27286  017FDA  6003               	cpfslt	i2isdigit@c,c
 27287  017FDC  D005               	goto	i2l1874
 27288  017FDE  0E2F               	movlw	47
 27289  017FE0  6403               	cpfsgt	i2isdigit@c,c
 27290  017FE2  D002               	goto	i2l1874
 27291  017FE4  0E01               	movlw	1
 27292  017FE6  6E02               	movwf	i2_isdigit$3141,c
 27293  017FE8                     i2l1874:
 27294  017FE8  C002  F001         	movff	i2_isdigit$3141,??i2_isdigit
 27295  017FEC  3001               	rrcf	??i2_isdigit,w,c
 27296  017FEE  0012               	return	
 27297  017FF0                     __end_ofi2_isdigit:
 27298                           	opt stack 0
 27299                           tosu	equ	0xFFF
 27300                           tosh	equ	0xFFE
 27301                           tosl	equ	0xFFD
 27302                           pclatu	equ	0xFFB
 27303                           pclath	equ	0xFFA
 27304                           tblptru	equ	0xFF8
 27305                           tblptrh	equ	0xFF7
 27306                           tblptrl	equ	0xFF6
 27307                           tablat	equ	0xFF5
 27308                           prodh	equ	0xFF4
 27309                           prodl	equ	0xFF3
 27310                           intcon	equ	0xFF2
 27311                           indf0	equ	0xFEF
 27312                           postinc0	equ	0xFEE
 27313                           fsr0h	equ	0xFEA
 27314                           fsr0l	equ	0xFE9
 27315                           wreg	equ	0xFE8
 27316                           indf1	equ	0xFE7
 27317                           postdec1	equ	0xFE5
 27318                           plusw1	equ	0xFE3
 27319                           fsr1h	equ	0xFE2
 27320                           fsr1l	equ	0xFE1
 27321                           bsr	equ	0xFE0
 27322                           indf2	equ	0xFDF
 27323                           postinc2	equ	0xFDE
 27324                           postdec2	equ	0xFDD
 27325                           plusw2	equ	0xFDB
 27326                           fsr2h	equ	0xFDA
 27327                           fsr2l	equ	0xFD9
 27328                           status	equ	0xFD8
 27329                           
 27330 ;; *************** function i2_fround *****************
 27331 ;; Defined at:
 27332 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27333 ;; Parameters:    Size  Location     Type
 27334 ;;  prec            1    wreg     unsigned char 
 27335 ;; Auto vars:     Size  Location     Type
 27336 ;;  prec            1   84[COMRAM] unsigned char 
 27337 ;; Return value:  Size  Location     Type
 27338 ;;                  4   72[COMRAM] unsigned char 
 27339 ;; Registers used:
 27340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27341 ;; Tracked objects:
 27342 ;;		On entry : 0/0
 27343 ;;		On exit  : 0/0
 27344 ;;		Unchanged: 0/0
 27345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27347 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27349 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27350 ;;Total ram usage:       13 bytes
 27351 ;; Hardware stack levels used:    1
 27352 ;; Hardware stack levels required when called:    1
 27353 ;; This function calls:
 27354 ;;		i2___awdiv
 27355 ;;		i2___awmod
 27356 ;;		i2___flmul
 27357 ;; This function is called by:
 27358 ;;		i2_printf
 27359 ;; This function uses a non-reentrant model
 27360 ;;
 27361                           
 27362                           	psect	text90
 27363  0155B8                     __ptext90:
 27364                           	opt stack 0
 27365  0155B8                     i2_fround:
 27366                           	opt stack 15
 27367                           
 27368                           ;incstack = 0
 27369                           ;i2fround@prec stored from wreg
 27370  0155B8  6E55               	movwf	i2fround@prec,c
 27371                           
 27372                           ;doprnt.c: 413: if(prec>=110)
 27373  0155BA  0E6D               	movlw	109
 27374  0155BC  6455               	cpfsgt	i2fround@prec,c
 27375  0155BE  D0B5               	goto	i2l1334
 27376                           
 27377                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27378  0155C0  0E00               	movlw	0
 27379  0155C2  6E0A               	movwf	i2___awdiv@divisor+1,c
 27380  0155C4  0E0A               	movlw	10
 27381  0155C6  6E09               	movwf	i2___awdiv@divisor,c
 27382  0155C8  0E00               	movlw	0
 27383  0155CA  6E04               	movwf	i2___awmod@divisor+1,c
 27384  0155CC  0E64               	movlw	100
 27385  0155CE  6E03               	movwf	i2___awmod@divisor,c
 27386  0155D0  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27387  0155D4  6A02               	clrf	i2___awmod@dividend+1,c
 27388  0155D6  EC5B  F0BA         	call	i2___awmod	;wreg free
 27389  0155DA  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 27390  0155DE  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 27391  0155E2  ECA4  F0B8         	call	i2___awdiv	;wreg free
 27392  0155E6  90D8               	bcf	status,0,c
 27393  0155E8  3607               	rlcf	?i2___awdiv,f,c
 27394  0155EA  3608               	rlcf	?i2___awdiv+1,f,c
 27395  0155EC  90D8               	bcf	status,0,c
 27396  0155EE  3607               	rlcf	?i2___awdiv,f,c
 27397  0155F0  3608               	rlcf	?i2___awdiv+1,f,c
 27398  0155F2  0E24               	movlw	36
 27399  0155F4  2607               	addwf	?i2___awdiv,f,c
 27400  0155F6  0E00               	movlw	0
 27401  0155F8  2208               	addwfc	?i2___awdiv+1,f,c
 27402  0155FA  0EED               	movlw	low __npowers_
 27403  0155FC  2407               	addwf	?i2___awdiv,w,c
 27404  0155FE  6EF6               	movwf	tblptrl,c
 27405  015600  0EEB               	movlw	high __npowers_
 27406  015602  2008               	addwfc	?i2___awdiv+1,w,c
 27407  015604  6EF7               	movwf	tblptrh,c
 27408  015606                     	if	1	;There are 3 active tblptr bytes
 27409  015606  6AF8               	clrf	tblptru,c
 27410  015608  0E00               	movlw	low (__mediumconst shr (0+16))
 27411  01560A  22F8               	addwfc	tblptru,f,c
 27412  01560C                     	endif
 27413  01560C  0009               	tblrd		*+
 27414  01560E  CFF5 F034          	movff	tablat,i2___flmul@a
 27415  015612  0009               	tblrd		*+
 27416  015614  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27417  015618  0009               	tblrd		*+
 27418  01561A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27419  01561E  000A               	tblrd		*-
 27420  015620  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27421  015624  0E00               	movlw	0
 27422  015626  6E0A               	movwf	i2___awdiv@divisor+1,c
 27423  015628  0E64               	movlw	100
 27424  01562A  6E09               	movwf	i2___awdiv@divisor,c
 27425  01562C  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27426  015630  6A08               	clrf	i2___awdiv@dividend+1,c
 27427  015632  ECA4  F0B8         	call	i2___awdiv	;wreg free
 27428  015636  90D8               	bcf	status,0,c
 27429  015638  3607               	rlcf	?i2___awdiv,f,c
 27430  01563A  3608               	rlcf	?i2___awdiv+1,f,c
 27431  01563C  90D8               	bcf	status,0,c
 27432  01563E  3607               	rlcf	?i2___awdiv,f,c
 27433  015640  3608               	rlcf	?i2___awdiv+1,f,c
 27434  015642  0E48               	movlw	72
 27435  015644  2607               	addwf	?i2___awdiv,f,c
 27436  015646  0E00               	movlw	0
 27437  015648  2208               	addwfc	?i2___awdiv+1,f,c
 27438  01564A  0EED               	movlw	low __npowers_
 27439  01564C  2407               	addwf	?i2___awdiv,w,c
 27440  01564E  6EF6               	movwf	tblptrl,c
 27441  015650  0EEB               	movlw	high __npowers_
 27442  015652  2008               	addwfc	?i2___awdiv+1,w,c
 27443  015654  6EF7               	movwf	tblptrh,c
 27444  015656                     	if	1	;There are 3 active tblptr bytes
 27445  015656  6AF8               	clrf	tblptru,c
 27446  015658  0E00               	movlw	low (__mediumconst shr (0+16))
 27447  01565A  22F8               	addwfc	tblptru,f,c
 27448  01565C                     	endif
 27449  01565C  0009               	tblrd		*+
 27450  01565E  CFF5 F030          	movff	tablat,i2___flmul@b
 27451  015662  0009               	tblrd		*+
 27452  015664  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27453  015668  0009               	tblrd		*+
 27454  01566A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27455  01566E  000A               	tblrd		*-
 27456  015670  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27457  015674  EC7B  F09D         	call	i2___flmul	;wreg free
 27458  015678  C030  F051         	movff	?i2___flmul,i2_fround$4061
 27459  01567C  C031  F052         	movff	?i2___flmul+1,i2_fround$4061+1
 27460  015680  C032  F053         	movff	?i2___flmul+2,i2_fround$4061+2
 27461  015684  C033  F054         	movff	?i2___flmul+3,i2_fround$4061+3
 27462                           
 27463                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27464  015688  0E00               	movlw	0
 27465  01568A  6E04               	movwf	i2___awmod@divisor+1,c
 27466  01568C  0E0A               	movlw	10
 27467  01568E  6E03               	movwf	i2___awmod@divisor,c
 27468  015690  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27469  015694  6A02               	clrf	i2___awmod@dividend+1,c
 27470  015696  EC5B  F0BA         	call	i2___awmod	;wreg free
 27471  01569A  90D8               	bcf	status,0,c
 27472  01569C  3601               	rlcf	?i2___awmod,f,c
 27473  01569E  3602               	rlcf	?i2___awmod+1,f,c
 27474  0156A0  90D8               	bcf	status,0,c
 27475  0156A2  3601               	rlcf	?i2___awmod,f,c
 27476  0156A4  3602               	rlcf	?i2___awmod+1,f,c
 27477  0156A6  0EED               	movlw	low __npowers_
 27478  0156A8  2401               	addwf	?i2___awmod,w,c
 27479  0156AA  6EF6               	movwf	tblptrl,c
 27480  0156AC  0EEB               	movlw	high __npowers_
 27481  0156AE  2002               	addwfc	?i2___awmod+1,w,c
 27482  0156B0  6EF7               	movwf	tblptrh,c
 27483  0156B2                     	if	1	;There are 3 active tblptr bytes
 27484  0156B2  6AF8               	clrf	tblptru,c
 27485  0156B4  0E00               	movlw	low (__mediumconst shr (0+16))
 27486  0156B6  22F8               	addwfc	tblptru,f,c
 27487  0156B8                     	endif
 27488  0156B8  0009               	tblrd		*+
 27489  0156BA  CFF5 F034          	movff	tablat,i2___flmul@a
 27490  0156BE  0009               	tblrd		*+
 27491  0156C0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27492  0156C4  0009               	tblrd		*+
 27493  0156C6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27494  0156CA  000A               	tblrd		*-
 27495  0156CC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27496  0156D0  C051  F030         	movff	i2_fround$4061,i2___flmul@b
 27497  0156D4  C052  F031         	movff	i2_fround$4061+1,i2___flmul@b+1
 27498  0156D8  C053  F032         	movff	i2_fround$4061+2,i2___flmul@b+2
 27499  0156DC  C054  F033         	movff	i2_fround$4061+3,i2___flmul@b+3
 27500  0156E0  EC7B  F09D         	call	i2___flmul	;wreg free
 27501  0156E4  C030  F04D         	movff	?i2___flmul,i2_fround$4062
 27502  0156E8  C031  F04E         	movff	?i2___flmul+1,i2_fround$4062+1
 27503  0156EC  C032  F04F         	movff	?i2___flmul+2,i2_fround$4062+2
 27504  0156F0  C033  F050         	movff	?i2___flmul+3,i2_fround$4062+3
 27505                           
 27506                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27507  0156F4  C04D  F030         	movff	i2_fround$4062,i2___flmul@b
 27508  0156F8  C04E  F031         	movff	i2_fround$4062+1,i2___flmul@b+1
 27509  0156FC  C04F  F032         	movff	i2_fround$4062+2,i2___flmul@b+2
 27510  015700  C050  F033         	movff	i2_fround$4062+3,i2___flmul@b+3
 27511  015704  0E00               	movlw	0
 27512  015706  6E34               	movwf	i2___flmul@a,c
 27513  015708  0E00               	movlw	0
 27514  01570A  6E35               	movwf	i2___flmul@a+1,c
 27515  01570C  0E00               	movlw	0
 27516  01570E  6E36               	movwf	i2___flmul@a+2,c
 27517  015710  0E3F               	movlw	63
 27518  015712  6E37               	movwf	i2___flmul@a+3,c
 27519  015714  EC7B  F09D         	call	i2___flmul	;wreg free
 27520  015718  C030  F049         	movff	?i2___flmul,?i2_fround
 27521  01571C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 27522  015720  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 27523  015724  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 27524  015728  0012               	return	
 27525  01572A                     i2l1334:
 27526                           
 27527                           ;doprnt.c: 415: else if(prec > 10)
 27528  01572A  0E0A               	movlw	10
 27529  01572C  6455               	cpfsgt	i2fround@prec,c
 27530  01572E  D071               	goto	i2l1337
 27531                           
 27532                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27533  015730  0E00               	movlw	0
 27534  015732  6E04               	movwf	i2___awmod@divisor+1,c
 27535  015734  0E0A               	movlw	10
 27536  015736  6E03               	movwf	i2___awmod@divisor,c
 27537  015738  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27538  01573C  6A02               	clrf	i2___awmod@dividend+1,c
 27539  01573E  EC5B  F0BA         	call	i2___awmod	;wreg free
 27540  015742  90D8               	bcf	status,0,c
 27541  015744  3601               	rlcf	?i2___awmod,f,c
 27542  015746  3602               	rlcf	?i2___awmod+1,f,c
 27543  015748  90D8               	bcf	status,0,c
 27544  01574A  3601               	rlcf	?i2___awmod,f,c
 27545  01574C  3602               	rlcf	?i2___awmod+1,f,c
 27546  01574E  0EED               	movlw	low __npowers_
 27547  015750  2401               	addwf	?i2___awmod,w,c
 27548  015752  6EF6               	movwf	tblptrl,c
 27549  015754  0EEB               	movlw	high __npowers_
 27550  015756  2002               	addwfc	?i2___awmod+1,w,c
 27551  015758  6EF7               	movwf	tblptrh,c
 27552  01575A                     	if	1	;There are 3 active tblptr bytes
 27553  01575A  6AF8               	clrf	tblptru,c
 27554  01575C  0E00               	movlw	low (__mediumconst shr (0+16))
 27555  01575E  22F8               	addwfc	tblptru,f,c
 27556  015760                     	endif
 27557  015760  0009               	tblrd		*+
 27558  015762  CFF5 F034          	movff	tablat,i2___flmul@a
 27559  015766  0009               	tblrd		*+
 27560  015768  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27561  01576C  0009               	tblrd		*+
 27562  01576E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27563  015772  000A               	tblrd		*-
 27564  015774  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27565  015778  0E00               	movlw	0
 27566  01577A  6E0A               	movwf	i2___awdiv@divisor+1,c
 27567  01577C  0E0A               	movlw	10
 27568  01577E  6E09               	movwf	i2___awdiv@divisor,c
 27569  015780  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27570  015784  6A08               	clrf	i2___awdiv@dividend+1,c
 27571  015786  ECA4  F0B8         	call	i2___awdiv	;wreg free
 27572  01578A  90D8               	bcf	status,0,c
 27573  01578C  3607               	rlcf	?i2___awdiv,f,c
 27574  01578E  3608               	rlcf	?i2___awdiv+1,f,c
 27575  015790  90D8               	bcf	status,0,c
 27576  015792  3607               	rlcf	?i2___awdiv,f,c
 27577  015794  3608               	rlcf	?i2___awdiv+1,f,c
 27578  015796  0E24               	movlw	36
 27579  015798  2607               	addwf	?i2___awdiv,f,c
 27580  01579A  0E00               	movlw	0
 27581  01579C  2208               	addwfc	?i2___awdiv+1,f,c
 27582  01579E  0EED               	movlw	low __npowers_
 27583  0157A0  2407               	addwf	?i2___awdiv,w,c
 27584  0157A2  6EF6               	movwf	tblptrl,c
 27585  0157A4  0EEB               	movlw	high __npowers_
 27586  0157A6  2008               	addwfc	?i2___awdiv+1,w,c
 27587  0157A8  6EF7               	movwf	tblptrh,c
 27588  0157AA                     	if	1	;There are 3 active tblptr bytes
 27589  0157AA  6AF8               	clrf	tblptru,c
 27590  0157AC  0E00               	movlw	low (__mediumconst shr (0+16))
 27591  0157AE  22F8               	addwfc	tblptru,f,c
 27592  0157B0                     	endif
 27593  0157B0  0009               	tblrd		*+
 27594  0157B2  CFF5 F030          	movff	tablat,i2___flmul@b
 27595  0157B6  0009               	tblrd		*+
 27596  0157B8  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27597  0157BC  0009               	tblrd		*+
 27598  0157BE  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27599  0157C2  000A               	tblrd		*-
 27600  0157C4  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27601  0157C8  EC7B  F09D         	call	i2___flmul	;wreg free
 27602  0157CC  C030  F051         	movff	?i2___flmul,i2_fround$4061
 27603  0157D0  C031  F052         	movff	?i2___flmul+1,i2_fround$4061+1
 27604  0157D4  C032  F053         	movff	?i2___flmul+2,i2_fround$4061+2
 27605  0157D8  C033  F054         	movff	?i2___flmul+3,i2_fround$4061+3
 27606                           
 27607                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27608  0157DC  C051  F030         	movff	i2_fround$4061,i2___flmul@b
 27609  0157E0  C052  F031         	movff	i2_fround$4061+1,i2___flmul@b+1
 27610  0157E4  C053  F032         	movff	i2_fround$4061+2,i2___flmul@b+2
 27611  0157E8  C054  F033         	movff	i2_fround$4061+3,i2___flmul@b+3
 27612  0157EC  0E00               	movlw	0
 27613  0157EE  6E34               	movwf	i2___flmul@a,c
 27614  0157F0  0E00               	movlw	0
 27615  0157F2  6E35               	movwf	i2___flmul@a+1,c
 27616  0157F4  0E00               	movlw	0
 27617  0157F6  6E36               	movwf	i2___flmul@a+2,c
 27618  0157F8  0E3F               	movlw	63
 27619  0157FA  6E37               	movwf	i2___flmul@a+3,c
 27620  0157FC  EC7B  F09D         	call	i2___flmul	;wreg free
 27621  015800  C030  F049         	movff	?i2___flmul,?i2_fround
 27622  015804  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 27623  015808  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 27624  01580C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 27625  015810  0012               	return	
 27626  015812                     i2l1337:
 27627                           
 27628                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27629  015812  5055               	movf	i2fround@prec,w,c
 27630  015814  0D04               	mullw	4
 27631  015816  0EED               	movlw	low __npowers_
 27632  015818  24F3               	addwf	prodl,w,c
 27633  01581A  6EF6               	movwf	tblptrl,c
 27634  01581C  0EEB               	movlw	high __npowers_
 27635  01581E  20F4               	addwfc	prodh,w,c
 27636  015820  6EF7               	movwf	tblptrh,c
 27637  015822                     	if	1	;There are 3 active tblptr bytes
 27638  015822  6AF8               	clrf	tblptru,c
 27639  015824  0E00               	movlw	low (__mediumconst shr (0+16))
 27640  015826  22F8               	addwfc	tblptru,f,c
 27641  015828                     	endif
 27642  015828  0009               	tblrd		*+
 27643  01582A  CFF5 F030          	movff	tablat,i2___flmul@b
 27644  01582E  0009               	tblrd		*+
 27645  015830  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27646  015834  0009               	tblrd		*+
 27647  015836  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27648  01583A  000A               	tblrd		*-
 27649  01583C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27650  015840  0E00               	movlw	0
 27651  015842  6E34               	movwf	i2___flmul@a,c
 27652  015844  0E00               	movlw	0
 27653  015846  6E35               	movwf	i2___flmul@a+1,c
 27654  015848  0E00               	movlw	0
 27655  01584A  6E36               	movwf	i2___flmul@a+2,c
 27656  01584C  0E3F               	movlw	63
 27657  01584E  6E37               	movwf	i2___flmul@a+3,c
 27658  015850  EC7B  F09D         	call	i2___flmul	;wreg free
 27659  015854  C030  F049         	movff	?i2___flmul,?i2_fround
 27660  015858  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 27661  01585C  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 27662  015860  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 27663  015864  0012               	return	
 27664  015866                     __end_ofi2_fround:
 27665                           	opt stack 0
 27666                           tosu	equ	0xFFF
 27667                           tosh	equ	0xFFE
 27668                           tosl	equ	0xFFD
 27669                           pclatu	equ	0xFFB
 27670                           pclath	equ	0xFFA
 27671                           tblptru	equ	0xFF8
 27672                           tblptrh	equ	0xFF7
 27673                           tblptrl	equ	0xFF6
 27674                           tablat	equ	0xFF5
 27675                           prodh	equ	0xFF4
 27676                           prodl	equ	0xFF3
 27677                           intcon	equ	0xFF2
 27678                           indf0	equ	0xFEF
 27679                           postinc0	equ	0xFEE
 27680                           fsr0h	equ	0xFEA
 27681                           fsr0l	equ	0xFE9
 27682                           wreg	equ	0xFE8
 27683                           indf1	equ	0xFE7
 27684                           postdec1	equ	0xFE5
 27685                           plusw1	equ	0xFE3
 27686                           fsr1h	equ	0xFE2
 27687                           fsr1l	equ	0xFE1
 27688                           bsr	equ	0xFE0
 27689                           indf2	equ	0xFDF
 27690                           postinc2	equ	0xFDE
 27691                           postdec2	equ	0xFDD
 27692                           plusw2	equ	0xFDB
 27693                           fsr2h	equ	0xFDA
 27694                           fsr2l	equ	0xFD9
 27695                           status	equ	0xFD8
 27696                           
 27697 ;; *************** function i2___awmod *****************
 27698 ;; Defined at:
 27699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 27700 ;; Parameters:    Size  Location     Type
 27701 ;;  dividend        2    0[COMRAM] int 
 27702 ;;  divisor         2    2[COMRAM] int 
 27703 ;; Auto vars:     Size  Location     Type
 27704 ;;  __awmod         1    5[COMRAM] unsigned char 
 27705 ;;  __awmod         1    4[COMRAM] unsigned char 
 27706 ;; Return value:  Size  Location     Type
 27707 ;;                  2    0[COMRAM] int 
 27708 ;; Registers used:
 27709 ;;		wreg, status,2, status,0
 27710 ;; Tracked objects:
 27711 ;;		On entry : 0/0
 27712 ;;		On exit  : 0/0
 27713 ;;		Unchanged: 0/0
 27714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27719 ;;Total ram usage:        6 bytes
 27720 ;; Hardware stack levels used:    1
 27721 ;; This function calls:
 27722 ;;		Nothing
 27723 ;; This function is called by:
 27724 ;;		i2_fround
 27725 ;;		i2_scale
 27726 ;; This function uses a non-reentrant model
 27727 ;;
 27728                           
 27729                           	psect	text91
 27730  0174B6                     __ptext91:
 27731                           	opt stack 0
 27732  0174B6                     i2___awmod:
 27733                           	opt stack 15
 27734                           
 27735                           ;incstack = 0
 27736  0174B6  0E00               	movlw	0
 27737  0174B8  6E06               	movwf	i2___awmod@sign,c
 27738  0174BA  AE02               	btfss	i2___awmod@dividend+1,7,c
 27739  0174BC  D006               	goto	i2l1679
 27740  0174BE  6C01               	negf	i2___awmod@dividend,c
 27741  0174C0  1E02               	comf	i2___awmod@dividend+1,f,c
 27742  0174C2  B0D8               	btfsc	status,0,c
 27743  0174C4  2A02               	incf	i2___awmod@dividend+1,f,c
 27744  0174C6  0E01               	movlw	1
 27745  0174C8  6E06               	movwf	i2___awmod@sign,c
 27746  0174CA                     i2l1679:
 27747  0174CA  AE04               	btfss	i2___awmod@divisor+1,7,c
 27748  0174CC  D004               	goto	i2l1680
 27749  0174CE  6C03               	negf	i2___awmod@divisor,c
 27750  0174D0  1E04               	comf	i2___awmod@divisor+1,f,c
 27751  0174D2  B0D8               	btfsc	status,0,c
 27752  0174D4  2A04               	incf	i2___awmod@divisor+1,f,c
 27753  0174D6                     i2l1680:
 27754  0174D6  5003               	movf	i2___awmod@divisor,w,c
 27755  0174D8  1004               	iorwf	i2___awmod@divisor+1,w,c
 27756  0174DA  B4D8               	btfsc	status,2,c
 27757  0174DC  D018               	goto	i2l1687
 27758  0174DE  0E01               	movlw	1
 27759  0174E0  6E05               	movwf	i2___awmod@counter,c
 27760  0174E2  D004               	goto	i2l1682
 27761  0174E4  90D8               	bcf	status,0,c
 27762  0174E6  3603               	rlcf	i2___awmod@divisor,f,c
 27763  0174E8  3604               	rlcf	i2___awmod@divisor+1,f,c
 27764  0174EA  2A05               	incf	i2___awmod@counter,f,c
 27765  0174EC                     i2l1682:
 27766  0174EC  AE04               	btfss	i2___awmod@divisor+1,7,c
 27767  0174EE  D7FA               	goto	i2l1683
 27768  0174F0                     i2u1482_40:
 27769  0174F0  5003               	movf	i2___awmod@divisor,w,c
 27770  0174F2  5C01               	subwf	i2___awmod@dividend,w,c
 27771  0174F4  5004               	movf	i2___awmod@divisor+1,w,c
 27772  0174F6  5802               	subwfb	i2___awmod@dividend+1,w,c
 27773  0174F8  A0D8               	btfss	status,0,c
 27774  0174FA  D004               	goto	i2l1686
 27775  0174FC  5003               	movf	i2___awmod@divisor,w,c
 27776  0174FE  5E01               	subwf	i2___awmod@dividend,f,c
 27777  017500  5004               	movf	i2___awmod@divisor+1,w,c
 27778  017502  5A02               	subwfb	i2___awmod@dividend+1,f,c
 27779  017504                     i2l1686:
 27780  017504  90D8               	bcf	status,0,c
 27781  017506  3204               	rrcf	i2___awmod@divisor+1,f,c
 27782  017508  3203               	rrcf	i2___awmod@divisor,f,c
 27783  01750A  2E05               	decfsz	i2___awmod@counter,f,c
 27784  01750C  D7F1               	goto	i2u1482_40
 27785  01750E                     i2l1687:
 27786  01750E  5006               	movf	i2___awmod@sign,w,c
 27787  017510  B4D8               	btfsc	status,2,c
 27788  017512  D004               	goto	i2l1688
 27789  017514  6C01               	negf	i2___awmod@dividend,c
 27790  017516  1E02               	comf	i2___awmod@dividend+1,f,c
 27791  017518  B0D8               	btfsc	status,0,c
 27792  01751A  2A02               	incf	i2___awmod@dividend+1,f,c
 27793  01751C                     i2l1688:
 27794  01751C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 27795  017520  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 27796  017524  0012               	return	
 27797  017526                     __end_ofi2___awmod:
 27798                           	opt stack 0
 27799                           tosu	equ	0xFFF
 27800                           tosh	equ	0xFFE
 27801                           tosl	equ	0xFFD
 27802                           pclatu	equ	0xFFB
 27803                           pclath	equ	0xFFA
 27804                           tblptru	equ	0xFF8
 27805                           tblptrh	equ	0xFF7
 27806                           tblptrl	equ	0xFF6
 27807                           tablat	equ	0xFF5
 27808                           prodh	equ	0xFF4
 27809                           prodl	equ	0xFF3
 27810                           intcon	equ	0xFF2
 27811                           indf0	equ	0xFEF
 27812                           postinc0	equ	0xFEE
 27813                           fsr0h	equ	0xFEA
 27814                           fsr0l	equ	0xFE9
 27815                           wreg	equ	0xFE8
 27816                           indf1	equ	0xFE7
 27817                           postdec1	equ	0xFE5
 27818                           plusw1	equ	0xFE3
 27819                           fsr1h	equ	0xFE2
 27820                           fsr1l	equ	0xFE1
 27821                           bsr	equ	0xFE0
 27822                           indf2	equ	0xFDF
 27823                           postinc2	equ	0xFDE
 27824                           postdec2	equ	0xFDD
 27825                           plusw2	equ	0xFDB
 27826                           fsr2h	equ	0xFDA
 27827                           fsr2l	equ	0xFD9
 27828                           status	equ	0xFD8
 27829                           
 27830 ;; *************** function i2___awdiv *****************
 27831 ;; Defined at:
 27832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 27833 ;; Parameters:    Size  Location     Type
 27834 ;;  dividend        2    6[COMRAM] int 
 27835 ;;  divisor         2    8[COMRAM] int 
 27836 ;; Auto vars:     Size  Location     Type
 27837 ;;  __awdiv         2   12[COMRAM] int 
 27838 ;;  __awdiv         1   11[COMRAM] unsigned char 
 27839 ;;  __awdiv         1   10[COMRAM] unsigned char 
 27840 ;; Return value:  Size  Location     Type
 27841 ;;                  2    6[COMRAM] int 
 27842 ;; Registers used:
 27843 ;;		wreg, status,2, status,0
 27844 ;; Tracked objects:
 27845 ;;		On entry : 0/0
 27846 ;;		On exit  : 0/0
 27847 ;;		Unchanged: 0/0
 27848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27850 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27853 ;;Total ram usage:        8 bytes
 27854 ;; Hardware stack levels used:    1
 27855 ;; This function calls:
 27856 ;;		Nothing
 27857 ;; This function is called by:
 27858 ;;		i2_fround
 27859 ;;		i2_scale
 27860 ;;		i2_printf
 27861 ;; This function uses a non-reentrant model
 27862 ;;
 27863                           
 27864                           	psect	text92
 27865  017148                     __ptext92:
 27866                           	opt stack 0
 27867  017148                     i2___awdiv:
 27868                           	opt stack 15
 27869                           
 27870                           ;incstack = 0
 27871  017148  0E00               	movlw	0
 27872  01714A  6E0C               	movwf	i2___awdiv@sign,c
 27873  01714C  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27874  01714E  D006               	goto	i2l1666
 27875  017150  6C09               	negf	i2___awdiv@divisor,c
 27876  017152  1E0A               	comf	i2___awdiv@divisor+1,f,c
 27877  017154  B0D8               	btfsc	status,0,c
 27878  017156  2A0A               	incf	i2___awdiv@divisor+1,f,c
 27879  017158  0E01               	movlw	1
 27880  01715A  6E0C               	movwf	i2___awdiv@sign,c
 27881  01715C                     i2l1666:
 27882  01715C  AE08               	btfss	i2___awdiv@dividend+1,7,c
 27883  01715E  D006               	goto	i2l1667
 27884  017160  6C07               	negf	i2___awdiv@dividend,c
 27885  017162  1E08               	comf	i2___awdiv@dividend+1,f,c
 27886  017164  B0D8               	btfsc	status,0,c
 27887  017166  2A08               	incf	i2___awdiv@dividend+1,f,c
 27888  017168  0E01               	movlw	1
 27889  01716A  1A0C               	xorwf	i2___awdiv@sign,f,c
 27890  01716C                     i2l1667:
 27891  01716C  0E00               	movlw	0
 27892  01716E  6E0E               	movwf	i2___awdiv@quotient+1,c
 27893  017170  0E00               	movlw	0
 27894  017172  6E0D               	movwf	i2___awdiv@quotient,c
 27895  017174  5009               	movf	i2___awdiv@divisor,w,c
 27896  017176  100A               	iorwf	i2___awdiv@divisor+1,w,c
 27897  017178  B4D8               	btfsc	status,2,c
 27898  01717A  D01C               	goto	i2l1674
 27899  01717C  0E01               	movlw	1
 27900  01717E  6E0B               	movwf	i2___awdiv@counter,c
 27901  017180  D004               	goto	i2l1669
 27902  017182  90D8               	bcf	status,0,c
 27903  017184  3609               	rlcf	i2___awdiv@divisor,f,c
 27904  017186  360A               	rlcf	i2___awdiv@divisor+1,f,c
 27905  017188  2A0B               	incf	i2___awdiv@counter,f,c
 27906  01718A                     i2l1669:
 27907  01718A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27908  01718C  D7FA               	goto	i2l1670
 27909  01718E                     i2u1476_40:
 27910  01718E  90D8               	bcf	status,0,c
 27911  017190  360D               	rlcf	i2___awdiv@quotient,f,c
 27912  017192  360E               	rlcf	i2___awdiv@quotient+1,f,c
 27913  017194  5009               	movf	i2___awdiv@divisor,w,c
 27914  017196  5C07               	subwf	i2___awdiv@dividend,w,c
 27915  017198  500A               	movf	i2___awdiv@divisor+1,w,c
 27916  01719A  5808               	subwfb	i2___awdiv@dividend+1,w,c
 27917  01719C  A0D8               	btfss	status,0,c
 27918  01719E  D005               	goto	i2l1673
 27919  0171A0  5009               	movf	i2___awdiv@divisor,w,c
 27920  0171A2  5E07               	subwf	i2___awdiv@dividend,f,c
 27921  0171A4  500A               	movf	i2___awdiv@divisor+1,w,c
 27922  0171A6  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 27923  0171A8  800D               	bsf	i2___awdiv@quotient,0,c
 27924  0171AA                     i2l1673:
 27925  0171AA  90D8               	bcf	status,0,c
 27926  0171AC  320A               	rrcf	i2___awdiv@divisor+1,f,c
 27927  0171AE  3209               	rrcf	i2___awdiv@divisor,f,c
 27928  0171B0  2E0B               	decfsz	i2___awdiv@counter,f,c
 27929  0171B2  D7ED               	goto	i2u1476_40
 27930  0171B4                     i2l1674:
 27931  0171B4  500C               	movf	i2___awdiv@sign,w,c
 27932  0171B6  B4D8               	btfsc	status,2,c
 27933  0171B8  D004               	goto	i2l1675
 27934  0171BA  6C0D               	negf	i2___awdiv@quotient,c
 27935  0171BC  1E0E               	comf	i2___awdiv@quotient+1,f,c
 27936  0171BE  B0D8               	btfsc	status,0,c
 27937  0171C0  2A0E               	incf	i2___awdiv@quotient+1,f,c
 27938  0171C2                     i2l1675:
 27939  0171C2  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 27940  0171C6  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 27941  0171CA  0012               	return	
 27942  0171CC                     __end_ofi2___awdiv:
 27943                           	opt stack 0
 27944                           tosu	equ	0xFFF
 27945                           tosh	equ	0xFFE
 27946                           tosl	equ	0xFFD
 27947                           pclatu	equ	0xFFB
 27948                           pclath	equ	0xFFA
 27949                           tblptru	equ	0xFF8
 27950                           tblptrh	equ	0xFF7
 27951                           tblptrl	equ	0xFF6
 27952                           tablat	equ	0xFF5
 27953                           prodh	equ	0xFF4
 27954                           prodl	equ	0xFF3
 27955                           intcon	equ	0xFF2
 27956                           indf0	equ	0xFEF
 27957                           postinc0	equ	0xFEE
 27958                           fsr0h	equ	0xFEA
 27959                           fsr0l	equ	0xFE9
 27960                           wreg	equ	0xFE8
 27961                           indf1	equ	0xFE7
 27962                           postdec1	equ	0xFE5
 27963                           plusw1	equ	0xFE3
 27964                           fsr1h	equ	0xFE2
 27965                           fsr1l	equ	0xFE1
 27966                           bsr	equ	0xFE0
 27967                           indf2	equ	0xFDF
 27968                           postinc2	equ	0xFDE
 27969                           postdec2	equ	0xFDD
 27970                           plusw2	equ	0xFDB
 27971                           fsr2h	equ	0xFDA
 27972                           fsr2l	equ	0xFD9
 27973                           status	equ	0xFD8
 27974                           
 27975 ;; *************** function i2__tdiv_to_l_ *****************
 27976 ;; Defined at:
 27977 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;  f1              3    0[COMRAM] float 
 27980 ;;  f2              3    3[COMRAM] float 
 27981 ;; Auto vars:     Size  Location     Type
 27982 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 27983 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 27984 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 27985 ;; Return value:  Size  Location     Type
 27986 ;;                  4    0[COMRAM] unsigned long 
 27987 ;; Registers used:
 27988 ;;		wreg, status,2, status,0
 27989 ;; Tracked objects:
 27990 ;;		On entry : 0/0
 27991 ;;		On exit  : 0/0
 27992 ;;		Unchanged: 0/0
 27993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27994 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27995 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27996 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27997 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27998 ;;Total ram usage:       15 bytes
 27999 ;; Hardware stack levels used:    1
 28000 ;; This function calls:
 28001 ;;		Nothing
 28002 ;; This function is called by:
 28003 ;;		i2_printf
 28004 ;; This function uses a non-reentrant model
 28005 ;;
 28006                           
 28007                           	psect	text93
 28008  0160BE                     __ptext93:
 28009                           	opt stack 0
 28010  0160BE                     i2__tdiv_to_l_:
 28011                           	opt stack 16
 28012                           
 28013                           ;incstack = 0
 28014  0160BE  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 28015  0160C2  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 28016  0160C4  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 28017  0160C6  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 28018  0160C8  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 28019  0160CA  E301               	bnc	u1537_41
 28020  0160CC  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 28021  0160CE                     u1537_41:
 28022  0160CE  5007               	movf	??i2__tdiv_to_l_,w,c
 28023  0160D0  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 28024  0160D2  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28025  0160D4  A4D8               	btfss	status,2,c
 28026  0160D6  D009               	goto	i2l1814
 28027  0160D8  0E00               	movlw	0
 28028  0160DA  6E01               	movwf	?i2__tdiv_to_l_,c
 28029  0160DC  0E00               	movlw	0
 28030  0160DE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28031  0160E0  0E00               	movlw	0
 28032  0160E2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28033  0160E4  0E00               	movlw	0
 28034  0160E6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28035  0160E8  0012               	return	
 28036  0160EA                     i2l1814:
 28037  0160EA  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 28038  0160EE  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 28039  0160F0  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 28040  0160F2  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 28041  0160F4  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 28042  0160F6  E301               	bnc	u1539_41
 28043  0160F8  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 28044  0160FA                     u1539_41:
 28045  0160FA  5007               	movf	??i2__tdiv_to_l_,w,c
 28046  0160FC  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 28047  0160FE  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 28048  016100  A4D8               	btfss	status,2,c
 28049  016102  D009               	goto	i2l1816
 28050  016104  0E00               	movlw	0
 28051  016106  6E01               	movwf	?i2__tdiv_to_l_,c
 28052  016108  0E00               	movlw	0
 28053  01610A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28054  01610C  0E00               	movlw	0
 28055  01610E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28056  016110  0E00               	movlw	0
 28057  016112  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28058  016114  0012               	return	
 28059  016116                     i2l1816:
 28060  016116  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 28061  016118  0EFF               	movlw	255
 28062  01611A  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 28063  01611C  0EFF               	movlw	255
 28064  01611E  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 28065  016120  0E00               	movlw	0
 28066  016122  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 28067  016124  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 28068  016126  0EFF               	movlw	255
 28069  016128  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 28070  01612A  0EFF               	movlw	255
 28071  01612C  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 28072  01612E  0E00               	movlw	0
 28073  016130  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 28074  016132  0E00               	movlw	0
 28075  016134  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 28076  016136  0E00               	movlw	0
 28077  016138  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 28078  01613A  0E00               	movlw	0
 28079  01613C  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 28080  01613E  0E00               	movlw	0
 28081  016140  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 28082  016142  0E7F               	movlw	127
 28083  016144  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 28084  016146  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 28085  016148  0F98               	addlw	152
 28086  01614A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 28087  01614C  0E18               	movlw	24
 28088  01614E  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 28089  016150                     i2l1817:
 28090  016150  90D8               	bcf	status,0,c
 28091  016152  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28092  016154  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28093  016156  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28094  016158  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28095  01615A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 28096  01615C  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 28097  01615E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 28098  016160  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 28099  016162  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 28100  016164  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 28101  016166  A0D8               	btfss	status,0,c
 28102  016168  D007               	goto	i2l1818
 28103  01616A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 28104  01616C  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 28105  01616E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 28106  016170  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 28107  016172  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 28108  016174  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 28109  016176  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 28110  016178                     i2l1818:
 28111  016178  90D8               	bcf	status,0,c
 28112  01617A  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 28113  01617C  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 28114  01617E  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 28115  016180  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 28116  016182  D7E6               	goto	i2l1817
 28117  016184  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 28118  016186  D016               	goto	i2l1820
 28119  016188  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28120  01618A  0A80               	xorlw	128
 28121  01618C  0F97               	addlw	151
 28122  01618E  B0D8               	btfsc	status,0,c
 28123  016190  D009               	goto	i2l1821
 28124  016192  0E00               	movlw	0
 28125  016194  6E01               	movwf	?i2__tdiv_to_l_,c
 28126  016196  0E00               	movlw	0
 28127  016198  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28128  01619A  0E00               	movlw	0
 28129  01619C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28130  01619E  0E00               	movlw	0
 28131  0161A0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28132  0161A2  0012               	return	
 28133  0161A4                     i2l1821:
 28134  0161A4  90D8               	bcf	status,0,c
 28135  0161A6  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 28136  0161A8  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 28137  0161AA  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 28138  0161AC  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 28139  0161AE  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 28140  0161B0  D7F9               	goto	i2l1821
 28141  0161B2  D015               	goto	i2u1545_40
 28142  0161B4                     i2l1820:
 28143  0161B4  0E17               	movlw	23
 28144  0161B6  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 28145  0161B8  D00F               	goto	i2l1826
 28146  0161BA  0E00               	movlw	0
 28147  0161BC  6E01               	movwf	?i2__tdiv_to_l_,c
 28148  0161BE  0E00               	movlw	0
 28149  0161C0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28150  0161C2  0E00               	movlw	0
 28151  0161C4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28152  0161C6  0E00               	movlw	0
 28153  0161C8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28154  0161CA  0012               	return	
 28155  0161CC  90D8               	bcf	status,0,c
 28156  0161CE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28157  0161D0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28158  0161D2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28159  0161D4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28160  0161D6  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 28161  0161D8                     i2l1826:
 28162  0161D8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28163  0161DA  A4D8               	btfss	status,2,c
 28164  0161DC  D7F7               	goto	i2l1827
 28165  0161DE                     i2u1545_40:
 28166  0161DE  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 28167  0161E2  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 28168  0161E6  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 28169  0161EA  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 28170  0161EE  0012               	return		;funcret
 28171  0161F0                     __end_ofi2__tdiv_to_l_:
 28172                           	opt stack 0
 28173                           tosu	equ	0xFFF
 28174                           tosh	equ	0xFFE
 28175                           tosl	equ	0xFFD
 28176                           pclatu	equ	0xFFB
 28177                           pclath	equ	0xFFA
 28178                           tblptru	equ	0xFF8
 28179                           tblptrh	equ	0xFF7
 28180                           tblptrl	equ	0xFF6
 28181                           tablat	equ	0xFF5
 28182                           prodh	equ	0xFF4
 28183                           prodl	equ	0xFF3
 28184                           intcon	equ	0xFF2
 28185                           indf0	equ	0xFEF
 28186                           postinc0	equ	0xFEE
 28187                           fsr0h	equ	0xFEA
 28188                           fsr0l	equ	0xFE9
 28189                           wreg	equ	0xFE8
 28190                           indf1	equ	0xFE7
 28191                           postdec1	equ	0xFE5
 28192                           plusw1	equ	0xFE3
 28193                           fsr1h	equ	0xFE2
 28194                           fsr1l	equ	0xFE1
 28195                           bsr	equ	0xFE0
 28196                           indf2	equ	0xFDF
 28197                           postinc2	equ	0xFDE
 28198                           postdec2	equ	0xFDD
 28199                           plusw2	equ	0xFDB
 28200                           fsr2h	equ	0xFDA
 28201                           fsr2l	equ	0xFD9
 28202                           status	equ	0xFD8
 28203                           
 28204 ;; *************** function i2__div_to_l_ *****************
 28205 ;; Defined at:
 28206 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 28207 ;; Parameters:    Size  Location     Type
 28208 ;;  f1              4    0[COMRAM] unsigned long 
 28209 ;;  f2              4    4[COMRAM] unsigned long 
 28210 ;; Auto vars:     Size  Location     Type
 28211 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 28212 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 28213 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 28214 ;; Return value:  Size  Location     Type
 28215 ;;                  4    0[COMRAM] unsigned long 
 28216 ;; Registers used:
 28217 ;;		wreg, status,2, status,0
 28218 ;; Tracked objects:
 28219 ;;		On entry : 0/0
 28220 ;;		On exit  : 0/0
 28221 ;;		Unchanged: 0/0
 28222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28224 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28226 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28227 ;;Total ram usage:       14 bytes
 28228 ;; Hardware stack levels used:    1
 28229 ;; This function calls:
 28230 ;;		Nothing
 28231 ;; This function is called by:
 28232 ;;		i2_printf
 28233 ;; This function uses a non-reentrant model
 28234 ;;
 28235                           
 28236                           	psect	text94
 28237  01631A                     __ptext94:
 28238                           	opt stack 0
 28239  01631A                     i2__div_to_l_:
 28240                           	opt stack 16
 28241                           
 28242                           ;incstack = 0
 28243  01631A  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 28244  01631C  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 28245  01631E  6E0E               	movwf	i2__div_to_l_@exp1,c
 28246  016320  500E               	movf	i2__div_to_l_@exp1,w,c
 28247  016322  A4D8               	btfss	status,2,c
 28248  016324  D009               	goto	i2l1710
 28249  016326  0E00               	movlw	0
 28250  016328  6E01               	movwf	?i2__div_to_l_,c
 28251  01632A  0E00               	movlw	0
 28252  01632C  6E02               	movwf	?i2__div_to_l_+1,c
 28253  01632E  0E00               	movlw	0
 28254  016330  6E03               	movwf	?i2__div_to_l_+2,c
 28255  016332  0E00               	movlw	0
 28256  016334  6E04               	movwf	?i2__div_to_l_+3,c
 28257  016336  0012               	return	
 28258  016338                     i2l1710:
 28259  016338  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 28260  01633A  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 28261  01633C  6E0D               	movwf	i2__div_to_l_@cntr,c
 28262  01633E  500D               	movf	i2__div_to_l_@cntr,w,c
 28263  016340  A4D8               	btfss	status,2,c
 28264  016342  D009               	goto	i2l1712
 28265  016344  0E00               	movlw	0
 28266  016346  6E01               	movwf	?i2__div_to_l_,c
 28267  016348  0E00               	movlw	0
 28268  01634A  6E02               	movwf	?i2__div_to_l_+1,c
 28269  01634C  0E00               	movlw	0
 28270  01634E  6E03               	movwf	?i2__div_to_l_+2,c
 28271  016350  0E00               	movlw	0
 28272  016352  6E04               	movwf	?i2__div_to_l_+3,c
 28273  016354  0012               	return	
 28274  016356                     i2l1712:
 28275  016356  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 28276  016358  0EFF               	movlw	255
 28277  01635A  1601               	andwf	i2__div_to_l_@f1,f,c
 28278  01635C  0EFF               	movlw	255
 28279  01635E  1602               	andwf	i2__div_to_l_@f1+1,f,c
 28280  016360  0EFF               	movlw	255
 28281  016362  1603               	andwf	i2__div_to_l_@f1+2,f,c
 28282  016364  0E00               	movlw	0
 28283  016366  1604               	andwf	i2__div_to_l_@f1+3,f,c
 28284  016368  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 28285  01636A  0EFF               	movlw	255
 28286  01636C  1605               	andwf	i2__div_to_l_@f2,f,c
 28287  01636E  0EFF               	movlw	255
 28288  016370  1606               	andwf	i2__div_to_l_@f2+1,f,c
 28289  016372  0EFF               	movlw	255
 28290  016374  1607               	andwf	i2__div_to_l_@f2+2,f,c
 28291  016376  0E00               	movlw	0
 28292  016378  1608               	andwf	i2__div_to_l_@f2+3,f,c
 28293  01637A  0E00               	movlw	0
 28294  01637C  6E09               	movwf	i2__div_to_l_@quot,c
 28295  01637E  0E00               	movlw	0
 28296  016380  6E0A               	movwf	i2__div_to_l_@quot+1,c
 28297  016382  0E00               	movlw	0
 28298  016384  6E0B               	movwf	i2__div_to_l_@quot+2,c
 28299  016386  0E00               	movlw	0
 28300  016388  6E0C               	movwf	i2__div_to_l_@quot+3,c
 28301  01638A  0E7F               	movlw	127
 28302  01638C  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 28303  01638E  500D               	movf	i2__div_to_l_@cntr,w,c
 28304  016390  0FA0               	addlw	160
 28305  016392  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 28306  016394  0E20               	movlw	32
 28307  016396  6E0D               	movwf	i2__div_to_l_@cntr,c
 28308  016398  90D8               	bcf	status,0,c
 28309  01639A  3609               	rlcf	i2__div_to_l_@quot,f,c
 28310  01639C  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 28311  01639E  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 28312  0163A0  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 28313  0163A2  5005               	movf	i2__div_to_l_@f2,w,c
 28314  0163A4  5C01               	subwf	i2__div_to_l_@f1,w,c
 28315  0163A6  5006               	movf	i2__div_to_l_@f2+1,w,c
 28316  0163A8  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 28317  0163AA  5007               	movf	i2__div_to_l_@f2+2,w,c
 28318  0163AC  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 28319  0163AE  5008               	movf	i2__div_to_l_@f2+3,w,c
 28320  0163B0  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 28321  0163B2  A0D8               	btfss	status,0,c
 28322  0163B4  D009               	goto	i2l1714
 28323  0163B6  5005               	movf	i2__div_to_l_@f2,w,c
 28324  0163B8  5E01               	subwf	i2__div_to_l_@f1,f,c
 28325  0163BA  5006               	movf	i2__div_to_l_@f2+1,w,c
 28326  0163BC  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 28327  0163BE  5007               	movf	i2__div_to_l_@f2+2,w,c
 28328  0163C0  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 28329  0163C2  5008               	movf	i2__div_to_l_@f2+3,w,c
 28330  0163C4  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 28331  0163C6  8009               	bsf	i2__div_to_l_@quot,0,c
 28332  0163C8                     i2l1714:
 28333  0163C8  90D8               	bcf	status,0,c
 28334  0163CA  3601               	rlcf	i2__div_to_l_@f1,f,c
 28335  0163CC  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 28336  0163CE  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 28337  0163D0  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 28338  0163D2  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 28339  0163D4  D7E1               	goto	i2l1713
 28340  0163D6  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 28341  0163D8  D016               	goto	i2l1716
 28342  0163DA  500E               	movf	i2__div_to_l_@exp1,w,c
 28343  0163DC  0A80               	xorlw	128
 28344  0163DE  0F9F               	addlw	159
 28345  0163E0  B0D8               	btfsc	status,0,c
 28346  0163E2  D009               	goto	i2l1717
 28347  0163E4  0E00               	movlw	0
 28348  0163E6  6E01               	movwf	?i2__div_to_l_,c
 28349  0163E8  0E00               	movlw	0
 28350  0163EA  6E02               	movwf	?i2__div_to_l_+1,c
 28351  0163EC  0E00               	movlw	0
 28352  0163EE  6E03               	movwf	?i2__div_to_l_+2,c
 28353  0163F0  0E00               	movlw	0
 28354  0163F2  6E04               	movwf	?i2__div_to_l_+3,c
 28355  0163F4  0012               	return	
 28356  0163F6                     i2l1717:
 28357  0163F6  90D8               	bcf	status,0,c
 28358  0163F8  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 28359  0163FA  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 28360  0163FC  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 28361  0163FE  3209               	rrcf	i2__div_to_l_@quot,f,c
 28362  016400  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 28363  016402  D7F9               	goto	i2l1717
 28364  016404  D015               	goto	i2u1536_40
 28365  016406                     i2l1716:
 28366  016406  0E1F               	movlw	31
 28367  016408  640E               	cpfsgt	i2__div_to_l_@exp1,c
 28368  01640A  D00F               	goto	i2l1722
 28369  01640C  0E00               	movlw	0
 28370  01640E  6E01               	movwf	?i2__div_to_l_,c
 28371  016410  0E00               	movlw	0
 28372  016412  6E02               	movwf	?i2__div_to_l_+1,c
 28373  016414  0E00               	movlw	0
 28374  016416  6E03               	movwf	?i2__div_to_l_+2,c
 28375  016418  0E00               	movlw	0
 28376  01641A  6E04               	movwf	?i2__div_to_l_+3,c
 28377  01641C  0012               	return	
 28378  01641E  90D8               	bcf	status,0,c
 28379  016420  3609               	rlcf	i2__div_to_l_@quot,f,c
 28380  016422  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 28381  016424  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 28382  016426  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 28383  016428  060E               	decf	i2__div_to_l_@exp1,f,c
 28384  01642A                     i2l1722:
 28385  01642A  500E               	movf	i2__div_to_l_@exp1,w,c
 28386  01642C  A4D8               	btfss	status,2,c
 28387  01642E  D7F7               	goto	i2l1723
 28388  016430                     i2u1536_40:
 28389  016430  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 28390  016434  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 28391  016438  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 28392  01643C  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 28393  016440  0012               	return		;funcret
 28394  016442                     __end_ofi2__div_to_l_:
 28395                           	opt stack 0
 28396                           tosu	equ	0xFFF
 28397                           tosh	equ	0xFFE
 28398                           tosl	equ	0xFFD
 28399                           pclatu	equ	0xFFB
 28400                           pclath	equ	0xFFA
 28401                           tblptru	equ	0xFF8
 28402                           tblptrh	equ	0xFF7
 28403                           tblptrl	equ	0xFF6
 28404                           tablat	equ	0xFF5
 28405                           prodh	equ	0xFF4
 28406                           prodl	equ	0xFF3
 28407                           intcon	equ	0xFF2
 28408                           indf0	equ	0xFEF
 28409                           postinc0	equ	0xFEE
 28410                           fsr0h	equ	0xFEA
 28411                           fsr0l	equ	0xFE9
 28412                           wreg	equ	0xFE8
 28413                           indf1	equ	0xFE7
 28414                           postdec1	equ	0xFE5
 28415                           plusw1	equ	0xFE3
 28416                           fsr1h	equ	0xFE2
 28417                           fsr1l	equ	0xFE1
 28418                           bsr	equ	0xFE0
 28419                           indf2	equ	0xFDF
 28420                           postinc2	equ	0xFDE
 28421                           postdec2	equ	0xFDD
 28422                           plusw2	equ	0xFDB
 28423                           fsr2h	equ	0xFDA
 28424                           fsr2l	equ	0xFD9
 28425                           status	equ	0xFD8
 28426                           
 28427 ;; *************** function i2___wmul *****************
 28428 ;; Defined at:
 28429 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 28430 ;; Parameters:    Size  Location     Type
 28431 ;;  multiplier      2    0[COMRAM] unsigned int 
 28432 ;;  multiplicand    2    2[COMRAM] unsigned int 
 28433 ;; Auto vars:     Size  Location     Type
 28434 ;;  __wmul          2    4[COMRAM] unsigned int 
 28435 ;; Return value:  Size  Location     Type
 28436 ;;                  2    0[COMRAM] unsigned int 
 28437 ;; Registers used:
 28438 ;;		wreg, status,2, status,0, prodl, prodh
 28439 ;; Tracked objects:
 28440 ;;		On entry : 0/0
 28441 ;;		On exit  : 0/0
 28442 ;;		Unchanged: 0/0
 28443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28448 ;;Total ram usage:        6 bytes
 28449 ;; Hardware stack levels used:    1
 28450 ;; This function calls:
 28451 ;;		Nothing
 28452 ;; This function is called by:
 28453 ;;		i2_printf
 28454 ;; This function uses a non-reentrant model
 28455 ;;
 28456                           
 28457                           	psect	text95
 28458  017F46                     __ptext95:
 28459                           	opt stack 0
 28460  017F46                     i2___wmul:
 28461                           	opt stack 16
 28462                           
 28463                           ;incstack = 0
 28464  017F46  5001               	movf	i2___wmul@multiplier,w,c
 28465  017F48  0203               	mulwf	i2___wmul@multiplicand,c
 28466  017F4A  CFF3 F005          	movff	prodl,i2___wmul@product
 28467  017F4E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 28468  017F52  5001               	movf	i2___wmul@multiplier,w,c
 28469  017F54  0204               	mulwf	i2___wmul@multiplicand+1,c
 28470  017F56  50F3               	movf	prodl,w,c
 28471  017F58  2606               	addwf	i2___wmul@product+1,f,c
 28472  017F5A  5002               	movf	i2___wmul@multiplier+1,w,c
 28473  017F5C  0203               	mulwf	i2___wmul@multiplicand,c
 28474  017F5E  50F3               	movf	prodl,w,c
 28475  017F60  2606               	addwf	i2___wmul@product+1,f,c
 28476  017F62  C005  F001         	movff	i2___wmul@product,?i2___wmul
 28477  017F66  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 28478  017F6A  0012               	return	
 28479  017F6C                     __end_ofi2___wmul:
 28480                           	opt stack 0
 28481                           tosu	equ	0xFFF
 28482                           tosh	equ	0xFFE
 28483                           tosl	equ	0xFFD
 28484                           pclatu	equ	0xFFB
 28485                           pclath	equ	0xFFA
 28486                           tblptru	equ	0xFF8
 28487                           tblptrh	equ	0xFF7
 28488                           tblptrl	equ	0xFF6
 28489                           tablat	equ	0xFF5
 28490                           prodh	equ	0xFF4
 28491                           prodl	equ	0xFF3
 28492                           intcon	equ	0xFF2
 28493                           indf0	equ	0xFEF
 28494                           postinc0	equ	0xFEE
 28495                           fsr0h	equ	0xFEA
 28496                           fsr0l	equ	0xFE9
 28497                           wreg	equ	0xFE8
 28498                           indf1	equ	0xFE7
 28499                           postdec1	equ	0xFE5
 28500                           plusw1	equ	0xFE3
 28501                           fsr1h	equ	0xFE2
 28502                           fsr1l	equ	0xFE1
 28503                           bsr	equ	0xFE0
 28504                           indf2	equ	0xFDF
 28505                           postinc2	equ	0xFDE
 28506                           postdec2	equ	0xFDD
 28507                           plusw2	equ	0xFDB
 28508                           fsr2h	equ	0xFDA
 28509                           fsr2l	equ	0xFD9
 28510                           status	equ	0xFD8
 28511                           
 28512 ;; *************** function i2___llmod *****************
 28513 ;; Defined at:
 28514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 28515 ;; Parameters:    Size  Location     Type
 28516 ;;  dividend        4   13[COMRAM] unsigned long 
 28517 ;;  divisor         4   17[COMRAM] unsigned long 
 28518 ;; Auto vars:     Size  Location     Type
 28519 ;;  __llmod         1   21[COMRAM] unsigned char 
 28520 ;; Return value:  Size  Location     Type
 28521 ;;                  4   13[COMRAM] unsigned long 
 28522 ;; Registers used:
 28523 ;;		wreg, status,2, status,0
 28524 ;; Tracked objects:
 28525 ;;		On entry : 0/0
 28526 ;;		On exit  : 0/0
 28527 ;;		Unchanged: 0/0
 28528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28529 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28532 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28533 ;;Total ram usage:        9 bytes
 28534 ;; Hardware stack levels used:    1
 28535 ;; This function calls:
 28536 ;;		Nothing
 28537 ;; This function is called by:
 28538 ;;		i2_printf
 28539 ;; This function uses a non-reentrant model
 28540 ;;
 28541                           
 28542                           	psect	text96
 28543  0176CE                     __ptext96:
 28544                           	opt stack 0
 28545  0176CE                     i2___llmod:
 28546                           	opt stack 16
 28547                           
 28548                           ;incstack = 0
 28549  0176CE  5012               	movf	i2___llmod@divisor,w,c
 28550  0176D0  1013               	iorwf	i2___llmod@divisor+1,w,c
 28551  0176D2  1014               	iorwf	i2___llmod@divisor+2,w,c
 28552  0176D4  1015               	iorwf	i2___llmod@divisor+3,w,c
 28553  0176D6  B4D8               	btfsc	status,2,c
 28554  0176D8  D024               	goto	i2l1915
 28555  0176DA  0E01               	movlw	1
 28556  0176DC  6E16               	movwf	i2___llmod@counter,c
 28557  0176DE  D006               	goto	i2l1910
 28558  0176E0  90D8               	bcf	status,0,c
 28559  0176E2  3612               	rlcf	i2___llmod@divisor,f,c
 28560  0176E4  3613               	rlcf	i2___llmod@divisor+1,f,c
 28561  0176E6  3614               	rlcf	i2___llmod@divisor+2,f,c
 28562  0176E8  3615               	rlcf	i2___llmod@divisor+3,f,c
 28563  0176EA  2A16               	incf	i2___llmod@counter,f,c
 28564  0176EC                     i2l1910:
 28565  0176EC  AE15               	btfss	i2___llmod@divisor+3,7,c
 28566  0176EE  D7F8               	goto	i2l1911
 28567  0176F0                     i2u1552_40:
 28568  0176F0  5012               	movf	i2___llmod@divisor,w,c
 28569  0176F2  5C0E               	subwf	i2___llmod@dividend,w,c
 28570  0176F4  5013               	movf	i2___llmod@divisor+1,w,c
 28571  0176F6  580F               	subwfb	i2___llmod@dividend+1,w,c
 28572  0176F8  5014               	movf	i2___llmod@divisor+2,w,c
 28573  0176FA  5810               	subwfb	i2___llmod@dividend+2,w,c
 28574  0176FC  5015               	movf	i2___llmod@divisor+3,w,c
 28575  0176FE  5811               	subwfb	i2___llmod@dividend+3,w,c
 28576  017700  A0D8               	btfss	status,0,c
 28577  017702  D008               	goto	i2l1914
 28578  017704  5012               	movf	i2___llmod@divisor,w,c
 28579  017706  5E0E               	subwf	i2___llmod@dividend,f,c
 28580  017708  5013               	movf	i2___llmod@divisor+1,w,c
 28581  01770A  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 28582  01770C  5014               	movf	i2___llmod@divisor+2,w,c
 28583  01770E  5A10               	subwfb	i2___llmod@dividend+2,f,c
 28584  017710  5015               	movf	i2___llmod@divisor+3,w,c
 28585  017712  5A11               	subwfb	i2___llmod@dividend+3,f,c
 28586  017714                     i2l1914:
 28587  017714  90D8               	bcf	status,0,c
 28588  017716  3215               	rrcf	i2___llmod@divisor+3,f,c
 28589  017718  3214               	rrcf	i2___llmod@divisor+2,f,c
 28590  01771A  3213               	rrcf	i2___llmod@divisor+1,f,c
 28591  01771C  3212               	rrcf	i2___llmod@divisor,f,c
 28592  01771E  2E16               	decfsz	i2___llmod@counter,f,c
 28593  017720  D7E7               	goto	i2u1552_40
 28594  017722                     i2l1915:
 28595  017722  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 28596  017726  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 28597  01772A  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 28598  01772E  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 28599  017732  0012               	return		;funcret
 28600  017734                     __end_ofi2___llmod:
 28601                           	opt stack 0
 28602                           tosu	equ	0xFFF
 28603                           tosh	equ	0xFFE
 28604                           tosl	equ	0xFFD
 28605                           pclatu	equ	0xFFB
 28606                           pclath	equ	0xFFA
 28607                           tblptru	equ	0xFF8
 28608                           tblptrh	equ	0xFF7
 28609                           tblptrl	equ	0xFF6
 28610                           tablat	equ	0xFF5
 28611                           prodh	equ	0xFF4
 28612                           prodl	equ	0xFF3
 28613                           intcon	equ	0xFF2
 28614                           indf0	equ	0xFEF
 28615                           postinc0	equ	0xFEE
 28616                           fsr0h	equ	0xFEA
 28617                           fsr0l	equ	0xFE9
 28618                           wreg	equ	0xFE8
 28619                           indf1	equ	0xFE7
 28620                           postdec1	equ	0xFE5
 28621                           plusw1	equ	0xFE3
 28622                           fsr1h	equ	0xFE2
 28623                           fsr1l	equ	0xFE1
 28624                           bsr	equ	0xFE0
 28625                           indf2	equ	0xFDF
 28626                           postinc2	equ	0xFDE
 28627                           postdec2	equ	0xFDD
 28628                           plusw2	equ	0xFDB
 28629                           fsr2h	equ	0xFDA
 28630                           fsr2l	equ	0xFD9
 28631                           status	equ	0xFD8
 28632                           
 28633 ;; *************** function i2___lldiv *****************
 28634 ;; Defined at:
 28635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 28636 ;; Parameters:    Size  Location     Type
 28637 ;;  dividend        4    0[COMRAM] unsigned long 
 28638 ;;  divisor         4    4[COMRAM] unsigned long 
 28639 ;; Auto vars:     Size  Location     Type
 28640 ;;  __lldiv         4    8[COMRAM] unsigned long 
 28641 ;;  __lldiv         1   12[COMRAM] unsigned char 
 28642 ;; Return value:  Size  Location     Type
 28643 ;;                  4    0[COMRAM] unsigned long 
 28644 ;; Registers used:
 28645 ;;		wreg, status,2, status,0
 28646 ;; Tracked objects:
 28647 ;;		On entry : 0/0
 28648 ;;		On exit  : 0/0
 28649 ;;		Unchanged: 0/0
 28650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28651 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28652 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28654 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28655 ;;Total ram usage:       13 bytes
 28656 ;; Hardware stack levels used:    1
 28657 ;; This function calls:
 28658 ;;		Nothing
 28659 ;; This function is called by:
 28660 ;;		i2_printf
 28661 ;; This function uses a non-reentrant model
 28662 ;;
 28663                           
 28664                           	psect	text97
 28665  0171CC                     __ptext97:
 28666                           	opt stack 0
 28667  0171CC                     i2___lldiv:
 28668                           	opt stack 16
 28669                           
 28670                           ;incstack = 0
 28671  0171CC  0E00               	movlw	0
 28672  0171CE  6E09               	movwf	i2___lldiv@quotient,c
 28673  0171D0  0E00               	movlw	0
 28674  0171D2  6E0A               	movwf	i2___lldiv@quotient+1,c
 28675  0171D4  0E00               	movlw	0
 28676  0171D6  6E0B               	movwf	i2___lldiv@quotient+2,c
 28677  0171D8  0E00               	movlw	0
 28678  0171DA  6E0C               	movwf	i2___lldiv@quotient+3,c
 28679  0171DC  5005               	movf	i2___lldiv@divisor,w,c
 28680  0171DE  1006               	iorwf	i2___lldiv@divisor+1,w,c
 28681  0171E0  1007               	iorwf	i2___lldiv@divisor+2,w,c
 28682  0171E2  1008               	iorwf	i2___lldiv@divisor+3,w,c
 28683  0171E4  B4D8               	btfsc	status,2,c
 28684  0171E6  D02A               	goto	i2l1905
 28685  0171E8  0E01               	movlw	1
 28686  0171EA  6E0D               	movwf	i2___lldiv@counter,c
 28687  0171EC  D006               	goto	i2l1900
 28688  0171EE  90D8               	bcf	status,0,c
 28689  0171F0  3605               	rlcf	i2___lldiv@divisor,f,c
 28690  0171F2  3606               	rlcf	i2___lldiv@divisor+1,f,c
 28691  0171F4  3607               	rlcf	i2___lldiv@divisor+2,f,c
 28692  0171F6  3608               	rlcf	i2___lldiv@divisor+3,f,c
 28693  0171F8  2A0D               	incf	i2___lldiv@counter,f,c
 28694  0171FA                     i2l1900:
 28695  0171FA  AE08               	btfss	i2___lldiv@divisor+3,7,c
 28696  0171FC  D7F8               	goto	i2l1901
 28697  0171FE                     i2u1549_40:
 28698  0171FE  90D8               	bcf	status,0,c
 28699  017200  3609               	rlcf	i2___lldiv@quotient,f,c
 28700  017202  360A               	rlcf	i2___lldiv@quotient+1,f,c
 28701  017204  360B               	rlcf	i2___lldiv@quotient+2,f,c
 28702  017206  360C               	rlcf	i2___lldiv@quotient+3,f,c
 28703  017208  5005               	movf	i2___lldiv@divisor,w,c
 28704  01720A  5C01               	subwf	i2___lldiv@dividend,w,c
 28705  01720C  5006               	movf	i2___lldiv@divisor+1,w,c
 28706  01720E  5802               	subwfb	i2___lldiv@dividend+1,w,c
 28707  017210  5007               	movf	i2___lldiv@divisor+2,w,c
 28708  017212  5803               	subwfb	i2___lldiv@dividend+2,w,c
 28709  017214  5008               	movf	i2___lldiv@divisor+3,w,c
 28710  017216  5804               	subwfb	i2___lldiv@dividend+3,w,c
 28711  017218  A0D8               	btfss	status,0,c
 28712  01721A  D009               	goto	i2l1904
 28713  01721C  5005               	movf	i2___lldiv@divisor,w,c
 28714  01721E  5E01               	subwf	i2___lldiv@dividend,f,c
 28715  017220  5006               	movf	i2___lldiv@divisor+1,w,c
 28716  017222  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 28717  017224  5007               	movf	i2___lldiv@divisor+2,w,c
 28718  017226  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 28719  017228  5008               	movf	i2___lldiv@divisor+3,w,c
 28720  01722A  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 28721  01722C  8009               	bsf	i2___lldiv@quotient,0,c
 28722  01722E                     i2l1904:
 28723  01722E  90D8               	bcf	status,0,c
 28724  017230  3208               	rrcf	i2___lldiv@divisor+3,f,c
 28725  017232  3207               	rrcf	i2___lldiv@divisor+2,f,c
 28726  017234  3206               	rrcf	i2___lldiv@divisor+1,f,c
 28727  017236  3205               	rrcf	i2___lldiv@divisor,f,c
 28728  017238  2E0D               	decfsz	i2___lldiv@counter,f,c
 28729  01723A  D7E1               	goto	i2u1549_40
 28730  01723C                     i2l1905:
 28731  01723C  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 28732  017240  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 28733  017244  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 28734  017248  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 28735  01724C  0012               	return		;funcret
 28736  01724E                     __end_ofi2___lldiv:
 28737                           	opt stack 0
 28738                           tosu	equ	0xFFF
 28739                           tosh	equ	0xFFE
 28740                           tosl	equ	0xFFD
 28741                           pclatu	equ	0xFFB
 28742                           pclath	equ	0xFFA
 28743                           tblptru	equ	0xFF8
 28744                           tblptrh	equ	0xFF7
 28745                           tblptrl	equ	0xFF6
 28746                           tablat	equ	0xFF5
 28747                           prodh	equ	0xFF4
 28748                           prodl	equ	0xFF3
 28749                           intcon	equ	0xFF2
 28750                           indf0	equ	0xFEF
 28751                           postinc0	equ	0xFEE
 28752                           fsr0h	equ	0xFEA
 28753                           fsr0l	equ	0xFE9
 28754                           wreg	equ	0xFE8
 28755                           indf1	equ	0xFE7
 28756                           postdec1	equ	0xFE5
 28757                           plusw1	equ	0xFE3
 28758                           fsr1h	equ	0xFE2
 28759                           fsr1l	equ	0xFE1
 28760                           bsr	equ	0xFE0
 28761                           indf2	equ	0xFDF
 28762                           postinc2	equ	0xFDE
 28763                           postdec2	equ	0xFDD
 28764                           plusw2	equ	0xFDB
 28765                           fsr2h	equ	0xFDA
 28766                           fsr2l	equ	0xFD9
 28767                           status	equ	0xFD8
 28768                           
 28769 ;; *************** function _ADCC_ISR *****************
 28770 ;; Defined at:
 28771 ;;		line 297 in file "mcc_generated_files/adcc.c"
 28772 ;; Parameters:    Size  Location     Type
 28773 ;;		None
 28774 ;; Auto vars:     Size  Location     Type
 28775 ;;		None
 28776 ;; Return value:  Size  Location     Type
 28777 ;;                  1    wreg      void 
 28778 ;; Registers used:
 28779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28780 ;; Tracked objects:
 28781 ;;		On entry : 0/0
 28782 ;;		On exit  : 0/0
 28783 ;;		Unchanged: 0/0
 28784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28789 ;;Total ram usage:        0 bytes
 28790 ;; Hardware stack levels used:    1
 28791 ;; Hardware stack levels required when called:    7
 28792 ;; This function calls:
 28793 ;;		Absolute function
 28794 ;;		_ADCC_DefaultInterruptHandler
 28795 ;;		_ADCPostProcessingCallback
 28796 ;; This function is called by:
 28797 ;;		_INTERRUPT_InterruptManagerHigh
 28798 ;; This function uses a non-reentrant model
 28799 ;;
 28800                           
 28801                           	psect	text98
 28802  017ED2                     __ptext98:
 28803                           	opt stack 0
 28804  017ED2                     _ADCC_ISR:
 28805                           	opt stack 11
 28806                           
 28807                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 28808                           
 28809                           ;incstack = 0
 28810  017ED2  010E               	movlb	14	; () banked
 28811  017ED4  9134               	bcf	52,0,b	;volatile
 28812                           
 28813                           ; BSR set to: 14
 28814                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 28815  017ED6  0102               	movlb	2	; () banked
 28816  017ED8  5166               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28817  017EDA  1167               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28818  017EDC  1168               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28819  017EDE  B4D8               	btfsc	status,2,c
 28820  017EE0  0012               	return	
 28821                           
 28822                           ; BSR set to: 2
 28823                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 28824  017EE2  D801               	call	i2u1752_48
 28825  017EE4  0012               	return	
 28826  017EE6                     i2u1752_48:
 28827  017EE6  0005               	push	
 28828  017EE8  6EFA               	movwf	pclath,c
 28829  017EEA  5166               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28830  017EEC  6EFD               	movwf	tosl,c
 28831  017EEE  5167               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28832  017EF0  6EFE               	movwf	tosh,c
 28833  017EF2  5168               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28834  017EF4  6EFF               	movwf	tosu,c
 28835  017EF6  50FA               	movf	pclath,w,c
 28836  017EF8  0012               	return		;indir
 28837  017EFA                     __end_of_ADCC_ISR:
 28838                           	opt stack 0
 28839                           tosu	equ	0xFFF
 28840                           tosh	equ	0xFFE
 28841                           tosl	equ	0xFFD
 28842                           pclatu	equ	0xFFB
 28843                           pclath	equ	0xFFA
 28844                           tblptru	equ	0xFF8
 28845                           tblptrh	equ	0xFF7
 28846                           tblptrl	equ	0xFF6
 28847                           tablat	equ	0xFF5
 28848                           prodh	equ	0xFF4
 28849                           prodl	equ	0xFF3
 28850                           intcon	equ	0xFF2
 28851                           indf0	equ	0xFEF
 28852                           postinc0	equ	0xFEE
 28853                           fsr0h	equ	0xFEA
 28854                           fsr0l	equ	0xFE9
 28855                           wreg	equ	0xFE8
 28856                           indf1	equ	0xFE7
 28857                           postdec1	equ	0xFE5
 28858                           plusw1	equ	0xFE3
 28859                           fsr1h	equ	0xFE2
 28860                           fsr1l	equ	0xFE1
 28861                           bsr	equ	0xFE0
 28862                           indf2	equ	0xFDF
 28863                           postinc2	equ	0xFDE
 28864                           postdec2	equ	0xFDD
 28865                           plusw2	equ	0xFDB
 28866                           fsr2h	equ	0xFDA
 28867                           fsr2l	equ	0xFD9
 28868                           status	equ	0xFD8
 28869                           
 28870 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28871 ;; Defined at:
 28872 ;;		line 310 in file "mcc_generated_files/adcc.c"
 28873 ;; Parameters:    Size  Location     Type
 28874 ;;		None
 28875 ;; Auto vars:     Size  Location     Type
 28876 ;;		None
 28877 ;; Return value:  Size  Location     Type
 28878 ;;                  1    wreg      void 
 28879 ;; Registers used:
 28880 ;;		None
 28881 ;; Tracked objects:
 28882 ;;		On entry : 0/0
 28883 ;;		On exit  : 0/0
 28884 ;;		Unchanged: 0/0
 28885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28890 ;;Total ram usage:        0 bytes
 28891 ;; Hardware stack levels used:    1
 28892 ;; This function calls:
 28893 ;;		Nothing
 28894 ;; This function is called by:
 28895 ;;		_ADCC_Initialize
 28896 ;;		_ADCC_ISR
 28897 ;; This function uses a non-reentrant model
 28898 ;;
 28899                           
 28900                           	psect	text99
 28901  01818C                     __ptext99:
 28902                           	opt stack 0
 28903  01818C                     _ADCC_DefaultInterruptHandler:
 28904                           	opt stack 17
 28905                           
 28906                           ;incstack = 0
 28907  01818C  0012               	return		;funcret
 28908  01818E                     __end_of_ADCC_DefaultInterruptHandler:
 28909                           	opt stack 0
 28910                           tosu	equ	0xFFF
 28911                           tosh	equ	0xFFE
 28912                           tosl	equ	0xFFD
 28913                           pclatu	equ	0xFFB
 28914                           pclath	equ	0xFFA
 28915                           tblptru	equ	0xFF8
 28916                           tblptrh	equ	0xFF7
 28917                           tblptrl	equ	0xFF6
 28918                           tablat	equ	0xFF5
 28919                           prodh	equ	0xFF4
 28920                           prodl	equ	0xFF3
 28921                           intcon	equ	0xFF2
 28922                           indf0	equ	0xFEF
 28923                           postinc0	equ	0xFEE
 28924                           fsr0h	equ	0xFEA
 28925                           fsr0l	equ	0xFE9
 28926                           wreg	equ	0xFE8
 28927                           indf1	equ	0xFE7
 28928                           postdec1	equ	0xFE5
 28929                           plusw1	equ	0xFE3
 28930                           fsr1h	equ	0xFE2
 28931                           fsr1l	equ	0xFE1
 28932                           bsr	equ	0xFE0
 28933                           indf2	equ	0xFDF
 28934                           postinc2	equ	0xFDE
 28935                           postdec2	equ	0xFDD
 28936                           plusw2	equ	0xFDB
 28937                           fsr2h	equ	0xFDA
 28938                           fsr2l	equ	0xFD9
 28939                           status	equ	0xFD8
 28940                           
 28941 ;; *************** function _ADCPostProcessingCallback *****************
 28942 ;; Defined at:
 28943 ;;		line 160 in file "main.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;		None
 28946 ;; Auto vars:     Size  Location     Type
 28947 ;;  current_adc_    1  117[BANK0 ] enum E17421
 28948 ;; Return value:  Size  Location     Type
 28949 ;;                  1    wreg      void 
 28950 ;; Registers used:
 28951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28952 ;; Tracked objects:
 28953 ;;		On entry : 0/0
 28954 ;;		On exit  : 0/0
 28955 ;;		Unchanged: 0/0
 28956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28958 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28960 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28961 ;;Total ram usage:       21 bytes
 28962 ;; Hardware stack levels used:    1
 28963 ;; Hardware stack levels required when called:    6
 28964 ;; This function calls:
 28965 ;;		_ADCC_GetConversionResult
 28966 ;;		_currentMeasuredToPeak
 28967 ;;		_peakToRMS
 28968 ;;		i2_TMR7_StopTimer
 28969 ;;		i2___fladd
 28970 ;;		i2___fldiv
 28971 ;;		i2___flge
 28972 ;;		i2___flmul
 28973 ;;		i2___flneg
 28974 ;;		i2___xxtofl
 28975 ;; This function is called by:
 28976 ;;		_main
 28977 ;;		_ADCC_ISR
 28978 ;; This function uses a non-reentrant model
 28979 ;;
 28980                           
 28981                           	psect	text100
 28982  0122EA                     __ptext100:
 28983                           	opt stack 0
 28984  0122EA                     _ADCPostProcessingCallback:
 28985                           	opt stack 11
 28986                           
 28987                           ;main.c: 163: adcc_channel_t current_adc_channel = ADPCH;
 28988                           
 28989                           ;incstack = 0
 28990  0122EA  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 28991                           
 28992                           ;main.c: 166: switch (current_adc_channel) {
 28993  0122EE  D3FE               	goto	i2l941
 28994  0122F0                     
 28995                           ;main.c: 170: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 28996  0122F0  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 28997  0122F4  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 28998  0122F8  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 28999  0122FC  6A07               	clrf	i2___xxtofl@val+2,c
 29000  0122FE  6A08               	clrf	i2___xxtofl@val+3,c
 29001  012300  0E00               	movlw	0
 29002  012302  EC1D  F0AF         	call	i2___xxtofl
 29003  012306  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29004  01230A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29005  01230E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29006  012312  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29007  012316  0E0D               	movlw	13
 29008  012318  6E34               	movwf	i2___flmul@a,c
 29009  01231A  0E68               	movlw	104
 29010  01231C  6E35               	movwf	i2___flmul@a+1,c
 29011  01231E  0E53               	movlw	83
 29012  012320  6E36               	movwf	i2___flmul@a+2,c
 29013  012322  0E3B               	movlw	59
 29014  012324  6E37               	movwf	i2___flmul@a+3,c
 29015  012326  EC7B  F09D         	call	i2___flmul	;wreg free
 29016  01232A  C030  F1D7         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 29017  01232E  C031  F1D8         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 29018  012332  C032  F1D9         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 29019  012336  C033  F1DA         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 29020                           
 29021                           ;main.c: 172: if (AVSS_ADC_Result > 0.01) {
 29022  01233A  0E0A               	movlw	10
 29023  01233C  6E34               	movwf	i2___flge@ff1,c
 29024  01233E  0ED7               	movlw	215
 29025  012340  6E35               	movwf	i2___flge@ff1+1,c
 29026  012342  0E23               	movlw	35
 29027  012344  6E36               	movwf	i2___flge@ff1+2,c
 29028  012346  0E3C               	movlw	60
 29029  012348  6E37               	movwf	i2___flge@ff1+3,c
 29030  01234A  C1D7  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 29031  01234E  C1D8  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 29032  012352  C1D9  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 29033  012356  C1DA  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 29034  01235A  ECB2  F0B2         	call	i2___flge	;wreg free
 29035  01235E  B0D8               	btfsc	status,0,c
 29036  012360  0012               	return	
 29037                           
 29038                           ;main.c: 174: LATFbits.LATF3 = 1;
 29039  012362  867E               	bsf	3966,3,c	;volatile
 29040                           
 29041                           ;main.c: 175: adc_error_flag = 1;
 29042  012364  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29043                           
 29044                           ;main.c: 177: PIE5bits.TMR7IE == 0;
 29045  012366  010E               	movlb	14	; () banked
 29046  012368  512E               	movf	46,w,b	;volatile
 29047                           
 29048                           ; BSR set to: 14
 29049                           ;main.c: 178: TMR7_StopTimer();
 29050  01236A  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29051                           
 29052                           ;main.c: 181: }
 29053                           ;main.c: 183: break;
 29054                           
 29055                           ;main.c: 179: return;
 29056  01236E  0012               	return	
 29057  012370                     
 29058                           ;main.c: 188: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 29059  012370  0E0D               	movlw	13
 29060  012372  6E34               	movwf	i2___flmul@a,c
 29061  012374  0E68               	movlw	104
 29062  012376  6E35               	movwf	i2___flmul@a+1,c
 29063  012378  0E53               	movlw	83
 29064  01237A  6E36               	movwf	i2___flmul@a+2,c
 29065  01237C  0E3B               	movlw	59
 29066  01237E  6E37               	movwf	i2___flmul@a+3,c
 29067  012380  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29068  012384  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29069  012388  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29070  01238C  6A07               	clrf	i2___xxtofl@val+2,c
 29071  01238E  6A08               	clrf	i2___xxtofl@val+3,c
 29072  012390  0E00               	movlw	0
 29073  012392  EC1D  F0AF         	call	i2___xxtofl
 29074  012396  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29075  01239A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29076  01239E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29077  0123A2  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29078  0123A6  EC7B  F09D         	call	i2___flmul	;wreg free
 29079  0123AA  C030  F056         	movff	?i2___flmul,i2___fladd@b
 29080  0123AE  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 29081  0123B2  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 29082  0123B6  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 29083  0123BA  C1D7  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 29084  0123BE  C1D8  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 29085  0123C2  C1D9  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 29086  0123C6  C1DA  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 29087  0123CA  ECC2  F0A0         	call	i2___fladd	;wreg free
 29088  0123CE  C056  F0F5         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 29089  0123D2  C057  F0F6         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 29090  0123D6  C058  F0F7         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 29091  0123DA  C059  F0F8         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 29092                           
 29093                           ;main.c: 189: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 29094  0123DE  0E6F               	movlw	111
 29095  0123E0  6E13               	movwf	i2___fldiv@b,c
 29096  0123E2  0E12               	movlw	18
 29097  0123E4  6E14               	movwf	i2___fldiv@b+1,c
 29098  0123E6  0E03               	movlw	3
 29099  0123E8  6E15               	movwf	i2___fldiv@b+2,c
 29100  0123EA  0E40               	movlw	64
 29101  0123EC  6E16               	movwf	i2___fldiv@b+3,c
 29102  0123EE  C0F5  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 29103  0123F2  C0F6  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 29104  0123F6  C0F7  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 29105  0123FA  C0F8  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 29106  0123FE  EC82  F0A9         	call	i2___fldiv	;wreg free
 29107  012402  C013  F25C         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 29108  012406  C014  F25D         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 29109  01240A  C015  F25E         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 29110  01240E  C016  F25F         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 29111                           
 29112                           ;main.c: 191: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0) {
 29113  012412  0E00               	movlw	0
 29114  012414  6E34               	movwf	i2___flge@ff1,c
 29115  012416  0E00               	movlw	0
 29116  012418  6E35               	movwf	i2___flge@ff1+1,c
 29117  01241A  0E20               	movlw	32
 29118  01241C  6E36               	movwf	i2___flge@ff1+2,c
 29119  01241E  0E40               	movlw	64
 29120  012420  6E37               	movwf	i2___flge@ff1+3,c
 29121  012422  C0F5  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 29122  012426  C0F6  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 29123  01242A  C0F7  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 29124  01242E  C0F8  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 29125  012432  ECB2  F0B2         	call	i2___flge	;wreg free
 29126  012436  A0D8               	btfss	status,0,c
 29127  012438  D014               	goto	i2u1559_40
 29128  01243A  C0F5  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 29129  01243E  C0F6  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 29130  012442  C0F7  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 29131  012446  C0F8  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 29132  01244A  0E00               	movlw	0
 29133  01244C  6E38               	movwf	i2___flge@ff2,c
 29134  01244E  0E00               	movlw	0
 29135  012450  6E39               	movwf	i2___flge@ff2+1,c
 29136  012452  0E00               	movlw	0
 29137  012454  6E3A               	movwf	i2___flge@ff2+2,c
 29138  012456  0E40               	movlw	64
 29139  012458  6E3B               	movwf	i2___flge@ff2+3,c
 29140  01245A  ECB2  F0B2         	call	i2___flge	;wreg free
 29141  01245E  B0D8               	btfsc	status,0,c
 29142  012460  0012               	return	
 29143  012462                     i2u1559_40:
 29144                           
 29145                           ;main.c: 193: LATFbits.LATF3 = 1;
 29146  012462  867E               	bsf	3966,3,c	;volatile
 29147                           
 29148                           ;main.c: 194: adc_error_flag = 1;
 29149  012464  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29150                           
 29151                           ;main.c: 196: PIE5bits.TMR7IE == 0;
 29152  012466  010E               	movlb	14	; () banked
 29153  012468  512E               	movf	46,w,b	;volatile
 29154                           
 29155                           ; BSR set to: 14
 29156                           ;main.c: 197: TMR7_StopTimer();
 29157  01246A  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29158                           
 29159                           ;main.c: 200: }
 29160                           ;main.c: 203: break;
 29161                           
 29162                           ;main.c: 198: return;
 29163  01246E  0012               	return	
 29164  012470                     
 29165                           ;main.c: 208: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 29166  012470  C25C  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 29167  012474  C25D  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 29168  012478  C25E  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 29169  01247C  C25F  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 29170  012480  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29171  012484  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29172  012488  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29173  01248C  6A07               	clrf	i2___xxtofl@val+2,c
 29174  01248E  6A08               	clrf	i2___xxtofl@val+3,c
 29175  012490  0E00               	movlw	0
 29176  012492  EC1D  F0AF         	call	i2___xxtofl
 29177  012496  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29178  01249A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29179  01249E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29180  0124A2  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29181  0124A6  EC7B  F09D         	call	i2___flmul	;wreg free
 29182  0124AA  C030  F0DA         	movff	?i2___flmul,_ADCPostProcessingCallback$4051
 29183  0124AE  C031  F0DB         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4051+1
 29184  0124B2  C032  F0DC         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4051+2
 29185  0124B6  C033  F0DD         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4051+3
 29186                           
 29187                           ;main.c: 208: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 29188  0124BA  C0DA  F030         	movff	_ADCPostProcessingCallback$4051,i2___flmul@b
 29189  0124BE  C0DB  F031         	movff	_ADCPostProcessingCallback$4051+1,i2___flmul@b+1
 29190  0124C2  C0DC  F032         	movff	_ADCPostProcessingCallback$4051+2,i2___flmul@b+2
 29191  0124C6  C0DD  F033         	movff	_ADCPostProcessingCallback$4051+3,i2___flmul@b+3
 29192  0124CA  0E0D               	movlw	13
 29193  0124CC  6E34               	movwf	i2___flmul@a,c
 29194  0124CE  0E68               	movlw	104
 29195  0124D0  6E35               	movwf	i2___flmul@a+1,c
 29196  0124D2  0ED3               	movlw	211
 29197  0124D4  6E36               	movwf	i2___flmul@a+2,c
 29198  0124D6  0E3B               	movlw	59
 29199  0124D8  6E37               	movwf	i2___flmul@a+3,c
 29200  0124DA  EC7B  F09D         	call	i2___flmul	;wreg free
 29201  0124DE  C030  F0F0         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 29202  0124E2  C031  F0F1         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 29203  0124E6  C032  F0F2         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 29204  0124EA  C033  F0F3         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 29205                           
 29206                           ;main.c: 210: if (POS3P3_ADC_Result > 3.5) {
 29207  0124EE  0E00               	movlw	0
 29208  0124F0  6E34               	movwf	i2___flge@ff1,c
 29209  0124F2  0E00               	movlw	0
 29210  0124F4  6E35               	movwf	i2___flge@ff1+1,c
 29211  0124F6  0E60               	movlw	96
 29212  0124F8  6E36               	movwf	i2___flge@ff1+2,c
 29213  0124FA  0E40               	movlw	64
 29214  0124FC  6E37               	movwf	i2___flge@ff1+3,c
 29215  0124FE  C0F0  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 29216  012502  C0F1  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 29217  012506  C0F2  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 29218  01250A  C0F3  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 29219  01250E  ECB2  F0B2         	call	i2___flge	;wreg free
 29220  012512  B0D8               	btfsc	status,0,c
 29221  012514  0012               	return	
 29222                           
 29223                           ;main.c: 212: LATFbits.LATF3 = 1;
 29224  012516  867E               	bsf	3966,3,c	;volatile
 29225                           
 29226                           ;main.c: 213: adc_error_flag = 1;
 29227  012518  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29228                           
 29229                           ;main.c: 215: PIE5bits.TMR7IE == 0;
 29230  01251A  010E               	movlb	14	; () banked
 29231  01251C  512E               	movf	46,w,b	;volatile
 29232                           
 29233                           ; BSR set to: 14
 29234                           ;main.c: 216: TMR7_StopTimer();
 29235  01251E  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29236                           
 29237                           ;main.c: 219: }
 29238                           ;main.c: 221: break;
 29239                           
 29240                           ;main.c: 217: return;
 29241  012522  0012               	return	
 29242  012524                     
 29243                           ;main.c: 226: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 29244  012524  0E00               	movlw	0
 29245  012526  6E17               	movwf	i2___fldiv@a,c
 29246  012528  0EC0               	movlw	192
 29247  01252A  6E18               	movwf	i2___fldiv@a+1,c
 29248  01252C  0E7F               	movlw	127
 29249  01252E  6E19               	movwf	i2___fldiv@a+2,c
 29250  012530  0E44               	movlw	68
 29251  012532  6E1A               	movwf	i2___fldiv@a+3,c
 29252  012534  C0F0  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29253  012538  C0F1  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29254  01253C  C0F2  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29255  012540  C0F3  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29256  012544  EC82  F0A9         	call	i2___fldiv	;wreg free
 29257  012548  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29258  01254C  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29259  012550  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29260  012554  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29261  012558  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29262  01255C  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29263  012560  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29264  012564  6A07               	clrf	i2___xxtofl@val+2,c
 29265  012566  6A08               	clrf	i2___xxtofl@val+3,c
 29266  012568  0E00               	movlw	0
 29267  01256A  EC1D  F0AF         	call	i2___xxtofl
 29268  01256E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29269  012572  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29270  012576  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29271  01257A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29272  01257E  EC7B  F09D         	call	i2___flmul	;wreg free
 29273  012582  C030  F0DA         	movff	?i2___flmul,_ADCPostProcessingCallback$4051
 29274  012586  C031  F0DB         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4051+1
 29275  01258A  C032  F0DC         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4051+2
 29276  01258E  C033  F0DD         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4051+3
 29277                           
 29278                           ;main.c: 226: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 29279  012592  C0DA  F030         	movff	_ADCPostProcessingCallback$4051,i2___flmul@b
 29280  012596  C0DB  F031         	movff	_ADCPostProcessingCallback$4051+1,i2___flmul@b+1
 29281  01259A  C0DC  F032         	movff	_ADCPostProcessingCallback$4051+2,i2___flmul@b+2
 29282  01259E  C0DD  F033         	movff	_ADCPostProcessingCallback$4051+3,i2___flmul@b+3
 29283  0125A2  0E35               	movlw	53
 29284  0125A4  6E34               	movwf	i2___flmul@a,c
 29285  0125A6  0E5E               	movlw	94
 29286  0125A8  6E35               	movwf	i2___flmul@a+1,c
 29287  0125AA  0EF2               	movlw	242
 29288  0125AC  6E36               	movwf	i2___flmul@a+2,c
 29289  0125AE  0E3F               	movlw	63
 29290  0125B0  6E37               	movwf	i2___flmul@a+3,c
 29291  0125B2  EC7B  F09D         	call	i2___flmul	;wreg free
 29292  0125B6  C030  F1D3         	movff	?i2___flmul,_Imeas	;volatile
 29293  0125BA  C031  F1D4         	movff	?i2___flmul+1,_Imeas+1	;volatile
 29294  0125BE  C032  F1D5         	movff	?i2___flmul+2,_Imeas+2	;volatile
 29295  0125C2  C033  F1D6         	movff	?i2___flmul+3,_Imeas+3	;volatile
 29296                           
 29297                           ;main.c: 230: if (LATGbits.LATG0 != 1) {
 29298  0125C6  B07F               	btfsc	3967,0,c	;volatile
 29299  0125C8  D0A7               	goto	i2l953
 29300                           
 29301                           ;main.c: 235: if (load_enable) {
 29302  0125CA  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 29303  0125CC  D033               	goto	i2l954
 29304                           
 29305                           ;main.c: 238: if (dimming_period < 0x7FEE) {
 29306  0125CE  0EEE               	movlw	238
 29307  0125D0  0100               	movlb	0	; () banked
 29308  0125D2  5DF9               	subwf	_dimming_period& (0+255),w,b	;volatile
 29309  0125D4  0E7F               	movlw	127
 29310  0125D6  59FA               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 29311  0125D8  B0D8               	btfsc	status,0,c
 29312  0125DA  D009               	goto	i2l955
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;main.c: 240: Ipk = Imeas;
 29316  0125DC  C1D3  F24C         	movff	_Imeas,_Ipk	;volatile
 29317  0125E0  C1D4  F24D         	movff	_Imeas+1,_Ipk+1	;volatile
 29318  0125E4  C1D5  F24E         	movff	_Imeas+2,_Ipk+2	;volatile
 29319  0125E8  C1D6  F24F         	movff	_Imeas+3,_Ipk+3	;volatile
 29320                           
 29321                           ;main.c: 242: }
 29322  0125EC  D01A               	goto	i2l956
 29323  0125EE                     i2l955:
 29324                           
 29325                           ; BSR set to: 0
 29326                           ;main.c: 245: else {
 29327                           ;main.c: 247: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 29328                           
 29329                           ; BSR set to: 0
 29330  0125EE  C1D3  F08F         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 29331  0125F2  C1D4  F090         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 29332  0125F6  C1D5  F091         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 29333  0125FA  C1D6  F092         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 29334  0125FE  C0FB  F093         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 29335  012602  C0FC  F094         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 29336  012606  C0FD  F095         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 29337  01260A  C0FE  F096         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 29338  01260E  ECA7  F0B9         	call	_currentMeasuredToPeak	;wreg free
 29339  012612  C08F  F24C         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 29340  012616  C090  F24D         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 29341  01261A  C091  F24E         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 29342  01261E  C092  F24F         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 29343  012622                     i2l956:
 29344                           
 29345                           ;main.c: 249: }
 29346                           ;main.c: 251: Vpk = Vpk_const;
 29347  012622  C2D5  F250         	movff	_Vpk_const,_Vpk	;volatile
 29348  012626  C2D6  F251         	movff	_Vpk_const+1,_Vpk+1	;volatile
 29349  01262A  C2D7  F252         	movff	_Vpk_const+2,_Vpk+2	;volatile
 29350  01262E  C2D8  F253         	movff	_Vpk_const+3,_Vpk+3	;volatile
 29351                           
 29352                           ;main.c: 253: }
 29353  012632  D011               	goto	i2l957
 29354  012634                     i2l954:
 29355                           
 29356                           ;main.c: 255: else {
 29357                           ;main.c: 257: Ipk = 0.0;
 29358  012634  0E00               	movlw	0
 29359  012636  0102               	movlb	2	; () banked
 29360  012638  6F4C               	movwf	_Ipk& (0+255),b	;volatile
 29361  01263A  0E00               	movlw	0
 29362  01263C  6F4D               	movwf	(_Ipk+1)& (0+255),b	;volatile
 29363  01263E  0E00               	movlw	0
 29364  012640  6F4E               	movwf	(_Ipk+2)& (0+255),b	;volatile
 29365  012642  0E00               	movlw	0
 29366  012644  6F4F               	movwf	(_Ipk+3)& (0+255),b	;volatile
 29367                           
 29368                           ;main.c: 258: Vpk = 0.0;
 29369  012646  0E00               	movlw	0
 29370  012648  6F50               	movwf	_Vpk& (0+255),b	;volatile
 29371  01264A  0E00               	movlw	0
 29372  01264C  6F51               	movwf	(_Vpk+1)& (0+255),b	;volatile
 29373  01264E  0E00               	movlw	0
 29374  012650  6F52               	movwf	(_Vpk+2)& (0+255),b	;volatile
 29375  012652  0E00               	movlw	0
 29376  012654  6F53               	movwf	(_Vpk+3)& (0+255),b	;volatile
 29377  012656                     i2l957:
 29378                           
 29379                           ;main.c: 260: }
 29380                           ;main.c: 262: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 29381                           
 29382                           ; BSR set to: 2
 29383  012656  C0FB  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29384  01265A  C0FC  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29385  01265E  C0FD  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29386  012662  C0FE  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 29387  012666  C24C  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 29388  01266A  C24D  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29389  01266E  C24E  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29390  012672  C24F  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 29391  012676  EC33  F0AC         	call	_peakToRMS	;wreg free
 29392  01267A  C0B1  F0D6         	movff	?_peakToRMS,_ADCPostProcessingCallback$4052
 29393  01267E  C0B2  F0D7         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4052+1
 29394  012682  C0B3  F0D8         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4052+2
 29395  012686  C0B4  F0D9         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4052+3
 29396                           
 29397                           ;main.c: 260: }
 29398                           ;main.c: 262: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 29399  01268A  C0D6  F056         	movff	_ADCPostProcessingCallback$4052,i2___fladd@b
 29400  01268E  C0D7  F057         	movff	_ADCPostProcessingCallback$4052+1,i2___fladd@b+1
 29401  012692  C0D8  F058         	movff	_ADCPostProcessingCallback$4052+2,i2___fladd@b+2
 29402  012696  C0D9  F059         	movff	_ADCPostProcessingCallback$4052+3,i2___fladd@b+3
 29403  01269A  C2D1  F05A         	movff	_Irms_offset,i2___fladd@a
 29404  01269E  C2D2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 29405  0126A2  C2D3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 29406  0126A6  C2D4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 29407  0126AA  ECC2  F0A0         	call	i2___fladd	;wreg free
 29408  0126AE  C056  F1CF         	movff	?i2___fladd,_Irms	;volatile
 29409  0126B2  C057  F1D0         	movff	?i2___fladd+1,_Irms+1	;volatile
 29410  0126B6  C058  F1D1         	movff	?i2___fladd+2,_Irms+2	;volatile
 29411  0126BA  C059  F1D2         	movff	?i2___fladd+3,_Irms+3	;volatile
 29412                           
 29413                           ;main.c: 263: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 29414  0126BE  C250  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 29415  0126C2  C251  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 29416  0126C6  C252  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 29417  0126CA  C253  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 29418  0126CE  C0FB  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29419  0126D2  C0FC  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29420  0126D6  C0FD  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29421  0126DA  C0FE  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 29422  0126DE  EC33  F0AC         	call	_peakToRMS	;wreg free
 29423  0126E2  C0B1  F1CB         	movff	?_peakToRMS,_Vrms	;volatile
 29424  0126E6  C0B2  F1CC         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 29425  0126EA  C0B3  F1CD         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 29426  0126EE  C0B4  F1CE         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 29427                           
 29428                           ;main.c: 264: Avg_Power = Vrms * Irms;
 29429  0126F2  C1CB  F030         	movff	_Vrms,i2___flmul@b	;volatile
 29430  0126F6  C1CC  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 29431  0126FA  C1CD  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 29432  0126FE  C1CE  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 29433  012702  C1CF  F034         	movff	_Irms,i2___flmul@a	;volatile
 29434  012706  C1D0  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 29435  01270A  C1D1  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 29436  01270E  C1D2  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 29437  012712  EC7B  F09D         	call	i2___flmul	;wreg free
 29438  012716  D06A               	goto	L16
 29439  012718                     i2l953:
 29440                           
 29441                           ;main.c: 269: else {
 29442                           ;main.c: 271: Ipk = Imeas;
 29443  012718  C1D3  F24C         	movff	_Imeas,_Ipk	;volatile
 29444  01271C  C1D4  F24D         	movff	_Imeas+1,_Ipk+1	;volatile
 29445  012720  C1D5  F24E         	movff	_Imeas+2,_Ipk+2	;volatile
 29446  012724  C1D6  F24F         	movff	_Imeas+3,_Ipk+3	;volatile
 29447                           
 29448                           ;main.c: 272: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 29449  012728  0E00               	movlw	0
 29450  01272A  0100               	movlb	0	; () banked
 29451  01272C  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 29452  01272E  0E00               	movlw	0
 29453  012730  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 29454  012732  0E00               	movlw	0
 29455  012734  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 29456  012736  0E00               	movlw	0
 29457  012738  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 29458  01273A  C24C  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 29459  01273E  C24D  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29460  012742  C24E  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29461  012746  C24F  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 29462  01274A  EC33  F0AC         	call	_peakToRMS	;wreg free
 29463  01274E  C0B1  F0D6         	movff	?_peakToRMS,_ADCPostProcessingCallback$4052
 29464  012752  C0B2  F0D7         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4052+1
 29465  012756  C0B3  F0D8         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4052+2
 29466  01275A  C0B4  F0D9         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4052+3
 29467                           
 29468                           ;main.c: 272: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 29469  01275E  C0D6  F056         	movff	_ADCPostProcessingCallback$4052,i2___fladd@b
 29470  012762  C0D7  F057         	movff	_ADCPostProcessingCallback$4052+1,i2___fladd@b+1
 29471  012766  C0D8  F058         	movff	_ADCPostProcessingCallback$4052+2,i2___fladd@b+2
 29472  01276A  C0D9  F059         	movff	_ADCPostProcessingCallback$4052+3,i2___fladd@b+3
 29473  01276E  C2D1  F05A         	movff	_Irms_offset,i2___fladd@a
 29474  012772  C2D2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 29475  012776  C2D3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 29476  01277A  C2D4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 29477  01277E  ECC2  F0A0         	call	i2___fladd	;wreg free
 29478  012782  C056  F1CF         	movff	?i2___fladd,_Irms	;volatile
 29479  012786  C057  F1D0         	movff	?i2___fladd+1,_Irms+1	;volatile
 29480  01278A  C058  F1D1         	movff	?i2___fladd+2,_Irms+2	;volatile
 29481  01278E  C059  F1D2         	movff	?i2___fladd+3,_Irms+3	;volatile
 29482                           
 29483                           ;main.c: 273: Vrms = peakToRMS(Vpk_const, 0.0);
 29484  012792  C2D5  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 29485  012796  C2D6  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 29486  01279A  C2D7  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 29487  01279E  C2D8  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 29488  0127A2  0E00               	movlw	0
 29489  0127A4  0100               	movlb	0	; () banked
 29490  0127A6  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 29491  0127A8  0E00               	movlw	0
 29492  0127AA  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 29493  0127AC  0E00               	movlw	0
 29494  0127AE  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 29495  0127B0  0E00               	movlw	0
 29496  0127B2  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 29497  0127B4  EC33  F0AC         	call	_peakToRMS	;wreg free
 29498  0127B8  C0B1  F1CB         	movff	?_peakToRMS,_Vrms	;volatile
 29499  0127BC  C0B2  F1CC         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 29500  0127C0  C0B3  F1CD         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 29501  0127C4  C0B4  F1CE         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 29502                           
 29503                           ;main.c: 274: Avg_Power = Vrms * Irms;
 29504  0127C8  C1CB  F030         	movff	_Vrms,i2___flmul@b	;volatile
 29505  0127CC  C1CC  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 29506  0127D0  C1CD  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 29507  0127D4  C1CE  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 29508  0127D8  C1CF  F034         	movff	_Irms,i2___flmul@a	;volatile
 29509  0127DC  C1D0  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 29510  0127E0  C1D1  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 29511  0127E4  C1D2  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 29512  0127E8  EC7B  F09D         	call	i2___flmul	;wreg free
 29513  0127EC                     L16:
 29514  0127EC  C030  F248         	movff	?i2___flmul,_Avg_Power	;volatile
 29515  0127F0  C031  F249         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 29516  0127F4  C032  F24A         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 29517  0127F8  C033  F24B         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 29518                           
 29519                           ;main.c: 276: }
 29520                           ;main.c: 278: if (Irms > 5.0) {
 29521  0127FC  0E00               	movlw	0
 29522  0127FE  6E34               	movwf	i2___flge@ff1,c
 29523  012800  0E00               	movlw	0
 29524  012802  6E35               	movwf	i2___flge@ff1+1,c
 29525  012804  0EA0               	movlw	160
 29526  012806  6E36               	movwf	i2___flge@ff1+2,c
 29527  012808  0E40               	movlw	64
 29528  01280A  6E37               	movwf	i2___flge@ff1+3,c
 29529  01280C  C1CF  F038         	movff	_Irms,i2___flge@ff2	;volatile
 29530  012810  C1D0  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 29531  012814  C1D1  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 29532  012818  C1D2  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 29533  01281C  ECB2  F0B2         	call	i2___flge	;wreg free
 29534  012820  B0D8               	btfsc	status,0,c
 29535  012822  0012               	return	
 29536                           
 29537                           ;main.c: 280: LATFbits.LATF3 = 1;
 29538  012824  867E               	bsf	3966,3,c	;volatile
 29539                           
 29540                           ;main.c: 281: adc_error_flag = 1;
 29541  012826  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29542                           
 29543                           ;main.c: 283: PIE5bits.TMR7IE == 0;
 29544  012828  010E               	movlb	14	; () banked
 29545  01282A  512E               	movf	46,w,b	;volatile
 29546                           
 29547                           ; BSR set to: 14
 29548                           ;main.c: 284: TMR7_StopTimer();
 29549  01282C  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29550                           
 29551                           ;main.c: 287: }
 29552                           ;main.c: 289: break;
 29553                           
 29554                           ;main.c: 285: return;
 29555  012830  0012               	return	
 29556  012832                     
 29557                           ;main.c: 294: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 29558  012832  0E00               	movlw	0
 29559  012834  6E17               	movwf	i2___fldiv@a,c
 29560  012836  0EC0               	movlw	192
 29561  012838  6E18               	movwf	i2___fldiv@a+1,c
 29562  01283A  0E7F               	movlw	127
 29563  01283C  6E19               	movwf	i2___fldiv@a+2,c
 29564  01283E  0E44               	movlw	68
 29565  012840  6E1A               	movwf	i2___fldiv@a+3,c
 29566  012842  C0F0  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29567  012846  C0F1  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29568  01284A  C0F2  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29569  01284E  C0F3  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29570  012852  EC82  F0A9         	call	i2___fldiv	;wreg free
 29571  012856  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29572  01285A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29573  01285E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29574  012862  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29575  012866  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29576  01286A  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29577  01286E  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29578  012872  6A07               	clrf	i2___xxtofl@val+2,c
 29579  012874  6A08               	clrf	i2___xxtofl@val+3,c
 29580  012876  0E00               	movlw	0
 29581  012878  EC1D  F0AF         	call	i2___xxtofl
 29582  01287C  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29583  012880  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29584  012884  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29585  012888  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29586  01288C  EC7B  F09D         	call	i2___flmul	;wreg free
 29587  012890  C030  F0DA         	movff	?i2___flmul,_ADCPostProcessingCallback$4051
 29588  012894  C031  F0DB         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4051+1
 29589  012898  C032  F0DC         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4051+2
 29590  01289C  C033  F0DD         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4051+3
 29591                           
 29592                           ;main.c: 294: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 29593  0128A0  C0DA  F030         	movff	_ADCPostProcessingCallback$4051,i2___flmul@b
 29594  0128A4  C0DB  F031         	movff	_ADCPostProcessingCallback$4051+1,i2___flmul@b+1
 29595  0128A8  C0DC  F032         	movff	_ADCPostProcessingCallback$4051+2,i2___flmul@b+2
 29596  0128AC  C0DD  F033         	movff	_ADCPostProcessingCallback$4051+3,i2___flmul@b+3
 29597  0128B0  0E3E               	movlw	62
 29598  0128B2  6E34               	movwf	i2___flmul@a,c
 29599  0128B4  0EF8               	movlw	248
 29600  0128B6  6E35               	movwf	i2___flmul@a+1,c
 29601  0128B8  0E80               	movlw	128
 29602  0128BA  6E36               	movwf	i2___flmul@a+2,c
 29603  0128BC  0E40               	movlw	64
 29604  0128BE  6E37               	movwf	i2___flmul@a+3,c
 29605  0128C0  EC7B  F09D         	call	i2___flmul	;wreg free
 29606  0128C4  C030  F258         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 29607  0128C8  C031  F259         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 29608  0128CC  C032  F25A         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 29609  0128D0  C033  F25B         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 29610                           
 29611                           ;main.c: 296: if (POS12_ADC_Result > 13.6) {
 29612  0128D4  0E9A               	movlw	154
 29613  0128D6  6E34               	movwf	i2___flge@ff1,c
 29614  0128D8  0E99               	movlw	153
 29615  0128DA  6E35               	movwf	i2___flge@ff1+1,c
 29616  0128DC  0E59               	movlw	89
 29617  0128DE  6E36               	movwf	i2___flge@ff1+2,c
 29618  0128E0  0E41               	movlw	65
 29619  0128E2  6E37               	movwf	i2___flge@ff1+3,c
 29620  0128E4  C258  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 29621  0128E8  C259  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 29622  0128EC  C25A  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 29623  0128F0  C25B  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 29624  0128F4  ECB2  F0B2         	call	i2___flge	;wreg free
 29625  0128F8  B0D8               	btfsc	status,0,c
 29626  0128FA  0012               	return	
 29627                           
 29628                           ;main.c: 298: LATFbits.LATF3 = 1;
 29629  0128FC  867E               	bsf	3966,3,c	;volatile
 29630                           
 29631                           ;main.c: 299: adc_error_flag = 1;
 29632  0128FE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29633                           
 29634                           ;main.c: 301: PIE5bits.TMR7IE == 0;
 29635  012900  010E               	movlb	14	; () banked
 29636  012902  512E               	movf	46,w,b	;volatile
 29637                           
 29638                           ; BSR set to: 14
 29639                           ;main.c: 302: TMR7_StopTimer();
 29640  012904  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29641                           
 29642                           ;main.c: 305: }
 29643                           ;main.c: 307: break;
 29644                           
 29645                           ;main.c: 303: return;
 29646  012908  0012               	return	
 29647  01290A                     
 29648                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29649  01290A  0E00               	movlw	0
 29650  01290C  6E17               	movwf	i2___fldiv@a,c
 29651  01290E  0E00               	movlw	0
 29652  012910  6E18               	movwf	i2___fldiv@a+1,c
 29653  012912  0E00               	movlw	0
 29654  012914  6E19               	movwf	i2___fldiv@a+2,c
 29655  012916  0E40               	movlw	64
 29656  012918  6E1A               	movwf	i2___fldiv@a+3,c
 29657  01291A  C0F0  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29658  01291E  C0F1  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29659  012922  C0F2  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29660  012926  C0F3  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29661  01292A  EC82  F0A9         	call	i2___fldiv	;wreg free
 29662  01292E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29663  012932  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29664  012936  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29665  01293A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29666  01293E  0E00               	movlw	0
 29667  012940  6E5A               	movwf	i2___fladd@a,c
 29668  012942  0E00               	movlw	0
 29669  012944  6E5B               	movwf	i2___fladd@a+1,c
 29670  012946  0E80               	movlw	128
 29671  012948  6E5C               	movwf	i2___fladd@a+2,c
 29672  01294A  0E3F               	movlw	63
 29673  01294C  6E5D               	movwf	i2___fladd@a+3,c
 29674  01294E  0E00               	movlw	0
 29675  012950  6E17               	movwf	i2___fldiv@a,c
 29676  012952  0EC0               	movlw	192
 29677  012954  6E18               	movwf	i2___fldiv@a+1,c
 29678  012956  0E7F               	movlw	127
 29679  012958  6E19               	movwf	i2___fldiv@a+2,c
 29680  01295A  0E44               	movlw	68
 29681  01295C  6E1A               	movwf	i2___fldiv@a+3,c
 29682  01295E  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29683  012962  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29684  012966  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29685  01296A  6A07               	clrf	i2___xxtofl@val+2,c
 29686  01296C  6A08               	clrf	i2___xxtofl@val+3,c
 29687  01296E  0E00               	movlw	0
 29688  012970  EC1D  F0AF         	call	i2___xxtofl
 29689  012974  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 29690  012978  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 29691  01297C  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 29692  012980  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 29693  012984  EC82  F0A9         	call	i2___fldiv	;wreg free
 29694  012988  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 29695  01298C  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 29696  012990  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 29697  012994  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 29698  012998  EC2A  F0BF         	call	i2___flneg	;wreg free
 29699  01299C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 29700  0129A0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 29701  0129A4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 29702  0129A8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 29703  0129AC  ECC2  F0A0         	call	i2___fladd	;wreg free
 29704  0129B0  C056  F030         	movff	?i2___fladd,i2___flmul@b
 29705  0129B4  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 29706  0129B8  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 29707  0129BC  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 29708  0129C0  EC7B  F09D         	call	i2___flmul	;wreg free
 29709  0129C4  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4053
 29710  0129C8  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4053+1
 29711  0129CC  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4053+2
 29712  0129D0  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4053+3
 29713                           
 29714                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29715  0129D4  0EDA               	movlw	218
 29716  0129D6  6E17               	movwf	i2___fldiv@a,c
 29717  0129D8  0E03               	movlw	3
 29718  0129DA  6E18               	movwf	i2___fldiv@a+1,c
 29719  0129DC  0EAD               	movlw	173
 29720  0129DE  6E19               	movwf	i2___fldiv@a+2,c
 29721  0129E0  0E3A               	movlw	58
 29722  0129E2  6E1A               	movwf	i2___fldiv@a+3,c
 29723  0129E4  0E39               	movlw	57
 29724  0129E6  6E5A               	movwf	i2___fladd@a,c
 29725  0129E8  0EB4               	movlw	180
 29726  0129EA  6E5B               	movwf	i2___fladd@a+1,c
 29727  0129EC  0E28               	movlw	40
 29728  0129EE  6E5C               	movwf	i2___fladd@a+2,c
 29729  0129F0  0E3F               	movlw	63
 29730  0129F2  6E5D               	movwf	i2___fladd@a+3,c
 29731  0129F4  C0C9  F02C         	movff	_ADCPostProcessingCallback$4053,i2___flneg@f1
 29732  0129F8  C0CA  F02D         	movff	_ADCPostProcessingCallback$4053+1,i2___flneg@f1+1
 29733  0129FC  C0CB  F02E         	movff	_ADCPostProcessingCallback$4053+2,i2___flneg@f1+2
 29734  012A00  C0CC  F02F         	movff	_ADCPostProcessingCallback$4053+3,i2___flneg@f1+3
 29735  012A04  EC2A  F0BF         	call	i2___flneg	;wreg free
 29736  012A08  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 29737  012A0C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 29738  012A10  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 29739  012A14  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 29740  012A18  ECC2  F0A0         	call	i2___fladd	;wreg free
 29741  012A1C  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 29742  012A20  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 29743  012A24  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 29744  012A28  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 29745  012A2C  EC82  F0A9         	call	i2___fldiv	;wreg free
 29746  012A30  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4054
 29747  012A34  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4054+1
 29748  012A38  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4054+2
 29749  012A3C  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4054+3
 29750                           
 29751                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29752  012A40  C2D9  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 29753  012A44  C2DA  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 29754  012A48  C2DB  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 29755  012A4C  C2DC  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 29756  012A50  C0CD  F056         	movff	_ADCPostProcessingCallback$4054,i2___fladd@b
 29757  012A54  C0CE  F057         	movff	_ADCPostProcessingCallback$4054+1,i2___fladd@b+1
 29758  012A58  C0CF  F058         	movff	_ADCPostProcessingCallback$4054+2,i2___fladd@b+2
 29759  012A5C  C0D0  F059         	movff	_ADCPostProcessingCallback$4054+3,i2___fladd@b+3
 29760  012A60  ECC2  F0A0         	call	i2___fladd	;wreg free
 29761  012A64  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4055
 29762  012A68  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4055+1
 29763  012A6C  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4055+2
 29764  012A70  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4055+3
 29765                           
 29766                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29767  012A74  C0D1  F056         	movff	_ADCPostProcessingCallback$4055,i2___fladd@b
 29768  012A78  C0D2  F057         	movff	_ADCPostProcessingCallback$4055+1,i2___fladd@b+1
 29769  012A7C  C0D3  F058         	movff	_ADCPostProcessingCallback$4055+2,i2___fladd@b+2
 29770  012A80  C0D4  F059         	movff	_ADCPostProcessingCallback$4055+3,i2___fladd@b+3
 29771  012A84  0E00               	movlw	0
 29772  012A86  6E5A               	movwf	i2___fladd@a,c
 29773  012A88  0E00               	movlw	0
 29774  012A8A  6E5B               	movwf	i2___fladd@a+1,c
 29775  012A8C  0E20               	movlw	32
 29776  012A8E  6E5C               	movwf	i2___fladd@a+2,c
 29777  012A90  0EC2               	movlw	194
 29778  012A92  6E5D               	movwf	i2___fladd@a+3,c
 29779  012A94  ECC2  F0A0         	call	i2___fladd	;wreg free
 29780  012A98  C056  F254         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 29781  012A9C  C057  F255         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 29782  012AA0  C058  F256         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 29783  012AA4  C059  F257         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 29784                           
 29785                           ;main.c: 314: if (Temp_ADC_Result > 40.0) {
 29786  012AA8  0E00               	movlw	0
 29787  012AAA  6E34               	movwf	i2___flge@ff1,c
 29788  012AAC  0E00               	movlw	0
 29789  012AAE  6E35               	movwf	i2___flge@ff1+1,c
 29790  012AB0  0E20               	movlw	32
 29791  012AB2  6E36               	movwf	i2___flge@ff1+2,c
 29792  012AB4  0E42               	movlw	66
 29793  012AB6  6E37               	movwf	i2___flge@ff1+3,c
 29794  012AB8  C254  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 29795  012ABC  C255  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 29796  012AC0  C256  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 29797  012AC4  C257  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 29798  012AC8  ECB2  F0B2         	call	i2___flge	;wreg free
 29799  012ACC  B0D8               	btfsc	status,0,c
 29800  012ACE  0012               	return	
 29801                           
 29802                           ;main.c: 316: LATFbits.LATF3 = 1;
 29803  012AD0  867E               	bsf	3966,3,c	;volatile
 29804                           
 29805                           ;main.c: 317: adc_error_flag = 1;
 29806  012AD2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29807                           
 29808                           ;main.c: 319: PIE5bits.TMR7IE == 0;
 29809  012AD4  010E               	movlb	14	; () banked
 29810  012AD6  512E               	movf	46,w,b	;volatile
 29811                           
 29812                           ; BSR set to: 14
 29813                           ;main.c: 320: TMR7_StopTimer();
 29814  012AD8  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29815                           
 29816                           ;main.c: 323: }
 29817                           ;main.c: 325: break;
 29818                           
 29819                           ;main.c: 321: return;
 29820  012ADC  0012               	return	
 29821  012ADE                     i2l964:
 29822                           
 29823                           ; BSR set to: 0
 29824                           ;main.c: 330: LATFbits.LATF3 = 1;
 29825  012ADE  867E               	bsf	3966,3,c	;volatile
 29826                           
 29827                           ;main.c: 331: adc_error_flag = 1;
 29828  012AE0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29829                           
 29830                           ; BSR set to: 0
 29831                           ;main.c: 333: PIE5bits.TMR7IE == 0;
 29832  012AE2  010E               	movlb	14	; () banked
 29833  012AE4  512E               	movf	46,w,b	;volatile
 29834                           
 29835                           ; BSR set to: 14
 29836                           ;main.c: 334: TMR7_StopTimer();
 29837  012AE6  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29838                           
 29839                           ;main.c: 337: }
 29840                           
 29841                           ;main.c: 335: break;
 29842  012AEA  0012               	return	
 29843  012AEC                     i2l941:
 29844  012AEC  0100               	movlb	0	; () banked
 29845  012AEE  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 29846                           
 29847                           ; Switch size 1, requested type "space"
 29848                           ; Number of cases is 6, Range of values is 0 to 63
 29849                           ; switch strategies available:
 29850                           ; Name         Instructions Cycles
 29851                           ; simple_byte           19    10 (average)
 29852                           ;	Chosen strategy is simple_byte
 29853  012AF0  0A00               	xorlw	0	; case 0
 29854  012AF2  B4D8               	btfsc	status,2,c
 29855  012AF4  D517               	goto	i2l952
 29856  012AF6  0A04               	xorlw	4	; case 4
 29857  012AF8  B4D8               	btfsc	status,2,c
 29858  012AFA  D69B               	goto	i2l960
 29859  012AFC  0A26               	xorlw	38	; case 34
 29860  012AFE  B4D8               	btfsc	status,2,c
 29861  012B00  D4B7               	goto	i2l950
 29862  012B02  0A1E               	xorlw	30	; case 60
 29863  012B04  B4D8               	btfsc	status,2,c
 29864  012B06  EF78  F091         	goto	i2l942
 29865  012B0A  0A01               	xorlw	1	; case 61
 29866  012B0C  B4D8               	btfsc	status,2,c
 29867  012B0E  D6FD               	goto	i2l962
 29868  012B10  0A02               	xorlw	2	; case 63
 29869  012B12  B4D8               	btfsc	status,2,c
 29870  012B14  D42D               	goto	i2l946
 29871  012B16  D7E3               	goto	i2l964
 29872  012B18                     __end_of_ADCPostProcessingCallback:
 29873                           	opt stack 0
 29874                           tosu	equ	0xFFF
 29875                           tosh	equ	0xFFE
 29876                           tosl	equ	0xFFD
 29877                           pclatu	equ	0xFFB
 29878                           pclath	equ	0xFFA
 29879                           tblptru	equ	0xFF8
 29880                           tblptrh	equ	0xFF7
 29881                           tblptrl	equ	0xFF6
 29882                           tablat	equ	0xFF5
 29883                           prodh	equ	0xFF4
 29884                           prodl	equ	0xFF3
 29885                           intcon	equ	0xFF2
 29886                           indf0	equ	0xFEF
 29887                           postinc0	equ	0xFEE
 29888                           fsr0h	equ	0xFEA
 29889                           fsr0l	equ	0xFE9
 29890                           wreg	equ	0xFE8
 29891                           indf1	equ	0xFE7
 29892                           postdec1	equ	0xFE5
 29893                           plusw1	equ	0xFE3
 29894                           fsr1h	equ	0xFE2
 29895                           fsr1l	equ	0xFE1
 29896                           bsr	equ	0xFE0
 29897                           indf2	equ	0xFDF
 29898                           postinc2	equ	0xFDE
 29899                           postdec2	equ	0xFDD
 29900                           plusw2	equ	0xFDB
 29901                           fsr2h	equ	0xFDA
 29902                           fsr2l	equ	0xFD9
 29903                           status	equ	0xFD8
 29904                           
 29905 ;; *************** function i2_TMR7_StopTimer *****************
 29906 ;; Defined at:
 29907 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 29908 ;; Parameters:    Size  Location     Type
 29909 ;;		None
 29910 ;; Auto vars:     Size  Location     Type
 29911 ;;		None
 29912 ;; Return value:  Size  Location     Type
 29913 ;;                  1    wreg      void 
 29914 ;; Registers used:
 29915 ;;		None
 29916 ;; Tracked objects:
 29917 ;;		On entry : 0/0
 29918 ;;		On exit  : 0/0
 29919 ;;		Unchanged: 0/0
 29920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29925 ;;Total ram usage:        0 bytes
 29926 ;; Hardware stack levels used:    1
 29927 ;; This function calls:
 29928 ;;		Nothing
 29929 ;; This function is called by:
 29930 ;;		_ADCPostProcessingCallback
 29931 ;; This function uses a non-reentrant model
 29932 ;;
 29933                           
 29934                           	psect	text101
 29935  018180                     __ptext101:
 29936                           	opt stack 0
 29937  018180                     i2_TMR7_StopTimer:
 29938                           	opt stack 16
 29939                           
 29940                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 29941                           
 29942                           ;incstack = 0
 29943  018180  010F               	movlb	15	; () banked
 29944  018182  9130               	bcf	48,0,b	;volatile
 29945                           
 29946                           ; BSR set to: 15
 29947  018184  0012               	return		;funcret
 29948  018186                     __end_ofi2_TMR7_StopTimer:
 29949                           	opt stack 0
 29950                           tosu	equ	0xFFF
 29951                           tosh	equ	0xFFE
 29952                           tosl	equ	0xFFD
 29953                           pclatu	equ	0xFFB
 29954                           pclath	equ	0xFFA
 29955                           tblptru	equ	0xFF8
 29956                           tblptrh	equ	0xFF7
 29957                           tblptrl	equ	0xFF6
 29958                           tablat	equ	0xFF5
 29959                           prodh	equ	0xFF4
 29960                           prodl	equ	0xFF3
 29961                           intcon	equ	0xFF2
 29962                           indf0	equ	0xFEF
 29963                           postinc0	equ	0xFEE
 29964                           fsr0h	equ	0xFEA
 29965                           fsr0l	equ	0xFE9
 29966                           wreg	equ	0xFE8
 29967                           indf1	equ	0xFE7
 29968                           postdec1	equ	0xFE5
 29969                           plusw1	equ	0xFE3
 29970                           fsr1h	equ	0xFE2
 29971                           fsr1l	equ	0xFE1
 29972                           bsr	equ	0xFE0
 29973                           indf2	equ	0xFDF
 29974                           postinc2	equ	0xFDE
 29975                           postdec2	equ	0xFDD
 29976                           plusw2	equ	0xFDB
 29977                           fsr2h	equ	0xFDA
 29978                           fsr2l	equ	0xFD9
 29979                           status	equ	0xFD8
 29980                           
 29981 ;; *************** function _peakToRMS *****************
 29982 ;; Defined at:
 29983 ;;		line 103 in file "main.c"
 29984 ;; Parameters:    Size  Location     Type
 29985 ;;  Peak            4   81[BANK0 ] void 
 29986 ;;  Angle           4   85[BANK0 ] void 
 29987 ;; Auto vars:     Size  Location     Type
 29988 ;;  RMS             4  101[BANK0 ] void 
 29989 ;; Return value:  Size  Location     Type
 29990 ;;                  4   81[BANK0 ] void 
 29991 ;; Registers used:
 29992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29993 ;; Tracked objects:
 29994 ;;		On entry : 0/0
 29995 ;;		On exit  : 0/0
 29996 ;;		Unchanged: 0/0
 29997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29998 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29999 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30001 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30002 ;;Total ram usage:       24 bytes
 30003 ;; Hardware stack levels used:    1
 30004 ;; Hardware stack levels required when called:    5
 30005 ;; This function calls:
 30006 ;;		_acos
 30007 ;;		_sin
 30008 ;;		_sqrt
 30009 ;;		i2___fladd
 30010 ;;		i2___fldiv
 30011 ;;		i2___flmul
 30012 ;;		i2___flneg
 30013 ;; This function is called by:
 30014 ;;		_ADCPostProcessingCallback
 30015 ;; This function uses a non-reentrant model
 30016 ;;
 30017                           
 30018                           	psect	text102
 30019  015866                     __ptext102:
 30020                           	opt stack 0
 30021  015866                     _peakToRMS:
 30022                           	opt stack 11
 30023                           
 30024                           ;main.c: 106: double RMS = 0.0;
 30025                           
 30026                           ; BSR set to: 15
 30027                           ;incstack = 0
 30028  015866  0E00               	movlw	0
 30029  015868  0100               	movlb	0	; () banked
 30030  01586A  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 30031  01586C  0E00               	movlw	0
 30032  01586E  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 30033  015870  0E00               	movlw	0
 30034  015872  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 30035  015874  0E00               	movlw	0
 30036  015876  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 30037                           
 30038                           ; BSR set to: 0
 30039                           ;main.c: 109: RMS = 2.0 * acos(-1.0);
 30040  015878  0E00               	movlw	0
 30041  01587A  6FA9               	movwf	acos@x& (0+255),b
 30042  01587C  0E00               	movlw	0
 30043  01587E  6FAA               	movwf	(acos@x+1)& (0+255),b
 30044  015880  0E80               	movlw	128
 30045  015882  6FAB               	movwf	(acos@x+2)& (0+255),b
 30046  015884  0EBF               	movlw	191
 30047  015886  6FAC               	movwf	(acos@x+3)& (0+255),b
 30048  015888  EC93  F0BA         	call	_acos	;wreg free
 30049  01588C  C0A9  F0C1         	movff	?_acos,_peakToRMS$4048
 30050  015890  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4048+1
 30051  015894  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4048+2
 30052  015898  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4048+3
 30053                           
 30054                           ;main.c: 109: RMS = 2.0 * acos(-1.0);
 30055  01589C  C0C1  F030         	movff	_peakToRMS$4048,i2___flmul@b
 30056  0158A0  C0C2  F031         	movff	_peakToRMS$4048+1,i2___flmul@b+1
 30057  0158A4  C0C3  F032         	movff	_peakToRMS$4048+2,i2___flmul@b+2
 30058  0158A8  C0C4  F033         	movff	_peakToRMS$4048+3,i2___flmul@b+3
 30059  0158AC  0E00               	movlw	0
 30060  0158AE  6E34               	movwf	i2___flmul@a,c
 30061  0158B0  0E00               	movlw	0
 30062  0158B2  6E35               	movwf	i2___flmul@a+1,c
 30063  0158B4  0E00               	movlw	0
 30064  0158B6  6E36               	movwf	i2___flmul@a+2,c
 30065  0158B8  0E40               	movlw	64
 30066  0158BA  6E37               	movwf	i2___flmul@a+3,c
 30067  0158BC  EC7B  F09D         	call	i2___flmul	;wreg free
 30068  0158C0  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 30069  0158C4  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 30070  0158C8  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 30071  0158CC  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 30072                           
 30073                           ;main.c: 110: RMS = RMS - (2.0 * Angle);
 30074  0158D0  0E00               	movlw	0
 30075  0158D2  6E34               	movwf	i2___flmul@a,c
 30076  0158D4  0E00               	movlw	0
 30077  0158D6  6E35               	movwf	i2___flmul@a+1,c
 30078  0158D8  0E00               	movlw	0
 30079  0158DA  6E36               	movwf	i2___flmul@a+2,c
 30080  0158DC  0E40               	movlw	64
 30081  0158DE  6E37               	movwf	i2___flmul@a+3,c
 30082  0158E0  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 30083  0158E4  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 30084  0158E8  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 30085  0158EC  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 30086  0158F0  EC7B  F09D         	call	i2___flmul	;wreg free
 30087  0158F4  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 30088  0158F8  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 30089  0158FC  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 30090  015900  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 30091  015904  EC2A  F0BF         	call	i2___flneg	;wreg free
 30092  015908  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30093  01590C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30094  015910  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30095  015914  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30096  015918  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 30097  01591C  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 30098  015920  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 30099  015924  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 30100  015928  ECC2  F0A0         	call	i2___fladd	;wreg free
 30101  01592C  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 30102  015930  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 30103  015934  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 30104  015938  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 30105                           
 30106                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 30107  01593C  0E00               	movlw	0
 30108  01593E  6E34               	movwf	i2___flmul@a,c
 30109  015940  0E00               	movlw	0
 30110  015942  6E35               	movwf	i2___flmul@a+1,c
 30111  015944  0E00               	movlw	0
 30112  015946  6E36               	movwf	i2___flmul@a+2,c
 30113  015948  0E40               	movlw	64
 30114  01594A  6E37               	movwf	i2___flmul@a+3,c
 30115  01594C  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 30116  015950  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 30117  015954  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 30118  015958  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 30119  01595C  EC7B  F09D         	call	i2___flmul	;wreg free
 30120  015960  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4049
 30121  015964  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4049+1
 30122  015968  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4049+2
 30123  01596C  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4049+3
 30124                           
 30125                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 30126  015970  C0B9  F07E         	movff	_peakToRMS$4049,sin@f
 30127  015974  C0BA  F07F         	movff	_peakToRMS$4049+1,sin@f+1
 30128  015978  C0BB  F080         	movff	_peakToRMS$4049+2,sin@f+2
 30129  01597C  C0BC  F081         	movff	_peakToRMS$4049+3,sin@f+3
 30130  015980  ECE3  F0A3         	call	_sin	;wreg free
 30131  015984  C07E  F0BD         	movff	?_sin,_peakToRMS$4050
 30132  015988  C07F  F0BE         	movff	?_sin+1,_peakToRMS$4050+1
 30133  01598C  C080  F0BF         	movff	?_sin+2,_peakToRMS$4050+2
 30134  015990  C081  F0C0         	movff	?_sin+3,_peakToRMS$4050+3
 30135                           
 30136                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 30137  015994  C0BD  F056         	movff	_peakToRMS$4050,i2___fladd@b
 30138  015998  C0BE  F057         	movff	_peakToRMS$4050+1,i2___fladd@b+1
 30139  01599C  C0BF  F058         	movff	_peakToRMS$4050+2,i2___fladd@b+2
 30140  0159A0  C0C0  F059         	movff	_peakToRMS$4050+3,i2___fladd@b+3
 30141  0159A4  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 30142  0159A8  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 30143  0159AC  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 30144  0159B0  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 30145  0159B4  ECC2  F0A0         	call	i2___fladd	;wreg free
 30146  0159B8  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 30147  0159BC  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 30148  0159C0  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 30149  0159C4  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 30150                           
 30151                           ;main.c: 112: RMS = RMS / (4.0 * acos(-1.0));
 30152  0159C8  0E00               	movlw	0
 30153  0159CA  0100               	movlb	0	; () banked
 30154  0159CC  6FA9               	movwf	acos@x& (0+255),b
 30155  0159CE  0E00               	movlw	0
 30156  0159D0  6FAA               	movwf	(acos@x+1)& (0+255),b
 30157  0159D2  0E80               	movlw	128
 30158  0159D4  6FAB               	movwf	(acos@x+2)& (0+255),b
 30159  0159D6  0EBF               	movlw	191
 30160  0159D8  6FAC               	movwf	(acos@x+3)& (0+255),b
 30161  0159DA  EC93  F0BA         	call	_acos	;wreg free
 30162  0159DE  C0A9  F0C1         	movff	?_acos,_peakToRMS$4048
 30163  0159E2  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4048+1
 30164  0159E6  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4048+2
 30165  0159EA  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4048+3
 30166                           
 30167                           ;main.c: 112: RMS = RMS / (4.0 * acos(-1.0));
 30168  0159EE  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 30169  0159F2  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 30170  0159F6  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 30171  0159FA  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 30172  0159FE  0E00               	movlw	0
 30173  015A00  6E34               	movwf	i2___flmul@a,c
 30174  015A02  0E00               	movlw	0
 30175  015A04  6E35               	movwf	i2___flmul@a+1,c
 30176  015A06  0E80               	movlw	128
 30177  015A08  6E36               	movwf	i2___flmul@a+2,c
 30178  015A0A  0E40               	movlw	64
 30179  015A0C  6E37               	movwf	i2___flmul@a+3,c
 30180  015A0E  C0C1  F030         	movff	_peakToRMS$4048,i2___flmul@b
 30181  015A12  C0C2  F031         	movff	_peakToRMS$4048+1,i2___flmul@b+1
 30182  015A16  C0C3  F032         	movff	_peakToRMS$4048+2,i2___flmul@b+2
 30183  015A1A  C0C4  F033         	movff	_peakToRMS$4048+3,i2___flmul@b+3
 30184  015A1E  EC7B  F09D         	call	i2___flmul	;wreg free
 30185  015A22  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 30186  015A26  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 30187  015A2A  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 30188  015A2E  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 30189  015A32  EC82  F0A9         	call	i2___fldiv	;wreg free
 30190  015A36  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 30191  015A3A  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 30192  015A3E  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 30193  015A42  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 30194                           
 30195                           ;main.c: 113: RMS = sqrt(RMS);
 30196  015A46  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 30197  015A4A  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 30198  015A4E  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 30199  015A52  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 30200  015A56  EC60  F0A5         	call	_sqrt	;wreg free
 30201  015A5A  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 30202  015A5E  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 30203  015A62  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 30204  015A66  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 30205                           
 30206                           ;main.c: 114: RMS = Peak * RMS;
 30207  015A6A  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 30208  015A6E  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 30209  015A72  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 30210  015A76  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 30211  015A7A  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 30212  015A7E  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 30213  015A82  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 30214  015A86  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 30215  015A8A  EC7B  F09D         	call	i2___flmul	;wreg free
 30216  015A8E  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 30217  015A92  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 30218  015A96  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 30219  015A9A  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 30220                           
 30221                           ;main.c: 115: return RMS;
 30222  015A9E  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 30223  015AA2  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 30224  015AA6  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 30225  015AAA  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 30226  015AAE  0012               	return	
 30227  015AB0                     __end_of_peakToRMS:
 30228                           	opt stack 0
 30229                           tosu	equ	0xFFF
 30230                           tosh	equ	0xFFE
 30231                           tosl	equ	0xFFD
 30232                           pclatu	equ	0xFFB
 30233                           pclath	equ	0xFFA
 30234                           tblptru	equ	0xFF8
 30235                           tblptrh	equ	0xFF7
 30236                           tblptrl	equ	0xFF6
 30237                           tablat	equ	0xFF5
 30238                           prodh	equ	0xFF4
 30239                           prodl	equ	0xFF3
 30240                           intcon	equ	0xFF2
 30241                           indf0	equ	0xFEF
 30242                           postinc0	equ	0xFEE
 30243                           fsr0h	equ	0xFEA
 30244                           fsr0l	equ	0xFE9
 30245                           wreg	equ	0xFE8
 30246                           indf1	equ	0xFE7
 30247                           postdec1	equ	0xFE5
 30248                           plusw1	equ	0xFE3
 30249                           fsr1h	equ	0xFE2
 30250                           fsr1l	equ	0xFE1
 30251                           bsr	equ	0xFE0
 30252                           indf2	equ	0xFDF
 30253                           postinc2	equ	0xFDE
 30254                           postdec2	equ	0xFDD
 30255                           plusw2	equ	0xFDB
 30256                           fsr2h	equ	0xFDA
 30257                           fsr2l	equ	0xFD9
 30258                           status	equ	0xFD8
 30259                           
 30260 ;; *************** function _acos *****************
 30261 ;; Defined at:
 30262 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 30263 ;; Parameters:    Size  Location     Type
 30264 ;;  x               4   73[BANK0 ] void 
 30265 ;; Auto vars:     Size  Location     Type
 30266 ;;		None
 30267 ;; Return value:  Size  Location     Type
 30268 ;;                  4   73[BANK0 ] void 
 30269 ;; Registers used:
 30270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30271 ;; Tracked objects:
 30272 ;;		On entry : 0/0
 30273 ;;		On exit  : 0/0
 30274 ;;		Unchanged: 0/0
 30275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30276 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30277 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30280 ;;Total ram usage:        8 bytes
 30281 ;; Hardware stack levels used:    1
 30282 ;; Hardware stack levels required when called:    4
 30283 ;; This function calls:
 30284 ;;		_asin
 30285 ;;		i2___fladd
 30286 ;;		i2___flneg
 30287 ;; This function is called by:
 30288 ;;		_peakToRMS
 30289 ;; This function uses a non-reentrant model
 30290 ;;
 30291                           
 30292                           	psect	text103
 30293  017526                     __ptext103:
 30294                           	opt stack 0
 30295  017526                     _acos:
 30296                           	opt stack 11
 30297                           
 30298                           ;incstack = 0
 30299  017526  C0A9  F091         	movff	acos@x,asin@x
 30300  01752A  C0AA  F092         	movff	acos@x+1,asin@x+1
 30301  01752E  C0AB  F093         	movff	acos@x+2,asin@x+2
 30302  017532  C0AC  F094         	movff	acos@x+3,asin@x+3
 30303  017536  EC61  F0A2         	call	_asin	;wreg free
 30304  01753A  C091  F0AD         	movff	?_asin,_acos$4056
 30305  01753E  C092  F0AE         	movff	?_asin+1,_acos$4056+1
 30306  017542  C093  F0AF         	movff	?_asin+2,_acos$4056+2
 30307  017546  C094  F0B0         	movff	?_asin+3,_acos$4056+3
 30308  01754A  C0AD  F02C         	movff	_acos$4056,i2___flneg@f1
 30309  01754E  C0AE  F02D         	movff	_acos$4056+1,i2___flneg@f1+1
 30310  017552  C0AF  F02E         	movff	_acos$4056+2,i2___flneg@f1+2
 30311  017556  C0B0  F02F         	movff	_acos$4056+3,i2___flneg@f1+3
 30312  01755A  EC2A  F0BF         	call	i2___flneg	;wreg free
 30313  01755E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30314  017562  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30315  017566  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30316  01756A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30317  01756E  0EDB               	movlw	219
 30318  017570  6E5A               	movwf	i2___fladd@a,c
 30319  017572  0E0F               	movlw	15
 30320  017574  6E5B               	movwf	i2___fladd@a+1,c
 30321  017576  0EC9               	movlw	201
 30322  017578  6E5C               	movwf	i2___fladd@a+2,c
 30323  01757A  0E3F               	movlw	63
 30324  01757C  6E5D               	movwf	i2___fladd@a+3,c
 30325  01757E  ECC2  F0A0         	call	i2___fladd	;wreg free
 30326  017582  C056  F0A9         	movff	?i2___fladd,?_acos
 30327  017586  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 30328  01758A  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 30329  01758E  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 30330  017592  0012               	return	
 30331  017594                     __end_of_acos:
 30332                           	opt stack 0
 30333                           tosu	equ	0xFFF
 30334                           tosh	equ	0xFFE
 30335                           tosl	equ	0xFFD
 30336                           pclatu	equ	0xFFB
 30337                           pclath	equ	0xFFA
 30338                           tblptru	equ	0xFF8
 30339                           tblptrh	equ	0xFF7
 30340                           tblptrl	equ	0xFF6
 30341                           tablat	equ	0xFF5
 30342                           prodh	equ	0xFF4
 30343                           prodl	equ	0xFF3
 30344                           intcon	equ	0xFF2
 30345                           indf0	equ	0xFEF
 30346                           postinc0	equ	0xFEE
 30347                           fsr0h	equ	0xFEA
 30348                           fsr0l	equ	0xFE9
 30349                           wreg	equ	0xFE8
 30350                           indf1	equ	0xFE7
 30351                           postdec1	equ	0xFE5
 30352                           plusw1	equ	0xFE3
 30353                           fsr1h	equ	0xFE2
 30354                           fsr1l	equ	0xFE1
 30355                           bsr	equ	0xFE0
 30356                           indf2	equ	0xFDF
 30357                           postinc2	equ	0xFDE
 30358                           postdec2	equ	0xFDD
 30359                           plusw2	equ	0xFDB
 30360                           fsr2h	equ	0xFDA
 30361                           fsr2l	equ	0xFD9
 30362                           status	equ	0xFD8
 30363                           
 30364 ;; *************** function _asin *****************
 30365 ;; Defined at:
 30366 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 30367 ;; Parameters:    Size  Location     Type
 30368 ;;  x               4   49[BANK0 ] void 
 30369 ;; Auto vars:     Size  Location     Type
 30370 ;;  y               4   65[BANK0 ] void 
 30371 ;;  sgn             4   53[BANK0 ] void 
 30372 ;; Return value:  Size  Location     Type
 30373 ;;                  4   49[BANK0 ] void 
 30374 ;; Registers used:
 30375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30376 ;; Tracked objects:
 30377 ;;		On entry : 0/0
 30378 ;;		On exit  : 0/0
 30379 ;;		Unchanged: 0/0
 30380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30382 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30384 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30385 ;;Total ram usage:       24 bytes
 30386 ;; Hardware stack levels used:    1
 30387 ;; Hardware stack levels required when called:    3
 30388 ;; This function calls:
 30389 ;;		_atan
 30390 ;;		_fabs
 30391 ;;		_sqrt
 30392 ;;		i2___fladd
 30393 ;;		i2___fldiv
 30394 ;;		i2___flge
 30395 ;;		i2___flmul
 30396 ;;		i2___flneg
 30397 ;; This function is called by:
 30398 ;;		_acos
 30399 ;; This function uses a non-reentrant model
 30400 ;;
 30401                           
 30402                           	psect	text104
 30403  0144C2                     __ptext104:
 30404                           	opt stack 0
 30405  0144C2                     _asin:
 30406                           	opt stack 11
 30407                           
 30408                           ;incstack = 0
 30409  0144C2  0E00               	movlw	0
 30410  0144C4  6E34               	movwf	i2___flge@ff1,c
 30411  0144C6  0E00               	movlw	0
 30412  0144C8  6E35               	movwf	i2___flge@ff1+1,c
 30413  0144CA  0E80               	movlw	128
 30414  0144CC  6E36               	movwf	i2___flge@ff1+2,c
 30415  0144CE  0E3F               	movlw	63
 30416  0144D0  6E37               	movwf	i2___flge@ff1+3,c
 30417  0144D2  C091  F030         	movff	asin@x,fabs@d
 30418  0144D6  C092  F031         	movff	asin@x+1,fabs@d+1
 30419  0144DA  C093  F032         	movff	asin@x+2,fabs@d+2
 30420  0144DE  C094  F033         	movff	asin@x+3,fabs@d+3
 30421  0144E2  EC26  F0BE         	call	_fabs	;wreg free
 30422  0144E6  C030  F038         	movff	?_fabs,i2___flge@ff2
 30423  0144EA  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 30424  0144EE  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 30425  0144F2  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 30426  0144F6  ECB2  F0B2         	call	i2___flge	;wreg free
 30427  0144FA  B0D8               	btfsc	status,0,c
 30428  0144FC  D00F               	goto	i2l1590
 30429  0144FE  0E00               	movlw	0
 30430  014500  0102               	movlb	2	; () banked
 30431  014502  6F73               	movwf	(_errno+1)& (0+255),b
 30432  014504  0E21               	movlw	33
 30433  014506  6F72               	movwf	_errno& (0+255),b
 30434  014508  0E00               	movlw	0
 30435  01450A  0100               	movlb	0	; () banked
 30436  01450C  6F91               	movwf	?_asin& (0+255),b
 30437  01450E  0E00               	movlw	0
 30438  014510  6F92               	movwf	(?_asin+1)& (0+255),b
 30439  014512  0E00               	movlw	0
 30440  014514  6F93               	movwf	(?_asin+2)& (0+255),b
 30441  014516  0E00               	movlw	0
 30442  014518  6F94               	movwf	(?_asin+3)& (0+255),b
 30443                           
 30444                           ; BSR set to: 0
 30445  01451A  0012               	return	
 30446  01451C                     i2l1590:
 30447                           
 30448                           ; BSR set to: 0
 30449  01451C  0E00               	movlw	0
 30450  01451E  0100               	movlb	0	; () banked
 30451  014520  6F95               	movwf	asin@sgn& (0+255),b
 30452  014522  0E00               	movlw	0
 30453  014524  6F96               	movwf	(asin@sgn+1)& (0+255),b
 30454  014526  0E80               	movlw	128
 30455  014528  6F97               	movwf	(asin@sgn+2)& (0+255),b
 30456  01452A  0E3F               	movlw	63
 30457  01452C  6F98               	movwf	(asin@sgn+3)& (0+255),b
 30458                           
 30459                           ; BSR set to: 0
 30460  01452E  C091  F034         	movff	asin@x,i2___flmul@a
 30461  014532  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 30462  014536  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 30463  01453A  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 30464  01453E  C091  F030         	movff	asin@x,i2___flmul@b
 30465  014542  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 30466  014546  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 30467  01454A  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 30468  01454E  EC7B  F09D         	call	i2___flmul	;wreg free
 30469  014552  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 30470  014556  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 30471  01455A  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 30472  01455E  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 30473  014562  EC2A  F0BF         	call	i2___flneg	;wreg free
 30474  014566  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30475  01456A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30476  01456E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30477  014572  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30478  014576  0E00               	movlw	0
 30479  014578  6E5A               	movwf	i2___fladd@a,c
 30480  01457A  0E00               	movlw	0
 30481  01457C  6E5B               	movwf	i2___fladd@a+1,c
 30482  01457E  0E80               	movlw	128
 30483  014580  6E5C               	movwf	i2___fladd@a+2,c
 30484  014582  0E3F               	movlw	63
 30485  014584  6E5D               	movwf	i2___fladd@a+3,c
 30486  014586  ECC2  F0A0         	call	i2___fladd	;wreg free
 30487  01458A  C056  F06C         	movff	?i2___fladd,sqrt@a
 30488  01458E  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 30489  014592  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 30490  014596  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 30491  01459A  EC60  F0A5         	call	_sqrt	;wreg free
 30492  01459E  C06C  F0A1         	movff	?_sqrt,asin@y
 30493  0145A2  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 30494  0145A6  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 30495  0145AA  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 30496  0145AE  C091  F030         	movff	asin@x,fabs@d
 30497  0145B2  C092  F031         	movff	asin@x+1,fabs@d+1
 30498  0145B6  C093  F032         	movff	asin@x+2,fabs@d+2
 30499  0145BA  C094  F033         	movff	asin@x+3,fabs@d+3
 30500  0145BE  EC26  F0BE         	call	_fabs	;wreg free
 30501  0145C2  C030  F034         	movff	?_fabs,i2___flge@ff1
 30502  0145C6  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 30503  0145CA  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 30504  0145CE  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 30505  0145D2  0E8F               	movlw	143
 30506  0145D4  6E38               	movwf	i2___flge@ff2,c
 30507  0145D6  0EC2               	movlw	194
 30508  0145D8  6E39               	movwf	i2___flge@ff2+1,c
 30509  0145DA  0E35               	movlw	53
 30510  0145DC  6E3A               	movwf	i2___flge@ff2+2,c
 30511  0145DE  0E3F               	movlw	63
 30512  0145E0  6E3B               	movwf	i2___flge@ff2+3,c
 30513  0145E2  ECB2  F0B2         	call	i2___flge	;wreg free
 30514  0145E6  B0D8               	btfsc	status,0,c
 30515  0145E8  D02D               	goto	i2l1592
 30516  0145EA  C091  F013         	movff	asin@x,i2___fldiv@b
 30517  0145EE  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 30518  0145F2  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 30519  0145F6  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 30520  0145FA  C0A1  F017         	movff	asin@y,i2___fldiv@a
 30521  0145FE  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 30522  014602  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 30523  014606  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 30524  01460A  EC82  F0A9         	call	i2___fldiv	;wreg free
 30525  01460E  C013  F0A5         	movff	?i2___fldiv,_asin$4057
 30526  014612  C014  F0A6         	movff	?i2___fldiv+1,_asin$4057+1
 30527  014616  C015  F0A7         	movff	?i2___fldiv+2,_asin$4057+2
 30528  01461A  C016  F0A8         	movff	?i2___fldiv+3,_asin$4057+3
 30529  01461E  C0A5  F07C         	movff	_asin$4057,atan@f
 30530  014622  C0A6  F07D         	movff	_asin$4057+1,atan@f+1
 30531  014626  C0A7  F07E         	movff	_asin$4057+2,atan@f+2
 30532  01462A  C0A8  F07F         	movff	_asin$4057+3,atan@f+3
 30533  01462E  EC58  F0AD         	call	_atan	;wreg free
 30534  014632  C07C  F091         	movff	?_atan,?_asin
 30535  014636  C07D  F092         	movff	?_atan+1,?_asin+1
 30536  01463A  C07E  F093         	movff	?_atan+2,?_asin+2
 30537  01463E  C07F  F094         	movff	?_atan+3,?_asin+3
 30538  014642  0012               	return	
 30539  014644                     i2l1592:
 30540  014644  0100               	movlb	0	; () banked
 30541  014646  AF94               	btfss	(asin@x+3)& (0+255),7,b
 30542  014648  D06D               	goto	i2l1593
 30543                           
 30544                           ; BSR set to: 0
 30545  01464A  C091  F017         	movff	asin@x,i2___fldiv@a
 30546  01464E  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 30547  014652  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 30548  014656  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 30549  01465A  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 30550  01465E  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 30551  014662  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 30552  014666  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 30553  01466A  EC2A  F0BF         	call	i2___flneg	;wreg free
 30554  01466E  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 30555  014672  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 30556  014676  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 30557  01467A  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 30558  01467E  EC82  F0A9         	call	i2___fldiv	;wreg free
 30559  014682  C013  F0A5         	movff	?i2___fldiv,_asin$4057
 30560  014686  C014  F0A6         	movff	?i2___fldiv+1,_asin$4057+1
 30561  01468A  C015  F0A7         	movff	?i2___fldiv+2,_asin$4057+2
 30562  01468E  C016  F0A8         	movff	?i2___fldiv+3,_asin$4057+3
 30563  014692  C0A5  F07C         	movff	_asin$4057,atan@f
 30564  014696  C0A6  F07D         	movff	_asin$4057+1,atan@f+1
 30565  01469A  C0A7  F07E         	movff	_asin$4057+2,atan@f+2
 30566  01469E  C0A8  F07F         	movff	_asin$4057+3,atan@f+3
 30567  0146A2  EC58  F0AD         	call	_atan	;wreg free
 30568  0146A6  C07C  F09D         	movff	?_atan,_asin$4058
 30569  0146AA  C07D  F09E         	movff	?_atan+1,_asin$4058+1
 30570  0146AE  C07E  F09F         	movff	?_atan+2,_asin$4058+2
 30571  0146B2  C07F  F0A0         	movff	?_atan+3,_asin$4058+3
 30572  0146B6  0EDB               	movlw	219
 30573  0146B8  6E5A               	movwf	i2___fladd@a,c
 30574  0146BA  0E0F               	movlw	15
 30575  0146BC  6E5B               	movwf	i2___fladd@a+1,c
 30576  0146BE  0EC9               	movlw	201
 30577  0146C0  6E5C               	movwf	i2___fladd@a+2,c
 30578  0146C2  0E3F               	movlw	63
 30579  0146C4  6E5D               	movwf	i2___fladd@a+3,c
 30580  0146C6  C09D  F02C         	movff	_asin$4058,i2___flneg@f1
 30581  0146CA  C09E  F02D         	movff	_asin$4058+1,i2___flneg@f1+1
 30582  0146CE  C09F  F02E         	movff	_asin$4058+2,i2___flneg@f1+2
 30583  0146D2  C0A0  F02F         	movff	_asin$4058+3,i2___flneg@f1+3
 30584  0146D6  EC2A  F0BF         	call	i2___flneg	;wreg free
 30585  0146DA  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30586  0146DE  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30587  0146E2  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30588  0146E6  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30589  0146EA  ECC2  F0A0         	call	i2___fladd	;wreg free
 30590  0146EE  C056  F099         	movff	?i2___fladd,_asin$4059
 30591  0146F2  C057  F09A         	movff	?i2___fladd+1,_asin$4059+1
 30592  0146F6  C058  F09B         	movff	?i2___fladd+2,_asin$4059+2
 30593  0146FA  C059  F09C         	movff	?i2___fladd+3,_asin$4059+3
 30594  0146FE  C099  F02C         	movff	_asin$4059,i2___flneg@f1
 30595  014702  C09A  F02D         	movff	_asin$4059+1,i2___flneg@f1+1
 30596  014706  C09B  F02E         	movff	_asin$4059+2,i2___flneg@f1+2
 30597  01470A  C09C  F02F         	movff	_asin$4059+3,i2___flneg@f1+3
 30598  01470E  EC2A  F0BF         	call	i2___flneg	;wreg free
 30599  014712  C02C  F091         	movff	?i2___flneg,?_asin
 30600  014716  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 30601  01471A  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 30602  01471E  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 30603  014722  0012               	return	
 30604  014724                     i2l1593:
 30605  014724  C091  F017         	movff	asin@x,i2___fldiv@a
 30606  014728  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 30607  01472C  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 30608  014730  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 30609  014734  C0A1  F013         	movff	asin@y,i2___fldiv@b
 30610  014738  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 30611  01473C  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 30612  014740  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 30613  014744  EC82  F0A9         	call	i2___fldiv	;wreg free
 30614  014748  C013  F0A5         	movff	?i2___fldiv,_asin$4057
 30615  01474C  C014  F0A6         	movff	?i2___fldiv+1,_asin$4057+1
 30616  014750  C015  F0A7         	movff	?i2___fldiv+2,_asin$4057+2
 30617  014754  C016  F0A8         	movff	?i2___fldiv+3,_asin$4057+3
 30618  014758  C0A5  F07C         	movff	_asin$4057,atan@f
 30619  01475C  C0A6  F07D         	movff	_asin$4057+1,atan@f+1
 30620  014760  C0A7  F07E         	movff	_asin$4057+2,atan@f+2
 30621  014764  C0A8  F07F         	movff	_asin$4057+3,atan@f+3
 30622  014768  EC58  F0AD         	call	_atan	;wreg free
 30623  01476C  C07C  F09D         	movff	?_atan,_asin$4058
 30624  014770  C07D  F09E         	movff	?_atan+1,_asin$4058+1
 30625  014774  C07E  F09F         	movff	?_atan+2,_asin$4058+2
 30626  014778  C07F  F0A0         	movff	?_atan+3,_asin$4058+3
 30627  01477C  C09D  F02C         	movff	_asin$4058,i2___flneg@f1
 30628  014780  C09E  F02D         	movff	_asin$4058+1,i2___flneg@f1+1
 30629  014784  C09F  F02E         	movff	_asin$4058+2,i2___flneg@f1+2
 30630  014788  C0A0  F02F         	movff	_asin$4058+3,i2___flneg@f1+3
 30631  01478C  EC2A  F0BF         	call	i2___flneg	;wreg free
 30632  014790  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30633  014794  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30634  014798  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30635  01479C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30636  0147A0  0EDB               	movlw	219
 30637  0147A2  6E5A               	movwf	i2___fladd@a,c
 30638  0147A4  0E0F               	movlw	15
 30639  0147A6  6E5B               	movwf	i2___fladd@a+1,c
 30640  0147A8  0EC9               	movlw	201
 30641  0147AA  6E5C               	movwf	i2___fladd@a+2,c
 30642  0147AC  0E3F               	movlw	63
 30643  0147AE  6E5D               	movwf	i2___fladd@a+3,c
 30644  0147B0  ECC2  F0A0         	call	i2___fladd	;wreg free
 30645  0147B4  C056  F091         	movff	?i2___fladd,?_asin
 30646  0147B8  C057  F092         	movff	?i2___fladd+1,?_asin+1
 30647  0147BC  C058  F093         	movff	?i2___fladd+2,?_asin+2
 30648  0147C0  C059  F094         	movff	?i2___fladd+3,?_asin+3
 30649  0147C4  0012               	return	
 30650  0147C6                     __end_of_asin:
 30651                           	opt stack 0
 30652                           tosu	equ	0xFFF
 30653                           tosh	equ	0xFFE
 30654                           tosl	equ	0xFFD
 30655                           pclatu	equ	0xFFB
 30656                           pclath	equ	0xFFA
 30657                           tblptru	equ	0xFF8
 30658                           tblptrh	equ	0xFF7
 30659                           tblptrl	equ	0xFF6
 30660                           tablat	equ	0xFF5
 30661                           prodh	equ	0xFF4
 30662                           prodl	equ	0xFF3
 30663                           intcon	equ	0xFF2
 30664                           indf0	equ	0xFEF
 30665                           postinc0	equ	0xFEE
 30666                           fsr0h	equ	0xFEA
 30667                           fsr0l	equ	0xFE9
 30668                           wreg	equ	0xFE8
 30669                           indf1	equ	0xFE7
 30670                           postdec1	equ	0xFE5
 30671                           plusw1	equ	0xFE3
 30672                           fsr1h	equ	0xFE2
 30673                           fsr1l	equ	0xFE1
 30674                           bsr	equ	0xFE0
 30675                           indf2	equ	0xFDF
 30676                           postinc2	equ	0xFDE
 30677                           postdec2	equ	0xFDD
 30678                           plusw2	equ	0xFDB
 30679                           fsr2h	equ	0xFDA
 30680                           fsr2l	equ	0xFD9
 30681                           status	equ	0xFD8
 30682                           
 30683 ;; *************** function _sqrt *****************
 30684 ;; Defined at:
 30685 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;  a               4   12[BANK0 ] void 
 30688 ;; Auto vars:     Size  Location     Type
 30689 ;;  frac            4   37[BANK0 ] unsigned long 
 30690 ;;  root            4   33[BANK0 ] struct .
 30691 ;;  grs             4   27[BANK0 ] unsigned long 
 30692 ;;  tfrac           4   22[BANK0 ] unsigned long 
 30693 ;;  exp             2   31[BANK0 ] int 
 30694 ;;  p               1   26[BANK0 ] unsigned char 
 30695 ;;  i               1   21[BANK0 ] unsigned char 
 30696 ;;  sign            1   20[BANK0 ] unsigned char 
 30697 ;; Return value:  Size  Location     Type
 30698 ;;                  4   12[BANK0 ] unsigned char 
 30699 ;; Registers used:
 30700 ;;		wreg, status,2, status,0
 30701 ;; Tracked objects:
 30702 ;;		On entry : 0/0
 30703 ;;		On exit  : 0/0
 30704 ;;		Unchanged: 0/0
 30705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30707 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30709 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30710 ;;Total ram usage:       29 bytes
 30711 ;; Hardware stack levels used:    1
 30712 ;; This function calls:
 30713 ;;		Nothing
 30714 ;; This function is called by:
 30715 ;;		_peakToRMS
 30716 ;;		_asin
 30717 ;; This function uses a non-reentrant model
 30718 ;;
 30719                           
 30720                           	psect	text105
 30721  014AC0                     __ptext105:
 30722                           	opt stack 0
 30723  014AC0                     _sqrt:
 30724                           	opt stack 15
 30725                           
 30726                           ;incstack = 0
 30727  014AC0  0100               	movlb	0	; () banked
 30728  014AC2  516F               	movf	(sqrt@a+3)& (0+255),w,b
 30729  014AC4  0B80               	andlw	128
 30730  014AC6  6F74               	movwf	sqrt@sign& (0+255),b
 30731  014AC8  516F               	movf	(sqrt@a+3)& (0+255),w,b
 30732  014ACA  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 30733  014ACC  6F7A               	movwf	sqrt@p& (0+255),b
 30734                           
 30735                           ; BSR set to: 0
 30736  014ACE  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 30737                           
 30738                           ; BSR set to: 0
 30739  014AD0  817A               	bsf	sqrt@p& (0+255),0,b
 30740                           
 30741                           ; BSR set to: 0
 30742                           
 30743                           ; BSR set to: 0
 30744  014AD2  C07A  F07F         	movff	sqrt@p,sqrt@exp
 30745  014AD6  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 30746                           
 30747                           ; BSR set to: 0
 30748  014AD8  0EFF               	movlw	255
 30749  014ADA  156C               	andwf	sqrt@a& (0+255),w,b
 30750  014ADC  6F85               	movwf	sqrt@frac& (0+255),b
 30751  014ADE  0EFF               	movlw	255
 30752  014AE0  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 30753  014AE2  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 30754  014AE4  0E7F               	movlw	127
 30755  014AE6  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 30756  014AE8  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 30757  014AEA  0E00               	movlw	0
 30758  014AEC  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 30759  014AEE  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 30760                           
 30761                           ; BSR set to: 0
 30762  014AF0  517F               	movf	sqrt@exp& (0+255),w,b
 30763  014AF2  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30764  014AF4  B4D8               	btfsc	status,2,c
 30765  014AF6  D005               	goto	i2l2119
 30766                           
 30767                           ; BSR set to: 0
 30768  014AF8  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 30769                           
 30770                           ; BSR set to: 0
 30771  014AFA  297F               	incf	sqrt@exp& (0+255),w,b
 30772  014AFC  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30773  014AFE  A4D8               	btfss	status,2,c
 30774  014B00  D008               	goto	i2l2121
 30775  014B02                     i2l2119:
 30776                           
 30777                           ; BSR set to: 0
 30778                           
 30779                           ; BSR set to: 0
 30780  014B02  0E00               	movlw	0
 30781  014B04  6F85               	movwf	sqrt@frac& (0+255),b
 30782  014B06  0E00               	movlw	0
 30783  014B08  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 30784  014B0A  0E00               	movlw	0
 30785  014B0C  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 30786  014B0E  0E00               	movlw	0
 30787  014B10  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 30788  014B12                     i2l2121:
 30789                           
 30790                           ; BSR set to: 0
 30791                           
 30792                           ; BSR set to: 0
 30793  014B12  517F               	movf	sqrt@exp& (0+255),w,b
 30794  014B14  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30795  014B16  A4D8               	btfss	status,2,c
 30796  014B18  D009               	goto	i2l2122
 30797                           
 30798                           ; BSR set to: 0
 30799  014B1A  0E00               	movlw	0
 30800  014B1C  6F6C               	movwf	?_sqrt& (0+255),b
 30801  014B1E  0E00               	movlw	0
 30802  014B20  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 30803  014B22  0E00               	movlw	0
 30804  014B24  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 30805  014B26  0E00               	movlw	0
 30806  014B28  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 30807                           
 30808                           ; BSR set to: 0
 30809  014B2A  0012               	return	
 30810  014B2C                     i2l2122:
 30811                           
 30812                           ; BSR set to: 0
 30813                           
 30814                           ; BSR set to: 0
 30815  014B2C  5174               	movf	sqrt@sign& (0+255),w,b
 30816  014B2E  B4D8               	btfsc	status,2,c
 30817  014B30  D01A               	goto	i2l2124
 30818                           
 30819                           ; BSR set to: 0
 30820  014B32  0E00               	movlw	0
 30821  014B34  6F81               	movwf	sqrt@root& (0+255),b
 30822  014B36  0E00               	movlw	0
 30823  014B38  6F82               	movwf	(sqrt@root+1)& (0+255),b
 30824  014B3A  0E40               	movlw	64
 30825  014B3C  6F83               	movwf	(sqrt@root+2)& (0+255),b
 30826  014B3E  0E00               	movlw	0
 30827  014B40  6F84               	movwf	(sqrt@root+3)& (0+255),b
 30828                           
 30829                           ; BSR set to: 0
 30830  014B42  0E80               	movlw	128
 30831  014B44  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 30832  014B46  0EFF               	movlw	255
 30833  014B48  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 30834                           
 30835                           ; BSR set to: 0
 30836  014B4A  0E00               	movlw	0
 30837  014B4C  0102               	movlb	2	; () banked
 30838  014B4E  6F73               	movwf	(_errno+1)& (0+255),b
 30839  014B50  0E21               	movlw	33
 30840  014B52  6F72               	movwf	_errno& (0+255),b
 30841                           
 30842                           ; BSR set to: 2
 30843  014B54  C081  F06C         	movff	sqrt@root,?_sqrt
 30844  014B58  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 30845  014B5C  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 30846  014B60  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 30847                           
 30848                           ; BSR set to: 2
 30849  014B64  0012               	return	
 30850  014B66                     i2l2124:
 30851                           
 30852                           ; BSR set to: 2
 30853  014B66  0100               	movlb	0	; () banked
 30854  014B68  297F               	incf	sqrt@exp& (0+255),w,b
 30855  014B6A  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30856  014B6C  A4D8               	btfss	status,2,c
 30857  014B6E  D011               	goto	i2l2125
 30858                           
 30859                           ; BSR set to: 0
 30860  014B70  0E00               	movlw	0
 30861  014B72  6F81               	movwf	sqrt@root& (0+255),b
 30862  014B74  0E00               	movlw	0
 30863  014B76  6F82               	movwf	(sqrt@root+1)& (0+255),b
 30864  014B78  0E80               	movlw	128
 30865  014B7A  6F83               	movwf	(sqrt@root+2)& (0+255),b
 30866  014B7C  0E7F               	movlw	127
 30867  014B7E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 30868                           
 30869                           ; BSR set to: 0
 30870  014B80  C081  F06C         	movff	sqrt@root,?_sqrt
 30871  014B84  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 30872  014B88  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 30873  014B8C  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 30874                           
 30875                           ; BSR set to: 0
 30876  014B90  0012               	return	
 30877  014B92                     i2l2125:
 30878                           
 30879                           ; BSR set to: 0
 30880                           
 30881                           ; BSR set to: 0
 30882  014B92  0E81               	movlw	129
 30883  014B94  277F               	addwf	sqrt@exp& (0+255),f,b
 30884  014B96  0EFF               	movlw	255
 30885  014B98  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 30886  014B9A  517F               	movf	sqrt@exp& (0+255),w,b
 30887  014B9C  0B01               	andlw	1
 30888  014B9E  6F7A               	movwf	sqrt@p& (0+255),b
 30889  014BA0  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 30890  014BA2  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 30891  014BA4  337F               	rrcf	sqrt@exp& (0+255),f,b
 30892  014BA6  0E7F               	movlw	127
 30893  014BA8  277F               	addwf	sqrt@exp& (0+255),f,b
 30894  014BAA  0E00               	movlw	0
 30895  014BAC  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 30896  014BAE  90D8               	bcf	status,0,c
 30897  014BB0  3585               	rlcf	sqrt@frac& (0+255),w,b
 30898  014BB2  6F76               	movwf	sqrt@tfrac& (0+255),b
 30899  014BB4  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 30900  014BB6  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 30901  014BB8  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 30902  014BBA  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 30903  014BBC  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 30904  014BBE  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 30905                           
 30906                           ; BSR set to: 0
 30907  014BC0  0E00               	movlw	0
 30908  014BC2  6F85               	movwf	sqrt@frac& (0+255),b
 30909  014BC4  0E00               	movlw	0
 30910  014BC6  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 30911  014BC8  0E00               	movlw	0
 30912  014BCA  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 30913  014BCC  0E00               	movlw	0
 30914  014BCE  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 30915                           
 30916                           ; BSR set to: 0
 30917  014BD0  0E00               	movlw	0
 30918  014BD2  6F7B               	movwf	sqrt@grs& (0+255),b
 30919  014BD4  0E00               	movlw	0
 30920  014BD6  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 30921  014BD8  0E00               	movlw	0
 30922  014BDA  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 30923  014BDC  0E01               	movlw	1
 30924  014BDE  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 30925                           
 30926                           ; BSR set to: 0
 30927  014BE0  517A               	movf	sqrt@p& (0+255),w,b
 30928  014BE2  B4D8               	btfsc	status,2,c
 30929  014BE4  D005               	goto	i2l2126
 30930                           
 30931                           ; BSR set to: 0
 30932  014BE6  90D8               	bcf	status,0,c
 30933  014BE8  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 30934  014BEA  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 30935  014BEC  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 30936  014BEE  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 30937  014BF0                     i2l2126:
 30938                           
 30939                           ; BSR set to: 0
 30940                           
 30941                           ; BSR set to: 0
 30942  014BF0  0E00               	movlw	0
 30943  014BF2  6F75               	movwf	sqrt@i& (0+255),b
 30944  014BF4  D052               	goto	i2l2127
 30945  014BF6                     
 30946                           ; BSR set to: 0
 30947                           
 30948                           ; BSR set to: 0
 30949  014BF6  517B               	movf	sqrt@grs& (0+255),w,b
 30950  014BF8  1385               	iorwf	sqrt@frac& (0+255),f,b
 30951  014BFA  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 30952  014BFC  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 30953  014BFE  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 30954  014C00  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 30955  014C02  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 30956  014C04  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 30957  014C06  5185               	movf	sqrt@frac& (0+255),w,b
 30958  014C08  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 30959  014C0A  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 30960  014C0C  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 30961  014C0E  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 30962  014C10  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 30963  014C12  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 30964  014C14  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 30965  014C16  A0D8               	btfss	status,0,c
 30966  014C18  D011               	goto	i2l2129
 30967                           
 30968                           ; BSR set to: 0
 30969  014C1A  5185               	movf	sqrt@frac& (0+255),w,b
 30970  014C1C  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 30971  014C1E  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 30972  014C20  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 30973  014C22  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 30974  014C24  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 30975  014C26  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 30976  014C28  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 30977  014C2A  517B               	movf	sqrt@grs& (0+255),w,b
 30978  014C2C  2785               	addwf	sqrt@frac& (0+255),f,b
 30979  014C2E  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 30980  014C30  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 30981  014C32  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 30982  014C34  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 30983  014C36  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 30984  014C38  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 30985  014C3A  D014               	goto	i2l2130
 30986  014C3C                     i2l2129:
 30987                           
 30988                           ; BSR set to: 0
 30989                           
 30990                           ; BSR set to: 0
 30991  014C3C  C07B  F070         	movff	sqrt@grs,??_sqrt
 30992  014C40  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 30993  014C44  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 30994  014C48  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 30995  014C4C  1F70               	comf	??_sqrt& (0+255),f,b
 30996  014C4E  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 30997  014C50  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 30998  014C52  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 30999  014C54  5170               	movf	??_sqrt& (0+255),w,b
 31000  014C56  1785               	andwf	sqrt@frac& (0+255),f,b
 31001  014C58  5171               	movf	(??_sqrt+1)& (0+255),w,b
 31002  014C5A  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 31003  014C5C  5172               	movf	(??_sqrt+2)& (0+255),w,b
 31004  014C5E  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 31005  014C60  5173               	movf	(??_sqrt+3)& (0+255),w,b
 31006  014C62  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 31007  014C64                     i2l2130:
 31008                           
 31009                           ; BSR set to: 0
 31010                           
 31011                           ; BSR set to: 0
 31012  014C64  C07B  F070         	movff	sqrt@grs,??_sqrt
 31013  014C68  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 31014  014C6C  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 31015  014C70  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 31016  014C74  90D8               	bcf	status,0,c
 31017  014C76  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31018  014C78  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31019  014C7A  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31020  014C7C  3370               	rrcf	??_sqrt& (0+255),f,b
 31021  014C7E  C070  F07B         	movff	??_sqrt,sqrt@grs
 31022  014C82  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 31023  014C86  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 31024  014C8A  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 31025                           
 31026                           ; BSR set to: 0
 31027  014C8E  90D8               	bcf	status,0,c
 31028  014C90  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 31029  014C92  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 31030  014C94  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 31031  014C96  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 31032                           
 31033                           ; BSR set to: 0
 31034  014C98  2B75               	incf	sqrt@i& (0+255),f,b
 31035  014C9A                     i2l2127:
 31036                           
 31037                           ; BSR set to: 0
 31038                           
 31039                           ; BSR set to: 0
 31040  014C9A  0E18               	movlw	24
 31041  014C9C  6575               	cpfsgt	sqrt@i& (0+255),b
 31042  014C9E  D7AB               	goto	i2l2128
 31043                           
 31044                           ; BSR set to: 0
 31045                           
 31046                           ; BSR set to: 0
 31047  014CA0  C085  F070         	movff	sqrt@frac,??_sqrt
 31048  014CA4  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31049  014CA8  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31050  014CAC  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31051  014CB0  90D8               	bcf	status,0,c
 31052  014CB2  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31053  014CB4  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31054  014CB6  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31055  014CB8  3370               	rrcf	??_sqrt& (0+255),f,b
 31056  014CBA  C070  F085         	movff	??_sqrt,sqrt@frac
 31057  014CBE  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31058  014CC2  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31059  014CC6  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31060                           
 31061                           ; BSR set to: 0
 31062  014CCA  0E01               	movlw	1
 31063  014CCC  1585               	andwf	sqrt@frac& (0+255),w,b
 31064  014CCE  6F7B               	movwf	sqrt@grs& (0+255),b
 31065  014CD0  0E00               	movlw	0
 31066  014CD2  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 31067  014CD4  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 31068  014CD6  0E00               	movlw	0
 31069  014CD8  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 31070  014CDA  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 31071  014CDC  0E00               	movlw	0
 31072  014CDE  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 31073  014CE0  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 31074                           
 31075                           ; BSR set to: 0
 31076  014CE2  C085  F070         	movff	sqrt@frac,??_sqrt
 31077  014CE6  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31078  014CEA  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31079  014CEE  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31080  014CF2  90D8               	bcf	status,0,c
 31081  014CF4  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31082  014CF6  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31083  014CF8  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31084  014CFA  3370               	rrcf	??_sqrt& (0+255),f,b
 31085  014CFC  C070  F085         	movff	??_sqrt,sqrt@frac
 31086  014D00  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31087  014D04  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31088  014D08  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31089  014D0C  517B               	movf	sqrt@grs& (0+255),w,b
 31090  014D0E  2785               	addwf	sqrt@frac& (0+255),f,b
 31091  014D10  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 31092  014D12  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 31093  014D14  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 31094  014D16  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 31095  014D18  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 31096  014D1A  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 31097                           
 31098                           ; BSR set to: 0
 31099  014D1C  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 31100  014D1E  D017               	goto	i2l2132
 31101                           
 31102                           ; BSR set to: 0
 31103  014D20  C085  F070         	movff	sqrt@frac,??_sqrt
 31104  014D24  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31105  014D28  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31106  014D2C  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31107  014D30  90D8               	bcf	status,0,c
 31108  014D32  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31109  014D34  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31110  014D36  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31111  014D38  3370               	rrcf	??_sqrt& (0+255),f,b
 31112  014D3A  C070  F085         	movff	??_sqrt,sqrt@frac
 31113  014D3E  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31114  014D42  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31115  014D46  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31116  014D4A  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 31117  014D4C  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 31118  014D4E                     i2l2132:
 31119                           
 31120                           ; BSR set to: 0
 31121                           
 31122                           ; BSR set to: 0
 31123  014D4E  0EFF               	movlw	255
 31124  014D50  1585               	andwf	sqrt@frac& (0+255),w,b
 31125  014D52  6F81               	movwf	sqrt@root& (0+255),b
 31126  014D54  0EFF               	movlw	255
 31127  014D56  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 31128  014D58  6F82               	movwf	(sqrt@root+1)& (0+255),b
 31129  014D5A  0E7F               	movlw	127
 31130  014D5C  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 31131  014D5E  6F83               	movwf	(sqrt@root+2)& (0+255),b
 31132  014D60  0E00               	movlw	0
 31133  014D62  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 31134  014D64  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31135                           
 31136                           ; BSR set to: 0
 31137  014D66  C07F  F07A         	movff	sqrt@exp,sqrt@p
 31138                           
 31139                           ; BSR set to: 0
 31140  014D6A  B17A               	btfsc	sqrt@p& (0+255),0,b
 31141                           
 31142                           ; BSR set to: 0
 31143  014D6C  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 31144                           
 31145                           ; BSR set to: 0
 31146                           
 31147                           ; BSR set to: 0
 31148  014D6E  90D8               	bcf	status,0,c
 31149  014D70  317A               	rrcf	sqrt@p& (0+255),w,b
 31150  014D72  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31151                           
 31152                           ; BSR set to: 0
 31153  014D74  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 31154                           
 31155                           ; BSR set to: 0
 31156  014D76  C081  F06C         	movff	sqrt@root,?_sqrt
 31157  014D7A  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 31158  014D7E  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 31159  014D82  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 31160  014D86  0012               	return	
 31161  014D88                     __end_of_sqrt:
 31162                           	opt stack 0
 31163                           tosu	equ	0xFFF
 31164                           tosh	equ	0xFFE
 31165                           tosl	equ	0xFFD
 31166                           pclatu	equ	0xFFB
 31167                           pclath	equ	0xFFA
 31168                           tblptru	equ	0xFF8
 31169                           tblptrh	equ	0xFF7
 31170                           tblptrl	equ	0xFF6
 31171                           tablat	equ	0xFF5
 31172                           prodh	equ	0xFF4
 31173                           prodl	equ	0xFF3
 31174                           intcon	equ	0xFF2
 31175                           indf0	equ	0xFEF
 31176                           postinc0	equ	0xFEE
 31177                           fsr0h	equ	0xFEA
 31178                           fsr0l	equ	0xFE9
 31179                           wreg	equ	0xFE8
 31180                           indf1	equ	0xFE7
 31181                           postdec1	equ	0xFE5
 31182                           plusw1	equ	0xFE3
 31183                           fsr1h	equ	0xFE2
 31184                           fsr1l	equ	0xFE1
 31185                           bsr	equ	0xFE0
 31186                           indf2	equ	0xFDF
 31187                           postinc2	equ	0xFDE
 31188                           postdec2	equ	0xFDD
 31189                           plusw2	equ	0xFDB
 31190                           fsr2h	equ	0xFDA
 31191                           fsr2l	equ	0xFD9
 31192                           status	equ	0xFD8
 31193                           
 31194 ;; *************** function _atan *****************
 31195 ;; Defined at:
 31196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 31197 ;; Parameters:    Size  Location     Type
 31198 ;;  f               4   28[BANK0 ] unsigned char 
 31199 ;; Auto vars:     Size  Location     Type
 31200 ;;  val             4   45[BANK0 ] unsigned char 
 31201 ;;  val_squared     4   41[BANK0 ] unsigned char 
 31202 ;;  x               4   36[BANK0 ] unsigned char 
 31203 ;;  y               4   32[BANK0 ] unsigned char 
 31204 ;;  recip           1   40[BANK0 ] unsigned char 
 31205 ;; Return value:  Size  Location     Type
 31206 ;;                  4   28[BANK0 ] unsigned char 
 31207 ;; Registers used:
 31208 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31209 ;; Tracked objects:
 31210 ;;		On entry : 0/0
 31211 ;;		On exit  : 0/0
 31212 ;;		Unchanged: 0/0
 31213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31215 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31217 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31218 ;;Total ram usage:       21 bytes
 31219 ;; Hardware stack levels used:    1
 31220 ;; Hardware stack levels required when called:    2
 31221 ;; This function calls:
 31222 ;;		_eval_poly
 31223 ;;		_fabs
 31224 ;;		i2___fladd
 31225 ;;		i2___fldiv
 31226 ;;		i2___flge
 31227 ;;		i2___flmul
 31228 ;;		i2___flneg
 31229 ;; This function is called by:
 31230 ;;		_asin
 31231 ;; This function uses a non-reentrant model
 31232 ;;
 31233                           
 31234                           	psect	text106
 31235  015AB0                     __ptext106:
 31236                           	opt stack 0
 31237  015AB0                     _atan:
 31238                           	opt stack 11
 31239                           
 31240                           ;incstack = 0
 31241  015AB0  C07C  F030         	movff	atan@f,fabs@d
 31242  015AB4  C07D  F031         	movff	atan@f+1,fabs@d+1
 31243  015AB8  C07E  F032         	movff	atan@f+2,fabs@d+2
 31244  015ABC  C07F  F033         	movff	atan@f+3,fabs@d+3
 31245  015AC0  EC26  F0BE         	call	_fabs	;wreg free
 31246  015AC4  C030  F08D         	movff	?_fabs,atan@val
 31247  015AC8  C031  F08E         	movff	?_fabs+1,atan@val+1
 31248  015ACC  C032  F08F         	movff	?_fabs+2,atan@val+2
 31249  015AD0  C033  F090         	movff	?_fabs+3,atan@val+3
 31250  015AD4  0100               	movlb	0	; () banked
 31251  015AD6  518D               	movf	atan@val& (0+255),w,b
 31252  015AD8  118E               	iorwf	(atan@val+1)& (0+255),w,b
 31253  015ADA  118F               	iorwf	(atan@val+2)& (0+255),w,b
 31254  015ADC  1190               	iorwf	(atan@val+3)& (0+255),w,b
 31255  015ADE  A4D8               	btfss	status,2,c
 31256  015AE0  D009               	goto	i2l1609
 31257                           
 31258                           ; BSR set to: 0
 31259  015AE2  0E00               	movlw	0
 31260  015AE4  6F7C               	movwf	?_atan& (0+255),b
 31261  015AE6  0E00               	movlw	0
 31262  015AE8  6F7D               	movwf	(?_atan+1)& (0+255),b
 31263  015AEA  0E00               	movlw	0
 31264  015AEC  6F7E               	movwf	(?_atan+2)& (0+255),b
 31265  015AEE  0E00               	movlw	0
 31266  015AF0  6F7F               	movwf	(?_atan+3)& (0+255),b
 31267                           
 31268                           ; BSR set to: 0
 31269  015AF2  0012               	return	
 31270  015AF4                     i2l1609:
 31271                           
 31272                           ; BSR set to: 0
 31273                           
 31274                           ; BSR set to: 0
 31275  015AF4  0E00               	movlw	0
 31276  015AF6  6E34               	movwf	i2___flge@ff1,c
 31277  015AF8  0E00               	movlw	0
 31278  015AFA  6E35               	movwf	i2___flge@ff1+1,c
 31279  015AFC  0E80               	movlw	128
 31280  015AFE  6E36               	movwf	i2___flge@ff1+2,c
 31281  015B00  0E3F               	movlw	63
 31282  015B02  6E37               	movwf	i2___flge@ff1+3,c
 31283  015B04  C08D  F038         	movff	atan@val,i2___flge@ff2
 31284  015B08  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 31285  015B0C  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 31286  015B10  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 31287  015B14  ECB2  F0B2         	call	i2___flge	;wreg free
 31288  015B18  B0D8               	btfsc	status,0,c
 31289  015B1A  D002               	goto	i2u1341_40
 31290  015B1C  0E01               	movlw	1
 31291  015B1E  D001               	goto	i2u1342_40
 31292  015B20                     i2u1341_40:
 31293  015B20  0E00               	movlw	0
 31294  015B22                     i2u1342_40:
 31295  015B22  0100               	movlb	0	; () banked
 31296  015B24  6F88               	movwf	atan@recip& (0+255),b
 31297  015B26  5188               	movf	atan@recip& (0+255),w,b
 31298  015B28  B4D8               	btfsc	status,2,c
 31299  015B2A  D01A               	goto	i2l1611
 31300                           
 31301                           ; BSR set to: 0
 31302  015B2C  0E00               	movlw	0
 31303  015B2E  6E13               	movwf	i2___fldiv@b,c
 31304  015B30  0E00               	movlw	0
 31305  015B32  6E14               	movwf	i2___fldiv@b+1,c
 31306  015B34  0E80               	movlw	128
 31307  015B36  6E15               	movwf	i2___fldiv@b+2,c
 31308  015B38  0E3F               	movlw	63
 31309  015B3A  6E16               	movwf	i2___fldiv@b+3,c
 31310  015B3C  C08D  F017         	movff	atan@val,i2___fldiv@a
 31311  015B40  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 31312  015B44  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 31313  015B48  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 31314  015B4C  EC82  F0A9         	call	i2___fldiv	;wreg free
 31315  015B50  C013  F08D         	movff	?i2___fldiv,atan@val
 31316  015B54  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 31317  015B58  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 31318  015B5C  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 31319  015B60                     i2l1611:
 31320  015B60  C08D  F030         	movff	atan@val,i2___flmul@b
 31321  015B64  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 31322  015B68  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 31323  015B6C  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 31324  015B70  C08D  F034         	movff	atan@val,i2___flmul@a
 31325  015B74  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 31326  015B78  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 31327  015B7C  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 31328  015B80  EC7B  F09D         	call	i2___flmul	;wreg free
 31329  015B84  C030  F089         	movff	?i2___flmul,atan@val_squared
 31330  015B88  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 31331  015B8C  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 31332  015B90  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 31333  015B94  C089  F06C         	movff	atan@val_squared,eval_poly@x
 31334  015B98  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 31335  015B9C  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 31336  015BA0  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 31337  015BA4  0E95               	movlw	low atan@coeff_b
 31338  015BA6  0100               	movlb	0	; () banked
 31339  015BA8  6F70               	movwf	eval_poly@d& (0+255),b
 31340  015BAA  0EEC               	movlw	high atan@coeff_b
 31341  015BAC  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31342  015BAE  0E00               	movlw	0
 31343  015BB0  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31344  015BB2  0E04               	movlw	4
 31345  015BB4  6F72               	movwf	eval_poly@n& (0+255),b
 31346  015BB6  EC59  F0B4         	call	_eval_poly	;wreg free
 31347  015BBA  C06C  F080         	movff	?_eval_poly,atan@y
 31348  015BBE  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 31349  015BC2  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 31350  015BC6  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 31351  015BCA  C089  F06C         	movff	atan@val_squared,eval_poly@x
 31352  015BCE  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 31353  015BD2  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 31354  015BD6  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 31355  015BDA  0E69               	movlw	low atan@coeff_a
 31356  015BDC  0100               	movlb	0	; () banked
 31357  015BDE  6F70               	movwf	eval_poly@d& (0+255),b
 31358  015BE0  0EEC               	movlw	high atan@coeff_a
 31359  015BE2  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31360  015BE4  0E00               	movlw	0
 31361  015BE6  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31362  015BE8  0E05               	movlw	5
 31363  015BEA  6F72               	movwf	eval_poly@n& (0+255),b
 31364  015BEC  EC59  F0B4         	call	_eval_poly	;wreg free
 31365  015BF0  C06C  F084         	movff	?_eval_poly,atan@x
 31366  015BF4  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 31367  015BF8  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 31368  015BFC  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 31369  015C00  C08D  F030         	movff	atan@val,i2___flmul@b
 31370  015C04  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 31371  015C08  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 31372  015C0C  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 31373  015C10  C080  F017         	movff	atan@y,i2___fldiv@a
 31374  015C14  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 31375  015C18  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 31376  015C1C  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 31377  015C20  C084  F013         	movff	atan@x,i2___fldiv@b
 31378  015C24  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 31379  015C28  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 31380  015C2C  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 31381  015C30  EC82  F0A9         	call	i2___fldiv	;wreg free
 31382  015C34  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 31383  015C38  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 31384  015C3C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 31385  015C40  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 31386  015C44  EC7B  F09D         	call	i2___flmul	;wreg free
 31387  015C48  C030  F08D         	movff	?i2___flmul,atan@val
 31388  015C4C  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 31389  015C50  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 31390  015C54  C033  F090         	movff	?i2___flmul+3,atan@val+3
 31391  015C58  0100               	movlb	0	; () banked
 31392  015C5A  5188               	movf	atan@recip& (0+255),w,b
 31393  015C5C  B4D8               	btfsc	status,2,c
 31394  015C5E  D024               	goto	i2l1612
 31395                           
 31396                           ; BSR set to: 0
 31397  015C60  C08D  F02C         	movff	atan@val,i2___flneg@f1
 31398  015C64  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 31399  015C68  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 31400  015C6C  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 31401  015C70  EC2A  F0BF         	call	i2___flneg	;wreg free
 31402  015C74  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31403  015C78  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31404  015C7C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31405  015C80  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31406  015C84  0EDB               	movlw	219
 31407  015C86  6E5A               	movwf	i2___fladd@a,c
 31408  015C88  0E0F               	movlw	15
 31409  015C8A  6E5B               	movwf	i2___fladd@a+1,c
 31410  015C8C  0EC9               	movlw	201
 31411  015C8E  6E5C               	movwf	i2___fladd@a+2,c
 31412  015C90  0E3F               	movlw	63
 31413  015C92  6E5D               	movwf	i2___fladd@a+3,c
 31414  015C94  ECC2  F0A0         	call	i2___fladd	;wreg free
 31415  015C98  C056  F08D         	movff	?i2___fladd,atan@val
 31416  015C9C  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 31417  015CA0  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 31418  015CA4  C059  F090         	movff	?i2___fladd+3,atan@val+3
 31419  015CA8                     i2l1612:
 31420  015CA8  0100               	movlb	0	; () banked
 31421  015CAA  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 31422  015CAC  D009               	goto	i2l1614
 31423                           
 31424                           ; BSR set to: 0
 31425  015CAE  C08D  F07C         	movff	atan@val,?_atan
 31426  015CB2  C08E  F07D         	movff	atan@val+1,?_atan+1
 31427  015CB6  C08F  F07E         	movff	atan@val+2,?_atan+2
 31428  015CBA  C090  F07F         	movff	atan@val+3,?_atan+3
 31429  015CBE  0012               	return	
 31430  015CC0                     i2l1614:
 31431                           
 31432                           ; BSR set to: 0
 31433                           
 31434                           ; BSR set to: 0
 31435  015CC0  C08D  F02C         	movff	atan@val,i2___flneg@f1
 31436  015CC4  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 31437  015CC8  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 31438  015CCC  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 31439  015CD0  EC2A  F0BF         	call	i2___flneg	;wreg free
 31440  015CD4  C02C  F07C         	movff	?i2___flneg,?_atan
 31441  015CD8  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 31442  015CDC  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 31443  015CE0  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 31444  015CE4  0012               	return	
 31445  015CE6                     __end_of_atan:
 31446                           	opt stack 0
 31447                           tosu	equ	0xFFF
 31448                           tosh	equ	0xFFE
 31449                           tosl	equ	0xFFD
 31450                           pclatu	equ	0xFFB
 31451                           pclath	equ	0xFFA
 31452                           tblptru	equ	0xFF8
 31453                           tblptrh	equ	0xFF7
 31454                           tblptrl	equ	0xFF6
 31455                           tablat	equ	0xFF5
 31456                           prodh	equ	0xFF4
 31457                           prodl	equ	0xFF3
 31458                           intcon	equ	0xFF2
 31459                           indf0	equ	0xFEF
 31460                           postinc0	equ	0xFEE
 31461                           fsr0h	equ	0xFEA
 31462                           fsr0l	equ	0xFE9
 31463                           wreg	equ	0xFE8
 31464                           indf1	equ	0xFE7
 31465                           postdec1	equ	0xFE5
 31466                           plusw1	equ	0xFE3
 31467                           fsr1h	equ	0xFE2
 31468                           fsr1l	equ	0xFE1
 31469                           bsr	equ	0xFE0
 31470                           indf2	equ	0xFDF
 31471                           postinc2	equ	0xFDE
 31472                           postdec2	equ	0xFDD
 31473                           plusw2	equ	0xFDB
 31474                           fsr2h	equ	0xFDA
 31475                           fsr2l	equ	0xFD9
 31476                           status	equ	0xFD8
 31477                           
 31478 ;; *************** function _fabs *****************
 31479 ;; Defined at:
 31480 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 31481 ;; Parameters:    Size  Location     Type
 31482 ;;  d               4   47[COMRAM] unsigned char 
 31483 ;; Auto vars:     Size  Location     Type
 31484 ;;		None
 31485 ;; Return value:  Size  Location     Type
 31486 ;;                  4   47[COMRAM] unsigned char 
 31487 ;; Registers used:
 31488 ;;		wreg, status,2, status,0, cstack
 31489 ;; Tracked objects:
 31490 ;;		On entry : 0/0
 31491 ;;		On exit  : 0/0
 31492 ;;		Unchanged: 0/0
 31493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31498 ;;Total ram usage:        4 bytes
 31499 ;; Hardware stack levels used:    1
 31500 ;; Hardware stack levels required when called:    1
 31501 ;; This function calls:
 31502 ;;		i2___flneg
 31503 ;; This function is called by:
 31504 ;;		_asin
 31505 ;;		_atan
 31506 ;; This function uses a non-reentrant model
 31507 ;;
 31508                           
 31509                           	psect	text107
 31510  017C4C                     __ptext107:
 31511                           	opt stack 0
 31512  017C4C                     _fabs:
 31513                           	opt stack 12
 31514                           
 31515                           ;incstack = 0
 31516  017C4C  AE33               	btfss	fabs@d+3,7,c
 31517  017C4E  D013               	goto	i2l1706
 31518  017C50  C030  F02C         	movff	fabs@d,i2___flneg@f1
 31519  017C54  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 31520  017C58  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 31521  017C5C  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 31522  017C60  EC2A  F0BF         	call	i2___flneg	;wreg free
 31523  017C64  C02C  F030         	movff	?i2___flneg,?_fabs
 31524  017C68  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 31525  017C6C  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 31526  017C70  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 31527  017C74  0012               	return	
 31528  017C76                     i2l1706:
 31529  017C76  C030  F030         	movff	fabs@d,?_fabs
 31530  017C7A  C031  F031         	movff	fabs@d+1,?_fabs+1
 31531  017C7E  C032  F032         	movff	fabs@d+2,?_fabs+2
 31532  017C82  C033  F033         	movff	fabs@d+3,?_fabs+3
 31533  017C86  0012               	return		;funcret
 31534  017C88                     __end_of_fabs:
 31535                           	opt stack 0
 31536                           tosu	equ	0xFFF
 31537                           tosh	equ	0xFFE
 31538                           tosl	equ	0xFFD
 31539                           pclatu	equ	0xFFB
 31540                           pclath	equ	0xFFA
 31541                           tblptru	equ	0xFF8
 31542                           tblptrh	equ	0xFF7
 31543                           tblptrl	equ	0xFF6
 31544                           tablat	equ	0xFF5
 31545                           prodh	equ	0xFF4
 31546                           prodl	equ	0xFF3
 31547                           intcon	equ	0xFF2
 31548                           indf0	equ	0xFEF
 31549                           postinc0	equ	0xFEE
 31550                           fsr0h	equ	0xFEA
 31551                           fsr0l	equ	0xFE9
 31552                           wreg	equ	0xFE8
 31553                           indf1	equ	0xFE7
 31554                           postdec1	equ	0xFE5
 31555                           plusw1	equ	0xFE3
 31556                           fsr1h	equ	0xFE2
 31557                           fsr1l	equ	0xFE1
 31558                           bsr	equ	0xFE0
 31559                           indf2	equ	0xFDF
 31560                           postinc2	equ	0xFDE
 31561                           postdec2	equ	0xFDD
 31562                           plusw2	equ	0xFDB
 31563                           fsr2h	equ	0xFDA
 31564                           fsr2l	equ	0xFD9
 31565                           status	equ	0xFD8
 31566                           
 31567 ;; *************** function _currentMeasuredToPeak *****************
 31568 ;; Defined at:
 31569 ;;		line 120 in file "main.c"
 31570 ;; Parameters:    Size  Location     Type
 31571 ;;  Measured        4   47[BANK0 ] unsigned char 
 31572 ;;  Angle           4   51[BANK0 ] unsigned char 
 31573 ;; Auto vars:     Size  Location     Type
 31574 ;;  Peak            4   55[BANK0 ] unsigned char 
 31575 ;; Return value:  Size  Location     Type
 31576 ;;                  4   47[BANK0 ] unsigned char 
 31577 ;; Registers used:
 31578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31579 ;; Tracked objects:
 31580 ;;		On entry : 0/0
 31581 ;;		On exit  : 0/0
 31582 ;;		Unchanged: 0/0
 31583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31584 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31585 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31587 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31588 ;;Total ram usage:       12 bytes
 31589 ;; Hardware stack levels used:    1
 31590 ;; Hardware stack levels required when called:    3
 31591 ;; This function calls:
 31592 ;;		_sin
 31593 ;;		i2___fldiv
 31594 ;; This function is called by:
 31595 ;;		_ADCPostProcessingCallback
 31596 ;; This function uses a non-reentrant model
 31597 ;;
 31598                           
 31599                           	psect	text108
 31600  01734E                     __ptext108:
 31601                           	opt stack 0
 31602  01734E                     _currentMeasuredToPeak:
 31603                           	opt stack 13
 31604                           
 31605                           ;main.c: 123: double Peak = 0.0;
 31606                           
 31607                           ;incstack = 0
 31608  01734E  0E00               	movlw	0
 31609  017350  0100               	movlb	0	; () banked
 31610  017352  6F97               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 31611  017354  0E00               	movlw	0
 31612  017356  6F98               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 31613  017358  0E00               	movlw	0
 31614  01735A  6F99               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 31615  01735C  0E00               	movlw	0
 31616  01735E  6F9A               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 31617                           
 31618                           ; BSR set to: 0
 31619                           ;main.c: 126: Peak = sin(Angle);
 31620  017360  C093  F07E         	movff	currentMeasuredToPeak@Angle,sin@f
 31621  017364  C094  F07F         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 31622  017368  C095  F080         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 31623  01736C  C096  F081         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 31624  017370  ECE3  F0A3         	call	_sin	;wreg free
 31625  017374  C07E  F097         	movff	?_sin,currentMeasuredToPeak@Peak
 31626  017378  C07F  F098         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 31627  01737C  C080  F099         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 31628  017380  C081  F09A         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 31629                           
 31630                           ;main.c: 127: Peak = Measured / Peak;
 31631  017384  C08F  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 31632  017388  C090  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 31633  01738C  C091  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 31634  017390  C092  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 31635  017394  C097  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 31636  017398  C098  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 31637  01739C  C099  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 31638  0173A0  C09A  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 31639  0173A4  EC82  F0A9         	call	i2___fldiv	;wreg free
 31640  0173A8  C013  F097         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 31641  0173AC  C014  F098         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 31642  0173B0  C015  F099         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 31643  0173B4  C016  F09A         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 31644                           
 31645                           ;main.c: 128: return Peak;
 31646  0173B8  C097  F08F         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 31647  0173BC  C098  F090         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 31648  0173C0  C099  F091         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 31649  0173C4  C09A  F092         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 31650  0173C8  0012               	return	
 31651  0173CA                     __end_of_currentMeasuredToPeak:
 31652                           	opt stack 0
 31653                           tosu	equ	0xFFF
 31654                           tosh	equ	0xFFE
 31655                           tosl	equ	0xFFD
 31656                           pclatu	equ	0xFFB
 31657                           pclath	equ	0xFFA
 31658                           tblptru	equ	0xFF8
 31659                           tblptrh	equ	0xFF7
 31660                           tblptrl	equ	0xFF6
 31661                           tablat	equ	0xFF5
 31662                           prodh	equ	0xFF4
 31663                           prodl	equ	0xFF3
 31664                           intcon	equ	0xFF2
 31665                           indf0	equ	0xFEF
 31666                           postinc0	equ	0xFEE
 31667                           fsr0h	equ	0xFEA
 31668                           fsr0l	equ	0xFE9
 31669                           wreg	equ	0xFE8
 31670                           indf1	equ	0xFE7
 31671                           postdec1	equ	0xFE5
 31672                           plusw1	equ	0xFE3
 31673                           fsr1h	equ	0xFE2
 31674                           fsr1l	equ	0xFE1
 31675                           bsr	equ	0xFE0
 31676                           indf2	equ	0xFDF
 31677                           postinc2	equ	0xFDE
 31678                           postdec2	equ	0xFDD
 31679                           plusw2	equ	0xFDB
 31680                           fsr2h	equ	0xFDA
 31681                           fsr2l	equ	0xFD9
 31682                           status	equ	0xFD8
 31683                           
 31684 ;; *************** function _sin *****************
 31685 ;; Defined at:
 31686 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 31687 ;; Parameters:    Size  Location     Type
 31688 ;;  f               4   30[BANK0 ] unsigned char 
 31689 ;; Auto vars:     Size  Location     Type
 31690 ;;  x2              4   42[BANK0 ] unsigned char 
 31691 ;;  y               4   34[BANK0 ] unsigned char 
 31692 ;;  sgn             1   46[BANK0 ] unsigned char 
 31693 ;; Return value:  Size  Location     Type
 31694 ;;                  4   30[BANK0 ] unsigned char 
 31695 ;; Registers used:
 31696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31697 ;; Tracked objects:
 31698 ;;		On entry : 0/0
 31699 ;;		On exit  : 0/0
 31700 ;;		Unchanged: 0/0
 31701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31703 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31705 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31706 ;;Total ram usage:       17 bytes
 31707 ;; Hardware stack levels used:    1
 31708 ;; Hardware stack levels required when called:    2
 31709 ;; This function calls:
 31710 ;;		_eval_poly
 31711 ;;		_floor
 31712 ;;		i2___fladd
 31713 ;;		i2___fldiv
 31714 ;;		i2___flge
 31715 ;;		i2___flmul
 31716 ;;		i2___flneg
 31717 ;;		i2___flsub
 31718 ;; This function is called by:
 31719 ;;		_peakToRMS
 31720 ;;		_currentMeasuredToPeak
 31721 ;; This function uses a non-reentrant model
 31722 ;;
 31723                           
 31724                           	psect	text109
 31725  0147C6                     __ptext109:
 31726                           	opt stack 0
 31727  0147C6                     _sin:
 31728                           	opt stack 13
 31729                           
 31730                           ;incstack = 0
 31731  0147C6  0E00               	movlw	0
 31732  0147C8  0100               	movlb	0	; () banked
 31733  0147CA  6F8E               	movwf	sin@sgn& (0+255),b
 31734                           
 31735                           ; BSR set to: 0
 31736  0147CC  AF81               	btfss	(sin@f+3)& (0+255),7,b
 31737  0147CE  D015               	goto	i2l1989
 31738                           
 31739                           ; BSR set to: 0
 31740  0147D0  C07E  F02C         	movff	sin@f,i2___flneg@f1
 31741  0147D4  C07F  F02D         	movff	sin@f+1,i2___flneg@f1+1
 31742  0147D8  C080  F02E         	movff	sin@f+2,i2___flneg@f1+2
 31743  0147DC  C081  F02F         	movff	sin@f+3,i2___flneg@f1+3
 31744  0147E0  EC2A  F0BF         	call	i2___flneg	;wreg free
 31745  0147E4  C02C  F07E         	movff	?i2___flneg,sin@f
 31746  0147E8  C02D  F07F         	movff	?i2___flneg+1,sin@f+1
 31747  0147EC  C02E  F080         	movff	?i2___flneg+2,sin@f+2
 31748  0147F0  C02F  F081         	movff	?i2___flneg+3,sin@f+3
 31749  0147F4  0E01               	movlw	1
 31750  0147F6  0100               	movlb	0	; () banked
 31751  0147F8  6F8E               	movwf	sin@sgn& (0+255),b
 31752  0147FA                     i2l1989:
 31753                           
 31754                           ; BSR set to: 0
 31755                           
 31756                           ; BSR set to: 0
 31757  0147FA  C07E  F030         	movff	sin@f,i2___flmul@b
 31758  0147FE  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31759  014802  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31760  014806  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31761  01480A  0E83               	movlw	131
 31762  01480C  6E34               	movwf	i2___flmul@a,c
 31763  01480E  0EF9               	movlw	249
 31764  014810  6E35               	movwf	i2___flmul@a+1,c
 31765  014812  0E22               	movlw	34
 31766  014814  6E36               	movwf	i2___flmul@a+2,c
 31767  014816  0E3E               	movlw	62
 31768  014818  6E37               	movwf	i2___flmul@a+3,c
 31769  01481A  EC7B  F09D         	call	i2___flmul	;wreg free
 31770  01481E  C030  F07E         	movff	?i2___flmul,sin@f
 31771  014822  C031  F07F         	movff	?i2___flmul+1,sin@f+1
 31772  014826  C032  F080         	movff	?i2___flmul+2,sin@f+2
 31773  01482A  C033  F081         	movff	?i2___flmul+3,sin@f+3
 31774  01482E  C07E  F076         	movff	sin@f,i2___flsub@b
 31775  014832  C07F  F077         	movff	sin@f+1,i2___flsub@b+1
 31776  014836  C080  F078         	movff	sin@f+2,i2___flsub@b+2
 31777  01483A  C081  F079         	movff	sin@f+3,i2___flsub@b+3
 31778  01483E  C07E  F06C         	movff	sin@f,floor@x
 31779  014842  C07F  F06D         	movff	sin@f+1,floor@x+1
 31780  014846  C080  F06E         	movff	sin@f+2,floor@x+2
 31781  01484A  C081  F06F         	movff	sin@f+3,floor@x+3
 31782  01484E  ECD0  F0B3         	call	_floor	;wreg free
 31783  014852  C06C  F07A         	movff	?_floor,i2___flsub@a
 31784  014856  C06D  F07B         	movff	?_floor+1,i2___flsub@a+1
 31785  01485A  C06E  F07C         	movff	?_floor+2,i2___flsub@a+2
 31786  01485E  C06F  F07D         	movff	?_floor+3,i2___flsub@a+3
 31787  014862  EC81  F0BD         	call	i2___flsub	;wreg free
 31788  014866  C076  F07E         	movff	?i2___flsub,sin@f
 31789  01486A  C077  F07F         	movff	?i2___flsub+1,sin@f+1
 31790  01486E  C078  F080         	movff	?i2___flsub+2,sin@f+2
 31791  014872  C079  F081         	movff	?i2___flsub+3,sin@f+3
 31792  014876  C07E  F030         	movff	sin@f,i2___flmul@b
 31793  01487A  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31794  01487E  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31795  014882  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31796  014886  0E00               	movlw	0
 31797  014888  6E34               	movwf	i2___flmul@a,c
 31798  01488A  0E00               	movlw	0
 31799  01488C  6E35               	movwf	i2___flmul@a+1,c
 31800  01488E  0E80               	movlw	128
 31801  014890  6E36               	movwf	i2___flmul@a+2,c
 31802  014892  0E40               	movlw	64
 31803  014894  6E37               	movwf	i2___flmul@a+3,c
 31804  014896  EC7B  F09D         	call	i2___flmul	;wreg free
 31805  01489A  C030  F07E         	movff	?i2___flmul,sin@f
 31806  01489E  C031  F07F         	movff	?i2___flmul+1,sin@f+1
 31807  0148A2  C032  F080         	movff	?i2___flmul+2,sin@f+2
 31808  0148A6  C033  F081         	movff	?i2___flmul+3,sin@f+3
 31809  0148AA  0E00               	movlw	0
 31810  0148AC  6E34               	movwf	i2___flge@ff1,c
 31811  0148AE  0E00               	movlw	0
 31812  0148B0  6E35               	movwf	i2___flge@ff1+1,c
 31813  0148B2  0E00               	movlw	0
 31814  0148B4  6E36               	movwf	i2___flge@ff1+2,c
 31815  0148B6  0E40               	movlw	64
 31816  0148B8  6E37               	movwf	i2___flge@ff1+3,c
 31817  0148BA  C07E  F038         	movff	sin@f,i2___flge@ff2
 31818  0148BE  C07F  F039         	movff	sin@f+1,i2___flge@ff2+1
 31819  0148C2  C080  F03A         	movff	sin@f+2,i2___flge@ff2+2
 31820  0148C6  C081  F03B         	movff	sin@f+3,i2___flge@ff2+3
 31821  0148CA  ECB2  F0B2         	call	i2___flge	;wreg free
 31822  0148CE  B0D8               	btfsc	status,0,c
 31823  0148D0  D023               	goto	i2l1990
 31824  0148D2  C07E  F076         	movff	sin@f,i2___flsub@b
 31825  0148D6  C07F  F077         	movff	sin@f+1,i2___flsub@b+1
 31826  0148DA  C080  F078         	movff	sin@f+2,i2___flsub@b+2
 31827  0148DE  C081  F079         	movff	sin@f+3,i2___flsub@b+3
 31828  0148E2  0E00               	movlw	0
 31829  0148E4  0100               	movlb	0	; () banked
 31830  0148E6  6F7A               	movwf	i2___flsub@a& (0+255),b
 31831  0148E8  0E00               	movlw	0
 31832  0148EA  6F7B               	movwf	(i2___flsub@a+1)& (0+255),b
 31833  0148EC  0E00               	movlw	0
 31834  0148EE  6F7C               	movwf	(i2___flsub@a+2)& (0+255),b
 31835  0148F0  0E40               	movlw	64
 31836  0148F2  6F7D               	movwf	(i2___flsub@a+3)& (0+255),b
 31837  0148F4  EC81  F0BD         	call	i2___flsub	;wreg free
 31838  0148F8  C076  F07E         	movff	?i2___flsub,sin@f
 31839  0148FC  C077  F07F         	movff	?i2___flsub+1,sin@f+1
 31840  014900  C078  F080         	movff	?i2___flsub+2,sin@f+2
 31841  014904  C079  F081         	movff	?i2___flsub+3,sin@f+3
 31842  014908  0100               	movlb	0	; () banked
 31843  01490A  518E               	movf	sin@sgn& (0+255),w,b
 31844  01490C  A4D8               	btfss	status,2,c
 31845  01490E  D002               	goto	i2u1459_40
 31846  014910  0E01               	movlw	1
 31847  014912  D001               	goto	i2u1460_40
 31848  014914                     i2u1459_40:
 31849  014914  0E00               	movlw	0
 31850  014916                     i2u1460_40:
 31851  014916  6F8E               	movwf	sin@sgn& (0+255),b
 31852  014918                     i2l1990:
 31853                           
 31854                           ; BSR set to: 0
 31855  014918  0E00               	movlw	0
 31856  01491A  6E34               	movwf	i2___flge@ff1,c
 31857  01491C  0E00               	movlw	0
 31858  01491E  6E35               	movwf	i2___flge@ff1+1,c
 31859  014920  0E80               	movlw	128
 31860  014922  6E36               	movwf	i2___flge@ff1+2,c
 31861  014924  0E3F               	movlw	63
 31862  014926  6E37               	movwf	i2___flge@ff1+3,c
 31863  014928  C07E  F038         	movff	sin@f,i2___flge@ff2
 31864  01492C  C07F  F039         	movff	sin@f+1,i2___flge@ff2+1
 31865  014930  C080  F03A         	movff	sin@f+2,i2___flge@ff2+2
 31866  014934  C081  F03B         	movff	sin@f+3,i2___flge@ff2+3
 31867  014938  ECB2  F0B2         	call	i2___flge	;wreg free
 31868  01493C  B0D8               	btfsc	status,0,c
 31869  01493E  D024               	goto	i2l1991
 31870  014940  C07E  F02C         	movff	sin@f,i2___flneg@f1
 31871  014944  C07F  F02D         	movff	sin@f+1,i2___flneg@f1+1
 31872  014948  C080  F02E         	movff	sin@f+2,i2___flneg@f1+2
 31873  01494C  C081  F02F         	movff	sin@f+3,i2___flneg@f1+3
 31874  014950  EC2A  F0BF         	call	i2___flneg	;wreg free
 31875  014954  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31876  014958  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31877  01495C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31878  014960  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31879  014964  0E00               	movlw	0
 31880  014966  6E5A               	movwf	i2___fladd@a,c
 31881  014968  0E00               	movlw	0
 31882  01496A  6E5B               	movwf	i2___fladd@a+1,c
 31883  01496C  0E00               	movlw	0
 31884  01496E  6E5C               	movwf	i2___fladd@a+2,c
 31885  014970  0E40               	movlw	64
 31886  014972  6E5D               	movwf	i2___fladd@a+3,c
 31887  014974  ECC2  F0A0         	call	i2___fladd	;wreg free
 31888  014978  C056  F07E         	movff	?i2___fladd,sin@f
 31889  01497C  C057  F07F         	movff	?i2___fladd+1,sin@f+1
 31890  014980  C058  F080         	movff	?i2___fladd+2,sin@f+2
 31891  014984  C059  F081         	movff	?i2___fladd+3,sin@f+3
 31892  014988                     i2l1991:
 31893  014988  C07E  F030         	movff	sin@f,i2___flmul@b
 31894  01498C  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31895  014990  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31896  014994  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31897  014998  C07E  F034         	movff	sin@f,i2___flmul@a
 31898  01499C  C07F  F035         	movff	sin@f+1,i2___flmul@a+1
 31899  0149A0  C080  F036         	movff	sin@f+2,i2___flmul@a+2
 31900  0149A4  C081  F037         	movff	sin@f+3,i2___flmul@a+3
 31901  0149A8  EC7B  F09D         	call	i2___flmul	;wreg free
 31902  0149AC  C030  F08A         	movff	?i2___flmul,sin@x2
 31903  0149B0  C031  F08B         	movff	?i2___flmul+1,sin@x2+1
 31904  0149B4  C032  F08C         	movff	?i2___flmul+2,sin@x2+2
 31905  0149B8  C033  F08D         	movff	?i2___flmul+3,sin@x2+3
 31906  0149BC  C08A  F06C         	movff	sin@x2,eval_poly@x
 31907  0149C0  C08B  F06D         	movff	sin@x2+1,eval_poly@x+1
 31908  0149C4  C08C  F06E         	movff	sin@x2+2,eval_poly@x+2
 31909  0149C8  C08D  F06F         	movff	sin@x2+3,eval_poly@x+3
 31910  0149CC  0EA9               	movlw	low sin@coeff_b
 31911  0149CE  0100               	movlb	0	; () banked
 31912  0149D0  6F70               	movwf	eval_poly@d& (0+255),b
 31913  0149D2  0EEC               	movlw	high sin@coeff_b
 31914  0149D4  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31915  0149D6  0E00               	movlw	0
 31916  0149D8  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31917  0149DA  0E03               	movlw	3
 31918  0149DC  6F72               	movwf	eval_poly@n& (0+255),b
 31919  0149DE  EC59  F0B4         	call	_eval_poly	;wreg free
 31920  0149E2  C06C  F082         	movff	?_eval_poly,sin@y
 31921  0149E6  C06D  F083         	movff	?_eval_poly+1,sin@y+1
 31922  0149EA  C06E  F084         	movff	?_eval_poly+2,sin@y+2
 31923  0149EE  C06F  F085         	movff	?_eval_poly+3,sin@y+3
 31924  0149F2  C082  F017         	movff	sin@y,i2___fldiv@a
 31925  0149F6  C083  F018         	movff	sin@y+1,i2___fldiv@a+1
 31926  0149FA  C084  F019         	movff	sin@y+2,i2___fldiv@a+2
 31927  0149FE  C085  F01A         	movff	sin@y+3,i2___fldiv@a+3
 31928  014A02  0E00               	movlw	0
 31929  014A04  0100               	movlb	0	; () banked
 31930  014A06  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31931  014A08  0E04               	movlw	4
 31932  014A0A  6F72               	movwf	eval_poly@n& (0+255),b
 31933  014A0C  0E81               	movlw	low sin@coeff_a
 31934  014A0E  6F70               	movwf	eval_poly@d& (0+255),b
 31935  014A10  0EEC               	movlw	high sin@coeff_a
 31936  014A12  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31937  014A14  C08A  F06C         	movff	sin@x2,eval_poly@x
 31938  014A18  C08B  F06D         	movff	sin@x2+1,eval_poly@x+1
 31939  014A1C  C08C  F06E         	movff	sin@x2+2,eval_poly@x+2
 31940  014A20  C08D  F06F         	movff	sin@x2+3,eval_poly@x+3
 31941  014A24  EC59  F0B4         	call	_eval_poly	;wreg free
 31942  014A28  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 31943  014A2C  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 31944  014A30  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 31945  014A34  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 31946  014A38  EC82  F0A9         	call	i2___fldiv	;wreg free
 31947  014A3C  C013  F086         	movff	?i2___fldiv,_sin$4060
 31948  014A40  C014  F087         	movff	?i2___fldiv+1,_sin$4060+1
 31949  014A44  C015  F088         	movff	?i2___fldiv+2,_sin$4060+2
 31950  014A48  C016  F089         	movff	?i2___fldiv+3,_sin$4060+3
 31951  014A4C  C07E  F030         	movff	sin@f,i2___flmul@b
 31952  014A50  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31953  014A54  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31954  014A58  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31955  014A5C  C086  F034         	movff	_sin$4060,i2___flmul@a
 31956  014A60  C087  F035         	movff	_sin$4060+1,i2___flmul@a+1
 31957  014A64  C088  F036         	movff	_sin$4060+2,i2___flmul@a+2
 31958  014A68  C089  F037         	movff	_sin$4060+3,i2___flmul@a+3
 31959  014A6C  EC7B  F09D         	call	i2___flmul	;wreg free
 31960  014A70  C030  F07E         	movff	?i2___flmul,sin@f
 31961  014A74  C031  F07F         	movff	?i2___flmul+1,sin@f+1
 31962  014A78  C032  F080         	movff	?i2___flmul+2,sin@f+2
 31963  014A7C  C033  F081         	movff	?i2___flmul+3,sin@f+3
 31964  014A80  0100               	movlb	0	; () banked
 31965  014A82  518E               	movf	sin@sgn& (0+255),w,b
 31966  014A84  B4D8               	btfsc	status,2,c
 31967  014A86  D013               	goto	i2l1992
 31968                           
 31969                           ; BSR set to: 0
 31970  014A88  C07E  F02C         	movff	sin@f,i2___flneg@f1
 31971  014A8C  C07F  F02D         	movff	sin@f+1,i2___flneg@f1+1
 31972  014A90  C080  F02E         	movff	sin@f+2,i2___flneg@f1+2
 31973  014A94  C081  F02F         	movff	sin@f+3,i2___flneg@f1+3
 31974  014A98  EC2A  F0BF         	call	i2___flneg	;wreg free
 31975  014A9C  C02C  F07E         	movff	?i2___flneg,?_sin
 31976  014AA0  C02D  F07F         	movff	?i2___flneg+1,?_sin+1
 31977  014AA4  C02E  F080         	movff	?i2___flneg+2,?_sin+2
 31978  014AA8  C02F  F081         	movff	?i2___flneg+3,?_sin+3
 31979  014AAC  0012               	return	
 31980  014AAE                     i2l1992:
 31981                           
 31982                           ; BSR set to: 0
 31983  014AAE  C07E  F07E         	movff	sin@f,?_sin
 31984  014AB2  C07F  F07F         	movff	sin@f+1,?_sin+1
 31985  014AB6  C080  F080         	movff	sin@f+2,?_sin+2
 31986  014ABA  C081  F081         	movff	sin@f+3,?_sin+3
 31987  014ABE  0012               	return		;funcret
 31988  014AC0                     __end_of_sin:
 31989                           	opt stack 0
 31990                           tosu	equ	0xFFF
 31991                           tosh	equ	0xFFE
 31992                           tosl	equ	0xFFD
 31993                           pclatu	equ	0xFFB
 31994                           pclath	equ	0xFFA
 31995                           tblptru	equ	0xFF8
 31996                           tblptrh	equ	0xFF7
 31997                           tblptrl	equ	0xFF6
 31998                           tablat	equ	0xFF5
 31999                           prodh	equ	0xFF4
 32000                           prodl	equ	0xFF3
 32001                           intcon	equ	0xFF2
 32002                           indf0	equ	0xFEF
 32003                           postinc0	equ	0xFEE
 32004                           fsr0h	equ	0xFEA
 32005                           fsr0l	equ	0xFE9
 32006                           wreg	equ	0xFE8
 32007                           indf1	equ	0xFE7
 32008                           postdec1	equ	0xFE5
 32009                           plusw1	equ	0xFE3
 32010                           fsr1h	equ	0xFE2
 32011                           fsr1l	equ	0xFE1
 32012                           bsr	equ	0xFE0
 32013                           indf2	equ	0xFDF
 32014                           postinc2	equ	0xFDE
 32015                           postdec2	equ	0xFDD
 32016                           plusw2	equ	0xFDB
 32017                           fsr2h	equ	0xFDA
 32018                           fsr2l	equ	0xFD9
 32019                           status	equ	0xFD8
 32020                           
 32021 ;; *************** function i2___flsub *****************
 32022 ;; Defined at:
 32023 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 32024 ;; Parameters:    Size  Location     Type
 32025 ;;  b               4   22[BANK0 ] unsigned char 
 32026 ;;  a               4   26[BANK0 ] unsigned char 
 32027 ;; Auto vars:     Size  Location     Type
 32028 ;;		None
 32029 ;; Return value:  Size  Location     Type
 32030 ;;                  4   22[BANK0 ] unsigned char 
 32031 ;; Registers used:
 32032 ;;		wreg, status,2, status,0, cstack
 32033 ;; Tracked objects:
 32034 ;;		On entry : 0/0
 32035 ;;		On exit  : 0/0
 32036 ;;		Unchanged: 0/0
 32037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32038 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32041 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32042 ;;Total ram usage:        8 bytes
 32043 ;; Hardware stack levels used:    1
 32044 ;; Hardware stack levels required when called:    1
 32045 ;; This function calls:
 32046 ;;		i2___fladd
 32047 ;; This function is called by:
 32048 ;;		_sin
 32049 ;;		i2_printf
 32050 ;; This function uses a non-reentrant model
 32051 ;;
 32052                           
 32053                           	psect	text110
 32054  017B02                     __ptext110:
 32055                           	opt stack 0
 32056  017B02                     i2___flsub:
 32057                           	opt stack 15
 32058                           
 32059                           ;incstack = 0
 32060  017B02  0E00               	movlw	0
 32061  017B04  0100               	movlb	0	; () banked
 32062  017B06  1B7A               	xorwf	i2___flsub@a& (0+255),f,b
 32063  017B08  0E00               	movlw	0
 32064  017B0A  1B7B               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 32065  017B0C  0E00               	movlw	0
 32066  017B0E  1B7C               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 32067  017B10  0E80               	movlw	128
 32068  017B12  1B7D               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 32069                           
 32070                           ; BSR set to: 0
 32071  017B14  C076  F056         	movff	i2___flsub@b,i2___fladd@b
 32072  017B18  C077  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 32073  017B1C  C078  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 32074  017B20  C079  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 32075  017B24  C07A  F05A         	movff	i2___flsub@a,i2___fladd@a
 32076  017B28  C07B  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 32077  017B2C  C07C  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 32078  017B30  C07D  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 32079  017B34  ECC2  F0A0         	call	i2___fladd	;wreg free
 32080  017B38  C056  F076         	movff	?i2___fladd,?i2___flsub
 32081  017B3C  C057  F077         	movff	?i2___fladd+1,?i2___flsub+1
 32082  017B40  C058  F078         	movff	?i2___fladd+2,?i2___flsub+2
 32083  017B44  C059  F079         	movff	?i2___fladd+3,?i2___flsub+3
 32084  017B48  0012               	return	
 32085  017B4A                     __end_ofi2___flsub:
 32086                           	opt stack 0
 32087                           tosu	equ	0xFFF
 32088                           tosh	equ	0xFFE
 32089                           tosl	equ	0xFFD
 32090                           pclatu	equ	0xFFB
 32091                           pclath	equ	0xFFA
 32092                           tblptru	equ	0xFF8
 32093                           tblptrh	equ	0xFF7
 32094                           tblptrl	equ	0xFF6
 32095                           tablat	equ	0xFF5
 32096                           prodh	equ	0xFF4
 32097                           prodl	equ	0xFF3
 32098                           intcon	equ	0xFF2
 32099                           indf0	equ	0xFEF
 32100                           postinc0	equ	0xFEE
 32101                           fsr0h	equ	0xFEA
 32102                           fsr0l	equ	0xFE9
 32103                           wreg	equ	0xFE8
 32104                           indf1	equ	0xFE7
 32105                           postdec1	equ	0xFE5
 32106                           plusw1	equ	0xFE3
 32107                           fsr1h	equ	0xFE2
 32108                           fsr1l	equ	0xFE1
 32109                           bsr	equ	0xFE0
 32110                           indf2	equ	0xFDF
 32111                           postinc2	equ	0xFDE
 32112                           postdec2	equ	0xFDD
 32113                           plusw2	equ	0xFDB
 32114                           fsr2h	equ	0xFDA
 32115                           fsr2l	equ	0xFD9
 32116                           status	equ	0xFD8
 32117                           
 32118 ;; *************** function i2___flneg *****************
 32119 ;; Defined at:
 32120 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 32121 ;; Parameters:    Size  Location     Type
 32122 ;;  f1              4   43[COMRAM] unsigned char 
 32123 ;; Auto vars:     Size  Location     Type
 32124 ;;		None
 32125 ;; Return value:  Size  Location     Type
 32126 ;;                  4   43[COMRAM] unsigned char 
 32127 ;; Registers used:
 32128 ;;		wreg, status,2, status,0
 32129 ;; Tracked objects:
 32130 ;;		On entry : 0/0
 32131 ;;		On exit  : 0/0
 32132 ;;		Unchanged: 0/0
 32133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32138 ;;Total ram usage:        4 bytes
 32139 ;; Hardware stack levels used:    1
 32140 ;; This function calls:
 32141 ;;		Nothing
 32142 ;; This function is called by:
 32143 ;;		_peakToRMS
 32144 ;;		_ADCPostProcessingCallback
 32145 ;;		_acos
 32146 ;;		_asin
 32147 ;;		_atan
 32148 ;;		_fabs
 32149 ;;		_sin
 32150 ;;		i2_printf
 32151 ;; This function uses a non-reentrant model
 32152 ;;
 32153                           
 32154                           	psect	text111
 32155  017E54                     __ptext111:
 32156                           	opt stack 0
 32157  017E54                     i2___flneg:
 32158                           	opt stack 16
 32159                           
 32160                           ;incstack = 0
 32161  017E54  502C               	movf	i2___flneg@f1,w,c
 32162  017E56  102D               	iorwf	i2___flneg@f1+1,w,c
 32163  017E58  102E               	iorwf	i2___flneg@f1+2,w,c
 32164  017E5A  102F               	iorwf	i2___flneg@f1+3,w,c
 32165  017E5C  B4D8               	btfsc	status,2,c
 32166  017E5E  D008               	goto	i2l1734
 32167  017E60  0E00               	movlw	0
 32168  017E62  1A2C               	xorwf	i2___flneg@f1,f,c
 32169  017E64  0E00               	movlw	0
 32170  017E66  1A2D               	xorwf	i2___flneg@f1+1,f,c
 32171  017E68  0E00               	movlw	0
 32172  017E6A  1A2E               	xorwf	i2___flneg@f1+2,f,c
 32173  017E6C  0E80               	movlw	128
 32174  017E6E  1A2F               	xorwf	i2___flneg@f1+3,f,c
 32175  017E70                     i2l1734:
 32176  017E70  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 32177  017E74  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 32178  017E78  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 32179  017E7C  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 32180  017E80  0012               	return	
 32181  017E82                     __end_ofi2___flneg:
 32182                           	opt stack 0
 32183                           tosu	equ	0xFFF
 32184                           tosh	equ	0xFFE
 32185                           tosl	equ	0xFFD
 32186                           pclatu	equ	0xFFB
 32187                           pclath	equ	0xFFA
 32188                           tblptru	equ	0xFF8
 32189                           tblptrh	equ	0xFF7
 32190                           tblptrl	equ	0xFF6
 32191                           tablat	equ	0xFF5
 32192                           prodh	equ	0xFF4
 32193                           prodl	equ	0xFF3
 32194                           intcon	equ	0xFF2
 32195                           indf0	equ	0xFEF
 32196                           postinc0	equ	0xFEE
 32197                           fsr0h	equ	0xFEA
 32198                           fsr0l	equ	0xFE9
 32199                           wreg	equ	0xFE8
 32200                           indf1	equ	0xFE7
 32201                           postdec1	equ	0xFE5
 32202                           plusw1	equ	0xFE3
 32203                           fsr1h	equ	0xFE2
 32204                           fsr1l	equ	0xFE1
 32205                           bsr	equ	0xFE0
 32206                           indf2	equ	0xFDF
 32207                           postinc2	equ	0xFDE
 32208                           postdec2	equ	0xFDD
 32209                           plusw2	equ	0xFDB
 32210                           fsr2h	equ	0xFDA
 32211                           fsr2l	equ	0xFD9
 32212                           status	equ	0xFD8
 32213                           
 32214 ;; *************** function i2___fldiv *****************
 32215 ;; Defined at:
 32216 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 32217 ;; Parameters:    Size  Location     Type
 32218 ;;  b               4   18[COMRAM] unsigned char 
 32219 ;;  a               4   22[COMRAM] unsigned char 
 32220 ;; Auto vars:     Size  Location     Type
 32221 ;;  __fldiv         4   37[COMRAM] unsigned long 
 32222 ;;  __fldiv         4   31[COMRAM] unsigned long 
 32223 ;;  __fldiv         2   35[COMRAM] int 
 32224 ;;  __fldiv         1   42[COMRAM] unsigned char 
 32225 ;;  __fldiv         1   41[COMRAM] unsigned char 
 32226 ;;  __fldiv         1   30[COMRAM] unsigned char 
 32227 ;; Return value:  Size  Location     Type
 32228 ;;                  4   18[COMRAM] unsigned char 
 32229 ;; Registers used:
 32230 ;;		wreg, status,2, status,0
 32231 ;; Tracked objects:
 32232 ;;		On entry : 0/0
 32233 ;;		On exit  : 0/0
 32234 ;;		Unchanged: 0/0
 32235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32236 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32237 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32239 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32240 ;;Total ram usage:       25 bytes
 32241 ;; Hardware stack levels used:    1
 32242 ;; This function calls:
 32243 ;;		Nothing
 32244 ;; This function is called by:
 32245 ;;		_peakToRMS
 32246 ;;		_currentMeasuredToPeak
 32247 ;;		_ADCPostProcessingCallback
 32248 ;;		_asin
 32249 ;;		_atan
 32250 ;;		_sin
 32251 ;; This function uses a non-reentrant model
 32252 ;;
 32253                           
 32254                           	psect	text112
 32255  015304                     __ptext112:
 32256                           	opt stack 0
 32257  015304                     i2___fldiv:
 32258                           	opt stack 16
 32259                           
 32260                           ;incstack = 0
 32261  015304  5016               	movf	i2___fldiv@b+3,w,c
 32262  015306  0B80               	andlw	128
 32263  015308  6E1F               	movwf	i2___fldiv@sign,c
 32264  01530A  5016               	movf	i2___fldiv@b+3,w,c
 32265  01530C  2416               	addwf	i2___fldiv@b+3,w,c
 32266  01530E  6E2A               	movwf	i2___fldiv@bexp,c
 32267  015310  BE15               	btfsc	i2___fldiv@b+2,7,c
 32268  015312  802A               	bsf	i2___fldiv@bexp,0,c
 32269  015314  502A               	movf	i2___fldiv@bexp,w,c
 32270  015316  B4D8               	btfsc	status,2,c
 32271  015318  D00D               	goto	i2l2054
 32272  01531A  282A               	incf	i2___fldiv@bexp,w,c
 32273  01531C  A4D8               	btfss	status,2,c
 32274  01531E  D008               	goto	i2l2055
 32275  015320  0E00               	movlw	0
 32276  015322  6E13               	movwf	i2___fldiv@b,c
 32277  015324  0E00               	movlw	0
 32278  015326  6E14               	movwf	i2___fldiv@b+1,c
 32279  015328  0E00               	movlw	0
 32280  01532A  6E15               	movwf	i2___fldiv@b+2,c
 32281  01532C  0E00               	movlw	0
 32282  01532E  6E16               	movwf	i2___fldiv@b+3,c
 32283  015330                     i2l2055:
 32284  015330  8E15               	bsf	i2___fldiv@b+2,7,c
 32285  015332  D006               	goto	L17
 32286  015334                     i2l2054:
 32287  015334  0E00               	movlw	0
 32288  015336  6E13               	movwf	i2___fldiv@b,c
 32289  015338  0E00               	movlw	0
 32290  01533A  6E14               	movwf	i2___fldiv@b+1,c
 32291  01533C  0E00               	movlw	0
 32292  01533E  6E15               	movwf	i2___fldiv@b+2,c
 32293  015340                     L17:
 32294  015340  0E00               	movlw	0
 32295  015342  6E16               	movwf	i2___fldiv@b+3,c
 32296  015344  501A               	movf	i2___fldiv@a+3,w,c
 32297  015346  0B80               	andlw	128
 32298  015348  1A1F               	xorwf	i2___fldiv@sign,f,c
 32299  01534A  501A               	movf	i2___fldiv@a+3,w,c
 32300  01534C  241A               	addwf	i2___fldiv@a+3,w,c
 32301  01534E  6E2B               	movwf	i2___fldiv@aexp,c
 32302  015350  BE19               	btfsc	i2___fldiv@a+2,7,c
 32303  015352  802B               	bsf	i2___fldiv@aexp,0,c
 32304  015354  502B               	movf	i2___fldiv@aexp,w,c
 32305  015356  B4D8               	btfsc	status,2,c
 32306  015358  D00D               	goto	i2l2058
 32307  01535A  282B               	incf	i2___fldiv@aexp,w,c
 32308  01535C  A4D8               	btfss	status,2,c
 32309  01535E  D008               	goto	i2l2059
 32310  015360  0E00               	movlw	0
 32311  015362  6E17               	movwf	i2___fldiv@a,c
 32312  015364  0E00               	movlw	0
 32313  015366  6E18               	movwf	i2___fldiv@a+1,c
 32314  015368  0E00               	movlw	0
 32315  01536A  6E19               	movwf	i2___fldiv@a+2,c
 32316  01536C  0E00               	movlw	0
 32317  01536E  6E1A               	movwf	i2___fldiv@a+3,c
 32318  015370                     i2l2059:
 32319  015370  8E19               	bsf	i2___fldiv@a+2,7,c
 32320  015372  D006               	goto	L18
 32321  015374                     i2l2058:
 32322  015374  0E00               	movlw	0
 32323  015376  6E17               	movwf	i2___fldiv@a,c
 32324  015378  0E00               	movlw	0
 32325  01537A  6E18               	movwf	i2___fldiv@a+1,c
 32326  01537C  0E00               	movlw	0
 32327  01537E  6E19               	movwf	i2___fldiv@a+2,c
 32328  015380                     L18:
 32329  015380  0E00               	movlw	0
 32330  015382  6E1A               	movwf	i2___fldiv@a+3,c
 32331  015384  5017               	movf	i2___fldiv@a,w,c
 32332  015386  1018               	iorwf	i2___fldiv@a+1,w,c
 32333  015388  1019               	iorwf	i2___fldiv@a+2,w,c
 32334  01538A  101A               	iorwf	i2___fldiv@a+3,w,c
 32335  01538C  A4D8               	btfss	status,2,c
 32336  01538E  D015               	goto	i2l2061
 32337  015390  0E00               	movlw	0
 32338  015392  6E13               	movwf	i2___fldiv@b,c
 32339  015394  0E00               	movlw	0
 32340  015396  6E14               	movwf	i2___fldiv@b+1,c
 32341  015398  0E00               	movlw	0
 32342  01539A  6E15               	movwf	i2___fldiv@b+2,c
 32343  01539C  0E00               	movlw	0
 32344  01539E  6E16               	movwf	i2___fldiv@b+3,c
 32345  0153A0  0E80               	movlw	128
 32346  0153A2  1215               	iorwf	i2___fldiv@b+2,f,c
 32347  0153A4  0E7F               	movlw	127
 32348  0153A6  1216               	iorwf	i2___fldiv@b+3,f,c
 32349  0153A8  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 32350  0153AC  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 32351  0153B0  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 32352  0153B4  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 32353  0153B8  0012               	return	
 32354  0153BA                     i2l2061:
 32355  0153BA  502A               	movf	i2___fldiv@bexp,w,c
 32356  0153BC  A4D8               	btfss	status,2,c
 32357  0153BE  D011               	goto	i2l2063
 32358  0153C0  0E00               	movlw	0
 32359  0153C2  6E13               	movwf	i2___fldiv@b,c
 32360  0153C4  0E00               	movlw	0
 32361  0153C6  6E14               	movwf	i2___fldiv@b+1,c
 32362  0153C8  0E00               	movlw	0
 32363  0153CA  6E15               	movwf	i2___fldiv@b+2,c
 32364  0153CC  0E00               	movlw	0
 32365  0153CE  6E16               	movwf	i2___fldiv@b+3,c
 32366  0153D0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 32367  0153D4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 32368  0153D8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 32369  0153DC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 32370  0153E0  0012               	return	
 32371  0153E2                     i2l2063:
 32372  0153E2  502B               	movf	i2___fldiv@aexp,w,c
 32373  0153E4  6E1B               	movwf	??i2___fldiv& (0+255),c
 32374  0153E6  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 32375  0153E8  1E1B               	comf	??i2___fldiv,f,c
 32376  0153EA  1E1C               	comf	??i2___fldiv+1,f,c
 32377  0153EC  4A1B               	infsnz	??i2___fldiv,f,c
 32378  0153EE  2A1C               	incf	??i2___fldiv+1,f,c
 32379  0153F0  502A               	movf	i2___fldiv@bexp,w,c
 32380  0153F2  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 32381  0153F4  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 32382  0153F6  501B               	movf	??i2___fldiv,w,c
 32383  0153F8  261D               	addwf	??i2___fldiv+2,f,c
 32384  0153FA  501C               	movf	??i2___fldiv+1,w,c
 32385  0153FC  221E               	addwfc	??i2___fldiv+3,f,c
 32386  0153FE  0E7F               	movlw	127
 32387  015400  241D               	addwf	??i2___fldiv+2,w,c
 32388  015402  6E24               	movwf	i2___fldiv@new_exp,c
 32389  015404  0E00               	movlw	0
 32390  015406  201E               	addwfc	??i2___fldiv+3,w,c
 32391  015408  6E25               	movwf	i2___fldiv@new_exp+1,c
 32392  01540A  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 32393  01540E  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 32394  015412  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 32395  015416  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 32396  01541A  0E00               	movlw	0
 32397  01541C  6E13               	movwf	i2___fldiv@b,c
 32398  01541E  0E00               	movlw	0
 32399  015420  6E14               	movwf	i2___fldiv@b+1,c
 32400  015422  0E00               	movlw	0
 32401  015424  6E15               	movwf	i2___fldiv@b+2,c
 32402  015426  0E00               	movlw	0
 32403  015428  6E16               	movwf	i2___fldiv@b+3,c
 32404  01542A  0E00               	movlw	0
 32405  01542C  6E26               	movwf	i2___fldiv@grs,c
 32406  01542E  0E00               	movlw	0
 32407  015430  6E27               	movwf	i2___fldiv@grs+1,c
 32408  015432  0E00               	movlw	0
 32409  015434  6E28               	movwf	i2___fldiv@grs+2,c
 32410  015436  0E00               	movlw	0
 32411  015438  6E29               	movwf	i2___fldiv@grs+3,c
 32412  01543A  0E00               	movlw	0
 32413  01543C  6E2B               	movwf	i2___fldiv@aexp,c
 32414  01543E  D028               	goto	i2l2064
 32415  015440  502B               	movf	i2___fldiv@aexp,w,c
 32416  015442  B4D8               	btfsc	status,2,c
 32417  015444  D011               	goto	i2l2066
 32418  015446  90D8               	bcf	status,0,c
 32419  015448  3620               	rlcf	i2___fldiv@rem,f,c
 32420  01544A  3621               	rlcf	i2___fldiv@rem+1,f,c
 32421  01544C  3622               	rlcf	i2___fldiv@rem+2,f,c
 32422  01544E  3623               	rlcf	i2___fldiv@rem+3,f,c
 32423  015450  90D8               	bcf	status,0,c
 32424  015452  3613               	rlcf	i2___fldiv@b,f,c
 32425  015454  3614               	rlcf	i2___fldiv@b+1,f,c
 32426  015456  3615               	rlcf	i2___fldiv@b+2,f,c
 32427  015458  3616               	rlcf	i2___fldiv@b+3,f,c
 32428  01545A  BE29               	btfsc	i2___fldiv@grs+3,7,c
 32429  01545C  8013               	bsf	i2___fldiv@b,0,c
 32430  01545E  90D8               	bcf	status,0,c
 32431  015460  3626               	rlcf	i2___fldiv@grs,f,c
 32432  015462  3627               	rlcf	i2___fldiv@grs+1,f,c
 32433  015464  3628               	rlcf	i2___fldiv@grs+2,f,c
 32434  015466  3629               	rlcf	i2___fldiv@grs+3,f,c
 32435  015468                     i2l2066:
 32436  015468  5017               	movf	i2___fldiv@a,w,c
 32437  01546A  5C20               	subwf	i2___fldiv@rem,w,c
 32438  01546C  5018               	movf	i2___fldiv@a+1,w,c
 32439  01546E  5821               	subwfb	i2___fldiv@rem+1,w,c
 32440  015470  5019               	movf	i2___fldiv@a+2,w,c
 32441  015472  5822               	subwfb	i2___fldiv@rem+2,w,c
 32442  015474  501A               	movf	i2___fldiv@a+3,w,c
 32443  015476  5823               	subwfb	i2___fldiv@rem+3,w,c
 32444  015478  A0D8               	btfss	status,0,c
 32445  01547A  D009               	goto	i2l2068
 32446  01547C  8C29               	bsf	i2___fldiv@grs+3,6,c
 32447  01547E  5017               	movf	i2___fldiv@a,w,c
 32448  015480  5E20               	subwf	i2___fldiv@rem,f,c
 32449  015482  5018               	movf	i2___fldiv@a+1,w,c
 32450  015484  5A21               	subwfb	i2___fldiv@rem+1,f,c
 32451  015486  5019               	movf	i2___fldiv@a+2,w,c
 32452  015488  5A22               	subwfb	i2___fldiv@rem+2,f,c
 32453  01548A  501A               	movf	i2___fldiv@a+3,w,c
 32454  01548C  5A23               	subwfb	i2___fldiv@rem+3,f,c
 32455  01548E                     i2l2068:
 32456  01548E  2A2B               	incf	i2___fldiv@aexp,f,c
 32457  015490                     i2l2064:
 32458  015490  0E19               	movlw	25
 32459  015492  642B               	cpfsgt	i2___fldiv@aexp,c
 32460  015494  D7D5               	goto	i2l2065
 32461  015496  5020               	movf	i2___fldiv@rem,w,c
 32462  015498  1021               	iorwf	i2___fldiv@rem+1,w,c
 32463  01549A  1022               	iorwf	i2___fldiv@rem+2,w,c
 32464  01549C  1023               	iorwf	i2___fldiv@rem+3,w,c
 32465  01549E  B4D8               	btfsc	status,2,c
 32466  0154A0  D011               	goto	i2l2071
 32467  0154A2  8026               	bsf	i2___fldiv@grs,0,c
 32468  0154A4  D00F               	goto	i2l2071
 32469  0154A6  90D8               	bcf	status,0,c
 32470  0154A8  3613               	rlcf	i2___fldiv@b,f,c
 32471  0154AA  3614               	rlcf	i2___fldiv@b+1,f,c
 32472  0154AC  3615               	rlcf	i2___fldiv@b+2,f,c
 32473  0154AE  3616               	rlcf	i2___fldiv@b+3,f,c
 32474  0154B0  BE29               	btfsc	i2___fldiv@grs+3,7,c
 32475  0154B2  8013               	bsf	i2___fldiv@b,0,c
 32476  0154B4  90D8               	bcf	status,0,c
 32477  0154B6  3626               	rlcf	i2___fldiv@grs,f,c
 32478  0154B8  3627               	rlcf	i2___fldiv@grs+1,f,c
 32479  0154BA  3628               	rlcf	i2___fldiv@grs+2,f,c
 32480  0154BC  3629               	rlcf	i2___fldiv@grs+3,f,c
 32481  0154BE  0624               	decf	i2___fldiv@new_exp,f,c
 32482  0154C0  A0D8               	btfss	status,0,c
 32483  0154C2  0625               	decf	i2___fldiv@new_exp+1,f,c
 32484  0154C4                     i2l2071:
 32485  0154C4  AE15               	btfss	i2___fldiv@b+2,7,c
 32486  0154C6  D7EF               	goto	i2l2072
 32487  0154C8  0E00               	movlw	0
 32488  0154CA  6E2B               	movwf	i2___fldiv@aexp,c
 32489  0154CC  AE29               	btfss	i2___fldiv@grs+3,7,c
 32490  0154CE  D016               	goto	i2l2078
 32491  0154D0  0EFF               	movlw	255
 32492  0154D2  1426               	andwf	i2___fldiv@grs,w,c
 32493  0154D4  6E1B               	movwf	??i2___fldiv& (0+255),c
 32494  0154D6  0EFF               	movlw	255
 32495  0154D8  1427               	andwf	i2___fldiv@grs+1,w,c
 32496  0154DA  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 32497  0154DC  0EFF               	movlw	255
 32498  0154DE  1428               	andwf	i2___fldiv@grs+2,w,c
 32499  0154E0  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 32500  0154E2  0E7F               	movlw	127
 32501  0154E4  1429               	andwf	i2___fldiv@grs+3,w,c
 32502  0154E6  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 32503  0154E8  501B               	movf	??i2___fldiv,w,c
 32504  0154EA  101C               	iorwf	??i2___fldiv+1,w,c
 32505  0154EC  101D               	iorwf	??i2___fldiv+2,w,c
 32506  0154EE  101E               	iorwf	??i2___fldiv+3,w,c
 32507  0154F0  A4D8               	btfss	status,2,c
 32508  0154F2  D002               	goto	i2u750_40
 32509  0154F4  A013               	btfss	i2___fldiv@b,0,c
 32510  0154F6  D002               	goto	i2l2078
 32511  0154F8                     i2u750_40:
 32512  0154F8  0E01               	movlw	1
 32513  0154FA  6E2B               	movwf	i2___fldiv@aexp,c
 32514  0154FC                     i2l2078:
 32515  0154FC  502B               	movf	i2___fldiv@aexp,w,c
 32516  0154FE  B4D8               	btfsc	status,2,c
 32517  015500  D01F               	goto	i2l2080
 32518  015502  0E01               	movlw	1
 32519  015504  2613               	addwf	i2___fldiv@b,f,c
 32520  015506  0E00               	movlw	0
 32521  015508  2214               	addwfc	i2___fldiv@b+1,f,c
 32522  01550A  2215               	addwfc	i2___fldiv@b+2,f,c
 32523  01550C  2216               	addwfc	i2___fldiv@b+3,f,c
 32524  01550E  A016               	btfss	i2___fldiv@b+3,0,c
 32525  015510  D017               	goto	i2l2080
 32526  015512  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 32527  015516  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 32528  01551A  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 32529  01551E  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 32530  015522  341E               	rlcf	??i2___fldiv+3,w,c
 32531  015524  321E               	rrcf	??i2___fldiv+3,f,c
 32532  015526  321D               	rrcf	??i2___fldiv+2,f,c
 32533  015528  321C               	rrcf	??i2___fldiv+1,f,c
 32534  01552A  321B               	rrcf	??i2___fldiv,f,c
 32535  01552C  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 32536  015530  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 32537  015534  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 32538  015538  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 32539  01553C  4A24               	infsnz	i2___fldiv@new_exp,f,c
 32540  01553E  2A25               	incf	i2___fldiv@new_exp+1,f,c
 32541  015540                     i2l2080:
 32542  015540  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 32543  015542  D010               	goto	i2l2081
 32544  015544  5025               	movf	i2___fldiv@new_exp+1,w,c
 32545  015546  E103               	bnz	i2u753_40
 32546  015548  2824               	incf	i2___fldiv@new_exp,w,c
 32547  01554A  A0D8               	btfss	status,0,c
 32548  01554C  D00B               	goto	i2l2081
 32549  01554E                     i2u753_40:
 32550  01554E  0E00               	movlw	0
 32551  015550  6E25               	movwf	i2___fldiv@new_exp+1,c
 32552  015552  6824               	setf	i2___fldiv@new_exp,c
 32553  015554  0E00               	movlw	0
 32554  015556  6E13               	movwf	i2___fldiv@b,c
 32555  015558  0E00               	movlw	0
 32556  01555A  6E14               	movwf	i2___fldiv@b+1,c
 32557  01555C  0E00               	movlw	0
 32558  01555E  6E15               	movwf	i2___fldiv@b+2,c
 32559  015560  0E00               	movlw	0
 32560  015562  6E16               	movwf	i2___fldiv@b+3,c
 32561  015564                     i2l2081:
 32562  015564  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 32563  015566  D005               	goto	i2u754_40
 32564  015568  5025               	movf	i2___fldiv@new_exp+1,w,c
 32565  01556A  E111               	bnz	i2l7452
 32566  01556C  0424               	decf	i2___fldiv@new_exp,w,c
 32567  01556E  B0D8               	btfsc	status,0,c
 32568  015570  D00E               	goto	i2l2082
 32569  015572                     i2u754_40:
 32570  015572  0E00               	movlw	0
 32571  015574  6E25               	movwf	i2___fldiv@new_exp+1,c
 32572  015576  0E00               	movlw	0
 32573  015578  6E24               	movwf	i2___fldiv@new_exp,c
 32574  01557A  0E00               	movlw	0
 32575  01557C  6E13               	movwf	i2___fldiv@b,c
 32576  01557E  0E00               	movlw	0
 32577  015580  6E14               	movwf	i2___fldiv@b+1,c
 32578  015582  0E00               	movlw	0
 32579  015584  6E15               	movwf	i2___fldiv@b+2,c
 32580  015586  0E00               	movlw	0
 32581  015588  6E16               	movwf	i2___fldiv@b+3,c
 32582  01558A  0E00               	movlw	0
 32583  01558C  6E1F               	movwf	i2___fldiv@sign,c
 32584  01558E                     i2l2082:
 32585  01558E                     i2l7452:
 32586  01558E  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 32587  015592  A02A               	btfss	i2___fldiv@bexp,0,c
 32588  015594  D002               	goto	i2l2083
 32589  015596  8E15               	bsf	i2___fldiv@b+2,7,c
 32590  015598  D001               	goto	i2l2084
 32591  01559A                     i2l2083:
 32592  01559A  9E15               	bcf	i2___fldiv@b+2,7,c
 32593  01559C                     i2l2084:
 32594  01559C  90D8               	bcf	status,0,c
 32595  01559E  302A               	rrcf	i2___fldiv@bexp,w,c
 32596  0155A0  6E16               	movwf	i2___fldiv@b+3,c
 32597  0155A2  501F               	movf	i2___fldiv@sign,w,c
 32598  0155A4  1216               	iorwf	i2___fldiv@b+3,f,c
 32599  0155A6  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 32600  0155AA  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 32601  0155AE  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 32602  0155B2  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 32603  0155B6  0012               	return	
 32604  0155B8                     __end_ofi2___fldiv:
 32605                           	opt stack 0
 32606                           tosu	equ	0xFFF
 32607                           tosh	equ	0xFFE
 32608                           tosl	equ	0xFFD
 32609                           pclatu	equ	0xFFB
 32610                           pclath	equ	0xFFA
 32611                           tblptru	equ	0xFF8
 32612                           tblptrh	equ	0xFF7
 32613                           tblptrl	equ	0xFF6
 32614                           tablat	equ	0xFF5
 32615                           prodh	equ	0xFF4
 32616                           prodl	equ	0xFF3
 32617                           intcon	equ	0xFF2
 32618                           indf0	equ	0xFEF
 32619                           postinc0	equ	0xFEE
 32620                           fsr0h	equ	0xFEA
 32621                           fsr0l	equ	0xFE9
 32622                           wreg	equ	0xFE8
 32623                           indf1	equ	0xFE7
 32624                           postdec1	equ	0xFE5
 32625                           plusw1	equ	0xFE3
 32626                           fsr1h	equ	0xFE2
 32627                           fsr1l	equ	0xFE1
 32628                           bsr	equ	0xFE0
 32629                           indf2	equ	0xFDF
 32630                           postinc2	equ	0xFDE
 32631                           postdec2	equ	0xFDD
 32632                           plusw2	equ	0xFDB
 32633                           fsr2h	equ	0xFDA
 32634                           fsr2l	equ	0xFD9
 32635                           status	equ	0xFD8
 32636                           
 32637 ;; *************** function _floor *****************
 32638 ;; Defined at:
 32639 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 32640 ;; Parameters:    Size  Location     Type
 32641 ;;  x               4   12[BANK0 ] unsigned char 
 32642 ;; Auto vars:     Size  Location     Type
 32643 ;;  i               4   16[BANK0 ] unsigned char 
 32644 ;;  expon           2   20[BANK0 ] int 
 32645 ;; Return value:  Size  Location     Type
 32646 ;;                  4   12[BANK0 ] int 
 32647 ;; Registers used:
 32648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32649 ;; Tracked objects:
 32650 ;;		On entry : 0/0
 32651 ;;		On exit  : 0/0
 32652 ;;		Unchanged: 0/0
 32653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32655 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32657 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32658 ;;Total ram usage:       10 bytes
 32659 ;; Hardware stack levels used:    1
 32660 ;; Hardware stack levels required when called:    1
 32661 ;; This function calls:
 32662 ;;		_frexp
 32663 ;;		i2___fladd
 32664 ;;		i2___flge
 32665 ;;		i2___fltol
 32666 ;;		i2___xxtofl
 32667 ;; This function is called by:
 32668 ;;		_sin
 32669 ;; This function uses a non-reentrant model
 32670 ;;
 32671                           
 32672                           	psect	text113
 32673  0167A0                     __ptext113:
 32674                           	opt stack 0
 32675  0167A0                     _floor:
 32676                           	opt stack 13
 32677                           
 32678                           ;incstack = 0
 32679  0167A0  C06C  F001         	movff	floor@x,frexp@value
 32680  0167A4  C06D  F002         	movff	floor@x+1,frexp@value+1
 32681  0167A8  C06E  F003         	movff	floor@x+2,frexp@value+2
 32682  0167AC  C06F  F004         	movff	floor@x+3,frexp@value+3
 32683  0167B0  0E74               	movlw	low floor@expon
 32684  0167B2  6E05               	movwf	frexp@eptr,c
 32685  0167B4  0E00               	movlw	high floor@expon
 32686  0167B6  6E06               	movwf	frexp@eptr+1,c
 32687  0167B8  ECE5  F0B9         	call	_frexp	;wreg free
 32688  0167BC  0100               	movlb	0	; () banked
 32689  0167BE  AF75               	btfss	(floor@expon+1)& (0+255),7,b
 32690  0167C0  D014               	goto	i2l2211
 32691                           
 32692                           ; BSR set to: 0
 32693  0167C2  AF6F               	btfss	(floor@x+3)& (0+255),7,b
 32694  0167C4  D009               	goto	i2l2212
 32695                           
 32696                           ; BSR set to: 0
 32697  0167C6  0E00               	movlw	0
 32698  0167C8  6F6C               	movwf	?_floor& (0+255),b
 32699  0167CA  0E00               	movlw	0
 32700  0167CC  6F6D               	movwf	(?_floor+1)& (0+255),b
 32701  0167CE  0E80               	movlw	128
 32702  0167D0  6F6E               	movwf	(?_floor+2)& (0+255),b
 32703  0167D2  0EBF               	movlw	191
 32704  0167D4  6F6F               	movwf	(?_floor+3)& (0+255),b
 32705                           
 32706                           ; BSR set to: 0
 32707  0167D6  0012               	return	
 32708  0167D8                     i2l2212:
 32709                           
 32710                           ; BSR set to: 0
 32711                           
 32712                           ; BSR set to: 0
 32713  0167D8  0E00               	movlw	0
 32714  0167DA  6F6C               	movwf	?_floor& (0+255),b
 32715  0167DC  0E00               	movlw	0
 32716  0167DE  6F6D               	movwf	(?_floor+1)& (0+255),b
 32717  0167E0  0E00               	movlw	0
 32718  0167E2  6F6E               	movwf	(?_floor+2)& (0+255),b
 32719  0167E4  0E00               	movlw	0
 32720  0167E6  6F6F               	movwf	(?_floor+3)& (0+255),b
 32721                           
 32722                           ; BSR set to: 0
 32723  0167E8  0012               	return	
 32724  0167EA                     i2l2211:
 32725                           
 32726                           ; BSR set to: 0
 32727                           
 32728                           ; BSR set to: 0
 32729  0167EA  5175               	movf	(floor@expon+1)& (0+255),w,b
 32730  0167EC  E104               	bnz	i2u1455_40
 32731  0167EE  0E1D               	movlw	29
 32732  0167F0  5D74               	subwf	floor@expon& (0+255),w,b
 32733  0167F2  A0D8               	btfss	status,0,c
 32734  0167F4  D009               	goto	i2l2214
 32735  0167F6                     i2u1455_40:
 32736                           
 32737                           ; BSR set to: 0
 32738  0167F6  C06C  F06C         	movff	floor@x,?_floor
 32739  0167FA  C06D  F06D         	movff	floor@x+1,?_floor+1
 32740  0167FE  C06E  F06E         	movff	floor@x+2,?_floor+2
 32741  016802  C06F  F06F         	movff	floor@x+3,?_floor+3
 32742  016806  0012               	return	
 32743  016808                     i2l2214:
 32744                           
 32745                           ; BSR set to: 0
 32746                           
 32747                           ; BSR set to: 0
 32748  016808  C06C  F049         	movff	floor@x,i2___fltol@f1
 32749  01680C  C06D  F04A         	movff	floor@x+1,i2___fltol@f1+1
 32750  016810  C06E  F04B         	movff	floor@x+2,i2___fltol@f1+2
 32751  016814  C06F  F04C         	movff	floor@x+3,i2___fltol@f1+3
 32752  016818  EC48  F0B5         	call	i2___fltol	;wreg free
 32753  01681C  C049  F005         	movff	?i2___fltol,i2___xxtofl@val
 32754  016820  C04A  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 32755  016824  C04B  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 32756  016828  C04C  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 32757  01682C  0E01               	movlw	1
 32758  01682E  EC1D  F0AF         	call	i2___xxtofl
 32759  016832  C005  F070         	movff	?i2___xxtofl,floor@i
 32760  016836  C006  F071         	movff	?i2___xxtofl+1,floor@i+1
 32761  01683A  C007  F072         	movff	?i2___xxtofl+2,floor@i+2
 32762  01683E  C008  F073         	movff	?i2___xxtofl+3,floor@i+3
 32763  016842  C06C  F034         	movff	floor@x,i2___flge@ff1
 32764  016846  C06D  F035         	movff	floor@x+1,i2___flge@ff1+1
 32765  01684A  C06E  F036         	movff	floor@x+2,i2___flge@ff1+2
 32766  01684E  C06F  F037         	movff	floor@x+3,i2___flge@ff1+3
 32767  016852  C070  F038         	movff	floor@i,i2___flge@ff2
 32768  016856  C071  F039         	movff	floor@i+1,i2___flge@ff2+1
 32769  01685A  C072  F03A         	movff	floor@i+2,i2___flge@ff2+2
 32770  01685E  C073  F03B         	movff	floor@i+3,i2___flge@ff2+3
 32771  016862  ECB2  F0B2         	call	i2___flge	;wreg free
 32772  016866  B0D8               	btfsc	status,0,c
 32773  016868  D01B               	goto	i2l2215
 32774  01686A  C070  F056         	movff	floor@i,i2___fladd@b
 32775  01686E  C071  F057         	movff	floor@i+1,i2___fladd@b+1
 32776  016872  C072  F058         	movff	floor@i+2,i2___fladd@b+2
 32777  016876  C073  F059         	movff	floor@i+3,i2___fladd@b+3
 32778  01687A  0E00               	movlw	0
 32779  01687C  6E5A               	movwf	i2___fladd@a,c
 32780  01687E  0E00               	movlw	0
 32781  016880  6E5B               	movwf	i2___fladd@a+1,c
 32782  016882  0E80               	movlw	128
 32783  016884  6E5C               	movwf	i2___fladd@a+2,c
 32784  016886  0EBF               	movlw	191
 32785  016888  6E5D               	movwf	i2___fladd@a+3,c
 32786  01688A  ECC2  F0A0         	call	i2___fladd	;wreg free
 32787  01688E  C056  F06C         	movff	?i2___fladd,?_floor
 32788  016892  C057  F06D         	movff	?i2___fladd+1,?_floor+1
 32789  016896  C058  F06E         	movff	?i2___fladd+2,?_floor+2
 32790  01689A  C059  F06F         	movff	?i2___fladd+3,?_floor+3
 32791  01689E  0012               	return	
 32792  0168A0                     i2l2215:
 32793  0168A0  C070  F06C         	movff	floor@i,?_floor
 32794  0168A4  C071  F06D         	movff	floor@i+1,?_floor+1
 32795  0168A8  C072  F06E         	movff	floor@i+2,?_floor+2
 32796  0168AC  C073  F06F         	movff	floor@i+3,?_floor+3
 32797  0168B0  0012               	return		;funcret
 32798  0168B2                     __end_of_floor:
 32799                           	opt stack 0
 32800                           tosu	equ	0xFFF
 32801                           tosh	equ	0xFFE
 32802                           tosl	equ	0xFFD
 32803                           pclatu	equ	0xFFB
 32804                           pclath	equ	0xFFA
 32805                           tblptru	equ	0xFF8
 32806                           tblptrh	equ	0xFF7
 32807                           tblptrl	equ	0xFF6
 32808                           tablat	equ	0xFF5
 32809                           prodh	equ	0xFF4
 32810                           prodl	equ	0xFF3
 32811                           intcon	equ	0xFF2
 32812                           indf0	equ	0xFEF
 32813                           postinc0	equ	0xFEE
 32814                           fsr0h	equ	0xFEA
 32815                           fsr0l	equ	0xFE9
 32816                           wreg	equ	0xFE8
 32817                           indf1	equ	0xFE7
 32818                           postdec1	equ	0xFE5
 32819                           plusw1	equ	0xFE3
 32820                           fsr1h	equ	0xFE2
 32821                           fsr1l	equ	0xFE1
 32822                           bsr	equ	0xFE0
 32823                           indf2	equ	0xFDF
 32824                           postinc2	equ	0xFDE
 32825                           postdec2	equ	0xFDD
 32826                           plusw2	equ	0xFDB
 32827                           fsr2h	equ	0xFDA
 32828                           fsr2l	equ	0xFD9
 32829                           status	equ	0xFD8
 32830                           
 32831 ;; *************** function i2___xxtofl *****************
 32832 ;; Defined at:
 32833 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 32834 ;; Parameters:    Size  Location     Type
 32835 ;;  sign            1    wreg     unsigned char 
 32836 ;;  val             4    4[COMRAM] long 
 32837 ;; Auto vars:     Size  Location     Type
 32838 ;;  sign            1   12[COMRAM] unsigned char 
 32839 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 32840 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 32841 ;; Return value:  Size  Location     Type
 32842 ;;                  4    4[COMRAM] unsigned char 
 32843 ;; Registers used:
 32844 ;;		wreg, status,2, status,0
 32845 ;; Tracked objects:
 32846 ;;		On entry : 0/0
 32847 ;;		On exit  : 0/0
 32848 ;;		Unchanged: 0/0
 32849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32851 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32853 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32854 ;;Total ram usage:       14 bytes
 32855 ;; Hardware stack levels used:    1
 32856 ;; This function calls:
 32857 ;;		Nothing
 32858 ;; This function is called by:
 32859 ;;		_ADCPostProcessingCallback
 32860 ;;		_floor
 32861 ;;		i2_printf
 32862 ;; This function uses a non-reentrant model
 32863 ;;
 32864                           
 32865                           	psect	text114
 32866  015E3A                     __ptext114:
 32867                           	opt stack 0
 32868  015E3A                     i2___xxtofl:
 32869                           	opt stack 16
 32870                           
 32871                           ;incstack = 0
 32872                           ;i2___xxtofl@sign stored from wreg
 32873  015E3A  6E0D               	movwf	i2___xxtofl@sign,c
 32874  015E3C  500D               	movf	i2___xxtofl@sign,w,c
 32875  015E3E  A4D8               	btfss	status,2,c
 32876  015E40  AE08               	btfss	i2___xxtofl@val+3,7,c
 32877  015E42  D01A               	goto	i2l2190
 32878  015E44  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 32879  015E48  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 32880  015E4C  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 32881  015E50  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 32882  015E54  1E09               	comf	??i2___xxtofl,f,c
 32883  015E56  1E0A               	comf	??i2___xxtofl+1,f,c
 32884  015E58  1E0B               	comf	??i2___xxtofl+2,f,c
 32885  015E5A  1E0C               	comf	??i2___xxtofl+3,f,c
 32886  015E5C  2A09               	incf	??i2___xxtofl,f,c
 32887  015E5E  0E00               	movlw	0
 32888  015E60  220A               	addwfc	??i2___xxtofl+1,f,c
 32889  015E62  220B               	addwfc	??i2___xxtofl+2,f,c
 32890  015E64  220C               	addwfc	??i2___xxtofl+3,f,c
 32891  015E66  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 32892  015E6A  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 32893  015E6E  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 32894  015E72  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 32895  015E76  D008               	goto	i2l2191
 32896  015E78                     i2l2190:
 32897  015E78  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 32898  015E7C  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 32899  015E80  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 32900  015E84  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 32901  015E88                     i2l2191:
 32902  015E88  5005               	movf	i2___xxtofl@val,w,c
 32903  015E8A  1006               	iorwf	i2___xxtofl@val+1,w,c
 32904  015E8C  1007               	iorwf	i2___xxtofl@val+2,w,c
 32905  015E8E  1008               	iorwf	i2___xxtofl@val+3,w,c
 32906  015E90  A4D8               	btfss	status,2,c
 32907  015E92  D009               	goto	i2l2192
 32908  015E94  0E00               	movlw	0
 32909  015E96  6E05               	movwf	?i2___xxtofl,c
 32910  015E98  0E00               	movlw	0
 32911  015E9A  6E06               	movwf	?i2___xxtofl+1,c
 32912  015E9C  0E00               	movlw	0
 32913  015E9E  6E07               	movwf	?i2___xxtofl+2,c
 32914  015EA0  0E00               	movlw	0
 32915  015EA2  6E08               	movwf	?i2___xxtofl+3,c
 32916  015EA4  0012               	return	
 32917  015EA6                     i2l2192:
 32918  015EA6  0E96               	movlw	150
 32919  015EA8  6E0E               	movwf	i2___xxtofl@exp,c
 32920  015EAA  D006               	goto	i2l2194
 32921  015EAC  2A0E               	incf	i2___xxtofl@exp,f,c
 32922  015EAE  90D8               	bcf	status,0,c
 32923  015EB0  3212               	rrcf	i2___xxtofl@arg+3,f,c
 32924  015EB2  3211               	rrcf	i2___xxtofl@arg+2,f,c
 32925  015EB4  3210               	rrcf	i2___xxtofl@arg+1,f,c
 32926  015EB6  320F               	rrcf	i2___xxtofl@arg,f,c
 32927  015EB8                     i2l2194:
 32928  015EB8  0E00               	movlw	0
 32929  015EBA  140F               	andwf	i2___xxtofl@arg,w,c
 32930  015EBC  6E09               	movwf	??i2___xxtofl& (0+255),c
 32931  015EBE  0E00               	movlw	0
 32932  015EC0  1410               	andwf	i2___xxtofl@arg+1,w,c
 32933  015EC2  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 32934  015EC4  0E00               	movlw	0
 32935  015EC6  1411               	andwf	i2___xxtofl@arg+2,w,c
 32936  015EC8  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 32937  015ECA  0EFE               	movlw	254
 32938  015ECC  1412               	andwf	i2___xxtofl@arg+3,w,c
 32939  015ECE  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 32940  015ED0  5009               	movf	??i2___xxtofl,w,c
 32941  015ED2  100A               	iorwf	??i2___xxtofl+1,w,c
 32942  015ED4  100B               	iorwf	??i2___xxtofl+2,w,c
 32943  015ED6  100C               	iorwf	??i2___xxtofl+3,w,c
 32944  015ED8  B4D8               	btfsc	status,2,c
 32945  015EDA  D00D               	goto	i2l2197
 32946  015EDC  D7E7               	goto	i2l2195
 32947  015EDE  2A0E               	incf	i2___xxtofl@exp,f,c
 32948  015EE0  0E01               	movlw	1
 32949  015EE2  260F               	addwf	i2___xxtofl@arg,f,c
 32950  015EE4  0E00               	movlw	0
 32951  015EE6  2210               	addwfc	i2___xxtofl@arg+1,f,c
 32952  015EE8  2211               	addwfc	i2___xxtofl@arg+2,f,c
 32953  015EEA  2212               	addwfc	i2___xxtofl@arg+3,f,c
 32954  015EEC  90D8               	bcf	status,0,c
 32955  015EEE  3212               	rrcf	i2___xxtofl@arg+3,f,c
 32956  015EF0  3211               	rrcf	i2___xxtofl@arg+2,f,c
 32957  015EF2  3210               	rrcf	i2___xxtofl@arg+1,f,c
 32958  015EF4  320F               	rrcf	i2___xxtofl@arg,f,c
 32959  015EF6                     i2l2197:
 32960  015EF6  0E00               	movlw	0
 32961  015EF8  140F               	andwf	i2___xxtofl@arg,w,c
 32962  015EFA  6E09               	movwf	??i2___xxtofl& (0+255),c
 32963  015EFC  0E00               	movlw	0
 32964  015EFE  1410               	andwf	i2___xxtofl@arg+1,w,c
 32965  015F00  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 32966  015F02  0E00               	movlw	0
 32967  015F04  1411               	andwf	i2___xxtofl@arg+2,w,c
 32968  015F06  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 32969  015F08  0EFF               	movlw	255
 32970  015F0A  1412               	andwf	i2___xxtofl@arg+3,w,c
 32971  015F0C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 32972  015F0E  5009               	movf	??i2___xxtofl,w,c
 32973  015F10  100A               	iorwf	??i2___xxtofl+1,w,c
 32974  015F12  100B               	iorwf	??i2___xxtofl+2,w,c
 32975  015F14  100C               	iorwf	??i2___xxtofl+3,w,c
 32976  015F16  B4D8               	btfsc	status,2,c
 32977  015F18  D007               	goto	i2l2200
 32978  015F1A  D7E1               	goto	i2l2198
 32979  015F1C  060E               	decf	i2___xxtofl@exp,f,c
 32980  015F1E  90D8               	bcf	status,0,c
 32981  015F20  360F               	rlcf	i2___xxtofl@arg,f,c
 32982  015F22  3610               	rlcf	i2___xxtofl@arg+1,f,c
 32983  015F24  3611               	rlcf	i2___xxtofl@arg+2,f,c
 32984  015F26  3612               	rlcf	i2___xxtofl@arg+3,f,c
 32985  015F28                     i2l2200:
 32986  015F28  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 32987  015F2A  D003               	goto	i2u1388_40
 32988  015F2C  0E02               	movlw	2
 32989  015F2E  600E               	cpfslt	i2___xxtofl@exp,c
 32990  015F30  D7F5               	goto	i2l2201
 32991  015F32                     i2u1388_40:
 32992  015F32  B00E               	btfsc	i2___xxtofl@exp,0,c
 32993  015F34  D008               	goto	i2l2205
 32994  015F36  0EFF               	movlw	255
 32995  015F38  160F               	andwf	i2___xxtofl@arg,f,c
 32996  015F3A  0EFF               	movlw	255
 32997  015F3C  1610               	andwf	i2___xxtofl@arg+1,f,c
 32998  015F3E  0E7F               	movlw	127
 32999  015F40  1611               	andwf	i2___xxtofl@arg+2,f,c
 33000  015F42  0EFF               	movlw	255
 33001  015F44  1612               	andwf	i2___xxtofl@arg+3,f,c
 33002  015F46                     i2l2205:
 33003  015F46  90D8               	bcf	status,0,c
 33004  015F48  320E               	rrcf	i2___xxtofl@exp,f,c
 33005  015F4A  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 33006  015F4E  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 33007  015F50  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 33008  015F52  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 33009  015F54  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 33010  015F58  6A0B               	clrf	??i2___xxtofl+2,c
 33011  015F5A  6A0A               	clrf	??i2___xxtofl+1,c
 33012  015F5C  6A09               	clrf	??i2___xxtofl,c
 33013  015F5E  5009               	movf	??i2___xxtofl,w,c
 33014  015F60  120F               	iorwf	i2___xxtofl@arg,f,c
 33015  015F62  500A               	movf	??i2___xxtofl+1,w,c
 33016  015F64  1210               	iorwf	i2___xxtofl@arg+1,f,c
 33017  015F66  500B               	movf	??i2___xxtofl+2,w,c
 33018  015F68  1211               	iorwf	i2___xxtofl@arg+2,f,c
 33019  015F6A  500C               	movf	??i2___xxtofl+3,w,c
 33020  015F6C  1212               	iorwf	i2___xxtofl@arg+3,f,c
 33021  015F6E  500D               	movf	i2___xxtofl@sign,w,c
 33022  015F70  A4D8               	btfss	status,2,c
 33023  015F72  AE08               	btfss	i2___xxtofl@val+3,7,c
 33024  015F74  D001               	goto	i2l2206
 33025  015F76  8E12               	bsf	i2___xxtofl@arg+3,7,c
 33026  015F78                     i2l2206:
 33027  015F78  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 33028  015F7C  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 33029  015F80  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 33030  015F84  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 33031  015F88  0012               	return	
 33032  015F8A                     __end_ofi2___xxtofl:
 33033                           	opt stack 0
 33034                           tosu	equ	0xFFF
 33035                           tosh	equ	0xFFE
 33036                           tosl	equ	0xFFD
 33037                           pclatu	equ	0xFFB
 33038                           pclath	equ	0xFFA
 33039                           tblptru	equ	0xFF8
 33040                           tblptrh	equ	0xFF7
 33041                           tblptrl	equ	0xFF6
 33042                           tablat	equ	0xFF5
 33043                           prodh	equ	0xFF4
 33044                           prodl	equ	0xFF3
 33045                           intcon	equ	0xFF2
 33046                           indf0	equ	0xFEF
 33047                           postinc0	equ	0xFEE
 33048                           fsr0h	equ	0xFEA
 33049                           fsr0l	equ	0xFE9
 33050                           wreg	equ	0xFE8
 33051                           indf1	equ	0xFE7
 33052                           postdec1	equ	0xFE5
 33053                           plusw1	equ	0xFE3
 33054                           fsr1h	equ	0xFE2
 33055                           fsr1l	equ	0xFE1
 33056                           bsr	equ	0xFE0
 33057                           indf2	equ	0xFDF
 33058                           postinc2	equ	0xFDE
 33059                           postdec2	equ	0xFDD
 33060                           plusw2	equ	0xFDB
 33061                           fsr2h	equ	0xFDA
 33062                           fsr2l	equ	0xFD9
 33063                           status	equ	0xFD8
 33064                           
 33065 ;; *************** function i2___fltol *****************
 33066 ;; Defined at:
 33067 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 33068 ;; Parameters:    Size  Location     Type
 33069 ;;  f1              4   72[COMRAM] unsigned char 
 33070 ;; Auto vars:     Size  Location     Type
 33071 ;;  __fltol         1   81[COMRAM] unsigned char 
 33072 ;;  __fltol         1   80[COMRAM] unsigned char 
 33073 ;; Return value:  Size  Location     Type
 33074 ;;                  4   72[COMRAM] long 
 33075 ;; Registers used:
 33076 ;;		wreg, status,2, status,0
 33077 ;; Tracked objects:
 33078 ;;		On entry : 0/0
 33079 ;;		On exit  : 0/0
 33080 ;;		Unchanged: 0/0
 33081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33084 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33085 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33086 ;;Total ram usage:       10 bytes
 33087 ;; Hardware stack levels used:    1
 33088 ;; This function calls:
 33089 ;;		Nothing
 33090 ;; This function is called by:
 33091 ;;		_floor
 33092 ;;		i2_printf
 33093 ;; This function uses a non-reentrant model
 33094 ;;
 33095                           
 33096                           	psect	text115
 33097  016A90                     __ptext115:
 33098                           	opt stack 0
 33099  016A90                     i2___fltol:
 33100                           	opt stack 16
 33101                           
 33102                           ;incstack = 0
 33103  016A90  344B               	rlcf	i2___fltol@f1+2,w,c
 33104  016A92  344C               	rlcf	i2___fltol@f1+3,w,c
 33105  016A94  6E52               	movwf	i2___fltol@exp1,c
 33106  016A96  5052               	movf	i2___fltol@exp1,w,c
 33107  016A98  A4D8               	btfss	status,2,c
 33108  016A9A  D009               	goto	i2l1757
 33109  016A9C  0E00               	movlw	0
 33110  016A9E  6E49               	movwf	?i2___fltol,c
 33111  016AA0  0E00               	movlw	0
 33112  016AA2  6E4A               	movwf	?i2___fltol+1,c
 33113  016AA4  0E00               	movlw	0
 33114  016AA6  6E4B               	movwf	?i2___fltol+2,c
 33115  016AA8  0E00               	movlw	0
 33116  016AAA  6E4C               	movwf	?i2___fltol+3,c
 33117  016AAC  0012               	return	
 33118  016AAE                     i2l1757:
 33119  016AAE  C049  F04D         	movff	i2___fltol@f1,??i2___fltol
 33120  016AB2  C04A  F04E         	movff	i2___fltol@f1+1,??i2___fltol+1
 33121  016AB6  C04B  F04F         	movff	i2___fltol@f1+2,??i2___fltol+2
 33122  016ABA  C04C  F050         	movff	i2___fltol@f1+3,??i2___fltol+3
 33123  016ABE  0E20               	movlw	32
 33124  016AC0  D005               	goto	i2u1376_40
 33125  016AC2                     i2u1376_45:
 33126  016AC2  90D8               	bcf	status,0,c
 33127  016AC4  3250               	rrcf	??i2___fltol+3,f,c
 33128  016AC6  324F               	rrcf	??i2___fltol+2,f,c
 33129  016AC8  324E               	rrcf	??i2___fltol+1,f,c
 33130  016ACA  324D               	rrcf	??i2___fltol,f,c
 33131  016ACC                     i2u1376_40:
 33132  016ACC  2EE8               	decfsz	wreg,f,c
 33133  016ACE  D7F9               	goto	i2u1376_45
 33134  016AD0  504D               	movf	??i2___fltol,w,c
 33135  016AD2  6E51               	movwf	i2___fltol@sign1,c
 33136  016AD4  8E4B               	bsf	i2___fltol@f1+2,7,c
 33137  016AD6  0EFF               	movlw	255
 33138  016AD8  1649               	andwf	i2___fltol@f1,f,c
 33139  016ADA  0EFF               	movlw	255
 33140  016ADC  164A               	andwf	i2___fltol@f1+1,f,c
 33141  016ADE  0EFF               	movlw	255
 33142  016AE0  164B               	andwf	i2___fltol@f1+2,f,c
 33143  016AE2  0E00               	movlw	0
 33144  016AE4  164C               	andwf	i2___fltol@f1+3,f,c
 33145  016AE6  0E96               	movlw	150
 33146  016AE8  5E52               	subwf	i2___fltol@exp1,f,c
 33147  016AEA  AE52               	btfss	i2___fltol@exp1,7,c
 33148  016AEC  D016               	goto	i2l1759
 33149  016AEE  5052               	movf	i2___fltol@exp1,w,c
 33150  016AF0  0A80               	xorlw	128
 33151  016AF2  0F97               	addlw	151
 33152  016AF4  B0D8               	btfsc	status,0,c
 33153  016AF6  D009               	goto	i2l1760
 33154  016AF8  0E00               	movlw	0
 33155  016AFA  6E49               	movwf	?i2___fltol,c
 33156  016AFC  0E00               	movlw	0
 33157  016AFE  6E4A               	movwf	?i2___fltol+1,c
 33158  016B00  0E00               	movlw	0
 33159  016B02  6E4B               	movwf	?i2___fltol+2,c
 33160  016B04  0E00               	movlw	0
 33161  016B06  6E4C               	movwf	?i2___fltol+3,c
 33162  016B08  0012               	return	
 33163  016B0A                     i2l1760:
 33164  016B0A  90D8               	bcf	status,0,c
 33165  016B0C  324C               	rrcf	i2___fltol@f1+3,f,c
 33166  016B0E  324B               	rrcf	i2___fltol@f1+2,f,c
 33167  016B10  324A               	rrcf	i2___fltol@f1+1,f,c
 33168  016B12  3249               	rrcf	i2___fltol@f1,f,c
 33169  016B14  3E52               	incfsz	i2___fltol@exp1,f,c
 33170  016B16  D7F9               	goto	i2l1760
 33171  016B18  D015               	goto	i2u1380_40
 33172  016B1A                     i2l1759:
 33173  016B1A  0E1F               	movlw	31
 33174  016B1C  6452               	cpfsgt	i2___fltol@exp1,c
 33175  016B1E  D00F               	goto	i2l1765
 33176  016B20  0E00               	movlw	0
 33177  016B22  6E49               	movwf	?i2___fltol,c
 33178  016B24  0E00               	movlw	0
 33179  016B26  6E4A               	movwf	?i2___fltol+1,c
 33180  016B28  0E00               	movlw	0
 33181  016B2A  6E4B               	movwf	?i2___fltol+2,c
 33182  016B2C  0E00               	movlw	0
 33183  016B2E  6E4C               	movwf	?i2___fltol+3,c
 33184  016B30  0012               	return	
 33185  016B32  90D8               	bcf	status,0,c
 33186  016B34  3649               	rlcf	i2___fltol@f1,f,c
 33187  016B36  364A               	rlcf	i2___fltol@f1+1,f,c
 33188  016B38  364B               	rlcf	i2___fltol@f1+2,f,c
 33189  016B3A  364C               	rlcf	i2___fltol@f1+3,f,c
 33190  016B3C  0652               	decf	i2___fltol@exp1,f,c
 33191  016B3E                     i2l1765:
 33192  016B3E  5052               	movf	i2___fltol@exp1,w,c
 33193  016B40  A4D8               	btfss	status,2,c
 33194  016B42  D7F7               	goto	i2l1766
 33195  016B44                     i2u1380_40:
 33196  016B44  5051               	movf	i2___fltol@sign1,w,c
 33197  016B46  B4D8               	btfsc	status,2,c
 33198  016B48  D008               	goto	i2l1768
 33199  016B4A  1E4C               	comf	i2___fltol@f1+3,f,c
 33200  016B4C  1E4B               	comf	i2___fltol@f1+2,f,c
 33201  016B4E  1E4A               	comf	i2___fltol@f1+1,f,c
 33202  016B50  6C49               	negf	i2___fltol@f1,c
 33203  016B52  0E00               	movlw	0
 33204  016B54  224A               	addwfc	i2___fltol@f1+1,f,c
 33205  016B56  224B               	addwfc	i2___fltol@f1+2,f,c
 33206  016B58  224C               	addwfc	i2___fltol@f1+3,f,c
 33207  016B5A                     i2l1768:
 33208  016B5A  C049  F049         	movff	i2___fltol@f1,?i2___fltol
 33209  016B5E  C04A  F04A         	movff	i2___fltol@f1+1,?i2___fltol+1
 33210  016B62  C04B  F04B         	movff	i2___fltol@f1+2,?i2___fltol+2
 33211  016B66  C04C  F04C         	movff	i2___fltol@f1+3,?i2___fltol+3
 33212  016B6A  0012               	return	
 33213  016B6C                     __end_ofi2___fltol:
 33214                           	opt stack 0
 33215                           tosu	equ	0xFFF
 33216                           tosh	equ	0xFFE
 33217                           tosl	equ	0xFFD
 33218                           pclatu	equ	0xFFB
 33219                           pclath	equ	0xFFA
 33220                           tblptru	equ	0xFF8
 33221                           tblptrh	equ	0xFF7
 33222                           tblptrl	equ	0xFF6
 33223                           tablat	equ	0xFF5
 33224                           prodh	equ	0xFF4
 33225                           prodl	equ	0xFF3
 33226                           intcon	equ	0xFF2
 33227                           indf0	equ	0xFEF
 33228                           postinc0	equ	0xFEE
 33229                           fsr0h	equ	0xFEA
 33230                           fsr0l	equ	0xFE9
 33231                           wreg	equ	0xFE8
 33232                           indf1	equ	0xFE7
 33233                           postdec1	equ	0xFE5
 33234                           plusw1	equ	0xFE3
 33235                           fsr1h	equ	0xFE2
 33236                           fsr1l	equ	0xFE1
 33237                           bsr	equ	0xFE0
 33238                           indf2	equ	0xFDF
 33239                           postinc2	equ	0xFDE
 33240                           postdec2	equ	0xFDD
 33241                           plusw2	equ	0xFDB
 33242                           fsr2h	equ	0xFDA
 33243                           fsr2l	equ	0xFD9
 33244                           status	equ	0xFD8
 33245                           
 33246 ;; *************** function i2___flge *****************
 33247 ;; Defined at:
 33248 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 33249 ;; Parameters:    Size  Location     Type
 33250 ;;  ff1             4   51[COMRAM] long 
 33251 ;;  ff2             4   55[COMRAM] long 
 33252 ;; Auto vars:     Size  Location     Type
 33253 ;;		None
 33254 ;; Return value:  Size  Location     Type
 33255 ;;		None               void
 33256 ;; Registers used:
 33257 ;;		wreg, status,2, status,0
 33258 ;; Tracked objects:
 33259 ;;		On entry : 0/0
 33260 ;;		On exit  : 0/0
 33261 ;;		Unchanged: 0/0
 33262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33263 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33265 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33266 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33267 ;;Total ram usage:       12 bytes
 33268 ;; Hardware stack levels used:    1
 33269 ;; This function calls:
 33270 ;;		Nothing
 33271 ;; This function is called by:
 33272 ;;		_ADCPostProcessingCallback
 33273 ;;		_asin
 33274 ;;		_atan
 33275 ;;		_sin
 33276 ;;		_floor
 33277 ;;		i2_printf
 33278 ;; This function uses a non-reentrant model
 33279 ;;
 33280                           
 33281                           	psect	text116
 33282  016564                     __ptext116:
 33283                           	opt stack 0
 33284  016564                     i2___flge:
 33285                           	opt stack 16
 33286                           
 33287                           ;incstack = 0
 33288  016564  0E00               	movlw	0
 33289  016566  1434               	andwf	i2___flge@ff1,w,c
 33290  016568  6E3C               	movwf	??i2___flge& (0+255),c
 33291  01656A  0E00               	movlw	0
 33292  01656C  1435               	andwf	i2___flge@ff1+1,w,c
 33293  01656E  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 33294  016570  0E80               	movlw	128
 33295  016572  1436               	andwf	i2___flge@ff1+2,w,c
 33296  016574  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 33297  016576  0E7F               	movlw	127
 33298  016578  1437               	andwf	i2___flge@ff1+3,w,c
 33299  01657A  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 33300  01657C  503C               	movf	??i2___flge,w,c
 33301  01657E  103D               	iorwf	??i2___flge+1,w,c
 33302  016580  103E               	iorwf	??i2___flge+2,w,c
 33303  016582  103F               	iorwf	??i2___flge+3,w,c
 33304  016584  A4D8               	btfss	status,2,c
 33305  016586  D008               	goto	i2l1727
 33306  016588  0E00               	movlw	0
 33307  01658A  6E34               	movwf	i2___flge@ff1,c
 33308  01658C  0E00               	movlw	0
 33309  01658E  6E35               	movwf	i2___flge@ff1+1,c
 33310  016590  0E00               	movlw	0
 33311  016592  6E36               	movwf	i2___flge@ff1+2,c
 33312  016594  0E00               	movlw	0
 33313  016596  6E37               	movwf	i2___flge@ff1+3,c
 33314  016598                     i2l1727:
 33315  016598  0E00               	movlw	0
 33316  01659A  1438               	andwf	i2___flge@ff2,w,c
 33317  01659C  6E3C               	movwf	??i2___flge& (0+255),c
 33318  01659E  0E00               	movlw	0
 33319  0165A0  1439               	andwf	i2___flge@ff2+1,w,c
 33320  0165A2  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 33321  0165A4  0E80               	movlw	128
 33322  0165A6  143A               	andwf	i2___flge@ff2+2,w,c
 33323  0165A8  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 33324  0165AA  0E7F               	movlw	127
 33325  0165AC  143B               	andwf	i2___flge@ff2+3,w,c
 33326  0165AE  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 33327  0165B0  503C               	movf	??i2___flge,w,c
 33328  0165B2  103D               	iorwf	??i2___flge+1,w,c
 33329  0165B4  103E               	iorwf	??i2___flge+2,w,c
 33330  0165B6  103F               	iorwf	??i2___flge+3,w,c
 33331  0165B8  A4D8               	btfss	status,2,c
 33332  0165BA  D008               	goto	i2l1728
 33333  0165BC  0E00               	movlw	0
 33334  0165BE  6E38               	movwf	i2___flge@ff2,c
 33335  0165C0  0E00               	movlw	0
 33336  0165C2  6E39               	movwf	i2___flge@ff2+1,c
 33337  0165C4  0E00               	movlw	0
 33338  0165C6  6E3A               	movwf	i2___flge@ff2+2,c
 33339  0165C8  0E00               	movlw	0
 33340  0165CA  6E3B               	movwf	i2___flge@ff2+3,c
 33341  0165CC                     i2l1728:
 33342  0165CC  AE37               	btfss	i2___flge@ff1+3,7,c
 33343  0165CE  D01D               	goto	i2l1729
 33344  0165D0  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 33345  0165D4  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 33346  0165D8  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 33347  0165DC  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 33348  0165E0  1E3C               	comf	??i2___flge,f,c
 33349  0165E2  1E3D               	comf	??i2___flge+1,f,c
 33350  0165E4  1E3E               	comf	??i2___flge+2,f,c
 33351  0165E6  1E3F               	comf	??i2___flge+3,f,c
 33352  0165E8  2A3C               	incf	??i2___flge,f,c
 33353  0165EA  0E00               	movlw	0
 33354  0165EC  223D               	addwfc	??i2___flge+1,f,c
 33355  0165EE  223E               	addwfc	??i2___flge+2,f,c
 33356  0165F0  223F               	addwfc	??i2___flge+3,f,c
 33357  0165F2  0E00               	movlw	0
 33358  0165F4  243C               	addwf	??i2___flge,w,c
 33359  0165F6  6E34               	movwf	i2___flge@ff1,c
 33360  0165F8  0E00               	movlw	0
 33361  0165FA  203D               	addwfc	??i2___flge+1,w,c
 33362  0165FC  6E35               	movwf	i2___flge@ff1+1,c
 33363  0165FE  0E00               	movlw	0
 33364  016600  203E               	addwfc	??i2___flge+2,w,c
 33365  016602  6E36               	movwf	i2___flge@ff1+2,c
 33366  016604  0E80               	movlw	128
 33367  016606  203F               	addwfc	??i2___flge+3,w,c
 33368  016608  6E37               	movwf	i2___flge@ff1+3,c
 33369  01660A                     i2l1729:
 33370  01660A  AE3B               	btfss	i2___flge@ff2+3,7,c
 33371  01660C  D01D               	goto	i2l1730
 33372  01660E  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 33373  016612  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 33374  016616  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 33375  01661A  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 33376  01661E  1E3C               	comf	??i2___flge,f,c
 33377  016620  1E3D               	comf	??i2___flge+1,f,c
 33378  016622  1E3E               	comf	??i2___flge+2,f,c
 33379  016624  1E3F               	comf	??i2___flge+3,f,c
 33380  016626  2A3C               	incf	??i2___flge,f,c
 33381  016628  0E00               	movlw	0
 33382  01662A  223D               	addwfc	??i2___flge+1,f,c
 33383  01662C  223E               	addwfc	??i2___flge+2,f,c
 33384  01662E  223F               	addwfc	??i2___flge+3,f,c
 33385  016630  0E00               	movlw	0
 33386  016632  243C               	addwf	??i2___flge,w,c
 33387  016634  6E38               	movwf	i2___flge@ff2,c
 33388  016636  0E00               	movlw	0
 33389  016638  203D               	addwfc	??i2___flge+1,w,c
 33390  01663A  6E39               	movwf	i2___flge@ff2+1,c
 33391  01663C  0E00               	movlw	0
 33392  01663E  203E               	addwfc	??i2___flge+2,w,c
 33393  016640  6E3A               	movwf	i2___flge@ff2+2,c
 33394  016642  0E80               	movlw	128
 33395  016644  203F               	addwfc	??i2___flge+3,w,c
 33396  016646  6E3B               	movwf	i2___flge@ff2+3,c
 33397  016648                     i2l1730:
 33398  016648  0E00               	movlw	0
 33399  01664A  1A34               	xorwf	i2___flge@ff1,f,c
 33400  01664C  0E00               	movlw	0
 33401  01664E  1A35               	xorwf	i2___flge@ff1+1,f,c
 33402  016650  0E00               	movlw	0
 33403  016652  1A36               	xorwf	i2___flge@ff1+2,f,c
 33404  016654  0E80               	movlw	128
 33405  016656  1A37               	xorwf	i2___flge@ff1+3,f,c
 33406  016658  0E00               	movlw	0
 33407  01665A  1A38               	xorwf	i2___flge@ff2,f,c
 33408  01665C  0E00               	movlw	0
 33409  01665E  1A39               	xorwf	i2___flge@ff2+1,f,c
 33410  016660  0E00               	movlw	0
 33411  016662  1A3A               	xorwf	i2___flge@ff2+2,f,c
 33412  016664  0E80               	movlw	128
 33413  016666  1A3B               	xorwf	i2___flge@ff2+3,f,c
 33414  016668  5038               	movf	i2___flge@ff2,w,c
 33415  01666A  5C34               	subwf	i2___flge@ff1,w,c
 33416  01666C  5039               	movf	i2___flge@ff2+1,w,c
 33417  01666E  5835               	subwfb	i2___flge@ff1+1,w,c
 33418  016670  503A               	movf	i2___flge@ff2+2,w,c
 33419  016672  5836               	subwfb	i2___flge@ff1+2,w,c
 33420  016674  503B               	movf	i2___flge@ff2+3,w,c
 33421  016676  5837               	subwfb	i2___flge@ff1+3,w,c
 33422  016678  B0D8               	btfsc	status,0,c
 33423  01667A  D002               	goto	i2l10442
 33424  01667C  90D8               	bcf	status,0,c
 33425  01667E  0012               	return	
 33426  016680                     i2l10442:
 33427  016680  80D8               	bsf	status,0,c
 33428  016682  0012               	return	
 33429  016684                     __end_ofi2___flge:
 33430                           	opt stack 0
 33431                           tosu	equ	0xFFF
 33432                           tosh	equ	0xFFE
 33433                           tosl	equ	0xFFD
 33434                           pclatu	equ	0xFFB
 33435                           pclath	equ	0xFFA
 33436                           tblptru	equ	0xFF8
 33437                           tblptrh	equ	0xFF7
 33438                           tblptrl	equ	0xFF6
 33439                           tablat	equ	0xFF5
 33440                           prodh	equ	0xFF4
 33441                           prodl	equ	0xFF3
 33442                           intcon	equ	0xFF2
 33443                           indf0	equ	0xFEF
 33444                           postinc0	equ	0xFEE
 33445                           fsr0h	equ	0xFEA
 33446                           fsr0l	equ	0xFE9
 33447                           wreg	equ	0xFE8
 33448                           indf1	equ	0xFE7
 33449                           postdec1	equ	0xFE5
 33450                           plusw1	equ	0xFE3
 33451                           fsr1h	equ	0xFE2
 33452                           fsr1l	equ	0xFE1
 33453                           bsr	equ	0xFE0
 33454                           indf2	equ	0xFDF
 33455                           postinc2	equ	0xFDE
 33456                           postdec2	equ	0xFDD
 33457                           plusw2	equ	0xFDB
 33458                           fsr2h	equ	0xFDA
 33459                           fsr2l	equ	0xFD9
 33460                           status	equ	0xFD8
 33461                           
 33462 ;; *************** function _frexp *****************
 33463 ;; Defined at:
 33464 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 33465 ;; Parameters:    Size  Location     Type
 33466 ;;  value           4    0[COMRAM] long 
 33467 ;;  eptr            2    4[COMRAM] PTR int 
 33468 ;;		 -> floor@expon(2), 
 33469 ;; Auto vars:     Size  Location     Type
 33470 ;;		None
 33471 ;; Return value:  Size  Location     Type
 33472 ;;                  4    0[COMRAM] PTR int 
 33473 ;; Registers used:
 33474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33475 ;; Tracked objects:
 33476 ;;		On entry : 0/0
 33477 ;;		On exit  : 0/0
 33478 ;;		Unchanged: 0/0
 33479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33480 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33484 ;;Total ram usage:        8 bytes
 33485 ;; Hardware stack levels used:    1
 33486 ;; This function calls:
 33487 ;;		Nothing
 33488 ;; This function is called by:
 33489 ;;		_floor
 33490 ;; This function uses a non-reentrant model
 33491 ;;
 33492                           
 33493                           	psect	text117
 33494  0173CA                     __ptext117:
 33495                           	opt stack 0
 33496  0173CA                     _frexp:
 33497                           	opt stack 13
 33498                           
 33499                           ;incstack = 0
 33500  0173CA  5001               	movf	frexp@value,w,c
 33501  0173CC  1002               	iorwf	frexp@value+1,w,c
 33502  0173CE  1003               	iorwf	frexp@value+2,w,c
 33503  0173D0  1004               	iorwf	frexp@value+3,w,c
 33504  0173D2  A4D8               	btfss	status,2,c
 33505  0173D4  D009               	goto	i2l2220
 33506  0173D6  C005  FFD9         	movff	frexp@eptr,fsr2l
 33507  0173DA  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33508  0173DE  0E00               	movlw	0
 33509  0173E0  6EDE               	movwf	postinc2,c
 33510  0173E2  0E00               	movlw	0
 33511  0173E4  6EDD               	movwf	postdec2,c
 33512                           
 33513                           ;	Return value of _frexp is never used
 33514  0173E6  0012               	return	
 33515  0173E8                     i2l2220:
 33516  0173E8  5004               	movf	frexp@value+3,w,c
 33517  0173EA  0B7F               	andlw	127
 33518  0173EC  6E07               	movwf	??_frexp& (0+255),c
 33519  0173EE  6A08               	clrf	(??_frexp+1)& (0+255),c
 33520  0173F0  90D8               	bcf	status,0,c
 33521  0173F2  3607               	rlcf	??_frexp,f,c
 33522  0173F4  3608               	rlcf	??_frexp+1,f,c
 33523  0173F6  C005  FFD9         	movff	frexp@eptr,fsr2l
 33524  0173FA  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33525  0173FE  C007  FFDE         	movff	??_frexp,postinc2
 33526  017402  C008  FFDD         	movff	??_frexp+1,postdec2
 33527  017406  AE03               	btfss	frexp@value+2,7,c
 33528  017408  D003               	goto	i2u828_40
 33529  01740A  6A07               	clrf	??_frexp& (0+255),c
 33530  01740C  2A07               	incf	??_frexp& (0+255),f,c
 33531  01740E  D001               	goto	i2u828_48
 33532  017410                     i2u828_40:
 33533  017410  6A07               	clrf	??_frexp& (0+255),c
 33534  017412                     i2u828_48:
 33535  017412  5007               	movf	??_frexp,w,c
 33536  017414  C005  FFD9         	movff	frexp@eptr,fsr2l
 33537  017418  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33538  01741C  12DE               	iorwf	postinc2,f,c
 33539  01741E  0E00               	movlw	0
 33540  017420  12DD               	iorwf	postdec2,f,c
 33541  017422  C005  FFD9         	movff	frexp@eptr,fsr2l
 33542  017426  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33543  01742A  0E82               	movlw	130
 33544  01742C  26DE               	addwf	postinc2,f,c
 33545  01742E  0EFF               	movlw	255
 33546  017430  22DD               	addwfc	postdec2,f,c
 33547  017432  8004               	bsf	frexp@value+3,0,c
 33548  017434  8204               	bsf	frexp@value+3,1,c
 33549  017436  8404               	bsf	frexp@value+3,2,c
 33550  017438  8604               	bsf	frexp@value+3,3,c
 33551  01743A  8804               	bsf	frexp@value+3,4,c
 33552  01743C  8A04               	bsf	frexp@value+3,5,c
 33553  01743E  9C04               	bcf	frexp@value+3,6,c
 33554  017440  9E03               	bcf	frexp@value+2,7,c
 33555  017442  0012               	return	
 33556  017444                     __end_of_frexp:
 33557                           	opt stack 0
 33558                           tosu	equ	0xFFF
 33559                           tosh	equ	0xFFE
 33560                           tosl	equ	0xFFD
 33561                           pclatu	equ	0xFFB
 33562                           pclath	equ	0xFFA
 33563                           tblptru	equ	0xFF8
 33564                           tblptrh	equ	0xFF7
 33565                           tblptrl	equ	0xFF6
 33566                           tablat	equ	0xFF5
 33567                           prodh	equ	0xFF4
 33568                           prodl	equ	0xFF3
 33569                           intcon	equ	0xFF2
 33570                           indf0	equ	0xFEF
 33571                           postinc0	equ	0xFEE
 33572                           fsr0h	equ	0xFEA
 33573                           fsr0l	equ	0xFE9
 33574                           wreg	equ	0xFE8
 33575                           indf1	equ	0xFE7
 33576                           postdec1	equ	0xFE5
 33577                           plusw1	equ	0xFE3
 33578                           fsr1h	equ	0xFE2
 33579                           fsr1l	equ	0xFE1
 33580                           bsr	equ	0xFE0
 33581                           indf2	equ	0xFDF
 33582                           postinc2	equ	0xFDE
 33583                           postdec2	equ	0xFDD
 33584                           plusw2	equ	0xFDB
 33585                           fsr2h	equ	0xFDA
 33586                           fsr2l	equ	0xFD9
 33587                           status	equ	0xFD8
 33588                           
 33589 ;; *************** function _eval_poly *****************
 33590 ;; Defined at:
 33591 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 33592 ;; Parameters:    Size  Location     Type
 33593 ;;  x               4   12[BANK0 ] PTR int 
 33594 ;;  d               2   16[BANK0 ] PTR const 
 33595 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 33596 ;;  n               2   18[BANK0 ] int 
 33597 ;; Auto vars:     Size  Location     Type
 33598 ;;  res             4   24[BANK0 ] int 
 33599 ;; Return value:  Size  Location     Type
 33600 ;;                  4   12[BANK0 ] int 
 33601 ;; Registers used:
 33602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33603 ;; Tracked objects:
 33604 ;;		On entry : 0/0
 33605 ;;		On exit  : 0/0
 33606 ;;		Unchanged: 0/0
 33607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33608 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33609 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33611 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33612 ;;Total ram usage:       16 bytes
 33613 ;; Hardware stack levels used:    1
 33614 ;; Hardware stack levels required when called:    1
 33615 ;; This function calls:
 33616 ;;		i2___fladd
 33617 ;;		i2___flmul
 33618 ;; This function is called by:
 33619 ;;		_atan
 33620 ;;		_sin
 33621 ;; This function uses a non-reentrant model
 33622 ;;
 33623                           
 33624                           	psect	text118
 33625  0168B2                     __ptext118:
 33626                           	opt stack 0
 33627  0168B2                     _eval_poly:
 33628                           	opt stack 13
 33629                           
 33630                           ;incstack = 0
 33631  0168B2  C072  F074         	movff	eval_poly@n,??_eval_poly
 33632  0168B6  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 33633  0168BA  0100               	movlb	0	; () banked
 33634  0168BC  90D8               	bcf	status,0,c
 33635  0168BE  3774               	rlcf	??_eval_poly& (0+255),f,b
 33636  0168C0  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33637  0168C2  90D8               	bcf	status,0,c
 33638  0168C4  3774               	rlcf	??_eval_poly& (0+255),f,b
 33639  0168C6  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33640  0168C8  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 33641  0168CC  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 33642  0168D0  5174               	movf	??_eval_poly& (0+255),w,b
 33643  0168D2  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 33644  0168D4  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 33645  0168D6  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 33646  0168D8  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 33647  0168DC  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 33648  0168E0                     	if	0	;tblptru may be non-zero
 33649  0168E0                     	endif
 33650  0168E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33651  0168E0  0E00               	movlw	low (__mediumconst shr (0+16))
 33652  0168E2  6EF8               	movwf	tblptru,c
 33653  0168E4                     	endif
 33654  0168E4  0009               	tblrd		*+
 33655  0168E6  CFF5 F078          	movff	tablat,eval_poly@res
 33656  0168EA  0009               	tblrd		*+
 33657  0168EC  CFF5 F079          	movff	tablat,eval_poly@res+1
 33658  0168F0  0009               	tblrd		*+
 33659  0168F2  CFF5 F07A          	movff	tablat,eval_poly@res+2
 33660  0168F6  000A               	tblrd		*-
 33661  0168F8  CFF5 F07B          	movff	tablat,eval_poly@res+3
 33662  0168FC  D04C               	goto	i2l1700
 33663  0168FE                     
 33664                           ; BSR set to: 0
 33665                           
 33666                           ; BSR set to: 0
 33667  0168FE  C078  F034         	movff	eval_poly@res,i2___flmul@a
 33668  016902  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 33669  016906  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 33670  01690A  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 33671  01690E  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 33672  016912  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 33673  016916  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 33674  01691A  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 33675  01691E  EC7B  F09D         	call	i2___flmul	;wreg free
 33676  016922  C030  F056         	movff	?i2___flmul,i2___fladd@b
 33677  016926  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 33678  01692A  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 33679  01692E  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 33680  016932  0100               	movlb	0	; () banked
 33681  016934  0772               	decf	eval_poly@n& (0+255),f,b
 33682  016936  A0D8               	btfss	status,0,c
 33683  016938  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 33684  01693A  C072  F074         	movff	eval_poly@n,??_eval_poly
 33685  01693E  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 33686  016942  90D8               	bcf	status,0,c
 33687  016944  3774               	rlcf	??_eval_poly& (0+255),f,b
 33688  016946  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33689  016948  90D8               	bcf	status,0,c
 33690  01694A  3774               	rlcf	??_eval_poly& (0+255),f,b
 33691  01694C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33692  01694E  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 33693  016952  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 33694  016956  5174               	movf	??_eval_poly& (0+255),w,b
 33695  016958  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 33696  01695A  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 33697  01695C  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 33698  01695E  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 33699  016962  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 33700  016966                     	if	0	;tblptru may be non-zero
 33701  016966                     	endif
 33702  016966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33703  016966  0E00               	movlw	low (__mediumconst shr (0+16))
 33704  016968  6EF8               	movwf	tblptru,c
 33705  01696A                     	endif
 33706  01696A  0009               	tblrd		*+
 33707  01696C  CFF5 F05A          	movff	tablat,i2___fladd@a
 33708  016970  0009               	tblrd		*+
 33709  016972  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 33710  016976  0009               	tblrd		*+
 33711  016978  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 33712  01697C  000A               	tblrd		*-
 33713  01697E  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 33714  016982  ECC2  F0A0         	call	i2___fladd	;wreg free
 33715  016986  C056  F078         	movff	?i2___fladd,eval_poly@res
 33716  01698A  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 33717  01698E  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 33718  016992  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 33719  016996                     i2l1700:
 33720  016996  0100               	movlb	0	; () banked
 33721  016998  5172               	movf	eval_poly@n& (0+255),w,b
 33722  01699A  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 33723  01699C  A4D8               	btfss	status,2,c
 33724  01699E  D7AF               	goto	i2l1701
 33725                           
 33726                           ; BSR set to: 0
 33727  0169A0  C078  F06C         	movff	eval_poly@res,?_eval_poly
 33728  0169A4  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 33729  0169A8  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 33730  0169AC  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 33731                           
 33732                           ; BSR set to: 0
 33733  0169B0  0012               	return		;funcret
 33734  0169B2                     __end_of_eval_poly:
 33735                           	opt stack 0
 33736                           tosu	equ	0xFFF
 33737                           tosh	equ	0xFFE
 33738                           tosl	equ	0xFFD
 33739                           pclatu	equ	0xFFB
 33740                           pclath	equ	0xFFA
 33741                           tblptru	equ	0xFF8
 33742                           tblptrh	equ	0xFF7
 33743                           tblptrl	equ	0xFF6
 33744                           tablat	equ	0xFF5
 33745                           prodh	equ	0xFF4
 33746                           prodl	equ	0xFF3
 33747                           intcon	equ	0xFF2
 33748                           indf0	equ	0xFEF
 33749                           postinc0	equ	0xFEE
 33750                           fsr0h	equ	0xFEA
 33751                           fsr0l	equ	0xFE9
 33752                           wreg	equ	0xFE8
 33753                           indf1	equ	0xFE7
 33754                           postdec1	equ	0xFE5
 33755                           plusw1	equ	0xFE3
 33756                           fsr1h	equ	0xFE2
 33757                           fsr1l	equ	0xFE1
 33758                           bsr	equ	0xFE0
 33759                           indf2	equ	0xFDF
 33760                           postinc2	equ	0xFDE
 33761                           postdec2	equ	0xFDD
 33762                           plusw2	equ	0xFDB
 33763                           fsr2h	equ	0xFDA
 33764                           fsr2l	equ	0xFD9
 33765                           status	equ	0xFD8
 33766                           
 33767 ;; *************** function i2___flmul *****************
 33768 ;; Defined at:
 33769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 33770 ;; Parameters:    Size  Location     Type
 33771 ;;  b               4   47[COMRAM] int 
 33772 ;;  a               4   51[COMRAM] int 
 33773 ;; Auto vars:     Size  Location     Type
 33774 ;;  __flmul         4   66[COMRAM] struct .
 33775 ;;  __flmul         4   61[COMRAM] unsigned long 
 33776 ;;  __flmul         2   70[COMRAM] struct .
 33777 ;;  __flmul         1   65[COMRAM] unsigned char 
 33778 ;;  __flmul         1   60[COMRAM] unsigned char 
 33779 ;;  __flmul         1   59[COMRAM] unsigned char 
 33780 ;; Return value:  Size  Location     Type
 33781 ;;                  4   47[COMRAM] unsigned char 
 33782 ;; Registers used:
 33783 ;;		wreg, status,2, status,0, prodl, prodh
 33784 ;; Tracked objects:
 33785 ;;		On entry : 0/0
 33786 ;;		On exit  : 0/0
 33787 ;;		Unchanged: 0/0
 33788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33789 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33790 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33792 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33793 ;;Total ram usage:       25 bytes
 33794 ;; Hardware stack levels used:    1
 33795 ;; This function calls:
 33796 ;;		Nothing
 33797 ;; This function is called by:
 33798 ;;		_peakToRMS
 33799 ;;		_ADCPostProcessingCallback
 33800 ;;		_asin
 33801 ;;		_atan
 33802 ;;		_eval_poly
 33803 ;;		_sin
 33804 ;;		i2_fround
 33805 ;;		i2_scale
 33806 ;;		i2_printf
 33807 ;; This function uses a non-reentrant model
 33808 ;;
 33809                           
 33810                           	psect	text119
 33811  013AF6                     __ptext119:
 33812                           	opt stack 0
 33813  013AF6                     i2___flmul:
 33814                           	opt stack 15
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;incstack = 0
 33818  013AF6  5033               	movf	i2___flmul@b+3,w,c
 33819  013AF8  0B80               	andlw	128
 33820  013AFA  6E3C               	movwf	i2___flmul@sign,c
 33821  013AFC  5033               	movf	i2___flmul@b+3,w,c
 33822  013AFE  2433               	addwf	i2___flmul@b+3,w,c
 33823  013B00  6E42               	movwf	i2___flmul@bexp,c
 33824  013B02  BE32               	btfsc	i2___flmul@b+2,7,c
 33825  013B04  8042               	bsf	i2___flmul@bexp,0,c
 33826  013B06  5042               	movf	i2___flmul@bexp,w,c
 33827  013B08  B4D8               	btfsc	status,2,c
 33828  013B0A  D00D               	goto	i2l2088
 33829  013B0C  2842               	incf	i2___flmul@bexp,w,c
 33830  013B0E  A4D8               	btfss	status,2,c
 33831  013B10  D008               	goto	i2l2089
 33832  013B12  0E00               	movlw	0
 33833  013B14  6E30               	movwf	i2___flmul@b,c
 33834  013B16  0E00               	movlw	0
 33835  013B18  6E31               	movwf	i2___flmul@b+1,c
 33836  013B1A  0E00               	movlw	0
 33837  013B1C  6E32               	movwf	i2___flmul@b+2,c
 33838  013B1E  0E00               	movlw	0
 33839  013B20  6E33               	movwf	i2___flmul@b+3,c
 33840  013B22                     i2l2089:
 33841  013B22  8E32               	bsf	i2___flmul@b+2,7,c
 33842  013B24  D008               	goto	i2l2090
 33843  013B26                     i2l2088:
 33844  013B26  0E00               	movlw	0
 33845  013B28  6E30               	movwf	i2___flmul@b,c
 33846  013B2A  0E00               	movlw	0
 33847  013B2C  6E31               	movwf	i2___flmul@b+1,c
 33848  013B2E  0E00               	movlw	0
 33849  013B30  6E32               	movwf	i2___flmul@b+2,c
 33850  013B32  0E00               	movlw	0
 33851  013B34  6E33               	movwf	i2___flmul@b+3,c
 33852  013B36                     i2l2090:
 33853  013B36  5037               	movf	i2___flmul@a+3,w,c
 33854  013B38  0B80               	andlw	128
 33855  013B3A  1A3C               	xorwf	i2___flmul@sign,f,c
 33856  013B3C  5037               	movf	i2___flmul@a+3,w,c
 33857  013B3E  2437               	addwf	i2___flmul@a+3,w,c
 33858  013B40  6E3D               	movwf	i2___flmul@aexp,c
 33859  013B42  BE36               	btfsc	i2___flmul@a+2,7,c
 33860  013B44  803D               	bsf	i2___flmul@aexp,0,c
 33861  013B46  503D               	movf	i2___flmul@aexp,w,c
 33862  013B48  B4D8               	btfsc	status,2,c
 33863  013B4A  D00D               	goto	i2l2092
 33864  013B4C  283D               	incf	i2___flmul@aexp,w,c
 33865  013B4E  A4D8               	btfss	status,2,c
 33866  013B50  D008               	goto	i2l2093
 33867  013B52  0E00               	movlw	0
 33868  013B54  6E34               	movwf	i2___flmul@a,c
 33869  013B56  0E00               	movlw	0
 33870  013B58  6E35               	movwf	i2___flmul@a+1,c
 33871  013B5A  0E00               	movlw	0
 33872  013B5C  6E36               	movwf	i2___flmul@a+2,c
 33873  013B5E  0E00               	movlw	0
 33874  013B60  6E37               	movwf	i2___flmul@a+3,c
 33875  013B62                     i2l2093:
 33876  013B62  8E36               	bsf	i2___flmul@a+2,7,c
 33877  013B64  D008               	goto	i2l2094
 33878  013B66                     i2l2092:
 33879  013B66  0E00               	movlw	0
 33880  013B68  6E34               	movwf	i2___flmul@a,c
 33881  013B6A  0E00               	movlw	0
 33882  013B6C  6E35               	movwf	i2___flmul@a+1,c
 33883  013B6E  0E00               	movlw	0
 33884  013B70  6E36               	movwf	i2___flmul@a+2,c
 33885  013B72  0E00               	movlw	0
 33886  013B74  6E37               	movwf	i2___flmul@a+3,c
 33887  013B76                     i2l2094:
 33888  013B76  503D               	movf	i2___flmul@aexp,w,c
 33889  013B78  B4D8               	btfsc	status,2,c
 33890  013B7A  D003               	goto	i2u1223_40
 33891  013B7C  5042               	movf	i2___flmul@bexp,w,c
 33892  013B7E  A4D8               	btfss	status,2,c
 33893  013B80  D009               	goto	i2l2095
 33894  013B82                     i2u1223_40:
 33895  013B82  0E00               	movlw	0
 33896  013B84  6E30               	movwf	?i2___flmul,c
 33897  013B86  0E00               	movlw	0
 33898  013B88  6E31               	movwf	?i2___flmul+1,c
 33899  013B8A  0E00               	movlw	0
 33900  013B8C  6E32               	movwf	?i2___flmul+2,c
 33901  013B8E  0E00               	movlw	0
 33902  013B90  6E33               	movwf	?i2___flmul+3,c
 33903  013B92  0012               	return	
 33904  013B94                     i2l2095:
 33905  013B94  5036               	movf	i2___flmul@a+2,w,c
 33906  013B96  0230               	mulwf	i2___flmul@b,c
 33907  013B98  CFF3 F047          	movff	prodl,i2___flmul@temp
 33908  013B9C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33909  013BA0  5047               	movf	i2___flmul@temp,w,c
 33910  013BA2  6E3E               	movwf	i2___flmul@grs,c
 33911  013BA4  6A3F               	clrf	i2___flmul@grs+1,c
 33912  013BA6  6A40               	clrf	i2___flmul@grs+2,c
 33913  013BA8  6A41               	clrf	i2___flmul@grs+3,c
 33914  013BAA  5048               	movf	i2___flmul@temp+1,w,c
 33915  013BAC  6E43               	movwf	i2___flmul@prod,c
 33916  013BAE  6A44               	clrf	i2___flmul@prod+1,c
 33917  013BB0  6A45               	clrf	i2___flmul@prod+2,c
 33918  013BB2  6A46               	clrf	i2___flmul@prod+3,c
 33919  013BB4  5035               	movf	i2___flmul@a+1,w,c
 33920  013BB6  0231               	mulwf	i2___flmul@b+1,c
 33921  013BB8  CFF3 F047          	movff	prodl,i2___flmul@temp
 33922  013BBC  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33923  013BC0  5047               	movf	i2___flmul@temp,w,c
 33924  013BC2  263E               	addwf	i2___flmul@grs,f,c
 33925  013BC4  0E00               	movlw	0
 33926  013BC6  223F               	addwfc	i2___flmul@grs+1,f,c
 33927  013BC8  2240               	addwfc	i2___flmul@grs+2,f,c
 33928  013BCA  2241               	addwfc	i2___flmul@grs+3,f,c
 33929  013BCC  5048               	movf	i2___flmul@temp+1,w,c
 33930  013BCE  2643               	addwf	i2___flmul@prod,f,c
 33931  013BD0  0E00               	movlw	0
 33932  013BD2  2244               	addwfc	i2___flmul@prod+1,f,c
 33933  013BD4  2245               	addwfc	i2___flmul@prod+2,f,c
 33934  013BD6  2246               	addwfc	i2___flmul@prod+3,f,c
 33935  013BD8  5034               	movf	i2___flmul@a,w,c
 33936  013BDA  0232               	mulwf	i2___flmul@b+2,c
 33937  013BDC  CFF3 F047          	movff	prodl,i2___flmul@temp
 33938  013BE0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33939  013BE4  5047               	movf	i2___flmul@temp,w,c
 33940  013BE6  263E               	addwf	i2___flmul@grs,f,c
 33941  013BE8  0E00               	movlw	0
 33942  013BEA  223F               	addwfc	i2___flmul@grs+1,f,c
 33943  013BEC  2240               	addwfc	i2___flmul@grs+2,f,c
 33944  013BEE  2241               	addwfc	i2___flmul@grs+3,f,c
 33945  013BF0  5048               	movf	i2___flmul@temp+1,w,c
 33946  013BF2  2643               	addwf	i2___flmul@prod,f,c
 33947  013BF4  0E00               	movlw	0
 33948  013BF6  2244               	addwfc	i2___flmul@prod+1,f,c
 33949  013BF8  2245               	addwfc	i2___flmul@prod+2,f,c
 33950  013BFA  2246               	addwfc	i2___flmul@prod+3,f,c
 33951  013BFC  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 33952  013C00  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 33953  013C04  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 33954  013C08  6A3E               	clrf	i2___flmul@grs,c
 33955  013C0A  5034               	movf	i2___flmul@a,w,c
 33956  013C0C  0231               	mulwf	i2___flmul@b+1,c
 33957  013C0E  CFF3 F047          	movff	prodl,i2___flmul@temp
 33958  013C12  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33959  013C16  5047               	movf	i2___flmul@temp,w,c
 33960  013C18  263E               	addwf	i2___flmul@grs,f,c
 33961  013C1A  5048               	movf	i2___flmul@temp+1,w,c
 33962  013C1C  223F               	addwfc	i2___flmul@grs+1,f,c
 33963  013C1E  0E00               	movlw	0
 33964  013C20  2240               	addwfc	i2___flmul@grs+2,f,c
 33965  013C22  0E00               	movlw	0
 33966  013C24  2241               	addwfc	i2___flmul@grs+3,f,c
 33967  013C26  5035               	movf	i2___flmul@a+1,w,c
 33968  013C28  0230               	mulwf	i2___flmul@b,c
 33969  013C2A  CFF3 F047          	movff	prodl,i2___flmul@temp
 33970  013C2E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33971  013C32  5047               	movf	i2___flmul@temp,w,c
 33972  013C34  263E               	addwf	i2___flmul@grs,f,c
 33973  013C36  5048               	movf	i2___flmul@temp+1,w,c
 33974  013C38  223F               	addwfc	i2___flmul@grs+1,f,c
 33975  013C3A  0E00               	movlw	0
 33976  013C3C  2240               	addwfc	i2___flmul@grs+2,f,c
 33977  013C3E  0E00               	movlw	0
 33978  013C40  2241               	addwfc	i2___flmul@grs+3,f,c
 33979  013C42  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 33980  013C46  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 33981  013C4A  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 33982  013C4E  6A3E               	clrf	i2___flmul@grs,c
 33983  013C50  5034               	movf	i2___flmul@a,w,c
 33984  013C52  0230               	mulwf	i2___flmul@b,c
 33985  013C54  CFF3 F047          	movff	prodl,i2___flmul@temp
 33986  013C58  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33987  013C5C  5047               	movf	i2___flmul@temp,w,c
 33988  013C5E  263E               	addwf	i2___flmul@grs,f,c
 33989  013C60  5048               	movf	i2___flmul@temp+1,w,c
 33990  013C62  223F               	addwfc	i2___flmul@grs+1,f,c
 33991  013C64  0E00               	movlw	0
 33992  013C66  2240               	addwfc	i2___flmul@grs+2,f,c
 33993  013C68  0E00               	movlw	0
 33994  013C6A  2241               	addwfc	i2___flmul@grs+3,f,c
 33995  013C6C  5036               	movf	i2___flmul@a+2,w,c
 33996  013C6E  0231               	mulwf	i2___flmul@b+1,c
 33997  013C70  CFF3 F047          	movff	prodl,i2___flmul@temp
 33998  013C74  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33999  013C78  5047               	movf	i2___flmul@temp,w,c
 34000  013C7A  2643               	addwf	i2___flmul@prod,f,c
 34001  013C7C  5048               	movf	i2___flmul@temp+1,w,c
 34002  013C7E  2244               	addwfc	i2___flmul@prod+1,f,c
 34003  013C80  0E00               	movlw	0
 34004  013C82  2245               	addwfc	i2___flmul@prod+2,f,c
 34005  013C84  0E00               	movlw	0
 34006  013C86  2246               	addwfc	i2___flmul@prod+3,f,c
 34007  013C88  5035               	movf	i2___flmul@a+1,w,c
 34008  013C8A  0232               	mulwf	i2___flmul@b+2,c
 34009  013C8C  CFF3 F047          	movff	prodl,i2___flmul@temp
 34010  013C90  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34011  013C94  5047               	movf	i2___flmul@temp,w,c
 34012  013C96  2643               	addwf	i2___flmul@prod,f,c
 34013  013C98  5048               	movf	i2___flmul@temp+1,w,c
 34014  013C9A  2244               	addwfc	i2___flmul@prod+1,f,c
 34015  013C9C  0E00               	movlw	0
 34016  013C9E  2245               	addwfc	i2___flmul@prod+2,f,c
 34017  013CA0  0E00               	movlw	0
 34018  013CA2  2246               	addwfc	i2___flmul@prod+3,f,c
 34019  013CA4  5036               	movf	i2___flmul@a+2,w,c
 34020  013CA6  0232               	mulwf	i2___flmul@b+2,c
 34021  013CA8  CFF3 F047          	movff	prodl,i2___flmul@temp
 34022  013CAC  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34023  013CB0  5047               	movf	i2___flmul@temp,w,c
 34024  013CB2  6E38               	movwf	??i2___flmul& (0+255),c
 34025  013CB4  5048               	movf	i2___flmul@temp+1,w,c
 34026  013CB6  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 34027  013CB8  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 34028  013CBA  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 34029  013CBC  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 34030  013CC0  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 34031  013CC4  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 34032  013CC8  6A38               	clrf	??i2___flmul,c
 34033  013CCA  5038               	movf	??i2___flmul,w,c
 34034  013CCC  2643               	addwf	i2___flmul@prod,f,c
 34035  013CCE  5039               	movf	??i2___flmul+1,w,c
 34036  013CD0  2244               	addwfc	i2___flmul@prod+1,f,c
 34037  013CD2  503A               	movf	??i2___flmul+2,w,c
 34038  013CD4  2245               	addwfc	i2___flmul@prod+2,f,c
 34039  013CD6  503B               	movf	??i2___flmul+3,w,c
 34040  013CD8  2246               	addwfc	i2___flmul@prod+3,f,c
 34041  013CDA  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 34042  013CDE  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 34043  013CE2  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 34044  013CE6  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 34045  013CEA  0E19               	movlw	25
 34046  013CEC  D005               	goto	i2u1224_40
 34047  013CEE                     i2u1224_45:
 34048  013CEE  90D8               	bcf	status,0,c
 34049  013CF0  323B               	rrcf	??i2___flmul+3,f,c
 34050  013CF2  323A               	rrcf	??i2___flmul+2,f,c
 34051  013CF4  3239               	rrcf	??i2___flmul+1,f,c
 34052  013CF6  3238               	rrcf	??i2___flmul,f,c
 34053  013CF8                     i2u1224_40:
 34054  013CF8  2EE8               	decfsz	wreg,f,c
 34055  013CFA  D7F9               	goto	i2u1224_45
 34056  013CFC  5038               	movf	??i2___flmul,w,c
 34057  013CFE  2643               	addwf	i2___flmul@prod,f,c
 34058  013D00  5039               	movf	??i2___flmul+1,w,c
 34059  013D02  2244               	addwfc	i2___flmul@prod+1,f,c
 34060  013D04  503A               	movf	??i2___flmul+2,w,c
 34061  013D06  2245               	addwfc	i2___flmul@prod+2,f,c
 34062  013D08  503B               	movf	??i2___flmul+3,w,c
 34063  013D0A  2246               	addwfc	i2___flmul@prod+3,f,c
 34064  013D0C  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 34065  013D10  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 34066  013D14  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 34067  013D18  6A3E               	clrf	i2___flmul@grs,c
 34068  013D1A  503D               	movf	i2___flmul@aexp,w,c
 34069  013D1C  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 34070  013D20  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 34071  013D22  2638               	addwf	??i2___flmul,f,c
 34072  013D24  0E00               	movlw	0
 34073  013D26  2239               	addwfc	??i2___flmul+1,f,c
 34074  013D28  0E82               	movlw	130
 34075  013D2A  2438               	addwf	??i2___flmul,w,c
 34076  013D2C  6E47               	movwf	i2___flmul@temp,c
 34077  013D2E  0EFF               	movlw	255
 34078  013D30  2039               	addwfc	??i2___flmul+1,w,c
 34079  013D32  6E48               	movwf	i2___flmul@temp+1,c
 34080  013D34  D00F               	goto	i2l2099
 34081  013D36  90D8               	bcf	status,0,c
 34082  013D38  3643               	rlcf	i2___flmul@prod,f,c
 34083  013D3A  3644               	rlcf	i2___flmul@prod+1,f,c
 34084  013D3C  3645               	rlcf	i2___flmul@prod+2,f,c
 34085  013D3E  3646               	rlcf	i2___flmul@prod+3,f,c
 34086  013D40  BE41               	btfsc	i2___flmul@grs+3,7,c
 34087  013D42  8043               	bsf	i2___flmul@prod,0,c
 34088  013D44  90D8               	bcf	status,0,c
 34089  013D46  363E               	rlcf	i2___flmul@grs,f,c
 34090  013D48  363F               	rlcf	i2___flmul@grs+1,f,c
 34091  013D4A  3640               	rlcf	i2___flmul@grs+2,f,c
 34092  013D4C  3641               	rlcf	i2___flmul@grs+3,f,c
 34093  013D4E  0647               	decf	i2___flmul@temp,f,c
 34094  013D50  A0D8               	btfss	status,0,c
 34095  013D52  0648               	decf	i2___flmul@temp+1,f,c
 34096  013D54                     i2l2099:
 34097  013D54  AE45               	btfss	i2___flmul@prod+2,7,c
 34098  013D56  D7EF               	goto	i2l2100
 34099  013D58  0E00               	movlw	0
 34100  013D5A  6E3D               	movwf	i2___flmul@aexp,c
 34101  013D5C  AE41               	btfss	i2___flmul@grs+3,7,c
 34102  013D5E  D016               	goto	i2l2106
 34103  013D60  0EFF               	movlw	255
 34104  013D62  143E               	andwf	i2___flmul@grs,w,c
 34105  013D64  6E38               	movwf	??i2___flmul& (0+255),c
 34106  013D66  0EFF               	movlw	255
 34107  013D68  143F               	andwf	i2___flmul@grs+1,w,c
 34108  013D6A  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 34109  013D6C  0EFF               	movlw	255
 34110  013D6E  1440               	andwf	i2___flmul@grs+2,w,c
 34111  013D70  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 34112  013D72  0E7F               	movlw	127
 34113  013D74  1441               	andwf	i2___flmul@grs+3,w,c
 34114  013D76  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 34115  013D78  5038               	movf	??i2___flmul,w,c
 34116  013D7A  1039               	iorwf	??i2___flmul+1,w,c
 34117  013D7C  103A               	iorwf	??i2___flmul+2,w,c
 34118  013D7E  103B               	iorwf	??i2___flmul+3,w,c
 34119  013D80  A4D8               	btfss	status,2,c
 34120  013D82  D002               	goto	i2u1229_40
 34121  013D84  A043               	btfss	i2___flmul@prod,0,c
 34122  013D86  D002               	goto	i2l2106
 34123  013D88                     i2u1229_40:
 34124  013D88  0E01               	movlw	1
 34125  013D8A  6E3D               	movwf	i2___flmul@aexp,c
 34126  013D8C                     i2l2106:
 34127  013D8C  503D               	movf	i2___flmul@aexp,w,c
 34128  013D8E  B4D8               	btfsc	status,2,c
 34129  013D90  D01F               	goto	i2l2108
 34130  013D92  0E01               	movlw	1
 34131  013D94  2643               	addwf	i2___flmul@prod,f,c
 34132  013D96  0E00               	movlw	0
 34133  013D98  2244               	addwfc	i2___flmul@prod+1,f,c
 34134  013D9A  2245               	addwfc	i2___flmul@prod+2,f,c
 34135  013D9C  2246               	addwfc	i2___flmul@prod+3,f,c
 34136  013D9E  A046               	btfss	i2___flmul@prod+3,0,c
 34137  013DA0  D017               	goto	i2l2108
 34138  013DA2  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 34139  013DA6  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 34140  013DAA  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 34141  013DAE  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 34142  013DB2  343B               	rlcf	??i2___flmul+3,w,c
 34143  013DB4  323B               	rrcf	??i2___flmul+3,f,c
 34144  013DB6  323A               	rrcf	??i2___flmul+2,f,c
 34145  013DB8  3239               	rrcf	??i2___flmul+1,f,c
 34146  013DBA  3238               	rrcf	??i2___flmul,f,c
 34147  013DBC  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 34148  013DC0  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 34149  013DC4  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 34150  013DC8  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 34151  013DCC  4A47               	infsnz	i2___flmul@temp,f,c
 34152  013DCE  2A48               	incf	i2___flmul@temp+1,f,c
 34153  013DD0                     i2l2108:
 34154  013DD0  BE48               	btfsc	i2___flmul@temp+1,7,c
 34155  013DD2  D00D               	goto	i2l2109
 34156  013DD4  5048               	movf	i2___flmul@temp+1,w,c
 34157  013DD6  E103               	bnz	i2u1232_40
 34158  013DD8  2847               	incf	i2___flmul@temp,w,c
 34159  013DDA  A0D8               	btfss	status,0,c
 34160  013DDC  D008               	goto	i2l2109
 34161  013DDE                     i2u1232_40:
 34162  013DDE  0E00               	movlw	0
 34163  013DE0  6E43               	movwf	i2___flmul@prod,c
 34164  013DE2  0E00               	movlw	0
 34165  013DE4  6E44               	movwf	i2___flmul@prod+1,c
 34166  013DE6  0E80               	movlw	128
 34167  013DE8  6E45               	movwf	i2___flmul@prod+2,c
 34168  013DEA  0E7F               	movlw	127
 34169  013DEC  D020               	goto	L19
 34170  013DEE                     i2l2109:
 34171  013DEE  BE48               	btfsc	i2___flmul@temp+1,7,c
 34172  013DF0  D005               	goto	i2u1233_40
 34173  013DF2  5048               	movf	i2___flmul@temp+1,w,c
 34174  013DF4  E10E               	bnz	i2l2111
 34175  013DF6  0447               	decf	i2___flmul@temp,w,c
 34176  013DF8  B0D8               	btfsc	status,0,c
 34177  013DFA  D00B               	goto	i2l2111
 34178  013DFC                     i2u1233_40:
 34179  013DFC  0E00               	movlw	0
 34180  013DFE  6E43               	movwf	i2___flmul@prod,c
 34181  013E00  0E00               	movlw	0
 34182  013E02  6E44               	movwf	i2___flmul@prod+1,c
 34183  013E04  0E00               	movlw	0
 34184  013E06  6E45               	movwf	i2___flmul@prod+2,c
 34185  013E08  0E00               	movlw	0
 34186  013E0A  6E46               	movwf	i2___flmul@prod+3,c
 34187  013E0C  0E00               	movlw	0
 34188  013E0E  6E3C               	movwf	i2___flmul@sign,c
 34189  013E10  D00F               	goto	i2l2112
 34190  013E12                     i2l2111:
 34191  013E12  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 34192  013E16  0EFF               	movlw	255
 34193  013E18  1643               	andwf	i2___flmul@prod,f,c
 34194  013E1A  0EFF               	movlw	255
 34195  013E1C  1644               	andwf	i2___flmul@prod+1,f,c
 34196  013E1E  0E7F               	movlw	127
 34197  013E20  1645               	andwf	i2___flmul@prod+2,f,c
 34198  013E22  0E00               	movlw	0
 34199  013E24  1646               	andwf	i2___flmul@prod+3,f,c
 34200  013E26  B042               	btfsc	i2___flmul@bexp,0,c
 34201  013E28  8E45               	bsf	i2___flmul@prod+2,7,c
 34202  013E2A  90D8               	bcf	status,0,c
 34203  013E2C  3042               	rrcf	i2___flmul@bexp,w,c
 34204  013E2E                     L19:
 34205  013E2E  6E46               	movwf	i2___flmul@prod+3,c
 34206  013E30                     i2l2112:
 34207  013E30  503C               	movf	i2___flmul@sign,w,c
 34208  013E32  1246               	iorwf	i2___flmul@prod+3,f,c
 34209  013E34  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 34210  013E38  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 34211  013E3C  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 34212  013E40  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 34213  013E44  0012               	return	
 34214  013E46                     __end_ofi2___flmul:
 34215                           	opt stack 0
 34216                           tosu	equ	0xFFF
 34217                           tosh	equ	0xFFE
 34218                           tosl	equ	0xFFD
 34219                           pclatu	equ	0xFFB
 34220                           pclath	equ	0xFFA
 34221                           tblptru	equ	0xFF8
 34222                           tblptrh	equ	0xFF7
 34223                           tblptrl	equ	0xFF6
 34224                           tablat	equ	0xFF5
 34225                           prodh	equ	0xFF4
 34226                           prodl	equ	0xFF3
 34227                           intcon	equ	0xFF2
 34228                           indf0	equ	0xFEF
 34229                           postinc0	equ	0xFEE
 34230                           fsr0h	equ	0xFEA
 34231                           fsr0l	equ	0xFE9
 34232                           wreg	equ	0xFE8
 34233                           indf1	equ	0xFE7
 34234                           postdec1	equ	0xFE5
 34235                           plusw1	equ	0xFE3
 34236                           fsr1h	equ	0xFE2
 34237                           fsr1l	equ	0xFE1
 34238                           bsr	equ	0xFE0
 34239                           indf2	equ	0xFDF
 34240                           postinc2	equ	0xFDE
 34241                           postdec2	equ	0xFDD
 34242                           plusw2	equ	0xFDB
 34243                           fsr2h	equ	0xFDA
 34244                           fsr2l	equ	0xFD9
 34245                           status	equ	0xFD8
 34246                           
 34247 ;; *************** function i2___fladd *****************
 34248 ;; Defined at:
 34249 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 34250 ;; Parameters:    Size  Location     Type
 34251 ;;  b               4   85[COMRAM] unsigned char 
 34252 ;;  a               4   89[COMRAM] unsigned char 
 34253 ;; Auto vars:     Size  Location     Type
 34254 ;;  __fladd         1   11[BANK0 ] unsigned char 
 34255 ;;  __fladd         1   10[BANK0 ] unsigned char 
 34256 ;;  __fladd         1    9[BANK0 ] unsigned char 
 34257 ;;  __fladd         1    8[BANK0 ] unsigned char 
 34258 ;; Return value:  Size  Location     Type
 34259 ;;                  4   85[COMRAM] unsigned char 
 34260 ;; Registers used:
 34261 ;;		wreg, status,2, status,0
 34262 ;; Tracked objects:
 34263 ;;		On entry : 0/0
 34264 ;;		On exit  : 0/0
 34265 ;;		Unchanged: 0/0
 34266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34267 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34269 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34270 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34271 ;;Total ram usage:       20 bytes
 34272 ;; Hardware stack levels used:    1
 34273 ;; This function calls:
 34274 ;;		Nothing
 34275 ;; This function is called by:
 34276 ;;		_peakToRMS
 34277 ;;		_ADCPostProcessingCallback
 34278 ;;		_acos
 34279 ;;		_asin
 34280 ;;		_atan
 34281 ;;		_eval_poly
 34282 ;;		_sin
 34283 ;;		_floor
 34284 ;;		i2_printf
 34285 ;;		i2___flsub
 34286 ;; This function uses a non-reentrant model
 34287 ;;
 34288                           
 34289                           	psect	text120
 34290  014184                     __ptext120:
 34291                           	opt stack 0
 34292  014184                     i2___fladd:
 34293                           	opt stack 15
 34294                           
 34295                           ;incstack = 0
 34296  014184  5059               	movf	i2___fladd@b+3,w,c
 34297  014186  0B80               	andlw	128
 34298  014188  0100               	movlb	0	; () banked
 34299  01418A  6F68               	movwf	i2___fladd@signs& (0+255),b
 34300  01418C  5059               	movf	i2___fladd@b+3,w,c
 34301  01418E  2459               	addwf	i2___fladd@b+3,w,c
 34302  014190  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 34303                           
 34304                           ; BSR set to: 0
 34305  014192  BE58               	btfsc	i2___fladd@b+2,7,c
 34306                           
 34307                           ; BSR set to: 0
 34308  014194  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 34309                           
 34310                           ; BSR set to: 0
 34311                           
 34312                           ; BSR set to: 0
 34313  014196  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34314  014198  B4D8               	btfsc	status,2,c
 34315  01419A  D00D               	goto	i2l1997
 34316                           
 34317                           ; BSR set to: 0
 34318  01419C  296A               	incf	i2___fladd@bexp& (0+255),w,b
 34319  01419E  A4D8               	btfss	status,2,c
 34320  0141A0  D008               	goto	i2l1998
 34321                           
 34322                           ; BSR set to: 0
 34323  0141A2  0E00               	movlw	0
 34324  0141A4  6E56               	movwf	i2___fladd@b,c
 34325  0141A6  0E00               	movlw	0
 34326  0141A8  6E57               	movwf	i2___fladd@b+1,c
 34327  0141AA  0E00               	movlw	0
 34328  0141AC  6E58               	movwf	i2___fladd@b+2,c
 34329  0141AE  0E00               	movlw	0
 34330  0141B0  6E59               	movwf	i2___fladd@b+3,c
 34331  0141B2                     i2l1998:
 34332                           
 34333                           ; BSR set to: 0
 34334                           
 34335                           ; BSR set to: 0
 34336  0141B2  8E58               	bsf	i2___fladd@b+2,7,c
 34337  0141B4  D006               	goto	L20
 34338  0141B6                     i2l1997:
 34339                           
 34340                           ; BSR set to: 0
 34341                           
 34342                           ; BSR set to: 0
 34343  0141B6  0E00               	movlw	0
 34344  0141B8  6E56               	movwf	i2___fladd@b,c
 34345  0141BA  0E00               	movlw	0
 34346  0141BC  6E57               	movwf	i2___fladd@b+1,c
 34347  0141BE  0E00               	movlw	0
 34348  0141C0  6E58               	movwf	i2___fladd@b+2,c
 34349  0141C2                     L20:
 34350  0141C2  0E00               	movlw	0
 34351  0141C4  6E59               	movwf	i2___fladd@b+3,c
 34352                           
 34353                           ; BSR set to: 0
 34354                           
 34355                           ; BSR set to: 0
 34356  0141C6  505D               	movf	i2___fladd@a+3,w,c
 34357  0141C8  0B80               	andlw	128
 34358  0141CA  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34359                           
 34360                           ; BSR set to: 0
 34361  0141CC  5168               	movf	i2___fladd@signs& (0+255),w,b
 34362  0141CE  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 34363  0141D0  A4D8               	btfss	status,2,c
 34364                           
 34365                           ; BSR set to: 0
 34366  0141D2  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 34367                           
 34368                           ; BSR set to: 0
 34369                           
 34370                           ; BSR set to: 0
 34371  0141D4  505D               	movf	i2___fladd@a+3,w,c
 34372  0141D6  245D               	addwf	i2___fladd@a+3,w,c
 34373  0141D8  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34374                           
 34375                           ; BSR set to: 0
 34376  0141DA  BE5C               	btfsc	i2___fladd@a+2,7,c
 34377                           
 34378                           ; BSR set to: 0
 34379  0141DC  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 34380                           
 34381                           ; BSR set to: 0
 34382                           
 34383                           ; BSR set to: 0
 34384  0141DE  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34385  0141E0  B4D8               	btfsc	status,2,c
 34386  0141E2  D00D               	goto	i2l2002
 34387                           
 34388                           ; BSR set to: 0
 34389  0141E4  2969               	incf	i2___fladd@aexp& (0+255),w,b
 34390  0141E6  A4D8               	btfss	status,2,c
 34391  0141E8  D008               	goto	i2l2003
 34392                           
 34393                           ; BSR set to: 0
 34394  0141EA  0E00               	movlw	0
 34395  0141EC  6E5A               	movwf	i2___fladd@a,c
 34396  0141EE  0E00               	movlw	0
 34397  0141F0  6E5B               	movwf	i2___fladd@a+1,c
 34398  0141F2  0E00               	movlw	0
 34399  0141F4  6E5C               	movwf	i2___fladd@a+2,c
 34400  0141F6  0E00               	movlw	0
 34401  0141F8  6E5D               	movwf	i2___fladd@a+3,c
 34402  0141FA                     i2l2003:
 34403                           
 34404                           ; BSR set to: 0
 34405                           
 34406                           ; BSR set to: 0
 34407  0141FA  8E5C               	bsf	i2___fladd@a+2,7,c
 34408  0141FC  D006               	goto	L21
 34409  0141FE                     i2l2002:
 34410                           
 34411                           ; BSR set to: 0
 34412                           
 34413                           ; BSR set to: 0
 34414  0141FE  0E00               	movlw	0
 34415  014200  6E5A               	movwf	i2___fladd@a,c
 34416  014202  0E00               	movlw	0
 34417  014204  6E5B               	movwf	i2___fladd@a+1,c
 34418  014206  0E00               	movlw	0
 34419  014208  6E5C               	movwf	i2___fladd@a+2,c
 34420  01420A                     L21:
 34421  01420A  0E00               	movlw	0
 34422  01420C  6E5D               	movwf	i2___fladd@a+3,c
 34423                           
 34424                           ; BSR set to: 0
 34425                           
 34426                           ; BSR set to: 0
 34427  01420E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34428  014210  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 34429  014212  B0D8               	btfsc	status,0,c
 34430  014214  D022               	goto	i2l2005
 34431                           
 34432                           ; BSR set to: 0
 34433  014216  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 34434  014218  D002               	goto	i2l2006
 34435                           
 34436                           ; BSR set to: 0
 34437  01421A  0E80               	movlw	128
 34438  01421C  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 34439  01421E                     i2l2006:
 34440                           
 34441                           ; BSR set to: 0
 34442                           
 34443                           ; BSR set to: 0
 34444  01421E  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 34445                           
 34446                           ; BSR set to: 0
 34447  014222  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 34448                           
 34449                           ; BSR set to: 0
 34450  014226  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 34451                           
 34452                           ; BSR set to: 0
 34453  01422A  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 34454                           
 34455                           ; BSR set to: 0
 34456  01422E  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 34457                           
 34458                           ; BSR set to: 0
 34459  014232  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 34460                           
 34461                           ; BSR set to: 0
 34462  014236  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 34463                           
 34464                           ; BSR set to: 0
 34465  01423A  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 34466                           
 34467                           ; BSR set to: 0
 34468  01423E  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 34469                           
 34470                           ; BSR set to: 0
 34471  014242  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 34472                           
 34473                           ; BSR set to: 0
 34474  014246  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 34475                           
 34476                           ; BSR set to: 0
 34477  01424A  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 34478                           
 34479                           ; BSR set to: 0
 34480  01424E  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 34481                           
 34482                           ; BSR set to: 0
 34483  014252  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 34484                           
 34485                           ; BSR set to: 0
 34486  014256  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 34487  01425A                     i2l2005:
 34488                           
 34489                           ; BSR set to: 0
 34490                           
 34491                           ; BSR set to: 0
 34492  01425A  0E00               	movlw	0
 34493  01425C  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34494                           
 34495                           ; BSR set to: 0
 34496  01425E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34497  014260  6F60               	movwf	??i2___fladd& (0+255),b
 34498  014262  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 34499  014264  1F60               	comf	??i2___fladd& (0+255),f,b
 34500  014266  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 34501  014268  4B60               	infsnz	??i2___fladd& (0+255),f,b
 34502  01426A  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 34503  01426C  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34504  01426E  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 34505  014270  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 34506  014272  5160               	movf	??i2___fladd& (0+255),w,b
 34507  014274  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 34508  014276  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 34509  014278  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 34510  01427A  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 34511  01427C  D02C               	goto	i2l2009
 34512  01427E  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 34513  014280  E104               	bnz	i2u1186_40
 34514  014282  0E1A               	movlw	26
 34515  014284  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 34516  014286  A0D8               	btfss	status,0,c
 34517  014288  D026               	goto	i2l2009
 34518  01428A                     i2u1186_40:
 34519                           
 34520                           ; BSR set to: 0
 34521  01428A  5056               	movf	i2___fladd@b,w,c
 34522  01428C  1057               	iorwf	i2___fladd@b+1,w,c
 34523  01428E  1058               	iorwf	i2___fladd@b+2,w,c
 34524  014290  1059               	iorwf	i2___fladd@b+3,w,c
 34525  014292  B4D8               	btfsc	status,2,c
 34526  014294  D002               	goto	i2u1187_40
 34527  014296  0E01               	movlw	1
 34528  014298  D001               	goto	i2u1188_40
 34529  01429A                     i2u1187_40:
 34530  01429A  0E00               	movlw	0
 34531  01429C                     i2u1188_40:
 34532  01429C  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34533                           
 34534                           ; BSR set to: 0
 34535  01429E  0E00               	movlw	0
 34536  0142A0  6E56               	movwf	i2___fladd@b,c
 34537  0142A2  0E00               	movlw	0
 34538  0142A4  6E57               	movwf	i2___fladd@b+1,c
 34539  0142A6  0E00               	movlw	0
 34540  0142A8  6E58               	movwf	i2___fladd@b+2,c
 34541  0142AA  0E00               	movlw	0
 34542  0142AC  6E59               	movwf	i2___fladd@b+3,c
 34543                           
 34544                           ; BSR set to: 0
 34545  0142AE  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 34546  0142B2  D015               	goto	i2u1191_40
 34547  0142B4                     i2l2010:
 34548                           
 34549                           ; BSR set to: 0
 34550  0142B4  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 34551  0142B6  D005               	goto	i2l2011
 34552                           
 34553                           ; BSR set to: 0
 34554  0142B8  90D8               	bcf	status,0,c
 34555  0142BA  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 34556  0142BC  0901               	iorlw	1
 34557  0142BE  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34558  0142C0  D002               	goto	i2l2012
 34559  0142C2                     i2l2011:
 34560                           
 34561                           ; BSR set to: 0
 34562                           
 34563                           ; BSR set to: 0
 34564  0142C2  90D8               	bcf	status,0,c
 34565  0142C4  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 34566  0142C6                     i2l2012:
 34567                           
 34568                           ; BSR set to: 0
 34569                           
 34570                           ; BSR set to: 0
 34571  0142C6  B056               	btfsc	i2___fladd@b,0,c
 34572                           
 34573                           ; BSR set to: 0
 34574  0142C8  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 34575                           
 34576                           ; BSR set to: 0
 34577                           
 34578                           ; BSR set to: 0
 34579  0142CA  3459               	rlcf	i2___fladd@b+3,w,c
 34580  0142CC  3259               	rrcf	i2___fladd@b+3,f,c
 34581  0142CE  3258               	rrcf	i2___fladd@b+2,f,c
 34582  0142D0  3257               	rrcf	i2___fladd@b+1,f,c
 34583  0142D2  3256               	rrcf	i2___fladd@b,f,c
 34584                           
 34585                           ; BSR set to: 0
 34586  0142D4  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 34587  0142D6                     i2l2009:
 34588                           
 34589                           ; BSR set to: 0
 34590  0142D6  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34591  0142D8  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 34592  0142DA  A0D8               	btfss	status,0,c
 34593  0142DC  D7EB               	goto	i2l2010
 34594  0142DE                     i2u1191_40:
 34595                           
 34596                           ; BSR set to: 0
 34597                           
 34598                           ; BSR set to: 0
 34599  0142DE  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 34600  0142E0  D029               	goto	i2l2015
 34601                           
 34602                           ; BSR set to: 0
 34603  0142E2  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34604  0142E4  A4D8               	btfss	status,2,c
 34605  0142E6  D009               	goto	i2l2016
 34606                           
 34607                           ; BSR set to: 0
 34608  0142E8  0E00               	movlw	0
 34609  0142EA  6E56               	movwf	?i2___fladd,c
 34610  0142EC  0E00               	movlw	0
 34611  0142EE  6E57               	movwf	?i2___fladd+1,c
 34612  0142F0  0E00               	movlw	0
 34613  0142F2  6E58               	movwf	?i2___fladd+2,c
 34614  0142F4  0E00               	movlw	0
 34615  0142F6  6E59               	movwf	?i2___fladd+3,c
 34616                           
 34617                           ; BSR set to: 0
 34618  0142F8  0012               	return	
 34619  0142FA                     i2l2016:
 34620                           
 34621                           ; BSR set to: 0
 34622                           
 34623                           ; BSR set to: 0
 34624  0142FA  505A               	movf	i2___fladd@a,w,c
 34625  0142FC  2656               	addwf	i2___fladd@b,f,c
 34626  0142FE  505B               	movf	i2___fladd@a+1,w,c
 34627  014300  2257               	addwfc	i2___fladd@b+1,f,c
 34628  014302  505C               	movf	i2___fladd@a+2,w,c
 34629  014304  2258               	addwfc	i2___fladd@b+2,f,c
 34630  014306  505D               	movf	i2___fladd@a+3,w,c
 34631  014308  2259               	addwfc	i2___fladd@b+3,f,c
 34632                           
 34633                           ; BSR set to: 0
 34634  01430A  A059               	btfss	i2___fladd@b+3,0,c
 34635  01430C  D083               	goto	i2u1204_40
 34636                           
 34637                           ; BSR set to: 0
 34638  01430E  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 34639  014310  D006               	goto	i2l2019
 34640                           
 34641                           ; BSR set to: 0
 34642  014312  90D8               	bcf	status,0,c
 34643  014314  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 34644  014316  516B               	movf	i2___fladd@grs& (0+255),w,b
 34645  014318  0901               	iorlw	1
 34646  01431A  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34647  01431C  D002               	goto	i2l2020
 34648  01431E                     i2l2019:
 34649                           
 34650                           ; BSR set to: 0
 34651                           
 34652                           ; BSR set to: 0
 34653  01431E  90D8               	bcf	status,0,c
 34654  014320  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 34655  014322                     i2l2020:
 34656                           
 34657                           ; BSR set to: 0
 34658                           
 34659                           ; BSR set to: 0
 34660  014322  B056               	btfsc	i2___fladd@b,0,c
 34661                           
 34662                           ; BSR set to: 0
 34663  014324  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 34664                           
 34665                           ; BSR set to: 0
 34666                           
 34667                           ; BSR set to: 0
 34668  014326  3459               	rlcf	i2___fladd@b+3,w,c
 34669  014328  3259               	rrcf	i2___fladd@b+3,f,c
 34670  01432A  3258               	rrcf	i2___fladd@b+2,f,c
 34671  01432C  3257               	rrcf	i2___fladd@b+1,f,c
 34672  01432E  3256               	rrcf	i2___fladd@b,f,c
 34673                           
 34674                           ; BSR set to: 0
 34675  014330  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 34676                           
 34677                           ; BSR set to: 0
 34678  014332  D070               	goto	i2u1204_40
 34679  014334                     i2l2015:
 34680                           
 34681                           ; BSR set to: 0
 34682                           
 34683                           ; BSR set to: 0
 34684  014334  505A               	movf	i2___fladd@a,w,c
 34685  014336  5C56               	subwf	i2___fladd@b,w,c
 34686  014338  505B               	movf	i2___fladd@a+1,w,c
 34687  01433A  5857               	subwfb	i2___fladd@b+1,w,c
 34688  01433C  505C               	movf	i2___fladd@a+2,w,c
 34689  01433E  5858               	subwfb	i2___fladd@b+2,w,c
 34690  014340  5059               	movf	i2___fladd@b+3,w,c
 34691  014342  0A80               	xorlw	128
 34692  014344  6F60               	movwf	??i2___fladd& (0+255),b
 34693  014346  505D               	movf	i2___fladd@a+3,w,c
 34694  014348  0A80               	xorlw	128
 34695  01434A  5960               	subwfb	??i2___fladd& (0+255),w,b
 34696  01434C  B0D8               	btfsc	status,0,c
 34697  01434E  D036               	goto	i2l2023
 34698                           
 34699                           ; BSR set to: 0
 34700  014350  C056  F060         	movff	i2___fladd@b,??i2___fladd
 34701  014354  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 34702  014358  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 34703  01435C  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 34704  014360  1F60               	comf	??i2___fladd& (0+255),f,b
 34705  014362  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 34706  014364  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 34707  014366  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 34708  014368  2B60               	incf	??i2___fladd& (0+255),f,b
 34709  01436A  0E00               	movlw	0
 34710  01436C  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 34711  01436E  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 34712  014370  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 34713  014372  505A               	movf	i2___fladd@a,w,c
 34714  014374  2560               	addwf	??i2___fladd& (0+255),w,b
 34715  014376  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 34716  014378  505B               	movf	i2___fladd@a+1,w,c
 34717  01437A  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 34718  01437C  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 34719  01437E  505C               	movf	i2___fladd@a+2,w,c
 34720  014380  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 34721  014382  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 34722  014384  505D               	movf	i2___fladd@a+3,w,c
 34723  014386  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 34724  014388  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 34725  01438A  0EFF               	movlw	255
 34726  01438C  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 34727  01438E  6E56               	movwf	i2___fladd@b,c
 34728  014390  0EFF               	movlw	255
 34729  014392  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 34730  014394  6E57               	movwf	i2___fladd@b+1,c
 34731  014396  0EFF               	movlw	255
 34732  014398  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 34733  01439A  6E58               	movwf	i2___fladd@b+2,c
 34734  01439C  0EFF               	movlw	255
 34735  01439E  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 34736  0143A0  6E59               	movwf	i2___fladd@b+3,c
 34737  0143A2  0E80               	movlw	128
 34738  0143A4  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 34739                           
 34740                           ; BSR set to: 0
 34741  0143A6  6D6B               	negf	i2___fladd@grs& (0+255),b
 34742                           
 34743                           ; BSR set to: 0
 34744  0143A8  516B               	movf	i2___fladd@grs& (0+255),w,b
 34745  0143AA  A4D8               	btfss	status,2,c
 34746  0143AC  D00F               	goto	i2l2025
 34747                           
 34748                           ; BSR set to: 0
 34749  0143AE  0E01               	movlw	1
 34750  0143B0  2656               	addwf	i2___fladd@b,f,c
 34751  0143B2  0E00               	movlw	0
 34752  0143B4  2257               	addwfc	i2___fladd@b+1,f,c
 34753  0143B6  2258               	addwfc	i2___fladd@b+2,f,c
 34754  0143B8  2259               	addwfc	i2___fladd@b+3,f,c
 34755                           
 34756                           ; BSR set to: 0
 34757  0143BA  D008               	goto	i2l2025
 34758  0143BC                     i2l2023:
 34759                           
 34760                           ; BSR set to: 0
 34761                           
 34762                           ; BSR set to: 0
 34763  0143BC  505A               	movf	i2___fladd@a,w,c
 34764  0143BE  5E56               	subwf	i2___fladd@b,f,c
 34765  0143C0  505B               	movf	i2___fladd@a+1,w,c
 34766  0143C2  5A57               	subwfb	i2___fladd@b+1,f,c
 34767  0143C4  505C               	movf	i2___fladd@a+2,w,c
 34768  0143C6  5A58               	subwfb	i2___fladd@b+2,f,c
 34769  0143C8  505D               	movf	i2___fladd@a+3,w,c
 34770  0143CA  5A59               	subwfb	i2___fladd@b+3,f,c
 34771  0143CC                     i2l2025:
 34772                           
 34773                           ; BSR set to: 0
 34774  0143CC  5056               	movf	i2___fladd@b,w,c
 34775  0143CE  1057               	iorwf	i2___fladd@b+1,w,c
 34776  0143D0  1058               	iorwf	i2___fladd@b+2,w,c
 34777  0143D2  1059               	iorwf	i2___fladd@b+3,w,c
 34778  0143D4  A4D8               	btfss	status,2,c
 34779  0143D6  D01C               	goto	i2l2032
 34780                           
 34781                           ; BSR set to: 0
 34782  0143D8  516B               	movf	i2___fladd@grs& (0+255),w,b
 34783  0143DA  A4D8               	btfss	status,2,c
 34784  0143DC  D019               	goto	i2l2032
 34785                           
 34786                           ; BSR set to: 0
 34787  0143DE  0E00               	movlw	0
 34788  0143E0  6E56               	movwf	?i2___fladd,c
 34789  0143E2  0E00               	movlw	0
 34790  0143E4  6E57               	movwf	?i2___fladd+1,c
 34791  0143E6  0E00               	movlw	0
 34792  0143E8  6E58               	movwf	?i2___fladd+2,c
 34793  0143EA  0E00               	movlw	0
 34794  0143EC  6E59               	movwf	?i2___fladd+3,c
 34795                           
 34796                           ; BSR set to: 0
 34797  0143EE  0012               	return	
 34798  0143F0                     
 34799                           ; BSR set to: 0
 34800                           
 34801                           ; BSR set to: 0
 34802  0143F0  90D8               	bcf	status,0,c
 34803  0143F2  3656               	rlcf	i2___fladd@b,f,c
 34804  0143F4  3657               	rlcf	i2___fladd@b+1,f,c
 34805  0143F6  3658               	rlcf	i2___fladd@b+2,f,c
 34806  0143F8  3659               	rlcf	i2___fladd@b+3,f,c
 34807                           
 34808                           ; BSR set to: 0
 34809  0143FA  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 34810                           
 34811                           ; BSR set to: 0
 34812  0143FC  8056               	bsf	i2___fladd@b,0,c
 34813                           
 34814                           ; BSR set to: 0
 34815                           
 34816                           ; BSR set to: 0
 34817  0143FE  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 34818  014400  D002               	goto	i2l2030
 34819                           
 34820                           ; BSR set to: 0
 34821  014402  80D8               	bsf	status,0,c
 34822  014404  D001               	goto	L22
 34823  014406                     i2l2030:
 34824                           
 34825                           ; BSR set to: 0
 34826                           
 34827                           ; BSR set to: 0
 34828  014406  90D8               	bcf	status,0,c
 34829  014408                     L22:
 34830  014408  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 34831                           
 34832                           ; BSR set to: 0
 34833                           
 34834                           ; BSR set to: 0
 34835  01440A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34836  01440C  A4D8               	btfss	status,2,c
 34837                           
 34838                           ; BSR set to: 0
 34839  01440E  076A               	decf	i2___fladd@bexp& (0+255),f,b
 34840  014410                     i2l2032:
 34841                           
 34842                           ; BSR set to: 0
 34843                           
 34844                           ; BSR set to: 0
 34845                           
 34846                           ; BSR set to: 0
 34847  014410  AE58               	btfss	i2___fladd@b+2,7,c
 34848  014412  D7EE               	goto	i2l2028
 34849  014414                     i2u1204_40:
 34850                           
 34851                           ; BSR set to: 0
 34852                           
 34853                           ; BSR set to: 0
 34854                           
 34855                           ; BSR set to: 0
 34856  014414  0E00               	movlw	0
 34857  014416  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34858                           
 34859                           ; BSR set to: 0
 34860  014418  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 34861  01441A  D00A               	goto	i2l2037
 34862                           
 34863                           ; BSR set to: 0
 34864  01441C  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 34865  014420  0E7F               	movlw	127
 34866  014422  1760               	andwf	??i2___fladd& (0+255),f,b
 34867  014424  A4D8               	btfss	status,2,c
 34868  014426  D002               	goto	i2u1207_40
 34869                           
 34870                           ; BSR set to: 0
 34871                           
 34872                           ; BSR set to: 0
 34873  014428  A056               	btfss	i2___fladd@b,0,c
 34874  01442A  D002               	goto	i2l2037
 34875  01442C                     i2u1207_40:
 34876                           
 34877                           ; BSR set to: 0
 34878  01442C  0E01               	movlw	1
 34879  01442E  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34880  014430                     i2l2037:
 34881                           
 34882                           ; BSR set to: 0
 34883                           
 34884                           ; BSR set to: 0
 34885                           
 34886                           ; BSR set to: 0
 34887  014430  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34888  014432  B4D8               	btfsc	status,2,c
 34889  014434  D020               	goto	i2l2040
 34890                           
 34891                           ; BSR set to: 0
 34892  014436  0E01               	movlw	1
 34893  014438  2656               	addwf	i2___fladd@b,f,c
 34894  01443A  0E00               	movlw	0
 34895  01443C  2257               	addwfc	i2___fladd@b+1,f,c
 34896  01443E  2258               	addwfc	i2___fladd@b+2,f,c
 34897  014440  2259               	addwfc	i2___fladd@b+3,f,c
 34898                           
 34899                           ; BSR set to: 0
 34900  014442  A059               	btfss	i2___fladd@b+3,0,c
 34901  014444  D018               	goto	i2l2040
 34902                           
 34903                           ; BSR set to: 0
 34904  014446  C056  F060         	movff	i2___fladd@b,??i2___fladd
 34905  01444A  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 34906  01444E  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 34907  014452  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 34908  014456  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 34909  014458  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 34910  01445A  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 34911  01445C  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 34912  01445E  3360               	rrcf	??i2___fladd& (0+255),f,b
 34913  014460  C060  F056         	movff	??i2___fladd,i2___fladd@b
 34914  014464  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 34915  014468  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 34916  01446C  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 34917  014470  296A               	incf	i2___fladd@bexp& (0+255),w,b
 34918  014472  A4D8               	btfss	status,2,c
 34919                           
 34920                           ; BSR set to: 0
 34921  014474  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 34922  014476                     i2l2040:
 34923                           
 34924                           ; BSR set to: 0
 34925                           
 34926                           ; BSR set to: 0
 34927                           
 34928                           ; BSR set to: 0
 34929                           
 34930                           ; BSR set to: 0
 34931  014476  296A               	incf	i2___fladd@bexp& (0+255),w,b
 34932  014478  B4D8               	btfsc	status,2,c
 34933  01447A  D003               	goto	i2u1212_40
 34934                           
 34935                           ; BSR set to: 0
 34936  01447C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34937  01447E  A4D8               	btfss	status,2,c
 34938  014480  D00D               	goto	i2l2044
 34939  014482                     i2u1212_40:
 34940                           
 34941                           ; BSR set to: 0
 34942                           
 34943                           ; BSR set to: 0
 34944  014482  0E00               	movlw	0
 34945  014484  6E56               	movwf	i2___fladd@b,c
 34946  014486  0E00               	movlw	0
 34947  014488  6E57               	movwf	i2___fladd@b+1,c
 34948  01448A  0E00               	movlw	0
 34949  01448C  6E58               	movwf	i2___fladd@b+2,c
 34950  01448E  0E00               	movlw	0
 34951  014490  6E59               	movwf	i2___fladd@b+3,c
 34952  014492  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34953  014494  A4D8               	btfss	status,2,c
 34954  014496  D002               	goto	i2l2044
 34955                           
 34956                           ; BSR set to: 0
 34957  014498  0E00               	movlw	0
 34958  01449A  6F68               	movwf	i2___fladd@signs& (0+255),b
 34959  01449C                     i2l2044:
 34960                           
 34961                           ; BSR set to: 0
 34962                           
 34963                           ; BSR set to: 0
 34964                           
 34965                           ; BSR set to: 0
 34966  01449C  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 34967  01449E  D002               	goto	i2l2045
 34968                           
 34969                           ; BSR set to: 0
 34970  0144A0  8E58               	bsf	i2___fladd@b+2,7,c
 34971  0144A2  D001               	goto	i2l2046
 34972  0144A4                     i2l2045:
 34973                           
 34974                           ; BSR set to: 0
 34975                           
 34976                           ; BSR set to: 0
 34977  0144A4  9E58               	bcf	i2___fladd@b+2,7,c
 34978  0144A6                     i2l2046:
 34979                           
 34980                           ; BSR set to: 0
 34981                           
 34982                           ; BSR set to: 0
 34983  0144A6  90D8               	bcf	status,0,c
 34984  0144A8  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 34985  0144AA  6E59               	movwf	i2___fladd@b+3,c
 34986                           
 34987                           ; BSR set to: 0
 34988  0144AC  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 34989                           
 34990                           ; BSR set to: 0
 34991  0144AE  8E59               	bsf	i2___fladd@b+3,7,c
 34992                           
 34993                           ; BSR set to: 0
 34994                           
 34995                           ; BSR set to: 0
 34996  0144B0  C056  F056         	movff	i2___fladd@b,?i2___fladd
 34997  0144B4  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 34998  0144B8  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 34999  0144BC  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 35000  0144C0  0012               	return	
 35001  0144C2                     __end_ofi2___fladd:
 35002                           	opt stack 0
 35003                           tosu	equ	0xFFF
 35004                           tosh	equ	0xFFE
 35005                           tosl	equ	0xFFD
 35006                           pclatu	equ	0xFFB
 35007                           pclath	equ	0xFFA
 35008                           tblptru	equ	0xFF8
 35009                           tblptrh	equ	0xFF7
 35010                           tblptrl	equ	0xFF6
 35011                           tablat	equ	0xFF5
 35012                           prodh	equ	0xFF4
 35013                           prodl	equ	0xFF3
 35014                           intcon	equ	0xFF2
 35015                           indf0	equ	0xFEF
 35016                           postinc0	equ	0xFEE
 35017                           fsr0h	equ	0xFEA
 35018                           fsr0l	equ	0xFE9
 35019                           wreg	equ	0xFE8
 35020                           indf1	equ	0xFE7
 35021                           postdec1	equ	0xFE5
 35022                           plusw1	equ	0xFE3
 35023                           fsr1h	equ	0xFE2
 35024                           fsr1l	equ	0xFE1
 35025                           bsr	equ	0xFE0
 35026                           indf2	equ	0xFDF
 35027                           postinc2	equ	0xFDE
 35028                           postdec2	equ	0xFDD
 35029                           plusw2	equ	0xFDB
 35030                           fsr2h	equ	0xFDA
 35031                           fsr2l	equ	0xFD9
 35032                           status	equ	0xFD8
 35033                           
 35034 ;; *************** function _ADCC_GetConversionResult *****************
 35035 ;; Defined at:
 35036 ;;		line 130 in file "mcc_generated_files/adcc.c"
 35037 ;; Parameters:    Size  Location     Type
 35038 ;;		None
 35039 ;; Auto vars:     Size  Location     Type
 35040 ;;		None
 35041 ;; Return value:  Size  Location     Type
 35042 ;;                  2    0[COMRAM] unsigned int 
 35043 ;; Registers used:
 35044 ;;		wreg, status,2, status,0
 35045 ;; Tracked objects:
 35046 ;;		On entry : 0/0
 35047 ;;		On exit  : 0/0
 35048 ;;		Unchanged: 0/0
 35049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35054 ;;Total ram usage:        4 bytes
 35055 ;; Hardware stack levels used:    1
 35056 ;; This function calls:
 35057 ;;		Nothing
 35058 ;; This function is called by:
 35059 ;;		_ADCPostProcessingCallback
 35060 ;; This function uses a non-reentrant model
 35061 ;;
 35062                           
 35063                           	psect	text121
 35064  018072                     __ptext121:
 35065                           	opt stack 0
 35066  018072                     _ADCC_GetConversionResult:
 35067                           	opt stack 16
 35068                           
 35069                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 35070                           
 35071                           ; BSR set to: 0
 35072                           ;incstack = 0
 35073  018072  5064               	movf	3940,w,c	;volatile
 35074  018074  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 35075  018076  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 35076  018078  5063               	movf	3939,w,c	;volatile
 35077  01807A  2403               	addwf	??_ADCC_GetConversionResult,w,c
 35078  01807C  6E01               	movwf	?_ADCC_GetConversionResult,c
 35079  01807E  0E00               	movlw	0
 35080  018080  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 35081  018082  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 35082  018084  0012               	return	
 35083  018086                     __end_of_ADCC_GetConversionResult:
 35084                           	opt stack 0
 35085                           tosu	equ	0xFFF
 35086                           tosh	equ	0xFFE
 35087                           tosl	equ	0xFFD
 35088                           pclatu	equ	0xFFB
 35089                           pclath	equ	0xFFA
 35090                           tblptru	equ	0xFF8
 35091                           tblptrh	equ	0xFF7
 35092                           tblptrl	equ	0xFF6
 35093                           tablat	equ	0xFF5
 35094                           prodh	equ	0xFF4
 35095                           prodl	equ	0xFF3
 35096                           intcon	equ	0xFF2
 35097                           indf0	equ	0xFEF
 35098                           postinc0	equ	0xFEE
 35099                           fsr0h	equ	0xFEA
 35100                           fsr0l	equ	0xFE9
 35101                           wreg	equ	0xFE8
 35102                           indf1	equ	0xFE7
 35103                           postdec1	equ	0xFE5
 35104                           plusw1	equ	0xFE3
 35105                           fsr1h	equ	0xFE2
 35106                           fsr1l	equ	0xFE1
 35107                           bsr	equ	0xFE0
 35108                           indf2	equ	0xFDF
 35109                           postinc2	equ	0xFDE
 35110                           postdec2	equ	0xFDD
 35111                           plusw2	equ	0xFDB
 35112                           fsr2h	equ	0xFDA
 35113                           fsr2l	equ	0xFD9
 35114                           status	equ	0xFD8
 35115                           tosu	equ	0xFFF
 35116                           tosh	equ	0xFFE
 35117                           tosl	equ	0xFFD
 35118                           pclatu	equ	0xFFB
 35119                           pclath	equ	0xFFA
 35120                           tblptru	equ	0xFF8
 35121                           tblptrh	equ	0xFF7
 35122                           tblptrl	equ	0xFF6
 35123                           tablat	equ	0xFF5
 35124                           prodh	equ	0xFF4
 35125                           prodl	equ	0xFF3
 35126                           intcon	equ	0xFF2
 35127                           indf0	equ	0xFEF
 35128                           postinc0	equ	0xFEE
 35129                           fsr0h	equ	0xFEA
 35130                           fsr0l	equ	0xFE9
 35131                           wreg	equ	0xFE8
 35132                           indf1	equ	0xFE7
 35133                           postdec1	equ	0xFE5
 35134                           plusw1	equ	0xFE3
 35135                           fsr1h	equ	0xFE2
 35136                           fsr1l	equ	0xFE1
 35137                           bsr	equ	0xFE0
 35138                           indf2	equ	0xFDF
 35139                           postinc2	equ	0xFDE
 35140                           postdec2	equ	0xFDD
 35141                           plusw2	equ	0xFDB
 35142                           fsr2h	equ	0xFDA
 35143                           fsr2l	equ	0xFD9
 35144                           status	equ	0xFD8
 35145                           
 35146                           	psect	text122
 35147  000000                     __ptext122:
 35148                           	opt stack 0
 35149                           tosu	equ	0xFFF
 35150                           tosh	equ	0xFFE
 35151                           tosl	equ	0xFFD
 35152                           pclatu	equ	0xFFB
 35153                           pclath	equ	0xFFA
 35154                           tblptru	equ	0xFF8
 35155                           tblptrh	equ	0xFF7
 35156                           tblptrl	equ	0xFF6
 35157                           tablat	equ	0xFF5
 35158                           prodh	equ	0xFF4
 35159                           prodl	equ	0xFF3
 35160                           intcon	equ	0xFF2
 35161                           indf0	equ	0xFEF
 35162                           postinc0	equ	0xFEE
 35163                           fsr0h	equ	0xFEA
 35164                           fsr0l	equ	0xFE9
 35165                           wreg	equ	0xFE8
 35166                           indf1	equ	0xFE7
 35167                           postdec1	equ	0xFE5
 35168                           plusw1	equ	0xFE3
 35169                           fsr1h	equ	0xFE2
 35170                           fsr1l	equ	0xFE1
 35171                           bsr	equ	0xFE0
 35172                           indf2	equ	0xFDF
 35173                           postinc2	equ	0xFDE
 35174                           postdec2	equ	0xFDD
 35175                           plusw2	equ	0xFDB
 35176                           fsr2h	equ	0xFDA
 35177                           fsr2l	equ	0xFD9
 35178                           status	equ	0xFD8
 35179                           
 35180                           	psect	rparam
 35181  0000                     tosu	equ	0xFFF
 35182                           tosh	equ	0xFFE
 35183                           tosl	equ	0xFFD
 35184                           pclatu	equ	0xFFB
 35185                           pclath	equ	0xFFA
 35186                           tblptru	equ	0xFF8
 35187                           tblptrh	equ	0xFF7
 35188                           tblptrl	equ	0xFF6
 35189                           tablat	equ	0xFF5
 35190                           prodh	equ	0xFF4
 35191                           prodl	equ	0xFF3
 35192                           intcon	equ	0xFF2
 35193                           indf0	equ	0xFEF
 35194                           postinc0	equ	0xFEE
 35195                           fsr0h	equ	0xFEA
 35196                           fsr0l	equ	0xFE9
 35197                           wreg	equ	0xFE8
 35198                           indf1	equ	0xFE7
 35199                           postdec1	equ	0xFE5
 35200                           plusw1	equ	0xFE3
 35201                           fsr1h	equ	0xFE2
 35202                           fsr1l	equ	0xFE1
 35203                           bsr	equ	0xFE0
 35204                           indf2	equ	0xFDF
 35205                           postinc2	equ	0xFDE
 35206                           postdec2	equ	0xFDD
 35207                           plusw2	equ	0xFDB
 35208                           fsr2h	equ	0xFDA
 35209                           fsr2l	equ	0xFD9
 35210                           status	equ	0xFD8
 35211                           
 35212                           	psect	temp
 35213  00005F                     btemp:
 35214                           	opt stack 0
 35215  00005F                     	ds	1
 35216  0000                     int$flags	set	btemp
 35217  0000                     wtemp6	set	btemp+1
 35218                           tosu	equ	0xFFF
 35219                           tosh	equ	0xFFE
 35220                           tosl	equ	0xFFD
 35221                           pclatu	equ	0xFFB
 35222                           pclath	equ	0xFFA
 35223                           tblptru	equ	0xFF8
 35224                           tblptrh	equ	0xFF7
 35225                           tblptrl	equ	0xFF6
 35226                           tablat	equ	0xFF5
 35227                           prodh	equ	0xFF4
 35228                           prodl	equ	0xFF3
 35229                           intcon	equ	0xFF2
 35230                           indf0	equ	0xFEF
 35231                           postinc0	equ	0xFEE
 35232                           fsr0h	equ	0xFEA
 35233                           fsr0l	equ	0xFE9
 35234                           wreg	equ	0xFE8
 35235                           indf1	equ	0xFE7
 35236                           postdec1	equ	0xFE5
 35237                           plusw1	equ	0xFE3
 35238                           fsr1h	equ	0xFE2
 35239                           fsr1l	equ	0xFE1
 35240                           bsr	equ	0xFE0
 35241                           indf2	equ	0xFDF
 35242                           postinc2	equ	0xFDE
 35243                           postdec2	equ	0xFDD
 35244                           plusw2	equ	0xFDB
 35245                           fsr2h	equ	0xFDA
 35246                           fsr2l	equ	0xFD9
 35247                           status	equ	0xFD8


Data Sizes:
    Strings     4934
    Constant    256
    Data        42
    BSS         346
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     160
    BANK1           256    203     227
    BANK2           256      0     222
    BANK3           256     35     163
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_113(CODE[5]), STR_111(CODE[14]), STR_109(CODE[16]), STR_100(CODE[13]), 
		 -> STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), STR_92(CODE[15]), 
		 -> STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), STR_84(CODE[14]), 
		 -> STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), STR_76(CODE[16]), 
		 -> STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), 
		 -> STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), 
		 -> STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK3[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_133(CODE[7]), printf@c(BANK1[1]), STR_132(CODE[16]), STR_131(CODE[22]), 
		 -> STR_130(CODE[21]), STR_129(CODE[27]), STR_128(CODE[41]), STR_127(CODE[32]), 
		 -> STR_126(CODE[19]), STR_125(CODE[16]), STR_124(CODE[15]), STR_123(CODE[16]), 
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), ringBufferLUT@channel_name(BANK3[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2023
		 -> STR_119(CODE[30]), STR_118(CODE[23]), STR_117(CODE[39]), STR_116(CODE[36]), 
		 -> STR_115(CODE[33]), STR_114(CODE[2023]), STR_112(CODE[53]), STR_110(CODE[58]), 
		 -> STR_108(CODE[71]), STR_107(CODE[63]), STR_106(CODE[37]), STR_105(CODE[46]), 
		 -> STR_104(CODE[102]), STR_103(CODE[86]), STR_101(CODE[25]), STR_99(CODE[42]), 
		 -> STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), 
		 -> STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[56]), 
		 -> STR_81(CODE[34]), STR_79(CODE[36]), STR_77(CODE[37]), STR_75(CODE[45]), 
		 -> STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), 
		 -> STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[57]), STR_54(CODE[85]), 
		 -> STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_131(CODE[22]), STR_130(CODE[21]), STR_129(CODE[27]), STR_128(CODE[41]), 
		 -> STR_127(CODE[32]), STR_126(CODE[19]), STR_125(CODE[16]), STR_124(CODE[15]), 
		 -> STR_123(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_132(CODE[16]), STR_131(CODE[22]), STR_130(CODE[21]), STR_129(CODE[27]), 
		 -> STR_128(CODE[41]), STR_127(CODE[32]), STR_126(CODE[19]), STR_125(CODE[16]), 
		 -> STR_124(CODE[15]), STR_123(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___fltol->i2___flmul
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fladd
    _eval_poly->i2___fladd

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->_fround
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  534668
                                            201 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   65502
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  323809
                                            192 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       39    37      2  323081
                                            188 BANK1      4     2      2
                                              0 BANK3     35    35      0
                    _TMR7_StartTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   78171
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   78171
                                            170 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   65502
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1549
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    4993
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1701
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3535
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   65502
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10   65502
                                            124 BANK1     46    36     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   12861
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   12582
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7934
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1041
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1178
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     662
                                            111 BANK1     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    6205
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    5600
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    2236
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                     _TMR7_StopTimer
 ---------------------------------------------------------------------------------
 (11) _TMR7_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  185619
                                            126 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   38965
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   38965
                                             30 BANK0     38    36      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     366
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ISR                                            0     0      0  146414
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  146414
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   94616
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   45173
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   40139
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   24747
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   38006
                                             47 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   35910
                                             30 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4439
                                             22 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    1783
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7601
                                             12 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     477
                                             72 COMRAM    10     6      4
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10270
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4164
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StartTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion
       _TMR7_StopTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fltol
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___fltol
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fltol
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___fltol
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___fltol
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___fltol
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     23      A3      12       63.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      DE      10       86.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CB      E3       7       88.7%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     362       8        0.0%
DATA                 0      0     362       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 05 23:48:12 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
             __end_of_TMR5_SetInterruptHandler 8110                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l57 8022  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 8166  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 7C10                                            l381 7A7E  
                                          l382 7A7A                                            l391 79FC  
                                          l392 7A22                                            l384 7AA8  
                                          l393 7A20                                            l388 79E6  
                                          l389 79E2                                            l996 7342  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                                          _Ipk 024C                                            _Vpk 0250  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString 77F8                                            _sin 47C6  
                   currentMeasuredToPeak@Angle 0093                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 5E3A                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                    i2___flsub@a 007A  
                                  i2___flsub@b 0076                               ??_TMR7_StopTimer 0100  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0168  
                 ?_ADCC_SetADIInterruptHandler 0117                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 0178                                           l1040 6728  
                                         l1041 66FA                                           l2010 3F76  
                                         l2002 3EC0                                           l1202 0408  
                                         l1210 0338                                           l2011 3F84  
                                         l2003 3EBC                                           l1203 03E4  
                                         l1211 0350                                           l1035 66A4  
                                         l1300 7880                                           l2020 3FE4  
                                         l2012 3F88                                           l2100 39E6  
                                         l1204 0398                                           l1212 0368  
                                         l2005 3F1C                                           l1213 0380  
                                         l1205 02D8                                           l1037 66E0  
                                         l1302 7888                                           l2030 40C8  
                                         l2006 3EE0                                           l1070 34C0  
                                         l1230 065E                                           l1222 0516  
                                         l1206 03C8                                           l1038 66C4  
                                         l2023 407E                                           l2015 3FF6  
                                         l2111 3AC2                                           l1071 34D8  
                                         l1207 02F0                                           l2040 4138  
                                         l2032 40D2                                           l2016 3FBC  
                                         l2200 5DD8                                           l2112 3AE0  
                                         l1080 35C2                                           l1064 3508  
                                         l1072 34F0                                           l1240 07EA  
                                         l1232 06B0                                           l1224 0568  
                                         l1216 0458                                           l1208 0308  
                                         l2025 408E                                           l2009 3F98  
                                         l2201 5DCC                                           l1073 3622  
                                         l1081 35DA                                           l1065 3460  
                                         l1209 0320                                           l2106 3A3C  
                                         l1410 135A                                           l1090 36D0  
                                         l1082 35F2                                           l1074 354A  
                                         l1066 3532                                           l1242 082E  
                                         l1234 0702                                           l1226 05BA  
                                         l1218 04C4                                           l2019 3FE0  
                                         l1411 1372                                           l1403 1318  
                                         l1091 36E8                                           l1075 3658  
                                         l1083 360A                                           l1067 3478  
                                         l1251 09B4                                           l1219 04A0  
                                         l2044 415E                                           l2028 40B2  
                                         l2108 3A80                                           l1340 2D70  
                                         l1420 1554                                           l1412 14BC  
                                         l1404 1284                                           l2140 79B0  
                                         l1084 3748                                           l1092 3700  
                                         l1076 3562                                           l1068 3490  
                                         l1244 0876                                           l1236 0754  
                                         l1228 060C                                           l2045 4166  
                                         l2037 40F2                                           l2205 5DF6  
                                         l2109 3A9E                                           l1341 2C78  
                                         l1413 13D4                                           l2061 5106  
                                         l1309 7DEC                                           l1093 3718  
                                         l1085 3670                                           l1077 357A  
                                         l1069 34A8                                           l2046 4168  
                                         l2206 5E28                                           l1334 4F08  
                                         l1422 15F2                                           l1406 1332  
                                         l2054 5080                                           l1086 377E  
                                         l1094 3730                                           l1078 3592  
                                         l1246 08BE                                           l1238 07A6  
                                         l1190 013A                                           l1423 156E  
                                         l1415 14D6                                           l1407 1324  
                                         l1351 0CB2                                           l2071 5210  
                                         l2063 512E                                           l2055 507C  
                                         l1087 3688                                           l1079 35AA  
                                         l1344 2D3E                                           l1440 1660  
                                         l1416 14C8                                           l1352 0CC4  
                                         l2080 528C                                           l2072 51F2  
                                         l2064 51DC                                           l2160 7802  
                                         l2240 6F96                                           l2136 79A0  
                                         l1088 36A0                                           l1256 0B92  
                                         l1248 0B40                                           l1184 003E  
                                         l1337 4FF8                                           l1345 2EC4  
                                         l1433 1624                                           l1409 1356  
                                         l1361 0D96                                           l1353 0D88  
                                         l2081 52B0                                           l2065 518C  
                                         l1281 77B6                                           l2145 78AE  
                                         l2153 7CD4                                           l2241 6F24  
                                         l2137 799A                                           l1089 36B8  
                                         l1249 08F8                                           l1290 7858  
                                         l2090 37E6                                           l1442 1774  
                                         l1418 1530                                           l1362 0F04  
                                         l1370 0DD0                                           l1354 0D5C  
                                         l2082 52DA                                           l2066 51B4  
                                         l2058 50C0                                           l1282 77C0  
                                         l2146 78A4                                           l2154 7CCA  
                                         l2242 6F8E                                           l2170 7644  
                                         l1258 0BE4                                           l1194 01A0  
                                         l1186 007A                                           l1347 2F8A  
                                         l1443 16E4                                           l1435 1644  
                                         l1355 0D08                                           l2083 52E6  
                                         l2059 50BC                                           l2235 7CA4  
                                         l2139 79BA                                           l1292 7860  
                                         l2092 3816                                           l1428 1608  
                                         l1380 14E0                                           l2084 52E8  
                                         l2068 51DA                                           l1196 0204  
                                         l1188 00CC                                           l2093 3812  
                                         l1437 177A                                           l1429 15B0  
                                         l1381 0F18                                           l1365 0D9A  
                                         l1277 77CA                                           l2181 701C  
                                         l1294 7868                                           l2190 5D28  
                                         l1710 6210                                           l2094 3826  
                                         l1382 0F66                                           l1358 0E96  
                                         l1374 0E56                                           l2078 5248  
                                         l1278 77AC                                           l2182 6FB4  
                                         l2166 7608                                           l1198 02A0  
                                         l2191 5D38                                           l2095 3844  
                                         l1439 175C                                           l1375 0E2A  
                                         l1367 0D9E                                           l2159 7808  
                                         l2183 6FF0                                           l2167 7638  
                                         l1199 025A                                           l1296 7870  
                                         l2192 5D56                                           l1712 622E  
                                         l2088 37D6                                           l1392 1148  
                                         l1384 0FD4                                           l1368 0DC6  
                                         l1713 6270                                           l2089 37D2  
                                         l1385 1054                                           l1377 0E6A  
                                         l1369 0DD6                                           l2169 7654  
                                         l1298 7878                                           l1730 6528  
                                         l2194 5D68                                           l1722 6302  
                                         l1714 62A0                                           l1378 0E7E  
                                         l1650 6BB6                                           l2195 5D5C  
                                         l1723 62F6                                           l2099 3A04  
                                         l1387 1082                                           l1379 0E90  
                                         l1900 70F4                                           l1716 62DE  
                                         l1820 6082                                           l1388 10CC  
                                         l1901 70E8                                           l2197 5DA6  
                                         l1717 62CE                                           l1821 6072  
                                         l1389 11AE                                           l1653 6C06  
                                         l1734 7E14                                           l1910 7686  
                                         l2198 5D8E                                           l1814 5FB8  
                                         l1670 707A                                           l1398 1226  
                                         l1654 6BC8                                           l1727 6478  
                                         l1911 767A                                           l1647 6B74  
                                         l1728 64AC                                           l1760 6A2E  
                                         l1904 7128                                           l1816 5FE4  
                                         l1680 7466                                           l1656 6C3A  
                                         l1648 6B6E                                           l1729 64EA  
                                         l1905 7136                                           l1817 601E  
                                         l1673 70A2                                           l1914 76AE  
                                         l1826 60A6                                           l1818 6046  
                                         l1674 70AC                                           l1666 7054  
                                         l1682 747C                                           l1915 76BC  
                                         l1827 609A                                           l1675 70BA  
                                         l1667 7064                                           l1683 7474  
                                         l1765 6A62                                           l1757 69D2  
                                         l1669 7082                                           l1766 6A56  
                                         l1686 7494                           _ADCC_StartConversion 813A  
                                         l1759 6A3E                                           l1687 749E  
                                         l1679 745A                                           l1768 6A7E  
                                         l1688 74AC                                           l1874 7FAA  
                                         l1997 3E78                                           l1998 3E74  
                                         ?_sin 007E                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC5                                           STR_2 FFB0  
                                         STR_3 FFB9                                           STR_4 F4A0  
                                         STR_6 FFB0                                           STR_7 FFB9  
                                         STR_9 FFBD                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 019B  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _PLLR 007230  
                                         _TMR6 000FAF                              ??_TMR7_StartTimer 0117  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 7EFA  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 01CF                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 79DC                                           _Vrms 01CB  
                                         _acos 7526                                           _fabs 7C4C  
                                         _atan 5AB0                                           _asin 44C2  
                                         _atoi 6B6C                                           _main 72CE  
                                         _line 0279                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                         _sqrt 4AC0                                   i2___flneg@f1 002C  
                                         sin@f 007E                                           sin@y 0082  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 0274  
                                 i2___fltol@f1 0049                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 343C                   __end_of_EUSART2_Transmit_ISR 7D2C  
                              __end_ofi2_putch 815E                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                     __size_ofi2_EUSART2_Write 004A                                _timer7ReloadVal 01DB  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0128                               __end_of_HLVD_ISR 816E  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 8028  
                     ?_terminal_textAttributes 01AA                              ??_TMR7_WriteTimer 0102  
                                        l12000 175C                                          l12028 7644  
                                        l10438 6560                                          l12244 6F24  
                                        l13228 024A                                          l13238 029A  
                                        l13360 08E8                                          l11770 0E2A  
                                        l13370 092E                                          l12548 6C02  
                                        l11950 1572                                          l11846 111A  
                                        l11838 10CC                                          l13376 0964  
                                        l11890 1324                                          l11866 122A  
                                        l13378 09B4                                          l11964 15B4  
                                        l12676 52DA                                          l14276 77E4  
                                        l14278 77EE                                          l13818 6694  
                                        l13828 66BA                                          ?_acos 00A9  
                                        ?_fabs 0030                                  ___fltol@sign1 0177  
                                        ?_atan 007C                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 4184                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 5304  
                                        _ADREF 000F58                                __end_of___awdiv 70C4  
                              __end_of___flneg 7E26                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FD70                                          STR_21 FFCC  
                                        STR_30 FF4D                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 F769                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FE28                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FDFC  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF67  
                                        STR_52 F9DF                                __end_of___awmod 74B6  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF5C                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FD17                                          STR_54 F6D0  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FF1D                                          STR_71 FE7E  
                                        STR_47 FE5E                                          STR_64 FEF4  
                                        STR_80 FDD9                                          STR_72 FD87  
                                        STR_48 F97B                                          STR_56 F867  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF72                                          STR_65 FF02  
                                        STR_73 FE0D                                          STR_81 FBEB  
                                        STR_82 FF2A                                          STR_66 FECA  
                                        STR_90 FD9C                                          STR_58 F7AE  
                                        STR_74 F76C                                          STR_67 FD5C  
                                        STR_91 FC2F                                          STR_75 FA3C  
                                        STR_59 F910                                          STR_83 F8D8  
                                        STR_68 FF7C                                          STR_84 FED8  
                                        STR_92 FEAC                                          STR_76 FE3E  
                                        STR_77 FB59                                          STR_85 FB34  
                                        STR_69 F9AF                                          STR_93 F8A0  
                                        STR_94 FEBB                                          STR_78 FE9D  
                                        STR_86 FCCB                                          STR_87 FC72  
                                        STR_79 FBC7                                          STR_95 FAE5  
                                        STR_96 FE6E                                          STR_88 FDB1  
                              __end_of___flmul 3AF6                                          STR_89 FC0D  
                                        STR_97 FABC                                          STR_98 FF50  
                                        STR_99 FA69                                __end_of___flsub 7B02  
                              __end_of___fltol 6A90                                __end_of___lldiv 7148  
                                        ?_sqrt 006C                                          u13010 7086  
                              ___awdiv@divisor 011F                                          u14000 0E0A  
                              __end_of___llmod 76CE                                          u13070 7480  
                                        u14030 0E4C                                          u12520 3FA0  
                                        u13320 60AC                                          u13241 5F9C  
                                        u14210 1268                                          u14130 1092  
                                        u14050 0EC6                                          u14140 10DE  
                                        u13261 5FC8                                          u14037 0E42  
                                        u12470 3F4C                                          u12480 3F5C  
                                        u13600 70F8                                          u14240 1340  
                                        u15200 529A                                          u14057 0EBC  
                                        u12730 4144                                          u12650 40D6  
                                        u12490 3F5E                                          u13530 69F0  
                                        u14250 1350                                          u14170 111A  
                                        u15210 52BE                                          u12900 3A38  
                                        u14420 178C                                          u13630 768A  
                                        u13710 5DE2                                          u13390 6308  
                                        u14430 17BC                                          u13535 69E6  
                                        _T5CLK 000FC6                                          u12680 40EE  
                                        u12840 3832                                          u13570 6A68  
                                        u12930 3A8E                                          u12850 39A8  
                                        u15170 5244                                          u12940 3AAC  
                                        u14437 17B2                                          u14630 782A  
                                        u12855 399E                                          _T5CON 000FC3  
                                        u13930 0CF0                                          u14660 6F56  
                                        u14637 7820                                          u13950 0D40  
                                        u15710 010A                                          _T7CLK 000F33  
                                        u13960 0D7E                                          _T6CON 000FB1  
                                        u13937 0CE6                                          u14930 7034  
                                        u14860 78E6                                          u13957 0D36  
                                        u13990 0E04                                 __CFG_DEBUG$OFF 000000  
                                        u13967 0D74                                          u15760 029A  
                                        _T7CON 000F30                                          u14881 77A2  
                                        u13997 0DFA                                          u14895 7C3C  
                                        u15970 092E                                          u15980 0956  
                                        u16780 66BA                                          _T6HLT 000FB2  
                                        u15990 0964                                          u17737 72E2  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 7D26                                          i1l227 00A8  
                                        i1l404 7D22                                          i1l229 00B2  
                                        i2l212 6CAE                                          i2l214 6CBA  
                                        i2l216 6CC4                                          i1l640 7F38  
                                        i2l410 6E02                                          i2l411 6E24  
                                        i2l414 6E28                                          i2l416 6E78  
                                        i2l409 6DDE                                          _T6TMR 000FAF  
                                        i2l391 7A46                                          i2l392 7A6C  
                                        i2l393 7A6A                                          i1l937 7C0C  
                                        i2l714 803A                                          _T6RST 000FB4  
                                        i2l388 7A30                                          i2l389 7A2C  
                                        i1l981 6D78                                          i1l973 6D38  
                                        i1l990 6DC6                                          i1l982 6D86  
                                        i1l974 6D46                                          i1l968 6D18  
                                        i1l985 6D98                                          i1l977 6D58  
                                        i1l969 6D26                                          i1l986 6DA6  
                                        i1l978 6D66                                          i2l941 2AEC  
                                        i1l989 6DB8                                          i2l950 2470  
                                        i2l942 22F0                                          i2l960 2832  
                                        i2l952 2524                                          i2l953 2718  
                                        i2l962 290A                                          i2l954 2634  
                                        i2l946 2370                                          i2l955 25EE  
                                        i2l964 2ADE                                          i2l956 2622  
                              ___awdiv@counter 0121                                          i2l957 2656  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 631A  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a EC95                             __end_ofsin@coeff_b ECB9  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01D3  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 7D94  
                             __end_of_TMR6_ISR 7ED2                               __end_of_TMR7_ISR 7D60  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01C0                                __end_of_dpowers EC49  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 67A0  
                                        _frexp 73CA                                          _errno 0272  
                        ?_ADCC_StartConversion 0001                                          _scale 2B18  
                              __end_of_isdigit 7FB2                                          atan@f 007C  
                                        atan@x 0084                                          atan@y 0080  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 0020                                          asin@x 0091  
                                        asin@y 00A1                                          atoi@a 0122  
                                        atoi@s 011D                                          _putch 80D8  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge 6684  
                                        sin@x2 008A                                          tablat 000FF5  
                             __end_ofi2___wmul 7F6C                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 6FB2                                __end_of_strncpy 7666  
                             __end_ofi2_fround 5866                 ?_INTERRUPT_InterruptManagerLow 0001  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DC                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 22EA                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 811E  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 8110  
                              _TMR5_Initialize 78F2                                __initialization 724E  
                            i2___lldiv@divisor 0005                                   __end_of_acos 7594  
                                 __end_of_fabs 7C88                                   __end_of_atan 5CE6  
                                 __end_of_asin 47C6                                   __end_of_atoi 6C44  
                                 __end_of_main 734E                              i2___lldiv@counter 000D  
                                 __end_of_sqrt 4D88                                     i2printf@ap 008F  
                                   i2printf@cp 008D                          __end_of_ringBufferLUT 0CA4  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 01C9  
                     _TMR5_SetInterruptHandler 8102                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0124                                _TMR6_Initialize 7D94  
                           _TRIAC_Firing_Angle 00FB                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 75FE  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01E0                                         ?_floor 006C  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FF37                                         _ADLTHL 000F6A  
                                       STR_101 FCE5                                         STR_102 FCFE  
                                       STR_110 F82D                                         STR_111 FEE6  
                                       STR_103 F67A                                         STR_112 F946  
                                       STR_104 F614                                         STR_120 FF44  
                                       STR_113 FFAB                                         STR_105 FA0E  
                                       STR_121 FF10                                         STR_106 FB7E  
                                       STR_114 ECB9                                         _ADRESH 000F64  
                                       STR_122 FF7C                                         STR_130 FD72  
                                       STR_115 FC51                                         STR_107 F7EE  
                                       STR_131 FD46                                         STR_123 FE1E  
                                       STR_132 FE1E                                         STR_116 FBA3  
                                       STR_108 F725                                         STR_124 FE8E  
                                       STR_133 FF86                                         STR_109 FE4E  
                                       STR_117 FB0D                                         STR_125 FE2E  
                                       STR_134 FDEB                                         STR_118 FD2F  
                                       _ADRESL 000F63                                         STR_126 FDC6  
                                       STR_119 FC92                                         STR_127 FA9C  
                                       STR_128 FA93                                         STR_129 FCB0  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l2010 42B4  
                                       i2l2002 41FE                                         i2l2011 42C2  
                                       i2l2003 41FA                                         i2l2020 4322  
                                       i2l2012 42C6                                         i2l2100 3D36  
                                       i2l2005 425A                                         i2l2030 4406  
                                       i2l2006 421E                                         i2l2023 43BC  
                                       i2l2015 4334                                         i2l2111 3E12  
                                       i2l2040 4476                                         i2l2032 4410  
                                       i2l2016 42FA                                         i2l2112 3E30  
                                       i2l2200 5F28                                         i2l2025 43CC  
                                       i2l2009 42D6                                         i2l2201 5F1C  
                                       i2l2121 4B12                                         i2l2106 3D8C  
                                       i2l2130 4C64                                         i2l2122 4B2C  
                                       i2l1410 1E7E                                         i2l2019 431E  
                                       i2l2211 67EA                                         i2l1411 1E96  
                                       i2l1403 1E3C                                         i2l2044 449C  
                                       i2l2028 43F0                                         i2l2108 3DD0  
                                       i2l2220 73E8                                         i2l2212 67D8  
                                       i2l2132 4D4E                                         i2l2124 4B66  
                                       i2l1340 3200                                         i2l1420 2076  
                                       i2l1412 1FDE                                         i2l1404 1DAA  
                                       i2l2045 44A4                                         i2l2037 4430  
                                       i2l2109 3DEE                                         i2l2205 5F46  
                                       i2l2061 53BA                                         i2l2125 4B92  
                                       i2l1341 3110                                         i2l1413 1EF8  
                                       i2l2046 44A6                                         i2l2206 5F78  
                                       i2l2214 6808                                         i2l2054 5334  
                                       i2l2126 4BF0                                         i2l1334 572A  
                                       i2l1422 2114                                         i2l1406 1E56  
                                       i2l2215 68A0                                         i2l2071 54C4  
                                       i2l2063 53E2                                         i2l2055 5330  
                                       i2l2127 4C9A                                         i2l2119 4B02  
                                       i2l1423 2090                                         i2l1415 1FF8  
                                       i2l1407 1E48                                         i2l1351 17D8  
                                       i2l2080 5540                                         i2l2072 54A6  
                                       i2l2064 5490                                         i2l2128 4BF6  
                                       i2l1344 31D0                                         i2l1440 2182  
                                       i2l1416 1FEA                                         i2l1352 17EA  
                                       i2l2081 5564                                         i2l2065 5440  
                                       i2l2129 4C3C                                         i2l1337 5812  
                                       i2l1345 334C                                         i2l1433 2146  
                                       i2l1409 1E7A                                         i2l1361 18BA  
                                       i2l1353 18AC                                         i2l2090 3B36  
                                       i2l2082 558E                                         i2l2066 5468  
                                       i2l2058 5374                                         i2l1442 2294  
                                       i2l1418 2052                                         i2l1362 1A28  
                                       i2l1370 18F4                                         i2l1354 1880  
                                       i2l2083 559A                                         i2l2059 5370  
                                       i2l1611 5B60                                         i2l1347 340C  
                                       i2l1443 2204                                         i2l1435 2166  
                                       i2l1355 182E                                         i2l2092 3B66  
                                       i2l1700 6996                                         i2l2084 559C  
                                       i2l2068 548E                                         i2l1612 5CA8  
                                       i2l1428 212A                                         i2l1380 2002  
                                       i2l2093 3B62                                         i2l1701 68FE  
                                       i2l1437 229A                                         i2l1429 20D2  
                                       i2l1381 1A3C                                         i2l1365 18BE  
                                       i2l2094 3B76                                         i2l2190 5E78  
                                       i2l2078 54FC                                         i2l1614 5CC0  
                                       i2l1710 6338                                         i2l1382 1A8A  
                                       i2l1358 19BA                                         i2l1374 197A  
                                       i2l2095 3B94                                         i2l2191 5E88  
                                       i2l1439 227C                                         i2l1375 194E  
                                       i2l1367 18C2                                         i2l2088 3B26  
                                       i2l2192 5EA6                                         i2l1712 6356  
                                       i2l1392 1C6C                                         i2l1384 1AF6  
                                       i2l1368 18EA                                         i2l2089 3B22  
                                       i2l1609 5AF4                                         i2l1713 6398  
                                       i2l1385 1B74                                         i2l1377 198E  
                                       i2l1369 18FA                                         i2l1730 6648  
                                       i2l2194 5EB8                                         i2l1706 7C76  
                                       i2l1722 642A                                         i2l1714 63C8  
                                       i2l1378 19A2                                         i2l2099 3D54  
                                       i2l2195 5EAC                                         i2l1723 641E  
                                       i2l1387 1BA2                                         i2l1379 19B4  
                                       i2l1900 71FA                                         i2l1716 6406  
                                       i2l1820 61B4                                         i2l1388 1BEE  
                                       i2l2197 5EF6                                         i2l1901 71EE  
                                       i2l1717 63F6                                         i2l1821 61A4  
                                       i2l1389 1CD4                                         i2l2198 5EDE  
                                       i2l1734 7E70                                         i2l1590 451C  
                                       i2l1910 76EC                                         i2l1814 60EA  
                                       i2l1670 7182                                         i2l1398 1D4C  
                                       i2l1727 6598                                         i2l1911 76E0  
                                       i2l1728 65CC                                         i2l1760 6B0A  
                                       i2l1592 4644                                         i2l1904 722E  
                                       i2l1816 6116                                         i2l1680 74D6  
                                       i2l1729 660A                                         i2l1593 4724  
                                       i2l1905 723C                                         i2l1817 6150  
                                       i2l1673 71AA                                         i2l1914 7714  
                                       i2l1826 61D8                                         i2l1818 6178  
                                       i2l1674 71B4                                         i2l1666 715C  
                                       i2l1682 74EC                                         i2l1915 7722  
                                       i2l1827 61CC                                         i2l1675 71C2  
                                       i2l1667 716C                                         i2l1683 74E4  
                                       i2l1765 6B3E                                         i2l1757 6AAE  
                                       i2l1669 718A                                         i2l1766 6B32  
                                       i2l1686 7504                                         i2l1759 6B1A  
                                       i2l1687 750E                                         i2l1679 74CA  
                                       i2l1768 6B5A                                         i2l1688 751C  
                                       i2l1874 7FE8                                         i2l1990 4918  
                                       i2l1991 4988                                         i2l1992 4AAE  
                                       i2l1997 41B6                                         i2l1989 47FA  
                                       i2l1998 41B2                                         _RG7PPS 000E89  
                                       i2l7452 558E                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                             __end_of___xxtofl 5E3A                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 7942                                   i2_scale$4063 004D  
                             __end_of__powers_ EBED           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 67A0                                         ___flge 6442  
                                    ??___fladd 0131                                         ___wmul 7E82  
                                    ??___fldiv 0145                                      ??___awdiv 0121  
                                    ??___flneg 0129                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___flmul 015E  
                                    ??___flsub 0145                                      ??___fltol 0173  
                                    ??___lldiv 011F                                      ??___llmod 012C  
                     ??_terminal_setCursorHome 01AA                                         _fround 4D88  
                                       clear_0 7294                                         clear_1 72A0  
                                       clear_2 72AC                                         clear_3 72BC  
                         _eusart2RxStringReady 07F8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                              ___awmod@counter 011B                                         _printf 0CA4  
                                       _strcat 7990                                         _strchr 7C88  
                                       _strcmp 78A2                                         _strcpy 7CC0  
                                    ?_ADCC_ISR 0001                                         _strlen 77F8  
                               i2___awdiv@sign 000C                                         _strstr 6FB2  
                                       floor@i 0070                                         floor@x 006C  
                 getCauseOfResetString@strings 02B9                               _background_color 0276  
                              _ADCC_Initialize 7734                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 22EA                                 _PMD_Initialize 7FF0  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 44C2  
                                    ??_isdigit 0117                              __end_ofi2___fldiv 55B8  
                            __end_ofi2___awdiv 71CC                              __end_ofi2___flneg 7E82  
                            __end_ofi2___awmod 7526                              __end_ofi2___flmul 3E46  
                            __end_ofi2___flsub 7B4A                              __end_ofi2___fltol 6B6C  
                            __end_ofi2___lldiv 724E                                         sin@sgn 008E  
                            __end_ofi2___llmod 7734                                   __mediumconst EBB8  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 7CF6  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01AA                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0014                                _eusart2RxBuffer 0200  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 7942                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 7FF0                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 7E26                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 8188          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 8186                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 72C4  
                               i2___fltol@exp1 0052                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 0095  
                           ?_SYSTEM_Initialize 0001                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 016F  
                              _TMR5_WriteTimer 8028                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                            i2___llmod@counter 0016                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 01C3                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 7C4C                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01AA  
                                 __pidataBANK0 816E                                   __pidataBANK2 7F6C  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 68B2                                  __end_of_frexp 7444  
                                __end_of_scale 2FBC                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 80E6                              ??_HLVD_Initialize 0117  
                                  i2printf@idx 008A                       ??_terminal_clearTerminal 01AA  
                                  i2printf@len 008B                                    i2printf@exp 0093  
                                  i2printf@val 0099                        __end_of_TMR6_Initialize 7DC6  
                     __size_of_getCauseOfReset 0052                         __end_of_PMD_Initialize 800C  
                        _getCauseOfResetString 7DC6                                      ?i2___flge 0034  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 7ABA  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 60BE  
                                   __div_to_l_ 61F0                                _TMR7_StartTimer 8174  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                                      ?i2_printf 007E  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0124  
                                      ??_floor 005E                                __div_to_l_@cntr 0123  
                                      ??_frexp 0007                                        ??_scale 0173  
                    __end_of_SYSTEM_Initialize 7E54                                __div_to_l_@quot 011F  
                                      ??_putch 0118                                   peakToRMS@RMS 00C5  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00F4  
                                _eusart2TxHead 01E2                                     __pbssBANK0 00F0  
                                   __pbssBANK1 01CB                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                  _eusart2RxTail 01DF  
                                _eusart2TxTail 01E1                             __size_of_eval_poly 0100  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 7990                             __size_of_peakToRMS 024A  
                                   ??_HLVD_ISR 0100                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 7F20  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4050 00BD  
                               _peakToRMS$4048 00C1                                 _peakToRMS$4049 00B9  
                        ringBufferLUT@arg_buff 039A                                    _Irms_offset 02D1  
                                      ?___flge 0117              terminal_ringBufferPull@index_2365 01C5  
                                      ?___wmul 0117                          _currentMeasuredToPeak 734E  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 8102  
                      __end_of_ADCC_Initialize 7798                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 017C                                ?_PMD_Initialize 0001  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 8044  
                                      ?_strstr 0126                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 7B8E                                        u1537_41 60CE  
                                      u1539_41 60FA                                        i2l10442 6680  
                                      i2l13450 194E                                        i2l13630 2094  
                                      i2l13526 1C3E                                        i2l13518 1BEE  
                                      i2l13570 1E48                                        i2l13546 1D50  
                                      i2l13644 20D6                                        i2l13680 227C  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 6E80                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 0080                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 8154                       _acquisitionTimerCallback 6D10  
                      __end_of_TMR5_WriteTimer 8044               __size_of_terminal_textAttributes 0368  
                                      i2_scale 2FBC                               ?_TMR5_Initialize 0001  
                                      i2_putch 8154                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset 8098          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 8086                              __end_of__npowers_ EC21  
                                      __Hparam 0000                                     _scale$3860 0173  
                                      __Lparam 0000                              __end_of_getUserID 7B8E  
                   ??_TMR5_SetInterruptHandler 011A                                 _adc_error_flag 02F0  
                              __size_of___flge 0122                                        ___fladd 3E46  
                                      ___fldiv 504E                                        ___awdiv 703E  
                                      ___flneg 7DF6                                        ___awmod 7444  
                                      ___flmul 37A4                                        ___flsub 7ABA  
                                      ___fltol 69B2                        __end_of_TMR7_StartTimer 817A  
                                      ___lldiv 70C4                                __size_of___wmul 0028  
                                      ___llmod 7666                         __end_of_FLASH_ReadByte 805E  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 7BD0  
                                      __pcinit 724E                              __end_of_eval_poly 69B2  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 72CE                                        __ptext1 8098  
                                      __ptext2 6684                                        __ptext3 0000  
                                      __ptext4 8086                                        __ptext5 343C  
                                      __ptext6 75FE                                        __ptext7 7990  
                                      __ptext8 80A8                                        __ptext9 6FB2  
                            __end_of_peakToRMS 5AB0                                __size_of_printf 0B26  
                currentMeasuredToPeak@Measured 008F                     ringBufferLUT@angle_degrees 0396  
                              __size_of_strcat 004C                                  i2_fround$4061 0051  
                                i2_fround$4062 004D                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers EC69  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers EC21  
                        _OSCILLATOR_Initialize 800C                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 0055                                        _isdigit 7F90  
                              atan@val_squared 0089                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                     ??___xxtofl 011B  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 039F                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 6F22                                 __pintcode_body 6C44  
                                      _strncpy 75FE                           end_of_initialization 72C4  
                      __end_of_TMR7_WriteTimer 7F46                        getDeviceIDString@F17550 02CB  
                       _terminal_setCursorHome 8098                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                      i1u1015_20 7BDC  
                                    i1u1016_28 7BE0                                        int_func 6C44  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u1754_28 7EBE                                      i2u1212_40 4482  
                                    i2u1204_40 4414                                      i1u1756_28 7D4C  
                      __size_of_TMR7_StopTimer 0006                                      i2u1207_40 442C  
                                    i2u1223_40 3B82                                      i2u1232_40 3DDE  
                                    i2u1224_40 3CF8                                      i1u1768_28 0086  
                                    i2u1224_45 3CEE                                      i2u1233_40 3DFC  
                               i2___xxtofl@arg 000F                                      i2u1229_40 3D88  
                                    i2u1341_40 5B20                                      i2u1342_40 5B22  
                                    i2u1191_40 42DE                                 i2___xxtofl@exp 000E  
                               i2___xxtofl@val 0005                                      i2u1186_40 428A  
                                    i2u1610_40 1928                                      i2u1610_47 191E  
                                    i2u1187_40 429A                                      i2u1611_40 192E  
                                    i2u1188_40 429C                                      i2u1380_40 6B44  
                                    i2u1460_40 4916                                      i2u1604_40 1816  
                                    i2u1604_47 180C                                      i2u1614_40 1970  
                                    i2u1606_40 1864                                      i2u1614_47 1966  
                                    i2u1606_47 185A                                      i2u1455_40 67F6  
                                    i2u1607_40 18A2                                      i2u1607_47 1898  
                                    i2u1376_40 6ACC                                      i2u1552_40 76F0  
                                    i2u1536_40 6430                                      i2u1632_40 1D8E  
                                    i2u1624_40 1BB4                                      i2u1616_40 19EA  
                                    i2u1376_45 6AC2                                      i2u1616_47 19E0  
                                    i2u1545_40 61DE                                      i2u1625_40 1C00  
                                    i2u1482_40 74F0                                      i2u1459_40 4914  
                                    i2u1635_40 1E64                                      i2u1388_40 5F32  
                                    i2u1476_40 718E                                      i2u1636_40 1E74  
                                    i2u1628_40 1C3E                                      i2u1549_40 71FE  
                                    i2u1653_40 22AC                                      i2u1654_40 22DC  
                                    i2u1654_47 22D2                                      i2u1559_40 2462  
                                    i2u1750_48 7D80                                      i2u1752_48 7EE6  
                                    i2u1667_40 6E18                                      i2u1759_48 6C98  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 7594                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 008F                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 7A28                                  ??_getDeviceID 0124  
                                      printf@c 01A9                                        printf@f 017C  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 5F8A  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
               _ADCPostProcessingCallback$4051 00DA                 _ADCPostProcessingCallback$4052 00D6  
               _ADCPostProcessingCallback$4053 00C9                 _ADCPostProcessingCallback$4054 00CD  
               _ADCPostProcessingCallback$4055 00D1                               ?_ADCC_Initialize 0001  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01C7  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 80F4                          _TMR5_InterruptHandler 0260  
                             i2_TMR7_StopTimer 8180                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 813A  
                  _ADCC_SetADIInterruptHandler 812C                                  ___xxtofl@sign 011F  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0051                                      i2___fladd 4184  
                                    i2___fldiv 5304                                      i2___awdiv 7148  
                                    i2___flneg 7E54                                      i2___awmod 74B6  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 3AF6  
                                    i2___flsub 7B02                                      i2___fltol 6A90  
                                    i2___lldiv 71CC                                      i2___llmod 76CE  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 80B8                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 0CA4                                    ___flmul@grs 0164  
                ??_ADCC_SetADIInterruptHandler 011A                                   _EUSART2_Read 7A72  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 80C8  
                           i2___awdiv@dividend 0007                                      i2_isdigit 7FD2  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0008  
                                    _Avg_Power 0248                   __end_of_INTERRUPT_Initialize 8072  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                             ?_TMR7_StartTimer 0001                                 __end_of___flge 6564  
                __end_of_terminal_printNewline 80B8                                 __end_of___wmul 7EAA  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07F8                            __end_of_getDeviceID 7FD2  
                               __end_of_fround 504E              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 0074  
                             i2___wmul@product 0005                                 __end_of_printf 17CA  
                                i2_printf$4064 0086                             _getMajorRevisionID 7C10  
                               __end_of_strcat 79DC                                 __end_of_strchr 7CC0  
                               __end_of_strcmp 78F2                                   i2printf@flag 0091  
                               __end_of_strcpy 7CF6                                 __end_of_strlen 7850  
                                 i2printf@fval 009D                                 __end_of_strstr 703E  
                                 i2printf@prec 00A1                              __size_ofi2___flge 0120  
                          start_initialization 724E                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 818C          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 818A                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 60BE                                    __end_of_sin 4AC0  
                                    i2printf@c 00A3                                      i2printf@f 007E  
                      _terminal_textAttributes 343C                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0076                                     ?i2___fltol 0049  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0B20  
                        __end_of_EUSART2_Write 7A28                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 01AD  
                      __end_ofi2_EUSART2_Write 7A72                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 00F5                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F9  
                                  __pdataBANK2 02B9                                       ??_fround 0173  
                                _ringBufferLUT 0000                 ??_terminal_textAttributesReset 01BC  
                                     ??_printf 0186              getCauseOfReset@return_reset_cause 0117  
                            _POS3P3_ADC_Result 00F0                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                   __end_of_getMinorRevisionID 7F20                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02D5                                     fround@prec 017B  
                               _eusart2RxCount 01DE                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 0141                                      ___fldiv@b 013D  
                                    _acos$4056 00AD                                      ___flmul@a 015A  
                                    ___flmul@b 0156                                      ___flsub@a 0141  
                                    ___flsub@b 013D                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK3 0380  
                            __size_of___xxtofl 0154                                   _isdigit$3141 0118  
                ?_TMR5_DefaultInterruptHandler 0001                        __end_of_HLVD_Initialize 80D8  
                          EUSART2_Write@txData 0117                                   _load_on_time 0240  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4057 00A5                                      _asin$4058 009D  
                                    _asin$4059 0099                                       ?i2_putch 0001  
                                   sin@coeff_a EC81                                     sin@coeff_b ECA9  
                               _TMR7_StopTimer 817A                          _TMR6_InterruptHandler 0269  
                                    __pnvBANK2 02DD                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 6E80                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 7FB2  
                                __pmediumconst EBB8                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 22EA                                      __ptext101 8180  
                                    __ptext110 7B02                                      __ptext102 5866  
                                     ?___flneg 0125                                      __ptext111 7E54  
                                    __ptext103 7526                                      __ptext120 4184  
                                    __ptext112 5304                                      __ptext104 44C2  
                                    __ptext121 8072                                      __ptext113 67A0  
                                    __ptext105 4AC0                                      __ptext122 0000  
                                    __ptext114 5E3A                                      __ptext106 5AB0  
                                    __ptext115 6A90                                      __ptext107 7C4C  
                                    __ptext116 6564                                      __ptext108 734E  
                                    __ptext117 73CA                                      __ptext109 47C6  
                                    __ptext118 68B2                                      __ptext119 3AF6  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 016F  
             __end_of_TMR7_SetInterruptHandler 80F4                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ EBED  
                              _getCauseOfReset 7850                                 ?_ringBufferLUT 01BC  
                                    _getUserID 7B4A              _EUSART2_TxDefaultInterruptHandler 026F  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F2  
                                  __tdiv_to_l_ 5F8A                                       _ADCC_ISR 7ED2  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 0258                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                    _dev_on_time 0244  
                                    _eval_poly 68B2                      ??_terminal_textAttributes 01AC  
                                    _attribute 0278                                      _peakToRMS 5866  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers EC49                         _heartbeatTimerCallback 7BD0  
                               _dimming_period 00F9                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 004D  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 805E  
                       __end_of_TMR7_StopTimer 8180                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 8148         terminal_textAttributes@input_attribute 01AB  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 0097                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 8166                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                     __end_ofi2_TMR7_StopTimer 8186                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 631A                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       i1u939_20 8150  
                                     i2u750_40 54F8                                       _PIR8bits 000E3B  
                                     i2u753_40 554E                                       i2u754_40 5572  
                             ??_FLASH_ReadWord 011F                                       i2u828_40 7410  
                   ??_TMR6_SetInterruptHandler 011A                                       i2u828_48 7412  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _TMR5_ISR 7D60                                       _TMR6_ISR 7EAA  
                                     _TMR7_ISR 7D2C                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 6564  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 7F46                        __size_of_FVR_Initialize 0008  
                                   printf@flag 0197                                     printf@fval 01A3  
                                   printf@prec 01A7                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome 80A8                              i2___awdiv@divisor 0009  
                                     i2_fround 55B8              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 17CA                            __end_ofatan@coeff_a EC81  
                          __end_ofatan@coeff_b ECA9                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 7262  
                                    copy_data1 7282                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 01DD  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                        __end_of_getCauseOfReset 78A2  
              __end_of_terminal_textAttributes 37A4                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 8086                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 812C         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 811E                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01BE  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 0277  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                                  _load_enable 02F1               __end_of_acquisitionTimerCallback 6DD2  
                                  _fround$3858 0177                                    _fround$3859 0173  
                        __end_ofi2__tdiv_to_l_ 61F0                       _TMR7_SetInterruptHandler 80E6  
                        _TMR7_InterruptHandler 0263                             _ADC_Result_Scaling 025C  
      terminal_textAttributes@foreground_color 01AC                                       ___xxtofl 5CE6  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 80C8  
                             __size_of_isdigit 0022                                       __ptext10 6F22  
                                     __ptext11 77F8                                       __ptext20 7B8E  
                                     __ptext12 7C88                                       __ptext21 8044  
                                     __ptext13 7CC0                                       __ptext30 80D8  
                                     __ptext22 7DC6                                       __ptext14 78A2  
                                     __ptext31 79DC                                       __ptext23 6B6C  
                                     __ptext15 7B4A                                       __ptext40 7E82  
                                     __ptext32 7F90                                       __ptext24 504E  
                                     __ptext16 7EFA                                       __ptext41 7666  
                                     __ptext33 4D88                                       __ptext25 8174  
                                     __ptext17 7C10                                       __ptext50 7942  
                                     __ptext42 70C4                                       __ptext34 37A4  
                                     __ptext26 7A72                                       __ptext18 7798  
                                     __ptext51 80E6                                       __ptext43 69B2  
                                     __ptext35 7444                                       __ptext27 80B8  
                                     __ptext19 7FB2                                       __ptext60 80C8  
                                     __ptext52 7D94                                       __ptext44 7ABA  
                                     __ptext36 703E                                       __ptext28 0CA4  
                                     __ptext61 815E                                       __ptext53 80F4  
                                     __ptext45 3E46                                       __ptext37 5F8A  
                                     __ptext29 2B18                                       __ptext70 6D10  
                                     __ptext62 7594                                       __ptext54 78F2  
                                     __ptext46 7DF6                                       __ptext38 61F0  
                                     __ptext71 817A                                       __ptext63 8110  
                                     __ptext55 8102                                       __ptext47 6442  
                                     __ptext39 5CE6                                       __ptext72 813A  
                                     __ptext64 811E                                       __ptext56 7FF0  
                                     __ptext48 7850                                       __ptext81 7D60  
                                     __ptext73 8148                                       __ptext65 7734  
                                     __ptext57 6E80                                       __ptext49 7E26  
                                     __ptext90 55B8                                       __ptext82 8028  
                                     __ptext74 7F20                                       __ptext66 812C  
                                     __ptext58 800C                                       __ptext91 74B6  
                                     __ptext83 818A                                       __ptext75 7EAA  
                                     __ptext59 805E                                       __ptext92 7148  
                                     __ptext84 6DD2                                       __ptext76 8188  
                                     __ptext68 7D2C                                       __ptext93 60BE  
                                     __ptext85 17CA                                       __ptext77 7BD0  
                                     __ptext69 8186                                       __ptext94 631A  
                                     __ptext86 2FBC                                       __ptext78 8166  
                                     __ptext95 7F46                                       __ptext87 8154  
                                     __ptext79 7CF6                                       __ptext96 76CE  
                                     __ptext88 7A28                                       __ptext97 71CC  
                                     __ptext89 7FD2                                       __ptext98 7ED2  
                                     __ptext99 818C                                       _sin$4060 0086  
                                     __powers_ EBB9                         ?_ADCC_IsConversionDone 0001  
                          ringBufferLUT@userID 03A1                                _Temp_ADC_Offset 02D9  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                               i2_isdigit$3141 0002                                _Temp_ADC_Result 0254  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 0080  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 082E                           __end_ofi2__div_to_l_ 6442  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    ringBufferLUT@channel_name 0380                      _ADCC_ADI_InterruptHandler 0266  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 8148  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0190  
                                    printf@len 0191                                      printf@exp 0199  
                                    printf@val 019F                                    atan@coeff_a EC69  
                                  atan@coeff_b EC95                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 80A8                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                       __size_of_TMR7_StartTimer 0006  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076           __end_of_TMR6_DefaultInterruptHandler 818A  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 8188  
         __end_of_ADCC_DefaultInterruptHandler 818E          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 818C                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID 7EFA  
                             __tdiv_to_l_@quot 0120                                i2___xxtofl@sign 000D  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 039D                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                    _reset_cause 02DD  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01D7  
            __end_of_ADCPostProcessingCallback 2B18                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                   ?_getDeviceID 0122  
                                     printf@ap 0195                                       printf@cp 0193  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString 7DF6  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult 8072  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 6DD2  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 6D10  
      __size_of_INTERRUPT_InterruptManagerHigh 6D08                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 815E                                    _printf$3861 018C  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01BC  
                             ___lldiv@quotient 011F                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 7798  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 6F22                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 6684                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 00C2  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 026C                 __size_of_currentMeasuredToPeak 007C  
                __end_of_currentMeasuredToPeak 73CA  
